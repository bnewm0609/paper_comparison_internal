{
    "value_generation_qa": {
        "prompt_multiple_abstract": "[System]\nImagine the following scenario: A user is making a table for a scholarly paper that contains information about multiple papers and compares these papers. To compare and contrast the papers, the user provides the title and abstract of each paper. The user also provides the table's caption and column names indicating the aspects by which papers should be compared. Your task is the following: Given a list of papers and table information, you should fill the values in the table. Based on the given column names of the table, grounded on each paper, you should find the part of that paper that discusses the aspects provided as column names.\nFirst, you should explain your thinking about questions that need to be asked to find specific aspects of the papers discussing the content related to column names in the given caption table. Then, find the answers to those questions in each paper. If there is no answer in the paper, write down \"N/A\" as a value for that column. After explaining your thinking, return a single JSON object in the following format:\n\n```json\n{json_format}\n```\n\n**Ensure that you follow these rules: (1) Only return a single JSON object. (2) JSON object should be complete and valid. (3) JSON object should contain each column. (4) Each paper should have a value for each column in the JSON object or \"N/A\" if there is no relevant value. (5) Each value should consist of phrases of fewer than 10 words.**\n\n{input_info}",
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "parse_str": "```json"
    },
    "baseline_paper_to_table": {
        "prompt_simple": "[System]\nWe would like you to build a table that has each paper as a row and, as each column, a dimension that compares between the papers. You will be given multiple papers labeled Paper 1, 2, and so on. You will be provided with the title and content of each paper. Please create a table that compares and contrasts the given papers. Make {col_num} dimensions which are phrases that can compare multiple papers, so that the table has {col_num} columns. The table should also have {paper_num} papers as rows. Return a JSON object of the following format:\n\n```json\n{json_format}\n```\n\n**Check that the table has {paper_num} papers as rows and {col_num} dimensions as columns.**.\n\n{input_info}",
        "prompt_medium": "[System]\nWe would like you to build a table that has each paper as a row and, as each column, a dimension that compares between the papers. You will be given multiple papers labeled Paper 1, 2, and so on. You will be provided with the title and content of each paper. You need to make a table that has a caption of \"{caption}\". Please create a table that compares and contrasts the given papers. Make {col_num} dimensions which are phrases that can compare multiple papers, so that the table has {col_num} columns. The table should also have {paper_num} papers as rows. Return a JSON object of the following format:\n\n```json\n{json_format}\n```\n\n**Check that the table has {paper_num} papers as rows and {col_num} dimensions as columns.**.\n\n{input_info}",
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "parse_str": "```json"
    },
    "scheme_attribute_generation": {
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "prompt_abstract": "[System]\nImagine the following scenario: A user is making a table for a scholarly paper that contains information about multiple papers and compares these papers. To compare and contrast the papers, the user provides the title and content of each paper. Your task is the following: Given a list of papers, you should find aspects that are shared by the given research papers. Then, within each aspect, you should identify {num_attributes} attributes that can be used to compare the given papers.\nFirst, you should return the list of similar aspects as a Python list as follows: \"[\"<similar aspect that all given papers shared>\", ...]\". Then, think of each aspect as the topic for the Related Work section of the user's paper. Finally, find attributes that can compare the given papers within the Related Work section. Return a JSON object in the following format:\n\n```json\n{{\n  \"<aspect 1>\": [\"<comparable attribute within the aspect 1>\", \"<comparable attribute within the aspect 1>\", ...],\n  ...\n}}\n```\n\n{input_info}",
        "parse_str": "```json"
    },
    "find_attributes": {
        "prompt1": "[System]\nWe would like you to identify attributes that are relevant to given research topic. You will be provided with a list of research topics. Find relevant attributes to each research topic as many as possible. Return the list of attributes for each research topics a Python JSON object of the following format: \"{{\"<given research topic 1>\": [\"<relevant attribute to research topic 1>\", ...], \"<given research topic 2>\":[\" <relevant attribute to research topic 2>\", ...], \"<given research topic 3>\":[\" <relevant attribute to research topic 3>\", ...]}}\"\n\n{topic_list}[System]", 
        "prompt2": "[System]\nI want to write related work section about following content:\n \"{research_topic}\".\nWe would like you to identify attributes that should be compared between related papers in this section. You will be provided with a list of the title and content of each paper. Your task is the following: Given a list of papers, you should identify {num_attributes} attributes that can be used to compare the given papers within the given subsection topic. Return a JSON object in the following format:\n\n```json\n{{\n  \"attributes\": [\"<comparable attribute within the given subsection topic>\", \"<comparable attribute within the given subsection topic>\", ...]\n}}\n```\n\n**Ensure that the JSON object begins with \"```json\" and ends with \"```\" for proper formatting.**\n\n{input_info}",
        "parse_str": "```json",
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers."
    },
    "json_formatting": {
        "prompt": "[System]\nGiven the following string below, please format this information into a valid JSON object. Ensure that each piece of information is represented as a separate key-value pair in the JSON.\n\nThe JSON object should contain free-form columns of tables as keys and have dictionary composed of Paper indexes as keys and a list of free-form values as values. Return a JSON object of the following format: \"{{\"<column name 1> \": {{\"paper_1\": [\"<relevant value to the column name grounded on Paper 1>\"], \"paper_2\":[\" <relevant value to the column name grounded on Paper 2>\"], \"paper_3\": [\"<relevant value to the column name grounded on Paper 3>\"], ..}}, ..}}\". **Before and after the JSON object, add the character \"[JSON]\"**.\n\n[Input string]\n{input_info}",
        "system_instruction": "You are an intelligent and precise assistant that can format the data as guided.",
        "parse_str": "[JSON]"
    },
    "identify_best_scheme": {
        "prompt": "[System]\nImagine the following scenario: A user is making a table with multiple papers to compare them in the scholarly paper. To compare and contrast the given papers, the user provides the title and abstract of each paper. The user also provides several sets of potential table's captions and column names indicating the aspects by which papers should be compared. Your task is the following: Given a list of papers and potential table information, you should choose the best set that has unique and important aspects to compare the given papers.\nFirst, you should explain your thinking about what makes you choose the following set as the best set. After explaining your thinking, return a JSON object of the following format: \"{{\"<caption> \": [\"<column name within the chosen caption>\", \"<column name within the chosen caption>\", ...], ..}}\". Before and after the JSON object, add the character \"[JSON]\".\n\n{input_info}", 
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "parse_str": "[JSON]"
    },
    "hierarchical_scheme_generation": {
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "prompt_abstract": "[System]\nA user is writing a survey paper that compares multiple given papers. To compare the papers, the user wants to make a hierarchical table about the following topic: \"{caption}\".\n\nYour task is the following: Given a list of papers and the table topic above, you should identify {num_attributes} columns that can be used to compare the given papers within the topic above. Then, you should find sub-columns that are sub-types or attributes or part of each column within the given topic in CS research domain. \nFirst, you should return the list of columns as a Python list as follows: [\"<comparable column within the given topic>\", \"<comparable attribute within the given topic>\", ...]. Then, within each column, find sub-columns that can compare given papers. Return a JSON object in the following format:\n\n```json\n{{\n  \"<column 1>\": [\"<comparable sub-column within the column 1>\", \"<comparable sub-column within the column 1>\", ...],\n  ...\n}}\n```\n\n**Ensure that you follow these rules: (1) Explain your thinking and provide the JSON object in a single response. (2) JSON object should be complete and valid. (3) JSON object should not include repetitive columns. If the column and sub-columns within the column are the same, sub-columns can be removed. (4) Include columns that can have values from all the papers. (5) For columns that are less relevant to some portion of papers, you don't need to make sub-columns. (6) For sub-columns, make less than three for each column. **\n\n{input_info}",
        "parse_str": "```json"
    },
    "find_commonality": {
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "prompt": "[System]\nA user is writing a survey paper that that contains information about multiple papers and compares these papers. To compare the papers, the user wants to make a table that has each paper as a row.\n\nYour task is the following: Given a list of title and content of each paper, you should make a caption of the table used in the survey paper. The table caption needs to encompass aspects shared by the given research papers. First, you should explain similar aspects of the given papers. Then, you should return {num_commonality} number of captions. Return a JSON object in the following format:\n\n```json\n{{\n  \"caption\": [\"<table caption that talks about shared aspects of given papers>\", ...],\n  ...\n}}\n```\n\n**Ensure that you follow these rules: (1) Explain your thinking and provide the JSON object in a single response. (2) JSON object should be complete and valid. (3) Include captions that can encompass all the papers as a row rather than include some portion of papers.**\n\n{input_info}",
        "parse_str": "```json"
    },
    "gold_caption_in_text_ref": {
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "prompt_abstract": "[System]\nImagine the following scenario: A user is making a table for a scholarly paper that contains information about multiple papers and compares these papers. To compare and contrast the papers, the user provides the title and content of each paper. To help you build the table, the user provides a caption of this table, which is referred to in the paper as additional information.\n\n[Caption]\n{caption}\n\n[In-text reference]\n{in_text_ref}\n\nYour task is the following: Given a list of papers and table caption, you should identify {num_attributes} table columns to compare given research papers. Return a list in the following format:\n\n```list\n[\"<comparable attribute within the table caption>\", \"<comparable attribute within the table caption>\", ...]\n```\n\n{input_info}\nPlease ensure that your response strictly follows the given format. Adherence to the specified structure is mandatory.",
        "parse_str": "```list"
    },
    "incontext_examples": {
        "system_instruction": "You are an intelligent and precise assistant that can understand the contents of research papers. You are knowledgable on different fields and domains of science, in particular computer science. You are able to interpret research papers, create questions and answers, and compare multiple papers.",
        "prompt_abstract": "[System]\nImagine the following scenario: A user is making a table for a scholarly paper that contains information about multiple papers and compares these papers. To compare and contrast the papers, the user provides the title and content of each paper. To help you build the table, the user provides similar tables that you can refer to as follows:\n\n{example_tables}Your task is the following: Given a list of papers and table caption, you should identify {num_attributes} table columns to compare given research papers. Return a list in the following format:\n\n```list\n[\"<comparable attribute within the table caption>\", \"<comparable attribute within the table caption>\", ...]\n```\n\n{input_info}\nPlease ensure that your response strictly follows the given format. Adherence to the specified structure is mandatory.",
        "parse_str": "```list"
    }
}
