{"id": 3488815, "updated": "2023-11-07 16:44:06.362", "metadata": {"title": "Towards Deep Learning Models Resistant to Adversarial Attacks", "authors": "[{\"first\":\"Aleksander\",\"last\":\"Madry\",\"middle\":[]},{\"first\":\"Aleksandar\",\"last\":\"Makelov\",\"middle\":[]},{\"first\":\"Ludwig\",\"last\":\"Schmidt\",\"middle\":[]},{\"first\":\"Dimitris\",\"last\":\"Tsipras\",\"middle\":[]},{\"first\":\"Adrian\",\"last\":\"Vladu\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2017, "month": 6, "day": 19}, "abstract": "Recent work has demonstrated that neural networks are vulnerable to adversarial examples, i.e., inputs that are almost indistinguishable from natural data and yet classified incorrectly by the network. In fact, some of the latest findings suggest that the existence of adversarial attacks may be an inherent weakness of deep learning models. To address this problem, we study the adversarial robustness of neural networks through the lens of robust optimization. This approach provides us with a broad and unifying view on much of the prior work on this topic. Its principled nature also enables us to identify methods for both training and attacking neural networks that are reliable and, in a certain sense, universal. In particular, they specify a concrete security guarantee that would protect against any adversary. These methods let us train networks with significantly improved resistance to a wide range of adversarial attacks. They also suggest the notion of security against a first-order adversary as a natural and broad security guarantee. We believe that robustness against such well-defined classes of adversaries is an important stepping stone towards fully resistant deep learning models.", "fields_of_study": "[\"Mathematics\",\"Computer Science\"]", "external_ids": {"arxiv": "1706.06083", "mag": "2964253222", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/iclr/MadryMSTV18", "doi": null}}, "content": {"source": {"pdf_hash": "6678c9c18eb38ed873c986430d0d55605a1853ff", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1706.06083v2.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "06164fde421856f60069139357f084463b62cd29", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/6678c9c18eb38ed873c986430d0d55605a1853ff.txt", "contents": "\nTowards Deep Learning Models Resistant to Adversarial Attacks\n\n\nAleksander M\u0105dry madry@mit.edu \nMIT\nMIT\nMIT\nMIT\nMIT\n\n\nAleksandar Makelov amakelov@mit.edu \nMIT\nMIT\nMIT\nMIT\nMIT\n\n\nLudwig Schmidt ludwigs@mit.edu \nMIT\nMIT\nMIT\nMIT\nMIT\n\n\nDimitris Tsipras tsipras@mit.edu \nMIT\nMIT\nMIT\nMIT\nMIT\n\n\nAdrian Vladu avladu@mit.edu \nMIT\nMIT\nMIT\nMIT\nMIT\n\n\nTowards Deep Learning Models Resistant to Adversarial Attacks\n\nRecent work has demonstrated that neural networks are vulnerable to adversarial examples, i.e., inputs that are almost indistinguishable from natural data and yet classified incorrectly by the network. In fact, some of the latest findings suggest that the existence of adversarial attacks may be an inherent weakness of deep learning models. To address this problem, we study the adversarial robustness of neural networks through the lens of robust optimization. This approach provides us with a broad and unifying view on much of the prior work on this topic. Its principled nature also enables us to identify methods for both training and attacking neural networks that are reliable and, in a certain sense, universal. In particular, they specify a concrete security guarantee that would protect against any adversary. These methods let us train networks with significantly improved resistance to a wide range of adversarial attacks. They also suggest the notion of security against a first-order adversary as a natural and broad security guarantee. We believe that robustness against such well-defined classes of adversaries is an important stepping stone towards fully resistant deep learning models. * Authors ordered alphabetically.\n\nIntroduction\n\nRecent breakthroughs in computer vision and speech recognition are bringing trained classifiers into the center of security-critical systems. Important examples include vision for autonomous cars, face recognition, and malware detection. These developments make security aspects of machine learning increasingly important. In particular, resistance to adversarially chosen inputs is becoming a crucial design goal. While trained models tend to be very effective in classifying benign inputs, recent work [22,7,14,20] shows that an adversary is often able to manipulate the input so that the model produces an incorrect output.\n\nThis phenomenon has received particular attention in the context of deep neural networks, and there is now a quickly growing body of work on this topic [6,12,16,18,23,21,25]. Computer vision presents a particularly striking challenge: very small changes to the input image can fool state-of-the-art neural networks with high probability [22,7,14,20,13]. This holds even when the benign example was classified correctly, and the change is imperceptible to a human. Apart from the security implications, this phenomenon also demonstrates that our current models are not learning the underlying concepts in a robust manner. All these findings raise a fundamental question:\n\n\nHow can we learn models robust to adversarial inputs?\n\nThere is now a sizable body of work proposing various attack and defense mechanisms for the adversarial setting. Examples include defensive distillation [3,15,16], feature squeezing [29,10], and several other adversarial example detection approaches [5]. These works constitute important first steps in exploring the realm of possibilities here. They, however, do not offer a good understanding of the guarantees they provide. We can never be certain that a given attack finds the \"most adversarial\" example in the context, or that a particular defense mechanism prevents the existence of some welldefined class of adversarial attacks. This makes it difficult to navigate the landscape of adversarial robustness or to fully evaluate the possible security implications.\n\nIn this paper, we study the adversarial robustness of neural networks through the lens of robust optimization. We use a natural saddle point (min-max) formulation to capture the notion of security against adversarial attacks in a principled manner. This formulation allows us to be precise about the type of security guarantee we would like to achieve, i.e., the broad class of attacks we want to be resistant to (in contrast to defending only against specific known attacks). The formulation also enables us to cast both attacks and defenses into a common theoretical framework. Most prior work on adversarial examples naturally fits into this framework. In particular, adversarial training directly corresponds to optimizing this saddle point problem. Similarly, prior methods for attacking neural networks correspond to specific algorithms for solving the underlying constrained optimization problem.\n\nEquipped with this perspective, we make the following contributions.\n\n1. We conduct a careful experimental study of the optimization landscape corresponding to this saddle point formulation. Despite the non-convexity and non-concavity of its constituent parts, we find that the underlying optimization problem is tractable after all. In particular, we provide strong evidence that first-order methods can reliably solve this problem. We supplement these insights with ideas from real analysis to further motivate projected gradient descent (PGD) as a universal \"first-order adversary\", i.e., the strongest attack utilizing the local first order information about the network.\n\n2. We explore the impact of network architecture on adversarial robustness and find that model capacity plays an important role here. To reliably withstand strong adversarial attacks, networks require a significantly larger capacity than for correctly classifying benign examples only. This shows that a robust decision boundary of the saddle point problem can be significantly more complicated than a decision boundary that simply separates the benign data points.\n\n3. Building on the above insights, we train networks on MNIST and CIFAR10 that are robust to a wide range of adversarial attacks. Our approach is based on optimizing the aforementioned saddle point formulation and uses our optimal \"first-order adversary\". Our best MNIST model achieves an accuracy of more than 89% against the strongest adversaries in our test suite. In particular, our MNIST network is even robust against white box attacks of an iterative adversary. Our CIFAR10 model achieves an accuracy of 46% against the same adversary. Furthermore, in case of the weaker black box/transfer attacks, our MNIST and CIFAR10 networks achieve the accuracy of more than 95% and 64%, respectively. (More detailed overview can be found in Tables 1 and2.) To the best of our knowledge, we are the first to achieve these levels of robustness on MNIST and CIFAR10 against such a broad set of attacks.\n\nOverall, these findings suggest that secure neural networks are within reach. In order to further support this claim, we invite the community to attempt attacks against our MNIST and CIFAR10 networks in the form of a challenge. This will let us evaluate its robustness more accurately, and potentially lead to novel attack methods in the process. The complete code, along with the description of the challenge, is available at https://github.com/MadryLab/mnist_challenge and https://github.com/MadryLab/cifar10_challenge.\n\n\nAn Optimization View on Adversarial Robustness\n\nMuch of our discussion will revolve around an optimization view of adversarial robustness. This perspective not only captures the phenomena we want to study in a precise manner, but will also inform our investigations. To this end, let us consider a standard classification task with an underlying data distribution D over pairs of examples x \u2208 R d and corresponding labels y \u2208 [k]. We also assume that we are given a suitable loss function L(\u03b8, x, y), for instance the cross-entropy loss for a neural network. As usual, \u03b8 \u2208 R p is the set of model parameters. Our goal then is to find model parameters \u03b8 that minimize the risk E (x,y)\u223cD [L(x, y, \u03b8)].\n\nEmpirical risk minimization (ERM) has been tremendously successful as a recipe for finding classifiers with small population risk. Unfortunately, ERM often does not yield models that are robust to adversarially crafted examples [7,12,13,25]. Formally, there are efficient algorithms (\"adversaries\") that take an example x belonging to class c 1 as input and find examples x adv such that x adv is very close to x but the model incorrectly classifies x adv as belonging to class c 2 = c 1 .\n\nIn order to reliably train models that are robust to adversarial attacks, it is necessary to augment the ERM paradigm appropriately. Instead of resorting to methods that directly focus on improving the robustness to specific attacks, our approach is to first propose a concrete guarantee that an adversarially robust model should satisfy. We then adapt our training methods towards achieving this guarantee.\n\nThe first step towards such a guarantee is to specify an attack model, i.e., a precise definition of the attacks our models should be resistant to. For each data point x, we introduce a set of allowed perturbations S \u2286 R d that formalizes the manipulative power of the adversary. In image classification, we choose S so that it captures perceptual similarity between images. For instance, the \u221e -ball around x has recently been studied as a natural notion for adversarial perturbations [7]. While we focus on robustness against \u221e -bounded attacks in this paper, we remark that more comprehensive notions of perceptual similarity are an important direction for future research.\n\nNext, we modify the definition of population risk E D [L] by incorporating the above adversary. Instead of feeding samples from the distribution D directly into the loss L, we allow the adversary to perturb the input first. This gives rise to the following saddle point problem, which is our central object of study:\nmin \u03b8 \u03c1(\u03b8), where \u03c1(\u03b8) = E (x,y)\u223cD max \u03b4\u2208S L(\u03b8, x + \u03b4, y) . (2.1)\nFormulations of this type (and their finite-sample counterparts) have a long history in robust optimization, going back to Wald [26,27,28]. It turns out that this formulation is also particularly useful in our context. First, this formulation gives us a unifying perspective that encompasses much prior work on adversarial robustness. Our perspective stems from viewing the saddle point problem as the composition of an inner maximization problem and an outer minimization problem. Both of these problems have a natural interpretation in our context. The inner maximization problem aims to find an adversarial version of a given data point x that achieves a high loss. This is precisely the problem of attacking a given neural network. On the other hand, the goal of the outer minimization problem is to find model parameters so that the \"adversarial loss\" given by the inner attack problem is minimized. This is precisely the problem of training a robust classifier using adversarial training techniques.\n\nSecond, the saddle point problem specifies a clear goal that an ideal robust classifier should achieve, as well as a quantitative measure of its robustness. In particular, when the parameters \u03b8 yield a (nearly) vanishing risk, the corresponding model is perfectly robust to attacks specified by our attack model.\n\nOur paper investigates the structure of this saddle point problem in the context of deep neural networks. These investigations then lead us to training techniques that produce models with high resistance to a wide range of adversarial attacks. Before turning to our contributions, we briefly review prior work on adversarial examples and describe in more detail how it fits into the above formulation. Our perspective on the saddle point problem (2.1) gives answers to both these questions. On the attack side, prior work has proposed methods such as the Fast Gradient Sign Method (FGSM) and multiple variations of it [7]. FGSM is an attack for an \u221e -bounded adversary and computes an adversarial example as\n\n\nA Unified View on Attacks and Defenses\n\nx + \u03b5 sgn(\u2207 x L(\u03b8, x, y)).\n\nOne can interpret this attack as a simple one-step scheme for maximizing the inner part of the saddle point formulation. A more powerful adversary is the multi-step variant FGSM k , which is essentially projected gradient descent (PGD) on the negative loss function [12]:\nx t+1 = \u03a0 x+S x t + \u03b1 sgn(\u2207 x L(\u03b8, x, y)) .\nOther methods like FGSM with random perturbation have also been proposed [24]. Clearly, all of these approaches can be viewed as specific attempts to solve the inner maximization problem in (2.1).\n\nOn the defense side, the training dataset is often augmented with adversarial examples produced by FGSM. This approach also directly follows from (2.1) when linearizing the inner maximization problem. To solve the simplified robust optimization problem, we replace every training example with its FGSM-perturbed counterpart. More sophisticated defense mechanisms such as training against multiple adversaries can be seen as better, more exhaustive approximations of the inner maximization problem.\n\n\nTowards Universally Robust Networks?\n\nCurrent work on adversarial examples usually focuses on specific defensive mechanisms, or on attacks against such defenses. An important feature of formulation (2.1) is that attaining small adversarial loss gives a guarantee that no allowed attack will fool the network. By definition, no adversarial perturbations are possible because the loss is small for all perturbations allowed by our attack model. Hence, we now focus our attention on obtaining a good solution to (2.1).\n\nUnfortunately, while the overall guarantee provided by the saddle point problem is evidently useful, it is not clear whether we can actually find a good solution in reasonable time. Solving the saddle point problem (2.1) involves tackling both a non-convex outer minimization problem and a non-concave inner maximization problem. One of our key contributions is demonstrating that, in practice, one can solve the saddle point problem after all. In particular, we now discuss an experimental exploration of the structure given by the non-concave inner problem. We argue that the loss landscape corresponding to this problem has a surprisingly tractable structure of local maxima. This structure also points towards projected gradient descent as the \"ultimate\" first-order adversary. Sections 4 and 5 then show that the resulting trained networks are indeed robust against a wide range of attacks, provided the networks are sufficiently large.\n\n\nThe Landscape of Adversarial Examples\n\nRecall that the inner problem corresponds to finding an adversarial example for a given network and data point (subject to our attack model). As this problem requires us to maximize a highly non-concave function, one would expect it to be intractable. Indeed, this is the conclusion reached by prior work which then resorted to linearizing the inner maximization problem [11,19]. As pointed out above, this linearization approach yields well-known methods such as FGSM. While training against FGSM adversaries has shown some successes, recent work also highlights important shortcomings of this one-step approach [24].\n\nTo understand the inner problem in more detail, we investigate the landscape of local maxima for multiple models on MNIST and CIFAR10. The main tool in our experiments is projected gradient descent (PGD), since it is the standard method for large-scale constrained optimization. In order to explore a large part of the loss landscape, we re-start PGD from many points in the \u221e balls around data points from the respective evaluation sets.\n\nSurprisingly, our experiments show that the inner problem is tractable after all, at least from the perspective of first-order methods. While there are many local maxima spread widely apart within x i + S, they tend to have very well-concentrated loss values. This echoes the folklore belief that training neural networks is possible because the loss (as a function of model parameters) typically has many local minima with very similar values.\n\nSpecifically, in our experiments we found the following phenomena:\n\n\u2022 We observe that the loss achieved by the adversary increases in a fairly consistent way and plateaus rapidly when performing projected \u221e gradient descent for randomly chosen starting points inside x + S (see Figure 1).\n\n\u2022 Investigating the concentration of maxima further, we observe that over a large number of random restarts, the loss of the final iterate follows a well-concentrated distribution without extreme outliers (see Figure 2; we verified this concentration based on 10 5 restarts). \u2022 To demonstrate that maxima are noticeably distinct, we also measured the 2 distance and angles between all pairs of them and observed that distances are distributed close to the expected distance between two random points in the \u221e ball, and angles are close to 90 \u2022 . Along the line segment between local maxima, the loss is convex, attaining its maximum at the endpoints and is reduced by a constant factor in the middle. Nevertheless, for the entire segment, the loss is considerably higher than that of a random point.\n\n\u2022 Finally, we observe that the distribution of maxima suggests that the recently developed subspace view of adversarial examples is not fully capturing the richness of attacks [25]. In particular, we observe adversarial perturbations with negative inner product with the gradient of the example, and deteriorating overall correlation with the gradient direction as the scale of perturbation increases.\n\nAll of this evidence points towards PGD being a \"universal\" adversary among first-order approaches, as we will see next.\n\n\nFirst-Order Adversaries\n\nOur experiments show that the local maxima found by PGD all have similar loss values, both for normally trained networks and adversarially trained networks. This concentration phenomenon suggests an intriguing view on the problem in which robustness against the PGD adversary yields robustness against all first-order adversaries, i.e., attacks that rely only on first-order information. As long as the adversary only uses gradients of the loss function with respect to the input, we conjecture that it will not find significantly better local maxima than PGD. We give more experimental evidence for this hypothesis in Section 5: if we train a network to be robust against PGD adversaries, it becomes robust against a wide range of other attacks as well.\n\nOf course, our exploration with PGD does not preclude the existence of some isolated maxima with much larger function value. However, our experiments suggest that such better local maxima are hard to find with first order methods: even a large number of random restarts did not find function values with significantly different loss values. Incorporating the computational power of the adversary into the attack model should be reminiscent of the notion of polynomially bounded adversary that is a cornerstone of modern cryptography. There, this classic attack model allows the adversary to only solve problems that require at most polynomial computation time. Here, we employ an optimization-based view on the power of the adversary as it is more suitable in the context of machine learning. After all, we have not yet developed a thorough understanding of the computational complexity of many recent machine learning problems. However, the vast majority of optimization problems in ML is solved with first-order methods, and variants of SGD are the most effective way of training deep learning models in particular. Hence we believe that the class of attacks relying on first-order information is, in some sense, universal for the current practice of deep learning. Put together, these two ideas chart the way towards machine learning models with guaranteed robustness. If we train the network to be robust against PGD adversaries, it will be robust against a wide range of attacks that encompasses all current approaches.\n\nIn fact, this robustness guarantee would become even stronger in the context of transfer attacks, i.e., attacks in which the adversary does not have a direct access to the target network. Instead, the adversary only has less specific information such as the (rough) model architecture and the training data set. One can view this attack model as an example of \"zero order\" attacks, i.e., attacks in which the adversary has no direct access to the classifier and is only able to evaluate it on chosen examples without gradient feedback.\n\nWe discuss transferability in Section B of the appendix. We observe that increasing network capacity and strengthening the adversary we train against (FGSM or PGD training, rather than natural training) improves resistance against transfer attacks. Also, as expected, the resistance of our best models to such attacks tends to be significantly larger than to the (strongest) first order attacks.\n\n\nDescent Directions for Adversarial Training\n\nThe preceding discussion suggests that the inner optimization problem can be successfully solved by applying PGD. In order to train adversarially robust networks, we also need to solve the outer optimization problem of the saddle point formulation (2.1), that is find model parameters that minimize the \"adversarial loss\", the value of the inner maximization problem.\n\nIn the context of training neural networks, the main method for minimizing the loss function is Stochastic Gradient Descent (SGD). A natural way of computing the gradient of the outer problem, \u2207 \u03b8 \u03c1(\u03b8), is computing the gradient of the loss function at a maximizer of the inner problem. This corresponds to replacing the input points by their corresponding adversarial perturbations and normally training the network on the perturbed input. A priori, it is not clear that this is a valid descent direction for the saddle point problem. However, for the case of continuously differentiable functions, Danskin's theorem -a classic theorem in optimization-states this is indeed true and gradients at inner maximizers corresponds to descent directions for the saddle point problem.\n\nDespite the fact that the exact assumptions of Danskin's theorem do not hold for our problem (the function is not continuously differentiable due to ReLU and max-pooling units, and we are only computing approximate maximizers of the inner problem), our experiments suggest that we can still use these gradients to optimize our problem. By applying SGD using the gradient of the loss at adversarial examples we can consistently reduce the loss of the saddle point problem during training, as can be seen in Figure 5. These observations suggest that we reliably optimize the saddle point formulation (2.1) and thus train robust classifiers. We formally state Danskin's theorem and describe how it applies to our problem in Section A of the Appendix.\n\n\nNetwork Capacity and Adversarial Robustness\n\nSolving the problem from Equation (2.1) successfully is not sufficient to guarantee robust and accurate classification. We need to also argue that the value of the problem (i.e. the final loss we achieve against adversarial examples) is small, thus providing guarantees for the performance of our classifier. In particular, achieving a very small value corresponds to a perfect classifier, which is robust to adversarial inputs.\n\nFor a fixed set S of possible perturbations, the value of the problem is entirely dependent on the architecture of the classifier we are learning. Consequently, the architectural capacity of the model becomes a major factor affecting its overall performance. At a high level, classifying examples in a robust way requires a stronger classifier, since the presence of adversarial examples changes the decision boundary of the problem to a more complicated one (see Figure 3 for an illustration).\n\nOur experiments verify that capacity is crucial for robustness, as well as for the ability to successfully train against strong adversaries. For the MNIST dataset, we consider a simple convolutional network and study how its behavior changes against different adversaries as we keep doubling the size of network (i.e. double the number of convolutional filters and the size of the fully connected layer). The initial network has a convolutional layer with 2 filters, followed by another convolutional layer with 4 filters, and a fully connected hidden layer with 64 units. Convolutional layers are followed by 2 \u00d7 2 max-pooling layers and adversarial examples are constructed with \u03b5 = 0.3. The results are in Figure 4.\n\nFor the CIFAR10 dataset, we used the Resnet model [9,1]. We performed data augmentation using random crops and flips, as well as per image standarization. To increase the capacity, we modified the network incorporating wider layers by a factor of 10. This results in a network with 5 residual units with (16, Figure 4.\n\nWe observe the following phenomena:\n\nCapacity alone helps. Weak models may fail to learn non-trivial classifiers. In the case of small capacity networks, attempting to train against a strong adversary (PGD) prevents the network from learning anything meaningful. The network converges to always predicting a fixed class, even though it could converge to an accurate classifier through natural training. The small capacity of the network forces the training procedure to sacrifice performance on natural examples in order to provide any kind of robustness against adversarial inputs.\n\nThe value of the saddle point problem decreases as we increase the capacity. Fixing an adversary model, and training against it, the value of (2.1) drops as capacity increases, indicating the the model can fit the adversarial examples increasingly well.\n\nMore capacity and stronger adversaries decrease transferability. Either increasing the capacity of the network, or using a stronger method for the inner optimization problem reduces the effectiveness of transferred adversarial inputs. We validate this experimentally by observing that the correlation between gradients from the source and the transfer network, becomes less significant as capacity increases. We describe our experiments in Section B of the appendix.   \n\n\nExperiments: Adversarially Robust Deep Learning Models?\n\nFollowing the understanding of the problem we developed in previous sections, we can now apply our proposed approach to train robust classifiers. As our experiments so far demonstrated, we need to focus on two key elements: a) train a sufficiently high capacity network, b) use the strongest possible adversary. For both MNIST and CIFAR10, the adversary of choice will be projected gradient descent starting from a random perturbation around the natural example. This corresponds to our notion of a \"complete\" first-order adversary, an algorithm that can efficiently maximize the loss of an example using only first order information. Since we are training the model for multiple epochs, there is no benefit from restarting PGD multiple times per batch -a new start will be chosen the next time each example is encountered.\n\nWhen training against the adversary, we observe a steady decrease in the training loss of adversarial examples, illustrated in Figure 5. This behavior indicates that we are indeed successfully solving our original optimization problem during training. We evaluate the trained models against a range of adversaries. We illustrate our results in Table 1  for MNIST and Table 2 for CIFAR10. The adversaries we consider are:\n\n\u2022 White-box attacks with PGD for a different number of of iterations and restarts, denoted by source A.\n\n\u2022 White-box attacks from [4]. We use their suggested loss function and minimize it using PGD. This is denoted as CW, where the corresponding attack with a high confidence parameter (\u03ba = 50) is denoted as CW+.\n\n\u2022 Black-box attacks from an independently trained copy of the network, denoted A'.\n\n\u2022 Black-box attacks from a version of the same network trained only on natural examples, denoted A nat .\n\n\u2022 Black-box attacks from a different convolution architecture, denoted B, described in [24].\n\nMNIST. We run 40 iterations of projected gradient descent as our adversary, with a step size of 0.01 (we choose to take gradient steps in the \u221e norm, i.e. adding the sign of the gradient, since this makes the choice of the step size simpler). We train and evaluate against perturbations of size \u03b5 = 0.3. We use a network consisting of two convolutional layers with 32 and 64 filters respectively, each followed by 2 \u00d7 2 max-pooling, and a fully connected layer of size 1024. CIFAR10. For the CIFAR10 dataset, we use the two architectures described in 4 (the original Resnet and its 10\u00d7 wider variant). We trained the network against a PGD adversary with \u221e projected gradient descent again, this time using 7 steps of size 2, and a total \u03b5 = 8. For our hardest adversary we chose 20 steps with the same settings, since other hyperparameter choices didn't offer a significant decrease in accuracy. The results of our experiments appear in Table 2.\n\nThe adversarial robustness of our network is significant, given the power of iterative adversaries, but still far from satisfactory. We believe that these results can be improved by further pushing along these directions, and training networks of larger capacity.\n\nResistance for different values of \u03b5 and 2 -bounded attacks. In order to perform a broader evaluation of the adversarial robustness of our models, we run two kinds of additional experiments.   On one hand, we investigate the resistance to \u221e -bounded attacks for different values of \u03b5. On the other hand, we examine the resistance of our model to attacks that are bounded in 2 as opposed to \u221e norm. The results appear in Figure 6. We emphasize that the models we are examining here correspond to training against \u221e -bounded attacks with the original value of \u03b5 = 0.3, for MNIST, and \u03b5 = 8 for CIFAR10. In particular, our MNIST model retains significant resistance to 2 -norm-bounded perturbations too -it has quite good accuracy in this regime even for \u03b5 = 4.5. To put this value of \u03b5 into perspective, we provide a sample of corresponding adversarial examples in Figure 10 of Appendix C. One can observe that the underlying perturbations are large enough that even human could be confused. The MNIST and CIFAR10 networks were trained against \u03b5 = 0.3 and \u03b5 = 8 PGD \u221e adversaries respectively (the training \u03b5 is denoted with a red dashed lines in the \u221e plots). We notice that for \u03b5 less or equal to the value used during training, the performance is equal or better. For MNIST there is a sharp drop shortly after.\n\n\nRelated Work\n\nDue to the growing body of work on adversarial examples [8,6,23,17,3,25,7,12], we focus only on the most related papers here. Before we compare our contributions, we remark that robust optimization has been studied outside deep learning for multiple decades. We refer the reader to [2] for an overview of this field.\n\nRecent work on adversarial training on ImageNet also observed that the model capacity is important for adversarial training [12]. In contrast to this paper, we find that training against multi-step methods (PGD) does lead to resistance against such adversaries. Moreover, we study the loss landscape of the saddle point problem in more detail.\n\nIn [11] and [19] a version of the min-max optimization problem is also considered for adversarial training. There are, however, three important differences between the formerly mentioned result and the present paper. Firstly, the authors claim that the inner maximization problem can be difficult to solve, whereas we explore the loss surface in more detail and find that randomly re-started projected gradient descent often converges to solutions with comparable quality. This shows that it is possible to obtain sufficiently good solutions to the inner maximization problem, which offers good evidence that deep neural network can be immunized against adversarial examples. Secondly, they consider only one-step adversaries, while we work with multi-step methods. Additionally, while the experiments in [19] produce promising results, they are only evaluated against FGSM. However, FGSM-only evaluations are not fully reliable. One evidence for that is that [19] reports 70% accuracy for \u03b5 = 0.7, but any adversary that is allowed to perturb each pixel by more than 0.5 can construct a uniformly gray image, thus fooling any classifier.\n\nA more recent paper [25] also explores the transferability phenomenon. This exploration focuses mostly on the region around natural examples where the loss is (close to) linear. When large perturbations are allowed, this region does not give a complete picture of the adversarial landscape. This is confirmed by our experiments, as well as pointed out by [24].\n\nAnother recent paper [24], considers adversarial training using black-box attacks from similar networks in order to increase the robustness of the network against such adversaries. However, this is not an effective defense against the white-box setting we consider, since a PGD adversary can reliably produce adversarial examples for such networks.\n\n\nConclusion\n\nOur findings provide evidence that deep neural networks can be made resistant to adversarial attacks. As our theory and experiments indicate, we can design reliable adversarial training methods. One of the key insights behind this is the unexpectedly regular structure of the underlying optimization task: even though the relevant problem corresponds to the maximization of a highly non-concave function with many distinct local maxima, their values are highly concentrated. Overall, our findings give us hope that adversarially robust deep learning models may be within current reach.\n\nFor the MNIST dataset, our networks are very robust, achieving high accuracy for a wide range of powerful adversaries and large perturbations. Our experiments on CIFAR10 have not reached the same level of performance yet. However, our results already show that our techniques lead to significant increase in the robustness of the network. We believe that further exploring this direction will lead to adversarially robust networks for this dataset.\n\n[26] Abraham Wald. Contributions to the theory of statistical estimation and testing hypotheses.\n\nThe Annals of Mathematical Statistics, 10(4):299-326, 1939.\n\n[27] Abraham Wald. Statistical decision functions which minimize the maximum risk. Annals of Mathematics, pages 265-280, 1945.\n\n[28] Abraham Wald. Statistical decision functions. In Breakthroughs in Statistics, pages 342-357. Springer, 1992.\n\n[29] Weilin Xu, David Evans, and Yanjun Qi. Feature squeezing: Detecting adversarial examples in deep neural networks. arXiv preprint arXiv:1704.01155, 2017.\n\n\nA Statement and Application of Danskin's Theorem\n\nRecall that our goal is to minimize the value of the saddle point problem\nmin \u03b8 \u03c1(\u03b8), where \u03c1(\u03b8) = E (x,y)\u223cD max \u03b4\u2208S L(\u03b8, x + \u03b4, y) .\nIn practice, we don't have access to the distribution D so both the gradients and the value of \u03c1(\u03b8) will be computed using sampled input points. Therefore we can consider -without loss of generalitythe case of a single random example x with label y, in which case the problem becomes min \u03b8 max \u03b4\u2208S g(\u03b8, \u03b4), where g(\u03b8, \u03b4) = L(\u03b8, x + \u03b4, y) .\n\nIf we assume that the loss L is continuously differentiable in \u03b8, we can compute a descent direction for \u03b8 by utilizing the classical theorem of Danskin.\n\nTheorem A.1 (Danskin). Let S be nonempty compact topological space and g : R n \u00d7 S \u2192 R be such that g(\u00b7, \u03b4) is differentiable for every \u03b4 \u2208 S and \u2207 \u03b8 g(\u03b8, \u03b4) is continuous on R n \u00d7 S. Also, let \u03b4 * (\u03b8) = {\u03b4 \u2208 arg max \u03b4\u2208S g(\u03b8, \u03b4)}.\n\nThen the corresponding max-function\n\u03c6(\u03b8) = max \u03b4\u2208S g(\u03b8, \u03b4)\nis locally Lipschitz continuous, directionally differentiable, and its directional derivatives satisfy\n\u03c6 (\u03b8, h) = sup \u03b4\u2208\u03b4 * (\u03b8) h \u2207 \u03b8 g(\u03b8, \u03b4) .\nIn particular, if for some \u03b8 \u2208 R n the set \u03b4 * (\u03b8) = {\u03b4 * \u03b8 } is a singleton, the the max-function is differentiable at \u03b8 and \u2207\u03c6(\u03b8) = \u2207 \u03b8 g(\u03b8, \u03b4 * \u03b8 ) The intution behind the theorem is that since gradients are local objects, and the function \u03c6(\u03b8) is locally the same as g(\u03b8, \u03b4 * \u03b8 ) their gradients will be the same. The theorem immediately gives us the following corollary, stating the we can indeed compute gradients for the saddle point by computing gradients at the inner optimizers.\n\nCorollary A.2. Let \u03b4 be such that \u03b4 \u2208 S and is a maximizer for max \u03b4 L(\u03b8, x + \u03b4, y). Then, as long as it is nonzero, \u2212\u2207 \u03b8 L(\u03b8, x + \u03b4, y) is a descent direction for \u03c6(\u03b8) = max \u03b4\u2208S L(\u03b8, x + \u03b4, y).\n\nProof of Corollary A.2. We apply Theorem A.1 to g(\u03b8, \u03b4) := L(\u03b8, x + \u03b4, y) and S = B \u00b7 (\u03b5). We see that the directional derivative in the direction of h = \u2207 \u03b8 L(\u03b8, x + \u03b4, y) satisfies\n\u03c6 (\u03b8, h) = sup \u03b4\u2208\u03b4 * (\u03b8) h \u2207 \u03b8 L(\u03b8, x + \u03b4, y) \u2265 h h = \u2207 \u03b8 L(\u03b8, x + \u03b4, y) 2 2 \u2265 0 .\nIf this gradient is nonzero, then the inequality above is strict. Therefore it gives a descent direction.\n\nA technical issue is that, since we use ReLU and max-pooling units in our neural network architecture, the loss function is not continuously differentiable. Nevertheless, since the set of discontinuities has measure zero, we can assume that this will not be an issue in practice, as we will never encounter the problematic points.\n\nAnother technical issue is that, due to the not concavity of the inner problem, we are not able to compute global maximizers, since PGD will converge to local maxima. In such cases, we can consider a subset S of S such that the local maximum is a global maximum in the region S . Applying the theorem for S gives us that the gradient corresponds to a descent direction for the saddle point problem when the adversary is constrained in S . Therefore if the inner maximum is a true adversarial example for the network, then SGD using the gradient at that point will decrease the loss value at this particular adversarial examples, thus making progress towards a robust model.\n\nThese arguments suggest that the conclusions of the theorem are still valid in our saddle point problem, and -as our experiments confirm-we can solve it reliably.\n\n\nB Transferability\n\nA lot of recent literature on adversarial training discusses the phenomenon of transferability [7,12,25], i.e. adversarial examples transfer between differently trained networks. This raises concerns for practical applications, since it suggests that deep networks are extremely vulnerable to attacks, even when there is no direct access to the target network.\n\nThis phenomenon is further confirmed by our current experiments. 1 Moreover, we notice that the extent to which adversarial examples transfer decreases as we increase either network capacity or the power of the adversary used for training the network. This serves as evidence for the fact that the transferability phenomenon can be alleviated by using high capacity networks in conjunction with strong oracles for the inner optimization problem.\n\nMNIST. In an attempt to understand these phenomena we inspect the loss functions corresponding to the trained models we used for testing transferability. More precisely, we compute angles between gradients of the loss functions evaluated over a large set of input examples, and plot their distribution. Similarly, we plot the value of the loss functions between clean and perturbed examples for both the source and transfer networks. In Figure 8 we plot our experimental findings on the MNIST dataset for \u03b5 = 0.3. We consider a naturally trained large network (two convolutional layers of sizes 32 and 64, and a fully connected layer of size 1024), which we train twice starting with different initializations. We plot the distribution of angles between gradients for the same test image in the two resulting networks (orange histograms), noting that they are somewhat correlated. As opposed to this, we see that pairs of gradients for random pairs of inputs for one architecture are as uncorrelated as they can be (blue histograms), since the distribution of their angles looks Gaussian.\n\nNext, we run the same experiment on a naturally trained very large network (two convolutional layers of sizes 64 and 128, and a fully connected layer of size 1024). We notice a mild increase in classification accuracy for transferred examples.\n\nFinally, we repeat the same set of experiments, after training the large and very large networks against the FGSM adversary. We notice that gradients between the two architectures become significantly less correlated. Also, the classification accuracy for transferred examples increases significantly compared to the naturally trained networks.\n\nWe further plot how the value of the loss function changes when moving from the natural input towards the adversarially perturbed input (in Figure 8 we show these plots for four images in the MNIST test dataset), for each pair of networks we considered. We observe that, while for the naturally trained networks, when moving towards the perturbed point, the value of the loss function on the transfer architecture tends to start increasing soon after it starts increasing on the source architecture. In contrast, for the stronger models, the loss function on the transfer network tends to start increasing later, and less aggressively.\n\nCIFAR10. For the CIFAR10 dataset, we investigate the transferability of the FGSM and PGD adversaries between our simple and wide architectures, each trained on natural, FGSM and PGD examples. Transfer accuracies for the FGSM adversary and PGD adversary between all pairs of such configurations (model + training method) with independently random weight initialization are given in tables 3 and 4 respectively. The results exhibit the following trends:\n\n\u2022 Stronger adversaries decrease transferability: In particular, transfer attacks between two PGD-trained models are less successful than transfer attacks between their naturallytrained counterparts. Moreover, adding PGD training helps with transferability from all adversarial datasets, except for those with source a PGD-trained model themselves. This applies to both FGSM attacks and PGD attacks.\n\n\u2022 Capacity decreases transferability: In particular, transfer attacks between two PGDtrained wide networks are less successful than transfer attacks between their simple PGDtrained counterparts. Moreover, with few close exceptions, changing the architecture from simple to wide (and keeping the training method the same) helps with transferability from all adversarial datasets.\n\nWe additionally plotted how the loss of a network behaves in the direction of FGSM and PGD examples obtained from itself and an independently trained copy; results for the simple naturally trained network and the wide PGD trained network are given in Table 7. As expected, we observe the following phenomena:\n\n\u2022 sometimes, the FGSM adversary manages to increase loss faster near the natural example, but as we move towards the boundary of the \u221e box of radius \u03b5, the PGD attack always achieves higher loss.\n\n\u2022 the transferred attacks do worse than their white-box counterparts in terms of increasing the loss;\n\n\u2022 and yet, the transferred PGD attacks dominate the white-box FGSM attacks for the naturally trained network (and sometimes for the PGD-trained one too).      \n\nFigure 1 :\n1Cross-entropy loss values while creating an adversarial example from the MNIST and CIFAR10 evaluation datasets. The plots show how the loss evolves during 20 runs of projected gradient descent (PGD). Each run starts at a uniformly random point in the \u221e -ball around the same natural example (additional plots for different examples appear inFigure 9). The adversarial loss plateaus after a small number of iterations. The optimization trajectories and final loss values are also fairly clustered, especially on CIFAR10. Moreover, the final loss values on adversarially trained networks are significantly smaller than on their naturally trained counterparts.\n\nFigure 2 :\n2Values of the local maxima given by the cross-entropy loss for five examples from the MNIST and CIFAR10 evaluation datasets. For each example, we start projected gradient descent (PGD) from 10 5 uniformly random points in the \u221e -ball around the example and iterate PGD until the loss plateaus. The blue histogram corresponds to the loss on a naturally trained network, while the red histogram corresponds to the adversarially trained counterpart. The loss is significantly smaller for the adversarially trained networks, and the final loss values are very concentrated without any outliers.\n\nFigure 3 :\n3A conceptual illustration of \"natural\" vs. \"adversarial\" decision boundaries. Left: A set of points that can be easily separated with a simple (in this case, linear) decision boundary. Middle: The simple decision boundary does not separate the \u221e -balls (here, squares) around the data points. Hence there are adversarial examples (the red stars) that will be misclassified. Right: Separating the \u221e -balls requires a significantly more complicated decision boundary. The resulting classifier is robust to adversarial examples with bounded \u221e -norm perturbations.\n\n\n160, 320, 640) filters each. This network can achieve an accuracy of 95.2% when trained with natural examples. Adversarial examples were constructed with \u03b5 = 8. Results on capacity experiments appear in\n\nFigure 4 :\n4The effect of network capacity on the performance of the network. We trained MNIST and CIFAR10 networks of varying capacity on: (a) natural examples, (b) with FGSM-made adversarial examples, (c) with PGD-made adversarial examples. In the first three plots/tables of each dataset, we show how the natural and adversarial accuracy changes with respect to capacity for each training regime. In the final plot/table, we show the value of the cross-entropy loss on the adversarial examples the networks were trained on. This corresponds to the value of our saddle point formulation (2.1) for different sets of allowed perturbations.\n\nFigure 5 :\n5Cross-entropy loss on adversarial examples during training. The plots show how the adversarial loss on training examples evolves during training the MNIST and CIFAR10 networks against a PGD adversary. The sharp drops in the CIFAR10 plot correspond to decreases in training step size. These plots illustrate that we can consistently reduce the value of the inner problem of the saddle point formulation (2.1), thus producing an increasingly robust classifier.\n\n2 :\n2CIFAR10: Performance of the adversarially trained network against different adversaries for \u03b5 = 8. For each model of attack we show the most effective attack in bold. The source networks considered for the attack are: the network itself (A) (white-box attack), an independtly initialized and trained copy of the network (A'), a copy of the network trained on natural examples (A nat ).\n\nFigure 6 :\n6) MNIST, \u221e norm (b) MNIST, 2 norm (c) CIFAR10, \u221e norm (d) CIFAR10, 2 norm Performance of our adversarially trained networks against PGD adversaries of different strength.\n\nFigure 7 :\n7CIFAR10: change of loss function in the direction of white-box and black-box FGSM and PGD examples with \u03b5 = 8 for the same five natural examples. Each line shows how the loss changes as we move from the natural example to the corresponding adversarial example. Top: simple naturally trained model. Bottom: wide PGD trained model. We plot the loss of the original network in the direction of the FGSM example for the original network (red lines), 5 PGD examples for the original network obtained from 5 random starting points (blue lines), the FGSM example for an independently trained copy network (green lines) and 5 PGD examples for the copy network obtained from 5 random starting points (black lines). All PGD attacks use 100 steps with step size 0.3.\n\nFigure 8 :Figure 9 :Figure 10 :\n8910Transferability experiments for four different instances (naturally trained large and very large networks, and FGSM-trained large and very large networks, respectively). For each instance we ran the same training algorithm twice, starting from different initializations. Tables on the left show the accuracy of the networks against three types of input (clean, perturbed with FGSM, perturbed with PGD ran for 40 steps); the first column shows the resilience of the first network against examples produced using its own gradients, the second column shows resilience of the second network against examples transferred from the former network. The histograms reflect angles between pairs of gradients corresponding to the same inputs versus the baseline consisting of angles between gradients from random pairs of points. Images on the right hand side reflect how the loss functions of the native and the transfer network change when moving in the direction of the perturbation; the perturbation is at 1 on the horizontal axis. Plots in the top row are for FGSM perturbations, plots in the bottom row are for PGD perturbations produced over 40 iterations. Loss function value over PGD iterations for 20 random restarts on random examples. The 1st and 3rd rows correspond to naturally trained networks, while the 2nd and 4th to adversarially trained ones. Sample adversarial examples with 2 norm bounded by 4. The perturbations are significant enough to cause misclassification by humans too.\n\n\nPrior work on adversarial examples has focused on two main questions: 1. How can we produce strong adversarial examples, i.e., adversarial examples that fool a model with high confidence while requiring only a small perturbation? 2. How can we train a model so that there are no adversarial examples, or at least so that an adversary cannot find them easily?\n\n\nWe observe that increasing the capacity of the network when training using only natural examples (apart from increasing accuracy on these examples) increases the robustness against one-step perturbations. This effect is greater when considering adversarial examples with smaller \u03b5.FGSM adversaries don't increase robustness (for large \u03b5). When training the network using adversarial examples generated with the FGSM, we observe that the network overfits to these adversarial examples. This behavior is known as label leaking[12] and stems from the fact that the adversary produces a very restricted set of adversarial examples that the network can overfit to. These networks have poor performance on natural examples and don't exhibit any kind of robustness against PGD adversaries. For the case of smaller \u03b5 the loss is ofter linear enough in the \u221e ball around natural examples, that FGSM finds adversarial examples close to those found by PGD thus being a reasonable adversary to train against.\n\n\nWhen trained with natural examples, this network reaches 99.2% accuracy on the evaluation set. However, when evaluating on examples perturbed with FGSM the accuracy drops to 6.4%.Method \nSteps \nRestarts Source \nAccuracy \nNatural \n-\n-\n-\n98.8% \nFGSM \n-\n-\nA \n95.6% \nPGD \n40 \n1 \nA \n93.2% \nPGD \n100 \n1 \nA \n91.8% \nPGD \n40 \n20 \nA \n90.4% \nPGD \n100 \n20 \nA \n89.3% \nTargeted \n40 \n1 \nA \n92.7% \nCW \n40 \n1 \nA \n94.0% \nCW+ \n40 \n1 \nA \n93.9% \nFGSM \n-\n-\nA' \n96.8% \nPGD \n40 \n1 \nA' \n96.0% \nPGD \n100 \n20 \nA' \n95.7% \nCW \n40 \n1 \nA' \n97.0% \nCW+ \n40 \n1 \nA' \n96.4% \nFGSM \n-\n-\nB \n95.4% \nPGD \n40 \n1 \nB \n96.4% \nCW+ \n-\n-\nB \n95.7% \n\nTable 1: MNIST: Performance of the adversarially trained network against different adversaries for \n\u03b5 = 0.3. For each model of attack we show the most successful attack with bold. The source networks \nused for the attack are: the network itself (A) (white-box attack), an indepentenly initialized and \ntrained copy of the network (A'), architecture B from [24] (B). \n\n\n\nTable\n\n\nTable 3 :\n3CIFAR10: black-box FGSM attacks. We create FGSM adversarial examples with \u03b5 = 8 from the evaluation set on the source network, and then evaluate them on an independently initialized target network.C Supplementary Figures \n\n\nTable 4 :\n4CIFAR10: black-box PGD attacks. We create PGD adversarial examples with \u03b5 = 8 for 7 iterations from the evaluation set on the source network, and then evaluate them on an independently initialized target network.Model \nAdversary Natural FGSM FGSM random PGD (7 steps) PGD (20 steps) \n\nSimple \n(natural training) \n92.7% 27.5% \n19.6% \n1.2% \n0.8% \n\nSimple \n(FGSM training) \n87.4% 90.9% \n90.4% \n0.0% \n0.0% \n\nSimple \n(PGD training) \n79.4% 51.7% \n55.9% \n47.1% \n43.7% \n\nWide \n(natural training) \n95.2% 32.7% \n25.1% \n4.1% \n3.5% \n\nWide \n(FGSM training) \n90.3% 95.1% \n95.0% \n0.0% \n0.0% \n\nWide \n(PGD training) \n87.3% 56.1% \n60.3% \n50.0% \n45.8% \n\n\n\nTable 5 :\n5CIFAR10: white-box attacks for \u03b5 = 8. For each architecture and training method, we list the accuracy of the resulting network on the full CIFAR10 evaluation set of 10,000 examples. The FGSM random method is the one suggested by[24], whereby we first do a small random perturbation of the natural example, and the apply FGSM to that.\nOur experiments involve transferability between networks with the same architecture (potentially with layers of varying sizes), trained with the same method, but with different random initializations. The reason we consider these models rather than highly different architectures is that they are likely the worst case instances for transferability.\nWe thank Wojciech Matusik for kindly providing us with computing resources to perform this work.\nTensor flow models repository. Tensor flow models repository. https://github.com/tensorflow/models/tree/master/ resnet.\n\n. Aharon Ben-Tal, Laurent El Ghaoui, Arkadi Nemirovski, Princeton University PressRobust optimizationAharon Ben-Tal, Laurent El Ghaoui, and Arkadi Nemirovski. Robust optimization. Princeton University Press, 2009.\n\nDefensive distillation is not robust to adversarial examples. Nicholas Carlini, David Wagner, arXiv:1607.04311arXiv preprintNicholas Carlini and David Wagner. Defensive distillation is not robust to adversarial examples. arXiv preprint arXiv:1607.04311, 2016.\n\nNicholas Carlini, David Wagner, arXiv:1608.04644Towards evaluating the robustness of neural networks. arXiv preprintNicholas Carlini and David Wagner. Towards evaluating the robustness of neural networks. arXiv preprint arXiv:1608.04644, 2016.\n\nAdversarial examples are not easily detected: Bypassing ten detection methods. Nicholas Carlini, David Wagner, arXiv:1705.07263arXiv preprintNicholas Carlini and David Wagner. Adversarial examples are not easily detected: Bypassing ten detection methods. arXiv preprint arXiv:1705.07263, 2017.\n\nAnalysis of classifiers' robustness to adversarial perturbations. Alhussein Fawzi, Omar Fawzi, Pascal Frossard, arXiv:1502.02590arXiv preprintAlhussein Fawzi, Omar Fawzi, and Pascal Frossard. Analysis of classifiers' robustness to adversarial perturbations. arXiv preprint arXiv:1502.02590, 2015.\n\nIan J Goodfellow, arXiv:1412.6572Jonathon Shlens, and Christian Szegedy. Explaining and harnessing adversarial examples. arXiv preprintIan J. Goodfellow, Jonathon Shlens, and Christian Szegedy. Explaining and harnessing adver- sarial examples. arXiv preprint arXiv:1412.6572, 2014.\n\nShixiang Gu, Luca Rigazio, arXiv:1412.5068Towards deep neural network architectures robust to adversarial examples. arXiv preprintShixiang Gu and Luca Rigazio. Towards deep neural network architectures robust to adversarial examples. arXiv preprint arXiv:1412.5068, 2014.\n\nDeep residual learning for image recognition. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionKaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 770-778, 2016.\n\nAdversarial example defenses: Ensembles of weak defenses are not strong. Warren He, James Wei, Xinyun Chen, Nicholas Carlini, Dawn Song, arXiv:1706.04701arXiv preprintWarren He, James Wei, Xinyun Chen, Nicholas Carlini, and Dawn Song. Adversarial example defenses: Ensembles of weak defenses are not strong. arXiv preprint arXiv:1706.04701, 2017.\n\nLearning with a strong adversary. Ruitong Huang, Bing Xu, Dale Schuurmans, Csaba Szepesv\u00e1ri, arXiv:1511.03034arXiv preprintRuitong Huang, Bing Xu, Dale Schuurmans, and Csaba Szepesv\u00e1ri. Learning with a strong adversary. arXiv preprint arXiv:1511.03034, 2015.\n\nAdversarial machine learning at scale. Alexey Kurakin, Ian J Goodfellow, Samy Bengio, arXiv:1611.01236arXiv preprintAlexey Kurakin, Ian J. Goodfellow, and Samy Bengio. Adversarial machine learning at scale. arXiv preprint arXiv:1611.01236, 2016.\n\nDeepfool: A simple and accurate method to fool deep neural networks. Alhussein Seyed-Mohsen Moosavi-Dezfooli, Pascal Fawzi, Frossard, 2016 IEEE Conference on Computer Vision and Pattern Recognition. Las Vegas, NV, USAIEEE Computer SocietySeyed-Mohsen Moosavi-Dezfooli, Alhussein Fawzi, and Pascal Frossard. Deepfool: A simple and accurate method to fool deep neural networks. In 2016 IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2016, Las Vegas, NV, USA, June 27-30, 2016, pages 2574-2582. IEEE Computer Society, 2016.\n\nDeep neural networks are easily fooled: High confidence predictions for unrecognizable images. Anh Mai Nguyen, Jason Yosinski, Jeff Clune, IEEE Conference on Computer Vision and Pattern Recognition. Boston, MA, USAIEEE Computer SocietyAnh Mai Nguyen, Jason Yosinski, and Jeff Clune. Deep neural networks are easily fooled: High confidence predictions for unrecognizable images. In IEEE Conference on Computer Vision and Pattern Recognition, CVPR 2015, Boston, MA, USA, June 7-12, 2015, pages 427-436. IEEE Computer Society, 2015.\n\nDistillation as a defense to adversarial perturbations against deep neural networks. Nicolas Papernot, Patrick Mcdaniel, Xi Wu, Somesh Jha, Ananthram Swami, Security and Privacy (SP), 2016 IEEE Symposium on. IEEENicolas Papernot, Patrick McDaniel, Xi Wu, Somesh Jha, and Ananthram Swami. Distillation as a defense to adversarial perturbations against deep neural networks. In Security and Privacy (SP), 2016 IEEE Symposium on, pages 582-597. IEEE, 2016.\n\nOn the effectiveness of defensive distillation. Nicolas Papernot, Patrick D Mcdaniel, arXiv:1607.05113arXiv preprintNicolas Papernot and Patrick D. McDaniel. On the effectiveness of defensive distillation. arXiv preprint arXiv:1607.05113, 2016.\n\nThe limitations of deep learning in adversarial settings. Nicolas Papernot, Patrick D Mcdaniel, Somesh Jha, Matt Fredrikson, Z Berkay Celik, Ananthram Swami, IEEE European Symposium on Security and Privacy. Saarbr\u00fccken, GermanyIEEENicolas Papernot, Patrick D. McDaniel, Somesh Jha, Matt Fredrikson, Z. Berkay Celik, and Ananthram Swami. The limitations of deep learning in adversarial settings. In IEEE European Symposium on Security and Privacy, EuroS&P 2016, Saarbr\u00fccken, Germany, March 21-24, 2016, pages 372-387. IEEE, 2016.\n\nAndras Rozsa, Manuel G\u00fcnther, Terrance E Boult, arXiv:1612.00138Towards robust deep neural networks with BANG. arXiv preprintAndras Rozsa, Manuel G\u00fcnther, and Terrance E. Boult. Towards robust deep neural networks with BANG. arXiv preprint arXiv:1612.00138, 2016.\n\nUnderstanding adversarial training: Increasing local stability of neural nets through robust optimization. Uri Shaham, Yutaro Yamada, Sahand Negahban, arXiv:1511.05432arXiv preprintUri Shaham, Yutaro Yamada, and Sahand Negahban. Understanding adversarial train- ing: Increasing local stability of neural nets through robust optimization. arXiv preprint arXiv:1511.05432, 2015.\n\nAccessorize to a crime: Real and stealthy attacks on state-of-the-art face recognition. Mahmood Sharif, Sruti Bhagavatula, Lujo Bauer, Michael K Reiter, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. Edgar R. Weippl, Stefan Katzenbeisser, Christopher Kruegel, Andrew C. Myers, and Shai Halevithe 2016 ACM SIGSAC Conference on Computer and Communications SecurityVienna, AustriaACMMahmood Sharif, Sruti Bhagavatula, Lujo Bauer, and Michael K. Reiter. Accessorize to a crime: Real and stealthy attacks on state-of-the-art face recognition. In Edgar R. Weippl, Stefan Katzenbeisser, Christopher Kruegel, Andrew C. Myers, and Shai Halevi, editors, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security, Vienna, Austria, October 24-28, 2016, pages 1528-1540. ACM, 2016.\n\nJure Sokolic, Raja Giryes, Guillermo Sapiro, Rodrigues, arXiv:1605.08254Robust large margin deep neural networks. arXiv preprintJure Sokolic, Raja Giryes, Guillermo Sapiro, and Miguel RD Rodrigues. Robust large margin deep neural networks. arXiv preprint arXiv:1605.08254, 2016.\n\nChristian Szegedy, Wojciech Zaremba, Ilya Sutskever, Joan Bruna, arXiv:1312.6199Dumitru Erhan, Ian J. Goodfellow, and Rob Fergus. Intriguing properties of neural networks. arXiv preprintChristian Szegedy, Wojciech Zaremba, Ilya Sutskever, Joan Bruna, Dumitru Erhan, Ian J. Good- fellow, and Rob Fergus. Intriguing properties of neural networks. arXiv preprint arXiv:1312.6199, 2013.\n\nRobust Large Margin Approaches for Machine Learning in Adversarial Settings. Mohamadali Torkamani, University of OregonPhD thesisMohamadAli Torkamani. Robust Large Margin Approaches for Machine Learning in Adversarial Settings. PhD thesis, University of Oregon, 2016.\n\nFlorian Tram\u00e8r, Alexey Kurakin, Nicolas Papernot, Dan Boneh, Patrick D Mcdaniel, arXiv:1705.07204Ensemble adversarial training: Attacks and defenses. arXiv preprintFlorian Tram\u00e8r, Alexey Kurakin, Nicolas Papernot, Dan Boneh, and Patrick D. McDaniel. Ensemble adversarial training: Attacks and defenses. arXiv preprint arXiv:1705.07204, 2017.\n\nFlorian Tram\u00e8r, Nicolas Papernot, Ian J Goodfellow, Dan Boneh, Patrick D Mcdaniel, arXiv:1704.03453The space of transferable adversarial examples. arXiv preprintFlorian Tram\u00e8r, Nicolas Papernot, Ian J. Goodfellow, Dan Boneh, and Patrick D. McDaniel. The space of transferable adversarial examples. arXiv preprint arXiv:1704.03453, 2017.\n", "annotations": {"author": "[{\"end\":118,\"start\":65},{\"end\":177,\"start\":119},{\"end\":231,\"start\":178},{\"end\":287,\"start\":232},{\"end\":338,\"start\":288}]", "publisher": null, "author_last_name": "[{\"end\":81,\"start\":76},{\"end\":137,\"start\":130},{\"end\":192,\"start\":185},{\"end\":248,\"start\":241},{\"end\":300,\"start\":295}]", "author_first_name": "[{\"end\":75,\"start\":65},{\"end\":129,\"start\":119},{\"end\":184,\"start\":178},{\"end\":240,\"start\":232},{\"end\":294,\"start\":288}]", "author_affiliation": "[{\"end\":117,\"start\":97},{\"end\":176,\"start\":156},{\"end\":230,\"start\":210},{\"end\":286,\"start\":266},{\"end\":337,\"start\":317}]", "title": "[{\"end\":62,\"start\":1},{\"end\":400,\"start\":339}]", "venue": null, "abstract": "[{\"end\":1640,\"start\":402}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2164,\"start\":2160},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2166,\"start\":2164},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2169,\"start\":2166},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2172,\"start\":2169},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2439,\"start\":2436},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":2442,\"start\":2439},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":2445,\"start\":2442},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":2448,\"start\":2445},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2451,\"start\":2448},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2454,\"start\":2451},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":2457,\"start\":2454},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2625,\"start\":2621},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2627,\"start\":2625},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2630,\"start\":2627},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2633,\"start\":2630},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":2636,\"start\":2633},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3167,\"start\":3164},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":3170,\"start\":3167},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":3173,\"start\":3170},{\"end\":3197,\"start\":3193},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3200,\"start\":3197},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3264,\"start\":3261},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":8184,\"start\":8181},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":8187,\"start\":8184},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8190,\"start\":8187},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":8193,\"start\":8190},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":9342,\"start\":9339},{\"end\":10046,\"start\":10037},{\"end\":10049,\"start\":10046},{\"end\":10052,\"start\":10049},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":11856,\"start\":11853},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":12283,\"start\":12279},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":12406,\"start\":12402},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":14902,\"start\":14898},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":14905,\"start\":14902},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":15144,\"start\":15140},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":17304,\"start\":17300},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":24579,\"start\":24576},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":24581,\"start\":24579},{\"end\":24834,\"start\":24830},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":27594,\"start\":27591},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":28057,\"start\":28053},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":30659,\"start\":30656},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":30661,\"start\":30659},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":30664,\"start\":30661},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":30667,\"start\":30664},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":30669,\"start\":30667},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":30672,\"start\":30669},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":30674,\"start\":30672},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":30677,\"start\":30674},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":30885,\"start\":30882},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":31046,\"start\":31042},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":31270,\"start\":31266},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":31279,\"start\":31275},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":32072,\"start\":32068},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":32227,\"start\":32223},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":32427,\"start\":32423},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":32762,\"start\":32758},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":32790,\"start\":32786},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":38190,\"start\":38187},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":38193,\"start\":38190},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":38196,\"start\":38193},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":50151,\"start\":50147},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":52727,\"start\":52723}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":43892,\"start\":43222},{\"attributes\":{\"id\":\"fig_1\"},\"end\":44496,\"start\":43893},{\"attributes\":{\"id\":\"fig_2\"},\"end\":45070,\"start\":44497},{\"attributes\":{\"id\":\"fig_3\"},\"end\":45275,\"start\":45071},{\"attributes\":{\"id\":\"fig_5\"},\"end\":45916,\"start\":45276},{\"attributes\":{\"id\":\"fig_6\"},\"end\":46388,\"start\":45917},{\"attributes\":{\"id\":\"fig_7\"},\"end\":46780,\"start\":46389},{\"attributes\":{\"id\":\"fig_8\"},\"end\":46964,\"start\":46781},{\"attributes\":{\"id\":\"fig_9\"},\"end\":47733,\"start\":46965},{\"attributes\":{\"id\":\"fig_10\"},\"end\":49259,\"start\":47734},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":49620,\"start\":49260},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":50619,\"start\":49621},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":51591,\"start\":50620},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":51599,\"start\":51592},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":51834,\"start\":51600},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":52482,\"start\":51835},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":52828,\"start\":52483}]", "paragraph": "[{\"end\":2282,\"start\":1656},{\"end\":2953,\"start\":2284},{\"end\":3779,\"start\":3011},{\"end\":4684,\"start\":3781},{\"end\":4754,\"start\":4686},{\"end\":5361,\"start\":4756},{\"end\":5828,\"start\":5363},{\"end\":6726,\"start\":5830},{\"end\":7249,\"start\":6728},{\"end\":7951,\"start\":7300},{\"end\":8442,\"start\":7953},{\"end\":8851,\"start\":8444},{\"end\":9529,\"start\":8853},{\"end\":9847,\"start\":9531},{\"end\":10919,\"start\":9914},{\"end\":11233,\"start\":10921},{\"end\":11942,\"start\":11235},{\"end\":12011,\"start\":11985},{\"end\":12284,\"start\":12013},{\"end\":12525,\"start\":12329},{\"end\":13024,\"start\":12527},{\"end\":13542,\"start\":13065},{\"end\":14485,\"start\":13544},{\"end\":15145,\"start\":14527},{\"end\":15585,\"start\":15147},{\"end\":16031,\"start\":15587},{\"end\":16099,\"start\":16033},{\"end\":16321,\"start\":16101},{\"end\":17122,\"start\":16323},{\"end\":17525,\"start\":17124},{\"end\":17647,\"start\":17527},{\"end\":18429,\"start\":17675},{\"end\":19955,\"start\":18431},{\"end\":20492,\"start\":19957},{\"end\":20889,\"start\":20494},{\"end\":21304,\"start\":20937},{\"end\":22083,\"start\":21306},{\"end\":22832,\"start\":22085},{\"end\":23308,\"start\":22880},{\"end\":23804,\"start\":23310},{\"end\":24524,\"start\":23806},{\"end\":24844,\"start\":24526},{\"end\":24881,\"start\":24846},{\"end\":25428,\"start\":24883},{\"end\":25683,\"start\":25430},{\"end\":26154,\"start\":25685},{\"end\":27037,\"start\":26214},{\"end\":27459,\"start\":27039},{\"end\":27564,\"start\":27461},{\"end\":27774,\"start\":27566},{\"end\":27858,\"start\":27776},{\"end\":27964,\"start\":27860},{\"end\":28058,\"start\":27966},{\"end\":29005,\"start\":28060},{\"end\":29270,\"start\":29007},{\"end\":30583,\"start\":29272},{\"end\":30916,\"start\":30600},{\"end\":31261,\"start\":30918},{\"end\":32401,\"start\":31263},{\"end\":32763,\"start\":32403},{\"end\":33113,\"start\":32765},{\"end\":33713,\"start\":33128},{\"end\":34163,\"start\":33715},{\"end\":34261,\"start\":34165},{\"end\":34322,\"start\":34263},{\"end\":34450,\"start\":34324},{\"end\":34565,\"start\":34452},{\"end\":34724,\"start\":34567},{\"end\":34850,\"start\":34777},{\"end\":35250,\"start\":34911},{\"end\":35405,\"start\":35252},{\"end\":35637,\"start\":35407},{\"end\":35674,\"start\":35639},{\"end\":35800,\"start\":35698},{\"end\":36330,\"start\":35842},{\"end\":36526,\"start\":36332},{\"end\":36710,\"start\":36528},{\"end\":36899,\"start\":36794},{\"end\":37231,\"start\":36901},{\"end\":37906,\"start\":37233},{\"end\":38070,\"start\":37908},{\"end\":38452,\"start\":38092},{\"end\":38899,\"start\":38454},{\"end\":39989,\"start\":38901},{\"end\":40234,\"start\":39991},{\"end\":40580,\"start\":40236},{\"end\":41217,\"start\":40582},{\"end\":41670,\"start\":41219},{\"end\":42070,\"start\":41672},{\"end\":42450,\"start\":42072},{\"end\":42760,\"start\":42452},{\"end\":42957,\"start\":42762},{\"end\":43060,\"start\":42959},{\"end\":43221,\"start\":43062}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":9913,\"start\":9848},{\"attributes\":{\"id\":\"formula_1\"},\"end\":12328,\"start\":12285},{\"attributes\":{\"id\":\"formula_2\"},\"end\":34910,\"start\":34851},{\"attributes\":{\"id\":\"formula_3\"},\"end\":35697,\"start\":35675},{\"attributes\":{\"id\":\"formula_4\"},\"end\":35841,\"start\":35801},{\"attributes\":{\"id\":\"formula_5\"},\"end\":36793,\"start\":36711}]", "table_ref": "[{\"end\":6582,\"start\":6568},{\"end\":27413,\"start\":27383},{\"end\":29004,\"start\":28997},{\"end\":42710,\"start\":42703}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1654,\"start\":1642},{\"end\":3009,\"start\":2956},{\"attributes\":{\"n\":\"2\"},\"end\":7298,\"start\":7252},{\"attributes\":{\"n\":\"2.1\"},\"end\":11983,\"start\":11945},{\"attributes\":{\"n\":\"3\"},\"end\":13063,\"start\":13027},{\"attributes\":{\"n\":\"3.1\"},\"end\":14525,\"start\":14488},{\"attributes\":{\"n\":\"3.2\"},\"end\":17673,\"start\":17650},{\"attributes\":{\"n\":\"3.3\"},\"end\":20935,\"start\":20892},{\"attributes\":{\"n\":\"4\"},\"end\":22878,\"start\":22835},{\"attributes\":{\"n\":\"5\"},\"end\":26212,\"start\":26157},{\"attributes\":{\"n\":\"6\"},\"end\":30598,\"start\":30586},{\"attributes\":{\"n\":\"7\"},\"end\":33126,\"start\":33116},{\"end\":34775,\"start\":34727},{\"end\":38090,\"start\":38073},{\"end\":43233,\"start\":43223},{\"end\":43904,\"start\":43894},{\"end\":44508,\"start\":44498},{\"end\":45287,\"start\":45277},{\"end\":45928,\"start\":45918},{\"end\":46393,\"start\":46390},{\"end\":46792,\"start\":46782},{\"end\":46976,\"start\":46966},{\"end\":47766,\"start\":47735},{\"end\":51598,\"start\":51593},{\"end\":51610,\"start\":51601},{\"end\":51845,\"start\":51836},{\"end\":52493,\"start\":52484}]", "table": "[{\"end\":51591,\"start\":50801},{\"end\":51834,\"start\":51809},{\"end\":52482,\"start\":52059}]", "figure_caption": "[{\"end\":43892,\"start\":43235},{\"end\":44496,\"start\":43906},{\"end\":45070,\"start\":44510},{\"end\":45275,\"start\":45073},{\"end\":45916,\"start\":45289},{\"end\":46388,\"start\":45930},{\"end\":46780,\"start\":46395},{\"end\":46964,\"start\":46794},{\"end\":47733,\"start\":46978},{\"end\":49259,\"start\":47771},{\"end\":49620,\"start\":49262},{\"end\":50619,\"start\":49623},{\"end\":50801,\"start\":50622},{\"end\":51809,\"start\":51612},{\"end\":52059,\"start\":51847},{\"end\":52828,\"start\":52495}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":16319,\"start\":16311},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":16541,\"start\":16533},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":22599,\"start\":22591},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":23782,\"start\":23774},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":24523,\"start\":24515},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":24843,\"start\":24835},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":27174,\"start\":27166},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":29700,\"start\":29692},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":30144,\"start\":30135},{\"end\":39346,\"start\":39338},{\"end\":40730,\"start\":40722}]", "bib_author_first_name": "[{\"end\":53405,\"start\":53399},{\"end\":53422,\"start\":53415},{\"end\":53425,\"start\":53423},{\"end\":53440,\"start\":53434},{\"end\":53682,\"start\":53674},{\"end\":53697,\"start\":53692},{\"end\":53881,\"start\":53873},{\"end\":53896,\"start\":53891},{\"end\":54205,\"start\":54197},{\"end\":54220,\"start\":54215},{\"end\":54488,\"start\":54479},{\"end\":54500,\"start\":54496},{\"end\":54514,\"start\":54508},{\"end\":54714,\"start\":54711},{\"end\":54716,\"start\":54715},{\"end\":55002,\"start\":54994},{\"end\":55011,\"start\":55007},{\"end\":55320,\"start\":55313},{\"end\":55332,\"start\":55325},{\"end\":55348,\"start\":55340},{\"end\":55358,\"start\":55354},{\"end\":55789,\"start\":55783},{\"end\":55799,\"start\":55794},{\"end\":55811,\"start\":55805},{\"end\":55826,\"start\":55818},{\"end\":55840,\"start\":55836},{\"end\":56099,\"start\":56092},{\"end\":56111,\"start\":56107},{\"end\":56120,\"start\":56116},{\"end\":56138,\"start\":56133},{\"end\":56363,\"start\":56357},{\"end\":56376,\"start\":56373},{\"end\":56378,\"start\":56377},{\"end\":56395,\"start\":56391},{\"end\":56643,\"start\":56634},{\"end\":56681,\"start\":56675},{\"end\":57203,\"start\":57200},{\"end\":57221,\"start\":57216},{\"end\":57236,\"start\":57232},{\"end\":57728,\"start\":57721},{\"end\":57746,\"start\":57739},{\"end\":57759,\"start\":57757},{\"end\":57770,\"start\":57764},{\"end\":57785,\"start\":57776},{\"end\":58146,\"start\":58139},{\"end\":58164,\"start\":58157},{\"end\":58166,\"start\":58165},{\"end\":58402,\"start\":58395},{\"end\":58420,\"start\":58413},{\"end\":58422,\"start\":58421},{\"end\":58439,\"start\":58433},{\"end\":58449,\"start\":58445},{\"end\":58463,\"start\":58462},{\"end\":58487,\"start\":58478},{\"end\":58873,\"start\":58867},{\"end\":58887,\"start\":58881},{\"end\":58905,\"start\":58897},{\"end\":58907,\"start\":58906},{\"end\":59242,\"start\":59239},{\"end\":59257,\"start\":59251},{\"end\":59272,\"start\":59266},{\"end\":59605,\"start\":59598},{\"end\":59619,\"start\":59614},{\"end\":59637,\"start\":59633},{\"end\":59652,\"start\":59645},{\"end\":59654,\"start\":59653},{\"end\":60352,\"start\":60348},{\"end\":60366,\"start\":60362},{\"end\":60384,\"start\":60375},{\"end\":60637,\"start\":60628},{\"end\":60655,\"start\":60647},{\"end\":60669,\"start\":60665},{\"end\":60685,\"start\":60681},{\"end\":61099,\"start\":61089},{\"end\":61288,\"start\":61281},{\"end\":61303,\"start\":61297},{\"end\":61320,\"start\":61313},{\"end\":61334,\"start\":61331},{\"end\":61349,\"start\":61342},{\"end\":61351,\"start\":61350},{\"end\":61631,\"start\":61624},{\"end\":61647,\"start\":61640},{\"end\":61661,\"start\":61658},{\"end\":61663,\"start\":61662},{\"end\":61679,\"start\":61676},{\"end\":61694,\"start\":61687},{\"end\":61696,\"start\":61695}]", "bib_author_last_name": "[{\"end\":53413,\"start\":53406},{\"end\":53432,\"start\":53426},{\"end\":53451,\"start\":53441},{\"end\":53690,\"start\":53683},{\"end\":53704,\"start\":53698},{\"end\":53889,\"start\":53882},{\"end\":53903,\"start\":53897},{\"end\":54213,\"start\":54206},{\"end\":54227,\"start\":54221},{\"end\":54494,\"start\":54489},{\"end\":54506,\"start\":54501},{\"end\":54523,\"start\":54515},{\"end\":54727,\"start\":54717},{\"end\":55005,\"start\":55003},{\"end\":55019,\"start\":55012},{\"end\":55323,\"start\":55321},{\"end\":55338,\"start\":55333},{\"end\":55352,\"start\":55349},{\"end\":55362,\"start\":55359},{\"end\":55792,\"start\":55790},{\"end\":55803,\"start\":55800},{\"end\":55816,\"start\":55812},{\"end\":55834,\"start\":55827},{\"end\":55845,\"start\":55841},{\"end\":56105,\"start\":56100},{\"end\":56114,\"start\":56112},{\"end\":56131,\"start\":56121},{\"end\":56149,\"start\":56139},{\"end\":56371,\"start\":56364},{\"end\":56389,\"start\":56379},{\"end\":56402,\"start\":56396},{\"end\":56673,\"start\":56644},{\"end\":56687,\"start\":56682},{\"end\":56697,\"start\":56689},{\"end\":57214,\"start\":57204},{\"end\":57230,\"start\":57222},{\"end\":57242,\"start\":57237},{\"end\":57737,\"start\":57729},{\"end\":57755,\"start\":57747},{\"end\":57762,\"start\":57760},{\"end\":57774,\"start\":57771},{\"end\":57791,\"start\":57786},{\"end\":58155,\"start\":58147},{\"end\":58175,\"start\":58167},{\"end\":58411,\"start\":58403},{\"end\":58431,\"start\":58423},{\"end\":58443,\"start\":58440},{\"end\":58460,\"start\":58450},{\"end\":58476,\"start\":58464},{\"end\":58493,\"start\":58488},{\"end\":58879,\"start\":58874},{\"end\":58895,\"start\":58888},{\"end\":58913,\"start\":58908},{\"end\":59249,\"start\":59243},{\"end\":59264,\"start\":59258},{\"end\":59281,\"start\":59273},{\"end\":59612,\"start\":59606},{\"end\":59631,\"start\":59620},{\"end\":59643,\"start\":59638},{\"end\":59661,\"start\":59655},{\"end\":60360,\"start\":60353},{\"end\":60373,\"start\":60367},{\"end\":60391,\"start\":60385},{\"end\":60402,\"start\":60393},{\"end\":60645,\"start\":60638},{\"end\":60663,\"start\":60656},{\"end\":60679,\"start\":60670},{\"end\":60691,\"start\":60686},{\"end\":61109,\"start\":61100},{\"end\":61295,\"start\":61289},{\"end\":61311,\"start\":61304},{\"end\":61329,\"start\":61321},{\"end\":61340,\"start\":61335},{\"end\":61360,\"start\":61352},{\"end\":61638,\"start\":61632},{\"end\":61656,\"start\":61648},{\"end\":61674,\"start\":61664},{\"end\":61685,\"start\":61680},{\"end\":61705,\"start\":61697}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":53395,\"start\":53276},{\"attributes\":{\"id\":\"b1\"},\"end\":53610,\"start\":53397},{\"attributes\":{\"doi\":\"arXiv:1607.04311\",\"id\":\"b2\"},\"end\":53871,\"start\":53612},{\"attributes\":{\"doi\":\"arXiv:1608.04644\",\"id\":\"b3\"},\"end\":54116,\"start\":53873},{\"attributes\":{\"doi\":\"arXiv:1705.07263\",\"id\":\"b4\"},\"end\":54411,\"start\":54118},{\"attributes\":{\"doi\":\"arXiv:1502.02590\",\"id\":\"b5\"},\"end\":54709,\"start\":54413},{\"attributes\":{\"doi\":\"arXiv:1412.6572\",\"id\":\"b6\"},\"end\":54992,\"start\":54711},{\"attributes\":{\"doi\":\"arXiv:1412.5068\",\"id\":\"b7\"},\"end\":55265,\"start\":54994},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":206594692},\"end\":55708,\"start\":55267},{\"attributes\":{\"doi\":\"arXiv:1706.04701\",\"id\":\"b9\"},\"end\":56056,\"start\":55710},{\"attributes\":{\"doi\":\"arXiv:1511.03034\",\"id\":\"b10\"},\"end\":56316,\"start\":56058},{\"attributes\":{\"doi\":\"arXiv:1611.01236\",\"id\":\"b11\"},\"end\":56563,\"start\":56318},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":12387176},\"end\":57103,\"start\":56565},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":206592585},\"end\":57634,\"start\":57105},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":2672720},\"end\":58089,\"start\":57636},{\"attributes\":{\"doi\":\"arXiv:1607.05113\",\"id\":\"b15\"},\"end\":58335,\"start\":58091},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":7004303},\"end\":58865,\"start\":58337},{\"attributes\":{\"doi\":\"arXiv:1612.00138\",\"id\":\"b17\"},\"end\":59130,\"start\":58867},{\"attributes\":{\"doi\":\"arXiv:1511.05432\",\"id\":\"b18\"},\"end\":59508,\"start\":59132},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":207241700},\"end\":60346,\"start\":59510},{\"attributes\":{\"doi\":\"arXiv:1605.08254\",\"id\":\"b20\"},\"end\":60626,\"start\":60348},{\"attributes\":{\"doi\":\"arXiv:1312.6199\",\"id\":\"b21\"},\"end\":61010,\"start\":60628},{\"attributes\":{\"id\":\"b22\"},\"end\":61279,\"start\":61012},{\"attributes\":{\"doi\":\"arXiv:1705.07204\",\"id\":\"b23\"},\"end\":61622,\"start\":61281},{\"attributes\":{\"doi\":\"arXiv:1704.03453\",\"id\":\"b24\"},\"end\":61960,\"start\":61624}]", "bib_title": "[{\"end\":55311,\"start\":55267},{\"end\":56632,\"start\":56565},{\"end\":57198,\"start\":57105},{\"end\":57719,\"start\":57636},{\"end\":58393,\"start\":58337},{\"end\":59596,\"start\":59510}]", "bib_author": "[{\"end\":53415,\"start\":53399},{\"end\":53434,\"start\":53415},{\"end\":53453,\"start\":53434},{\"end\":53692,\"start\":53674},{\"end\":53706,\"start\":53692},{\"end\":53891,\"start\":53873},{\"end\":53905,\"start\":53891},{\"end\":54215,\"start\":54197},{\"end\":54229,\"start\":54215},{\"end\":54496,\"start\":54479},{\"end\":54508,\"start\":54496},{\"end\":54525,\"start\":54508},{\"end\":54729,\"start\":54711},{\"end\":55007,\"start\":54994},{\"end\":55021,\"start\":55007},{\"end\":55325,\"start\":55313},{\"end\":55340,\"start\":55325},{\"end\":55354,\"start\":55340},{\"end\":55364,\"start\":55354},{\"end\":55794,\"start\":55783},{\"end\":55805,\"start\":55794},{\"end\":55818,\"start\":55805},{\"end\":55836,\"start\":55818},{\"end\":55847,\"start\":55836},{\"end\":56107,\"start\":56092},{\"end\":56116,\"start\":56107},{\"end\":56133,\"start\":56116},{\"end\":56151,\"start\":56133},{\"end\":56373,\"start\":56357},{\"end\":56391,\"start\":56373},{\"end\":56404,\"start\":56391},{\"end\":56675,\"start\":56634},{\"end\":56689,\"start\":56675},{\"end\":56699,\"start\":56689},{\"end\":57216,\"start\":57200},{\"end\":57232,\"start\":57216},{\"end\":57244,\"start\":57232},{\"end\":57739,\"start\":57721},{\"end\":57757,\"start\":57739},{\"end\":57764,\"start\":57757},{\"end\":57776,\"start\":57764},{\"end\":57793,\"start\":57776},{\"end\":58157,\"start\":58139},{\"end\":58177,\"start\":58157},{\"end\":58413,\"start\":58395},{\"end\":58433,\"start\":58413},{\"end\":58445,\"start\":58433},{\"end\":58462,\"start\":58445},{\"end\":58478,\"start\":58462},{\"end\":58495,\"start\":58478},{\"end\":58881,\"start\":58867},{\"end\":58897,\"start\":58881},{\"end\":58915,\"start\":58897},{\"end\":59251,\"start\":59239},{\"end\":59266,\"start\":59251},{\"end\":59283,\"start\":59266},{\"end\":59614,\"start\":59598},{\"end\":59633,\"start\":59614},{\"end\":59645,\"start\":59633},{\"end\":59663,\"start\":59645},{\"end\":60362,\"start\":60348},{\"end\":60375,\"start\":60362},{\"end\":60393,\"start\":60375},{\"end\":60404,\"start\":60393},{\"end\":60647,\"start\":60628},{\"end\":60665,\"start\":60647},{\"end\":60681,\"start\":60665},{\"end\":60693,\"start\":60681},{\"end\":61111,\"start\":61089},{\"end\":61297,\"start\":61281},{\"end\":61313,\"start\":61297},{\"end\":61331,\"start\":61313},{\"end\":61342,\"start\":61331},{\"end\":61362,\"start\":61342},{\"end\":61640,\"start\":61624},{\"end\":61658,\"start\":61640},{\"end\":61676,\"start\":61658},{\"end\":61687,\"start\":61676},{\"end\":61707,\"start\":61687}]", "bib_venue": "[{\"end\":55505,\"start\":55443},{\"end\":56782,\"start\":56764},{\"end\":57319,\"start\":57304},{\"end\":58564,\"start\":58544},{\"end\":59927,\"start\":59842},{\"end\":53305,\"start\":53276},{\"end\":53672,\"start\":53612},{\"end\":53973,\"start\":53921},{\"end\":54195,\"start\":54118},{\"end\":54477,\"start\":54413},{\"end\":54830,\"start\":54744},{\"end\":55108,\"start\":55036},{\"end\":55441,\"start\":55364},{\"end\":55781,\"start\":55710},{\"end\":56090,\"start\":56058},{\"end\":56355,\"start\":56318},{\"end\":56762,\"start\":56699},{\"end\":57302,\"start\":57244},{\"end\":57842,\"start\":57793},{\"end\":58137,\"start\":58091},{\"end\":58542,\"start\":58495},{\"end\":58976,\"start\":58931},{\"end\":59237,\"start\":59132},{\"end\":59748,\"start\":59663},{\"end\":60460,\"start\":60420},{\"end\":60798,\"start\":60708},{\"end\":61087,\"start\":61012},{\"end\":61429,\"start\":61378},{\"end\":61769,\"start\":61723}]"}}}, "year": 2023, "month": 12, "day": 17}