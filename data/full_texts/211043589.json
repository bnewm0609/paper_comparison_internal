{"id": 211043589, "updated": "2023-10-06 19:01:56.345", "metadata": {"title": "LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation", "authors": "[{\"first\":\"Xiangnan\",\"last\":\"He\",\"middle\":[]},{\"first\":\"Kuan\",\"last\":\"Deng\",\"middle\":[]},{\"first\":\"Xiang\",\"last\":\"Wang\",\"middle\":[]},{\"first\":\"Yan\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Yongdong\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Meng\",\"last\":\"Wang\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 43rd International ACM SIGIR Conference on Research and Development in Information Retrieval", "publication_date": {"year": 2020, "month": 2, "day": 6}, "abstract": "Graph Convolution Network (GCN) has become new state-of-the-art for collaborative filtering. Nevertheless, the reasons of its effectiveness for recommendation are not well understood. Existing work that adapts GCN to recommendation lacks thorough ablation analyses on GCN, which is originally designed for graph classification tasks and equipped with many neural network operations. However, we empirically find that the two most common designs in GCNs --- feature transformation and nonlinear activation --- contribute little to the performance of collaborative filtering. Even worse, including them adds to the difficulty of training and degrades recommendation performance. In this work, we aim to simplify the design of GCN to make it more concise and appropriate for recommendation. We propose a new model named LightGCN, including only the most essential component in GCN --- neighborhood aggregation --- for collaborative filtering. Specifically, LightGCN learns user and item embeddings by linearly propagating them on the user-item interaction graph, and uses the weighted sum of the embeddings learned at all layers as the final embedding. Such simple, linear, and neat model is much easier to implement and train, exhibiting substantial improvements (about 16.5\\% relative improvement on average) over Neural Graph Collaborative Filtering (NGCF) --- a state-of-the-art GCN-based recommender model --- under exactly the same experimental setting. Further analyses are provided towards the rationality of the simple LightGCN from both analytical and empirical perspectives.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2002.02126", "mag": "3045200674", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/sigir/0001DWLZ020", "doi": "10.1145/3397271.3401063"}}, "content": {"source": {"pdf_hash": "3024f58826a5bce3378af94f677e8fb90cbb49e0", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2002.02126v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "452f430b48e17b7527a799f7c45b6ef00b9e9389", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/3024f58826a5bce3378af94f677e8fb90cbb49e0.txt", "contents": "\nLightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\nJuly 2017\n\nXiangnan He xiangnanhe@gmail.com \nKuan Deng dengkuan@mail.ustc.edu.cn \nXiang Wang xiangwang@u.nus.edu \nYan Li liyan@kuaishou.com \nYongdong Zhang \nMeng Wang \nXiangnan He \nKuan Deng \nXiang Wang \nYan Li \nYongdong Zhang \nMeng Wang \n\nUniversity of Science and Technology of China\nUniversity of Science and Technology\nof China\n\n\nNational University of Singapore\nKuaishou Inc\nUniversity of Science and Technology\nof China\n\n\nHefei University of Technology\n\n\nLightGCN: Simplifying and Powering Graph Convolution Network for Recommendation\nWashington, DC, USA17July 201710.1145/nnnnnnn.nnnnnnnACM ISBN 978-x-xxxx-xxxx-x/YY/MM. . . $15.00 https://doi.org/10.1145/nnnnnnn.nnnnnnn KEYWORDS Collaborative Filtering, Recommendation, Embedding Propagation, Graph Neural Network ACM Reference Format:. 2020. LightGCN: Simplifying and Powering Graph Convolution Network for Recommendation. In Proceedings of ACM Conference (Conference'17). ACM, New York, NY, USA, 10 pages. https: //doi.org/10.1145/nnnnnnn.nnnnnnn\nGraph Convolution Network (GCN) has become new state-ofthe-art for collaborative filtering. Nevertheless, the reasons of its effectiveness for recommendation are not well understood. Existing work that adapts GCN to recommendation lacks thorough ablation analyses on GCN, which is originally designed for graph classification tasks and equipped with many neural network operations. However, we empirically find that the two most common designs in GCNs -feature transformation and nonlinear activation -contribute little to the performance of collaborative filtering. Even worse, including them adds to the difficulty of training and degrades recommendation performance.In this work, we aim to simplify the design of GCN to make it more concise and appropriate for recommendation. We propose a new model named LightGCN, including only the most essential component in GCN -neighborhood aggregation -for collaborative filtering. Specifically, LightGCN learns user and item embeddings by linearly propagating them on the user-item interaction graph, and uses the weighted sum of the embeddings learned at all layers as the final embedding. Such simple, linear, and neat model is much easier to implement and train, exhibiting substantial improvements (about 16.5% relative improvement on average) over Neural Graph Collaborative Filtering (NGCF) -a state-of-the-art GCN-based recommender model -under exactly the same experimental setting. Further analyses are provided towards the rationality of the simple LightGCN from both analytical and empirical perspectives.CCS CONCEPTS\u2022 Information systems \u2192 Recommender systems.\n\nINTRODUCTION\n\nTo alleviate information overload on the web, recommender system has been widely deployed to perform personalized information filtering [5,46]. The core of recommender system is to predict whether a user will interact with an item, e.g., click, rate, purchase, among other forms of interactions. As such, collaborative filtering (CF), which focuses on exploiting the past user-item interactions to achieve the prediction, remains to be a fundamental task towards effective personalized recommendation [8,18,26,39].\n\nThe most common paradigm for CF is to learn latent features (a.k.a. embedding) to represent a user and an item, and perform prediction based on the embedding vectors [18]. Matrix factorization is an early such model, which directly projects the single ID of a user to her embedding [24,30]. Later on, several research find that augmenting user ID with the her interaction history as the input can improve the quality of embedding. For example, SVD++ [23] demonstrates the benefits of user interaction history in predicting user numerical ratings, and Neural Attentive Item Similarity (NAIS) [17] differentiates the importance of items in the interaction history and shows improvements in predicting item ranking. In view of user-item interaction graph, these improvements can be seen as coming from using the subgraph structure of a user -more specifically, her one-hop neighbors -to improve the embedding learning.\n\nTo deepen the use of subgraph structure with high-hop neighbors, Wang et al. [39] recently proposes NGCF and achieves state-of-the-art performance for CF. It takes inspiration from the Graph Convolution Network (GCN) [12,21], following the same propagation rule to refine embeddings: feature transformation, neighborhood aggregation, and nonlinear activation. Although NGCF has shown promising results, we argue that its designs are rather heavy and burdensome -many operations are directly inherited from GCN without justification. As a result, they are not necessarily useful for the CF task. To be specific, GCN is originally proposed for node classification on attributed graph, where each node has rich attributes as input features; whereas in user-item interaction graph for CF, each node (user or item) is only described by a one-hot ID, which has no concrete semantics besides being an identifier. In such a case, given the ID embedding as the input, performing multiple layers of nonlinear feature transformationwhich is the key to the success of modern neural networks [14] -will bring no benefits, but negatively increases the difficulty for model training.\n\nTo validate our thoughts, we perform extensive ablation studies on NGCF. With rigorous controlled experiments (on the same data splits and evaluation protocol), we draw the conclusion that the two operations inherited from GCN -feature transformation and nonlinear activation -has no contribution on NGCF's effectiveness. Even more surprising, removing them leads to significant accuracy improvements. This reflects the issues of adding operations that are useless for the target task in graph neural network, which not only brings no benefits, but rather degrades model effectiveness. Motivated by these empirical findings, we present a new model named LightGCN, including the most essential component of GCN -neighborhood aggregation -for collaborative filtering. Specifically, after associating each user (item) with an ID embedding, we propagate the embeddings on the user-item interaction graph to refine them. We then combine the embeddings learned at different propagation layers with a weighted sum to obtain the final embedding for prediction. The whole model is simple and elegant, which not only is easier to train, but also achieves better empirical performance than NGCF and other state-of-the-art methods like Mult-VAE [26].\n\nTo summarize, this work makes the following main contributions:\n\n\u2022 We empirically show that two common designs in GCN, feature transformation and nonlinear activation, have no positive effect on the effectiveness of collaborative filtering. \u2022 We propose LightGCN, which largely simplifies the model design by including only the most essential components in GCN for recommendation. \u2022 We empirically compare LightGCN with NGCF by following the same setting and demonstrate substantial improvements.\n\nIn-depth analyses are provided towards the rationality of LightGCN from both technical and empirical perspectives.\n\n\nPRELIMINARIES\n\nWe first introduce NGCF [39], a representative and state-of-the-art GCN model for recommendation. We then perform ablation studies on NGCF to judge the usefulness of each operation in NGCF. The novel contribution of this section is to show that the two common designs in GCNs, feature transformation and nonlinear activation, have no positive effect on collaborative filtering.\n\n\nNGCF Brief\n\nIn the initial step, each user and item is associated with an ID embedding. Let e  \ne (k +1) u = \u03c3 W 1 e (k ) u + i \u2208N u 1 |N u ||N i | (W 1 e (k ) i + W 2 (e (k) i \u2299 e (k ) u )) , e (k +1) i = \u03c3 W 1 e (k ) i + u \u2208N i 1 |N u ||N i | (W 1 e (k ) u + W 2 (e (k ) u \u2299 e (k ) i )) ,(1)where e (k )\nu and e (k) i respectively denote the refined embedding of user u and item i after k layers propagation, \u03c3 is the nonlinear activation function, N u denotes the set of items that are interacted by user u, N i denotes the set of users that interact with item i, and W 1 and W 2 are trainable weight matrix to perform feature transformation in each layer. By propagating L layers, NGCF obtains L + 1 embeddings to describe a user (e i ). It then concatenates these L + 1 embeddings to obtain the final user embedding and item embedding, using inner product to generate the prediction score.\n\nNGCF largely follows the standard GCN [21], including the use of nonlinear activation function \u03c3 (\u00b7) and feature transformation matrices W 1 and W 2 . However, we argue that the two operations are not as useful for collaborative filtering. In semi-supervised node classification, each node has rich semantic features as input, such as the title and abstract words of a paper. Thus performing multiple layers of nonlinear transformation is beneficial to feature learning. Nevertheless, in collaborative filtering, each node of useritem interaction graph only has an ID as input which has no concrete semantics. In this case, performing multiple nonlinear transformations will not contribute to learn better features; even worse, it may add the difficulties to train well. In the next subsection, we provide empirical evidence on this argument.\n\n\nEmpirical Explorations on NGCF\n\nWe conduct ablation studies on NGCF to explore the effect of nonlinear activation and feature transformation. We use the codes released by the authors of NGCF 1 , running experiments on the same data splits and evaluation protocol to keep the comparison as fair as possible. Since the core of GCN is to refine embeddings by propagation, we are more interested in the embedding quality under the same embedding size. Thus, we change the way of obtaining final embedding from concatenation (i.e., e * u = e (0)\nu \u2225\u00b7 \u00b7 \u00b7 \u2225e (L) u ) to sum (i.e., e * u = e (0) u + \u00b7 \u00b7 \u00b7 + e (L)\nu ). Note that this change has little effect on NGCF's performance, but makes the following ablation studies more indicative of the embedding quality refined by GCN.\n\nWe implement three simplified variants of NGCF:  \u2022 NGCF-f, which removes the feature transformation matrices W 1 and W 2 . \u2022 NGCF-n, which removes the non-linear activation function \u03c3 .\n\n\u2022 NGCF-fn, which removes both the feature transformation matrices and non-linear activation function.\n\nFor the three variants, we keep all hyper-parameters (e.g., learning rate, regularization coefficient, dropout ratio, etc.) same as the optimal settings of NGCF. We report the results of the 2layer setting on the Gowalla and Amazon-Book datasets in Table  1, where the scores of NGCF are directly copied from the Table  3 of [39]. As can be seen, removing feature transformation (i.e., NGCF-f) leads to consistent improvements over NGCF on all three datasets. In contrast, removing nonlinear activation does not affect the accuracy that much. However, if we remove nonlinear activation on the basis of removing feature transformation (i.e., NGCF-fn), the performance is improved significantly. From these observations, we conclude the findings that:\n\n(1) Adding feature transformation imposes negative effect on NGCF, since removing it in both models of NGCF and NGCF-n improves the performance significantly;\n\n(2) Adding nonlinear activation affects slightly when feature transformation is included, but it imposes negative effect when feature transformation is disabled.\n\n(3) As a whole, feature transformation and nonlinear activation impose rather negative effect on NGCF, since by removing them simultaneously, NGCF-fn demonstrates large improvements over NGCF (9.57% relative improvement on recall).\n\nTo gain more insights into the scores obtained in Table 1 and understand why NGCF deteriorates with the two operations, we plot the curves of model status recorded by training loss and testing recall in Figure 1. As can be seen, NGCF-fn achieves a much lower training loss than NGCF, NGCF-f, and NGCF-n along the whole training process. Aligning with the curves of testing recall, we find that such lower training loss successfully transfers to better recommendation accuracy. The comparison between NGCF and NGCF-f shows the similar trend, except that the improvement margin is smaller.\n\nFrom these evidences, we can draw the conclusion that the deterioration of NGCF stems from the training difficulty, rather than overfitting. Theoretically speaking, NGCF has higher representation power than NGCF-f, since setting the weight matrix W 1 and W 2 to identity matrix I can fully recover the NGCF-f model. However, in practice, NGCF demonstrates higher training loss and worse generalization performance than NGCF-f. And the incorporation of nonlinear activation further aggravates the discrepancy between representation power and generalization performance. To round out this section, we claim that when designing model for recommendation, it is important to perform rigorous ablation studies to be clear about the impact of each operation. Otherwise, including less useful operations will complicate the model unnecessarily, increase the training difficulty, and even degrade model effectiveness.\n\n\nMETHOD\n\nThe former section demonstrates that NGCF is a heavy and burdensome GCN model for collaborative filtering. Driven by these findings, we set the goal of developing a light yet effective model by including the most essential ingredients of GCN for recommendation. The advantages of being simple are severalfold -more interpretable, practically easy to train and maintain, technically easy to analyze the model behavior and revise it towards more effective directions, and so on.\n\nIn this section, we first present our designed Light Graph Convolution Network (LightGCN) model, as illustrated in Figure 2. We then provide an in-depth analysis of LightGCN to show the rationality behind its simple design. Lastly, we describe how to do model training for recommendation.\n\n\nLightGCN\n\nThe basic idea of GCN is to learning representation for nodes by smoothing features over the graph [21,40]. To achieve this, it performs graph convolution iteratively, i.e., aggregating the features of neighbors as the new representation of a target node. Such neighborhood aggregation can be abstracted as:\ne (k +1) u = AGG(e (k ) u , {e (k ) i : i \u2208 N u }).(2)\nThe AGG is an aggregation function -the core of graph convolution -that considers the k-th layer's representation of the target node and its neighbor nodes. Many work have specified the AGG, such as the weighted sum aggregator in GCN [21] and GIN [42], mean aggregator and LSTM aggregator in GraphSAGE [12], etc. However, most of the work ties feature transformation or nonlinear activation with the AGG function. Although they perform well on node or graph classification tasks that have semantic input features, they could be burdensome for collaborative filtering (see preliminary results in Section 2.2).\n\n\nLight Graph Convolution (LGC).\n\nIn LightGCN, we adopt the simple weighted sum aggregator and abandon the use of feature\n( ) ( ) ( ) ( ) ( ) ( ) ( ) ( ) Light Graph Convolution (LGC) = Normalized Sum ( \u2212 ) ( \u2212 ) = ( \u2212 ) ( \u2212 )\n\nLayer Combination (weighted sum)\n\nNormalized Sum In LGC, only the normalized sum of neighbor embeddings is performed towards next layer; other operations like self-connection, feature transformation, and nonlinear activation are all removed, which largely simplifies GCNs.\n\nIn Layer Combination, we sum over the embeddings at each layer to obtain the final representations.\n\ntransformation and nonlinear activation. The graph convolution operation (a.k.a., propagation rule [39]) in LightGCN is defined as:\ne (k +1) u = i \u2208N u 1 |N u | |N i | e (k ) i , e (k +1) i = u \u2208N i 1 |N i | |N u | e (k ) u .(3)\nThe symmetric normalization term\n1 \u221a | N u | \u221a | N i |\nfollows the design of standard GCN [21], which can avoid the scale of embeddings increasing with graph convolution operations; other choices can also be applied here, such as the L 1 norm, while empirically we find this symmetric normalization has good performance (see experiment results in Section 4.4.2). It is worth noting that in LGC, we aggregate only the connected neighbors and do not integrate the target node itself (i.e., selfconnection). This is different from most existing graph convolution operations [12,21,34,39] that typically aggregate extended neighbors and need to handle the self-connection specially. The layer combination operation, to be introduced in the next subsection, essentially captures the same effect as self-connections. Thus, there is no need in LGC to include self-connections.\n\n\nLayer Combination and Model Prediction.\n\nIn LightGCN, the only trainable model parameters are the embeddings at the 0-th layer, i.e., e i for all items. When they are given, the embeddings at higher layers can be computed via LGC defined in Equation (3). After K layers LGC, we further combine the embeddings obtained at each layer to form the final representation of a user (an item):\ne u = K k =0 \u03b1 k e (k) u ; e i = K k =0 \u03b1 k e (k ) i ,(4)\nwhere \u03b1 k \u2265 0 denotes the importance of the k-th layer embedding in constituting the final embedding. It can be treated as a hyperparameter to be tuned manually, or as a model parameter (e.g., output of an attention network [3]) to be optimized automatically.\n\nIn our experiments, we find that setting \u03b1 k uniformly as 1/(K + 1) leads to good performance in general. Thus we do not design special component to optimize \u03b1 k , to avoid complicating LightGCN unnecessarily and to keep its simplicity. The reasons that we perform layer combination to get final representations are threefold. (1) With the increasing of the number of layers, the embeddings will be over-smoothed [25]. Thus simply using the last layer is problematic. (2) The embeddings at different layers capture different semantics. E.g., the first layer enforces smoothness on users and items that have interactions, the second layer smooths users (items) that have overlap on interacted items (users), and higher-layers capture higher-order proximity [39]. Thus combining them will make the representation more comprehensive. (3) Combining embeddings at different layers with weighted sum captures the effect of graph convolution with self-connections, an important trick in GCNs (proof sees Section 3.2.1).\n\nThe model prediction is defined as the inner product of user and item final representations:\u0177\nui = e T u e i ,(5)\nwhich is used as the ranking score for recommendation generation.\n\n\nMatrix Form.\n\nWe provide the matrix form of LightGCN to facilitate implementation and discussion with existing models. Let the user-item interaction matrix be R \u2208 R M \u00d7N where M and N denote the number of users and items, respectively, and each entry R ui is 1 if u has interacted with item i otherwise 0. We then obtain the adjacency matrix of the user-item graph as\nA = 0 R R T 0 ,(6)\nLet the 0-th layer embedding matrix be E (0) \u2208 R (M +N )\u00d7T , where T is the embedding size. Then we can obtain the matrix equivalent form of LGC as:\nE (k+1) = (D \u2212 1 2 AD \u2212 1 2 )E (k ) ,(7)\nwhere D is a (M + N ) \u00d7 (M + N ) diagonal matrix, in which each entry D ii denotes the number of nonzero entries in the i-th row vector of the adjacency matrix A (also named as degree matrix). Lastly, we get the final embedding matrix used for model prediction as:\nE = \u03b1 0 E (0) + \u03b1 1 E (1) + \u03b1 2 E (2) + ... + \u03b1 K E (K ) = \u03b1 0 E (0) + \u03b1 1\u00c3 E (0) + \u03b1 2\u00c3 2 E (0) + ... + \u03b1 K\u00c3 K E (0) ,(8)where\u00c3 = D \u2212 1 2 AD \u2212 1 2 is the symmetrically normalized matrix.\n\nModel Analysis\n\nWe conduct model analysis to demonstrate the rationality behind the simple design of LightGCN. First we discuss the connection with the Simplified GCN (SGCN) [40], which is a recent linear GCN model that integrates self-connection into graph convolution; this analysis shows that by doing layer combination, LightGCN subsumes the effect of self-connection thus there is no need for LightGCN to add self-connection in adjacency matrix. Then we discuss the relation with the Approximate Personalized Propagation of Neural Predictions (APPNP) [22], which is recent GCN variant that addresses oversmoothing by inspiring from Personalized PageRank [13]; this analysis shows the underlying equivalence between LightGCN and APPNP, thus our LightGCN enjoys the sames benefits in propagating long-range with controllable oversmoothing. Lastly we analyze the second-layer LGC to show how it smooths a user with her second-order neighbors, providing more insights into the working mechanism of LightGCN.\n\n\nRelation with SGCN.\n\nIn [40], the authors argue the unnecessary complexity of GCN for node classfication and propose SGCN, which simplifies GCN by removing nonlinearities and collapsing the weight matrices to one weight matrix. The graph convolution in SGCN is defined as 2 :\nE (k +1) = (D + I) \u2212 1 2 (A + I)(D + I) \u2212 1 2 E (k ) ,(9)\nwhere I \u2208 R (M +N )\u00d7(M +N ) is an identity matrix, which is added on A to include self-connections. In the following analysis, we omit the (D + I) \u2212 1 2 terms for simplicity, since they only re-scale embeddings. In SGCN, the embeddings obtained at the last layer are used for downstream prediction task, which can be expressed as:\nE (K ) = (A + I)E (K \u22121) = (A + I) K E (0) = K 0 E (0) + K 1 AE (0) + K 2 A 2 E (0) + ... + K K A K E (0) .(10)\nThe above derivation shows that, inserting self-connection into A and propagating embeddings on it, is essentially equivalent to a weighted sum of the embeddings propagated at each LGC layer.\n\n\nRelation with APPNP.\n\nIn a recent work [22], the authors connect GCN with Personalized PageRank [13], inspiring from which they propose a GCN variant named APPNP that can propagate long range without the risk of oversmoothing. Inspired by the teleport design in Personalized PageRank, APPNP complements each propagation layer with the starting features (i.e., the 0-th layer embeddings), which can balance the need of preserving locality (i.e., staying close to the root node to alleviate oversmoothing) and leveraging the information from a large neighborhood. The propagation layer in APPNP is defined as:\nE (k +1) = \u03b2E (0) + (1 \u2212 \u03b2)\u00c3E (k ) ,(11)\nwhere \u03b2 is the teleport probability to control the retaining of starting features in the propagation, and\u00c3 denotes the normalized adjacency matrix. In APPNP, the last layer is used for final prediction, i.e.,\nE (K ) = \u03b2E (0) + (1 \u2212 \u03b2)\u00c3E (K \u22121) , = \u03b2E (0) + \u03b2(1 \u2212 \u03b2)\u00c3E (0) + (1 \u2212 \u03b2) 2\u00c3 2 E (K \u22122) = \u03b2E (0) + \u03b2(1 \u2212 \u03b2)\u00c3E (0) + \u03b2(1 \u2212 \u03b2) 2\u00c3 2 E (0) + ... + (1 \u2212 \u03b2) K\u00c3 K E (0) .(12)\nAligning with Equation (8), we can see that by setting \u03b1 k accordingly, LightGCN can fully recover the prediction embedding used by APPNP. As such, LightGCN shares the strength of APPNP in combating oversmoothing -by setting the \u03b1 properly, we 2 The weight matrix in SGCN can be absorbed into the 0-th layer embedding parameters, thus it is omitted in the analysis. allow using a large K for long-range modeling with controllable oversmoothing.\n\nAnother minor difference is that APPNP adds self-connection into the adjacency matrix. However, as we have shown before, this is redundant due to the weighted sum of different layers.\n\n\nSecond-Order Embedding Smoothness.\n\nOwing to the linearity and simplicity of LightGCN, we can draw more insights into how does it smooth embeddings. Here we analyze a 2-layer LightGCN to demonstrate its rationality. Taking the user side as an example, intuitively, the second layer smooths users that have overlap on the interacted items. More concretely, we have:\ne (2) u = i \u2208N u 1 |N u | |N i | e (1) i = i \u2208N u 1 |N i | v \u2208N i 1 |N u | |N v | e (0) v .(13)\nWe can see that, if another user v has co-interacted with the target user u, the smoothness strength of v on u is measured by the coefficient (otherwise 0):\nc v\u2212>u = 1 |N u | |N v | i \u2208N u \u2229N v 1 |N i | .(14)\nThis coefficient is rather interpretable: the influence of a secondorder neighbor v on u is determined by 1) the number of cointeracted items, the more the larger; 2) the popularity of the co-interacted items, the less popularity (i.e., more indicative of user personalized preference) the larger; and 3) the activity of v, the less active the larger. Such interpretability well caters for the assumption of CF in measuring user similarity [2,36] and evidences the reasonability of LightGCN. Due to the symmetric formulation of LightGCN, we can get similar analysis on the item side.\n\n\nModel Training\n\nThe trainable parameters of LightGCN are only the embeddings of the 0-th layer, i.e., \u0398 = {E (0) }; in other words, the model complexity is same as the standard matrix factorization (MF). We employ the Bayesian Personalized Ranking (BPR) loss [30], which is a pairwise loss that encourages the prediction of an observed entry to be higher than its unobserved counterparts:\nL BP R = \u2212 M u=1 i \u2208N u j / \u2208N u ln \u03c3 (\u0177 ui \u2212\u0177 u j ) + \u03bb||E (0) || 2(15)\nwhere \u03bb controls the L 2 regularization strength. We employ the Adam [20] optimizer and use it in a mini-batch manner. We are aware of other advanced negative sampling strategies which might improve the LightGCN training, such as the hard negative sampling [29] and adversarial sampling [7]. We leave this extension in the future since it is not the focus of this work. Note that we do not introduce dropout mechanisms, which are commonly used in GCNs and NGCF. The reason is that we do not have feature transformation weight matrices in LightGCN, thus enforcing L 2 regularization on the embedding layer is sufficient to prevent overfitting. This showcases LightGCN's advantages of being simple -it is easier to train and tune than NGCF which additionally requires to tune two dropout ratios (node dropout and message dropout) and normalize the embedding of each layer to unit length. Moreover, it is technically viable to also learn the layer combination coefficients {\u03b1 k } K k =0 , or parameterize them with an attention network. However, we find that learning \u03b1 on training data does not lead improvement. This is probably because the training data does not contain sufficient signal to learn good \u03b1 that can generalize to unknown data. We have also tried to learn \u03b1 from validation data, as inspired by [4] that learns hyper-parameters on validation data. The performance is slightly improved (less than 1%). We leave the exploration of optimal settings of \u03b1 (e.g., personalizing it for different users and items) as future work.\n\n\nEXPERIMENTS\n\nWe first describe experimental settings, and then conduct detailed comparison with NGCF [39], the method that is most relevant with LightGCN but more complicated (Section 4.2). We next compare with other state-of-the-art methods in Section 4.3. To justify the designs in LightGCN and reveal the reasons of its effectiveness, we perform ablation studies and embedding analyses in Section 4.4. The hyper-parameter study is finally presented in Section 4.5.\n\n\nExperimental Settings\n\nTo reduce the experiment workload and keep the comparison fair, we closely follow the settings of the NGCF work [39]. We request the experimented datasets (including train/test splits) from the authors, for which the statistics are shown in Table 2. The Gowalla and Amazon-Book are exactly the same as the NGCF paper used, so we directly use the results in the NGCF paper. The only exception is the Yelp2018 data, which is a revised version. According to the authors, the previous version did not filter out cold-start items in the testing set, and they shared us the revised version only. Thus we re-run NGCF on the Yelp2018 data. The evaluation metrics are recall@20 and ndcg@20 computed by the all-ranking protocolall items that are not interacted by a user are the candidates.\n\n\nCompared Methods.\n\nThe main competing method is NGCF, which has shown to outperform several methods including GCNbased models GC-MC [33] and PinSage [46], neural network-based models NeuMF [18] and CMN [8], and factorization-based models MF [30] and HOP-Rec [44]. As the comparison is done on the same datasets under the same evaluation protocol, we do not further compare with these methods. In addition to NGCF, we further compare with two relevant and competitive CF methods:\n\n\u2022 Mult-VAE [26]. This is an item-based CF method based on the variational autoencoder (VAE). It assumes the data is generated from a multinomial distribution and using variational inference for parameter estimation. We run the codes released by the authors 3  \u2022 GRMF [28]. This method smooths matrix factorization by adding the graph Laplacian regularizer. For fair comparison on item recommendation, we change the rating prediction loss to BPR loss. The objective function of GRMF is:  [10]. We optimize LightGCN with Adam [20] and use the default learning rate of 0.001 and default mini-batch size of 1024 (on Amazon-Book, we increase the minibatch size to 2048 for speed). The L 2 regularization coefficient \u03bb is searched in the range of {1e \u22126 , 1e \u22125 , ..., 1e \u22122 }, and in most cases the optimal value is 1e \u22124 . The layer combination coefficient \u03b1 k is uniformly set to 1 1+K where K is the number of layers. We test K in the range of 1 to 4, and satisfactory performance can be achieved when K equals to 3. The early stopping and validation strategies are the same as NGCF. Typically, 1000 epochs are sufficient for LightGCN to converge. The implementation is based on TensorFlow, and we will release all codes and data upon acceptance.\nL = \u2212 M u=1 i \u2208N u j / \u2208N u ln \u03c3 (e T u e i \u2212 e T u e j ) + \u03bb \u0434 ||e u \u2212 e i || 2 + \u03bb||E|| 2 ,(16)\n\nPerformance Comparison with NGCF\n\nWe perform detailed comparison with NGCF, recording the performance at different layers (1 to 4) in Table 4, which also shows the percentage of relative improvement on each metric. We further plot the training curves of training loss and testing recall in Figure 3 to reveal the advantages of LightGCN and to be clear of the training process. The main observations are as follows:\n\n\u2022 In all cases, LightGCN outperforms NGCF by a large margin. For example, on Gowalla the highest recall reported in the NGCF paper is 0.1560, while our LightGCN can reach 0.1817 under the 4-layer setting, which is 16.47% higher. On average, the recall improvement on the three datasets is 18.83% and the ndcg improvement is 14.14%, which are rather significant. \u2022 Aligning Table 4 with Table 1 in Section 2, we can see that LightGCN performs better than NGCF-fn, the variant of NGCF that removes feature transformation and nonlinear activation. As NGCF-fn still contains more operations than LightGCN (e.g., selfconnection, the interaction between user embedding and item embedding in graph convolution, and dropout), this suggests that these operations might also be useless for NGCF-fn. \u2022 Increasing the number of layers can improve the performance, but the benefits diminish. The general observation is that increasing the layer number from 0 (i.e., the matrix factorization model, results see [39]) to 1 leads to the largest performance gain, and  using a layer number of 3 leads to satisfactory performance in most cases. This observation is consistent with NGCF's finding. \u2022 Along the training process, LightGCN consistently obtains lower training loss, which indicates that LightGCN fits the training data better than NGCF. Moreover, the lower training loss successfully transfers to better testing accuracy, indicating the strong generalization power of LightGCN. In contrast, the higher training loss and lower testing accuracy of NGCF reflect the practical difficulty to train such a heavy model it well. Note that in the figures we show the training process under the optimal hyper-parameter setting for both methods. Although increasing the learning rate of NGCF can decrease its training loss (even lower than that of LightGCN), the testing recall could not be improved, as lowering training loss in this way only finds trivial solution for NGCF.\n\n\nPerformance Comparison with\n\nState-of-the-Arts Table 4 shows the performance comparison with competing methods. We show the best score we can obtain for each method.\n\nWe can see that LightGCN consistently outperforms other methods on all three datasets, demonstrating its high effectiveness with simple yet reasonable designs. Note that LightGCN can be further improved by tuning the \u03b1 k (see Figure 4 for an evidence), while here we only use a uniform setting of 1 K +1 to avoid over-tuning it. Among the baselines, Mult-VAE exhibits the strongest performance, which is better than GRMF and NGCF. The performance of GRMF is on a par with NGCF, being better than MF, which admits the utility of enforcing embedding smoothness with Laplacian regularizer. By adding normalization into the Laplacian regularizer, GRMFnorm betters than GRMF on Gowalla, while brings no benefits on Yelp2018 and Amazon-Book.  \n\n\nAblation and Effectiveness Analyses\n\nWe perform ablation studies on LightGCN by showing how layer combination and symmetric sqrt normalization affect its performance. To justify the rationality of LightGCN as analyzed in Section 3.2.3, we further investigate the effect of embedding smoothness -the key reason of LightGCN's effectiveness. Figure 4 shows the results of LightGCN and its variant LightGCN-single that does not use layer combination (i.e., E (K ) is used for final prediction for a K-layer LightGCN). We omit the results on Yelp2018 due to space limitation, which show similar trend with Amazon-Book. We have three main observations:\n\n\nImpact of Layer Combination.\n\n\u2022 Focusing on LightGCN-single, we find that its performance first improves and then drops when the layer number increases from 1 to 4. The peak point is on layer 2 in most cases, while after that it drops quickly to the worst point of layer 4. This indicates that smoothing a node's embedding with its first-order and secondorder neighbors is very useful for CF, but will suffer from oversmoothing issues when higher-order neighbors are used. \u2022 Focusing on LightGCN, we find that its performance gradually improves with the increasing of layers. Even using 4 layers,   LightGCN's performance is not degraded. This justifies the effectiveness of layer combination for addressing over-smoothing, as we have technically analyzed in Section 3.2.2 (relation with APPNP). \u2022 Comparing the two methods, we find that LightGCN consistently outperforms LightGCN-single on Gowalla, but not on Amazon-Book and Yelp2018 (where the 2-layer LightGCN-single performs the best). Regarding this phenomenon, two points need to be noted before we draw conclusion: 1) LightGCN-single is special case of LightGCN that sets \u03b1 K to 1 and other \u03b1 k to 0; 2) we do not tune the \u03b1 k and simply set it as 1 K +1 uniformly for LightGCN. As such, we can see the potential of further enhancing the performance of LightGCN by tuning \u03b1 k .\n\n\nImpact of Symmetric Sqrt Normalization.\n\nIn LightGCN, we employ symmetric sqrt normalization\n1 \u221a | N u | \u221a | N i | on each\nneighbor embedding when performing neighborhood aggregation (cf. Equation (3)). To study its rationality, we explore different choices here. We test the use of normalization only at the left side (i.e., the target node's coefficient) and the right side (i.e., the neighbor node's coefficient). We also test L 1 normalization, i.e., removing the square root. Note that if removing normalization, the training becomes numerically unstable and suffers from nota-value (NAN) issues, so we do not show this setting. Table 5 shows the results of the 3-layer LightGCN. We have the following observations:\n\n\u2022 The best setting in general is using sqrt normalization at both sides (i.e., the current design of LightGCN). Removing either side will drop the performance largely. \u2022 The second best setting is using L 1 normalization at the left side only (i.e., LightGCN-L 1 -L). This is equivalent to normalize the adjacency matrix as a stochastic matrix by the in-degree. \u2022 Normalizing symmetrically on two sides is helpful for the sqrt normalization, but will degrade the performance of L 1 normalization.\n\n\nAnalysis of Embedding Smoothness.\n\nAs we have analyzed in Section 3.2.3, a 2-layer LightGCN smooths a user's embedding based on the users that have overlap on her interacted items, and the smoothing strength between two users c v\u2192u is measured in Equation (14). We speculate that such smoothing of embeddings is the key reason of LightGCN's effectiveness. To verify this, we first define the smoothness of user embeddings as:\nS U = M u=1 M v=1 c v\u2192u ( e u ||e u || 2 \u2212 e v ||e v || 2 ) 2 ,(17)\nwhere the L 2 norm on embeddings is used to eliminate the impact of the embedding's scale. Similarly we can obtained the definition for item embeddings. Table 6 shows the smoothness of two models, matrix factorization (i.e., using the E (0) for model prediction) and the 2-layer LightGCN-single (i.e., using the E (2) for prediction). Note that the 2-layer LightGCN-single outperforms MF in recommendation accuracy by a large margin. As can be seen, the smoothness loss of LightGCN-single is much lower than that of MF. This indicates that by conducting light graph convolution, the embeddings become smoother and more suitable for recommendation.\n\n\nHyper-parameter Studies\n\nWhen applying LightGCN to a new dataset, besides the standard hyper-parameter learning rate, the most important hyper-parameter to tune is the L 2 regularization coefficient \u03bb. Here we investigate the performance change of LightGCN w.r.t. \u03bb. As shown in Figure 5, LightGCN is relatively insensitive to \u03bb -even when \u03bb sets to 0, LightGCN is better than NGCF, which additionally uses dropout to prevent overfitting 4 . This shows that LightGCN is less prone to overfitting -since the only trainable parameters in LightGCN are ID embeddings of the 0-th layer, the whole model is easy to train and to regularize. The optimal value for Yelp2018, Amazon-Book, and Gowalla is 1e \u22123 , 1e \u22124 , and 1e \u22124 , respectively. When \u03bb is larger than 1e \u22123 , the performance drops quickly, which indicates that too strong regularization will negatively affect model normal training and is not encouraged.\n\n\nRELATED WORK 5.1 Collaborative Filtering\n\nCollaborative Filtering (CF) is a prevalent technique in modern recommender systems [5,46]. One common paradigm of CF model is to parameterize users and items as embeddings, and learn the embedding parameters by reconstructing historical useritem interactions. For example, earlier CF models like matrix factorization (MF) [24,30] project the ID of a user (or an item) into an embedding vector. The recent neural recommender models like NCF [18] and LRML [32] use the same embedding component, while enhance the interaction modeling with neural networks.\n\nBeyond merely using ID information, another type of CF methods considers historical items as the pre-existing features of a user, towards better user representations. For example, FISM [19] and SVD++ [23] use the weighted average of the ID embeddings of historical items as the target user's embedding. Recently, researchers realize that historical items have different contributions to shape personal interest. Towards this end, attention mechanisms are introduced to capture the varying contributions, such as ACF [3], NAIS [17], and DeepICF [43], to automatically learn the importance of each historical item. When revisiting historical interactions as a user-item bipartite graph, the performance improvements can be attributed to the encoding of local neighborhood -one-hop neighbors -that improves the embedding learning.\n\n\nGraph Methods for Recommendation\n\nAnother relevant research line is exploiting the user-item graph structure for recommendation. Prior efforts, such as ItemRank [11] and BiRank [16], use the label propagation mechanism to directly propagate user preference scores over the graph, i.e., encouraging connected nodes to have similar labels. Recently emerged graph neural networks (GNNs) shine a light on modeling graph structure, especially high-hop neighbors, to guide the embedding learning [12,21]. Early studies define graph convolution on the spectral domain, such as Laplacian eigen-decomposition [1] and Chebyshev polynomials [6], which are computationally expensive. Later on, GraphSage [12] and GCN [21] re-define graph convolution in the spatial domain, i.e., aggregating the embeddings of neighbors to refine the target node's embedding. Owing to its interpretability and efficiency, it quickly becomes a prevalent formulation of GNNs and is being widely used [9,27]. Motivated by the strength of graph convolution, recent efforts like NGCF [39], GC-MC [33], and PinSage [46] adapt GCN to the user-item interaction graph, capturing CF signals in high-hop neighbors for recommendation.\n\nIt is worth mentioning that several recent efforts provide deep insights into GNNs [22,25,40], which inspire us developing LightGCN. Particularly, Wu et al. [40] argues the unnecessary complexity of GCN, developing a simplified GCN (SGCN) model by removing nonlinearities and collapsing multiple weight matrices into one. One main difference is that LightGCN and SGCN are developed for different tasks, thus the rationality of model simplification is different. Specifically, SGCN is for node classification, performing simplification for model interpretability and efficiency. In contrast, LightGCN is on collaborative filtering (CF), where each node has an ID feature only. Thus, we do simplification for a stronger reason: nonlinearity and weight matrices are useless for CF, and even hurt model training. For node classification accuracy, SGCN is on par with (sometimes weaker than) GCN. While for CF accuracy, LightGCN outperforms GCN by a large margin (over 15% improvement over NGCF).\n\n\nCONCLUSION AND FUTURE WORK\n\nIn this work, we argued the unnecessarily complicated design of GCNs for collaborative filtering, and performed empirical studies to justify this argument. We proposed LightGCN which consists of two essential components -light graph convolution and layer combination. In light graph convolution, we discard feature transformation and nonlinear activation -two standard operations in GCNs but inevitably increase the training difficulty. In layer combination, we construct a node's final embedding as the weighted sum of its embeddings on all layers, which is proved to subsume the effect of self-connections and is helpful to control oversmoothing. We conduct experiments to demonstrate the strengths of LightGCN in being simple: easier to be trained, better generalization ability, and more effective.\n\nWe believe the insights of LightGCN are inspirational to future developments of recommender models. With the prevalence of linked graph data in real applications, graph-based models are becoming increasingly important in recommendation [12,37]; by explicitly exploiting the relations among entities in the predictive model, they are advantageous to traditional supervised learning scheme like factorization machines [15,31] that model the relations implicitly. For example, a recent trend is to exploit auxiliary information such as item knowledge graph [35,38], social network [41] and multimedia content [45] for recommendation, where GCNs have set up the new state-of-the-art. However, these models may also suffer from the similar issues of NGCF since the user-item interaction graph is also modeled by same neural operations that may be unnecessary. We plan to explore the idea of LightGCN in these models. Another future direction is to personalize the layer combination weights \u03b1 k , so as to enable adaptive-order smoothing for different users (e.g., sparse users may require more signal from higher-order neighbors while active users require less). Lastly, we will explore further the strengths of LightGCN's simplicity, studying whether closed-form solution exists for particular forms of loss functions and streaming it for online industrial scenarios.\n\nu\ndenote the ID embedding of user u and e(0) i\n\nFigure 1 :\n1Training curves (training loss and testing recall) of NGCF and its three simplified variants.\n\ni 4 Figure 2 :\n42An illustration of LightGCN model architecture.\n\n\n, tuning the dropout ratio in [0, 0.2, 0.5], and the \u03b2 in [0.2, 0.4, 0.6, 0.8]. The model architecture is the suggested one in the paper: 600 \u2192 200 \u2192 600.\n\nFigure 3 :\n3Training curves of LightGCN and NGCF, which are evaluated by training loss and testing recall per 20 epochs on Gowalla and Amazon-Book (results on Yelp2018 show exactly the same trend which are omitted for space).\n\nFigure 4 :\n4Results of LightGCN and the variant that does not use layer combination (i.e., LightGCN-single) at different layers on Gowalla and Amazon-Book (results on Yelp2018 shows the same trend with Amazon-Book which are omitted for space).\n\n\nnotation: -L means only the left-side norm is used, -R means only the right-side norm is used, and -L 1 means the L 1 norm is used.\n\nFigure 5 :\n5Performance of 2-layer LightGCN w.r.t. different regularization coefficient \u03bb on Yelp and Amazon-Book.\n\nTable 1 :\n1Performance of NGCF and its three variants.denote the ID embedding of item i. Then NGCF leverages the useritem interaction graph to propagate embeddings as:Gowalla \nAmazon-Book \nrecall ndcg recall ndcg \n\nNGCF \n0.1535 0.2238 0.0319 0.0622 \nNGCF-f \n0.1682 0.2392 0.0355 0.0646 \nNGCF-n 0.1538 0.2243 0.0325 0.0616 \nNGCF-fn 0.1723 0.2414 0.0371 0.0669 \n\n\n\nTable 2 :\n2Statistics of the experimented data.Dataset \nUser # Item # Interaction # Density \n\nGowalla \n29, 858 40, 981 \n1, 027, 370 \n0.00084 \nYelp2018 \n31, 668 38, 048 \n1, 561, 406 \n0.00130 \nAmazon-Book 52, 643 91, 599 \n2, 984, 108 \n0.00062 \n\n\n\n\nwhere \u03bb \u0434 is searched in the range of [1e \u22125 , 1e \u22124 , ..., 1e \u22121 ]. Moreover, we compare with a variant that adds normalization to graph Laplacian: \u03bb \u0434 || e u \u221a|N u | \n\n\u2212 e i \n\u221a \n\n|N i | \n\n|| 2 , which is termed \n\nas GRMF-norm. Other hyper-parameter settings are same as \nLightGCN. The two GRMF methods benchmark the performance \nof smoothing embeddings via Laplacian regularizer, while our \nLightGCN achieves embedding smoothing in the predictive \nmodel. \n\n4.1.2 Hyper-parameter Settings. Same as NGCF, the embedding \nsize is fixed to 64 for all models and the embedding parameters are \ninitialized with the Xavier method \n\nTable 3 :\n3Performance comparison between NGCF and LightGCN at different layers. The scores of NGCF on Gowalla and Amazon-Book are directly copied from theTable 3of[39]; the scores of NGCF on Yelp2018 are re-run by us.Dataset \nGowalla \nYelp2018* \nAmazon-Book \nLayer # \nMethod \nrecall \nndcg \nrecall \nndcg \nrecall \nndcg \n\n1 Layer \nNGCF \n0.1511 \n0.2218 \n0.0542 \n0.1028 \n0.0315 \n0.0618 \nLightGCN 0.1726(+14.23%) 0.2455(+10.67%) 0.0633(+16.79%) 0.1148(+11.67%) 0.0385(+22.22%) 0.0698(+12.94%) \n\n2 Layers \nNGCF \n0.1535 \n0.2238 \n0.0550 \n0.1025 \n0.0319 \n0.0622 \nLightGCN 0.1786(+16.35%) 0.2487(+11.12%) 0.0618(+12.36%) 0.1120(+9.27%) \n0.0413(+29.48%) 0.0729(+17.20%) \n\n3 Layers \nNGCF \n0.1547 \n0.2237 \n0.0549 \n0.1023 \n0.0344 \n0.0630 \nLightGCN 0.1809(+16.94%) 0.2513(+12.34%) 0.0648(+18.03%) 0.1163(+13.69%) 0.0415(+20.64%) 0.0740(+17.46%) \n\n4 Layers \nNGCF \n0.1560 \n0.2240 \n0.0548 \n0.1020 \n0.0342 \n0.0636 \nLightGCN 0.1817(+16.47%) 0.2518(+12.41%) 0.0655(+19.53%) 0.1170(+14.71%) 0.0416(+21.68%) 0.0739(+16.19%) \n*\n\nTable 4 :\n4The comparison of overall performance among LightGCN and competing methods.Dataset \nGowalla \nYelp2018 \nAmazon-Book \nMethod \nrecall \nndcg \nrecall \nndcg \nrecall \nndcg \n\n\n\nTable 5 :\n5Performance of the 3-layer LightGCN with different \nchoices of normalization schemes in graph convolution. \n\nDataset \nGowalla \nYelp2018 \nAmazon-Book \nMethod \nrecall \nndcg \nrecall \nndcg \nrecall \nndcg \n\n\n\nTable 6 :\n6Smoothness loss of the embeddings learned by \nLightGCN and MF (the lower the smoother). \n\nDataset \nGowalla Yelp2018 Amazon-book \nSmoothness of User Embeddings \nMF \n15449.3 \n16258.2 \n38034.2 \nLightGCN-single \n12872.7 \n10091.7 \n32191.1 \nSmoothness of Item Embeddings \nMF \n12106.7 \n16632.1 \n28307.9 \nLightGCN-single \n5829.0 \n6459.8 \n16866.0 \n\n\nhttps://github.com/xiangwang1223/neural_graph_collaborative_filtering\nConference'17, July 2017, Washington, DC, USA Xiangnan He, Kuan Deng, Xiang Wang, Yan Li, Yongdong Zhang, and Meng Wang\nhttps://github.com/dawenl/vae_cf\nNote that Gowalla shows the same trend with Amazon-Book, so its curves are not shown to better highlight the trend of Yelp2018 and Amazon-Book.\n\nSpectral Networks and Locally Connected Networks on Graphs. Joan Bruna, Wojciech Zaremba, Arthur Szlam, Yann Lecun, ICLR. Joan Bruna, Wojciech Zaremba, Arthur Szlam, and Yann LeCun. 2014. Spectral Networks and Locally Connected Networks on Graphs. In ICLR.\n\nCollaborative Similarity Embedding for Recommender Systems. Chih-Ming Chen, Chuan-Ju Wang, Ming-Feng Tsai, Yi-Hsuan Yang, WWW. Chih-Ming Chen, Chuan-Ju Wang, Ming-Feng Tsai, and Yi-Hsuan Yang. 2019. Collaborative Similarity Embedding for Recommender Systems. In WWW. 2637- 2643.\n\nAttentive Collaborative Filtering: Multimedia Recommendation with Item-and Component-Level Attention. Jingyuan Chen, Hanwang Zhang, Xiangnan He, Liqiang Nie, Wei Liu, Tat-Seng Chua, SIGIR. Jingyuan Chen, Hanwang Zhang, Xiangnan He, Liqiang Nie, Wei Liu, and Tat- Seng Chua. 2017. Attentive Collaborative Filtering: Multimedia Recommendation with Item-and Component-Level Attention. In SIGIR. 335-344.\n\nlambdaOpt: Learn to Regularize Recommender Models in Finer Levels. Yihong Chen, Bei Chen, Xiangnan He, Chen Gao, Yong Li, Jian-Guang Lou, Yue Wang, Yihong Chen, Bei Chen, Xiangnan He, Chen Gao, Yong Li, Jian-Guang Lou, and Yue Wang. 2019. lambdaOpt: Learn to Regularize Recommender Models in Finer Levels. In KDD. 978-986.\n\nDeep Neural Networks for YouTube Recommendations. Paul Covington, Jay Adams, Emre Sargin, RecSys. Paul Covington, Jay Adams, and Emre Sargin. 2016. Deep Neural Networks for YouTube Recommendations. In RecSys. 191-198.\n\nConvolutional Neural Networks on Graphs with Fast Localized Spectral Filtering. Micha\u00ebl Defferrard, Xavier Bresson, Pierre Vandergheynst, NeurIPS. Micha\u00ebl Defferrard, Xavier Bresson, and Pierre Vandergheynst. 2016. Convolutional Neural Networks on Graphs with Fast Localized Spectral Filtering. In NeurIPS. 3837-3845.\n\nReinforced Negative Sampling for Recommendation with Exposure Data. Jingtao Ding, Yuhan Quan, Xiangnan He, Yong Li, Depeng Jin, IJCAI. Jingtao Ding, Yuhan Quan, Xiangnan He, Yong Li, and Depeng Jin. 2019. Reinforced Negative Sampling for Recommendation with Exposure Data. In IJCAI. 2230-2236.\n\nCollaborative Memory Network for Recommendation Systems. Travis Ebesu, Bin Shen, Yi Fang, SIGIR. Travis Ebesu, Bin Shen, and Yi Fang. 2018. Collaborative Memory Network for Recommendation Systems. In SIGIR. 515-524.\n\nTemporal Relational Ranking for Stock Prediction. Fuli Feng, Xiangnan He, Xiang Wang, Cheng Luo, Yiqun Liu, Tat-Seng Chua, TOIS. 3730Fuli Feng, Xiangnan He, Xiang Wang, Cheng Luo, Yiqun Liu, and Tat-Seng Chua. 2019. Temporal Relational Ranking for Stock Prediction. TOIS 37, 2 (2019), 27:1-27:30.\n\nUnderstanding the difficulty of training deep feedforward neural networks. Xavier Glorot, Yoshua Bengio, AISTATS. Xavier Glorot and Yoshua Bengio. 2010. Understanding the difficulty of training deep feedforward neural networks. In AISTATS. 249-256.\n\nItemRank: A Random-Walk Based Scoring Algorithm for Recommender Engines. Marco Gori, Augusto Pucci, IJCAI. Marco Gori and Augusto Pucci. 2007. ItemRank: A Random-Walk Based Scoring Algorithm for Recommender Engines. In IJCAI. 2766-2771.\n\nInductive Representation Learning on Large Graphs. William L Hamilton, Zhitao Ying, Jure Leskovec, NeurIPS. William L. Hamilton, Zhitao Ying, and Jure Leskovec. 2017. Inductive Representation Learning on Large Graphs. In NeurIPS. 1025-1035.\n\nTopic-sensitive pagerank. H Taher, Haveliwala, WWW. Taher H Haveliwala. 2002. Topic-sensitive pagerank. In WWW. 517-526.\n\nDeep residual learning for image recognition. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, CVPR. Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. 2016. Deep residual learning for image recognition. In CVPR. 770-778.\n\nNeural Factorization Machines for Sparse Predictive Analytics. Xiangnan He, Tat-Seng Chua, SIGIR. Xiangnan He and Tat-Seng Chua. 2017. Neural Factorization Machines for Sparse Predictive Analytics. In SIGIR. 355-364.\n\n. Xiangnan He, Ming Gao, Min-Yen Kan, Dingxian Wang, BiRank: Towards Ranking on Bipartite Graphs. TKDE. 29Xiangnan He, Ming Gao, Min-Yen Kan, and Dingxian Wang. 2017. BiRank: Towards Ranking on Bipartite Graphs. TKDE 29, 1 (2017), 57-71.\n\nXiangnan He, Zhankui He, Jingkuan Song, Zhenguang Liu, Yu-Gang Jiang, Tat-Seng Chua, NAIS: Neural Attentive Item Similarity Model for Recommendation. 30Xiangnan He, Zhankui He, Jingkuan Song, Zhenguang Liu, Yu-Gang Jiang, and Tat-Seng Chua. 2018. NAIS: Neural Attentive Item Similarity Model for Recommendation. TKDE 30, 12 (2018), 2354-2366.\n\n. Xiangnan He, Lizi Liao, Hanwang Zhang, Liqiang Nie, Xia Hu, Tat-Seng Chua, Neural Collaborative Filtering. In WWW. Xiangnan He, Lizi Liao, Hanwang Zhang, Liqiang Nie, Xia Hu, and Tat-Seng Chua. 2017. Neural Collaborative Filtering. In WWW. 173-182.\n\nFISM: factored item similarity models for top-N recommender systems. Santosh Kabbur, Xia Ning, George Karypis, KDD. Santosh Kabbur, Xia Ning, and George Karypis. 2013. FISM: factored item similarity models for top-N recommender systems. In KDD. 659-667.\n\nAdam: A Method for Stochastic Optimization. P Diederik, Jimmy Kingma, Ba, ICLR. Diederik P. Kingma and Jimmy Ba. 2015. Adam: A Method for Stochastic Optimization. In ICLR.\n\nSemi-Supervised Classification with Graph Convolutional Networks. N Thomas, Max Kipf, Welling, ICLR. Thomas N. Kipf and Max Welling. 2017. Semi-Supervised Classification with Graph Convolutional Networks. In ICLR.\n\nPredict then propagate: Graph neural networks meet personalized pagerank. Johannes Klicpera, Aleksandar Bojchevski, Stephan G\u00fcnnemann, ICLR. Johannes Klicpera, Aleksandar Bojchevski, and Stephan G\u00fcnnemann. 2019. Predict then propagate: Graph neural networks meet personalized pagerank. In ICLR.\n\nFactorization meets the neighborhood: a multifaceted collaborative filtering model. Yehuda Koren, KDD. Yehuda Koren. 2008. Factorization meets the neighborhood: a multifaceted collaborative filtering model. In KDD. 426-434.\n\nMatrix Factorization Techniques for Recommender Systems. Yehuda Koren, Robert M Bell, Chris Volinsky, IEEE Computer. 42Yehuda Koren, Robert M. Bell, and Chris Volinsky. 2009. Matrix Factorization Techniques for Recommender Systems. IEEE Computer 42, 8 (2009), 30-37.\n\nDeeper Insights Into Graph Convolutional Networks for Semi-Supervised Learning. Qimai Li, Zhichao Han, Xiao-Ming Wu, AAAI. Qimai Li, Zhichao Han, and Xiao-Ming Wu. 2018. Deeper Insights Into Graph Convolutional Networks for Semi-Supervised Learning. In AAAI. 3538-3545.\n\nVariational Autoencoders for Collaborative Filtering. Dawen Liang, Rahul G Krishnan, Matthew D Hoffman, Tony Jebara, WWW. Dawen Liang, Rahul G. Krishnan, Matthew D. Hoffman, and Tony Jebara. 2018. Variational Autoencoders for Collaborative Filtering. In WWW. 689-698.\n\nDeepInf: Social Influence Prediction with Deep Learning. Jiezhong Qiu, Jian Tang, Hao Ma, Yuxiao Dong, Kuansan Wang, Jie Tang, KDD. Jiezhong Qiu, Jian Tang, Hao Ma, Yuxiao Dong, Kuansan Wang, and Jie Tang. 2018. DeepInf: Social Influence Prediction with Deep Learning. In KDD. 2110-2119.\n\nCollaborative filtering with graph information: Consistency and scalable methods. Nikhil Rao, Hsiang-Fu Yu, K Pradeep, Ravikumar, Dhillon, NIPS. Nikhil Rao, Hsiang-Fu Yu, Pradeep K Ravikumar, and Inderjit S Dhillon. 2015. Collaborative filtering with graph information: Consistency and scalable methods. In NIPS. 2107-2115.\n\nImproving pairwise learning for item recommendation from implicit feedback. Steffen Rendle, Christoph Freudenthaler, WSDM. Steffen Rendle and Christoph Freudenthaler. 2014. Improving pairwise learning for item recommendation from implicit feedback. In WSDM. 273-282.\n\nBPR: Bayesian Personalized Ranking from Implicit Feedback. Steffen Rendle, Christoph Freudenthaler, Zeno Gantner, Lars Schmidt-Thieme, UAI. Steffen Rendle, Christoph Freudenthaler, Zeno Gantner, and Lars Schmidt-Thieme. 2009. BPR: Bayesian Personalized Ranking from Implicit Feedback. In UAI. 452- 461.\n\nFast context-aware recommendations with factorization machines. Zeno Steffen Rendle, Christoph Gantner, Lars Freudenthaler, Schmidt-Thieme, SIGIR. Steffen Rendle, Zeno Gantner, Christoph Freudenthaler, and Lars Schmidt-Thieme. 2011. Fast context-aware recommendations with factorization machines. In SIGIR. 635-644.\n\nLatent relational metric learning via memory-based attention for collaborative ranking. Yi Tay, Anh Luu, Siu Cheung Tuan, Hui, Yi Tay, Luu Anh Tuan, and Siu Cheung Hui. 2018. Latent relational metric learning via memory-based attention for collaborative ranking. In WWW. 729-739.\n\nGraph Convolutional Matrix Completion. Rianne Van Den, Thomas N Berg, Max Kipf, Welling, KDD Workshop on Deep Learning Day. Rianne van den Berg, Thomas N. Kipf, and Max Welling. 2018. Graph Convolutional Matrix Completion. In KDD Workshop on Deep Learning Day.\n\nGraph Attention Networks. Petar Velickovic, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Li\u00f2, Yoshua Bengio, ICLR. Petar Velickovic, Guillem Cucurull, Arantxa Casanova, Adriana Romero, Pietro Li\u00f2, and Yoshua Bengio. 2018. Graph Attention Networks. In ICLR.\n\nKnowledge Graph Convolutional Networks for Recommender Systems. Hongwei Wang, Miao Zhao, Xing Xie, Wenjie Li, Minyi Guo, Hongwei Wang, Miao Zhao, Xing Xie, Wenjie Li, and Minyi Guo. 2019. Knowledge Graph Convolutional Networks for Recommender Systems. In WWW. 3307-3313.\n\nUnifying User-based and Item-based Collaborative Filtering Approaches by Similarity Fusion. Jun Wang, P Arjen, Marcel J T De Vries, Reinders, SIGIR. Jun Wang, Arjen P. de Vries, and Marcel J. T. Reinders. 2006. Unifying User-based and Item-based Collaborative Filtering Approaches by Similarity Fusion. In SIGIR. 501-508.\n\nBillion-scale Commodity Embedding for E-commerce Recommendation in Alibaba. Jizhe Wang, Pipei Huang, Huan Zhao, Zhibo Zhang, Binqiang Zhao, Dik Lun Lee, Jizhe Wang, Pipei Huang, Huan Zhao, Zhibo Zhang, Binqiang Zhao, and Dik Lun Lee. 2018. Billion-scale Commodity Embedding for E-commerce Recommendation in Alibaba. In KDD. 839-848.\n\nKGAT: Knowledge Graph Attention Network for Recommendation. Xiang Wang, Xiangnan He, Yixin Cao, Meng Liu, Tat-Seng Chua, Xiang Wang, Xiangnan He, Yixin Cao, Meng Liu, and Tat-Seng Chua. 2019. KGAT: Knowledge Graph Attention Network for Recommendation. In KDD. 950-958.\n\nNeural Graph Collaborative Filtering. Xiang Wang, Xiangnan He, Meng Wang, Fuli Feng, Tat-Seng Chua, SIGIR. Xiang Wang, Xiangnan He, Meng Wang, Fuli Feng, and Tat-Seng Chua. 2019. Neural Graph Collaborative Filtering. In SIGIR. 165-174.\n\nSimplifying Graph Convolutional Networks. Felix Wu, Amauri H SouzaJr, Tianyi Zhang, Christopher Fifty, Tao Yu, Kilian Q Weinberger, Felix Wu, Amauri H. Souza Jr., Tianyi Zhang, Christopher Fifty, Tao Yu, and Kilian Q. Weinberger. 2019. Simplifying Graph Convolutional Networks. In ICML. 6861-6871.\n\nA Neural Influence Diffusion Model for Social Recommendation. Le Wu, Peijie Sun, Yanjie Fu, Richang Hong, Xiting Wang, Meng Wang, SIGIR. Le Wu, Peijie Sun, Yanjie Fu, Richang Hong, Xiting Wang, and Meng Wang. 2019. A Neural Influence Diffusion Model for Social Recommendation. In SIGIR. 235-244.\n\nHow powerful are graph neural networks?. Keyulu Xu, Weihua Hu, Jure Leskovec, Stefanie Jegelka, In ICLRKeyulu Xu, Weihua Hu, Jure Leskovec, and Stefanie Jegelka. 2018. How powerful are graph neural networks?. In ICLR.\n\nDeep Item-based Collaborative Filtering for Top-N Recommendation. Feng Xue, Xiangnan He, Xiang Wang, Jiandong Xu, Kai Liu, Richang Hong, TOIS. 3725Feng Xue, Xiangnan He, Xiang Wang, Jiandong Xu, Kai Liu, and Richang Hong. 2019. Deep Item-based Collaborative Filtering for Top-N Recommendation. TOIS 37, 3 (2019), 33:1-33:25.\n\nHOP-rec: high-order proximity for implicit recommendation. Jheng-Hong Yang, Chih-Ming Chen, Chuan-Ju Wang, Ming-Feng Tsai, RecSys. Jheng-Hong Yang, Chih-Ming Chen, Chuan-Ju Wang, and Ming-Feng Tsai. 2018. HOP-rec: high-order proximity for implicit recommendation. In RecSys. 140-144.\n\nMMGCN: Multimodal Graph Convolution Network for Personalized Recommendation of Micro-video. Yinwei Yin, Xiang Wang, Liqiang Nie, MM. Xiangnan He, Richang Hong, and Tat-Seng ChuaYinwei Yin, Xiang Wang, Liqiang Nie, Xiangnan He, Richang Hong, and Tat-Seng Chua. 2019. MMGCN: Multimodal Graph Convolution Network for Personalized Recommendation of Micro-video. In MM.\n\nGraph Convolutional Neural Networks for Web-Scale Recommender Systems. Rex Ying, Ruining He, Kaifeng Chen, Pong Eksombatchai, William L Hamilton, Jure Leskovec, KDD (Data Science track. Rex Ying, Ruining He, Kaifeng Chen, Pong Eksombatchai, William L. Hamilton, and Jure Leskovec. 2018. Graph Convolutional Neural Networks for Web-Scale Recommender Systems. In KDD (Data Science track). 974-983.\n", "annotations": {"author": "[{\"end\":125,\"start\":92},{\"end\":162,\"start\":126},{\"end\":194,\"start\":163},{\"end\":221,\"start\":195},{\"end\":237,\"start\":222},{\"end\":248,\"start\":238},{\"end\":261,\"start\":249},{\"end\":272,\"start\":262},{\"end\":284,\"start\":273},{\"end\":292,\"start\":285},{\"end\":308,\"start\":293},{\"end\":319,\"start\":309},{\"end\":413,\"start\":320},{\"end\":507,\"start\":414},{\"end\":541,\"start\":508}]", "publisher": null, "author_last_name": "[{\"end\":103,\"start\":101},{\"end\":135,\"start\":131},{\"end\":173,\"start\":169},{\"end\":201,\"start\":199},{\"end\":236,\"start\":231},{\"end\":247,\"start\":243},{\"end\":260,\"start\":258},{\"end\":271,\"start\":267},{\"end\":283,\"start\":279},{\"end\":291,\"start\":289},{\"end\":307,\"start\":302},{\"end\":318,\"start\":314}]", "author_first_name": "[{\"end\":100,\"start\":92},{\"end\":130,\"start\":126},{\"end\":168,\"start\":163},{\"end\":198,\"start\":195},{\"end\":230,\"start\":222},{\"end\":242,\"start\":238},{\"end\":257,\"start\":249},{\"end\":266,\"start\":262},{\"end\":278,\"start\":273},{\"end\":288,\"start\":285},{\"end\":301,\"start\":293},{\"end\":313,\"start\":309}]", "author_affiliation": "[{\"end\":412,\"start\":321},{\"end\":506,\"start\":415},{\"end\":540,\"start\":509}]", "title": "[{\"end\":80,\"start\":1},{\"end\":621,\"start\":542}]", "venue": null, "abstract": "[{\"end\":2706,\"start\":1089}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2861,\"start\":2858},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":2864,\"start\":2861},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3226,\"start\":3223},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3229,\"start\":3226},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3232,\"start\":3229},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":3235,\"start\":3232},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3408,\"start\":3404},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":3524,\"start\":3520},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":3527,\"start\":3524},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":3692,\"start\":3688},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":3833,\"start\":3829},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":4236,\"start\":4232},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4376,\"start\":4372},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4379,\"start\":4376},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5238,\"start\":5234},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6562,\"start\":6558},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":7223,\"start\":7219},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8513,\"start\":8509},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":10709,\"start\":10705},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":14077,\"start\":14073},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":14080,\"start\":14077},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":14575,\"start\":14571},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":14588,\"start\":14584},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":14643,\"start\":14639},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":15652,\"start\":15648},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":15872,\"start\":15868},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":16353,\"start\":16349},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":16356,\"start\":16353},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":16359,\"start\":16356},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":16362,\"start\":16359},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":17321,\"start\":17318},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":17772,\"start\":17768},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":18115,\"start\":18111},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":19760,\"start\":19756},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":20142,\"start\":20138},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":20245,\"start\":20241},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":20621,\"start\":20617},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":21607,\"start\":21603},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":21664,\"start\":21660},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":22835,\"start\":22834},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":24335,\"start\":24332},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":24338,\"start\":24335},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":24741,\"start\":24737},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25013,\"start\":25009},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":25201,\"start\":25197},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":25230,\"start\":25227},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":26252,\"start\":26249},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":26583,\"start\":26579},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":27087,\"start\":27083},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":27890,\"start\":27886},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":27907,\"start\":27903},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":27947,\"start\":27943},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":27959,\"start\":27956},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":27999,\"start\":27995},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":28016,\"start\":28012},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":28249,\"start\":28245},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":28492,\"start\":28491},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":28505,\"start\":28501},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28725,\"start\":28721},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":28762,\"start\":28758},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":30995,\"start\":30991},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":36331,\"start\":36327},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":37654,\"start\":37653},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":38258,\"start\":38255},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":38261,\"start\":38258},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":38498,\"start\":38494},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":38501,\"start\":38498},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":38616,\"start\":38612},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":38630,\"start\":38626},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":38916,\"start\":38912},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":38931,\"start\":38927},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":39246,\"start\":39243},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":39257,\"start\":39253},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":39275,\"start\":39271},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39722,\"start\":39718},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":39738,\"start\":39734},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":40051,\"start\":40047},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":40054,\"start\":40051},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":40160,\"start\":40157},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":40190,\"start\":40187},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":40253,\"start\":40249},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":40266,\"start\":40262},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":40528,\"start\":40525},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":40531,\"start\":40528},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":40610,\"start\":40606},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":40622,\"start\":40618},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":40640,\"start\":40636},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":40838,\"start\":40834},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":40841,\"start\":40838},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":40844,\"start\":40841},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":40912,\"start\":40908},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":42817,\"start\":42813},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":42820,\"start\":42817},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":42997,\"start\":42993},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":43000,\"start\":42997},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":43135,\"start\":43131},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":43138,\"start\":43135},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":43159,\"start\":43155},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":43187,\"start\":43183},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":46445,\"start\":46441}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":43988,\"start\":43941},{\"attributes\":{\"id\":\"fig_2\"},\"end\":44095,\"start\":43989},{\"attributes\":{\"id\":\"fig_3\"},\"end\":44161,\"start\":44096},{\"attributes\":{\"id\":\"fig_5\"},\"end\":44318,\"start\":44162},{\"attributes\":{\"id\":\"fig_6\"},\"end\":44545,\"start\":44319},{\"attributes\":{\"id\":\"fig_8\"},\"end\":44790,\"start\":44546},{\"attributes\":{\"id\":\"fig_9\"},\"end\":44924,\"start\":44791},{\"attributes\":{\"id\":\"fig_10\"},\"end\":45040,\"start\":44925},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":45403,\"start\":45041},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":45648,\"start\":45404},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":46275,\"start\":45649},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":47280,\"start\":46276},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":47460,\"start\":47281},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":47674,\"start\":47461},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":48027,\"start\":47675}]", "paragraph": "[{\"end\":3236,\"start\":2722},{\"end\":4153,\"start\":3238},{\"end\":5323,\"start\":4155},{\"end\":6563,\"start\":5325},{\"end\":6628,\"start\":6565},{\"end\":7061,\"start\":6630},{\"end\":7177,\"start\":7063},{\"end\":7572,\"start\":7195},{\"end\":7670,\"start\":7587},{\"end\":8469,\"start\":7881},{\"end\":9313,\"start\":8471},{\"end\":9856,\"start\":9348},{\"end\":10088,\"start\":9923},{\"end\":10275,\"start\":10090},{\"end\":10378,\"start\":10277},{\"end\":11129,\"start\":10380},{\"end\":11289,\"start\":11131},{\"end\":11452,\"start\":11291},{\"end\":11685,\"start\":11454},{\"end\":12274,\"start\":11687},{\"end\":13184,\"start\":12276},{\"end\":13671,\"start\":13195},{\"end\":13961,\"start\":13673},{\"end\":14281,\"start\":13974},{\"end\":14945,\"start\":14337},{\"end\":15067,\"start\":14980},{\"end\":15446,\"start\":15208},{\"end\":15547,\"start\":15448},{\"end\":15680,\"start\":15549},{\"end\":15810,\"start\":15778},{\"end\":16647,\"start\":15833},{\"end\":17035,\"start\":16691},{\"end\":17353,\"start\":17094},{\"end\":18367,\"start\":17355},{\"end\":18462,\"start\":18369},{\"end\":18548,\"start\":18483},{\"end\":18918,\"start\":18565},{\"end\":19086,\"start\":18938},{\"end\":19392,\"start\":19128},{\"end\":20590,\"start\":19598},{\"end\":20868,\"start\":20614},{\"end\":21257,\"start\":20927},{\"end\":21561,\"start\":21370},{\"end\":22171,\"start\":21586},{\"end\":22421,\"start\":22213},{\"end\":23034,\"start\":22590},{\"end\":23219,\"start\":23036},{\"end\":23586,\"start\":23258},{\"end\":23839,\"start\":23683},{\"end\":24475,\"start\":23892},{\"end\":24866,\"start\":24494},{\"end\":26475,\"start\":24940},{\"end\":26945,\"start\":26491},{\"end\":27751,\"start\":26971},{\"end\":28232,\"start\":27773},{\"end\":29478,\"start\":28234},{\"end\":29992,\"start\":29612},{\"end\":31953,\"start\":29994},{\"end\":32121,\"start\":31985},{\"end\":32860,\"start\":32123},{\"end\":33509,\"start\":32900},{\"end\":34847,\"start\":33542},{\"end\":34942,\"start\":34891},{\"end\":35570,\"start\":34973},{\"end\":36068,\"start\":35572},{\"end\":36496,\"start\":36106},{\"end\":37212,\"start\":36565},{\"end\":38126,\"start\":37240},{\"end\":38725,\"start\":38171},{\"end\":39554,\"start\":38727},{\"end\":40749,\"start\":39591},{\"end\":41742,\"start\":40751},{\"end\":42575,\"start\":41773},{\"end\":43940,\"start\":42577}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7868,\"start\":7671},{\"attributes\":{\"id\":\"formula_1\"},\"end\":7880,\"start\":7868},{\"attributes\":{\"id\":\"formula_2\"},\"end\":9922,\"start\":9857},{\"attributes\":{\"id\":\"formula_3\"},\"end\":14336,\"start\":14282},{\"attributes\":{\"id\":\"formula_4\"},\"end\":15172,\"start\":15068},{\"attributes\":{\"id\":\"formula_5\"},\"end\":15777,\"start\":15681},{\"attributes\":{\"id\":\"formula_6\"},\"end\":15832,\"start\":15811},{\"attributes\":{\"id\":\"formula_7\"},\"end\":17093,\"start\":17036},{\"attributes\":{\"id\":\"formula_8\"},\"end\":18482,\"start\":18463},{\"attributes\":{\"id\":\"formula_9\"},\"end\":18937,\"start\":18919},{\"attributes\":{\"id\":\"formula_10\"},\"end\":19127,\"start\":19087},{\"attributes\":{\"id\":\"formula_11\"},\"end\":19515,\"start\":19393},{\"attributes\":{\"id\":\"formula_12\"},\"end\":19580,\"start\":19515},{\"attributes\":{\"id\":\"formula_13\"},\"end\":20926,\"start\":20869},{\"attributes\":{\"id\":\"formula_14\"},\"end\":21369,\"start\":21258},{\"attributes\":{\"id\":\"formula_15\"},\"end\":22212,\"start\":22172},{\"attributes\":{\"id\":\"formula_16\"},\"end\":22589,\"start\":22422},{\"attributes\":{\"id\":\"formula_17\"},\"end\":23682,\"start\":23587},{\"attributes\":{\"id\":\"formula_18\"},\"end\":23891,\"start\":23840},{\"attributes\":{\"id\":\"formula_19\"},\"end\":24939,\"start\":24867},{\"attributes\":{\"id\":\"formula_20\"},\"end\":29576,\"start\":29479},{\"attributes\":{\"id\":\"formula_21\"},\"end\":34972,\"start\":34943},{\"attributes\":{\"id\":\"formula_22\"},\"end\":36564,\"start\":36497}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":10637,\"start\":10629},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":10701,\"start\":10693},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":11744,\"start\":11737},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":27219,\"start\":27212},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":29719,\"start\":29712},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":30374,\"start\":30367},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":30387,\"start\":30380},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":32010,\"start\":32003},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":35491,\"start\":35484},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":36725,\"start\":36718}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2720,\"start\":2708},{\"attributes\":{\"n\":\"2\"},\"end\":7193,\"start\":7180},{\"attributes\":{\"n\":\"2.1\"},\"end\":7585,\"start\":7575},{\"attributes\":{\"n\":\"2.2\"},\"end\":9346,\"start\":9316},{\"attributes\":{\"n\":\"3\"},\"end\":13193,\"start\":13187},{\"attributes\":{\"n\":\"3.1\"},\"end\":13972,\"start\":13964},{\"attributes\":{\"n\":\"3.1.1\"},\"end\":14978,\"start\":14948},{\"end\":15206,\"start\":15174},{\"attributes\":{\"n\":\"3.1.2\"},\"end\":16689,\"start\":16650},{\"attributes\":{\"n\":\"3.1.3\"},\"end\":18563,\"start\":18551},{\"attributes\":{\"n\":\"3.2\"},\"end\":19596,\"start\":19582},{\"attributes\":{\"n\":\"3.2.1\"},\"end\":20612,\"start\":20593},{\"attributes\":{\"n\":\"3.2.2\"},\"end\":21584,\"start\":21564},{\"attributes\":{\"n\":\"3.2.3\"},\"end\":23256,\"start\":23222},{\"attributes\":{\"n\":\"3.3\"},\"end\":24492,\"start\":24478},{\"attributes\":{\"n\":\"4\"},\"end\":26489,\"start\":26478},{\"attributes\":{\"n\":\"4.1\"},\"end\":26969,\"start\":26948},{\"attributes\":{\"n\":\"4.1.1\"},\"end\":27771,\"start\":27754},{\"attributes\":{\"n\":\"4.2\"},\"end\":29610,\"start\":29578},{\"attributes\":{\"n\":\"4.3\"},\"end\":31983,\"start\":31956},{\"attributes\":{\"n\":\"4.4\"},\"end\":32898,\"start\":32863},{\"attributes\":{\"n\":\"4.4.1\"},\"end\":33540,\"start\":33512},{\"attributes\":{\"n\":\"4.4.2\"},\"end\":34889,\"start\":34850},{\"attributes\":{\"n\":\"4.4.3\"},\"end\":36104,\"start\":36071},{\"attributes\":{\"n\":\"4.5\"},\"end\":37238,\"start\":37215},{\"attributes\":{\"n\":\"5\"},\"end\":38169,\"start\":38129},{\"attributes\":{\"n\":\"5.2\"},\"end\":39589,\"start\":39557},{\"attributes\":{\"n\":\"6\"},\"end\":41771,\"start\":41745},{\"end\":43943,\"start\":43942},{\"end\":44000,\"start\":43990},{\"end\":44111,\"start\":44097},{\"end\":44330,\"start\":44320},{\"end\":44557,\"start\":44547},{\"end\":44936,\"start\":44926},{\"end\":45051,\"start\":45042},{\"end\":45414,\"start\":45405},{\"end\":46286,\"start\":46277},{\"end\":47291,\"start\":47282},{\"end\":47471,\"start\":47462},{\"end\":47685,\"start\":47676}]", "table": "[{\"end\":45403,\"start\":45209},{\"end\":45648,\"start\":45452},{\"end\":46275,\"start\":45812},{\"end\":47280,\"start\":46495},{\"end\":47460,\"start\":47368},{\"end\":47674,\"start\":47473},{\"end\":48027,\"start\":47687}]", "figure_caption": "[{\"end\":43988,\"start\":43944},{\"end\":44095,\"start\":44002},{\"end\":44161,\"start\":44114},{\"end\":44318,\"start\":44164},{\"end\":44545,\"start\":44332},{\"end\":44790,\"start\":44559},{\"end\":44924,\"start\":44793},{\"end\":45040,\"start\":44938},{\"end\":45209,\"start\":45053},{\"end\":45452,\"start\":45416},{\"end\":45812,\"start\":45651},{\"end\":46495,\"start\":46288},{\"end\":47368,\"start\":47293}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":11898,\"start\":11890},{\"end\":13796,\"start\":13788},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":29876,\"start\":29868},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":32357,\"start\":32349},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":33210,\"start\":33202},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":37502,\"start\":37494}]", "bib_author_first_name": "[{\"end\":48460,\"start\":48456},{\"end\":48476,\"start\":48468},{\"end\":48492,\"start\":48486},{\"end\":48504,\"start\":48500},{\"end\":48723,\"start\":48714},{\"end\":48738,\"start\":48730},{\"end\":48754,\"start\":48745},{\"end\":48769,\"start\":48761},{\"end\":49044,\"start\":49036},{\"end\":49058,\"start\":49051},{\"end\":49074,\"start\":49066},{\"end\":49086,\"start\":49079},{\"end\":49095,\"start\":49092},{\"end\":49109,\"start\":49101},{\"end\":49409,\"start\":49403},{\"end\":49419,\"start\":49416},{\"end\":49434,\"start\":49426},{\"end\":49443,\"start\":49439},{\"end\":49453,\"start\":49449},{\"end\":49468,\"start\":49458},{\"end\":49477,\"start\":49474},{\"end\":49714,\"start\":49710},{\"end\":49729,\"start\":49726},{\"end\":49741,\"start\":49737},{\"end\":49966,\"start\":49959},{\"end\":49985,\"start\":49979},{\"end\":50001,\"start\":49995},{\"end\":50273,\"start\":50266},{\"end\":50285,\"start\":50280},{\"end\":50300,\"start\":50292},{\"end\":50309,\"start\":50305},{\"end\":50320,\"start\":50314},{\"end\":50556,\"start\":50550},{\"end\":50567,\"start\":50564},{\"end\":50576,\"start\":50574},{\"end\":50764,\"start\":50760},{\"end\":50779,\"start\":50771},{\"end\":50789,\"start\":50784},{\"end\":50801,\"start\":50796},{\"end\":50812,\"start\":50807},{\"end\":50826,\"start\":50818},{\"end\":51089,\"start\":51083},{\"end\":51104,\"start\":51098},{\"end\":51336,\"start\":51331},{\"end\":51350,\"start\":51343},{\"end\":51554,\"start\":51547},{\"end\":51556,\"start\":51555},{\"end\":51573,\"start\":51567},{\"end\":51584,\"start\":51580},{\"end\":51765,\"start\":51764},{\"end\":51913,\"start\":51906},{\"end\":51925,\"start\":51918},{\"end\":51941,\"start\":51933},{\"end\":51951,\"start\":51947},{\"end\":52160,\"start\":52152},{\"end\":52173,\"start\":52165},{\"end\":52317,\"start\":52309},{\"end\":52326,\"start\":52322},{\"end\":52339,\"start\":52332},{\"end\":52353,\"start\":52345},{\"end\":52554,\"start\":52546},{\"end\":52566,\"start\":52559},{\"end\":52579,\"start\":52571},{\"end\":52595,\"start\":52586},{\"end\":52608,\"start\":52601},{\"end\":52624,\"start\":52616},{\"end\":52900,\"start\":52892},{\"end\":52909,\"start\":52905},{\"end\":52923,\"start\":52916},{\"end\":52938,\"start\":52931},{\"end\":52947,\"start\":52944},{\"end\":52960,\"start\":52952},{\"end\":53218,\"start\":53211},{\"end\":53230,\"start\":53227},{\"end\":53243,\"start\":53237},{\"end\":53442,\"start\":53441},{\"end\":53458,\"start\":53453},{\"end\":53637,\"start\":53636},{\"end\":53649,\"start\":53646},{\"end\":53867,\"start\":53859},{\"end\":53888,\"start\":53878},{\"end\":53908,\"start\":53901},{\"end\":54171,\"start\":54165},{\"end\":54369,\"start\":54363},{\"end\":54383,\"start\":54377},{\"end\":54385,\"start\":54384},{\"end\":54397,\"start\":54392},{\"end\":54659,\"start\":54654},{\"end\":54671,\"start\":54664},{\"end\":54686,\"start\":54677},{\"end\":54904,\"start\":54899},{\"end\":54917,\"start\":54912},{\"end\":54919,\"start\":54918},{\"end\":54937,\"start\":54930},{\"end\":54939,\"start\":54938},{\"end\":54953,\"start\":54949},{\"end\":55179,\"start\":55171},{\"end\":55189,\"start\":55185},{\"end\":55199,\"start\":55196},{\"end\":55210,\"start\":55204},{\"end\":55224,\"start\":55217},{\"end\":55234,\"start\":55231},{\"end\":55491,\"start\":55485},{\"end\":55506,\"start\":55497},{\"end\":55512,\"start\":55511},{\"end\":55811,\"start\":55804},{\"end\":55829,\"start\":55820},{\"end\":56062,\"start\":56055},{\"end\":56080,\"start\":56071},{\"end\":56100,\"start\":56096},{\"end\":56114,\"start\":56110},{\"end\":56368,\"start\":56364},{\"end\":56394,\"start\":56385},{\"end\":56408,\"start\":56404},{\"end\":56707,\"start\":56705},{\"end\":56716,\"start\":56713},{\"end\":56732,\"start\":56722},{\"end\":56943,\"start\":56937},{\"end\":56959,\"start\":56953},{\"end\":56961,\"start\":56960},{\"end\":56971,\"start\":56968},{\"end\":57191,\"start\":57186},{\"end\":57211,\"start\":57204},{\"end\":57229,\"start\":57222},{\"end\":57247,\"start\":57240},{\"end\":57262,\"start\":57256},{\"end\":57274,\"start\":57268},{\"end\":57503,\"start\":57496},{\"end\":57514,\"start\":57510},{\"end\":57525,\"start\":57521},{\"end\":57537,\"start\":57531},{\"end\":57547,\"start\":57542},{\"end\":57799,\"start\":57796},{\"end\":57807,\"start\":57806},{\"end\":57821,\"start\":57815},{\"end\":57825,\"start\":57822},{\"end\":58108,\"start\":58103},{\"end\":58120,\"start\":58115},{\"end\":58132,\"start\":58128},{\"end\":58144,\"start\":58139},{\"end\":58160,\"start\":58152},{\"end\":58174,\"start\":58167},{\"end\":58426,\"start\":58421},{\"end\":58441,\"start\":58433},{\"end\":58451,\"start\":58446},{\"end\":58461,\"start\":58457},{\"end\":58475,\"start\":58467},{\"end\":58674,\"start\":58669},{\"end\":58689,\"start\":58681},{\"end\":58698,\"start\":58694},{\"end\":58709,\"start\":58705},{\"end\":58724,\"start\":58716},{\"end\":58915,\"start\":58910},{\"end\":58926,\"start\":58920},{\"end\":58928,\"start\":58927},{\"end\":58944,\"start\":58938},{\"end\":58963,\"start\":58952},{\"end\":58974,\"start\":58971},{\"end\":58985,\"start\":58979},{\"end\":58987,\"start\":58986},{\"end\":59231,\"start\":59229},{\"end\":59242,\"start\":59236},{\"end\":59254,\"start\":59248},{\"end\":59266,\"start\":59259},{\"end\":59279,\"start\":59273},{\"end\":59290,\"start\":59286},{\"end\":59511,\"start\":59505},{\"end\":59522,\"start\":59516},{\"end\":59531,\"start\":59527},{\"end\":59550,\"start\":59542},{\"end\":59753,\"start\":59749},{\"end\":59767,\"start\":59759},{\"end\":59777,\"start\":59772},{\"end\":59792,\"start\":59784},{\"end\":59800,\"start\":59797},{\"end\":59813,\"start\":59806},{\"end\":60078,\"start\":60068},{\"end\":60094,\"start\":60085},{\"end\":60109,\"start\":60101},{\"end\":60125,\"start\":60116},{\"end\":60392,\"start\":60386},{\"end\":60403,\"start\":60398},{\"end\":60417,\"start\":60410},{\"end\":60734,\"start\":60731},{\"end\":60748,\"start\":60741},{\"end\":60760,\"start\":60753},{\"end\":60771,\"start\":60767},{\"end\":60793,\"start\":60786},{\"end\":60795,\"start\":60794},{\"end\":60810,\"start\":60806}]", "bib_author_last_name": "[{\"end\":48466,\"start\":48461},{\"end\":48484,\"start\":48477},{\"end\":48498,\"start\":48493},{\"end\":48510,\"start\":48505},{\"end\":48728,\"start\":48724},{\"end\":48743,\"start\":48739},{\"end\":48759,\"start\":48755},{\"end\":48774,\"start\":48770},{\"end\":49049,\"start\":49045},{\"end\":49064,\"start\":49059},{\"end\":49077,\"start\":49075},{\"end\":49090,\"start\":49087},{\"end\":49099,\"start\":49096},{\"end\":49114,\"start\":49110},{\"end\":49414,\"start\":49410},{\"end\":49424,\"start\":49420},{\"end\":49437,\"start\":49435},{\"end\":49447,\"start\":49444},{\"end\":49456,\"start\":49454},{\"end\":49472,\"start\":49469},{\"end\":49482,\"start\":49478},{\"end\":49724,\"start\":49715},{\"end\":49735,\"start\":49730},{\"end\":49748,\"start\":49742},{\"end\":49977,\"start\":49967},{\"end\":49993,\"start\":49986},{\"end\":50015,\"start\":50002},{\"end\":50278,\"start\":50274},{\"end\":50290,\"start\":50286},{\"end\":50303,\"start\":50301},{\"end\":50312,\"start\":50310},{\"end\":50324,\"start\":50321},{\"end\":50562,\"start\":50557},{\"end\":50572,\"start\":50568},{\"end\":50581,\"start\":50577},{\"end\":50769,\"start\":50765},{\"end\":50782,\"start\":50780},{\"end\":50794,\"start\":50790},{\"end\":50805,\"start\":50802},{\"end\":50816,\"start\":50813},{\"end\":50831,\"start\":50827},{\"end\":51096,\"start\":51090},{\"end\":51111,\"start\":51105},{\"end\":51341,\"start\":51337},{\"end\":51356,\"start\":51351},{\"end\":51565,\"start\":51557},{\"end\":51578,\"start\":51574},{\"end\":51593,\"start\":51585},{\"end\":51771,\"start\":51766},{\"end\":51783,\"start\":51773},{\"end\":51916,\"start\":51914},{\"end\":51931,\"start\":51926},{\"end\":51945,\"start\":51942},{\"end\":51955,\"start\":51952},{\"end\":52163,\"start\":52161},{\"end\":52178,\"start\":52174},{\"end\":52320,\"start\":52318},{\"end\":52330,\"start\":52327},{\"end\":52343,\"start\":52340},{\"end\":52358,\"start\":52354},{\"end\":52557,\"start\":52555},{\"end\":52569,\"start\":52567},{\"end\":52584,\"start\":52580},{\"end\":52599,\"start\":52596},{\"end\":52614,\"start\":52609},{\"end\":52629,\"start\":52625},{\"end\":52903,\"start\":52901},{\"end\":52914,\"start\":52910},{\"end\":52929,\"start\":52924},{\"end\":52942,\"start\":52939},{\"end\":52950,\"start\":52948},{\"end\":52965,\"start\":52961},{\"end\":53225,\"start\":53219},{\"end\":53235,\"start\":53231},{\"end\":53251,\"start\":53244},{\"end\":53451,\"start\":53443},{\"end\":53465,\"start\":53459},{\"end\":53469,\"start\":53467},{\"end\":53644,\"start\":53638},{\"end\":53654,\"start\":53650},{\"end\":53663,\"start\":53656},{\"end\":53876,\"start\":53868},{\"end\":53899,\"start\":53889},{\"end\":53918,\"start\":53909},{\"end\":54177,\"start\":54172},{\"end\":54375,\"start\":54370},{\"end\":54390,\"start\":54386},{\"end\":54406,\"start\":54398},{\"end\":54662,\"start\":54660},{\"end\":54675,\"start\":54672},{\"end\":54689,\"start\":54687},{\"end\":54910,\"start\":54905},{\"end\":54928,\"start\":54920},{\"end\":54947,\"start\":54940},{\"end\":54960,\"start\":54954},{\"end\":55183,\"start\":55180},{\"end\":55194,\"start\":55190},{\"end\":55202,\"start\":55200},{\"end\":55215,\"start\":55211},{\"end\":55229,\"start\":55225},{\"end\":55239,\"start\":55235},{\"end\":55495,\"start\":55492},{\"end\":55509,\"start\":55507},{\"end\":55520,\"start\":55513},{\"end\":55531,\"start\":55522},{\"end\":55540,\"start\":55533},{\"end\":55818,\"start\":55812},{\"end\":55843,\"start\":55830},{\"end\":56069,\"start\":56063},{\"end\":56094,\"start\":56081},{\"end\":56108,\"start\":56101},{\"end\":56129,\"start\":56115},{\"end\":56383,\"start\":56369},{\"end\":56402,\"start\":56395},{\"end\":56422,\"start\":56409},{\"end\":56438,\"start\":56424},{\"end\":56711,\"start\":56708},{\"end\":56720,\"start\":56717},{\"end\":56737,\"start\":56733},{\"end\":56742,\"start\":56739},{\"end\":56951,\"start\":56944},{\"end\":56966,\"start\":56962},{\"end\":56976,\"start\":56972},{\"end\":56985,\"start\":56978},{\"end\":57202,\"start\":57192},{\"end\":57220,\"start\":57212},{\"end\":57238,\"start\":57230},{\"end\":57254,\"start\":57248},{\"end\":57266,\"start\":57263},{\"end\":57281,\"start\":57275},{\"end\":57508,\"start\":57504},{\"end\":57519,\"start\":57515},{\"end\":57529,\"start\":57526},{\"end\":57540,\"start\":57538},{\"end\":57551,\"start\":57548},{\"end\":57804,\"start\":57800},{\"end\":57813,\"start\":57808},{\"end\":57834,\"start\":57826},{\"end\":57844,\"start\":57836},{\"end\":58113,\"start\":58109},{\"end\":58126,\"start\":58121},{\"end\":58137,\"start\":58133},{\"end\":58150,\"start\":58145},{\"end\":58165,\"start\":58161},{\"end\":58178,\"start\":58175},{\"end\":58431,\"start\":58427},{\"end\":58444,\"start\":58442},{\"end\":58455,\"start\":58452},{\"end\":58465,\"start\":58462},{\"end\":58480,\"start\":58476},{\"end\":58679,\"start\":58675},{\"end\":58692,\"start\":58690},{\"end\":58703,\"start\":58699},{\"end\":58714,\"start\":58710},{\"end\":58729,\"start\":58725},{\"end\":58918,\"start\":58916},{\"end\":58934,\"start\":58929},{\"end\":58950,\"start\":58945},{\"end\":58969,\"start\":58964},{\"end\":58977,\"start\":58975},{\"end\":58998,\"start\":58988},{\"end\":59234,\"start\":59232},{\"end\":59246,\"start\":59243},{\"end\":59257,\"start\":59255},{\"end\":59271,\"start\":59267},{\"end\":59284,\"start\":59280},{\"end\":59295,\"start\":59291},{\"end\":59514,\"start\":59512},{\"end\":59525,\"start\":59523},{\"end\":59540,\"start\":59532},{\"end\":59558,\"start\":59551},{\"end\":59757,\"start\":59754},{\"end\":59770,\"start\":59768},{\"end\":59782,\"start\":59778},{\"end\":59795,\"start\":59793},{\"end\":59804,\"start\":59801},{\"end\":59818,\"start\":59814},{\"end\":60083,\"start\":60079},{\"end\":60099,\"start\":60095},{\"end\":60114,\"start\":60110},{\"end\":60130,\"start\":60126},{\"end\":60396,\"start\":60393},{\"end\":60408,\"start\":60404},{\"end\":60421,\"start\":60418},{\"end\":60739,\"start\":60735},{\"end\":60751,\"start\":60749},{\"end\":60765,\"start\":60761},{\"end\":60784,\"start\":60772},{\"end\":60804,\"start\":60796},{\"end\":60819,\"start\":60811}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":17682909},\"end\":48652,\"start\":48396},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":67749794},\"end\":48932,\"start\":48654},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":20970043},\"end\":49334,\"start\":48934},{\"attributes\":{\"id\":\"b3\"},\"end\":49658,\"start\":49336},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":207240067},\"end\":49877,\"start\":49660},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":3016223},\"end\":50196,\"start\":49879},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":199466324},\"end\":50491,\"start\":50198},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":13756507},\"end\":50708,\"start\":50493},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":52823666},\"end\":51006,\"start\":50710},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":5575601},\"end\":51256,\"start\":51008},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2625992},\"end\":51494,\"start\":51258},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":4755450},\"end\":51736,\"start\":51496},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":129431},\"end\":51858,\"start\":51738},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":206594692},\"end\":52087,\"start\":51860},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":2021204},\"end\":52305,\"start\":52089},{\"attributes\":{\"id\":\"b15\"},\"end\":52544,\"start\":52307},{\"attributes\":{\"id\":\"b16\"},\"end\":52888,\"start\":52546},{\"attributes\":{\"id\":\"b17\"},\"end\":53140,\"start\":52890},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":207204749},\"end\":53395,\"start\":53142},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":6628106},\"end\":53568,\"start\":53397},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":3144218},\"end\":53783,\"start\":53570},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":67855539},\"end\":54079,\"start\":53785},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":207168823},\"end\":54304,\"start\":54081},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":58370896},\"end\":54572,\"start\":54306},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":11118105},\"end\":54843,\"start\":54574},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":3361310},\"end\":55112,\"start\":54845},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":49862561},\"end\":55401,\"start\":55114},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":6050694},\"end\":55726,\"start\":55403},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":8750954},\"end\":55994,\"start\":55728},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":10795036},\"end\":56298,\"start\":55996},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":207189080},\"end\":56615,\"start\":56300},{\"attributes\":{\"id\":\"b31\"},\"end\":56896,\"start\":56617},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":36809545},\"end\":57158,\"start\":56898},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":3292002},\"end\":57430,\"start\":57160},{\"attributes\":{\"id\":\"b34\"},\"end\":57702,\"start\":57432},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":14730159},\"end\":58025,\"start\":57704},{\"attributes\":{\"id\":\"b36\"},\"end\":58359,\"start\":58027},{\"attributes\":{\"id\":\"b37\"},\"end\":58629,\"start\":58361},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":150380651},\"end\":58866,\"start\":58631},{\"attributes\":{\"id\":\"b39\"},\"end\":59165,\"start\":58868},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":128358994},\"end\":59462,\"start\":59167},{\"attributes\":{\"id\":\"b41\"},\"end\":59681,\"start\":59464},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":53285363},\"end\":60007,\"start\":59683},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":52901452},\"end\":60292,\"start\":60009},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":201701022},\"end\":60658,\"start\":60294},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":46949657},\"end\":61055,\"start\":60660}]", "bib_title": "[{\"end\":48454,\"start\":48396},{\"end\":48712,\"start\":48654},{\"end\":49034,\"start\":48934},{\"end\":49708,\"start\":49660},{\"end\":49957,\"start\":49879},{\"end\":50264,\"start\":50198},{\"end\":50548,\"start\":50493},{\"end\":50758,\"start\":50710},{\"end\":51081,\"start\":51008},{\"end\":51329,\"start\":51258},{\"end\":51545,\"start\":51496},{\"end\":51762,\"start\":51738},{\"end\":51904,\"start\":51860},{\"end\":52150,\"start\":52089},{\"end\":53209,\"start\":53142},{\"end\":53439,\"start\":53397},{\"end\":53634,\"start\":53570},{\"end\":53857,\"start\":53785},{\"end\":54163,\"start\":54081},{\"end\":54361,\"start\":54306},{\"end\":54652,\"start\":54574},{\"end\":54897,\"start\":54845},{\"end\":55169,\"start\":55114},{\"end\":55483,\"start\":55403},{\"end\":55802,\"start\":55728},{\"end\":56053,\"start\":55996},{\"end\":56362,\"start\":56300},{\"end\":56935,\"start\":56898},{\"end\":57184,\"start\":57160},{\"end\":57794,\"start\":57704},{\"end\":58667,\"start\":58631},{\"end\":59227,\"start\":59167},{\"end\":59747,\"start\":59683},{\"end\":60066,\"start\":60009},{\"end\":60384,\"start\":60294},{\"end\":60729,\"start\":60660}]", "bib_author": "[{\"end\":48468,\"start\":48456},{\"end\":48486,\"start\":48468},{\"end\":48500,\"start\":48486},{\"end\":48512,\"start\":48500},{\"end\":48730,\"start\":48714},{\"end\":48745,\"start\":48730},{\"end\":48761,\"start\":48745},{\"end\":48776,\"start\":48761},{\"end\":49051,\"start\":49036},{\"end\":49066,\"start\":49051},{\"end\":49079,\"start\":49066},{\"end\":49092,\"start\":49079},{\"end\":49101,\"start\":49092},{\"end\":49116,\"start\":49101},{\"end\":49416,\"start\":49403},{\"end\":49426,\"start\":49416},{\"end\":49439,\"start\":49426},{\"end\":49449,\"start\":49439},{\"end\":49458,\"start\":49449},{\"end\":49474,\"start\":49458},{\"end\":49484,\"start\":49474},{\"end\":49726,\"start\":49710},{\"end\":49737,\"start\":49726},{\"end\":49750,\"start\":49737},{\"end\":49979,\"start\":49959},{\"end\":49995,\"start\":49979},{\"end\":50017,\"start\":49995},{\"end\":50280,\"start\":50266},{\"end\":50292,\"start\":50280},{\"end\":50305,\"start\":50292},{\"end\":50314,\"start\":50305},{\"end\":50326,\"start\":50314},{\"end\":50564,\"start\":50550},{\"end\":50574,\"start\":50564},{\"end\":50583,\"start\":50574},{\"end\":50771,\"start\":50760},{\"end\":50784,\"start\":50771},{\"end\":50796,\"start\":50784},{\"end\":50807,\"start\":50796},{\"end\":50818,\"start\":50807},{\"end\":50833,\"start\":50818},{\"end\":51098,\"start\":51083},{\"end\":51113,\"start\":51098},{\"end\":51343,\"start\":51331},{\"end\":51358,\"start\":51343},{\"end\":51567,\"start\":51547},{\"end\":51580,\"start\":51567},{\"end\":51595,\"start\":51580},{\"end\":51773,\"start\":51764},{\"end\":51785,\"start\":51773},{\"end\":51918,\"start\":51906},{\"end\":51933,\"start\":51918},{\"end\":51947,\"start\":51933},{\"end\":51957,\"start\":51947},{\"end\":52165,\"start\":52152},{\"end\":52180,\"start\":52165},{\"end\":52322,\"start\":52309},{\"end\":52332,\"start\":52322},{\"end\":52345,\"start\":52332},{\"end\":52360,\"start\":52345},{\"end\":52559,\"start\":52546},{\"end\":52571,\"start\":52559},{\"end\":52586,\"start\":52571},{\"end\":52601,\"start\":52586},{\"end\":52616,\"start\":52601},{\"end\":52631,\"start\":52616},{\"end\":52905,\"start\":52892},{\"end\":52916,\"start\":52905},{\"end\":52931,\"start\":52916},{\"end\":52944,\"start\":52931},{\"end\":52952,\"start\":52944},{\"end\":52967,\"start\":52952},{\"end\":53227,\"start\":53211},{\"end\":53237,\"start\":53227},{\"end\":53253,\"start\":53237},{\"end\":53453,\"start\":53441},{\"end\":53467,\"start\":53453},{\"end\":53471,\"start\":53467},{\"end\":53646,\"start\":53636},{\"end\":53656,\"start\":53646},{\"end\":53665,\"start\":53656},{\"end\":53878,\"start\":53859},{\"end\":53901,\"start\":53878},{\"end\":53920,\"start\":53901},{\"end\":54179,\"start\":54165},{\"end\":54377,\"start\":54363},{\"end\":54392,\"start\":54377},{\"end\":54408,\"start\":54392},{\"end\":54664,\"start\":54654},{\"end\":54677,\"start\":54664},{\"end\":54691,\"start\":54677},{\"end\":54912,\"start\":54899},{\"end\":54930,\"start\":54912},{\"end\":54949,\"start\":54930},{\"end\":54962,\"start\":54949},{\"end\":55185,\"start\":55171},{\"end\":55196,\"start\":55185},{\"end\":55204,\"start\":55196},{\"end\":55217,\"start\":55204},{\"end\":55231,\"start\":55217},{\"end\":55241,\"start\":55231},{\"end\":55497,\"start\":55485},{\"end\":55511,\"start\":55497},{\"end\":55522,\"start\":55511},{\"end\":55533,\"start\":55522},{\"end\":55542,\"start\":55533},{\"end\":55820,\"start\":55804},{\"end\":55845,\"start\":55820},{\"end\":56071,\"start\":56055},{\"end\":56096,\"start\":56071},{\"end\":56110,\"start\":56096},{\"end\":56131,\"start\":56110},{\"end\":56385,\"start\":56364},{\"end\":56404,\"start\":56385},{\"end\":56424,\"start\":56404},{\"end\":56440,\"start\":56424},{\"end\":56713,\"start\":56705},{\"end\":56722,\"start\":56713},{\"end\":56739,\"start\":56722},{\"end\":56744,\"start\":56739},{\"end\":56953,\"start\":56937},{\"end\":56968,\"start\":56953},{\"end\":56978,\"start\":56968},{\"end\":56987,\"start\":56978},{\"end\":57204,\"start\":57186},{\"end\":57222,\"start\":57204},{\"end\":57240,\"start\":57222},{\"end\":57256,\"start\":57240},{\"end\":57268,\"start\":57256},{\"end\":57283,\"start\":57268},{\"end\":57510,\"start\":57496},{\"end\":57521,\"start\":57510},{\"end\":57531,\"start\":57521},{\"end\":57542,\"start\":57531},{\"end\":57553,\"start\":57542},{\"end\":57806,\"start\":57796},{\"end\":57815,\"start\":57806},{\"end\":57836,\"start\":57815},{\"end\":57846,\"start\":57836},{\"end\":58115,\"start\":58103},{\"end\":58128,\"start\":58115},{\"end\":58139,\"start\":58128},{\"end\":58152,\"start\":58139},{\"end\":58167,\"start\":58152},{\"end\":58180,\"start\":58167},{\"end\":58433,\"start\":58421},{\"end\":58446,\"start\":58433},{\"end\":58457,\"start\":58446},{\"end\":58467,\"start\":58457},{\"end\":58482,\"start\":58467},{\"end\":58681,\"start\":58669},{\"end\":58694,\"start\":58681},{\"end\":58705,\"start\":58694},{\"end\":58716,\"start\":58705},{\"end\":58731,\"start\":58716},{\"end\":58920,\"start\":58910},{\"end\":58938,\"start\":58920},{\"end\":58952,\"start\":58938},{\"end\":58971,\"start\":58952},{\"end\":58979,\"start\":58971},{\"end\":59000,\"start\":58979},{\"end\":59236,\"start\":59229},{\"end\":59248,\"start\":59236},{\"end\":59259,\"start\":59248},{\"end\":59273,\"start\":59259},{\"end\":59286,\"start\":59273},{\"end\":59297,\"start\":59286},{\"end\":59516,\"start\":59505},{\"end\":59527,\"start\":59516},{\"end\":59542,\"start\":59527},{\"end\":59560,\"start\":59542},{\"end\":59759,\"start\":59749},{\"end\":59772,\"start\":59759},{\"end\":59784,\"start\":59772},{\"end\":59797,\"start\":59784},{\"end\":59806,\"start\":59797},{\"end\":59820,\"start\":59806},{\"end\":60085,\"start\":60068},{\"end\":60101,\"start\":60085},{\"end\":60116,\"start\":60101},{\"end\":60132,\"start\":60116},{\"end\":60398,\"start\":60386},{\"end\":60410,\"start\":60398},{\"end\":60423,\"start\":60410},{\"end\":60741,\"start\":60731},{\"end\":60753,\"start\":60741},{\"end\":60767,\"start\":60753},{\"end\":60786,\"start\":60767},{\"end\":60806,\"start\":60786},{\"end\":60821,\"start\":60806}]", "bib_venue": "[{\"end\":48516,\"start\":48512},{\"end\":48779,\"start\":48776},{\"end\":49121,\"start\":49116},{\"end\":49401,\"start\":49336},{\"end\":49756,\"start\":49750},{\"end\":50024,\"start\":50017},{\"end\":50331,\"start\":50326},{\"end\":50588,\"start\":50583},{\"end\":50837,\"start\":50833},{\"end\":51120,\"start\":51113},{\"end\":51363,\"start\":51358},{\"end\":51602,\"start\":51595},{\"end\":51788,\"start\":51785},{\"end\":51961,\"start\":51957},{\"end\":52185,\"start\":52180},{\"end\":52409,\"start\":52360},{\"end\":52694,\"start\":52631},{\"end\":53005,\"start\":52967},{\"end\":53256,\"start\":53253},{\"end\":53475,\"start\":53471},{\"end\":53669,\"start\":53665},{\"end\":53924,\"start\":53920},{\"end\":54182,\"start\":54179},{\"end\":54421,\"start\":54408},{\"end\":54695,\"start\":54691},{\"end\":54965,\"start\":54962},{\"end\":55244,\"start\":55241},{\"end\":55546,\"start\":55542},{\"end\":55849,\"start\":55845},{\"end\":56134,\"start\":56131},{\"end\":56445,\"start\":56440},{\"end\":56703,\"start\":56617},{\"end\":57020,\"start\":56987},{\"end\":57287,\"start\":57283},{\"end\":57494,\"start\":57432},{\"end\":57851,\"start\":57846},{\"end\":58101,\"start\":58027},{\"end\":58419,\"start\":58361},{\"end\":58736,\"start\":58731},{\"end\":58908,\"start\":58868},{\"end\":59302,\"start\":59297},{\"end\":59503,\"start\":59464},{\"end\":59824,\"start\":59820},{\"end\":60138,\"start\":60132},{\"end\":60425,\"start\":60423},{\"end\":60844,\"start\":60821}]"}}}, "year": 2023, "month": 12, "day": 17}