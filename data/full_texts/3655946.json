{"id": 3655946, "updated": "2023-09-28 13:43:24.671", "metadata": {"title": "MaskGAN: Better Text Generation via Filling in the ______", "authors": "[{\"first\":\"William\",\"last\":\"Fedus\",\"middle\":[]},{\"first\":\"Ian\",\"last\":\"Goodfellow\",\"middle\":[]},{\"first\":\"Andrew\",\"last\":\"Dai\",\"middle\":[\"M.\"]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2018, "month": 1, "day": 23}, "abstract": "Neural text generation models are often autoregressive language models or seq2seq models. These models generate text by sampling words sequentially, with each word conditioned on the previous word, and are state-of-the-art for several machine translation and summarization benchmarks. These benchmarks are often defined by validation perplexity even though this is not a direct measure of the quality of the generated text. Additionally, these models are typically trained via maxi- mum likelihood and teacher forcing. These methods are well-suited to optimizing perplexity but can result in poor sample quality since generating text requires conditioning on sequences of words that may have never been observed at training time. We propose to improve sample quality using Generative Adversarial Networks (GANs), which explicitly train the generator to produce high quality samples and have shown a lot of success in image generation. GANs were originally designed to output differentiable values, so discrete language generation is challenging for them. We claim that validation perplexity alone is not indicative of the quality of text generated by a model. We introduce an actor-critic conditional GAN that fills in missing text conditioned on the surrounding context. We show qualitatively and quantitatively, evidence that this produces more realistic conditional and unconditional text samples compared to a maximum likelihood trained model.", "fields_of_study": "[\"Mathematics\",\"Computer Science\"]", "external_ids": {"arxiv": "1801.07736", "mag": "2963574252", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/iclr/FedusGD18", "doi": null}}, "content": {"source": {"pdf_hash": "7f4afc1bf3272ae6ec00b46e27efc4a4f6b0826d", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1801.07736v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "73323bdc4804961bac70324b3b885dacdf197c86", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/7f4afc1bf3272ae6ec00b46e27efc4a4f6b0826d.txt", "contents": "\nMASKGAN: BETTER TEXT GENERATION VIA FILLING IN THE\n\n\nWilliam Fedus liam.fedus@gmail.com \nIan Goodfellow \nAndrew M Dai adai@google.com \nGoogle Brain \nMASKGAN: BETTER TEXT GENERATION VIA FILLING IN THE\nUnder review as a conference paper at ICLR 2018\nNeural text generation models are often autoregressive language models or seq2seq models. These models generate text by sampling words sequentially, with each word conditioned on the previous word, and are state-of-the-art for several machine translation and summarization benchmarks. These benchmarks are often defined by validation perplexity even though this is not a direct measure of the quality of the generated text. Additionally, these models are typically trained via maximum likelihood and teacher forcing. These methods are well-suited to optimizing perplexity but can result in poor sample quality since generating text requires conditioning on sequences of words that may have never been observed at training time. We propose to improve sample quality using Generative Adversarial Networks (GANs), which explicitly train the generator to produce high quality samples and have shown a lot of success in image generation. GANs were originally designed to output differentiable values, so discrete language generation is challenging for them. We claim that validation perplexity alone is not indicative of the quality of text generated by a model. We introduce an actor-critic conditional GAN that fills in missing text conditioned on the surrounding context. We show qualitatively and quantitatively, evidence that this produces more realistic conditional and unconditional text samples compared to a maximum likelihood trained model.\n\nINTRODUCTION\n\nRecurrent Neural Networks (RNNs) (Graves et al., 2012) are the most common generative model for sequences as well as for sequence labeling tasks. They have shown impressive results in language modeling (Mikolov et al., 2010), machine translation (Wu et al., 2016) and text classification (Miyato et al., 2017). Text is typically generated from these models by sampling from a distribution that is conditioned on the previous word and a hidden state that consists of a representation of the words generated so far. These are typically trained with maximum likelihood in an approach known as teacher forcing, where ground-truth words are fed back into the model to be conditioned on for generating the following parts of the sentence. This causes problems when, during sample generation, the model is often forced to condition on sequences that were never conditioned on at training time. This leads to unpredictable dynamics in the hidden state of the RNN. Methods such as Professor Forcing (Lamb et al., 2016) and Scheduled Sampling (Bengio et al., 2015) have been proposed to solve this issue. These approaches work indirectly by either causing the hidden state dynamics to become predictable (Professor Forcing) or by randomly conditioning on sampled words at training time, however, they do not directly specify a cost function on the output of the RNN that encourages high sample quality. Our proposed method does so.\n\nGenerative Adversarial Networks (GANs) (Goodfellow et al., 2014) are a framework for training generative models in an adversarial setup, with a generator generating images that is trying to fool a discriminator that is trained to discriminate between real and synthetic images. GANs have had a lot of success in producing more realistic images than other approaches but they have only seen limited use for text sequences. This is due to the discrete nature of text making it infeasible to propagate the gradient from the discriminator back to the generator as in standard GAN training. We overcome this by using Reinforcement Learning (RL) to train the generator while the discriminator is still trained via maximum likelihood and stochastic gradient descent. GANs also commonly suffer from issues such as training instability and mode dropping, both of which are exacerbated in a textual setting. Mode dropping occurs when certain modalities in the training set are rarely generated by the generator, for example, leading all generated images of a volcano to be multiple variants of the same volcano. This becomes a significant problem in text generation since there are many complex modes in the data, ranging from bigrams to short phrases to longer idioms. Training stability is also an issue since unlike image generation, text is generated autoregressively and thus the loss from the discriminator is only observed after a complete sentence has been generated. This problem compounds when generating longer and longer sentences.\n\nWe reduce the impact of these problems by training our model on a text fill-in-the-blank or in-filling task. This is similar to the task proposed in Bowman et al. (2016) but we use a more robust setup. In this task, portions of a body of text are deleted or redacted. The goal of the model is to then infill the missing portions of text so that it is indistinguishable from the original data. While in-filling text, the model operates autoregressively over the tokens it has thus far filled in, as in standard language modeling, while conditioning on the true known context. If the entire body of text is redacted, then this reduces to language modeling.\n\nDesigning error attribution per time step has been noted to be important in prior natural language GAN research (Yu et al., 2017;. The text infilling task naturally achieves this consideration since our discriminator will evaluate each token and thus provide a fine-grained supervision signal to the generator. Consider, for instance, if the generator produces a sequence perfectly matching the data distribution over the first t \u2212 1 time-steps, but then produces an outlier token y t , (x 1:t\u22121 y t ). Despite the entire sequence now being clearly synthetic as a result of the errant token, a discriminative model that produces a high loss signal to the outlier token, but not to the others, will likely yield a more informative error signal to the generator.\n\nThis research also opens further inquiry of conditional GAN models in the context of natural language.\n\nIn the following sections,\n\n\u2022 We introduce a text generation model trained on in-filling (MaskGAN).\n\n\u2022 Consider the actor-critic architecture in extremely large action spaces.\n\n\u2022 Consider new evaluation metrics and the generation of synthetic training data.\n\n\nRELATED WORK\n\nResearch into reliably extending GAN training to discrete spaces and discrete sequences has been a highly active area. GAN training in a continuous setting allows for fully differentiable computations, permitting gradients to be passed through the discriminator to the generator. Discrete elements break this differentiability, leading researchers to either avoid the issue and reformulate the problem, work in the continuous domain or to consider RL methods.\n\nSeqGAN (Yu et al., 2017) trains a language model by using policy gradients to train the generator to fool a CNN-based discriminator that discriminates between real and synthetic text. Both the generator and discriminator are pretrained on real and fake data before the phase of training with policy gradients. During training they then do Monte Carlo rollouts in order to get a useful loss signal per word.\n\nProfessor Forcing (Lamb et al., 2016) is an alternative to training an RNN with teacher forcing by using a discriminator to discriminate the hidden states of a generator RNN that is conditioned on real and synthetic samples. Since the discriminator only operates on hidden states, gradients can be passed through to the generator so that the hidden state dynamics at inference time follow those at training time.\n\nGANs have been applied to dialogue generation  showing improvements in adversarial evaluation and good results with human evaluation compared to a maximum likelihood trained baseline. Their method applies REINFORCE with Monte Carlo sampling on the generator.\n\nReplacing the non-differentiable sampling operations with efficient gradient approximators (Jang et al., 2017)has not yet shown strong results with discrete GANs. Recent unbiased and low variance gradient estimate techniques such as Tucker et al. (2017) may prove more effective.\n\nWGAN-GP (Gulrajani et al., 2017) avoids the issue of dealing with backpropagating through discrete nodes by generating text in a one-shot manner using a 1D convolutional network.  proposes an algorithmic solution and uses a boundary-seeking GAN objective along with importance sampling to generate text. In Rajeswar et al. (2017), the discriminator operates directly on the continuous probabilistic output of the generator. However, to accomplish this, they recast the traditional autoregressive sampling of the text since the inputs to the RNN are predetermined.  instead optimize a lower-variance objective using the discriminator's output, rather than the standard GAN objective.\n\nReinforcement learning methods have been explored successfully in natural language. Using a REINFORCE and cross entropy hybrid, MIXER, (Ranzato et al., 2015) directly optimized BLEU score and demonstrated improvements over baselines. More recently, actor-critic methods in natural language were explored in Bahdanau et al. (2017) where instead of having rewards supplied by a discriminator in an adversarial setting, the rewards are task-specific scores such as BLEU.\n\nConditional text generation via GAN training has been explored in Rajeswar et al. (2017); .\n\nOur work is distinct in that we employ an actor-critic training procedure on a task designed to provide rewards at every time step . We believe the in-filling may mitigate the problem of severe mode-collapse. This task is also harder for the discriminator which reduces the risk of the generator contending with a near-perfect discriminator. The critic in our method helps the generator converge more rapidly by reducing the high-variance of the gradient updates in an extremely high action-space environment when operating at word-level in natural language.\n\n\nMASKGAN\n\n\nNOTATION\n\nLet (x t , y t ) denote pairs of input and target tokens. Let <m> denote a masked token (where the original token is replaced with a hidden token) and letx t denote the filled-in token. Finally,x t is a filled-in token passed to the discriminator which may be either real or fake.\n\n\nARCHITECTURE\n\nThe task of imputing missing tokens requires that our MaskGAN architecture condition on information from both the past and the future. We choose to use a seq2seq (Sutskever et al., 2014) architecture. Our generator consists of an encoding module and decoding module. For a discrete sequence x = (x 1 , \u00b7 \u00b7 \u00b7 , x T ), a binary mask is generated (deterministically or stochastically) of the same length m = (m 1 , \u00b7 \u00b7 \u00b7 , m T ) where each m t \u2208 {0, 1}, selects which tokens will remain. The token at time t, x t is then replaced with a special mask token <m> if the mask is 0 and remains unchanged if the mask is 1.\n\nThe encoder reads in the masked sequence, which we denote as m(x), where the mask is applied element-wise. The encoder provides access to future context for the MaskGAN during decoding.\n\nAs in standard language-modeling, the decoder fills in the missing tokens auto-regressively, however, it is now conditioned on both the masked text m(x) as well as what it has filled-in up to that point. The generator decomposes the distribution over the sequence into an ordered conditional sequence\nP (x 1 , \u00b7 \u00b7 \u00b7 ,x T | m(x)) = T t=1 P (x t |x 1 , \u00b7 \u00b7 \u00b7 ,x t\u22121 , m(x)). G(x t ) \u2261 P (x t |x 1 , \u00b7 \u00b7 \u00b7 ,x t\u22121 , m(x))(1)\nThe discriminator has an identical architecture to the generator 1 except that the output is a scalar probability at each time point, rather than a distribution over the vocabulary size. The discriminator is given the filled-in sequence from the generator, but importantly, it is given the original real context m(x). We give the discriminator the true context, otherwise, this algorithm has a critical failure mode. For instance, without this context, if the discriminator is given the filled-in sequence the director director guided the series, it will fail to reliably identify Figure 1: seq2seq generator architecture. Blue boxes represent known tokens and purple boxes are imputed tokens. We demonstrate a sampling operation via the dotted line. The encoder reads in a masked sequence, where masked tokens are denoted by an underscore, and then the decoder imputes the missing tokens by using the encoder hidden states. In this example, the generator should fill in the alphabetical ordering, (a,b,c,d,e).\n\nthe director director bigram as fake text, despite this bigram potentially never appearing in the training corpus (aside from an errant typo). The reason is that it is ambiguous which of the two occurrences of director is fake; the * associate * director guided the series or the director * expertly * guided the series are both potentially valid sequences. Without the context of which words are real, the discriminator was found to assign equal probability to both words. The result, of course, is an inaccurate learning signal to the generator which will not be correctly penalized for producing these bigrams. To prevent this, our discriminator D \u03c6 computes the probability of each tokenx t being real given the true context of the masked sequence m(x).\nD \u03c6 (x t |x 0:T , m(x)) = P (x t = x real t |x 0:T , m(x))(2)\nIn our formulation, the logarithm of the discriminator estimates are regarded as the reward\nr t \u2261 log D \u03c6 (x t |x 0:T , m(x))(3)\nOur third network is the critic network, which is implemented as an additional head off the discriminator. The critic estimates the value function, which is the discounted total return of the filled-in sequence R t = T s=t \u03b3 s r s , where \u03b3 is the discount factor at each position in the sequence.\n\n\nTRAINING\n\nOur model is not fully-differentiable due to the sampling operations on the generator's probability distribution to produce the next token. Therefore, to train the generator, we estimate the gradient with respect to its parameters \u03b8 via policy gradients (Sutton et al., 2000). Reinforcement learning was first employed to GANs for language modeling in Yu et al. (2017). Analogously, here the generator seeks to maximize the cumulative total reward R = T t=1 R t . We optimize the parameters of the generator, \u03b8, by performing gradient ascent on E G(\u03b8) [R]. Using one of the REINFORCE family of algorithms, we can find an unbiased estimator of this as\n\u2207 \u03b8 E G [R t ] = R t \u2207 \u03b8 log G \u03b8 (x t ).\nThe variance of this gradient estimator may be reduced by using the learned value function as a baseline b t = V G (x 1:t ) which is produced by the critic. This results in the generator gradient contribution for a single token\nx t \u2207 \u03b8 E G [R t ] = (R t \u2212 b t )\u2207 \u03b8 log G \u03b8 (x t )(4)\nIn the nomenclature of RL, the quantity (R t \u2212 b t ) may be interpreted as an estimate of the advantage\nA(a t , s t ) = Q(a t , s t ) \u2212 V (s t ).\nHere, the action a t is the token chosen by the generator a t \u2261x t and the state s t are the current tokens produced up to that point s t \u2261x 1 , \u00b7 \u00b7 \u00b7 ,x t\u22121 . This approach is an actor-critic architecture where G determines the policy \u03c0(s t ) and the baseline b t is the critic (Sutton & Barto, 1998;Degris et al., 2012).\n\nFor this task, we design rewards at each time step for a single sequence in order to aid with credit assignment . As a result, a token generated at time-step t will influence the rewards received at that time step and subsequent time steps. Our gradient for the generator will include contributions for each token filled in order to maximize the discounted total return R = T t=1 R t . The full generator gradient is given by Equation 6\n\u2207 \u03b8 E[R] = Ex t\u223cG T t=1 (R t \u2212 b t )\u2207 \u03b8 log(G \u03b8 (x t )) (5) = Ex t\u223cG T t=1 T s=t \u03b3 s r s \u2212 b t \u2207 \u03b8 log(G \u03b8 (x t ))(6)\nIntuitively this shows that the gradient to the generator associated with producingx t will depend on all the discounted future rewards (s \u2265 t) assigned by the discriminator. For a non-zero \u03bb discount factor, the generator will be penalized for greedily selecting a token that earns a high reward at that time-step alone. Then for one full sequence, we sum over all generated wordsx t for t = 1 : T .\n\nFinally, as in conventional GAN training, our discriminator will be updated according to the gradient\n\u2207 \u03c6 1 m m i=1 logD(x (i) )] + log(1 \u2212 D(G(z (i) )(7)\n\nALTERNATIVE APPROACHES FOR LONG SEQUENCES AND LARGE VOCABULARIES\n\nAs an aside for other avenues we explored, we highlight two particular problems of this task and plausible remedies. This task becomes more difficult with long sequences and with large vocabularies.\n\nTo address the issue of extended sequence length, we modify the core algorithm with a dynamic task. We apply our algorithm up to a maximum sequence length T , however, upon satisfying a convergence criterion, we then increment the maximum sequence length to T + 1 and continue training. This allows the model to build up an ability to capture dependencies over shorter sequences before moving to longer dependencies as a form of curriculum learning.\n\nIn order to alleviate issues of variance with REINFORCE methods in a large vocabulary size, we consider a simple modification. At each time-step, instead of generating a reward only on the sampled token, we instead seek to use the full information of the generator distribution. Before sampling, the generator produces a probability distribution over all tokens G(v) \u2200 v \u2208 V. We compute the reward for each possible token v, conditioned on what had been generated before. This incurs a computational penalty since the discriminator must now be used to predict over all tokens, but if performed efficiently, the potential reduction in variance could be beneficial.\n\n\nMETHOD DETAILS\n\nPrior to training, we first perform pretraining. First we train a language model using standard maximum likelihood training. We then use the pretrained language model weights for the seq2seq encoder and decoder modules. With these language models, we now pretrain the seq2seq model on the in-filling task using maximum likelihood, in particular, the attention parameters as described in Luong et al. (2015). We select the model producing the lowest validation perplexity on the masked task via a hyperparameter sweep over 500 runs. Initial algorithms did not include a critic, but we found that the inclusion of the critic decreased the variance of our gradient estimates by an order of magnitude which substantially improved training.\n\n\nEVALUATION\n\nEvaluation of generative models continues to be an open-ended research question. We seek heuristic metrics that we believe will be correlated with human-evaluation. BLEU score (Papineni et al., 2002) is used extensively in machine translation where one can compare the quality of candidate translations from the reference. Motivated by this metric, we compute the number of unique n-grams produced by the generator that occur in the validation corpus for small n. Then we compute the geometric average over these metrics to get a unified view of the performance of the generator.\n\nFrom our maximum-likelihood trained benchmark, we were able to find GAN hyperparameter configurations that led to small decreases in validation perplexity on O(1)\u2212point. However, we found that these models did not yield considerable improvements to the sample quality so we abandoned trying to reduce validation perplexity. One of the biggest advantages of GAN-trained NLP models, is that the generator can produce alternative, yet realistic language samples, but not be unfairly penalized by not producing with high likelihood the single correct sequence. As the generator explores 'off-manifold' in the free-running mode, it may find alternative options that are valid, but do not maximize the probability of the underlying sequence. We therefore choose not to focus on architectures or hyperparameter configurations that led to small reductions in validation perplexity, but rather, searched for those that improved our heuristic evaluation metrics.\n\n\nEXPERIMENTS\n\nWe present both conditional and unconditional samples generated on the PTB and IMDB data sets at word-level. MaskGAN refers to our GAN-trained variant and MaskMLE refers to our maximumlikelihood trained variant. Additional samples are supplied in Appendix B.\n\n\nTHE PENN TREEBANK (PTB)\n\nThe Penn Treebank dataset (Marcus et al., 1993) has a vocabulary of 10,000 unique words. The training set contains 930,000 words, the validation set contains 74,000 words and the test set contains 82,000 words. For our experiments, we train on the training partition.\n\nWe first pretrain the commonly-used variational LSTM language model with parameter dimensions common to MaskGAN following Gal & Ghahramani (2016) to a validation perplexity of 78. After then loading the weights from the language model into the MaskGAN generator we further pretrain with a masking rate of 0.5 (half the text blanked) to a validation perplexity of 55.3. Finally, we then pretrain the discriminator on the samples produced from the current generator and real training text.\n\n\nCONDITIONAL SAMPLES\n\nWe produce samples conditioned on surrounding text in Table 1 \n\n\nLANGUAGE MODEL (UNCONDITIONAL) SAMPLES\n\nWe may also run MaskGAN in an unconditional mode, where the entire context is blanked out, thus making it equivalent to a language model. We present a length-20 language model sample in Table 2 and additional samples are included in the Appendix.\n\n\nIMDB MOVIE DATASET\n\nThe IMDB dataset Maas et al. (2011) consists of 100,000 movie reviews taken from IMDB. Each review may contain several sentences. The dataset is divided into 25,000 labeled training instances, MaskGAN oct. N as the end of the year the resignations were approved <eos> the march N N <unk> was down 25,000 labeled test instances and 50,000 unlabeled training instances. The label indicates the sentiment of the review and may be either positive or negative. We use the first 40 words of each review in the training set to train our models, which leads to a dataset of 3 million words.\n\nIdentical to the training process in PTB, we pretrain a language model to a validation perplexity of 105.6. After then loading the weights from the language model into the MaskGAN generator we further pretrain with masking rate of 0.5 (half the text blanked) to a validation perplexity of 87.1. Finally, we then pretrain the discriminator on the samples produced from the current generator and real training text.\n\n\nCONDITIONAL SAMPLES\n\nHere we compare MaskGAN and MaskMLE conditional language generation ability for the IMDB dataset.  \n\n\nGround Truth\n\n\nLANGUAGE MODEL (UNCONDITIONAL) SAMPLES\n\nAs in the case with PTB, we generate IMDB samples unconditionally, equivalent to a language model. We present a length-40 sample in Table 4 and additional samples are included in the Appendix.\n\n\nMaskGAN\n\nPositive: Follow the Good Earth movie linked Vacation is a comedy that credited against the modern day era yarns which has helpful something to the modern day s best It is an interesting drama based on a story of the famed \n\n\nPERPLEXITY OF GENERATED SAMPLES\n\nAs of this date, GAN training has not achieved state-of-the-art word level validation perplexity on the Penn Treebank dataset. Rather, the top performing models are still maximum-likelihood trained models, such as the recent architectures found via neural architecture search in Zoph & Le (2017). An extensive hyperparameter search with MaskGAN further supported that GAN training does not improve the validation perplexity results set via state-of-the-art models. However, we instead seek to understand the quality of the sample generation. As highlighted earlier, a fundamental problem of generating in free-running mode potentially leads to 'off-manifold' sequences which can result in poor sample quality for teacher-forced models. We seek to quantitatively evaluate this dynamic present only during sampling. This is commonly done with BLEU but as shown by Wu et al. (2016), BLEU is not necessarily correlated with sample quality. We believe the correlation may be even less in the in-filling task since there are many potential valid in-fillings and BLEU would penalize valid ones.\n\n\nModel\n\nPerplexity of IMDB samples under a pretrained LM MaskMLE 273.1 \u00b1 3.5 MaskGAN 108.3 \u00b1 3.5 Table 5: The perplexity is calculated using a pre-trained language model that is equivalent to the decoder (in terms of architecture and size) used in the MaskMLE and MaskGAN models. This language model was used to initialize both models.\n\nInstead, we calculate the perplexity of the generated samples by MaskGAN and MaskMLE by using the language model that was used to initialize MaskGAN and MaskMLE. Both MaskGAN and MaskMLE produce samples autoregressively (free-running mode), building upon the previously sampled tokens to produce the distribution over the next.\n\nThe MaskGAN model produces samples which are more likely under the initial model than the MaskMLE model. The MaskMLE model generates improbable sentences, as assessed by the initial language model, during inference as compounding sampling errors result in a recurrent hidden states that are never seen during teacher forcing (Lamb et al., 2016). Conversely, the MaskGAN model operates in a free-running mode while training and this supports that it is more robust to these sampling perturbations.\n\n\nMODE COLLAPSE\n\nIn contrast to image generation, mode collapse can be measured by directly calculating certain n-gram statistics. In this instance, we measure mode collapse by the percentage of unique n-grams in a set of 10,000 generated IMDB movie reviews. We unconditionally generate each sample (consisting of 40 words). This results in almost 400K total bi/tri/quad-grams.  The results in Table 6 show that MaskGAN does show some mode collapse, evidenced by the reduced number of unique quadgrams. However, all complete samples (taken as a sequence) for all the models are still unique. We also observed during RL training an initial small drop in perplexity on the ground-truth validation set but then a steady increase in perplexity as training progressed. Despite this, sample quality remained relatively consistent. The final samples were generated from a model that had a perplexity on the ground-truth of 400. We hypothesize that mode dropping is occurring near the tail end of sequences since generated samples are unlikely to generate all the previous words correctly in order to properly model the distribution over words at the tail. Theis et al. (2016) also shows how validation perplexity does not necessarily correlate with sample quality.\n\n\nHUMAN EVALUATION\n\nUltimately, the evaluation of generative models is still best measured by unbiased human evaluation. Therefore, we evaluate the quality of the generated samples of our initial language model (LM), the MaskMLE model and the MaskGAN model in a blind heads-up comparison using Amazon Mechanical Turk. Note that these models have the same number of parameters at inference time. We pay raters to compare the quality of two extracts along 3 axes (grammaticality, topicality and overall quality). They are asked if the first extract, second extract or neither is higher quality.   Raters are asked which sample is preferred between each pair. 300 ratings were obtained for each model pair comparison.\n\nword samples), the results are closer. We also show results with SeqGAN (trained with the same network size and vocabulary size) as MaskGAN, which show that MaskGAN produces superior samples to SeqGAN.\n\n\nDISCUSSION\n\nOur work further supports the case for matching the training and inference procedures in order to produce higher quality language samples. The MaskGAN algorithm directly achieves this through GAN-training and improved the generated samples as assessed by human evaluators.\n\nIn our experiments, we generally found training where contiguous blocks of words were masked produced better samples. One conjecture is that this allows the generator an opportunity to explore longer sequences in a free-running mode; in comparison, a random mask generally has shorter sequences of blanks to fill in, so the gain of GAN-training is not as substantial. We found that policy gradient methods were effective in conjunction with a learned critic, but the highly active research on training with discrete nodes may present even more stable training procedures.\n\nWe also found the use of attention was important for the in-filled words to be sufficiently conditioned on the input context. Without attention, the in-filling would fill in reasonable subsequences that became implausible in the context of the adjacent surrounding words. Given this, we suspect another promising avenue would be to consider GAN-training with attention-only models as in Vaswani et al. (2017).\n\nIn general we think the proposed contiguous in-filling task is a good approach to reduce mode collapse and help with training stability for textual GANs. We show that MaskGAN samples on a larger dataset (IMDB reviews) is significantly better than the corresponding tuned MaskMLE model as shown by human evaluation. We also show we can produce high-quality samples despite the MaskGAN model having much higher perplexity on the ground-truth test set.\n\nA TRAINING DETAILS Our model was trained with the Adam method for stochastic optimization (Kingma & Ba, 2015) with the default Tensorflow exponential decay rates of \u03b2 1 = 0.99 and \u03b2 2 = 0.999. Our model uses 2-layers of 650 unit LSTMs for both the generator and discriminator, 650 dimensional word embeddings, variational dropout. We used Bayesian hyperparameter tuning to tune the variational dropout rate and learning rates for the generator, discriminator and critic. We perform 3 gradient descent steps on the discriminator for every step on the generator and critic.\n\nWe share the embedding and softmax weights of the generator as proposed in Bengio et al. (2003); Press & Wolf (2017);Inan et al. (2017). Furthermore, to improve convergence speed, we share the embeddings of the generator and the discriminator. Additionally, as noted in our architectural section, our critic shares all of the discriminator parameters with the exception of the separate output head to estimate the value. Both our generator and discriminator use variational recurrent dropout (Gal & Ghahramani, 2016 As widely witnessed in GAN-training, we also find a common failure of mode collapse across various n-gram levels. The mode collapse may not be as extreme to collapse at a 1-gram level (ddddddd\u00b7 \u00b7 \u00b7 ) as described by Gulrajani et al. (2017), but it may manifest as grammatical, albeit, inanely repetitive phrases, for example, It is a very funny film that is very funny It s a very funny movie and it s charming It\n\nOf course the discriminator may discern this as an out-of-distribution sample, however, in certain failure modes, we observed the generator to move between common modes frequently present in the text.\n\n\nC.2 MATCHING SYNTAX AT BOUNDARIES\n\nWe notice that the MaskGAN architecture often struggles to produce syntactically correct sequences when there is a hard boundary where it must end. This is also a relatively challenging task for humans, because the filled in text must not only be contextual but also match syntactically at the boundary between the blank and where the text is present over a fixed number of words.\n\nCartoon is one of those films me when I first saw it back in 2000\n\nAs noted in this failure mode, the intersection between the filled in text and the present text is non grammatical.\n\n\nC.3 LOSS OF GLOBAL CONTEXT\n\nSimilar to failure modes present in GAN image generation, the produced samples often can lose global coherence, despite being sensible locally. We expect a larger capacity model can mitigate some of these issues.\n\nThis movie is terrible The plot is ludicrous The title is not more interesting and original This is a great movie Lord of the Rings was a great movie John Travolta is brilliant\n\n\nC.4 n-GRAM METRICS MAY BE MISLEADING PROXIES\n\nIn the absence of a global scalar objective to optimize while training, we monitor various n-gram language statistics to assess performance. However, these only are crude proxies of the quality of the produced samples. For instance, MaskGAN models that led to improvements of a particular n-gram metric at the extreme expense of validation perplexity as seen in Figure 2 could devolve to a generator of very low sample diversity. Below, we produce several samples from this particular model which, despite the dramatically improved 4-gram metric, has lost diversity.\n\nIt is a great movie It s just a tragic story of a man who has been working on a home It s a great film that has a great premise but it s not funny It s just a silly film It s not the best movie I have seen in the series The story is simple and very clever but it\n\nCapturing the complexities of natural language with these metrics alone is clearly insufficient.\n\nFigure 2 :\n2Particular failure mode succeeding in the optimization of a 4-gram metric at the extreme expense of validation perplexity. The resulting samples are shown below.\n\n\n. Underlined sections of text are missing and have been filled in via either the MaskGAN or MaskMLE algorithm. Truth the next day 's show <eos> interactive telephone technology has taken a new leap in <unk> and television programmers areGround MaskGAN \nthe next day 's show <eos> interactive telephone technology has taken \na new leap in its retail business <eos> a \n\nMaskMLE \nthe next day 's show <eos> interactive telephone technology has taken \na new leap in the complicate case of the \n\n\n\nTable 1 :\n1Conditional samples from PTB for both MaskGAN and MaskMLE models.\n\nTable 2 :\n2Language model (unconditional) sample from PTB for MaskGAN.\n\n\nMaskGANPitch Black was a complete shock to me when I first saw it back in 1979 I was really looking forwardMaskMLEBlack was a complete shock to me when I first saw it back in 1969 I live in New ZealandPitch Black was a complete shock to me when I first saw it back in \n2000 In the previous years I \n\n\n\nTable 3 :\n3Conditional samples from IMDB for both MaskGAN and MaskMLE models.\n\nTable 4 :\n4Language model (unconditional) sample from IMDB for MaskGAN.\n\nTable 6 :\n6Diversity statistics within 1000 unconditional samples of PTB news snippets (20 words each).\n\nTable 7 :\n7A Mechanical Turk blind heads-up evaluation between pairs of models trained on IMDB \nreviews. 100 reviews (each 40 words long) from each model are unconditionally sampled and \nrandomized. Raters are asked which sample is preferred between each pair. 300 ratings were obtained \nfor each model pair comparison. \n\nPreferred model Grammaticality % Topicality % Overall % \n\nLM \n32.0 \n30.7 \n27.3 \nMaskGAN \n41.0 \n39.0 \n35.3 \n\nLM \n32.7 \n34.7 \n32.0 \nMaskMLE \n37.3 \n33.3 \n31.3 \n\nMaskGAN \n44.7 \n33.3 \n35.0 \nMaskMLE \n28.0 \n28.3 \n26.3 \n\nSeqGAN \n38.7 \n34.0 \n30.7 \nMaskMLE \n33.3 \n28.3 \n27.3 \n\nSeqGAN \n31.7 \n34.7 \n32.0 \nMaskGAN \n43.3 \n37.3 \n37.0 \n\n\n\nTable 8 :\n8A Mechanical Turk blind heads-up evaluation between pairs of models trained on PTB. 100 news snippets (each 20 words long) from each model are unconditionally sampled and randomized.\n\n\n<unk> of the nation 's largest economic the next day 's show <eos> interactive telephone technology has exercised a N N stake in the u.s. and france MaskMLE the next day 's show <eos> interactive telephone technology has taken a new leap in the complicate case of the the next day 's show <eos> interactive telephone technology has been <unk> in a number of clients ' estimates mountain-bike the next day 's show <eos> interactive telephone technology has instituted a week of <unk> by <unk> <unk> wis. autoWe also consider filling-in on non-continguous masks below. Truth president of the united states ronald reagan delivered his <unk> address to the nation <eos> president reagan addressed several issuesMaskGAN president of the united states and congress delivered his <unk> address to the nation <eos> mr. reagan addressed several issues MaskMLE president of the united states have been delivered his <unk> address to the nation <eos> mr. reagan addressed several issues B.1.2 LANGUAGE MODEL (UNCONDITIONAL) SAMPLES We present additional language model (unconditional) samples on PTB here. We modified SeqGAN to train and generate PTB samples using the same size architecture for the generator as in the MaskGAN generator and present samples here with MaskGAN samples. MaskGAN a <unk> basis despite the huge after-tax interest income <unk> from $ N million <eos> in west germany N N the world 's most corrupt organizations act as a multibillion-dollar <unk> atmosphere or the metropolitan zone historic array with their SeqGAN are removed <eos> another takeover target lin 's directors attempted through october <unk> and british airways is allowed three funds cineplex odeon corp. shares made fresh out of the group purchase one part of a revised class of <unk> british there are <unk> <unk> and <unk> about the <unk> seed <eos> they use pcs are <unk> and their performance <eos> B.2 IMDB MOVIE DATASET We present additional samples on IMDB here. B.2.1 CONDITIONAL SAMPLES Ground Truth Pitch Black was a complete shock to me when I first saw it back in 2000 In the previous years I MaskGAN Pitch Black was a complete shock to me when I first saw it back in 1979 I was really looking forward Pitch Black was a complete shock to me when I first saw it back in 1976 The promos were very well Pitch Black was a complete shock to me when I first saw it back in the days when I was a MaskMLE Black was a complete shock to me when I first saw it back in 1969 I live in New Zealand Pitch Black was a complete shock to me when I first saw it back in 1951 It was funny All Interiors Pitch Black was a complete shock to me when I first saw it back in the day and I was in B.2.2 LANGUAGE MODEL (UNCONDITIONAL) SAMPLES We present additional language model (unconditional) samples from MaskGAN on IMDB here. Positive: Follow the Good Earth movie linked Vacation is a comedy that credited against the modern day era yarns which has helpful something to the modern day s best It is an interesting drama based on a story of the famed Negative: I really can t understand what this movie falls like I was seeing it I m sorry to say that the only reason I watched it was because of the casting of the Emperor I was not expecting anything as Negative: That s about so much time in time a film that persevered to become cast in a very good way I didn t realize that the book was made during the 70s The story was Manhattan the Allies were to C FAILURE MODES Here we explore various failure modes of the MaskGAN model, which show up under certain bad hyperparameter settings. C.1 MODE COLLAPSE). \n\nB ADDITIONAL SAMPLES \n\nB.1 THE PENN TREEBANK (PTB) \n\nWe present additional samples on PTB here. \n\nB.1.1 CONDITIONAL SAMPLES \n\nGround Truth \nthe next day 's show <eos> interactive telephone technology has \ntaken a new leap in <unk> and television programmers are \n\nMaskGAN \nthe next day 's show <eos> interactive telephone technology has taken \na new leap in its retail business <eos> a \nthe next day 's show <eos> interactive telephone technology has long \ndominated the Ground \nWe also tried CNN-based discriminators but found that LSTMs performed the best.\nACKNOWLEDGEMENTSWe would like to thank George Tucker, Jascha Sohl-Dickstein, Jon Shlens, Ryan Sepassi, Jasmine Collins, Irwan Bello, Barret Zoph, Gabe Pereyra, Eric Jang and the Google Brain team, particularly the first year residents who humored us listening and commenting on almost every conceivable variation of this core idea.\nAn actor-critic algorithm for sequence prediction. Dzmitry Bahdanau, Philemon Brakel, Kelvin Xu, Anirudh Goyal, Ryan Lowe, Joelle Pineau, Aaron Courville, Yoshua Bengio, International Conference on Learning Representations. Dzmitry Bahdanau, Philemon Brakel, Kelvin Xu, Anirudh Goyal, Ryan Lowe, Joelle Pineau, Aaron Courville, and Yoshua Bengio. An actor-critic algorithm for sequence prediction. In International Conference on Learning Representations, 2017.\n\nScheduled sampling for sequence prediction with recurrent neural networks. Samy Bengio, Oriol Vinyals, Navdeep Jaitly, Noam Shazeer, Advances in Neural Information Processing Systems. Samy Bengio, Oriol Vinyals, Navdeep Jaitly, and Noam Shazeer. Scheduled sampling for sequence prediction with recurrent neural networks. In Advances in Neural Information Processing Systems, pp. 1171-1179, 2015.\n\nA neural probabilistic language model. Yoshua Bengio, R\u00e9jean Ducharme, Pascal Vincent, Christian Jauvin, Journal of machine learning research. 3Yoshua Bengio, R\u00e9jean Ducharme, Pascal Vincent, and Christian Jauvin. A neural probabilistic language model. Journal of machine learning research, 3(Feb):1137-1155, 2003.\n\nGenerating sentences from a continuous space. Luke Samuel R Bowman, Oriol Vilnis, Vinyals, M Andrew, Rafal Dai, Samy Jozefowicz, Bengio, 20th SIGNLL Conference on Computational Natural Language Learning (CoNLL). Samuel R Bowman, Luke Vilnis, Oriol Vinyals, Andrew M Dai, Rafal Jozefowicz, and Samy Bengio. Generating sentences from a continuous space. In 20th SIGNLL Conference on Computational Natural Language Learning (CoNLL), 2016.\n\nYanran Tong Che, Ruixiang Li, Devon Zhang, Wenjie Hjelm, Li, arXiv:1702.07983Yangqiu Song, and Yoshua Bengio. Maximum-likelihood augmented discrete generative adversarial networks. arXiv preprintTong Che, Yanran Li, Ruixiang Zhang, R Devon Hjelm, Wenjie Li, Yangqiu Song, and Yoshua Bengio. Maximum-likelihood augmented discrete generative adversarial networks. arXiv preprint arXiv:1702.07983, 2017.\n\nModel-free reinforcement learning with continuous action in practice. Thomas Degris, M Patrick, Richard S Pilarski, Sutton, American Control Conference (ACC). IEEEThomas Degris, Patrick M Pilarski, and Richard S Sutton. Model-free reinforcement learning with continuous action in practice. In American Control Conference (ACC), 2012, pp. 2177-2182. IEEE, 2012.\n\nA theoretically grounded application of dropout in recurrent neural networks. Yarin Gal, Zoubin Ghahramani, Advances in Neural Information Processing Systems. 29Yarin Gal and Zoubin Ghahramani. A theoretically grounded application of dropout in recurrent neural networks. In Advances in Neural Information Processing Systems 29, pp. 1019-1027, 2016.\n\nGenerative adversarial nets. Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, Yoshua Bengio, Advances in neural information processing systems. Ian Goodfellow, Jean Pouget-Abadie, Mehdi Mirza, Bing Xu, David Warde-Farley, Sherjil Ozair, Aaron Courville, and Yoshua Bengio. Generative adversarial nets. In Advances in neural informa- tion processing systems, pp. 2672-2680, 2014.\n\nSupervised sequence labelling with recurrent neural networks. Alex Graves, Springer385Alex Graves et al. Supervised sequence labelling with recurrent neural networks, volume 385. Springer, 2012.\n\nIshaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, Aaron Courville, arXiv:1704.00028Improved training of wasserstein gans. arXiv preprintIshaan Gulrajani, Faruk Ahmed, Martin Arjovsky, Vincent Dumoulin, and Aaron Courville. Improved training of wasserstein gans. arXiv preprint arXiv:1704.00028, 2017.\n\nBoundaryseeking generative adversarial networks. Paul R Devon Hjelm, Tong Jacob, Kyunghyun Che, Yoshua Cho, Bengio, arXiv:1702.08431arXiv preprintR Devon Hjelm, Athul Paul Jacob, Tong Che, Kyunghyun Cho, and Yoshua Bengio. Boundary- seeking generative adversarial networks. arXiv preprint arXiv:1702.08431, 2017.\n\nTying word vectors and word classifiers: A loss framework for language modeling. Khashayar Hakan Inan, Richard Khosravi, Socher, International Conference on Learning Representations. Hakan Inan, Khashayar Khosravi, and Richard Socher. Tying word vectors and word classifiers: A loss framework for language modeling. In International Conference on Learning Representations, 2017.\n\nCategorical reparameterization with gumbel-softmax. Eric Jang, Shixiang Gu, Ben Poole, International Conference on Learning Representations. Eric Jang, Shixiang Gu, and Ben Poole. Categorical reparameterization with gumbel-softmax. In International Conference on Learning Representations, 2017.\n\nAdam: A method for stochastic optimization. Diederik Kingma, Jimmy Ba, International Conference on Learning Representations. Diederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In International Conference on Learning Representations, 2015.\n\nProfessor forcing: A new algorithm for training recurrent networks. Alex Lamb, Anirudh Goyal, Ying Zhang, Saizheng Zhang, Aaron Courville, Yoshua Bengio, Advances In Neural Information Processing Systems. Alex Lamb, Anirudh Goyal, Ying Zhang, Saizheng Zhang, Aaron Courville, and Yoshua Bengio. Professor forcing: A new algorithm for training recurrent networks. In Advances In Neural Information Processing Systems, pp. 4601-4609, 2016.\n\nAdversarial learning for neural dialogue generation. Jiwei Li, Will Monroe, Tianlin Shi, Alan Ritter, Dan Jurafsky, Conference on Empirical Methods in Natural Language Processing. Jiwei Li, Will Monroe, Tianlin Shi, Alan Ritter, and Dan Jurafsky. Adversarial learning for neural dialogue generation. In Conference on Empirical Methods in Natural Language Processing, 2017.\n\nEffective approaches to attention-based neural machine translation. Minh-Thang Luong, Hieu Pham, Christopher D Manning, Conference on Empirical Methods in Natural Language Processing. Minh-Thang Luong, Hieu Pham, and Christopher D Manning. Effective approaches to attention-based neural machine translation. In Conference on Empirical Methods in Natural Language Processing, pp. 1412-1421, 2015.\n\nLearning word vectors for sentiment analysis. L Andrew, Raymond E Maas, Daly, T Peter, Dan Pham, Huang, Y Andrew, Christopher Ng, Potts, Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies. the 49th Annual Meeting of the Association for Computational Linguistics: Human Language TechnologiesAssociation for Computational Linguistics1Andrew L Maas, Raymond E Daly, Peter T Pham, Dan Huang, Andrew Y Ng, and Christopher Potts. Learning word vectors for sentiment analysis. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics: Human Language Technologies-Volume 1, pp. 142-150. Association for Computational Linguistics, 2011.\n\nBuilding a large annotated corpus of english: The penn treebank. P Mitchell, Mary Ann Marcus, Beatrice Marcinkiewicz, Santorini, Computational linguistics. 192Mitchell P Marcus, Mary Ann Marcinkiewicz, and Beatrice Santorini. Building a large annotated corpus of english: The penn treebank. Computational linguistics, 19(2):313-330, 1993.\n\nRecurrent neural network based language model. Tomas Mikolov, Martin Karafi\u00e1t, Lukas Burget, Jan Cernock\u1ef3, Sanjeev Khudanpur, In Interspeech. 23Tomas Mikolov, Martin Karafi\u00e1t, Lukas Burget, Jan Cernock\u1ef3, and Sanjeev Khudanpur. Recurrent neural network based language model. In Interspeech, volume 2, pp. 3, 2010.\n\nVirtual adversarial training for semi-supervised text classification. Takeru Miyato, M Andrew, Ian Dai, Goodfellow, International Conference on Learning Representations. 105025Takeru Miyato, Andrew M Dai, and Ian Goodfellow. Virtual adversarial training for semi-supervised text classification. In International Conference on Learning Representations, volume 1050, pp. 25, 2017.\n\nBleu: a method for automatic evaluation of machine translation. Kishore Papineni, Salim Roukos, Todd Ward, Wei-Jing Zhu, Proceedings of the 40th annual meeting on association for computational linguistics. the 40th annual meeting on association for computational linguisticsAssociation for Computational LinguisticsKishore Papineni, Salim Roukos, Todd Ward, and Wei-Jing Zhu. Bleu: a method for automatic evaluation of machine translation. In Proceedings of the 40th annual meeting on association for computational linguistics, pp. 311-318. Association for Computational Linguistics, 2002.\n\nUsing the output embedding to improve language models. Ofir Press, Lior Wolf, 15th Conference of the European Chapter of the Association for Computational Linguistics. Ofir Press and Lior Wolf. Using the output embedding to improve language models. In 15th Conference of the European Chapter of the Association for Computational Linguistics, pp. 157- 163, 2017.\n\nAdversarial generation of natural language. Sai Rajeswar, Sandeep Subramanian, Francis Dutil, Christopher Pal, Aaron Courville, 2nd Workshop on Representation Learning for NLP. Sai Rajeswar, Sandeep Subramanian, Francis Dutil, Christopher Pal, and Aaron Courville. Adversarial generation of natural language. In 2nd Workshop on Representation Learning for NLP, 2017.\n\nAurelio Marc, Sumit Ranzato, Michael Chopra, Wojciech Auli, Zaremba, arXiv:1511.06732Sequence level training with recurrent neural networks. arXiv preprintMarc'Aurelio Ranzato, Sumit Chopra, Michael Auli, and Wojciech Zaremba. Sequence level training with recurrent neural networks. arXiv preprint arXiv:1511.06732, 2015.\n\nSequence to sequence learning with neural networks. Ilya Sutskever, Oriol Vinyals, Quoc V Le, Advances in neural information processing systems. Ilya Sutskever, Oriol Vinyals, and Quoc V Le. Sequence to sequence learning with neural networks. In Advances in neural information processing systems, pp. 3104-3112, 2014.\n\nReinforcement learning: An introduction. S Richard, Andrew G Sutton, Barto, MIT press Cambridge1Richard S Sutton and Andrew G Barto. Reinforcement learning: An introduction, volume 1. MIT press Cambridge, 1998.\n\nPolicy gradient methods for reinforcement learning with function approximation. S Richard, David A Sutton, Mcallester, P Satinder, Yishay Singh, Mansour, Advances in neural information processing systems. Richard S Sutton, David A McAllester, Satinder P Singh, and Yishay Mansour. Policy gradient meth- ods for reinforcement learning with function approximation. In Advances in neural information processing systems, pp. 1057-1063, 2000.\n\nA\u00e4ron van den Oord, and Matthias Bethge. A note on the evaluation of generative models. Lucas Theis, International Conference on Learning Representations. Lucas Theis, A\u00e4ron van den Oord, and Matthias Bethge. A note on the evaluation of generative models. In International Conference on Learning Representations, 2016.\n\nRebar: Low-variance, unbiased gradient estimates for discrete latent variable models. George Tucker, Andriy Mnih, Chris J Maddison, Dieterich Lawson, Jascha Sohl-Dickstein, 31st Conference on Neural Information Processing Systems. George Tucker, Andriy Mnih, Chris J Maddison, Dieterich Lawson, and Jascha Sohl-Dickstein. Rebar: Low-variance, unbiased gradient estimates for discrete latent variable models. In 31st Conference on Neural Information Processing Systems (NIPS 2017), 2017.\n\nAttention is all you need. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, Illia Polosukhin, 31st Conference on Neural Information Processing Systems. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Lukasz Kaiser, and Illia Polosukhin. Attention is all you need. In 31st Conference on Neural Information Processing Systems (NIPS 2017), 2017.\n\nGoogle's neural machine translation system: Bridging the gap between human and machine translation. Yonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V Le, Mohammad Norouzi, Wolfgang Macherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, Jeff Klingner, Apurva Shah, Melvin Johnson, Xiaobing Liu, Lukasz Kaiser, Stephan Gouws, Yoshikiyo Kato, Taku Kudo, Hideto Kazawa, Keith Stevens, George Kurian, Nishant Patil, Wei Wang, abs/1609.08144Oriol Vinyals. Greg Corrado, Macduff Hughes, and Jeffrey DeanCoRRYonghui Wu, Mike Schuster, Zhifeng Chen, Quoc V. Le, Mohammad Norouzi, Wolfgang Macherey, Maxim Krikun, Yuan Cao, Qin Gao, Klaus Macherey, Jeff Klingner, Apurva Shah, Melvin Johnson, Xiaobing Liu, Lukasz Kaiser, Stephan Gouws, Yoshikiyo Kato, Taku Kudo, Hideto Kazawa, Keith Stevens, George Kurian, Nishant Patil, Wei Wang, Cliff Young, Jason Smith, Jason Riesa, Alex Rudnick, Oriol Vinyals, Greg Corrado, Macduff Hughes, and Jeffrey Dean. Google's neural machine translation system: Bridging the gap between human and machine translation. CoRR, abs/1609.08144, 2016. URL http://arxiv.org/abs/1609.08144.\n\nSeqGAN: Sequence generative adversarial nets with policy gradient. Lantao Yu, Weinan Zhang, Jun Wang, Yong Yu, Association for the Advancement of Artificial Intelligence. Lantao Yu, Weinan Zhang, Jun Wang, and Yong Yu. SeqGAN: Sequence generative adversarial nets with policy gradient. In Association for the Advancement of Artificial Intelligence, pp. 2852-2858, 2017.\n\nNeural architecture search with reinforcement learning. Barret Zoph, V Quoc, Le, International Conference on Learning Representations. Barret Zoph and Quoc V Le. Neural architecture search with reinforcement learning. In International Conference on Learning Representations, 2017.\n", "annotations": {"author": "[{\"end\":89,\"start\":54},{\"end\":105,\"start\":90},{\"end\":135,\"start\":106},{\"end\":149,\"start\":136}]", "publisher": null, "author_last_name": "[{\"end\":67,\"start\":62},{\"end\":104,\"start\":94},{\"end\":118,\"start\":115},{\"end\":148,\"start\":143}]", "author_first_name": "[{\"end\":61,\"start\":54},{\"end\":93,\"start\":90},{\"end\":112,\"start\":106},{\"end\":114,\"start\":113},{\"end\":142,\"start\":136}]", "author_affiliation": null, "title": "[{\"end\":51,\"start\":1},{\"end\":200,\"start\":150}]", "venue": null, "abstract": "[{\"end\":1694,\"start\":249}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b8\"},\"end\":1764,\"start\":1743},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":1934,\"start\":1912},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":1973,\"start\":1956},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2019,\"start\":1998},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":2719,\"start\":2700},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2764,\"start\":2743},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3196,\"start\":3172},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4837,\"start\":4817},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":5453,\"start\":5436},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":6948,\"start\":6932},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7370,\"start\":7351},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8117,\"start\":8098},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":8260,\"start\":8240},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8320,\"start\":8296},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":8617,\"start\":8595},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9129,\"start\":9107},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9301,\"start\":9279},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9529,\"start\":9507},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":10598,\"start\":10574},{\"end\":12644,\"start\":12633},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":14181,\"start\":14160},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":14274,\"start\":14258},{\"end\":14461,\"start\":14458},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":15328,\"start\":15306},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":15348,\"start\":15328},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":18269,\"start\":18250},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18812,\"start\":18789},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20495,\"start\":20474},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":20862,\"start\":20839},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":23538,\"start\":23522},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":24121,\"start\":24105},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":25342,\"start\":25323},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":26663,\"start\":26644},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":28940,\"start\":28919},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":29503,\"start\":29484},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":30062,\"start\":30042},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":30084,\"start\":30064},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":30102,\"start\":30084},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":30482,\"start\":30459},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":30722,\"start\":30699}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":33273,\"start\":33099},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":33767,\"start\":33274},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33845,\"start\":33768},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":33917,\"start\":33846},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":34220,\"start\":33918},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":34299,\"start\":34221},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":34372,\"start\":34300},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":34477,\"start\":34373},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":35122,\"start\":34478},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":35317,\"start\":35123},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":39379,\"start\":35318}]", "paragraph": "[{\"end\":3131,\"start\":1710},{\"end\":4666,\"start\":3133},{\"end\":5322,\"start\":4668},{\"end\":6084,\"start\":5324},{\"end\":6188,\"start\":6086},{\"end\":6216,\"start\":6190},{\"end\":6289,\"start\":6218},{\"end\":6365,\"start\":6291},{\"end\":6447,\"start\":6367},{\"end\":6923,\"start\":6464},{\"end\":7331,\"start\":6925},{\"end\":7745,\"start\":7333},{\"end\":8005,\"start\":7747},{\"end\":8286,\"start\":8007},{\"end\":8970,\"start\":8288},{\"end\":9439,\"start\":8972},{\"end\":9532,\"start\":9441},{\"end\":10092,\"start\":9534},{\"end\":10395,\"start\":10115},{\"end\":11025,\"start\":10412},{\"end\":11212,\"start\":11027},{\"end\":11514,\"start\":11214},{\"end\":12645,\"start\":11635},{\"end\":13404,\"start\":12647},{\"end\":13558,\"start\":13467},{\"end\":13893,\"start\":13596},{\"end\":14556,\"start\":13906},{\"end\":14825,\"start\":14598},{\"end\":14984,\"start\":14881},{\"end\":15349,\"start\":15027},{\"end\":15787,\"start\":15351},{\"end\":16306,\"start\":15906},{\"end\":16409,\"start\":16308},{\"end\":16728,\"start\":16530},{\"end\":17179,\"start\":16730},{\"end\":17844,\"start\":17181},{\"end\":18598,\"start\":17863},{\"end\":19192,\"start\":18613},{\"end\":20146,\"start\":19194},{\"end\":20420,\"start\":20162},{\"end\":20715,\"start\":20448},{\"end\":21204,\"start\":20717},{\"end\":21290,\"start\":21228},{\"end\":21579,\"start\":21333},{\"end\":22184,\"start\":21602},{\"end\":22599,\"start\":22186},{\"end\":22722,\"start\":22623},{\"end\":22972,\"start\":22780},{\"end\":23207,\"start\":22984},{\"end\":24330,\"start\":23243},{\"end\":24667,\"start\":24340},{\"end\":24996,\"start\":24669},{\"end\":25494,\"start\":24998},{\"end\":26752,\"start\":25512},{\"end\":27467,\"start\":26773},{\"end\":27670,\"start\":27469},{\"end\":27957,\"start\":27685},{\"end\":28530,\"start\":27959},{\"end\":28941,\"start\":28532},{\"end\":29392,\"start\":28943},{\"end\":29965,\"start\":29394},{\"end\":30896,\"start\":29967},{\"end\":31098,\"start\":30898},{\"end\":31516,\"start\":31136},{\"end\":31583,\"start\":31518},{\"end\":31700,\"start\":31585},{\"end\":31943,\"start\":31731},{\"end\":32121,\"start\":31945},{\"end\":32736,\"start\":32170},{\"end\":33000,\"start\":32738},{\"end\":33098,\"start\":33002}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":11634,\"start\":11515},{\"attributes\":{\"id\":\"formula_1\"},\"end\":13466,\"start\":13405},{\"attributes\":{\"id\":\"formula_2\"},\"end\":13595,\"start\":13559},{\"attributes\":{\"id\":\"formula_3\"},\"end\":14597,\"start\":14557},{\"attributes\":{\"id\":\"formula_4\"},\"end\":14880,\"start\":14826},{\"attributes\":{\"id\":\"formula_5\"},\"end\":15026,\"start\":14985},{\"attributes\":{\"id\":\"formula_6\"},\"end\":15905,\"start\":15788},{\"attributes\":{\"id\":\"formula_7\"},\"end\":16462,\"start\":16410}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":21289,\"start\":21282},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":21526,\"start\":21519},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":22919,\"start\":22912},{\"end\":24436,\"start\":24429},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":25896,\"start\":25889}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1708,\"start\":1696},{\"attributes\":{\"n\":\"2\"},\"end\":6462,\"start\":6450},{\"attributes\":{\"n\":\"3\"},\"end\":10102,\"start\":10095},{\"attributes\":{\"n\":\"3.1\"},\"end\":10113,\"start\":10105},{\"attributes\":{\"n\":\"3.2\"},\"end\":10410,\"start\":10398},{\"attributes\":{\"n\":\"3.3\"},\"end\":13904,\"start\":13896},{\"attributes\":{\"n\":\"3.4\"},\"end\":16528,\"start\":16464},{\"attributes\":{\"n\":\"3.5\"},\"end\":17861,\"start\":17847},{\"attributes\":{\"n\":\"4\"},\"end\":18611,\"start\":18601},{\"attributes\":{\"n\":\"5\"},\"end\":20160,\"start\":20149},{\"attributes\":{\"n\":\"5.1\"},\"end\":20446,\"start\":20423},{\"attributes\":{\"n\":\"5.1.1\"},\"end\":21226,\"start\":21207},{\"attributes\":{\"n\":\"5.1.2\"},\"end\":21331,\"start\":21293},{\"attributes\":{\"n\":\"5.2\"},\"end\":21600,\"start\":21582},{\"attributes\":{\"n\":\"5.2.1\"},\"end\":22621,\"start\":22602},{\"end\":22737,\"start\":22725},{\"attributes\":{\"n\":\"5.2.2\"},\"end\":22778,\"start\":22740},{\"end\":22982,\"start\":22975},{\"attributes\":{\"n\":\"5.3\"},\"end\":23241,\"start\":23210},{\"end\":24338,\"start\":24333},{\"attributes\":{\"n\":\"5.4\"},\"end\":25510,\"start\":25497},{\"attributes\":{\"n\":\"5.5\"},\"end\":26771,\"start\":26755},{\"attributes\":{\"n\":\"6\"},\"end\":27683,\"start\":27673},{\"end\":31134,\"start\":31101},{\"end\":31729,\"start\":31703},{\"end\":32168,\"start\":32124},{\"end\":33110,\"start\":33100},{\"end\":33778,\"start\":33769},{\"end\":33856,\"start\":33847},{\"end\":34231,\"start\":34222},{\"end\":34310,\"start\":34301},{\"end\":34383,\"start\":34374},{\"end\":34488,\"start\":34479},{\"end\":35133,\"start\":35124}]", "table": "[{\"end\":33767,\"start\":33513},{\"end\":34220,\"start\":34121},{\"end\":35122,\"start\":34490},{\"end\":39379,\"start\":38896}]", "figure_caption": "[{\"end\":33273,\"start\":33112},{\"end\":33513,\"start\":33276},{\"end\":33845,\"start\":33780},{\"end\":33917,\"start\":33858},{\"end\":34121,\"start\":33920},{\"end\":34299,\"start\":34233},{\"end\":34372,\"start\":34312},{\"end\":34477,\"start\":34385},{\"end\":35317,\"start\":35135},{\"end\":38896,\"start\":35320}]", "figure_ref": "[{\"end\":12224,\"start\":12216},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":32540,\"start\":32532}]", "bib_author_first_name": "[{\"end\":39850,\"start\":39843},{\"end\":39869,\"start\":39861},{\"end\":39884,\"start\":39878},{\"end\":39896,\"start\":39889},{\"end\":39908,\"start\":39904},{\"end\":39921,\"start\":39915},{\"end\":39935,\"start\":39930},{\"end\":39953,\"start\":39947},{\"end\":40333,\"start\":40329},{\"end\":40347,\"start\":40342},{\"end\":40364,\"start\":40357},{\"end\":40377,\"start\":40373},{\"end\":40696,\"start\":40690},{\"end\":40711,\"start\":40705},{\"end\":40728,\"start\":40722},{\"end\":40747,\"start\":40738},{\"end\":41017,\"start\":41013},{\"end\":41040,\"start\":41035},{\"end\":41059,\"start\":41058},{\"end\":41073,\"start\":41068},{\"end\":41083,\"start\":41079},{\"end\":41410,\"start\":41404},{\"end\":41429,\"start\":41421},{\"end\":41439,\"start\":41434},{\"end\":41453,\"start\":41447},{\"end\":41882,\"start\":41876},{\"end\":41892,\"start\":41891},{\"end\":41911,\"start\":41902},{\"end\":42251,\"start\":42246},{\"end\":42263,\"start\":42257},{\"end\":42551,\"start\":42548},{\"end\":42568,\"start\":42564},{\"end\":42589,\"start\":42584},{\"end\":42601,\"start\":42597},{\"end\":42611,\"start\":42606},{\"end\":42633,\"start\":42626},{\"end\":42646,\"start\":42641},{\"end\":42664,\"start\":42658},{\"end\":43026,\"start\":43022},{\"end\":43162,\"start\":43156},{\"end\":43179,\"start\":43174},{\"end\":43193,\"start\":43187},{\"end\":43211,\"start\":43204},{\"end\":43227,\"start\":43222},{\"end\":43527,\"start\":43523},{\"end\":43547,\"start\":43543},{\"end\":43564,\"start\":43555},{\"end\":43576,\"start\":43570},{\"end\":43878,\"start\":43869},{\"end\":43898,\"start\":43891},{\"end\":44224,\"start\":44220},{\"end\":44239,\"start\":44231},{\"end\":44247,\"start\":44244},{\"end\":44516,\"start\":44508},{\"end\":44530,\"start\":44525},{\"end\":44799,\"start\":44795},{\"end\":44813,\"start\":44806},{\"end\":44825,\"start\":44821},{\"end\":44841,\"start\":44833},{\"end\":44854,\"start\":44849},{\"end\":44872,\"start\":44866},{\"end\":45224,\"start\":45219},{\"end\":45233,\"start\":45229},{\"end\":45249,\"start\":45242},{\"end\":45259,\"start\":45255},{\"end\":45271,\"start\":45268},{\"end\":45618,\"start\":45608},{\"end\":45630,\"start\":45626},{\"end\":45650,\"start\":45637},{\"end\":45984,\"start\":45983},{\"end\":46000,\"start\":45993},{\"end\":46002,\"start\":46001},{\"end\":46016,\"start\":46015},{\"end\":46027,\"start\":46024},{\"end\":46042,\"start\":46041},{\"end\":46062,\"start\":46051},{\"end\":46732,\"start\":46731},{\"end\":46747,\"start\":46743},{\"end\":46751,\"start\":46748},{\"end\":46768,\"start\":46760},{\"end\":47058,\"start\":47053},{\"end\":47074,\"start\":47068},{\"end\":47090,\"start\":47085},{\"end\":47102,\"start\":47099},{\"end\":47120,\"start\":47113},{\"end\":47396,\"start\":47390},{\"end\":47406,\"start\":47405},{\"end\":47418,\"start\":47415},{\"end\":47771,\"start\":47764},{\"end\":47787,\"start\":47782},{\"end\":47800,\"start\":47796},{\"end\":47815,\"start\":47807},{\"end\":48350,\"start\":48346},{\"end\":48362,\"start\":48358},{\"end\":48701,\"start\":48698},{\"end\":48719,\"start\":48712},{\"end\":48740,\"start\":48733},{\"end\":48759,\"start\":48748},{\"end\":48770,\"start\":48765},{\"end\":49029,\"start\":49022},{\"end\":49041,\"start\":49036},{\"end\":49058,\"start\":49051},{\"end\":49075,\"start\":49067},{\"end\":49401,\"start\":49397},{\"end\":49418,\"start\":49413},{\"end\":49434,\"start\":49428},{\"end\":49706,\"start\":49705},{\"end\":49722,\"start\":49716},{\"end\":49724,\"start\":49723},{\"end\":49957,\"start\":49956},{\"end\":49972,\"start\":49967},{\"end\":49974,\"start\":49973},{\"end\":49996,\"start\":49995},{\"end\":50013,\"start\":50007},{\"end\":50408,\"start\":50403},{\"end\":50727,\"start\":50721},{\"end\":50742,\"start\":50736},{\"end\":50754,\"start\":50749},{\"end\":50756,\"start\":50755},{\"end\":50776,\"start\":50767},{\"end\":50791,\"start\":50785},{\"end\":51156,\"start\":51150},{\"end\":51170,\"start\":51166},{\"end\":51184,\"start\":51180},{\"end\":51198,\"start\":51193},{\"end\":51215,\"start\":51210},{\"end\":51228,\"start\":51223},{\"end\":51230,\"start\":51229},{\"end\":51244,\"start\":51238},{\"end\":51258,\"start\":51253},{\"end\":51668,\"start\":51661},{\"end\":51677,\"start\":51673},{\"end\":51695,\"start\":51688},{\"end\":51706,\"start\":51702},{\"end\":51708,\"start\":51707},{\"end\":51721,\"start\":51713},{\"end\":51739,\"start\":51731},{\"end\":51755,\"start\":51750},{\"end\":51768,\"start\":51764},{\"end\":51777,\"start\":51774},{\"end\":51788,\"start\":51783},{\"end\":51803,\"start\":51799},{\"end\":51820,\"start\":51814},{\"end\":51833,\"start\":51827},{\"end\":51851,\"start\":51843},{\"end\":51863,\"start\":51857},{\"end\":51879,\"start\":51872},{\"end\":51896,\"start\":51887},{\"end\":51907,\"start\":51903},{\"end\":51920,\"start\":51914},{\"end\":51934,\"start\":51929},{\"end\":51950,\"start\":51944},{\"end\":51966,\"start\":51959},{\"end\":51977,\"start\":51974},{\"end\":52742,\"start\":52736},{\"end\":52753,\"start\":52747},{\"end\":52764,\"start\":52761},{\"end\":52775,\"start\":52771},{\"end\":53102,\"start\":53096},{\"end\":53110,\"start\":53109}]", "bib_author_last_name": "[{\"end\":39859,\"start\":39851},{\"end\":39876,\"start\":39870},{\"end\":39887,\"start\":39885},{\"end\":39902,\"start\":39897},{\"end\":39913,\"start\":39909},{\"end\":39928,\"start\":39922},{\"end\":39945,\"start\":39936},{\"end\":39960,\"start\":39954},{\"end\":40340,\"start\":40334},{\"end\":40355,\"start\":40348},{\"end\":40371,\"start\":40365},{\"end\":40385,\"start\":40378},{\"end\":40703,\"start\":40697},{\"end\":40720,\"start\":40712},{\"end\":40736,\"start\":40729},{\"end\":40754,\"start\":40748},{\"end\":41033,\"start\":41018},{\"end\":41047,\"start\":41041},{\"end\":41056,\"start\":41049},{\"end\":41066,\"start\":41060},{\"end\":41077,\"start\":41074},{\"end\":41094,\"start\":41084},{\"end\":41102,\"start\":41096},{\"end\":41419,\"start\":41411},{\"end\":41432,\"start\":41430},{\"end\":41445,\"start\":41440},{\"end\":41459,\"start\":41454},{\"end\":41463,\"start\":41461},{\"end\":41889,\"start\":41883},{\"end\":41900,\"start\":41893},{\"end\":41920,\"start\":41912},{\"end\":41928,\"start\":41922},{\"end\":42255,\"start\":42252},{\"end\":42274,\"start\":42264},{\"end\":42562,\"start\":42552},{\"end\":42582,\"start\":42569},{\"end\":42595,\"start\":42590},{\"end\":42604,\"start\":42602},{\"end\":42624,\"start\":42612},{\"end\":42639,\"start\":42634},{\"end\":42656,\"start\":42647},{\"end\":42671,\"start\":42665},{\"end\":43033,\"start\":43027},{\"end\":43172,\"start\":43163},{\"end\":43185,\"start\":43180},{\"end\":43202,\"start\":43194},{\"end\":43220,\"start\":43212},{\"end\":43237,\"start\":43228},{\"end\":43541,\"start\":43528},{\"end\":43553,\"start\":43548},{\"end\":43568,\"start\":43565},{\"end\":43580,\"start\":43577},{\"end\":43588,\"start\":43582},{\"end\":43889,\"start\":43879},{\"end\":43907,\"start\":43899},{\"end\":43915,\"start\":43909},{\"end\":44229,\"start\":44225},{\"end\":44242,\"start\":44240},{\"end\":44253,\"start\":44248},{\"end\":44523,\"start\":44517},{\"end\":44533,\"start\":44531},{\"end\":44804,\"start\":44800},{\"end\":44819,\"start\":44814},{\"end\":44831,\"start\":44826},{\"end\":44847,\"start\":44842},{\"end\":44864,\"start\":44855},{\"end\":44879,\"start\":44873},{\"end\":45227,\"start\":45225},{\"end\":45240,\"start\":45234},{\"end\":45253,\"start\":45250},{\"end\":45266,\"start\":45260},{\"end\":45280,\"start\":45272},{\"end\":45624,\"start\":45619},{\"end\":45635,\"start\":45631},{\"end\":45658,\"start\":45651},{\"end\":45991,\"start\":45985},{\"end\":46007,\"start\":46003},{\"end\":46013,\"start\":46009},{\"end\":46022,\"start\":46017},{\"end\":46032,\"start\":46028},{\"end\":46039,\"start\":46034},{\"end\":46049,\"start\":46043},{\"end\":46065,\"start\":46063},{\"end\":46072,\"start\":46067},{\"end\":46741,\"start\":46733},{\"end\":46758,\"start\":46752},{\"end\":46782,\"start\":46769},{\"end\":46793,\"start\":46784},{\"end\":47066,\"start\":47059},{\"end\":47083,\"start\":47075},{\"end\":47097,\"start\":47091},{\"end\":47111,\"start\":47103},{\"end\":47130,\"start\":47121},{\"end\":47403,\"start\":47397},{\"end\":47413,\"start\":47407},{\"end\":47422,\"start\":47419},{\"end\":47434,\"start\":47424},{\"end\":47780,\"start\":47772},{\"end\":47794,\"start\":47788},{\"end\":47805,\"start\":47801},{\"end\":47819,\"start\":47816},{\"end\":48356,\"start\":48351},{\"end\":48367,\"start\":48363},{\"end\":48710,\"start\":48702},{\"end\":48731,\"start\":48720},{\"end\":48746,\"start\":48741},{\"end\":48763,\"start\":48760},{\"end\":48780,\"start\":48771},{\"end\":49034,\"start\":49030},{\"end\":49049,\"start\":49042},{\"end\":49065,\"start\":49059},{\"end\":49080,\"start\":49076},{\"end\":49089,\"start\":49082},{\"end\":49411,\"start\":49402},{\"end\":49426,\"start\":49419},{\"end\":49437,\"start\":49435},{\"end\":49714,\"start\":49707},{\"end\":49731,\"start\":49725},{\"end\":49738,\"start\":49733},{\"end\":49965,\"start\":49958},{\"end\":49981,\"start\":49975},{\"end\":49993,\"start\":49983},{\"end\":50005,\"start\":49997},{\"end\":50019,\"start\":50014},{\"end\":50028,\"start\":50021},{\"end\":50414,\"start\":50409},{\"end\":50734,\"start\":50728},{\"end\":50747,\"start\":50743},{\"end\":50765,\"start\":50757},{\"end\":50783,\"start\":50777},{\"end\":50806,\"start\":50792},{\"end\":51164,\"start\":51157},{\"end\":51178,\"start\":51171},{\"end\":51191,\"start\":51185},{\"end\":51208,\"start\":51199},{\"end\":51221,\"start\":51216},{\"end\":51236,\"start\":51231},{\"end\":51251,\"start\":51245},{\"end\":51269,\"start\":51259},{\"end\":51671,\"start\":51669},{\"end\":51686,\"start\":51678},{\"end\":51700,\"start\":51696},{\"end\":51711,\"start\":51709},{\"end\":51729,\"start\":51722},{\"end\":51748,\"start\":51740},{\"end\":51762,\"start\":51756},{\"end\":51772,\"start\":51769},{\"end\":51781,\"start\":51778},{\"end\":51797,\"start\":51789},{\"end\":51812,\"start\":51804},{\"end\":51825,\"start\":51821},{\"end\":51841,\"start\":51834},{\"end\":51855,\"start\":51852},{\"end\":51870,\"start\":51864},{\"end\":51885,\"start\":51880},{\"end\":51901,\"start\":51897},{\"end\":51912,\"start\":51908},{\"end\":51927,\"start\":51921},{\"end\":51942,\"start\":51935},{\"end\":51957,\"start\":51951},{\"end\":51972,\"start\":51967},{\"end\":51982,\"start\":51978},{\"end\":52745,\"start\":52743},{\"end\":52759,\"start\":52754},{\"end\":52769,\"start\":52765},{\"end\":52778,\"start\":52776},{\"end\":53107,\"start\":53103},{\"end\":53115,\"start\":53111},{\"end\":53119,\"start\":53117}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":14096841},\"end\":40252,\"start\":39792},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":1820089},\"end\":40649,\"start\":40254},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":221275765},\"end\":40965,\"start\":40651},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":748227},\"end\":41402,\"start\":40967},{\"attributes\":{\"doi\":\"arXiv:1702.07983\",\"id\":\"b4\"},\"end\":41804,\"start\":41404},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":2940568},\"end\":42166,\"start\":41806},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":15953218},\"end\":42517,\"start\":42168},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1033682},\"end\":42958,\"start\":42519},{\"attributes\":{\"id\":\"b8\"},\"end\":43154,\"start\":42960},{\"attributes\":{\"doi\":\"arXiv:1704.00028\",\"id\":\"b9\"},\"end\":43472,\"start\":43156},{\"attributes\":{\"doi\":\"arXiv:1702.08431\",\"id\":\"b10\"},\"end\":43786,\"start\":43474},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":7443908},\"end\":44166,\"start\":43788},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":2428314},\"end\":44462,\"start\":44168},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":6628106},\"end\":44725,\"start\":44464},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":14994977},\"end\":45164,\"start\":44727},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":98180},\"end\":45538,\"start\":45166},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":1998416},\"end\":45935,\"start\":45540},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":1428702},\"end\":46664,\"start\":45937},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":252796},\"end\":47004,\"start\":46666},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":17048224},\"end\":47318,\"start\":47006},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":9016624},\"end\":47698,\"start\":47320},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":11080756},\"end\":48289,\"start\":47700},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":836219},\"end\":48652,\"start\":48291},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":397556},\"end\":49020,\"start\":48654},{\"attributes\":{\"doi\":\"arXiv:1511.06732\",\"id\":\"b24\"},\"end\":49343,\"start\":49022},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":7961699},\"end\":49662,\"start\":49345},{\"attributes\":{\"id\":\"b26\"},\"end\":49874,\"start\":49664},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":1211821},\"end\":50313,\"start\":49876},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":2187805},\"end\":50633,\"start\":50315},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":3203345},\"end\":51121,\"start\":50635},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":13756489},\"end\":51559,\"start\":51123},{\"attributes\":{\"doi\":\"abs/1609.08144\",\"id\":\"b31\",\"matched_paper_id\":3603249},\"end\":52667,\"start\":51561},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":3439214},\"end\":53038,\"start\":52669},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":12713052},\"end\":53320,\"start\":53040}]", "bib_title": "[{\"end\":39841,\"start\":39792},{\"end\":40327,\"start\":40254},{\"end\":40688,\"start\":40651},{\"end\":41011,\"start\":40967},{\"end\":41874,\"start\":41806},{\"end\":42244,\"start\":42168},{\"end\":42546,\"start\":42519},{\"end\":43867,\"start\":43788},{\"end\":44218,\"start\":44168},{\"end\":44506,\"start\":44464},{\"end\":44793,\"start\":44727},{\"end\":45217,\"start\":45166},{\"end\":45606,\"start\":45540},{\"end\":45981,\"start\":45937},{\"end\":46729,\"start\":46666},{\"end\":47051,\"start\":47006},{\"end\":47388,\"start\":47320},{\"end\":47762,\"start\":47700},{\"end\":48344,\"start\":48291},{\"end\":48696,\"start\":48654},{\"end\":49395,\"start\":49345},{\"end\":49954,\"start\":49876},{\"end\":50401,\"start\":50315},{\"end\":50719,\"start\":50635},{\"end\":51148,\"start\":51123},{\"end\":51659,\"start\":51561},{\"end\":52734,\"start\":52669},{\"end\":53094,\"start\":53040}]", "bib_author": "[{\"end\":39861,\"start\":39843},{\"end\":39878,\"start\":39861},{\"end\":39889,\"start\":39878},{\"end\":39904,\"start\":39889},{\"end\":39915,\"start\":39904},{\"end\":39930,\"start\":39915},{\"end\":39947,\"start\":39930},{\"end\":39962,\"start\":39947},{\"end\":40342,\"start\":40329},{\"end\":40357,\"start\":40342},{\"end\":40373,\"start\":40357},{\"end\":40387,\"start\":40373},{\"end\":40705,\"start\":40690},{\"end\":40722,\"start\":40705},{\"end\":40738,\"start\":40722},{\"end\":40756,\"start\":40738},{\"end\":41035,\"start\":41013},{\"end\":41049,\"start\":41035},{\"end\":41058,\"start\":41049},{\"end\":41068,\"start\":41058},{\"end\":41079,\"start\":41068},{\"end\":41096,\"start\":41079},{\"end\":41104,\"start\":41096},{\"end\":41421,\"start\":41404},{\"end\":41434,\"start\":41421},{\"end\":41447,\"start\":41434},{\"end\":41461,\"start\":41447},{\"end\":41465,\"start\":41461},{\"end\":41891,\"start\":41876},{\"end\":41902,\"start\":41891},{\"end\":41922,\"start\":41902},{\"end\":41930,\"start\":41922},{\"end\":42257,\"start\":42246},{\"end\":42276,\"start\":42257},{\"end\":42564,\"start\":42548},{\"end\":42584,\"start\":42564},{\"end\":42597,\"start\":42584},{\"end\":42606,\"start\":42597},{\"end\":42626,\"start\":42606},{\"end\":42641,\"start\":42626},{\"end\":42658,\"start\":42641},{\"end\":42673,\"start\":42658},{\"end\":43035,\"start\":43022},{\"end\":43174,\"start\":43156},{\"end\":43187,\"start\":43174},{\"end\":43204,\"start\":43187},{\"end\":43222,\"start\":43204},{\"end\":43239,\"start\":43222},{\"end\":43543,\"start\":43523},{\"end\":43555,\"start\":43543},{\"end\":43570,\"start\":43555},{\"end\":43582,\"start\":43570},{\"end\":43590,\"start\":43582},{\"end\":43891,\"start\":43869},{\"end\":43909,\"start\":43891},{\"end\":43917,\"start\":43909},{\"end\":44231,\"start\":44220},{\"end\":44244,\"start\":44231},{\"end\":44255,\"start\":44244},{\"end\":44525,\"start\":44508},{\"end\":44535,\"start\":44525},{\"end\":44806,\"start\":44795},{\"end\":44821,\"start\":44806},{\"end\":44833,\"start\":44821},{\"end\":44849,\"start\":44833},{\"end\":44866,\"start\":44849},{\"end\":44881,\"start\":44866},{\"end\":45229,\"start\":45219},{\"end\":45242,\"start\":45229},{\"end\":45255,\"start\":45242},{\"end\":45268,\"start\":45255},{\"end\":45282,\"start\":45268},{\"end\":45626,\"start\":45608},{\"end\":45637,\"start\":45626},{\"end\":45660,\"start\":45637},{\"end\":45993,\"start\":45983},{\"end\":46009,\"start\":45993},{\"end\":46015,\"start\":46009},{\"end\":46024,\"start\":46015},{\"end\":46034,\"start\":46024},{\"end\":46041,\"start\":46034},{\"end\":46051,\"start\":46041},{\"end\":46067,\"start\":46051},{\"end\":46074,\"start\":46067},{\"end\":46743,\"start\":46731},{\"end\":46760,\"start\":46743},{\"end\":46784,\"start\":46760},{\"end\":46795,\"start\":46784},{\"end\":47068,\"start\":47053},{\"end\":47085,\"start\":47068},{\"end\":47099,\"start\":47085},{\"end\":47113,\"start\":47099},{\"end\":47132,\"start\":47113},{\"end\":47405,\"start\":47390},{\"end\":47415,\"start\":47405},{\"end\":47424,\"start\":47415},{\"end\":47436,\"start\":47424},{\"end\":47782,\"start\":47764},{\"end\":47796,\"start\":47782},{\"end\":47807,\"start\":47796},{\"end\":47821,\"start\":47807},{\"end\":48358,\"start\":48346},{\"end\":48369,\"start\":48358},{\"end\":48712,\"start\":48698},{\"end\":48733,\"start\":48712},{\"end\":48748,\"start\":48733},{\"end\":48765,\"start\":48748},{\"end\":48782,\"start\":48765},{\"end\":49036,\"start\":49022},{\"end\":49051,\"start\":49036},{\"end\":49067,\"start\":49051},{\"end\":49082,\"start\":49067},{\"end\":49091,\"start\":49082},{\"end\":49413,\"start\":49397},{\"end\":49428,\"start\":49413},{\"end\":49439,\"start\":49428},{\"end\":49716,\"start\":49705},{\"end\":49733,\"start\":49716},{\"end\":49740,\"start\":49733},{\"end\":49967,\"start\":49956},{\"end\":49983,\"start\":49967},{\"end\":49995,\"start\":49983},{\"end\":50007,\"start\":49995},{\"end\":50021,\"start\":50007},{\"end\":50030,\"start\":50021},{\"end\":50416,\"start\":50403},{\"end\":50736,\"start\":50721},{\"end\":50749,\"start\":50736},{\"end\":50767,\"start\":50749},{\"end\":50785,\"start\":50767},{\"end\":50808,\"start\":50785},{\"end\":51166,\"start\":51150},{\"end\":51180,\"start\":51166},{\"end\":51193,\"start\":51180},{\"end\":51210,\"start\":51193},{\"end\":51223,\"start\":51210},{\"end\":51238,\"start\":51223},{\"end\":51253,\"start\":51238},{\"end\":51271,\"start\":51253},{\"end\":51673,\"start\":51661},{\"end\":51688,\"start\":51673},{\"end\":51702,\"start\":51688},{\"end\":51713,\"start\":51702},{\"end\":51731,\"start\":51713},{\"end\":51750,\"start\":51731},{\"end\":51764,\"start\":51750},{\"end\":51774,\"start\":51764},{\"end\":51783,\"start\":51774},{\"end\":51799,\"start\":51783},{\"end\":51814,\"start\":51799},{\"end\":51827,\"start\":51814},{\"end\":51843,\"start\":51827},{\"end\":51857,\"start\":51843},{\"end\":51872,\"start\":51857},{\"end\":51887,\"start\":51872},{\"end\":51903,\"start\":51887},{\"end\":51914,\"start\":51903},{\"end\":51929,\"start\":51914},{\"end\":51944,\"start\":51929},{\"end\":51959,\"start\":51944},{\"end\":51974,\"start\":51959},{\"end\":51984,\"start\":51974},{\"end\":52747,\"start\":52736},{\"end\":52761,\"start\":52747},{\"end\":52771,\"start\":52761},{\"end\":52780,\"start\":52771},{\"end\":53109,\"start\":53096},{\"end\":53117,\"start\":53109},{\"end\":53121,\"start\":53117}]", "bib_venue": "[{\"end\":40014,\"start\":39962},{\"end\":40436,\"start\":40387},{\"end\":40792,\"start\":40756},{\"end\":41177,\"start\":41104},{\"end\":41583,\"start\":41481},{\"end\":41963,\"start\":41930},{\"end\":42325,\"start\":42276},{\"end\":42722,\"start\":42673},{\"end\":43020,\"start\":42960},{\"end\":43292,\"start\":43255},{\"end\":43521,\"start\":43474},{\"end\":43969,\"start\":43917},{\"end\":44307,\"start\":44255},{\"end\":44587,\"start\":44535},{\"end\":44930,\"start\":44881},{\"end\":45344,\"start\":45282},{\"end\":45722,\"start\":45660},{\"end\":46190,\"start\":46074},{\"end\":46820,\"start\":46795},{\"end\":47146,\"start\":47132},{\"end\":47488,\"start\":47436},{\"end\":47904,\"start\":47821},{\"end\":48457,\"start\":48369},{\"end\":48829,\"start\":48782},{\"end\":49161,\"start\":49107},{\"end\":49488,\"start\":49439},{\"end\":49703,\"start\":49664},{\"end\":50079,\"start\":50030},{\"end\":50468,\"start\":50416},{\"end\":50864,\"start\":50808},{\"end\":51327,\"start\":51271},{\"end\":52011,\"start\":51998},{\"end\":52838,\"start\":52780},{\"end\":53173,\"start\":53121},{\"end\":46293,\"start\":46192},{\"end\":47974,\"start\":47906}]"}}}, "year": 2023, "month": 12, "day": 17}