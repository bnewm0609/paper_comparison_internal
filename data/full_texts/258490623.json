{"id": 258490623, "updated": "2023-11-16 14:20:02.131", "metadata": {"title": "Matching Knowledge Graphs in Entity Embedding Spaces: An Experimental Study", "authors": "[{\"first\":\"Weixin\",\"last\":\"Zeng\",\"middle\":[]},{\"first\":\"Xiang\",\"last\":\"Zhao\",\"middle\":[]},{\"first\":\"Zhen\",\"last\":\"Tan\",\"middle\":[]},{\"first\":\"Jiuyang\",\"last\":\"Tang\",\"middle\":[]},{\"first\":\"Xueqi\",\"last\":\"Cheng\",\"middle\":[]}]", "venue": "IEEE Transactions on Knowledge and Data Engineering", "journal": "IEEE Transactions on Knowledge and Data Engineering", "publication_date": {"year": 2023, "month": 12, "day": 1}, "abstract": "Entity alignment (EA) identifies equivalent entities that locate in different knowledge graphs (KGs), and has attracted growing research interests over the last few years with the advancement of KG embedding techniques. Although a pile of embedding-based EA frameworks have been developed, they mainly focus on improving the performance of entity representation learning, while largely overlook the subsequent stage that matches KGs in entity embedding spaces. Nevertheless, accurately matching entities based on learned entity representations is crucial to the overall alignment performance, as it coordinates individual alignment decisions and determines the global matching result. Hence, it is essential to understand how well existing solutions for matching KGs in entity embedding spaces perform on present benchmarks, as well as their strengths and weaknesses. To this end, in this article we provide a comprehensive survey and evaluation of matching algorithms for KGs in entity embedding spaces in terms of effectiveness and efficiency on both classic settings and new scenarios that better mirror real-life challenges. Based on in-depth analysis, we provide useful insights into the design trade-offs and good paradigms of existing works, and suggest promising directions for future development.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/tkde/ZengZTTC23", "doi": "10.1109/tkde.2023.3272584"}}, "content": {"source": {"pdf_hash": "12f9f752425ba70be3705d5c6b0684db1e5006bc", "pdf_src": "IEEE", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://ieeexplore.ieee.org/ielx7/69/4358933/10114983.pdf", "status": "HYBRID"}}, "grobid": {"id": "f47f0247ac14a7a303fec4caa32f311823ec1f0a", "type": "plain-text", "url": "s3://ai2-s2-science-parse-plus-prod/parse-results/s2orc_worker/12f9f752425ba70be3705d5c6b0684db1e5006bc.txt", "contents": "\nMatching Knowledge Graphs in Entity Embedding Spaces: An Experimental Study\n\n\nWeixin Zeng zengweixin13@nudt.edu.cn 0000-0002-2690-3190\nXiang Zhao, and Jiuyang Tang are with the Laboratory for Big Data and Decision\nNational University of Defense Technology\n410073Weixin Zeng, ChangshaHunanChina\n\nXiang Zhao 0000-0001-6339-0219\nXiang Zhao, and Jiuyang Tang are with the Laboratory for Big Data and Decision\nNational University of Defense Technology\n410073Weixin Zeng, ChangshaHunanChina\n\nScience and Technology on Information Systems Engineering Laboratory\nNational University of Defense Technology\n410073ChangshaHunanChina\n\nZhen Tan tanzhen08a@nudt.edu.cn 0000-0001-8643-4683\nXiang Zhao, and Jiuyang Tang are with the Laboratory for Big Data and Decision\nNational University of Defense Technology\n410073Weixin Zeng, ChangshaHunanChina\n\nJiuyang Tang jiuyang_tang@nudt.edu.cn \nXiang Zhao, and Jiuyang Tang are with the Laboratory for Big Data and Decision\nNational University of Defense Technology\n410073Weixin Zeng, ChangshaHunanChina\n\nSenior Member, IEEEXueqi Cheng 0000-0002-5201-8195\nXiang Zhao, and Jiuyang Tang are with the Laboratory for Big Data and Decision\nNational University of Defense Technology\n410073Weixin Zeng, ChangshaHunanChina\n\nInstitute of Computing Technology\nCAS\n100045BeijingChina\n\nMatching Knowledge Graphs in Entity Embedding Spaces: An Experimental Study\nD46D314A78E5BE455A1F1D302585A85B10.1109/TKDE.2023.3272584Manuscript received 24 April 2022; revised 18 March 2023; accepted 20 April 2023. Date of publication 3 May 2023; date of current version 8 November 2023.Entity alignmententity matchingknowledge graphknowledge graph alignment\nEntity alignment (EA) identifies equivalent entities that locate in different knowledge graphs (KGs), and has attracted growing research interests over the last few years with the advancement of KG embedding techniques.Although a pile of embeddingbased EA frameworks have been developed, they mainly focus on improving the performance of entity representation learning, while largely overlook the subsequent stage that matches KGs in entity embedding spaces.Nevertheless, accurately matching entities based on learned entity representations is crucial to the overall alignment performance, as it coordinates individual alignment decisions and determines the global matching result.Hence, it is essential to understand how well existing solutions for matching KGs in entity embedding spaces perform on present benchmarks, as well as their strengths and weaknesses.To this end, in this article we provide a comprehensive survey and evaluation of matching algorithms for KGs in entity embedding spaces in terms of effectiveness and efficiency on both classic settings and new scenarios that better mirror real-life challenges.Based on in-depth analysis, we provide useful insights into the design trade-offs and good paradigms of existing works, and suggest promising directions for future development.\n\nRecently, due to the emergence and proliferation of knowledge graphs (KGs), matching entities in KGs draws much attention from both academia and industries.Distinct from traditional data matching, it brings its own challenges.Particularly, it underlines the use of KGs' structures for matching, and manifests unique characteristics of data, e.g., imbalanced class distribution, few attributive textual information, etc.In consequence, although viable, following traditional EM pipeline, it is hard to train an effective classifier that can infer the equivalence between entities.Thus, much effort has been dedicated to specifically addressing the matching of entities in KGs, which is also referred to as entity alignment (EA).\n\nNevertheless, early solutions to EA are mainly unsupervised [25], [48], i.e., no labeled data is assumed.They utilize discriminative features of entities (e.g., entity descriptions and relational structures) to infer the equivalent entity pair, which are, however, embarrassed by the heterogeneity of independentlyconstructed KGs [50].\n\nTo mitigate this issue, recent solutions to EA employ a few labeled pairs as seeds to guide the learning and prediction [9], [16], [31], [43], [54].In short, they embed the symbolic representations of KGs as low-dimensional vectors in a way such that the semantic relatedness of entities is captured by the geometrical structures of embedding spaces [4], where the seed pairs are leveraged to produce unified entity representations.In the testing stage, they match entities based on the unified entity embeddings.They are coined as embedding-based EA methods, which have exhibited state-of-the-art performance on existing benchmarks.\n\nTo be more specific, the embedding-based EA 1 pipeline can be roughly divided into two major stages, i.e., representation learning and matching KGs in entity embedding spaces (or embedding matching for short).While the former encodes the KG structures into low-dimensional vectors and establishes connections between independent KGs via the calibration or transformation of (seed) entity embeddings [50], the latter computes pairwise scores between source and target entities based on such embeddings and then makes alignment decisions according to the pairwise scores.Although this field has been actively explored, existing efforts are mainly devoted to the representation learning stage [19], [30], [70], while embedding matching has not raised many attentions until very recently [35], [62].The majority of existing EA solutions adopt a simple algorithm to realize this Fig. 1.Three cases of EA.Dashes lines between KGs denote the seed entity pairs.Entities with the same subscripts are equivalent.In the embedding space, the circles with two colors represent that the corresponding entities in the two KGs have the same embeddings.stage, i.e., DInf, which first leverages common similarity metrics such as cosine similarity to calculate the pairwise similarity scores between entity embeddings, and then matches a source entity to its most similar target entity according to the pairwise scores [54].Nevertheless, it is evident that such an intuitive strategy can merely reach local optimums for individual entities and completely overlooks the (global) interdependence among the matching decisions for different entities [64].\n\nTo address the shortcomings of DInf, advanced strategies are devised [13], [50], [57], [62], [64], [65].While some of them inject the modeling of global interdependence into the computation of pairwise scores [13], [50], [62], some directly improve the alignment decision-making process by imposing collective matching constraints [57], [64], [65].These efforts demonstrate the significance of matching KGs in entity embedding spaces from at least three major aspects: 1) It is an indispensable step of EA, which takes as input the entity embeddings (generated by the representation learning stage), and outputs matched entity pairs; 2) Its performance is crucial to the overall EA results, e.g., an effective algorithm can improve the alignment results by up to 88% [62]; and 3) It empowers EA with explainability, as it unveils the decision-making process of alignment.We use Example 1 to further illustrate the significance of the embedding matching process.\n\nExample 1: Fig. 1 presents three representative cases of EA.The KG pairs to be aligned are first encoded into embeddings via the representation learning models.Next, the embedding matching algorithms produce the matched entity pairs based on the embeddings.In the most ideal case where two KGs are identical, e.g., case (a), with an ideal representation learning model, equivalent entities would be embedded into exactly the same place in the low-dimensional space, and using the simple DInf algorithm would attain perfect results.Nevertheless, in the majority of practical scenarios, e.g., case (b) and (c), the two KGs have high structure heterogeneity.As thus, even an ideal representation learning model might generate different embeddings for equivalent entities.In this case, adopting the simple DInf strategy is likely to produce false entity pairs, such as (u 5 , v 3 ) in case (b).\n\nWorse still, as pointed out in previous works [50], [68], existing representation learning methods for EA cannot fully capture the structural information (possibly due to their inner design mechanisms, or their incapability of dealing with scarce supervision signals).Under these settings, e.g., case (c), the distribution of entity embeddings in the low-dimensional space would become irregular, where the simple embedding matching algorithm DInf would fall short, i.e., producing incorrect entity pairs (u 3 , v 1 ) and (u 5 , v 1 ).As thus, in these practical cases, an effective embedding matching algorithm is crucial to inferring the correct matches.For instance, by exploiting the collective embedding matching algorithm that imposes the 1-to-1 alignment constraint, the correct matches, i.e., (u 3 , v 3 ) and (u 5 , v 5 ), are likely to be restored.\n\nWhile the study on matching KGs in entity embedding spaces is rapidly progressing, there is no systematic survey or comparison of these solutions [50].We do notice that there are several survey papers covering embedding-based EA frameworks [50], [61], [66], [67], [68], whereas they all briefly introduce the embedding matching module (mostly only mentioning the DInf algorithm).In this article, we aim to fill in this gap by surveying current solutions for matching KGs in entity embedding spaces and providing a comprehensive evaluation of these methods with the following features:\n\n1) Systematic survey and fair comparison: Albeit essential to the alignment performance, existing embedding matching strategies have yet not been compared directly.Instead, they are integrated with representation learning models, and then evaluated and compared with each other (as a whole).This, however, cannot provide a fair comparison of the embedding matching strategies themselves, since the difference among them can be offset by other influential factors, such as the choices of representation learning models or input features.Therefore, in this work, we exclude irrelevant factors and provide a fair comparison of current matching algorithms for KGs in entity embedding spaces at both theoretical and empirical levels.\n\n2) Comprehensive evaluation and detailed discussion: To fully appreciate the effectiveness of embedding matching strategies, we conduct extensive experiments on a wide range of EA settings, i.e., with different representation learning models, with various input features, and on datasets at different scales.We also analyze the complexity of these algorithms and evaluate their efficiency/scalability under each experimental setting.Based on the empirical results, we discuss to reveal strengths and weaknesses.\n\n3) New experimental settings and insights: Through empirical evaluation and analysis, we discover that the current mainstream evaluation setting, i.e., 1-to-1 constrained EA, oversimplifies the real-life alignment scenarios.As thus, we identify two experimental settings that better reflect the challenges in practice, i.e., alignment with unmatchable entities, as well as a new setting of non 1-to-1 alignment.We compare the embedding matching algorithms under these challenging settings to provide further insights.\n\nContributions: We make the following contributions:\n\nr We systematically and comprehensively survey and com- pare state-of-the-art algorithms for matching KGs in entity embedding spaces (Section III).r We identify experiment settings that better mirror real-life challenges and construct a new benchmark dataset, where deeper insights into the algorithms are obtained via empirical evaluations (Section V).\n\nr Based on our evaluation and analysis, we provide useful insights into the design trade-offs of existing works, and suggest promising directions for the future development of matching KGs in entity embedding spaces (Section VI).\n\n\nII. PRELIMINARIES\n\nIn this section, we first present the task formulation of EA and its general framework.Next, we introduce the studies related to the topic of this article-matching KGs in entity embedding spaces, and clarify the scope of this study.Finally, we present the key assumptions of embedding-based EA.\n\n\nA. Task Formulation and Framework\n\nTask formulation: A KG G is composed of triples {(s, p, o)}, where s, o \u2208 E represent entities, p \u2208 P denotes the predicate (relation).Given a source KG G s , a target KG G t , the task of EA is formulated as discovering new (equivalent) entity pairs M = {(u, v)|u \u2208 E s , v \u2208 E t , u \u21d4 v} by using pre-annotated (seed) entity pairs S as anchors, where \u21d4 represents the equivalence between entities, E s and E t denote the entity sets in G s and G t , respectively.\n\nGeneral framework: The pipeline of state-of-the-art embedding-based EA solutions can be divided into two stages, i.e., representation learning and embedding matching, as shown in Fig. 2. The general algorithm can be found in Algorithm 1.\n\n\nAlgorithm 2: Greedy (E s , E t , S).\n\nThe majority of studies on EA are devoted to the representation learning stage.They first utilize KG embedding techniques such as TransE [4] and GCN [23] to capture the KG structure information and generate entity structural representations.Next, based on the assumption that equivalent entities from different KGs possess similar neighboring KG structures (and in turn similar embeddings), they leverage the seed entity pairs as anchors and progressively project individual KG embeddings into a unified space through training, resulting in the unified entity representations E2 .There have already been several survey papers concentrating on representation learning approaches for EA, and we refer the interested readers to these works [2], [50], [66], [68].\n\nNext, we introduce the embedding matching process-the focus of this article, as well as its related works.\n\n\nB. Related Work and Scope\n\nMatching KGs in entity embedding spaces: After obtaining the unified entity representations E where equivalent entities from different KGs are assumed to have similar embeddings, the embedding matching stage (also frequently referred to as alignment inference stage [50]) produces alignment results by comparing the embeddings of entities from different KGs.Concretely, it first calculates the pairwise scores between source and target entity embeddings according to a specific metric. 3The pairwise scores are then organized into matrix form as S. Next, according to the pairwise scores, various matching algorithms are put forward to align entities.The most common algorithm is Greedy, described in Algorithm 2. It directly matches a source entity to the target entity that possesses the highest pairwise score according to S.Over the last few years, advanced solutions [13], [17], [34], [35], [40], [50], [57], [60], [62], [64], [65], [69] are devised to improve the embedding matching performance, and in this work, we focus on surveying and comparing these algorithms for matching KGs in entity embedding spaces.\n\nMatching KGs in Symbolic Spaces: Before the emergence of embedding-based EA, there have already been many conventional frameworks that match KGs in symbolic spaces [20], [47], [48].While some are based on equivalence reasoning mandated by OWL semantics [20], some leverage similarity computation to compare the symbolic features of entities [48].However, these solutions are not comparable to algorithms for matching KGs in entity embedding spaces, as 1) they cover both the representation learning and embedding matching stages in embedding-based EA; and 2) the inputs are different from those of embedding matching algorithms.Thus, we do not include them in our experimental evaluation, while they have already been compared in the survey papers covering the overall embedding-based EA frameworks [50], [68].\n\nThe matching of relations (or ontology) between KGs has also been studied by prior symbolic works [47], [48].Nevertheless, compared with entities, they are usually in smaller amounts, of various granularities [42], and under-explored in embeddingbased approaches [59].Hence, in this work, we exclude relevant studies on this topic and focus on the matching of entities.\n\nThe task of entity resolution (ER) [10], [18], [41], also known as entity matching, deduplication or record linkage, can be regarded as the general case of EA [68].It assumes that the input is relational data, and each data object usually has a large amount of textual information described in multiple attributes.Nevertheless, in this article, we focus on EA approaches, which strive to align KGs and mainly rely on graph representation learning techniques to model the KG structure and generate entity structural embeddings for alignment.Therefore, the discussion and comparison with ER solutions is beyond the scope of this work.\n\nMatching Data Instances Via Deep Learning: Entity matching (EM) between databases have also been greatly advanced by utilizing pre-trained language models for expressive contextualization of database records [11], [39].These deep learning (DL) based EM solutions devise end-to-end neural models to learn to classify an entity pair into matching or non-matching, and then feed the test entity pairs into the trained models to obtain classification results [5], [29], [39].Nevertheless, this procedure is different from the focus of our study, as both of its training and testing stage involve representation learning and matching.Besides, these solutions are not suitable for matching KGs in entity embedding space, since (1) they require adequate labeled data to train the neural classification models, but the training data in EA is much less than the testing ones, which could result in the overfitting issue; (2) they would suffer from severe class imbalance in EA, where an entity and all of its nonequivalent entities in another KG would constitute many negative samples, while there is usually one positive sample for this entity; (3) they depend on the attributive text information between data records for training, while EA underlines the use of KG structure, which could provide much less useful features for model training.In the experiment, we adapt DL-based EM models to tackle EA, and the results are not promising.This will be further discussed in Section IV-C.\n\nExisting Surveys on EA: There are several survey papers covering EA frameworks [50], [61], [66], [67], [68], which are summarized in Table I.Some articles provide high-level discussion of embedding-based EA frameworks, experimentally evaluate and compare these works, and offer guidelines for particularly investigate the influence of the sizes and biases in seed mappings.They evaluate each method as a whole and do not mention the embedding matching process [67].Two recent survey papers include the latest efforts on embedding-based EA and give more self-contained explanation on each technique.Zhang et al. provide a tutorial-type survey, while for embedding matching, they merely introduce the nearest neighbor search strategy, i.e., DInf [66].Zeng et al. mainly introduce representation learning methods and their applications on EA, while neglect the embedding matching stage [61].\n\nIn all, existing EA survey articles focus on the representation learning process and briefly introduce the embedding matching module (mostly only mentioning the DInf algorithm), while in this work we systematically survey and empirically evaluate the algorithms designed for the embedding matching process in KG alignment, and present comprehensive results and insightful discussions.\n\n\nScope of this Work:\n\nThis study aims to survey and empirically compare the algorithms for matching KGs in entity embedding spaces, i.e., various implementations of Embedding_Matching() in Algorithm 1, on a wide range of EA experimental settings.\n\n\nC. Key Assumptions\n\nNotably, existing embedding-based EA solutions have a fundamental assumption; that is, the equivalent entities in different KGs possess similar (ideally, isomorphic) neighboring structures.Under such an assumption, effective representation learning models would transform the structures of equivalent entities into similar entity embeddings.As thus, based on the entity embeddings, the embedding matching stage would assign higher (resp., lower) pairwise similarity scores to the equivalent Authorized licensed use limited to the terms of the applicable license agreement with IEEE.Restrictions apply.\n\n\nTABLE II OVERVIEW AND COMPARISON OF STATE-OF-THE-ART ALGORITHMS FOR MATCHING KGS IN ENTITY EMBEDDING SPACES. NOTE THAT WE ESTIMATE THE ORDER\n\nOF MAGNITUDE OF THE TIME AND SPACE COMPLEXITY (resp., nonequivalent) entity pairs, and finally make accurate alignment decisions via the coordination according to pairwise scores.\n\nBesides, current EA evaluation settings assume that the entities in different KGs conform to the 1-to-1 constraint.That is, each u \u2208 E s has one and only one equivalent entity v \u2208 E t , and vice versa.However, we contend that this assumption is in fact impractical and provide detailed experiments and discussions in Section V-B.\n\n\nIII. ALGORITHMS FOR MATCHING KGS IN ENTITY EMBEDDING SPACES\n\nIn this section, we introduce the algorithms for matching KGs in entity embedding spaces, i.e., Embedding_Matching() in Algorithm 1.\n\n\nA. Overview\n\nWe first provide the overview and comparison of matching algorithms for KGs in entity embedding spaces in Table II.As mentioned in Section II, embedding matching comprises two stagespairwise score computation and matching.The baseline approach DInf adopts existing similarity metrics to calculate the similarity between entity embeddings and generate the pairwise scores in the first stage, and then it leverages Greedy for matching.In pursuit of better alignment performance, more advanced embedding matching strategies are put forward.While some (i.e., CSLS, RInf and Sink.) optimize the pairwise score computation process and produce more accurate pairwise scores, some (i.e., Hun., SMat and RL) take into account the global alignment dynamics, rather than greedily pursue the local optimum for each entity, during the matching process, where more correct matches could be generated according to the coordination under the global constraint.\n\nWe further identify two notable characteristics of matching KGs in entity embedding spaces, i.e., whether the matching leverages the 1-to-1 constraint, and the direction of the matching.Regarding the former, Hun. and SMat explicitly exert the 1-to-1 constraint on the matching process.RL relaxes the strict 1-to-1 constraint by allowing non 1-to-1 matches.The greedy strategies, however, normally do not take into consideration this constraint, except for Sink., which implicitly implements the 1-to-1 constraint in a progressive manner when calculating the pairwise scores.As for the direction of matching, Greedy only considers a single direction at a time and overlooks the influence from the reverse direction.As thus, the resultant source-to-target alignment results are not necessarily equal to the target-to-source ones.By improving the pairwise score computation, CSLS, RInf and Sink.are actually modeling and integrating the bidirectional alignments, whereas they still adopt Greedy to produce final results.For non-greedy methods, Hun. and SMat fully consider the bidirectional alignments and produce a matching agreed by both directions, while RL is unidirectional.\n\nNext, we describe these methods in detail 4 .\n\n\nB. Simple Embedding Matching\n\nDInf is the most common implementation of Embedding_Matching(), described in Algorithm 3. Assume both KGs contain n entities.The time and space complexity of DInf is O(n 2 ).\n\n\nC. CSLS Algorithm\n\nThe cross-domain similarity local scaling (CSLS) algorithm [26] is introduced to mitigate the hubness and isolation issues of entity embeddings in EA [50].The hubness issue refers to the phenomenon where some entities (known as hubs) frequently appear as the top-1 most similar entities of other entities in the vector space, while the isolation issue means that there exist some outliers isolated from any point clusters.As thus, CSLS increases the similarity associated with isolated entity embeddings, and conversely decreases the ones of vectors lying in dense areas [26].Formally, the CSLS pairwise score between source entity u and target entity v is:\nCSLS(u, v) = 2S(u, v) \u2212 \u03c6(u) \u2212 \u03c6(v) , (1)\nwhere S is the similarity matrix derived from E using similarity metrics,\n\u03c6(u) = 1 k v \u2208N u S(u, v )S CSLS = 2S \u2212 \u03c6 s \u2212 \u03c6 t 4: M \u2190 Greedy (E s , E t , S CSLS ); 5: return M;\nin the target KG, and \u03c6(v) is defined similarly.The mean similarity scores of all source and target entities are denoted in vector form as \u03c6 s and \u03c6 t , respectively.To generate the matched entity pairs, it further applies Greedy on the CSLS matrix (i.e., S CSLS ).Algorithm 4 describes the detailed procedure of CSLS.Notably, Li et al. put forward Graph Interactive Divergence (GID) to compute the similarity score, which in essence works in the same way as CSLS according to its code implementation [28].\n\nComplexity.The time and space complexity are O(n 2 ).Practically, it requires more time and space than DInf, as it needs to generate the additional CSLS matrix.\n\n\nD. Reciprocal Embedding Matching\n\nZeng et al. [62] formulate EA task as the reciprocal recommendation process [44] and offer a reciprocal embedding matching strategy RInf to model and integrate the bidirectional preferences of entities when inferring the matching results.Formally, it defines the pairwise score of source entity u towards target entity v as:\np u,v = S(u, v) \u2212 max u \u2208E s S(v, u ) + 1, (2)\nwhere S is the similarity matrix derived from E, 0 \u2264 p u,v \u2264 1, and a larger p u,v denotes a higher degree of preference.As such, the matrix forms of the source-to-target and target-to-source preference scores are denoted as P s,t and P t,s , respectively.Next, it converts the preference matrix P into the ranking matrix R, and then averages the two ranking matrices, resulting in the reciprocal preference matrix P s\u2194t that encodes the bidirectional alignment information.Finally, it adopts Greedy to generate the matched entity pairs.Complexity.Algorithm 5 describes the detailed procedure of RInf.The time complexity is O(n 2 lg n) [62].The space complexity is O(n 2 ).Practically, it requires more space than DInf and CSLS, due to the computation of similarity, preference, and ranking matrices.Noteworthily, two variant methods, i.e., RInf-wr and RInf-pb, are proposed to reduce the memory and time consumption brought by the reciprocal modeling.More details can be found in [62].\n\n\nE. Embedding Matching as Assignment\n\nSome very recent studies [35], [57] propose to model the embedding matching process as the linear assignment problem.They first use similarity metrics to calculate pairwise similarity scores based on E. Then they adopt the Hungarian algorithm [24] to solve the task of assigning source entities to target entities according to the pairwise scores.The objective is to maximize the sum of the pairwise similarity scores of the final matched entity pairs while observing the 1-to-1 assignment constraint.In this work, we use the Hungarian algorithm implemented by Jonker and Volgenant [21] and denote it as Hun.\n(E s , E t , E).\nBesides, the Sinkhorn operation [37] (or Sink.for short) is also adopted to solve the assignment problem [13], [17], [35], which converts the similarity matrix S into a doubly stochastic matrix S sinkhorn that encodes the entity correspondence information.Specifically,\nSinkhorn l (S) = \u0393 c (\u0393 r (Sinkhorn l\u22121 (S))); S sinkhorn = lim l\u2192\u221e Sinkhorn l (S),(3)\nwhere Sinkhorn 0 (S) = exp(S), \u0393 c and \u0393 r refer to the column and row-wise normalization operators of a matrix.Since the number of iterations l is limited, the Sinkhorn operation can only obtain an approximate 1-to-1 assignment solution in practice [35].Then S sinkhorn is forwarded to Greedy to obtain the alignment results.\n\nComplexity.For Hun., the time complexity is O(n 3 ), and the space complexity is O(n 2 ).Algorithm 5 describes the procedure of Sink..The time complexity of Sink. is O(ln 2 ) [35], and the space complexity is O(n 2 ).In practice, both algorithms require more space than DInf, since they need to store the intermediate results.\n\n\nF. Stable Embedding Matching\n\nIn order to consider the interdependence among alignment decisions, the embedding matching process is formulated as the stable matching problem [14] by [64], [69].It is proved that for any two sets of members with the same size, each of whom provides a ranking of the members in the opposing set, there exists a bijection of the two sets such that no pair of two members from the opposite side would prefer to be matched to each other rather than their assigned partners [12].Specifically, these works first produce the similarity matrix S based on E using similarity metrics.Next, they generate the rankings of members in the opposing set according to the pairwise similarity scores.Finally, they use the Gale-Shapley algorithm [46] to solve the stable matching problem.This procedure is denoted as SMat (E s , E t , E).\n\nComplexity.SMat has time complexity of O(n 2 lg n) (since for each entity, the ranking of entities in the opposite side needs to be computed) and space complexity of O(n 2 ).\n\n\nG. RL-Based Embedding Matching\n\nThe embedding matching process is cast to the classic sequence decision problem by [65].Given a sequence of source entities (and their embeddings), the goal of the sequence decision problem is to decide to which target entity each source entity aligns.It devises a reinforcement learning (RL)-based framework to learn to optimize the decision-making for all entities, rather than optimize every single decision separately.Under the RL-based framework, a new coordination strategy that involves the coherence and exclusiveness constraints is implemented.While coherence aims to keep the EA decisions coherent for closely-related entities, exclusiveness aims to avoid assigning the same target entity to multiple source entities, which requires that, if an entity is already matched, it is less likely to be matched to other entities.The general procedure is shown in algorithmic form in Appendix A, available online due to the limit of space, and more details can be found in the original paper [65].\n\nComplexity.It is difficult to deduce the time complexity for this neural RL model.Instead, we provide the empirical time costs in experiments.The space complexity is O(n 2 ).\n\n\nIV. MAIN EXPERIMENTS\n\nIn this section, we compare the algorithms for matching KGs in entity embedding spaces on the mainstream EA evaluation setting (1-to-1 alignment).\n\n\nA. EntMatcher: An Open-Source Library\n\nTo ensure comparability, we re-implemented all compared algorithms using Python under a unified framework and established an open-source library, EntMatcher5 .The architecture of EntMatcher library is presented in the blue block of Fig. 3, which takes as input unified entity embeddings E and produces the matched entity pairs.It has the following three major features:\n\nLoosely-Coupled Design.There are three independent modules in EntMatcher, and we have implemented the representative methods in each module.Users are free to combine the techniques in each module to develop new approaches, or to implement their new designs by following the templates in modules.\n\nReproduction of Existing Approaches.To support our experimental study, we tried our best to re-implement all existing algorithms by using EntMatcher.For instance, the combination of cosine similarity, CSLS, and Greedy reproduces the CSLS algorithm in Section III-C; and the combination of cosine similarity, None, and Hun.reproduces the Hun.algorithm in Section III-E.The specific hyper-parameter settings are elaborated in Section IV-B.\n\nFlexible Integration With Other Modules in EA.Ent-Matcher is highly flexible, which can be directly called during the development of standalone EA approaches.Besides, users may also use EntMatcher as the backbone and call other modules.For instance, to conduct the experimental evaluations in this work, we implemented the representation learning and auxiliary information modules to generate the unified entity embeddings E, as shown in the white blocks of Fig. 3.More details are elaborated in the next subsection.Finally, EntMatcher is also compatible with existing open-source EA libraries (that mainly focus on representation learning) such as OpenEA 6 and EAkit. 7\n\n\nB. Experimental Settings\n\nCurrent EA evaluation setting assumes that the entities in source and target KGs are 1-to-1 matched (cf.Section II-C).Although this assumption simplifies the real-word scenarios where some entities are unmatchable or some might be aligned to multiple entities on the other side, it indeed reflects the core challenge of EA.Therefore, following existing literature, we mainly compare the embedding matching algorithms under this setting, and postpone the evaluation on the challenging real-life scenarios to Section V.\n\nDatasets.We used popular EA benchmarks for evaluation: (1) DBP15K, which comprises three multilingual KG pairs  extracted from DBpedia [1]: English to Chinese (D-Z), English to Japanese (D-J), and English to French (D-F); and (2) SRPRS, which is a sparser dataset that follows real-life entity distribution, including two multilingual KG pairs extracted from DBpedia: English to French (S-F) and English to German (S-D), and two mono-lingual KG pairs: DBpedia to Wikidata [53] (S-W) and DBpedia to YAGO [49] (S-Y); and (3) DWY100K, a larger dataset consisting of two mono-lingual KG pairs: DBpedia to Wikidata (D-W) and DBpedia to YAGO (D-Y).The detailed statistics can be found in Table III, where the numbers of entities, relations, triples, gold links, and the average entity degree are reported.Regarding the gold alignment links, we adopted 70% as test set, 20% for training, and 10% for validation.\n\nEvaluation metric.We utilized F1 score as the evaluation metric, which is the harmonic mean between precision and recall, where the precision value is computed as the number of correct matches divided by the number of matches found by a method, and the recall value is computed as the number of correct matches found by a method divided by the number of gold matches.Note that recall is equivalent to the Hits@1 metric used in some previous works.\n\nSimilarity Metric.After obtaining the unified entity representations E, a similarity metric is required to produce pairwise scores and generate the similarity matrix S. Frequent choices include the cosine similarity [7], [36], [52], the euclidean distance [8], [27] and the Manhattan distance [55], [58].In this work, we followed mainstream works and adopted the cosine similarity.\n\nNotably, we omit more detailed experimental settings in the interest of space, which can be found in Appendix B, available online.\n\n\nC. Main Results and Comparison\n\nWe first evaluate with only structural information and report the results in Table IV, where R-and G-refer to using RREA and GCN to generate the structural embeddings, respectively, DBP and SRP denote DBP15K and SRPRS, respectively.Next, we supplement with name embeddings, and report the results in Table V, where N-and NR-refer to only using the name embeddings and fusing name embeddings with RREA structural representations, respectively.Note that, on existing datasets, all the entities in the test set can be matched, and all the algorithms are devised to find a target entity for each test source entity.Hence, the number of matches found by a method equals to the number of gold matches, and consequently the precision value is equal to the recall value and the F1 score [65].\n\nOverall Performance.First, we do not delve into the embedding matching algorithms and directly analyze the general results.Specifically, using RREA to learn structural representations can bring better performance compared with using GCN, showcasing that representation learning strategies are crucial to the overall alignment performance.When introducing the entity name information, it observes that this auxiliary signal alone can already provide very accurate signal for alignment.This is because the equivalent entities in different KGs of current datasets share very similar or even identical names.After fusing the semantic and structural information, the alignment performance is further lifted, with most of the approaches hitting over 0.9 in terms of the F1 score.\n\nEffectiveness Comparison of Embedding Matching Algorithms.From the tables, it is evident that:\n\n(1) Overall, Hun. and Sink.attain much better results than the other strategies.Specifically, Hun.takes full account of the global matching constraints and strives to reach a globally optimal matching given the objective of maximizing the sum of pairwise similarity scores.Moreover, the 1-to-1 constraint it exerts aligns with present evaluation setting where the source and target entities are 1-to-1 matched.Sink., on the other hand, implicitly implements the 1-to-1 constraint during pairwise score computation and still adopts Greedy to produce final results, where there might exist non 1-to-1 matches; (2) DInf attains  the worst performance.This is because it directly adopts the similarity scores that suffer from the hubness and isolation issues [50].Besides, it leverages Greedy, which merely reaches the local optimum for each entity.(3) The performance of RInf, CSLS, SMat and RL are well matched.RInf and CSLS improve upon DInf by mitigating the hubness issue and enhancing the quality of pairwise scores.SMat and RL, on the other hand, improve upon DInf by modeling the interactions among matching decisions for different entities.\n\nFurthermore, we conduct a deeper analysis of these approaches, and identify the following patterns:\n\nPattern 1.If for source entities, their highest pairwise similarity scores are close, RInf and CSLS (resp., SMat and RL ) would attain relatively better (resp., worse) performance.Specifically, in Table IV where RInf consistently (CSLS sometimes) attains superior results than SMat and RL, the average standard deviation (STD) values of the top-5 pairwise similarity scores of source entities (cf.Fig. 4) are very small, unveiling that the top scores are close and difficult to differentiate.In contrast, in Table V where SMat and RL outperform RInf and CSLS, the corresponding STD values are relatively large.This is because RInf and CSLS aim to make the scores more distinguishable, and hence they are more effective in cases where the top similarity scores are very close (i.e., low STD values).On the contrary, when the top similarity scores are already discriminating (e.g., Table V), RInf and CSLS become less useful, while SMat and RL can still make improvements by using the global constraints to enforce the deviation from local optimums.\n\nPattern 2. On sparser datasets, the superiority of Sink.and Hun. over the rest of the methods becomes less significant.This is based on the observation that on SRPRS, other matching algorithms (RInf in particular) attain much closer performance to Sink. and Hun..Such a pattern could be attributed to the fact that, on sparser datasets, entities normally have fewer connections with others, i.e., lower average entity degree (in Table III), where representation learning strategies might fail to fully capture the structural signals for alignment and the resultant pairwise scores become less accurate.These inaccurate scores could mislead the matching process and hence limit the effectiveness of the top-performing methods, i.e., Sink.and Hun..In other words, sparser KG structures are more likely to (partially) break the fundamental assumption on KG structure similarity (cf.Section II-C).\n\nEfficiency Analysis.We compare the time and space efficiency of these methods on the medium-sized datasets in Fig. 5. Since the costs on KG pairs from the same dataset are very similar, we report the average time and space costs under each setting in the interest of space.\n\nSpecifically, it observes that: (1) The simple algorithm DInf is the most efficient approach; (2) Among the advanced approaches, CSLS is the most efficient one, closely following DInf;\n\n(3) The efficiency of RInf and Hun. are equally matched.While Hun. consumes relatively less memory space than RInf, its time efficiency is less stable and tends to run slower on datasets with less accurate pairwise scores; (4) The space efficiency of Sink. is close to RInf and Hun., whereas it has much higher time costs, which largely depends on the value of l; (5) RL is the least time-efficient approach, while SMat is the least space-efficient algorithm.RL requires more time on datasets with less accurate pairwise scores where its pre-processing module fails to produce promising results [65].The memory space consumption of SMat Authorized licensed use limited to the terms of the applicable license agreement with IEEE.Restrictions apply.\n\n\nTABLE VI THE F1 SCORES ON DWY100K USING GCN\n\nis high, as it needs to store a large amount of intermediate matching results.In all, we can conclude that generally, advanced embedding matching algorithms require more time and memory space, among which the methods incorporating global matching constraints tend to be less efficient.\n\nComparison With DL-Based EM Approaches.We utilize the deepmatcher python package [39], which provides built-in neural networks and utilities that can train and apply state-of-the-art deep learning models for entity matching, to address EA.Specifically, we use the structural and name embeddings to replace the attributive text inputs in deepmatcher, respectively, and then train the neural model with labeled data.For each positive entity pair, we randomly sample 10 negative ones.In the testing stage, for each source entity, we feed the entity pairs constituting it and all the target entities into the trained classifier, and regard the entity pair with the highest predicted score as the result.\n\nIn the final results, only several entities are correctly aligned, showing that DL-based EM approaches cannot handle EA well, which can be ascribed to the insufficient labeled data, imbalanced class distribution and the lack of attributive text information, as discussed in Section II-B.\n\n\nD. Results on Large-Scale Datasets\n\nNext, we provide the results on the relatively larger dataset, i.e., DWY100K, which can also reflect the scalability of these algorithms.The results are presented in Table VI 8 .The general pattern is similar to that on G-DBP (i.e., using GCN on DBP15K), where Sink.and Hun.obtain the best results, followed by RInf.The performance of CSLS and RL are close, outperforming DInf by over 20%.\n\nWe compare the efficiency of these algorithms in Table VI, where T refers to the average time cost and Mem.denotes whether the memory space required by the model can be covered by our experimental environment. 9It observes that, given larger datasets, most of the performant algorithms have poor efficiency and scalability (e.g., RInf, Sink.and Hun.).Note that in [62], two variants of RInf, i.e., RInf-wr and RInf-pb, are proposed to improve its scalability at the cost of a small performance drop, which is empirically validated in Table VI.This also reveals that more scalable matching algorithms for KGs in entity embedding spaces should be devised.\n\n\nE. Analysis and Insights\n\nWe provide further experiments and discussions in this subsection.Due to the limitation of space, more experiments and the case study can be found in Appendix C and D, available online.\n\nOn efficiency and scalability.The simple algorithm DInf is the most efficient and scalable one, as it merely involves the most basic computation and matching operations.CSLS is slightly less efficient than DInf due to the update of pairwise similarity scores.It also has good scalability.Although RInf adopts a similar idea to CSLS, it involves an additional ranking process, which brings much more time and memory consumption, making it less scalable.Sink.repeatedly conducts the normalization operation, and thus its time efficiency is mainly up to the l value.Its scalability is also limited by the memory space consumption since it needs to store intermediate results, as revealed in Table VI.\n\nRegarding the methods that exert global constraints, Hun. is efficient on medium-sized datasets, while it is not scalable due to the high time complexity and memory space consumption.SMat is space-inefficient even on the medium-sized datasets, making it not scalable.In comparison, RL has more stable time and space costs and can scale to large datasets, and the main influencing factor is the accuracy of pairwise scores.This is because RL has a pre-processing step that filters out confident matched entity pairs and excludes them from the time-consuming RL learning process [65].More confident matched entity pairs would be filtered out if the pairwise scores are more accurate.\n\nOn Effectiveness of Improving Pairwise Score Computation.We compare and discuss the strategies for improving the pairwise score computation, i.e., CSLS, RInf and Sink..\n\nBoth CSLS and RInf aim to mitigate the hubness and isolation issues in the raw pairwise scores (from different starting points).Particularly, we observe that, by setting k (in Equation 1) of CSLS to 1, the difference between RInf and CSLS is reduced to the extra ranking process of RInf, and the results in Tables IV and V validate that this ranking process can consistently bring better performance.This is because the ranking operation can amplify the difference among the scores and prevent such information from being lost after the bidirectional aggregation [62].However, it is noteworthy that the ranking process brings much more time and memory consumption, as can be observed from the empirical results.\n\nThen we analyze the influence of k value in CSLS.As shown in Fig. 6, a larger k leads to worse performance.This is because a larger k implies a smaller \u03c6 value in Equation 1 (where the top-k highest scores are considered and averaged), and the resultant pairwise scores become less distinctive.This also validates the effectiveness of the design in RInf (cf.Equation 2), where only the maximum value is considered to compute the preference score.Nevertheless, in Section V-B, we reveal that setting k to 1 is only useful in the 1-to-1 alignment setting.\n\nAs for Sink., it adopts an extreme approach to optimize the pairwise scores, which encourages each source (resp., target)  entity to have only one positive pairwise score with a target (resp., source) entity and 0's with the rest of the target (resp., source) entities.Thus, it is in fact progressively and implicitly implementing the 1-to-1 alignment constraint during the pairwise score computation process with the increase of l, and is particularly useful in present 1-to-1 evaluation settings of EA.In Fig. 7, we further examine the influence of l in Equation 3 on the alignment results of Sink., which meets our expectation that the larger the l value, the better the distribution of the resultant pairwise scores fits the 1-to-1 constraint, and thus the higher the alignment performance.Nevertheless, a larger l also implies longer processing time.Therefore, by tuning on the validation set, we set l to 100 to reach the balance between effectiveness and efficiency.\n\nOn Effectiveness of Exerting Global Constraints.Next, we compare and discuss the methods that exert global constraints on the embedding matching process, i.e., Hun., SMat and RL.\n\nIt is evident that Hun. is the most performant approach, as it fits well with the present EA setting and can secure an optimal solution towards maximizing the sum of pairwise scores.Specifically, the current EA setting has two notable assumptions (cf.Section II-C).With these two assumptions, EA can be transformed into the linear assignment problem, which aims to maximize the sum of pairwise scores under the 1-to-1 constraint [35].As thus, the algorithms for solving the linear assignment problem, e.g., Hun., can attain remarkably high performance on EA.However, these two assumptions do not necessarily hold on all occasions, which could influence the effectiveness of Hun..For instance, as revealed in Pattern 2, on sparse datasets (e.g., SRPRS), the neighboring structures of some equivalent entities are likely to be different, where the effectiveness of Hun. is limited.In addition, the 1-to-1 alignment constraint is not necessarily true in practice, which will be discussed in Section V.\n\nIn comparison, SMat merely aims to attain a stable matching, where the resultant entity pairing could be sub-optimal under present evaluation setting.RL, on the other hand, relaxes the 1-to-1 constraint and only deviates slightly from the greedy matching, and hence the results are not very promising.\n\nOverall Comparison and Conclusion.Finally, we compare the algorithms all together and draw the following conclusions under the 1-to-1 alignment setting: (1) The best performing methods are Hun.and Sink.. Nevertheless, they have low scalability; (2) CSLS and RInf achieve the best balance between effectiveness and efficiency.While CSLS is more efficient, RInf is more effective; (3) SMat and RL tend to attain better results when the accuracy of the pairwise scores is high.Nevertheless, they require relatively more time.\n\n\nV. NEW EVALUATION SETTINGS\n\nIn this section, we conduct experiments on settings that can better reflect real-life challenges.\n\n\nA. Unmatchable Entities\n\nCurrent EA literature largely overlooks the unmatchable issue, where a KG contains entities that the other KG does not contain.For instance, when aligning YAGO 4 and IMDB, only 1% of entities in YAGO 4 are film-related and possibly have equivalent entities in IMDB, while the other 99% of entities in YAGO 4 necessarily have no match in IMDB [68].Hence, we aim to evaluate the embedding matching algorithms in terms of dealing with unmatchable entities.\n\nDatasets and Evaluation Settings.Following [63], we adapt the KG pairs in DBP15K to include unmatchable entities, resulting in DBP15K+.More specific construction procedure can be found in [63].As for the evaluation metric, we follow the main experimental setting and adopt the F1 score.Unlike 1to-1 alignment, there exist unmatchable entities in this adapted dataset, and the precision and recall values are not necessarily equivalent, since some methods would also align unmatchable entities.Noteworthily, the original setting of SMat and Hun.requires that the numbers of entities on the two sides are equal.Thus, we add the dummy nodes on the side with fewer entities to restore such a setting, and then apply SMat and Hun..The corresponding results are reported in Table VII.\n\nAlignment Results.It reads that Hun.attains the best results, followed by SMat.The superior results are partially due to the addition of dummy nodes, which could mitigate the unmatchable issue to a certain degree.The results of RInf and Sink.are close, outperforming CSLS and RL.DInf still achieves the worst performance.\n\nBesides, by comparing the results on DBP15K+ and those on the original dataset DBP15K (cf.Table IV), we observe that: (1) After including the unmatchable entities, for all methods, the F1 scores drop.This is because most of current embedding matching algorithms are greedy, i.e., retrieving a target entity for each source entity (including the unmatchable ones), which leads to a very low precision.For the rest of the methods, e.g., Hun. and SMat, the unmatchable entities also mislead the matching process and thus affect the final results; (2) Unlike on DBP15K where the performance of Sink.and Hun. are close, on DBP15K+, Hun.largely outperforms Sink., as Hun.does not necessarily align a target entity to each source entity and has a higher precision; (3) Overall, existing algorithms for matching KGs in entity embedding spaces lack the capability of dealing with unmatchable entities.\n\n\nB. Non 1-to-1 Alignment\n\nNext, we study the setting where the source and target entities do not strictly conform to the 1-to-1 constraint, so as to better appreciate these matching algorithms for KGs in entity embedding spaces.Non 1-to-1 alignment is common in practice, especially when two KGs contain entities in different granularity, or one KG is noisy and involves duplicate entities.To the best of our knowledge, we are among the first attempts to Identify and Investigate This Issue.\n\nDataset Construction.Present EA benchmarks are constructed according to the 1-to-1 constraint.Thus, in this work, we establish a new dataset that involves non 1-to-1 alignment relationships.Specifically, we obtain the pre-annotated links 10between Freebase [3] and DBpedia [1], and preserve the entities that are involved in 1-to-many, many-to-1, and many-to-many alignment relationships.Then, we retrieve the relational triples that contain these entities from respective KGs, which also introduces new entities.Next, we detect the links among the newly added entities, and add them into the alignment links.Finally, the resultant dataset, FB_DBP_MUL, contains 44,716 entities, 164,882 triples, 22,117 gold links, among which 20,353 are non 1-to-1 links and 1,764 are 1-to-1 links 11 .The specific statistics are also presented in Table III.\n\nEvaluation Settings.To keep the integrity of the links among entities, we sample the training, validation and test sets from the gold links according to the principle that the links involving the same entity should not be distributed among different sets.The size of the final training, validation and test sets is approximately 7:1:2.We compare the entity pairs produced by embedding matching algorithms against the gold test links, and report the precision (P), recall (R) and F1 values.\n\nAlignment Results.It is evident from Table VIII that, compared with 1-to-1 alignment, the results change significantly on the new dataset.Specifically: (1) RInf and CSLS attain the best F1 scores, whereas the results are not very promising (e.g., with F1 score lower than 0.1 when using GCN); (2) Sink.and Hun.achieve much worse results compared with the performance on 1-to-1 alignment datasets; (3) The results of SMat and RL are even inferior to those of the simple baseline DInf.The main reason accounting for these changes is that the non 1-to-1 alignment links pose great challenges to existing embedding matching algorithms.Specifically, for DInf, CSLS, RInf, Sink.and RL, they only align one target entity (that possesses the highest score) to a given source entity, but fail to discover other alignment links that also involve this source entity.For SMat and Hun., they impose the 1-to-1 constraint during matching, which falls short on the non 1-to-1 setting, thus leading to inferior results.Therefore, it calls for the study on embedding matching algorithms targeted at non 1-to-1 alignment.We also discuss the k value in CSLS and RInf under the non 1-to-1 setting, which can be found in Appendix C, available online.\n\n\nVI. SUMMARY AND FUTURE DIRECTION\n\nIn this section, we summarize the observations and insights made from our evaluation, and provide possible future research directions.\n\n(1) The investigation into matching KGs in embedding spaces has not yet made substantial progress.Although there are a few algorithms tailored for matching KGs in embedding spaces, e.g., CSLS, RInf and RL, under the most popular EA evaluation setting (with 1-to-1 alignment constraint), they are outperformed by the classic general matching algorithms, i.e., Hun.. Hence, there is still much room for improving matching KGs in embedding spaces.\n\n(2) No existing embedding matching algorithm prevails under all experimental settings.The strategies designed to solve the linear assignment problem attain the best performance under the 1-to-1 setting, while they fall short on more practical and challenging scenarios since the new settings (e.g., non 1-to-1 alignment) no longer align with the conditions of these optimization algorithms.Similarly, although the methods for improving the computation of pairwise scores achieve superior results in the non 1-to-1 alignment scenario, they are outperformed by other solutions under the unmatchable setting.Therefore, each evaluation setting poses its own challenge to the embedding matching process, and currently there is no consistent winner.\n\n(3) The adaptation from general matching algorithms requires careful design.Among the embedding matching algorithms, Hun. and SMat are general matching algorithms that have been applied to many other related tasks.Although directly adopting these general strategies to tackle EA is simple and effective, they Authorized licensed use limited to the terms of the applicable license agreement with IEEE.Restrictions apply.\n\nmight well fall short in some scenarios, as the alignment on KGs possesses it own challenges, e.g., the matching is not necessarily 1-to-1 constrained, or the pairwise scores are inaccurate.Thus, it is suggested to take full account of the characteristics of the alignment settings when adapting other general matching algorithms to cope with matching KGs in entity embedding spaces.\n\n(4) The scalability and efficiency should be brought to the attention.Existing advanced embedding matching algorithms have poor scalability, due to the additional resource-consuming operations that contribute to the alignment performance, such as the ranking process in RInf and the 1-to-1 constraint exerted by Hun. and SMat.Besides, the space efficiency is also a critical issue.As shown in Section IV-D, most of the approaches have rather high memory costs given large-scale datasets.Therefore, considering that in practice there are much more entities, the scalability and efficiency issues should be considered during the algorithm design.A preliminary exploration has been conducted by [15].\n\n(5) The practical evaluation settings are worth further investigation.Under the unmatchable and non 1-to-1 alignment settings, the performance of existing algorithms is not promising.A possible future direction is to introduce the notion of probability and leverage the probabilistic reasoning frameworks [22], [45], which have higher flexibility, to produce the alignment results.\n\n(6) Integrating the relation embedding might help.Two latest studies propose to use relation embeddings to help induce aligned entity pairs [33], [56].Different from existing methods that regard EA as a matrix (second-order tensor) isomorphism problem, they express the isomorphism of KGs in the form of third-order tensors to better describe the structural information of KGs [33].Thus, it might be interesting to study the matching between KGs in the joint entity and relation embedding space.\n\nWe also provide some actionable insights: 1) In 1-to-1 constrained scenarios, it is preferable to use Hungarian algorithm or the Sinkhorn operation to conduct the matching, as they explicitly or implicitly implement the 1-to-1 constraint during execution, and take full account of the global matching constraints and strive to reach a globally optimal matching given the objective of maximizing the sum of pairwise similarity scores.Given largescale datasets, using Hungarian algorithm would be more time-efficient, as Sinkhorn operation needs to operate for multiple rounds to achieve convergence.Besides, while Hungarian algorithm depends mainly on CPU, Sinkhorn operation relies on GPU. 2) Given datasets with unmatchable entities, it is suggested to add dummy nodes to make the number of entities in both sides equal, and then use the Hungarian algorithm.In this scenario, there is still much room for improvement.3) Non 1-to-1 alignment is a realistic and frequently observed scenario that has not received much research attention.Among existing algorithms, RInf and CSLS are preferred, since they take into account the global influence on the local matching and meanwhile do not strictly enforce the 1-to-1 constraint.More practical solutions are to be put forward to effectively address non 1-to-1 alignment.\n\n4) Currently, the most performant embedding matching algorithms are not scalable.Among them, the Hungarian algorithm requires approximately one hour on the DWY100K dataset.Hence, in this case, it might be better to utilize the RInf and its variant algorithms, which save 2/3 of time cost at the expense of < 10% performance drop compared with the Hungarian algorithm.\n\nFig. 2 .\n2\nFig. 2. The pipeline of embedding-based EA.Dashed lines denote the preannotated alignment links.\n\n\nFig. 3 .\n3\nFig. 3. Architecture of the EntMatcher library and additional modules required by the experimental evaluation.\n\n\nFig. 4 .\n4\nFig. 4. The statistic of pairwise similarity scores (i.e., Top-5 STD), where the name of the setting is abbreviated, e.g., R-D stands for R-DBP.\n\n\nFig.\n\nFig. Efficiency comparison.Shapes in blue denote methods that improve pairwise scores, while shapes in black denote those exerting global constraints (except for DInf).\n\n\nFig. 6 .\n6\nFig. 6.F1 scores of CSLS with varying k value.\n\n\nFig. 7 .\n7\nFig. 7. F1 scores of Sink.with varying l value.\n\n\nTABLE I COMPARISON\nI\nWITH EXISTING SURVEYS ON EA.THE FOCUS OF EACH WORK IS DENOTED WITH potential practitioners [50], [67], [68].Specifically, Zhao et al. propose a general EA framework to encompass existing works, and then evaluate them under a wide range of settings.Nevertheless, they only briefly mention DInf and SMat in the embedding matching stage [68].Sun et al. survey EA approaches and develop an open-source library to evaluate existing works.\n\n[50]ver, they merely introduce DInf, SMat and CSLS, and overlook the comparison among these algorithms.Besides, they point out that current approaches put in their main efforts in learning expressive embeddings to capture entity features while ignore the alignment inference (i.e., embedding matching) stage[50].Zhang et al. empirically evaluate state-of-the-art embedding-based EA methods in an industrial context, and\n\n\nAlgorithm 3 :\n3\nDInf(E s , E t , E).\nInput: Source and target entity sets: E s , E t ; Unified entityembeddings: EOutput: Matched entity pairs: M1: Derive similarity matrix S based on E;2: M \u2190 Greedy (E\ns , E t , S); 3: return M;\n\n\n\n\nMatched entity pairs: M 1: Derive similarity matrix S based on E; 2: Calculate the mean values of top-k similarity scores of entities in E s and E t , resulting in \u03c6 s and \u03c6 t , respectively; 3:\n\nis the mean similarity score between the source entity u and its top-k most similar entities N u Algorithm 4: CSLS (E s , E t , E, k).Input: Source and target entity sets: E s , E t ; Unified entity embeddings: E; Hyper-parameter: k Output:\n\n\nAlgorithm 5 :\n5\nRInf(E s , E t , E).\nAlgorithm 6\n\n:\n\nSink. (E s , E t , E, l).\n\nInput: Source and target entity sets: E s , E t ; Unified entity embeddings: E; Hyper-parameter: l Output: Matched entity pairs: M 1: Derive similarity matrix S based on E; 2: S sinkhorn = Sinkhorn l (S) (cf.(3)); 3: M \u2190 Greedy (E s , E t , S sinkhorn ); 4: return M;\n\n\nTABLE VIII THE\nVIII\nRESULTS ON NON 1-TO-1 ALIGNMENT DATASET\n\nIn the rest of the paper, we use EA to refer to embedding-based EA solutions, and use conventional EA for the early solutions.\nAuthorized licensed use limited to the terms of the applicable license agreement with IEEE. Restrictions apply.\nIndeed there are a few exceptions, which instead learn a mapping function between individual embedding spaces[50]. However, the subsequent steps still require mapping between spaces and operate on a \"unified\" one, e.g., target entity embeddings.\nUnder certain metrics such as cosine similarity (resp., euclidean distance), the larger (resp., smaller) the pairwise scores, the higher the probability that two entities are equivalent. In this work, w.l.o.g., we adopt the former expression and consider that higher pairwise scores are preferred.Authorized licensed use limited to the terms of the applicable license agreement with IEEE. Restrictions apply.\nWe omit the algorithmic description of the classical algorithms (e.g., Hungarian[24] and Gale-Shapley[46]) and the neural model (i.e., RL[38]) in the interest of space.\nThe codes are publicly available at https://github.com/DexterZeng/ EntMatcher\nWe cannot provide the results of SMat, as it requires extremely large memory space and cannot work under our experimental environment.\nNote that for algorithms with memory space costs exceeding our experimental environment (except for SMat), there is additional swap area in the hard drive for them to finish the program (which usually takes much longer time).\n [Online]. Available: https://www.dbpedia.org/blog/dbpedia-is-nowinterlinked-with-freebase-links-to-opencyc-updated/\n11 FB_DBP_MUL is publicly available at https://github.com/DexterZeng/ EntMatcher.\nVII. CONCLUSIONThis paper conducts a comprehensive survey and evaluation of matching algorithms for KGs in entity embedding spaces.We evaluate seven state-of-the-art strategies in terms of effectiveness and efficiency on a wide range of datasets, including two experimental settings that better mirror real-life challenges.We identify the strengths and weaknesses of these algorithms under different settings.We hope the experimental results would be valuable for researchers to put forward more effective and scalable embedding matching algorithms.The work of Weixin Zeng, Xiang Zhao and Jiuyang Tang were supported in part by the National Key R&D Program of China under Grant 2020AAA0108800, and in part by NSFC under Grants 62272469 and 71971212.Recommended for acceptance by X. Yi.Authorized licensed use limited to the terms of the applicable license agreement with IEEE.Restrictions apply.\nDBpedia: A nucleus for a web of open data. S Auer, C Bizer, G Kobilarov, J Lehmann, R Cyganiak, Z G Ives, Proc. Int. Semantic Web Conf. Int. Semantic Web Conf2007\n\nKnowledge graph entity alignment with graph convolutional networks: Lessons learned. M Berrendorf, E Faerman, V Melnychuk, V Tresp, T Seidl, Proc. Eur. Conf. IR Res. Eur. Conf. IR Res2020\n\nFreebase: A collaboratively created graph database for structuring human knowledge. K D Bollacker, C Evans, P Paritosh, T Sturge, J Taylor, Proc. ACM SIGMOD Int. Conf. Manage. Data. ACM SIGMOD Int. Conf. Manage. Data2008\n\nTranslating embeddings for modeling multi-relational data. A Bordes, N Usunier, A Garc\u00eda-Dur\u00e1n, J Weston, O Yakhnenko, Proc. Int. Conf. Neural Inf. Int. Conf. Neural Inf2013\n\nEntity matching with transformer architectures -A step forward in data integration. U Brunner, K Stockinger, Proc. 23rd Int. Conf. Extending Database Technol. 23rd Int. Conf. Extending Database TechnolCopenhagen, DenmarkMar. 30 -Apr. 02, 2020\n\nEntity alignment with reliable path reasoning and relation-aware heterogeneous graph transformer. W Cai, W Ma, J Zhan, Y Jiang, Proc. 31st Int. Joint Conf. 31st Int. Joint ConfVienna, AustriaJul. 23-29 2022\n\nMulti-channel graph neural network for entity alignment. Y Cao, Z Liu, C Li, Z Liu, J Li, T Chua, Proc. Assoc. Comput. Linguistics. Assoc. Comput. Linguistics2019\n\nCo-training embeddings of knowledge graphs and entity descriptions for crosslingual entity alignment. M Chen, Y Tian, K Chang, S Skiena, C Zaniolo, Proc. Int. Joint Conf. Int. Joint Conf2018\n\nMultilingual knowledge graph embeddings for cross-lingual knowledge alignment. M Chen, Y Tian, M Yang, C Zaniolo, Proc. Int. Joint Conf. Artif. Intell. Int. Joint Conf. Artif. Intell2017\n\nAn overview of end-to-end entity resolution for Big Data. V Christophides, V Efthymiou, T Palpanas, G Papadakis, K Stefanidis, ACM Comput. Surv. 536422021\n\nMagellan: Toward building ecosystems of entity matching solutions. A Doan, Commun. ACM. 6382020\n\nSecure stable matching at scale. J Doerner, D Evans, A Shelat, SIGSAC Conf. 2016\n\nDeep graph matching consensus. M Fey, J E Lenssen, C Morris, J Masci, N M Kriege, Proc. Int. Conf. Learn. Representations. Int. Conf. Learn. Representations2020\n\nCollege admissions and the stability of marriage. D Gale, L S Shapley, The Amer. Math. Monthly. 6911962\n\nClusterea: Scalable entity alignment with stochastic training and normalized mini-batch similarities. Y Gao, X Liu, J Wu, T Li, P Wang, L Chen, Proc. 28th ACM SIGKDD Conf. Knowl. Discov. Data Mining. 28th ACM SIGKDD Conf. Knowl. Discov. Data MiningWashington, DC, USAAug. 14-18, 2022\n\nLargeEA: Aligning entities for large-scale knowledge graphs. C Ge, X Liu, L Chen, B Zheng, Y Gao, arXiv:2108.052112021\n\nAuthorized licensed use limited to the terms of the applicable license agreement with IEEE. \n\nMake it easy: An effective end-to-end entity alignment framework. C Ge, X Liu, L Chen, B Zheng, Y Gao, Proc. Int. Int2021\n\nCollaborEM: A self-supervised entity matching framework using multi-features collaboration. C Ge, P Wang, L Chen, X Liu, B Zheng, Y Gao, 10.1109/TKDE.2021.3134806IEEE Trans. Knowl. Data Eng., early access. Dec. 13, 2021\n\nUnderstanding and improving knowledge graph embedding for entity alignment. L Guo, Q Zhang, Z Sun, M Chen, W Hu, H Chen, Proc. Int. Conf. Mach. Learn. Int. Conf. Mach. LearnBaltimore, Maryland, USAJul. 17-23 2022162\n\nLogmap: Logic-based and scalable ontology matching. E Jim\u00e9nez-Ruiz, B C Grau, Proc. Int. Semantic Web Conf. Int. Semantic Web ConfSpringer2011\n\nA shortest augmenting path algorithm for dense and sparse linear assignment problems. R Jonker, A Volgenant, Computing. 3841987\n\nA collective, probabilistic approach to schema mapping. A Kimmig, A Memory, R J Miller, L Getoor, Proc. IEEE Int. Conf. Data Eng. IEEE Int. Conf. Data Eng2017\n\nSemi-supervised classification with graph convolutional networks. T N Kipf, M Welling, Proc. Int. Conf. Learn. Representations. Int. Conf. Learn. Representations2017\n\nThe hungarian method for the assignment problem. H W Kuhn, Nav. Res. Logistics Quart. 21/21955\n\nSiGMa: Simple greedy matching for aligning large knowledge bases. S Lacoste-Julien, K Palla, A Davies, G Kasneci, T Graepel, Z Ghahramani, Proc. ACM SIGKDD Int. Conf. Knowl. Discov. Data Mining. ACM SIGKDD Int. Conf. Knowl. Discov. Data Mining2013\n\nWord translation without parallel data. G Lample, A Conneau, M Ranzato, L Denoyer, H J\u00e9gou, Proc. Int. Conf. Learn. Representations. Int. Conf. Learn. Representations2018\n\nSemi-supervised entity alignment via joint knowledge embedding model and cross-graph model. C Li, Y Cao, L Hou, J Shi, J Li, T Chua, Proc. Conf. Empir. Methods Natural Lang. Process. Conf. Empir. Methods Natural Lang. ess2019\n\nUncertainty-aware pseudo label refinery for entity alignment. J Li, D Song, Proc. ACM Web Conf., Virtual Event. ACM Web Conf., Virtual EventLyon, FranceApr. 25-29, 2022\n\nDeep entity matching with pre-trained language models. Y Li, J Li, Y Suhara, A Doan, W Tan, Proc. VLDB Endow. VLDB Endow202014\n\nGuiding cross-lingual entity alignment via adversarial knowledge embedding. X Lin, H Yang, J Wu, C Zhou, B Wang, Proc. IEEE Int. Conf. Data Minings. IEEE Int. Conf. Data Minings2019\n\nActiveEA: Active learning for neural entity alignment. B Liu, H Scells, G Zuccon, W Hua, G Zhao, Proc. Conf. Empir. Methods Natural Lang. Process. Conf. Empir. Methods Natural Lang. ess2021\n\nSelfKG: Self-supervised entity alignment in knowledge graphs. X Liu, Proc. ACM Web Conf., Virtual Event. ACM Web Conf., Virtual EventLyon, FranceApr. 25-29, 2022\n\nAn effective and efficient entity alignment decoding algorithm via third-order tensor isomorphism. X Mao, Proc. 60th Annu. Meeting Assoc. Comput. Linguistics. 60th Annu. Meeting Assoc. Comput. LinguisticsDublin, IrelandMay 22-27, 2022\n\nBoosting the speed of entity alignment 10 \u00d7: Dual attention matching network with normalized hard sample mining. X Mao, W Wang, Y Wu, M Lan, Proc. Int. World Wide Web Conf. Int. World Wide Web Conf2021\n\nFrom alignment to assignment: Frustratingly simple unsupervised entity alignment. X Mao, W Wang, Y Wu, M Lan, Proc. Conf. Empir. Methods Natural Lang. Process. Conf. Empir. Methods Natural Lang. ess2021\n\nRelational reflection entity alignment. X Mao, W Wang, H Xu, Y Wu, M Lan, Proc. Conf. Inf. Knowl. Manage. Conf. Inf. Knowl. Manage2020\n\nLearning latent permutations with gumbel-sinkhorn networks. G E Mena, D Belanger, S W Linderman, J Snoek, Proc. Int. Conf. Learn. Representations. Int. Conf. Learn. Representations2018\n\nAsynchronous methods for deep reinforcement learning. V Mnih, Proc. Int. Conf. Mach. Learn. Int. Conf. Mach. Learn2016\n\nDeep learning for entity matching: A design space exploration. S , Proc. Int. Conf. Manage. Data. Int. Conf. Manage. DataHouston, TX, USAJun. 10-15, 2018\n\nEntity alignment for knowledge graphs with multiorder convolutional networks. T T Nguyen, IEEE Trans. Knowl. Data Eng. 349Sep. 2022\n\nBlocking and filtering techniques for entity resolution: A survey. G Papadakis, D Skoutas, E Thanos, T Palpanas, ACM Comput. Surv. 532422020\n\nKnowledge graph refinement: A survey of approaches and evaluation methods. H Paulheim, Semantic Web. 832017\n\nImproving cross-lingual entity alignment via optimal transport. S Pei, L Yu, X Zhang, Proc. Int. Joint Conf. Artif. S Intell, Kraus, Int. Joint Conf. Artif2019\n\nRECON: A reciprocal recommender for online dating. L A S Pizzato, T Rej, T Chung, I Koprinska, J Kay, Proc. ACM Conf. Recommender syst. ACM Conf. Recommender syst2010\n\nLarge-scale knowledge graph identification using PSL. J Pujara, H Miao, L Getoor, W W Cohen, Proc. Conf. Assoc. Advance. Conf. Assoc. Advance2013\n\nDeferred acceptance algorithms: History, theory, practice, and open questions. A E Roth, Int. J. Game Theory. 363/42008\n\nOntology matching: State of the art and future challenges. P Shvaiko, J Euzenat, IEEE Trans. Knowl. Data Eng. 251Jan. 2013\n\nPARIS: Probabilistic alignment of relations, instances, and schema. F M Suchanek, S Abiteboul, P Senellart, Proc. VLDB Endow. VLDB Endow20115\n\nYago: A core of semantic knowledge. F M Suchanek, G Kasneci, G Weikum, Proc. Int. World Wide Web Conf. Int. World Wide Web Conf2007\n\nA benchmarking study of embedding-based entity alignment for knowledge graphs. Z Sun, Proc. VLDB Endow. VLDB Endow202013\n\nRePS: Relation, position and structure aware entity alignment. A Surisetty, Proc. Web Conf., Virtual Event / Lyon. Web Conf., Virtual Event / LyonFranceApr. 25-29, 2022\n\nEntity alignment between knowledge graphs using attribute embeddings. B D Trisedya, J Qi, R Zhang, Proc. Conf. Assoc. Advance. Conf. Assoc. Advance2019\n\nWikidata: A free collaborative knowledgebase. D Vrandecic, M Kr\u00f6tzsch, Commun. ACM. 57102014\n\nCross-lingual knowledge graph alignment via graph convolutional networks. Z Wang, Q Lv, X Lan, Y Zhang, Proc. Conf. Empir. Methods Natural Lang. Conf. Empir. Methods Natural Lang2018\n\nRelation-aware entity alignment for heterogeneous knowledge graphs. Y Wu, X Liu, Y Feng, Z Wang, R Yan, D Zhao, Proc. Int. Joint Conf. Int. Joint Conf2019\n\nInformed multi-context entity alignment. K Xin, Z Sun, W Hua, W Hu, X Zhou, Proc. ACM Int. Conf. Web Search Data Mining. ACM Int. Conf. Web Search Data MiningTempe, AZ, USAFeb. 21-25, 2022\n\nCoordinated reasoning for cross-lingual knowledge graph alignment. K Xu, L Song, Y Feng, Y Song, D Yu, Proc. Conf. Assoc. Advance. Conf. Assoc. Advance2020\n\nAligning cross-lingual entities with multi-aspect information. H Yang, Y Zou, P Shi, W Lu, J Lin, X Sun, Proc. Conf. Empir. Methods Natural Lang. Process. Conf. Empir. Methods Natural Lang. ess2019\n\nEntity and relation matching consensus for entity alignment. J Yang, Proc. Conf. Inf. Knowl. Manage. Conf. Inf. Knowl. Manage2021\n\nInteractive contrastive learning for self-supervised entity alignment. K Zeng, Proc. 31st ACM Int. Conf. Inf. Knowl. Manage. 31st ACM Int. Conf. Inf. Knowl. ManageAtlanta, GA, USAOct. 17-21, 2022\n\nA comprehensive survey of entity alignment for knowledge graphs. K Zeng, C Li, L Hou, J Li, L Feng, AI Open. 22021\n\nOn entity alignment at scale. W Zeng, X Zhao, X Li, J Tang, W Wang, VLDB J. 312021\n\nTowards entity alignment in the open world: An unsupervised approach. W Zeng, X Zhao, J Tang, X Li, M Luo, Q Zheng, Proc. 26th Int. Conf. Database Syst. 26th Int. Conf. Database Syst2021\n\nCollective entity alignment via adaptive features. W Zeng, X Zhao, J Tang, X Lin, Proc. IEEE Int. Conf. Data Eng. IEEE Int. Conf. Data Eng2020\n\nReinforcement learningbased collective entity alignment with adaptive features. W Zeng, X Zhao, J Tang, X Lin, P Groth, ACM Trans. Inf. Syst. 393312021\n\nA benchmark and comprehensive survey on knowledge graph entity alignment via representation learning. R Zhang, B D Trisedya, M Li, Y Jiang, J Qi, VLDB J. 3152022\n\nAn industry evaluation of embedding-based entity alignment. Z Zhang, Proc. 28th Int. Conf. Comput. Linguistics. 28th Int. Conf. Comput. Linguistics2020\n\nAuthorized licensed use limited to the terms of the applicable license agreement with IEEE. \n\nAn experimental study of state-of-the-art entity alignment approaches. X Zhao, W Zeng, J Tang, W Wang, F Suchanek, IEEE Trans. Knowl. Data Eng. 346Jun. 2022\n\nRAGA: Relation-aware graph attention networks for global entity alignment. R Zhu, M Ma, P Wang, Proc. Pacific-Asia Conf. Pacific-Asia Conf2021\n\nRelation-aware neighborhood matching model for entity alignment. Y Zhu, H Liu, Z Wu, Y Du, Proc. Conf. Assoc. Advance. Conf. Assoc. Advance2021\n\nHe is currently a professor with the National University of Defense Technology, China. His research interests include graph data management and mining, with a special focus on knowledge Zhen Tan received the PhD degree from National University of Defense Technology (NUDT), China. Xiang Zhao received the PhD degree from The University of New South Wales. Australia; China2022. 2013. 2018. 2004University of Defense Technology (NUDT), ChinaHe is currently a professor with NUDT. His research interests include knowledge graphs and advanced data analytics. Xueqi Cheng (Senior Member, IEEE) is currently a professor with the Institute of Computing Technology. His research interests include network science, web search and data mining, Big Data processing, and distributed computing architecture\n", "annotations": {"author": "[{\"end\":295,\"start\":79},{\"end\":623,\"start\":296},{\"end\":835,\"start\":624},{\"end\":1034,\"start\":836},{\"end\":1303,\"start\":1035}]", "publisher": null, "author_last_name": "[{\"end\":90,\"start\":86},{\"end\":306,\"start\":302},{\"end\":632,\"start\":629},{\"end\":848,\"start\":844},{\"end\":1065,\"start\":1060}]", "author_first_name": "[{\"end\":85,\"start\":79},{\"end\":301,\"start\":296},{\"end\":628,\"start\":624},{\"end\":843,\"start\":836},{\"end\":1059,\"start\":1054}]", "author_affiliation": "[{\"end\":294,\"start\":136},{\"end\":485,\"start\":327},{\"end\":622,\"start\":487},{\"end\":834,\"start\":676},{\"end\":1033,\"start\":875},{\"end\":1244,\"start\":1086},{\"end\":1302,\"start\":1246}]", "title": "[{\"end\":76,\"start\":1},{\"end\":1379,\"start\":1304}]", "venue": null, "abstract": "[{\"end\":2962,\"start\":1663}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3757,\"start\":3753},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":3763,\"start\":3759},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":4027,\"start\":4023},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4153,\"start\":4150},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4159,\"start\":4155},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":4165,\"start\":4161},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":4171,\"start\":4167},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":4177,\"start\":4173},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4383,\"start\":4380},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":5068,\"start\":5064},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5359,\"start\":5355},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":5365,\"start\":5361},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":5371,\"start\":5367},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":5453,\"start\":5449},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":5459,\"start\":5455},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":6069,\"start\":6065},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":6296,\"start\":6292},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6372,\"start\":6368},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":6378,\"start\":6374},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":6384,\"start\":6380},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":6390,\"start\":6386},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":6396,\"start\":6392},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":6402,\"start\":6398},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6512,\"start\":6508},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":6518,\"start\":6514},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":6524,\"start\":6520},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":6634,\"start\":6630},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":6640,\"start\":6636},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":6646,\"start\":6642},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":7070,\"start\":7066},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":8204,\"start\":8200},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":8210,\"start\":8206},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":9164,\"start\":9160},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":9258,\"start\":9254},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":9264,\"start\":9260},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":9270,\"start\":9266},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":9276,\"start\":9272},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":9282,\"start\":9278},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13238,\"start\":13235},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":13251,\"start\":13247},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13838,\"start\":13835},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":13844,\"start\":13840},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":13850,\"start\":13846},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":13856,\"start\":13852},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":14265,\"start\":14261},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":14871,\"start\":14867},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":14877,\"start\":14873},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":14883,\"start\":14879},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":14889,\"start\":14885},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":14895,\"start\":14891},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":14901,\"start\":14897},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":14907,\"start\":14903},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":14913,\"start\":14909},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":14919,\"start\":14915},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":14925,\"start\":14921},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":14931,\"start\":14927},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":14937,\"start\":14933},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":15282,\"start\":15278},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":15288,\"start\":15284},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":15294,\"start\":15290},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":15371,\"start\":15367},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":15459,\"start\":15455},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":15917,\"start\":15913},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":15923,\"start\":15919},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":16028,\"start\":16024},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":16034,\"start\":16030},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":16139,\"start\":16135},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":16193,\"start\":16189},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16336,\"start\":16332},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":16342,\"start\":16338},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":16348,\"start\":16344},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":16460,\"start\":16456},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":17143,\"start\":17139},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":17149,\"start\":17145},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":17389,\"start\":17386},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":17395,\"start\":17391},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":17401,\"start\":17397},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":18492,\"start\":18488},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":18498,\"start\":18494},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":18504,\"start\":18500},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":18510,\"start\":18506},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":18516,\"start\":18512},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":18873,\"start\":18869},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":19157,\"start\":19153},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":19296,\"start\":19292},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":23883,\"start\":23879},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":23974,\"start\":23970},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":24395,\"start\":24391},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":25199,\"start\":25195},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":25415,\"start\":25411},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":25479,\"start\":25475},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":26411,\"start\":26407},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":26756,\"start\":26752},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":26826,\"start\":26822},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":26832,\"start\":26828},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":27044,\"start\":27040},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":27383,\"start\":27379},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":27459,\"start\":27455},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":27532,\"start\":27528},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":27538,\"start\":27534},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":27544,\"start\":27540},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":28034,\"start\":28030},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":28287,\"start\":28283},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":28615,\"start\":28611},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":28623,\"start\":28619},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":28629,\"start\":28625},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":28942,\"start\":28938},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":29200,\"start\":29196},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":29586,\"start\":29582},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":30497,\"start\":30493},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":33350,\"start\":33347},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":33688,\"start\":33684},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":33719,\"start\":33715},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":34786,\"start\":34783},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":34792,\"start\":34788},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":34798,\"start\":34794},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":34826,\"start\":34823},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":34832,\"start\":34828},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":34864,\"start\":34860},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":34870,\"start\":34866},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":35898,\"start\":35894},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":37531,\"start\":37527},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":41024,\"start\":41020},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":41592,\"start\":41588},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":43293,\"start\":43289},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":45074,\"start\":45070},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":45913,\"start\":45909},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":48202,\"start\":48198},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":49228,\"start\":49225},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":50096,\"start\":50092},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":50252,\"start\":50248},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":50397,\"start\":50393},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":52955,\"start\":52952},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":52971,\"start\":52968},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":58125,\"start\":58121},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":58437,\"start\":58433},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":58443,\"start\":58439},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":58655,\"start\":58651},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":58661,\"start\":58657},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":58892,\"start\":58888},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":63698,\"start\":63694},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":64324,\"start\":64320},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":64345,\"start\":64341},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":64381,\"start\":64377},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":64967,\"start\":64965}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":60802,\"start\":60693},{\"attributes\":{\"id\":\"fig_1\"},\"end\":60926,\"start\":60803},{\"attributes\":{\"id\":\"fig_2\"},\"end\":61084,\"start\":60927},{\"attributes\":{\"id\":\"fig_3\"},\"end\":61261,\"start\":61085},{\"attributes\":{\"id\":\"fig_4\"},\"end\":61321,\"start\":61262},{\"attributes\":{\"id\":\"fig_5\"},\"end\":61382,\"start\":61322},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":62260,\"start\":61383},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":62492,\"start\":62261},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":62933,\"start\":62493},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":62983,\"start\":62934},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":63283,\"start\":62984},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":63345,\"start\":63284}]", "paragraph": "[{\"end\":3691,\"start\":2964},{\"end\":4028,\"start\":3693},{\"end\":4663,\"start\":4030},{\"end\":6297,\"start\":4665},{\"end\":7260,\"start\":6299},{\"end\":8152,\"start\":7262},{\"end\":9012,\"start\":8154},{\"end\":9598,\"start\":9014},{\"end\":10328,\"start\":9600},{\"end\":10841,\"start\":10330},{\"end\":11360,\"start\":10843},{\"end\":11413,\"start\":11362},{\"end\":11768,\"start\":11415},{\"end\":11999,\"start\":11770},{\"end\":12315,\"start\":12021},{\"end\":12818,\"start\":12353},{\"end\":13057,\"start\":12820},{\"end\":13857,\"start\":13098},{\"end\":13965,\"start\":13859},{\"end\":15112,\"start\":13995},{\"end\":15924,\"start\":15114},{\"end\":16295,\"start\":15926},{\"end\":16929,\"start\":16297},{\"end\":18407,\"start\":16931},{\"end\":19297,\"start\":18409},{\"end\":19683,\"start\":19299},{\"end\":19931,\"start\":19707},{\"end\":20555,\"start\":19954},{\"end\":20879,\"start\":20700},{\"end\":21210,\"start\":20881},{\"end\":21406,\"start\":21274},{\"end\":22366,\"start\":21422},{\"end\":23544,\"start\":22368},{\"end\":23591,\"start\":23546},{\"end\":23798,\"start\":23624},{\"end\":24477,\"start\":23820},{\"end\":24593,\"start\":24520},{\"end\":25200,\"start\":24694},{\"end\":25362,\"start\":25202},{\"end\":25723,\"start\":25399},{\"end\":26757,\"start\":25771},{\"end\":27405,\"start\":26797},{\"end\":27692,\"start\":27423},{\"end\":28106,\"start\":27780},{\"end\":28434,\"start\":28108},{\"end\":29288,\"start\":28467},{\"end\":29464,\"start\":29290},{\"end\":30498,\"start\":29499},{\"end\":30674,\"start\":30500},{\"end\":30845,\"start\":30699},{\"end\":31256,\"start\":30887},{\"end\":31553,\"start\":31258},{\"end\":31992,\"start\":31555},{\"end\":32664,\"start\":31994},{\"end\":33210,\"start\":32693},{\"end\":34116,\"start\":33212},{\"end\":34565,\"start\":34118},{\"end\":34948,\"start\":34567},{\"end\":35080,\"start\":34950},{\"end\":35899,\"start\":35115},{\"end\":36674,\"start\":35901},{\"end\":36770,\"start\":36676},{\"end\":37917,\"start\":36772},{\"end\":38018,\"start\":37919},{\"end\":39067,\"start\":38020},{\"end\":39962,\"start\":39069},{\"end\":40237,\"start\":39964},{\"end\":40423,\"start\":40239},{\"end\":41172,\"start\":40425},{\"end\":41505,\"start\":41220},{\"end\":42206,\"start\":41507},{\"end\":42495,\"start\":42208},{\"end\":42923,\"start\":42534},{\"end\":43578,\"start\":42925},{\"end\":43792,\"start\":43607},{\"end\":44491,\"start\":43794},{\"end\":45174,\"start\":44493},{\"end\":45344,\"start\":45176},{\"end\":46057,\"start\":45346},{\"end\":46612,\"start\":46059},{\"end\":47587,\"start\":46614},{\"end\":47767,\"start\":47589},{\"end\":48767,\"start\":47769},{\"end\":49070,\"start\":48769},{\"end\":49594,\"start\":49072},{\"end\":49722,\"start\":49625},{\"end\":50203,\"start\":49750},{\"end\":50983,\"start\":50205},{\"end\":51306,\"start\":50985},{\"end\":52200,\"start\":51308},{\"end\":52693,\"start\":52228},{\"end\":53537,\"start\":52695},{\"end\":54028,\"start\":53539},{\"end\":55259,\"start\":54030},{\"end\":55430,\"start\":55296},{\"end\":55876,\"start\":55432},{\"end\":56621,\"start\":55878},{\"end\":57042,\"start\":56623},{\"end\":57427,\"start\":57044},{\"end\":58126,\"start\":57429},{\"end\":58509,\"start\":58128},{\"end\":59006,\"start\":58511},{\"end\":60323,\"start\":59008},{\"end\":60692,\"start\":60325},{\"end\":60801,\"start\":60705},{\"end\":60925,\"start\":60815},{\"end\":61083,\"start\":60939},{\"end\":61260,\"start\":61092},{\"end\":61320,\"start\":61274},{\"end\":61381,\"start\":61334},{\"end\":61838,\"start\":61405},{\"end\":62259,\"start\":61840},{\"end\":62298,\"start\":62278},{\"end\":62491,\"start\":62465},{\"end\":62690,\"start\":62496},{\"end\":62932,\"start\":62692},{\"end\":62971,\"start\":62951},{\"end\":63013,\"start\":62988},{\"end\":63282,\"start\":63015},{\"end\":63344,\"start\":63305}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":24518,\"start\":24478},{\"attributes\":{\"id\":\"formula_1\"},\"end\":24519,\"start\":24518},{\"attributes\":{\"id\":\"formula_2\"},\"end\":24620,\"start\":24594},{\"attributes\":{\"id\":\"formula_3\"},\"end\":24693,\"start\":24620},{\"attributes\":{\"id\":\"formula_4\"},\"end\":25769,\"start\":25724},{\"attributes\":{\"id\":\"formula_5\"},\"end\":25770,\"start\":25769},{\"attributes\":{\"id\":\"formula_6\"},\"end\":27422,\"start\":27406},{\"attributes\":{\"id\":\"formula_7\"},\"end\":27779,\"start\":27693}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":18549,\"start\":18548},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":21536,\"start\":21534},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":33903,\"start\":33900},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":35200,\"start\":35198},{\"end\":35422,\"start\":35421},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":38225,\"start\":38223},{\"end\":38535,\"start\":38534},{\"end\":38907,\"start\":38906},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":39507,\"start\":39504},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":42982,\"start\":42980},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":43467,\"start\":43465},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":44490,\"start\":44488},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":50982,\"start\":50979},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":51406,\"start\":51404},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":53536,\"start\":53533}]", "section_header": "[{\"end\":12019,\"start\":12002},{\"end\":12351,\"start\":12318},{\"end\":13096,\"start\":13060},{\"end\":13993,\"start\":13968},{\"end\":19705,\"start\":19686},{\"end\":19952,\"start\":19934},{\"end\":20698,\"start\":20558},{\"end\":21272,\"start\":21213},{\"end\":21420,\"start\":21409},{\"end\":23622,\"start\":23594},{\"end\":23818,\"start\":23801},{\"end\":25397,\"start\":25365},{\"end\":26795,\"start\":26760},{\"end\":28465,\"start\":28437},{\"end\":29497,\"start\":29467},{\"end\":30697,\"start\":30677},{\"end\":30885,\"start\":30848},{\"end\":32691,\"start\":32667},{\"end\":35113,\"start\":35083},{\"end\":41218,\"start\":41175},{\"end\":42532,\"start\":42498},{\"end\":43605,\"start\":43581},{\"end\":49623,\"start\":49597},{\"end\":49748,\"start\":49725},{\"end\":52226,\"start\":52203},{\"end\":55294,\"start\":55262},{\"end\":60702,\"start\":60694},{\"end\":60812,\"start\":60804},{\"end\":60936,\"start\":60928},{\"end\":61090,\"start\":61086},{\"end\":61271,\"start\":61263},{\"end\":61331,\"start\":61323},{\"end\":61402,\"start\":61384},{\"end\":62275,\"start\":62262},{\"end\":62948,\"start\":62935},{\"end\":62986,\"start\":62985},{\"end\":63299,\"start\":63285}]", "table": "[{\"end\":62464,\"start\":62299},{\"end\":62983,\"start\":62972}]", "figure_caption": "[{\"end\":60802,\"start\":60704},{\"end\":60926,\"start\":60814},{\"end\":61084,\"start\":60938},{\"end\":61261,\"start\":61091},{\"end\":61321,\"start\":61273},{\"end\":61382,\"start\":61333},{\"end\":61839,\"start\":61404},{\"end\":62299,\"start\":62277},{\"end\":62691,\"start\":62495},{\"end\":62972,\"start\":62950},{\"end\":63014,\"start\":62987},{\"end\":63345,\"start\":63304}]", "figure_ref": "[{\"end\":5545,\"start\":5544},{\"end\":7279,\"start\":7278},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13005,\"start\":13004},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":31125,\"start\":31124},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":32458,\"start\":32457},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":38423,\"start\":38422},{\"end\":40080,\"start\":40079},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":46126,\"start\":46125},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":47127,\"start\":47126}]", "bib_author_first_name": "[{\"end\":65987,\"start\":65986},{\"end\":65995,\"start\":65994},{\"end\":66004,\"start\":66003},{\"end\":66017,\"start\":66016},{\"end\":66028,\"start\":66027},{\"end\":66040,\"start\":66039},{\"end\":66042,\"start\":66041},{\"end\":66193,\"start\":66192},{\"end\":66207,\"start\":66206},{\"end\":66218,\"start\":66217},{\"end\":66231,\"start\":66230},{\"end\":66240,\"start\":66239},{\"end\":66381,\"start\":66380},{\"end\":66383,\"start\":66382},{\"end\":66396,\"start\":66395},{\"end\":66405,\"start\":66404},{\"end\":66417,\"start\":66416},{\"end\":66427,\"start\":66426},{\"end\":66578,\"start\":66577},{\"end\":66588,\"start\":66587},{\"end\":66599,\"start\":66598},{\"end\":66615,\"start\":66614},{\"end\":66625,\"start\":66624},{\"end\":66778,\"start\":66777},{\"end\":66789,\"start\":66788},{\"end\":67036,\"start\":67035},{\"end\":67043,\"start\":67042},{\"end\":67049,\"start\":67048},{\"end\":67057,\"start\":67056},{\"end\":67203,\"start\":67202},{\"end\":67210,\"start\":67209},{\"end\":67217,\"start\":67216},{\"end\":67223,\"start\":67222},{\"end\":67230,\"start\":67229},{\"end\":67236,\"start\":67235},{\"end\":67412,\"start\":67411},{\"end\":67420,\"start\":67419},{\"end\":67428,\"start\":67427},{\"end\":67437,\"start\":67436},{\"end\":67447,\"start\":67446},{\"end\":67581,\"start\":67580},{\"end\":67589,\"start\":67588},{\"end\":67597,\"start\":67596},{\"end\":67605,\"start\":67604},{\"end\":67748,\"start\":67747},{\"end\":67765,\"start\":67764},{\"end\":67778,\"start\":67777},{\"end\":67790,\"start\":67789},{\"end\":67803,\"start\":67802},{\"end\":67913,\"start\":67912},{\"end\":67976,\"start\":67975},{\"end\":67987,\"start\":67986},{\"end\":67996,\"start\":67995},{\"end\":68056,\"start\":68055},{\"end\":68063,\"start\":68062},{\"end\":68065,\"start\":68064},{\"end\":68076,\"start\":68075},{\"end\":68086,\"start\":68085},{\"end\":68095,\"start\":68094},{\"end\":68097,\"start\":68096},{\"end\":68237,\"start\":68236},{\"end\":68245,\"start\":68244},{\"end\":68247,\"start\":68246},{\"end\":68394,\"start\":68393},{\"end\":68401,\"start\":68400},{\"end\":68408,\"start\":68407},{\"end\":68414,\"start\":68413},{\"end\":68420,\"start\":68419},{\"end\":68428,\"start\":68427},{\"end\":68638,\"start\":68637},{\"end\":68644,\"start\":68643},{\"end\":68651,\"start\":68650},{\"end\":68659,\"start\":68658},{\"end\":68668,\"start\":68667},{\"end\":68857,\"start\":68856},{\"end\":68863,\"start\":68862},{\"end\":68870,\"start\":68869},{\"end\":68878,\"start\":68877},{\"end\":68887,\"start\":68886},{\"end\":69006,\"start\":69005},{\"end\":69012,\"start\":69011},{\"end\":69020,\"start\":69019},{\"end\":69028,\"start\":69027},{\"end\":69035,\"start\":69034},{\"end\":69044,\"start\":69043},{\"end\":69211,\"start\":69210},{\"end\":69218,\"start\":69217},{\"end\":69227,\"start\":69226},{\"end\":69234,\"start\":69233},{\"end\":69242,\"start\":69241},{\"end\":69248,\"start\":69247},{\"end\":69404,\"start\":69403},{\"end\":69420,\"start\":69419},{\"end\":69422,\"start\":69421},{\"end\":69582,\"start\":69581},{\"end\":69592,\"start\":69591},{\"end\":69681,\"start\":69680},{\"end\":69691,\"start\":69690},{\"end\":69701,\"start\":69700},{\"end\":69703,\"start\":69702},{\"end\":69713,\"start\":69712},{\"end\":69851,\"start\":69850},{\"end\":69853,\"start\":69852},{\"end\":69861,\"start\":69860},{\"end\":70001,\"start\":70000},{\"end\":70003,\"start\":70002},{\"end\":70114,\"start\":70113},{\"end\":70132,\"start\":70131},{\"end\":70141,\"start\":70140},{\"end\":70151,\"start\":70150},{\"end\":70162,\"start\":70161},{\"end\":70173,\"start\":70172},{\"end\":70337,\"start\":70336},{\"end\":70347,\"start\":70346},{\"end\":70358,\"start\":70357},{\"end\":70369,\"start\":70368},{\"end\":70380,\"start\":70379},{\"end\":70561,\"start\":70560},{\"end\":70567,\"start\":70566},{\"end\":70574,\"start\":70573},{\"end\":70581,\"start\":70580},{\"end\":70588,\"start\":70587},{\"end\":70594,\"start\":70593},{\"end\":70758,\"start\":70757},{\"end\":70764,\"start\":70763},{\"end\":70921,\"start\":70920},{\"end\":70927,\"start\":70926},{\"end\":70933,\"start\":70932},{\"end\":70943,\"start\":70942},{\"end\":70951,\"start\":70950},{\"end\":71070,\"start\":71069},{\"end\":71077,\"start\":71076},{\"end\":71085,\"start\":71084},{\"end\":71091,\"start\":71090},{\"end\":71099,\"start\":71098},{\"end\":71232,\"start\":71231},{\"end\":71239,\"start\":71238},{\"end\":71249,\"start\":71248},{\"end\":71259,\"start\":71258},{\"end\":71266,\"start\":71265},{\"end\":71430,\"start\":71429},{\"end\":71630,\"start\":71629},{\"end\":71880,\"start\":71879},{\"end\":71887,\"start\":71886},{\"end\":71895,\"start\":71894},{\"end\":71901,\"start\":71900},{\"end\":72052,\"start\":72051},{\"end\":72059,\"start\":72058},{\"end\":72067,\"start\":72066},{\"end\":72073,\"start\":72072},{\"end\":72214,\"start\":72213},{\"end\":72221,\"start\":72220},{\"end\":72229,\"start\":72228},{\"end\":72235,\"start\":72234},{\"end\":72241,\"start\":72240},{\"end\":72370,\"start\":72369},{\"end\":72372,\"start\":72371},{\"end\":72380,\"start\":72379},{\"end\":72392,\"start\":72391},{\"end\":72394,\"start\":72393},{\"end\":72407,\"start\":72406},{\"end\":72550,\"start\":72549},{\"end\":72679,\"start\":72678},{\"end\":72849,\"start\":72848},{\"end\":72851,\"start\":72850},{\"end\":72971,\"start\":72970},{\"end\":72984,\"start\":72983},{\"end\":72995,\"start\":72994},{\"end\":73005,\"start\":73004},{\"end\":73121,\"start\":73120},{\"end\":73219,\"start\":73218},{\"end\":73226,\"start\":73225},{\"end\":73232,\"start\":73231},{\"end\":73271,\"start\":73270},{\"end\":73367,\"start\":73366},{\"end\":73371,\"start\":73368},{\"end\":73382,\"start\":73381},{\"end\":73389,\"start\":73388},{\"end\":73398,\"start\":73397},{\"end\":73411,\"start\":73410},{\"end\":73538,\"start\":73537},{\"end\":73548,\"start\":73547},{\"end\":73556,\"start\":73555},{\"end\":73566,\"start\":73565},{\"end\":73568,\"start\":73567},{\"end\":73710,\"start\":73709},{\"end\":73712,\"start\":73711},{\"end\":73811,\"start\":73810},{\"end\":73822,\"start\":73821},{\"end\":73944,\"start\":73943},{\"end\":73946,\"start\":73945},{\"end\":73958,\"start\":73957},{\"end\":73971,\"start\":73970},{\"end\":74055,\"start\":74054},{\"end\":74057,\"start\":74056},{\"end\":74069,\"start\":74068},{\"end\":74080,\"start\":74079},{\"end\":74231,\"start\":74230},{\"end\":74337,\"start\":74336},{\"end\":74514,\"start\":74513},{\"end\":74516,\"start\":74515},{\"end\":74528,\"start\":74527},{\"end\":74534,\"start\":74533},{\"end\":74643,\"start\":74642},{\"end\":74656,\"start\":74655},{\"end\":74765,\"start\":74764},{\"end\":74773,\"start\":74772},{\"end\":74779,\"start\":74778},{\"end\":74786,\"start\":74785},{\"end\":74943,\"start\":74942},{\"end\":74949,\"start\":74948},{\"end\":74956,\"start\":74955},{\"end\":74964,\"start\":74963},{\"end\":74972,\"start\":74971},{\"end\":74979,\"start\":74978},{\"end\":75072,\"start\":75071},{\"end\":75079,\"start\":75078},{\"end\":75086,\"start\":75085},{\"end\":75093,\"start\":75092},{\"end\":75099,\"start\":75098},{\"end\":75288,\"start\":75287},{\"end\":75294,\"start\":75293},{\"end\":75302,\"start\":75301},{\"end\":75310,\"start\":75309},{\"end\":75318,\"start\":75317},{\"end\":75441,\"start\":75440},{\"end\":75449,\"start\":75448},{\"end\":75456,\"start\":75455},{\"end\":75463,\"start\":75462},{\"end\":75469,\"start\":75468},{\"end\":75476,\"start\":75475},{\"end\":75638,\"start\":75637},{\"end\":75779,\"start\":75778},{\"end\":75970,\"start\":75969},{\"end\":75978,\"start\":75977},{\"end\":75984,\"start\":75983},{\"end\":75991,\"start\":75990},{\"end\":75997,\"start\":75996},{\"end\":76051,\"start\":76050},{\"end\":76059,\"start\":76058},{\"end\":76067,\"start\":76066},{\"end\":76073,\"start\":76072},{\"end\":76081,\"start\":76080},{\"end\":76175,\"start\":76174},{\"end\":76183,\"start\":76182},{\"end\":76191,\"start\":76190},{\"end\":76199,\"start\":76198},{\"end\":76205,\"start\":76204},{\"end\":76212,\"start\":76211},{\"end\":76344,\"start\":76343},{\"end\":76352,\"start\":76351},{\"end\":76360,\"start\":76359},{\"end\":76368,\"start\":76367},{\"end\":76517,\"start\":76516},{\"end\":76525,\"start\":76524},{\"end\":76533,\"start\":76532},{\"end\":76541,\"start\":76540},{\"end\":76548,\"start\":76547},{\"end\":76692,\"start\":76691},{\"end\":76701,\"start\":76700},{\"end\":76703,\"start\":76702},{\"end\":76715,\"start\":76714},{\"end\":76721,\"start\":76720},{\"end\":76730,\"start\":76729},{\"end\":76813,\"start\":76812},{\"end\":77071,\"start\":77070},{\"end\":77079,\"start\":77078},{\"end\":77087,\"start\":77086},{\"end\":77095,\"start\":77094},{\"end\":77103,\"start\":77102},{\"end\":77233,\"start\":77232},{\"end\":77240,\"start\":77239},{\"end\":77246,\"start\":77245},{\"end\":77367,\"start\":77366},{\"end\":77374,\"start\":77373},{\"end\":77381,\"start\":77380},{\"end\":77387,\"start\":77386}]", "bib_author_last_name": "[{\"end\":65992,\"start\":65988},{\"end\":66001,\"start\":65996},{\"end\":66014,\"start\":66005},{\"end\":66025,\"start\":66018},{\"end\":66037,\"start\":66029},{\"end\":66047,\"start\":66043},{\"end\":66204,\"start\":66194},{\"end\":66215,\"start\":66208},{\"end\":66228,\"start\":66219},{\"end\":66237,\"start\":66232},{\"end\":66246,\"start\":66241},{\"end\":66393,\"start\":66384},{\"end\":66402,\"start\":66397},{\"end\":66414,\"start\":66406},{\"end\":66424,\"start\":66418},{\"end\":66434,\"start\":66428},{\"end\":66585,\"start\":66579},{\"end\":66596,\"start\":66589},{\"end\":66612,\"start\":66600},{\"end\":66622,\"start\":66616},{\"end\":66635,\"start\":66626},{\"end\":66786,\"start\":66779},{\"end\":66800,\"start\":66790},{\"end\":67040,\"start\":67037},{\"end\":67046,\"start\":67044},{\"end\":67054,\"start\":67050},{\"end\":67063,\"start\":67058},{\"end\":67207,\"start\":67204},{\"end\":67214,\"start\":67211},{\"end\":67220,\"start\":67218},{\"end\":67227,\"start\":67224},{\"end\":67233,\"start\":67231},{\"end\":67241,\"start\":67237},{\"end\":67417,\"start\":67413},{\"end\":67425,\"start\":67421},{\"end\":67434,\"start\":67429},{\"end\":67444,\"start\":67438},{\"end\":67455,\"start\":67448},{\"end\":67586,\"start\":67582},{\"end\":67594,\"start\":67590},{\"end\":67602,\"start\":67598},{\"end\":67613,\"start\":67606},{\"end\":67762,\"start\":67749},{\"end\":67775,\"start\":67766},{\"end\":67787,\"start\":67779},{\"end\":67800,\"start\":67791},{\"end\":67814,\"start\":67804},{\"end\":67918,\"start\":67914},{\"end\":67984,\"start\":67977},{\"end\":67993,\"start\":67988},{\"end\":68003,\"start\":67997},{\"end\":68060,\"start\":68057},{\"end\":68073,\"start\":68066},{\"end\":68083,\"start\":68077},{\"end\":68092,\"start\":68087},{\"end\":68104,\"start\":68098},{\"end\":68242,\"start\":68238},{\"end\":68255,\"start\":68248},{\"end\":68398,\"start\":68395},{\"end\":68405,\"start\":68402},{\"end\":68411,\"start\":68409},{\"end\":68417,\"start\":68415},{\"end\":68425,\"start\":68421},{\"end\":68433,\"start\":68429},{\"end\":68641,\"start\":68639},{\"end\":68648,\"start\":68645},{\"end\":68656,\"start\":68652},{\"end\":68665,\"start\":68660},{\"end\":68672,\"start\":68669},{\"end\":68860,\"start\":68858},{\"end\":68867,\"start\":68864},{\"end\":68875,\"start\":68871},{\"end\":68884,\"start\":68879},{\"end\":68891,\"start\":68888},{\"end\":69009,\"start\":69007},{\"end\":69017,\"start\":69013},{\"end\":69025,\"start\":69021},{\"end\":69032,\"start\":69029},{\"end\":69041,\"start\":69036},{\"end\":69048,\"start\":69045},{\"end\":69215,\"start\":69212},{\"end\":69224,\"start\":69219},{\"end\":69231,\"start\":69228},{\"end\":69239,\"start\":69235},{\"end\":69245,\"start\":69243},{\"end\":69253,\"start\":69249},{\"end\":69417,\"start\":69405},{\"end\":69427,\"start\":69423},{\"end\":69589,\"start\":69583},{\"end\":69602,\"start\":69593},{\"end\":69688,\"start\":69682},{\"end\":69698,\"start\":69692},{\"end\":69710,\"start\":69704},{\"end\":69720,\"start\":69714},{\"end\":69858,\"start\":69854},{\"end\":69869,\"start\":69862},{\"end\":70008,\"start\":70004},{\"end\":70129,\"start\":70115},{\"end\":70138,\"start\":70133},{\"end\":70148,\"start\":70142},{\"end\":70159,\"start\":70152},{\"end\":70170,\"start\":70163},{\"end\":70184,\"start\":70174},{\"end\":70344,\"start\":70338},{\"end\":70355,\"start\":70348},{\"end\":70366,\"start\":70359},{\"end\":70377,\"start\":70370},{\"end\":70386,\"start\":70381},{\"end\":70564,\"start\":70562},{\"end\":70571,\"start\":70568},{\"end\":70578,\"start\":70575},{\"end\":70585,\"start\":70582},{\"end\":70591,\"start\":70589},{\"end\":70599,\"start\":70595},{\"end\":70761,\"start\":70759},{\"end\":70769,\"start\":70765},{\"end\":70924,\"start\":70922},{\"end\":70930,\"start\":70928},{\"end\":70940,\"start\":70934},{\"end\":70948,\"start\":70944},{\"end\":70955,\"start\":70952},{\"end\":71074,\"start\":71071},{\"end\":71082,\"start\":71078},{\"end\":71088,\"start\":71086},{\"end\":71096,\"start\":71092},{\"end\":71104,\"start\":71100},{\"end\":71236,\"start\":71233},{\"end\":71246,\"start\":71240},{\"end\":71256,\"start\":71250},{\"end\":71263,\"start\":71260},{\"end\":71271,\"start\":71267},{\"end\":71434,\"start\":71431},{\"end\":71634,\"start\":71631},{\"end\":71884,\"start\":71881},{\"end\":71892,\"start\":71888},{\"end\":71898,\"start\":71896},{\"end\":71905,\"start\":71902},{\"end\":72056,\"start\":72053},{\"end\":72064,\"start\":72060},{\"end\":72070,\"start\":72068},{\"end\":72077,\"start\":72074},{\"end\":72218,\"start\":72215},{\"end\":72226,\"start\":72222},{\"end\":72232,\"start\":72230},{\"end\":72238,\"start\":72236},{\"end\":72245,\"start\":72242},{\"end\":72377,\"start\":72373},{\"end\":72389,\"start\":72381},{\"end\":72404,\"start\":72395},{\"end\":72413,\"start\":72408},{\"end\":72555,\"start\":72551},{\"end\":72858,\"start\":72852},{\"end\":72981,\"start\":72972},{\"end\":72992,\"start\":72985},{\"end\":73002,\"start\":72996},{\"end\":73014,\"start\":73006},{\"end\":73130,\"start\":73122},{\"end\":73223,\"start\":73220},{\"end\":73229,\"start\":73227},{\"end\":73238,\"start\":73233},{\"end\":73278,\"start\":73272},{\"end\":73285,\"start\":73280},{\"end\":73379,\"start\":73372},{\"end\":73386,\"start\":73383},{\"end\":73395,\"start\":73390},{\"end\":73408,\"start\":73399},{\"end\":73415,\"start\":73412},{\"end\":73545,\"start\":73539},{\"end\":73553,\"start\":73549},{\"end\":73563,\"start\":73557},{\"end\":73574,\"start\":73569},{\"end\":73717,\"start\":73713},{\"end\":73819,\"start\":73812},{\"end\":73830,\"start\":73823},{\"end\":73955,\"start\":73947},{\"end\":73968,\"start\":73959},{\"end\":73981,\"start\":73972},{\"end\":74066,\"start\":74058},{\"end\":74077,\"start\":74070},{\"end\":74087,\"start\":74081},{\"end\":74235,\"start\":74232},{\"end\":74347,\"start\":74338},{\"end\":74525,\"start\":74517},{\"end\":74531,\"start\":74529},{\"end\":74540,\"start\":74535},{\"end\":74653,\"start\":74644},{\"end\":74665,\"start\":74657},{\"end\":74770,\"start\":74766},{\"end\":74776,\"start\":74774},{\"end\":74783,\"start\":74780},{\"end\":74792,\"start\":74787},{\"end\":74946,\"start\":74944},{\"end\":74953,\"start\":74950},{\"end\":74961,\"start\":74957},{\"end\":74969,\"start\":74965},{\"end\":74976,\"start\":74973},{\"end\":74984,\"start\":74980},{\"end\":75076,\"start\":75073},{\"end\":75083,\"start\":75080},{\"end\":75090,\"start\":75087},{\"end\":75096,\"start\":75094},{\"end\":75104,\"start\":75100},{\"end\":75291,\"start\":75289},{\"end\":75299,\"start\":75295},{\"end\":75307,\"start\":75303},{\"end\":75315,\"start\":75311},{\"end\":75321,\"start\":75319},{\"end\":75446,\"start\":75442},{\"end\":75453,\"start\":75450},{\"end\":75460,\"start\":75457},{\"end\":75466,\"start\":75464},{\"end\":75473,\"start\":75470},{\"end\":75480,\"start\":75477},{\"end\":75643,\"start\":75639},{\"end\":75784,\"start\":75780},{\"end\":75975,\"start\":75971},{\"end\":75981,\"start\":75979},{\"end\":75988,\"start\":75985},{\"end\":75994,\"start\":75992},{\"end\":76002,\"start\":75998},{\"end\":76056,\"start\":76052},{\"end\":76064,\"start\":76060},{\"end\":76070,\"start\":76068},{\"end\":76078,\"start\":76074},{\"end\":76086,\"start\":76082},{\"end\":76180,\"start\":76176},{\"end\":76188,\"start\":76184},{\"end\":76196,\"start\":76192},{\"end\":76202,\"start\":76200},{\"end\":76209,\"start\":76206},{\"end\":76218,\"start\":76213},{\"end\":76349,\"start\":76345},{\"end\":76357,\"start\":76353},{\"end\":76365,\"start\":76361},{\"end\":76372,\"start\":76369},{\"end\":76522,\"start\":76518},{\"end\":76530,\"start\":76526},{\"end\":76538,\"start\":76534},{\"end\":76545,\"start\":76542},{\"end\":76554,\"start\":76549},{\"end\":76698,\"start\":76693},{\"end\":76712,\"start\":76704},{\"end\":76718,\"start\":76716},{\"end\":76727,\"start\":76722},{\"end\":76733,\"start\":76731},{\"end\":76819,\"start\":76814},{\"end\":77076,\"start\":77072},{\"end\":77084,\"start\":77080},{\"end\":77092,\"start\":77088},{\"end\":77100,\"start\":77096},{\"end\":77112,\"start\":77104},{\"end\":77237,\"start\":77234},{\"end\":77243,\"start\":77241},{\"end\":77251,\"start\":77247},{\"end\":77371,\"start\":77368},{\"end\":77378,\"start\":77375},{\"end\":77384,\"start\":77382},{\"end\":77390,\"start\":77388}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":7278297},\"end\":66105,\"start\":65943},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":208158314},\"end\":66294,\"start\":66107},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":207167677},\"end\":66516,\"start\":66296},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":14941970},\"end\":66691,\"start\":66518},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":214613452},\"end\":66935,\"start\":66693},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":248863403},\"end\":67143,\"start\":66937},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":196205749},\"end\":67307,\"start\":67145},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":49299019},\"end\":67499,\"start\":67309},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":15912887},\"end\":67687,\"start\":67501},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":221492079},\"end\":67843,\"start\":67689},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":220696795},\"end\":67940,\"start\":67845},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":2890542},\"end\":68022,\"start\":67942},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":210846466},\"end\":68184,\"start\":68024},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":13949986},\"end\":68289,\"start\":68186},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":248965059},\"end\":68574,\"start\":68291},{\"attributes\":{\"doi\":\"arXiv:2108.05211\",\"id\":\"b15\"},\"end\":68694,\"start\":68576},{\"attributes\":{\"id\":\"b16\"},\"end\":68788,\"start\":68696},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":235792568},\"end\":68911,\"start\":68790},{\"attributes\":{\"doi\":\"10.1109/TKDE.2021.3134806\",\"id\":\"b18\",\"matched_paper_id\":245215461},\"end\":69132,\"start\":68913},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":250340599},\"end\":69349,\"start\":69134},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":6601844},\"end\":69493,\"start\":69351},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":7806079},\"end\":69622,\"start\":69495},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":17184542},\"end\":69782,\"start\":69624},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":3144218},\"end\":69949,\"start\":69784},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":9426884},\"end\":70045,\"start\":69951},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":6814936},\"end\":70294,\"start\":70047},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":3470398},\"end\":70466,\"start\":70296},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":202770936},\"end\":70693,\"start\":70468},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":248367568},\"end\":70863,\"start\":70695},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":214743579},\"end\":70991,\"start\":70865},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":210992203},\"end\":71174,\"start\":70993},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":238744315},\"end\":71365,\"start\":71176},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":247218120},\"end\":71528,\"start\":71367},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":248780079},\"end\":71764,\"start\":71530},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":232404187},\"end\":71967,\"start\":71766},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":237420821},\"end\":72171,\"start\":71969},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":221150486},\"end\":72307,\"start\":72173},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":3515469},\"end\":72493,\"start\":72309},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":6875312},\"end\":72613,\"start\":72495},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":44063437},\"end\":72768,\"start\":72615},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":229204392},\"end\":72901,\"start\":72770},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":229287745},\"end\":73043,\"start\":72903},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":13151033},\"end\":73152,\"start\":73045},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":199466365},\"end\":73313,\"start\":73154},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":394243},\"end\":73481,\"start\":73315},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":17543696},\"end\":73628,\"start\":73483},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":44752256},\"end\":73749,\"start\":73630},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":7690873},\"end\":73873,\"start\":73751},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":1687246},\"end\":74016,\"start\":73875},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":207163173},\"end\":74149,\"start\":74018},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":212737039},\"end\":74271,\"start\":74151},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":248347836},\"end\":74441,\"start\":74273},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":69930495},\"end\":74594,\"start\":74443},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":14494942},\"end\":74688,\"start\":74596},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":53082628},\"end\":74872,\"start\":74690},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":198354047},\"end\":75028,\"start\":74874},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":245650407},\"end\":75218,\"start\":75030},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":210861209},\"end\":75375,\"start\":75220},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":202121966},\"end\":75574,\"start\":75377},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":240230575},\"end\":75705,\"start\":75576},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":246015355},\"end\":75902,\"start\":75707},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":234950071},\"end\":76018,\"start\":75904},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":245809125},\"end\":76102,\"start\":76020},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":231709357},\"end\":76290,\"start\":76104},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":216171897},\"end\":76434,\"start\":76292},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":262233042},\"end\":76587,\"start\":76436},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":247761951},\"end\":76750,\"start\":76589},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":225039947},\"end\":76903,\"start\":76752},{\"attributes\":{\"id\":\"b68\"},\"end\":76997,\"start\":76905},{\"attributes\":{\"id\":\"b69\",\"matched_paper_id\":226374030},\"end\":77155,\"start\":76999},{\"attributes\":{\"id\":\"b70\",\"matched_paper_id\":232075612},\"end\":77299,\"start\":77157},{\"attributes\":{\"id\":\"b71\",\"matched_paper_id\":229181350},\"end\":77444,\"start\":77301},{\"attributes\":{\"id\":\"b72\"},\"end\":78240,\"start\":77446}]", "bib_title": "[{\"end\":65984,\"start\":65943},{\"end\":66190,\"start\":66107},{\"end\":66378,\"start\":66296},{\"end\":66575,\"start\":66518},{\"end\":66775,\"start\":66693},{\"end\":67033,\"start\":66937},{\"end\":67200,\"start\":67145},{\"end\":67409,\"start\":67309},{\"end\":67578,\"start\":67501},{\"end\":67745,\"start\":67689},{\"end\":67910,\"start\":67845},{\"end\":67973,\"start\":67942},{\"end\":68053,\"start\":68024},{\"end\":68234,\"start\":68186},{\"end\":68391,\"start\":68291},{\"end\":68854,\"start\":68790},{\"end\":69003,\"start\":68913},{\"end\":69208,\"start\":69134},{\"end\":69401,\"start\":69351},{\"end\":69579,\"start\":69495},{\"end\":69678,\"start\":69624},{\"end\":69848,\"start\":69784},{\"end\":69998,\"start\":69951},{\"end\":70111,\"start\":70047},{\"end\":70334,\"start\":70296},{\"end\":70558,\"start\":70468},{\"end\":70755,\"start\":70695},{\"end\":70918,\"start\":70865},{\"end\":71067,\"start\":70993},{\"end\":71229,\"start\":71176},{\"end\":71427,\"start\":71367},{\"end\":71627,\"start\":71530},{\"end\":71877,\"start\":71766},{\"end\":72049,\"start\":71969},{\"end\":72211,\"start\":72173},{\"end\":72367,\"start\":72309},{\"end\":72547,\"start\":72495},{\"end\":72676,\"start\":72615},{\"end\":72846,\"start\":72770},{\"end\":72968,\"start\":72903},{\"end\":73118,\"start\":73045},{\"end\":73216,\"start\":73154},{\"end\":73364,\"start\":73315},{\"end\":73535,\"start\":73483},{\"end\":73707,\"start\":73630},{\"end\":73808,\"start\":73751},{\"end\":73941,\"start\":73875},{\"end\":74052,\"start\":74018},{\"end\":74228,\"start\":74151},{\"end\":74334,\"start\":74273},{\"end\":74511,\"start\":74443},{\"end\":74640,\"start\":74596},{\"end\":74762,\"start\":74690},{\"end\":74940,\"start\":74874},{\"end\":75069,\"start\":75030},{\"end\":75285,\"start\":75220},{\"end\":75438,\"start\":75377},{\"end\":75635,\"start\":75576},{\"end\":75776,\"start\":75707},{\"end\":75967,\"start\":75904},{\"end\":76048,\"start\":76020},{\"end\":76172,\"start\":76104},{\"end\":76341,\"start\":76292},{\"end\":76514,\"start\":76436},{\"end\":76689,\"start\":76589},{\"end\":76810,\"start\":76752},{\"end\":77068,\"start\":76999},{\"end\":77230,\"start\":77157},{\"end\":77364,\"start\":77301},{\"end\":77725,\"start\":77446}]", "bib_author": "[{\"end\":65994,\"start\":65986},{\"end\":66003,\"start\":65994},{\"end\":66016,\"start\":66003},{\"end\":66027,\"start\":66016},{\"end\":66039,\"start\":66027},{\"end\":66049,\"start\":66039},{\"end\":66206,\"start\":66192},{\"end\":66217,\"start\":66206},{\"end\":66230,\"start\":66217},{\"end\":66239,\"start\":66230},{\"end\":66248,\"start\":66239},{\"end\":66395,\"start\":66380},{\"end\":66404,\"start\":66395},{\"end\":66416,\"start\":66404},{\"end\":66426,\"start\":66416},{\"end\":66436,\"start\":66426},{\"end\":66587,\"start\":66577},{\"end\":66598,\"start\":66587},{\"end\":66614,\"start\":66598},{\"end\":66624,\"start\":66614},{\"end\":66637,\"start\":66624},{\"end\":66788,\"start\":66777},{\"end\":66802,\"start\":66788},{\"end\":67042,\"start\":67035},{\"end\":67048,\"start\":67042},{\"end\":67056,\"start\":67048},{\"end\":67065,\"start\":67056},{\"end\":67209,\"start\":67202},{\"end\":67216,\"start\":67209},{\"end\":67222,\"start\":67216},{\"end\":67229,\"start\":67222},{\"end\":67235,\"start\":67229},{\"end\":67243,\"start\":67235},{\"end\":67419,\"start\":67411},{\"end\":67427,\"start\":67419},{\"end\":67436,\"start\":67427},{\"end\":67446,\"start\":67436},{\"end\":67457,\"start\":67446},{\"end\":67588,\"start\":67580},{\"end\":67596,\"start\":67588},{\"end\":67604,\"start\":67596},{\"end\":67615,\"start\":67604},{\"end\":67764,\"start\":67747},{\"end\":67777,\"start\":67764},{\"end\":67789,\"start\":67777},{\"end\":67802,\"start\":67789},{\"end\":67816,\"start\":67802},{\"end\":67920,\"start\":67912},{\"end\":67986,\"start\":67975},{\"end\":67995,\"start\":67986},{\"end\":68005,\"start\":67995},{\"end\":68062,\"start\":68055},{\"end\":68075,\"start\":68062},{\"end\":68085,\"start\":68075},{\"end\":68094,\"start\":68085},{\"end\":68106,\"start\":68094},{\"end\":68244,\"start\":68236},{\"end\":68257,\"start\":68244},{\"end\":68400,\"start\":68393},{\"end\":68407,\"start\":68400},{\"end\":68413,\"start\":68407},{\"end\":68419,\"start\":68413},{\"end\":68427,\"start\":68419},{\"end\":68435,\"start\":68427},{\"end\":68643,\"start\":68637},{\"end\":68650,\"start\":68643},{\"end\":68658,\"start\":68650},{\"end\":68667,\"start\":68658},{\"end\":68674,\"start\":68667},{\"end\":68862,\"start\":68856},{\"end\":68869,\"start\":68862},{\"end\":68877,\"start\":68869},{\"end\":68886,\"start\":68877},{\"end\":68893,\"start\":68886},{\"end\":69011,\"start\":69005},{\"end\":69019,\"start\":69011},{\"end\":69027,\"start\":69019},{\"end\":69034,\"start\":69027},{\"end\":69043,\"start\":69034},{\"end\":69050,\"start\":69043},{\"end\":69217,\"start\":69210},{\"end\":69226,\"start\":69217},{\"end\":69233,\"start\":69226},{\"end\":69241,\"start\":69233},{\"end\":69247,\"start\":69241},{\"end\":69255,\"start\":69247},{\"end\":69419,\"start\":69403},{\"end\":69429,\"start\":69419},{\"end\":69591,\"start\":69581},{\"end\":69604,\"start\":69591},{\"end\":69690,\"start\":69680},{\"end\":69700,\"start\":69690},{\"end\":69712,\"start\":69700},{\"end\":69722,\"start\":69712},{\"end\":69860,\"start\":69850},{\"end\":69871,\"start\":69860},{\"end\":70010,\"start\":70000},{\"end\":70131,\"start\":70113},{\"end\":70140,\"start\":70131},{\"end\":70150,\"start\":70140},{\"end\":70161,\"start\":70150},{\"end\":70172,\"start\":70161},{\"end\":70186,\"start\":70172},{\"end\":70346,\"start\":70336},{\"end\":70357,\"start\":70346},{\"end\":70368,\"start\":70357},{\"end\":70379,\"start\":70368},{\"end\":70388,\"start\":70379},{\"end\":70566,\"start\":70560},{\"end\":70573,\"start\":70566},{\"end\":70580,\"start\":70573},{\"end\":70587,\"start\":70580},{\"end\":70593,\"start\":70587},{\"end\":70601,\"start\":70593},{\"end\":70763,\"start\":70757},{\"end\":70771,\"start\":70763},{\"end\":70926,\"start\":70920},{\"end\":70932,\"start\":70926},{\"end\":70942,\"start\":70932},{\"end\":70950,\"start\":70942},{\"end\":70957,\"start\":70950},{\"end\":71076,\"start\":71069},{\"end\":71084,\"start\":71076},{\"end\":71090,\"start\":71084},{\"end\":71098,\"start\":71090},{\"end\":71106,\"start\":71098},{\"end\":71238,\"start\":71231},{\"end\":71248,\"start\":71238},{\"end\":71258,\"start\":71248},{\"end\":71265,\"start\":71258},{\"end\":71273,\"start\":71265},{\"end\":71436,\"start\":71429},{\"end\":71636,\"start\":71629},{\"end\":71886,\"start\":71879},{\"end\":71894,\"start\":71886},{\"end\":71900,\"start\":71894},{\"end\":71907,\"start\":71900},{\"end\":72058,\"start\":72051},{\"end\":72066,\"start\":72058},{\"end\":72072,\"start\":72066},{\"end\":72079,\"start\":72072},{\"end\":72220,\"start\":72213},{\"end\":72228,\"start\":72220},{\"end\":72234,\"start\":72228},{\"end\":72240,\"start\":72234},{\"end\":72247,\"start\":72240},{\"end\":72379,\"start\":72369},{\"end\":72391,\"start\":72379},{\"end\":72406,\"start\":72391},{\"end\":72415,\"start\":72406},{\"end\":72557,\"start\":72549},{\"end\":72682,\"start\":72678},{\"end\":72860,\"start\":72848},{\"end\":72983,\"start\":72970},{\"end\":72994,\"start\":72983},{\"end\":73004,\"start\":72994},{\"end\":73016,\"start\":73004},{\"end\":73132,\"start\":73120},{\"end\":73225,\"start\":73218},{\"end\":73231,\"start\":73225},{\"end\":73240,\"start\":73231},{\"end\":73381,\"start\":73366},{\"end\":73388,\"start\":73381},{\"end\":73397,\"start\":73388},{\"end\":73410,\"start\":73397},{\"end\":73417,\"start\":73410},{\"end\":73547,\"start\":73537},{\"end\":73555,\"start\":73547},{\"end\":73565,\"start\":73555},{\"end\":73576,\"start\":73565},{\"end\":73719,\"start\":73709},{\"end\":73821,\"start\":73810},{\"end\":73832,\"start\":73821},{\"end\":73957,\"start\":73943},{\"end\":73970,\"start\":73957},{\"end\":73983,\"start\":73970},{\"end\":74068,\"start\":74054},{\"end\":74079,\"start\":74068},{\"end\":74089,\"start\":74079},{\"end\":74237,\"start\":74230},{\"end\":74349,\"start\":74336},{\"end\":74527,\"start\":74513},{\"end\":74533,\"start\":74527},{\"end\":74542,\"start\":74533},{\"end\":74655,\"start\":74642},{\"end\":74667,\"start\":74655},{\"end\":74772,\"start\":74764},{\"end\":74778,\"start\":74772},{\"end\":74785,\"start\":74778},{\"end\":74794,\"start\":74785},{\"end\":74948,\"start\":74942},{\"end\":74955,\"start\":74948},{\"end\":74963,\"start\":74955},{\"end\":74971,\"start\":74963},{\"end\":74978,\"start\":74971},{\"end\":74986,\"start\":74978},{\"end\":75078,\"start\":75071},{\"end\":75085,\"start\":75078},{\"end\":75092,\"start\":75085},{\"end\":75098,\"start\":75092},{\"end\":75106,\"start\":75098},{\"end\":75293,\"start\":75287},{\"end\":75301,\"start\":75293},{\"end\":75309,\"start\":75301},{\"end\":75317,\"start\":75309},{\"end\":75323,\"start\":75317},{\"end\":75448,\"start\":75440},{\"end\":75455,\"start\":75448},{\"end\":75462,\"start\":75455},{\"end\":75468,\"start\":75462},{\"end\":75475,\"start\":75468},{\"end\":75482,\"start\":75475},{\"end\":75645,\"start\":75637},{\"end\":75786,\"start\":75778},{\"end\":75977,\"start\":75969},{\"end\":75983,\"start\":75977},{\"end\":75990,\"start\":75983},{\"end\":75996,\"start\":75990},{\"end\":76004,\"start\":75996},{\"end\":76058,\"start\":76050},{\"end\":76066,\"start\":76058},{\"end\":76072,\"start\":76066},{\"end\":76080,\"start\":76072},{\"end\":76088,\"start\":76080},{\"end\":76182,\"start\":76174},{\"end\":76190,\"start\":76182},{\"end\":76198,\"start\":76190},{\"end\":76204,\"start\":76198},{\"end\":76211,\"start\":76204},{\"end\":76220,\"start\":76211},{\"end\":76351,\"start\":76343},{\"end\":76359,\"start\":76351},{\"end\":76367,\"start\":76359},{\"end\":76374,\"start\":76367},{\"end\":76524,\"start\":76516},{\"end\":76532,\"start\":76524},{\"end\":76540,\"start\":76532},{\"end\":76547,\"start\":76540},{\"end\":76556,\"start\":76547},{\"end\":76700,\"start\":76691},{\"end\":76714,\"start\":76700},{\"end\":76720,\"start\":76714},{\"end\":76729,\"start\":76720},{\"end\":76735,\"start\":76729},{\"end\":76821,\"start\":76812},{\"end\":77078,\"start\":77070},{\"end\":77086,\"start\":77078},{\"end\":77094,\"start\":77086},{\"end\":77102,\"start\":77094},{\"end\":77114,\"start\":77102},{\"end\":77239,\"start\":77232},{\"end\":77245,\"start\":77239},{\"end\":77253,\"start\":77245},{\"end\":77373,\"start\":77366},{\"end\":77380,\"start\":77373},{\"end\":77386,\"start\":77380},{\"end\":77392,\"start\":77386}]", "bib_venue": "[{\"end\":66077,\"start\":66049},{\"end\":66271,\"start\":66248},{\"end\":66476,\"start\":66436},{\"end\":66664,\"start\":66637},{\"end\":66850,\"start\":66802},{\"end\":67091,\"start\":67065},{\"end\":67275,\"start\":67243},{\"end\":67478,\"start\":67457},{\"end\":67651,\"start\":67615},{\"end\":67832,\"start\":67816},{\"end\":67931,\"start\":67920},{\"end\":68016,\"start\":68005},{\"end\":68145,\"start\":68106},{\"end\":68280,\"start\":68257},{\"end\":68489,\"start\":68435},{\"end\":68635,\"start\":68576},{\"end\":68786,\"start\":68696},{\"end\":68902,\"start\":68893},{\"end\":69117,\"start\":69075},{\"end\":69283,\"start\":69255},{\"end\":69457,\"start\":69429},{\"end\":69613,\"start\":69604},{\"end\":69752,\"start\":69722},{\"end\":69910,\"start\":69871},{\"end\":70035,\"start\":70010},{\"end\":70240,\"start\":70186},{\"end\":70427,\"start\":70388},{\"end\":70649,\"start\":70601},{\"end\":70805,\"start\":70771},{\"end\":70973,\"start\":70957},{\"end\":71140,\"start\":71106},{\"end\":71321,\"start\":71273},{\"end\":71470,\"start\":71436},{\"end\":71687,\"start\":71636},{\"end\":71937,\"start\":71907},{\"end\":72127,\"start\":72079},{\"end\":72277,\"start\":72247},{\"end\":72454,\"start\":72415},{\"end\":72585,\"start\":72557},{\"end\":72711,\"start\":72682},{\"end\":72887,\"start\":72860},{\"end\":73032,\"start\":73016},{\"end\":73144,\"start\":73132},{\"end\":73268,\"start\":73240},{\"end\":73449,\"start\":73417},{\"end\":73602,\"start\":73576},{\"end\":73738,\"start\":73719},{\"end\":73859,\"start\":73832},{\"end\":73999,\"start\":73983},{\"end\":74119,\"start\":74089},{\"end\":74253,\"start\":74237},{\"end\":74386,\"start\":74349},{\"end\":74568,\"start\":74542},{\"end\":74678,\"start\":74667},{\"end\":74833,\"start\":74794},{\"end\":75007,\"start\":74986},{\"end\":75149,\"start\":75106},{\"end\":75349,\"start\":75323},{\"end\":75530,\"start\":75482},{\"end\":75675,\"start\":75645},{\"end\":75830,\"start\":75786},{\"end\":76011,\"start\":76004},{\"end\":76094,\"start\":76088},{\"end\":76255,\"start\":76220},{\"end\":76404,\"start\":76374},{\"end\":76576,\"start\":76556},{\"end\":76741,\"start\":76735},{\"end\":76862,\"start\":76821},{\"end\":76995,\"start\":76905},{\"end\":77141,\"start\":77114},{\"end\":77276,\"start\":77253},{\"end\":77418,\"start\":77392},{\"end\":77800,\"start\":77727},{\"end\":66101,\"start\":66079},{\"end\":66290,\"start\":66273},{\"end\":66512,\"start\":66478},{\"end\":66687,\"start\":66666},{\"end\":66913,\"start\":66852},{\"end\":67128,\"start\":67093},{\"end\":67303,\"start\":67277},{\"end\":67495,\"start\":67480},{\"end\":67683,\"start\":67653},{\"end\":68180,\"start\":68147},{\"end\":68558,\"start\":68491},{\"end\":68907,\"start\":68904},{\"end\":69331,\"start\":69285},{\"end\":69481,\"start\":69459},{\"end\":69778,\"start\":69754},{\"end\":69945,\"start\":69912},{\"end\":70290,\"start\":70242},{\"end\":70462,\"start\":70429},{\"end\":70689,\"start\":70651},{\"end\":70847,\"start\":70807},{\"end\":70985,\"start\":70975},{\"end\":71170,\"start\":71142},{\"end\":71361,\"start\":71323},{\"end\":71512,\"start\":71472},{\"end\":71749,\"start\":71689},{\"end\":71963,\"start\":71939},{\"end\":72167,\"start\":72129},{\"end\":72303,\"start\":72279},{\"end\":72489,\"start\":72456},{\"end\":72609,\"start\":72587},{\"end\":72752,\"start\":72713},{\"end\":73309,\"start\":73287},{\"end\":73477,\"start\":73451},{\"end\":73624,\"start\":73604},{\"end\":74011,\"start\":74001},{\"end\":74145,\"start\":74121},{\"end\":74265,\"start\":74255},{\"end\":74425,\"start\":74388},{\"end\":74590,\"start\":74570},{\"end\":74868,\"start\":74835},{\"end\":75024,\"start\":75009},{\"end\":75202,\"start\":75151},{\"end\":75371,\"start\":75351},{\"end\":75570,\"start\":75532},{\"end\":75701,\"start\":75677},{\"end\":75886,\"start\":75832},{\"end\":76286,\"start\":76257},{\"end\":76430,\"start\":76406},{\"end\":76899,\"start\":76864},{\"end\":77295,\"start\":77278},{\"end\":77440,\"start\":77420},{\"end\":77818,\"start\":77802}]"}}}, "year": 2023, "month": 12, "day": 17}