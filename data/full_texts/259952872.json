{"id": 259952872, "updated": "2023-11-18 14:26:13.926", "metadata": {"title": "Replicability Study: Corpora For Understanding Simulink Models & Projects", "authors": "[{\"first\":\"Sohil\",\"last\":\"Shrestha\",\"middle\":[\"Lal\"]},{\"first\":\"Shafiul\",\"last\":\"Chowdhury\",\"middle\":[\"Azam\"]},{\"first\":\"Christoph\",\"last\":\"Csallner\",\"middle\":[]}]", "venue": "2023 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)", "journal": "2023 ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM)", "publication_date": {"year": 2023, "month": 10, "day": 26}, "abstract": "Background: Empirical studies on widely used model-based development tools such as MATLAB/Simulink are limited despite the tools' importance in various industries. Aims: The aim of this paper is to investigate the reproducibility of previous empirical studies that used Simulink model corpora and to evaluate the generalizability of their results to a newer and larger corpus, including a comparison with proprietary models. Method: The study reviews methodologies and data sources employed in prior Simulink model studies and replicates the previous analysis using SLNET. In addition, we propose a heuristic for determining code-generating Simulink models and assess the open-source models' similarity to proprietary models. Results: Our analysis of SLNET confirms and contradicts earlier findings and highlights its potential as a valuable resource for model-based development research. We found that open-source Simulink models follow good modeling practices and contain models comparable in size and properties to proprietary models. We also collected and distribute 208 git repositories with over 9k commits, facilitating studies on model evolution. Conclusions: The replication study offers actionable insights and lessons learned from the reproduction process, including valuable information on the generalizability of research findings based on earlier open-source corpora to the newer and larger SLNET corpus. The study sheds light on noteworthy attributes of SLNET, which is self-contained and redistributable.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/esem/ShresthaCC23", "doi": "10.1109/esem56168.2023.10304867"}}, "content": {"source": {"pdf_hash": "d7c1c590fd809369811e967304e58a84b92b3180", "pdf_src": "IEEE", "pdf_uri": "[\"https://export.arxiv.org/pdf/2308.01978v2.pdf\"]", "oa_url_match": false, "oa_info": {"license": null, "open_access_url": null, "status": "CLOSED"}}, "grobid": {"id": "d2f5e3d8f8b7e9f5c3a2e6503fb77f9133d39e02", "type": "plain-text", "url": "s3://ai2-s2-science-parse-plus-prod/parse-results/s2orc_worker/d7c1c590fd809369811e967304e58a84b92b3180.txt", "contents": "\nReplicability Study: Corpora For Understanding Simulink Models & Projects\n\n\nSohil Lal Shrestha sohil.shrestha@mavs.uta.edu \nComputer Science & Eng. Dept\nUniversity of Texas at Arlington Arlington\n76019TXUSA\n\nShafiul Azam Chowdhury shafiulazam.chowdhury@mavs.uta.edu \nComputer Science & Eng. Dept\nUniversity of Texas at Arlington Arlington\n76019TXUSA\n\nChristoph Csallner csallner@uta.edu \nComputer Science & Eng. Dept\nUniversity of Texas at Arlington Arlington\n76019TXUSA\n\nReplicability Study: Corpora For Understanding Simulink Models & Projects\n4A1B5549F7A143FD0DF13DA8861C48CD10.1109/ESEM56168.2023.10304867reproducibilityreplicationSimulinkopen sciencecode generationSimulink model\nBackground: Empirical studies on widely used model-based development tools such as MATLAB/Simulink are limited despite the tools' importance in various industries.Aims: The aim of this paper is to investigate the reproducibility of previous empirical studies that used Simulink model corpora and to evaluate the generalizability of their results to a newer and larger corpus, including a comparison with proprietary models.Method: The study reviews methodologies and data sources employed in prior Simulink model studies and replicates the previous analysis using SLNET.In addition, we propose a heuristic for determining code-generating Simulink models and assess the open-source models' similarity to proprietary models.Results: Our analysis of SLNET confirms and contradicts earlier findings and highlights its potential as a valuable resource for model-based development research.We found that opensource Simulink models follow good modeling practices and contain models comparable in size and properties to proprietary models.We also collected and distribute 208 git repositories with over 9k commits, facilitating studies on model evolution.Conclusions: The replication study offers actionable insights and lessons learned from the reproduction process, including valuable information on the generalizability of research findings based on earlier open-source corpora to the newer and larger SLNET corpus.The study sheds light on noteworthy attributes of SLNET, which is self-contained and redistributable.\n\nI. INTRODUCTION\n\nThere are only a few empirical studies of open-source MATLAB/Simulink artifacts, maybe due to a widespread perception that open-source Simulink artifacts are typically small, do not represent closed-source development, and are often hard to acquire [14], [15], [27], [61], [70].Most empirical Simulink studies to date have instead relied on academicindustry collaborations-to get access to large closed-source Simulink artifacts [6].Most empirical results on Simulink development and artifacts are thus based on case-studies of closed-source artifacts that (even when providing detailed experimental design descriptions and measurement tools) are hard to reproduce or replicate [10].\n\nIt is well-known how important replication is for scientific progress.Successful experiments need to be cross-validated under different conditions before they can be considered a part of science and interpreted with confidence [12].Working towards large open-source Simulink corpora and empirical results that are easier to reproduce and replicate are thus important goals, given how widely Simulink is used in industry in safety-critical domains such as automotive and healthcare.\n\nTowards these goals, recent initial work created via manual mining a first large corpus (which we call SC [17]) of opensource Simulink models and investigated modeling practices on a re-collected version of that corpus (SC 20 [7]).The work found that some of these manually-collected Simulink models are suitable for empirical research, based on model metrics analysis and a qualitative assessments by a domain expert [7].Follow-up work automated Simulink model collection, yielding the larger SLNET corpus that also allows redistribution [88].However we are not aware of earlier work that either characterizes this larger SLNET corpus or uses it to replicate earlier empirical studies of Simulink models.\n\nWe thus first reproduce studies that are based on the initial SC large-scale Simulink model corpus, identifying inconsistencies in the original studies.We then replicate results of the earlier studies using the newer and larger SLNET corpus.By re-running the original study designs, we found inconsistencies between the experimental results and the ones reported in the paper, attributable to oversight and incomplete documentation.Our replication study using SLNET confirmed several previous findings, such as the low utilization of model references and algebraic loops.In contrast to prior work, we only found a weak correlation between cyclomatic complexity and other model metrics.To summarize, this paper makes the following major contributions.\n\n\u2022 Through empirical data, we identify inconsistencies in earlier empirical Simulink studies.\u2022 We characterize the SLNET corpus in relation to earlier corpora of open-source Simulink models.\u2022 On SLNET we replicate previous studies, which both confirms and contradicts earlier findings.\u2022 We collect and distribute 208 SLNET git repositories, containing 9k+ commits including 5k model versions, as artifacts that can be analyzed by the community [85].\u2022 Our analysis tool [82] as well as reproduction and replication data [85] are open-sourced and available.\n\nII. BACKGROUND Using Simulink's graphical modeling environment, engineers can design a complex system model as a hierarchical block diagram [50].Each block represents a dynamic system that may take input through its input ports and produce output via its output ports, either continuously or at specific points in time.A block can be from a Simulink built-in library [53], from a separate toolbox library, or a custom S-function block defined via \"native\" code (e.g., in C).Blocks pass data to each other via directed connections (aka lines).Simulink is a commercial de-facto standard tool-chain in several domains such as aerospace, automotive, healthcare, and industrial automation.Simulink offers several hierarchy mechanisms, ranging from a subsystem block grouping that can only be used in one context to a model reference (which essentially calls an independent model via its own well-defined interface and can thus be widely reused) [39].These constructs allow further recursive decomposition, enabling deeply nested models.Figure 1(a) shows a tiny example hierarchical model that contains a model reference to the Figure 1(b) referenced model.Alternatively, the user can use library-linked blocks [49], that are references to blocks defined in a custom library [41], that enables reusability and centralized maintenance of block functionality across multiple models.\n\nA compiled model can be simulated, where Simulink successively computes the output of each block over a specified time range using pre-configured numerical fixed-step and variable-step solvers.In an algebraic loop, a block's output can reach its input port in the same simulation step (i.e., without passing through a delay block), which complicates simulation.Besides normal mode, Simulink offers various accelerator modes to speed up simulation [48].With additional toolboxes [37], from the model the user can then generate and deploy low-level code to the target hardware.\n\n\nA. Simulink Modeling Guidelines and Best Practices\n\nThe MathWorks Advisory Board (MAB) is a group of commercial MathWorks customers that (starting with Daimler, Ford, and Toyota in 2001) publishes guidelines and best practices on developing and maintaining Simulink models.Besides standardization, these guidelines address key software engineering challenges such as creating models that are welldefined, readable, easy to integrate, and reusable.\n\nIn their current 2020 version [35] these guidelines include to (1) avoid algebraic loops as they are hard to simulate and cannot be compiled to target hardware, (2) use S-functions to implement custom algorithms, (3) use subsystems to modularize the model by functional decomposition, and (4) use model references to create hierarchies of reusable components.\n\n\nB. Cyclomatic Complexity & Size Metrics in Simulink\n\nMcCabe introduced cyclomatic complexity and argued it corresponds to our intuitive notion of complexity.McCabe also reported on a set of 24 Fortran subroutines with \"high\" (>10) cyclomatic complexity.The subroutines' ranking by cyclomatic complexity closely correlated with their ranking by reliability [64].With some 9k citations this article has been highly influential in academic software engineering.Some five decades later the question of measuring program complexity and program understanding remains an active research area with several recent advances [18], [21], [31].Researchers keep returning to cyclomatic complexity with recent tweaks [5], [13] and more fine-grained measures [2].An example controversy was if cyclomatic complexity is just a proxy for program size (e.g., lines of code in a Java-or C-like language) [26], with recent empirical data showing cyclomatic complexity to remain independently valuable [30].\n\nFor Simulink, recent work has shown the value of size metrics (i.e., block count), e.g, metric outliers yield interesting findings [76].Such results are also eventually reflected in industry practices.For example, while the MAB industry board's 2001 Simulink guidelines did not yet mention size metrics, the current 2020 version contains a recommendation (\u226460 LOC / function) [35].However neither MAB guideline version mentions McCabe or cyclomatic complexity yet.\n\nFor calculating a metric, Simulink basically first flattens a given model into a single hierarchy level, essentially \"inlining\" both subsystems and referenced models.So if two blocks in a model refer to the same referenced model, for metric calculations the referenced model will appear in the flattened model twice.Simulink has an option to also similarly (recursively) inline the contents of (any) library blocks and prior work is split on activating this option when reporting metric results.\n\nWhile a block diagram does not represent a procedural language's control-flow graph, Simulink still has several block types that provide control-like functionality.For example, the value a multiport-switch block receives on its first input port selects which of the remaining input ports the block will forward to its output port [51] (which corresponds to a procedural switch or nested if construct).Simulink thus first defines the cyclomatic complexity of each built-in block as the number of the block's conceptual branching decisions (i.e., mostly zero or one) and then sums up the cyclomatic complexity of all blocks in a given (flattened) model [42].\n\n\nC. Scope of Empirical Studies of Simulink Models\n\nThe limited availability of repositories with large numbers of freely accessible Simulink models has restricted empirical studies that seek to understand Simulink model characteristics and metrics [4], [23], [67].For example, Dajsuren et al. [19] investigated model metrics including cohesion and coupling using small subset of Simulink models.\n\nOpen-source Simulink models are generally considered insufficient to meet the high industry standards required for meaningful results [10].To address this issue, Altinger et al. [3] published metrics from three proprietary Simulink models for researchers to analyze.However, the dataset is no longer available.Schroeder et al. studied 65 proprietary automotive Simulink models and found via interviews that engineers preferred simple size metrics such as block count over structural metrics to capture model complexity [75].\n\n\nD. SC: First Corpus of Open-Source Simulink Models\n\nVia a two-stage process Chowdhury et al. created what we call SC, the first corpus of freely available Simulink models [14], [17].First [14], the research team collected 391 models, i.e., 41 of the MathWorks's tutorial models the team considered to not be \"toy\" examples, the open-source models from MATLAB Central that were most popular (by ratings or downloads), GitHub keyword search results, and 28 models from academic papers, colleagues, and Google searches.Second, the team added the Simulink models of 12 SourceForge repositories and of the 96 most-downloaded MATLAB Central projects, yielding a study of a total of 1,071 Simulink models [17].\n\nSC classifies its 1,071 models as tutorial (41), simple (442), advanced (452), and other (136).The distinction between simple and advanced is determined heuristically: any GitHub project with forks or stars and any MATLAB Central project that are not academic assignment are labeled \"Advanced\".Models shipped with MATLAB/Simulink are labeled \"Tutorial\", while models from other sources are labeled 'Other'.\n\nOverall, SC collects Simulink models of projects that (at least partially) are selected and labeled manually.While initially \"only\" providing project URLs [14], the full corpus [17] includes Simulink model files, metadata, and collection tools and is stored on a Google Drive directory linked from the project's GitHub homepage.\n\nAnalyzing the corpus with Simulink R2017a, the work found good modeling practices such as model referencing were not widely used.The work found MathWorks's cyclomatic complexity to be at most moderately correlated1 with various other model metrics.The correlation was strongest (0.55) for the model's maximum hierarchy depth, followed by the model's number of contained subsystems (NCS).This contrasted with an earlier study by Olszewska et al. [67], which showed strong (0.73) correlation between MathWorks's cyclomatic complexity and the model's number of contained subsystem (NCS).\n\n\nE. SC 20 : SC Projects Recollected in 2020\n\nIn August 2020-some three years after SC was published [17], Boll et al. (a research team acting independently of Chowdhury et al.) collected what we call SC 20 [7], i.e., the latest Simulink model versions of SC's Simulink projects, yielding 1,734 Simulink models.Simulink models, metadata, and the team's collection tools are preserved on Figshare [8].\n\nThe work evaluated SC 20 's suitability for empirical modelbased research, analyzing each SC 20 project's domain, origin, and model metrics.The work also proposed a heuristic for identifying models configured for code generation.The paper's analysis found that the majority of SC 20 models were inadequate for most empirical research, but identified a few mature models.The work also noted that some SC 20 GitHub projects' characteristics (e.g., a high number of commits and collaborators) suggest potential for evolution research.\n\n\nF. SLNET: Largest Known Simulink Corpus\n\nIn February 2020 Shrestha et al. collected the SLNET corpus [88], which addresses key issues of SC and SC 20 (i.e., manual project selection and unclear project licenses), yielding the first redistributable corpus of open-source Simulink models.Specifically, SLNET collects Simulink projects from the GitHub API and from MATLAB Central's RSS feed and does not include projects without Simulink model files, known model generators and their synthetic models, projects that do not have an appropriate license, potentially duplicate projects (via bijection of the projects' models' metrics), and projects whose models all have zero blocks, yielding 9,117 Simulink models.Simulink models, metadata, and the team's collection tools are preserved on Zenodo [80], [81], [87].\n\nCombining models from the two largest collections of opensource Simulink models (GitHub and MATLAB Central), SLNET is 8 times larger than the largest previous corpus of Simulink models (SC).In March 2023 we confirmed that other hosting sites (still) contain significantly fewer public Simulink repositories (i.e., we could only find 52 Simulink projects on SourceForge and one on GitLab).\n\n\nIII. RESEARCH DESIGN\n\nOur goal is to gain a deeper understanding of the reproducibility and replicability in model-based development research, particularly regarding Simulink models, as emphasized in a recent literature review [10].The literature review identified a single study that conducted a large-scale empirical investigation, emphasizing open science, i.e., SC [17].Subsequently, members of the literature review team undertook their own investigation, by collecting the latest version of the models of the same corpus, i.e., SC 20 [7].\n\nThe recently released SLNET corpus [88] has rectified limitations of the two existing corpora, allowing us to replicate the results of earlier empirical studies.Thus, we perform a sample study utilizing the existing corpora and employ a statistical learning strategy to generalize the findings of prior studies on a smaller dataset to a larger dataset [90], [91].As such, our replication efforts serve a confirmatory purpose.\n\nTo structure our study effectively, we have formulated two primary research questions that center around reproducibility and replication.The following sections point out where we had to deviate from this model (e.g., when an exact earlier corpus is no longer available for exact reproduction).SLNET GitHub projects' Git histories Apr '23 [85] Table I summarizes the corpora of this study.Boll et al. [7] highlighted that the SC study results had several inconsistencies and Shrestha et al. [88] claimed earlier corpora suffer from unintended human errors and bias.Since both claims lacked sufficient empirical evidence, we attempted to reproduce these studies.\n\n\nIV. CORPORA TO REPRODUCE & REPLICATE RESULTS\n\n\nA. SC R Corpus to Reproduce SC Results\n\nTo reproduce the SC study results, we downloaded all models and metadata from SC's Google Drive [77], yielding 1,347 models.This did not include all of the original study's 1,071 models, as the SC distribution excludes 169 models for their unclear licenses.We use SC's source metadata (for 862 of 1,071 models SC lists project URL and version, models studied within the project, and MATLAB version requirements) and retrieve 142 of 169 of these unclearly-licensed models from GitHub (at the same version as in SC).\n\nFor 40 of 1,071 models the download included multiple model versions but the metadata did not specify which version was used in the SC study.Since SC only provides aggregated model metrics (instead of per-model measurements), we could not disambiguate same-name models via comparing the metrics.After receiving confirmation from the SC team, we add all 113 potential model name matches from the SC download, yielding 1,117 models in SC R (but still missing 27 of 1,071 now inaccessible GitHub models).\n\nDue to the above model name ambiguity (or human error in SC creation), 5 of 1,071 models are now categorized as both Simple and Advanced.Since the SC study reported results per model category, we focused our reproduction on the one category not affected by the above missing/duplicate model issues, i.e., the 41 models labeled \"tutorial\".Since these 41 models ship with Simulink and we have access to earlier Simulink releases, it was straight-forward to reproduce the SC study results on the same version of the same models on the same Simulink version as the SC study.\n\nThe SC paper states that some reported metric results come from a third-party tool [72].But we found the tutorial models' reported metrics instead exactly match the results of only running the SC metrics tool (which calls the Simulink API [54]).Specifically, we ran the SLNET-Metrics tool [80] as it can run SC's metric tool in the Simulink toolbox configuration [78] the SC study used, yielding the reported 10,926 blocks (as opposed to 10,391 the other tool returns [72]).After this calibration on the tutorial models we ran the SC tool in the same configuration on the rest of SC R .\n\nFinally, we clarified with the SC team SC's \"S-function reuse rate\", which SC defined to approximate how often a model contains an S-function it contains elsewhere.The metric basically counts how many S-function blocks in a model have the same name.For example, if a model contains four Sfunction blocks, three named \"a\" and one named \"b\", the reuse rate would be (3-1 + 1-1)/(3+1) = 0.5.SC reported a median reuse rate below 0.5%.Our result on SC R being much higher triggered an interaction, in which the SC team confirmed that the SC paper mistakenly added the percentage symbol.\n\n\nB. SC 20R & SC 20REvol Corpora to Reproduce SC 20 Results\n\nWe obtained the SC 20 replication package (v2) from Figshare [8], which contains 1,736 models grouped into 194 projects with non-model files removed.The SC 20 team categorized projects into four groups based on affiliation: 112 academic, 34 industry-mathworks, 25 industry, and 23 no-information.We included one project with an unknown category in the 'no-information' category, yielding SC 20R .\n\nTo extract model metrics, SC and SC 20 mostly use the Simulink API, but there are differences.For instance, SC 20 counts blocks via sldiagnostics [57] while SC uses Simulink Check [54] (the counts can differ).Additionally, SC uses the Simulink API for cyclomatic complexity, while SC 20 implements McCabe's definition (independent paths).From the SC 20 paper [7] and our correspondence with the SC 20 team we could not reconstruct how SC 20 computed projectlevel cyclomatic complexity.\n\nThe remaining model metrics we reproduced using the provided tool and documentation.To run the tool we had to install Simulink R2020a and the Check toolbox.We observed discrepancies in the results of 11/1736 models, which we attribute to a lack of documentation regarding the exact Simulink configuration (i.e., toolbox, library, etc).\n\nThe SC 20 team analyzed 35 GitHub projects, but didn't include the necessary git repositories or commit extraction tool in the replication package.We independently developed the tool, and after contacting the authors, they updated their package, but the repositories remained missing.In April 2023 via metadata we obtained 32/35 repositories (\"SC 20REvol \").3/35 repositories were no longer online.\n\nFinding 1: The SC and SC 20 replication packages are insufficient to reproduce the original studies' results.Implication: Authors should host the replication package in permanent archival repositories for long-term access and preservation with documentation, such as Simulink configuration and instruction [65].\n\n\nC. SLNET Results & SLNET Evol Corpus\n\nWhile the SLNET paper does not present any specific study or analysis, it does offer a valuable resource in the form of a corpus of Simulink models along with associated metadata on their metrics.In our attempt to reproduce SLNET's metrics, we first downloaded their corpus from Zenodo [87], which consists of 225 GitHub and 2,612 MATLAB Central projects, as well as a SQLite database of metadata.Following their documentation on Simulink configuration [83], we ran SLNET-Metrics, SLNET's metric collection tool, first on R2018b and then R2019b, as the latter ignores 'resource' folder, which some older SLNET projects use.By following this process, we were able to reproduce their reported metrics.\n\nLike SC 20 , SLNET only offers project snapshots, but to assess its suitability for evolution studies, we require its git repositories.In April 2023 we obtained 208/225 SLNET GitHub repositories, as 17 projects were offline.We refer to this collection as SLNET Evol , which we have made available for other researchers to analyze.\n\n\nD. Issues in Simulink Tool-chain Found\n\nWhile trying to reproduce SLNET's results, we encountered the following two Simulink issues.MathWorks classified the first one as a bug and the second one as a documentation issue.First, when using multiple machines to speed up metric collection, Simulink R2018b crashed while compiling a SLNET model on Windows but compiled the model without issue on Ubuntu.We reported this issue (#04254318), which MathWorks confirmed as a bug and fixed in Simulink R2021b.\n\nFinally, we reported (#04386513) that the cyclomatic complexity definition of the multiport switch [51] did not seem to match Simulink's metrics results.MathWorks addressed this issue by updating its public metric description [42].\n\n\nV. REPLICATING EMPIRICAL RESULTS USING SLNET\n\nTo date, empirical data on Simulink models and projects have been obtained on select closed-source projects and smaller open-source corpora (i.e., SC and SC 20 ).We would thus like to know how these earlier results generalize to the larger SLNET corpus of 2,837 open-source projects and their 9,117 Simulink models.As earlier work has not characterized SLNET, we will first put it into context for any subsequent findings or comparisons.\n\nAs in similar comparative studies, when interpreting experimental results we need to know how much results are skewed by differences in experimental setups.While conceptually straight-forward, calculating Simulink metrics is influenced by many parameters (Figure 2) and we realized that earlier studies did not document all relevant parameter values.\n\nTo increase confidence in our results we replicate earlier experiments where possible.Unless noted differently we apply the same metric extraction setup to all corpora-i.e., the same of our researchers use a single consistent set of metric definitions, metric tool version (SLNET-Metrics), Simulink version (R2020b on Ubuntu 18.04), and toolboxes [84].\n\nWe used Simulink R2020b as it enhanced metric calculation [45].For example, in Simulink R2019b a video surveillance system's [24] cyclomatic complexity is 38,403, which on manual inspection seems highly inflated.For the same system Simulink R2020b returns 322.Such a drastic change makes it hard to directly compare our results with results reported elsewhere, e.g., the SLNET work used Simulink R2019b [88].\n\nFinding 2: Small changes in experimental setup can drastically skew Simulink model metrics.In one example, upgrading to a newer version of Simulink changed a model's cyclomatic complexity from 38,403 to 322.Implication: There are subtle but severe pitfalls when comparing Simulink metric results across papers.To increase confidence in such comparisons we thus repeat earlier experiments where possible.\n\n\nA. Removing User-defined Libraries And Test Harnesses\n\nUser-defined libraries and test harnesses serve different goals than regular Simulink models.As they are also structurally different, we first identify and separate them from the regular models.While user-defined libraries are interesting themselves, for analyzing regular models we treat user-defined libraries like all other libraries.We thus either inline blocks from all or none of the libraries.Following prior work [17],\n\nwe use the Simulink API [38] and identify 235 user-defined libraries in SC R , 411 in SC 20R , and 1,137 in SLNET.\n\nSimulink's Test API [56] can identify models as test harnesses and we thus remove 9 test harnesses from SLNET and two each from SC R and SC 20R .This is likely an undercount, as many open-source projects may not have the license necessary for this API and thus use workarounds.We thus heuristically label (but not remove) models as potential test harnesses by checking if model and folder names contain \"test\" or \"harness\", thereby labeling 143 models in SC R , 233 in SC 20R , and 903 in SLNET.\n\n\nB. RQ1: Basic Simulink Model Metrics of Corpora\n\nAt a high level, while it contains significantly more models, SLNET is not a superset of the previous open-source corpora.Even when containing the same model, corpora may differ in the included model version, due to different corpus collection times.When treating all versions of a model as the same model and including user-defined library models, SLNET contains 30% of the SC models (328/1071), 36% for SC R (402/1117), 28% for SC 20 (492/1734), and 28% for SC 20R (492/1736).\n\nThe remainder of this work removes from each corpus each model that is a test harness or a user-defined library.This differs from earlier work that treated user-defined library models as regular models and thus included them overall metric counts [7].(The only exceptions are the three Table II t0 columns, which inline user-defined libraries.)Table II compares SC R , SC 20R , and SLNET on basic Simulink model metrics, such as number of models, models that are hierarchical, blocks, connections, and solver and simulation modes.1) Model Size: A widely-used proxy for model size is the model's number of blocks [25], [63], [74].For example, a recent paper conducted experiments on what it introduced as large industrial automotive models, containing 3.7k-73k blocks (and having hierarchy depth 8-16) [68].Boll et al. report conversations with Simulink experts indicating typical industrial models often have 1k-10k blocks [10].Industryscale models at automotive supplier Delphi were earlier reported to have on average some 750 blocks [32].\n\nTable II shows that (except for \"Others\"), including imported library blocks (B t0 ) at least doubles the overall block count.Focusing on 1k+ block models, SC's custom tool (which includes imported library blocks) found 93 such models in SC on Simulink R2017a.On Simulink 2020b, SC's tool found 132 such models in SC R , 139 in SC 20R , and 799 in SLNET.When excluding any imported library blocks, SC R contains 14 such models, SC 20R 15, and SLNET 148.\n\n2) Hierarchical & Compiling Models: Model hierarchy is important for studying model complexity, model slicing and evaluating Simulink model generation tools [15], [16], [71], [89].SC R has 777 hierarchical models, of which we could compile 44%.Of SC 20R 's 852 hierarchical models we could only compile 20%.Of SLNET's 4.7k hierarchical models we could compile 47%.SC 20R 's low compile rate can be attributed to that corpus not distributing non-model files, which may have served as dependencies for the Simulink model.\n\n3) Project and Model Metric Distributions: Table III shows model metric distributions across SC R , SC 20R , and SLNET.The majority of SLNET models are relatively small, with mean exceeding median values.The overall distribution of metrics in SLNET is akin to that of earlier corpora, i.e., offering a broad spectrum with most standard deviations exceeding the means.SLNET however offers a broader range of Simulink models with similar min but notably larger max metric values.Following are additional distribution details of project size, most frequently used block types, and file types.\n\na) Project size: Similar to earlier corpora, the distribution of models in SLNET is skewed towards a few large projects.The 50 largest projects (i.e., the largest 1.8% of projects) contain 35% of all models, while 76% of the projects contain just one model.Some SLNET projects feature 18 empty models alongside non-empty models.By comparison, in SC 20R , 5/194 projects contain 35% of the models, and 53% of the projects contain just one model.With the exception of a single SLNET project that comprises a library model, all projects include some blocks and signal lines.b) Most Frequently Used Block Types: Figures 3a and 3b show that the distributions of the most-commonly used block types are similar in SC R and SLNET.For example, in each corpus over 60% of models contain a SubSystem block, making SubSystem appear in the most models in both corpora.SLNET uses SubSystem less-widely, likely as 28% of SLNET models have less than 8 blocks, which typically does not require a SubSystem block.\n\n\nSubSystem\n\nSC R models use 156 distinct block types vs. 203 in SLNET (150 are in both).SLNET thus offers a potentially valuable  resource for research studies [14], [73].Both SC and SC 20 studies included library-imported blocks and reported a lower occurrence of output blocks (e.g., Scope [52], Display [43],\n\nand ToWorkspace [59]) than SLNET.The possible explanation for this discrepancy is that, like in procedural programming languages (where programmers include logging statements at various execution points), libraries may not have such statements for efficiency purposes.This practice is also observed in Simulink modeling.Furthermore, From [46] and Goto [47] blocks, which are typically used to improve the visual layout of the model, are equally widely used in SC and SLNET.However, excessive non-local usage of From and Goto blocks adversely affects readability and design, warranting further investigation.c) File types: Each Simulink model is stored in one of two file formats, the MDL legacy file format or SLX.Introduced in Simulink R2012a, SLX conforms to the Open Pack-aging Conventions (OPC) interoperability standard.Across corpora, few projects contain both MDL and SLX files (SC R 3%, SC 20R 7%, and SLNET 2%).Overall the major file type has shifted from MDL in SC R to SLX in SLNET (39% of SC R models are in SLX, 45% for SC 20R , and 55% for SLNET).The prevalence of SLX files in open-source models is significant for developing SLX to MDL back-transformation tools [1].\n\nIn summary, SLNET shares many similarities with prior corpora and offers a broader view of open-source Simulink projects.The majority of SLNET models are small, which may be relevant for analyzing simple models [69], [79], [86], [89], while also including a substantial number of non-trivial models using diverse features.\n\nFinding 3: As in many other kinds of open-source projects [28], [33], SLNET project and model metrics follow long-tailed distributions.Implication: Research studies may use SLNET subsets based on their objectives.The diverse SLNET corpus can help address generalizability challenges in model-based development research.\n\n\nVI. REPLICATING FINDINGS ON MODELING PRACTICES\n\n\nA. Converging Result: Model Referencing\n\nAnalogous to classes in object-oriented programming, model references [36] enable modular model design, unit testing, and code reuse.But similar to the SC work [17], we found that only 10 SC R (0.9%), 18 SC 20R (1.4%), and 139 SLNET models (1.8%) use model referencing.Even when accounting for the skewed SLNET model size distribution, Table III shows that model reference use remains sparse.\n\n\nB. Converging Result: Algebraic Loops\n\nAn algebraic loop arises from a circular dependency between a block's output and input at the same simulation time step.An algebraic loop may reduce simulation performance or prevent the solver from resolving the loop.As the SC work [17], we found such loops relatively rarely, with only 20 SC R and 186 SLNET models containing such loops.\n\n\nC. Converging Result: Small Class Phenomenon\n\nZhang et al. observed the \"small class\" phenomenon in Java programs (most classes have few lines of code while a few classes are large) and found a high correlation between class size and number of defects [92], [93].In Simulink, subsystems are used to encapsulate a function, resulting in a hierarchical model.Similar to the small class phenomenon noted in the SC work [17], we observe that the median number of blocks in a subsystem at any hierarchy does not exceed 11 in both SC R and SLNET.This may inform future hypotheses on Simulink subsystem size and defects.Besides reuse of legacy C code, S-functions allow withinmodel code reuse (i.e., defined once but added to and used in several model components).In the same spirit as the SC work [17], Table IV shows that S-functions are not widely used, with just 31% of SC R models and 20% of SLNET using S-functions.For models that use S-functions, 41% of SC R models and 40% of SLNET models reuse at least one Sfunction (but these models' median S-function reuse rate is zero across corpora).\n\n\nE. Diverging Result: Cyclomatic Complexity vs Other Metrics\n\nWe conduct a correlation analysis between cyclomatic complexity and the other Table V model metrics using Kendall's \u03c4 .We only use models for which we could calculate cyclomatic complexity (e.g., excluding models we could not compile).As in the SC study, for SC R we used non-Simple models.For SC 20R , we used industry and industry-MathWorks models.As SLNET models are not categorized, we used those containing 200+ blocks.All metrics exhibit a statistically significant correlation at a 0.05 significance level.SC R models have a weak positive correlation (0.28 to 0.38) between cyclomatic complexity and model metrics.For SC 20R models the correlation is positive and weak to (barely) moderate (0.16 to 0.41).For SLNET models with 200+ blocks the correlation is positive but remains weak (0.10 to 0.28).\n\nFinding 5: Contrary to previous work [67], cyclomatic complexity does not seem strongly correlated with other model metrics.Implication: Similar to Java-and C-like languages, in Simulink cyclomatic complexity seems to remain an independently valuable metric.\n\n\nF. Converging Result: Suitability For Change Studies\n\nTo assess their applicability for Simulink model and project change studies, we analyzed SC 20REvol 's 32 and SLNET Evol 's 208 git repositories (for SLNET Evol we only studied the commits until SLNET's February 2020 snapshot).Three projects (with 811 commits) were in both corpora.\n\nTable VI gives an overview of the project and model change metrics.For example, 53% of SC 20REvol projects (17/32) and 39% of SLNET projects (82/208) are maintained by at least two collaborators, of which 8/17 and 32/82 have commits spanning over a year.Just 22% of SC 20REvol and 15% of SLNET Evol projects have more than 50 commits.Across SC 20REvol and SLNET Evol projects, 20% of commits involved updates or the creation of one or more models.\n\nIn both corpora, an average of 22% of models were under active development throughout the projects with 3+ commits, indicating the models were primary artifacts of these projects.However, 40% of SC 20REvol and almost half of SLNET Evol projects did not update their models after committing them to the repository.In both corpora, roughly 55% of models were not updated at all.The lack of model updates may be due to GitHub Simulink projects mainly serving as archives-like most other GitHub projects [28].\n\nFigure 4 breaks each project's duration into 10 buckets of equal length (normalized to each project's duration).Here project duration is the duration from a project's first to last commit as recorded by the timestamps assigned by the authors' machines.While this approach has its pitfalls, the more-active projects are usually less affected and we performed the basic recommended sanity checks to ensure there are no impossible outliers (e.g., commits with Unix time zero) [22].\n\nTo avoid potential skewing caused by \"code dump\" projects, Figure 4 excludes projects with less than 3 commits, yielding 26 SC 20REvol projects and 186 SLNET Evol projects.Even with this filtering, the figure may still be biased towards projects with fewer commits as the majority of both SC 20REvol and SLNET Evol projects have less than 11 commits.\n\n\nG. Diverging Result: Open-source Code Generation Models\n\nSimulink models that can generate code are of interest in model-based research and tool-development [11], [29], [62], [63], [66].Initially we applied SC 20 's heuristics to search for Embedded Coder [44] or TargetLink [20] traces.But we found inconsistencies between SC 20 's results (finding no code generation models) and their replication package's heuristics [9].During our interactions the SC 20 team acknowledged a bug and fixed it in their replication package version 2 [8].\n\nSpecifically, SC 20 's heuristics determine if a model can generate code based on the presence of atomic subsystems [60] or special TargetLink blocks.This found 33 SLNET models configured for Embedded Coder but no TargetLink traces.We found this heuristic restrictive and not specific to Embedded Coder.Our counter-example model had non-atomic subsystems and successfully generated code via Embedded Coder.\n\nFor background, while every Simulink model can generate code using Simulink Coder [55], this requires a fixed-step solver, which conflicts with the default variable-step solver model configuration.Simulink models further rely on a target language compiler (TLC) file [58] to map Simulink blocks and parameters to the target language's constructs.Simulink offers a set of standard-named TLC files that support various solver types [40].For example,'rsim.tlc' supports fixed-step and variable-step solvers.To determine if the Simulink model is configured to generate code, we follow a heuristic approach.First, we check if the model's TLC file name matches with one provided by Simulink and the model is configured with appropriate solver type.Second, in cases where the solver type required is ambiguous, we make a conservative assumption that the model must be configured with the fixed-step solver.\n\nTable VII shows the number of models configured for code generation.SLNET has 2,635 models with code generation capabilities, at least 4\u00d7 more than previous corpora.\n\n\nVII. THREATS TO VALIDITY\n\nInternal validity concerns the experimental design, data collection and analysis.In our replication efforts, we closely adhered to the original study's setup and tools.We calibrated the provided tools and contacted the authors for clarification and consistency in data analysis.It is important to note that the choice of Simulink version can impact model metrics and introduce slight differences in insights.\n\nSpecifically, for a subset of 554 SLNET models (the models of the 10 SLNET projects with the most models) we compared model metrics obtained using both R2020b and R2022b.\n\nResults for all metrics were the same for all models, except for 3/554 models where the cyclomatic complexity differed by 2-6 between R2020b and R2022b.\n\nExternal validity examines the generalizability of reproduced and replicated study results.In our case, the generalizability of our findings is limited to Simulink models within the SLNET corpus.SLNET may not represent all available Simulink projects, as its construction involved a keyword search on GitHub and filtering for redistributable projects.However, considering that the majority of results from the original studies, which involved some level of cherry picking in their corpus, hold true in SLNET-a larger dataset encompassing diverse models with a small overlap-we are optimistic in the generalizability of the presented results to other open-source Simulink models.\n\nConstruct validity ensures that the measures and metrics used in the replicated study accurately capture the intended concepts.Our confirmatory replication study inherits limitations from the original studies, such as not analyzing Stateflow blocks or MATLAB code, which can contribute to the project's complexity.Also, SC's heuristic used to identify test harnesses may have limitations, as manual inspection revealed 10% of such models are test harnesses.Upon noticing issues with SC 20 's code generation heuristic, we proposed new methods after consulting with the original authors.\n\nReliability refers to the replicability of a study for obtaining same or similar results.To mitigate reliability risks, we distribute our analysis tool and complete replication package as open-source via permanent storage locations [82], [85].We encourage replication of our findings.\n\n\nVIII. CONCLUSIONS AND FUTURE WORK\n\nThe study investigated the reproducibility of previous empirical studies of Simulink models and evaluated the generalizability of their results to the larger SLNET corpus.The SLNET study confirmed and contradicted earlier findings, highlighting its potential as a valuable corpus for model-based development research and also provided actionable insights for future research.We found that open-source Simulink models generally follow good modeling practices and that few open-source models are comparable in size and properties to proprietary models.To that end, we proposed a heuristic to determine code generating Simulink models.We also provided 208 Git repositories to facilitate model evolution studies.\n\nWhile this paper only analyzes Simulink model metrics focusing on reproducibility and replication, future work includes examining if the model metrics can be used to make predictions of process metrics such as defect prediction.\n\nFig. 1 :\n1\nFig. 1: (a) A tiny Simulink example model, (b) shows the contents of (a)'s referenced model.\n\n\nIFig. 2 :\n2\nFig. 2: Parameters a through i for reproducing and replicating results on Simulink models.Relative to earlier studies (and unless noted otherwise), for reproduction we only varied i and for replication we only varied a,b,i.\n\n\nFigure 2\n2\nFigure2applies ACM's guidelines on reproducibility (\"different team, same experimental setup\") and replicability (\"different team, different experimental setup\") to empirical studies of Simulink models and summarizes the relevant variables.The following sections point out where we had to deviate from this model (e.g., when an exact earlier corpus is no longer available for exact reproduction).\n\n\n\n\n(b) Most-common block types in SLNET (x) and their SCR (o) rate.\n\n\nFig. 3 :\n3\nFig. 3: Most-common block types in SC R (a) and SLNET (b).\n\n\nFinding 4 :\n4\nThe median number of blocks in a subsystem at any hierarchy level does not exceed 11.Implication: More research is needed to assess how subsystem size impacts Simulink model quality.D. Converging Result: S-function Reuse Rate\n\n\nFinding 6 :\n6\nA quarter of SLNET Evol projects are developed collaboratively and have 1+ multi-revision models.Implication: SLNET Evol projects have the potential to yield valuable insight into open-source Simulink development.\n\n\n\n\n(a) Timeline of 26/32 SC20REvol 3+ commit projects.(b) Timeline of 186/208 SLNETEvol 3+ commit projects.\n\n\nFig. 4 :\n4\nFig. 4: Across normalized project duration (x-axis): Total project commits, commits of 1+ mdl/slx files, individual mdl/slx file updates, and mdl/slx files under development (i.e., in between a file's first and last commit).\n\n\nFinding 7 :\n7\nSLNET has 4\u00d7 models configured for code generation (a common configuration in industrial models) than the largest earlier open-source model collection.Implication: Additional investigation is required to determine if the code generation models in SLNET can meet requirements of research studies.\n\n\nTABLE I :\nI\nOverview of three existing (top) plus our four new or re-collected corpora (bottom) of open-source Simulink models; cut-off = date of latest model version in corpus; \u00d7 = cannot distribute due to unclear licenses.\nCorpusVersion of Simulink ModelsCut-off DataSCOriginal corpus2017[77]SLNETLarger corpusFeb '20[87]SC 20SC re-collected at later versionAug '20[8]SC RSC re-collected at SC's version2017\u00d7SC 20RSC 20 completed at SC 20 's versionAug '20\u00d7SC 20REvolSC 20R GitHub projects' Git historiesApr '23\u00d7SLNET Evol\n\nTABLE II :\nII\nModel metrics after removing library & test harness models in SC R (top), SC 20R (middle), and SLNET (bottom); M = models; Mc = models compiling in our setup; Mh = hierarchical models; C = non-hidden connections; t0 = via SC's metric tool; var = variable; nor = normal; ext = external; PIL = processor in the loop; ac = accelerator; rap = rapid accelerator; Industry-M = Industry Mathworks; M-Central = MATLAB Central; excludes 14 SLNET models that crash Simulink R2020b; includes 20 SLNET models for which Simulink R2020b does not show solver and simulation metrics.\nModelsHierarchicalBlocksConnectionsSolver StepSimulation ModeMMcMhMh t0BB t0CC t0fixedvarnorext PILac rapTutorial414137403,70313,9173,70014,0201328410000GitHub16592531517,35020,7347,96721,500601051622010M-Central67429448859576,473483,64580,683473,46625741765514140SourceForge2303319620118,444126,12317,800125,0211834717555000Other74376116806367011670000SC R1,117464777994106,581645,099110,786634,708514603 1,04071150Academic69023245663475,813185,57486,223185,733229461597680 169Industry-M4046125935130,826220,01127,631212,2991762283994100Industry174159316124,753180,92925,116194,655135391693011No info552444464,88926,6905,52426,8032926541000SC 20R1,323332852 1,192136,281613,204144,494619,490569754 1,219761 1710GitHub1,637541875 1,297190,213424,175188,069400,753860759 1,498 1032 142M-Central6,239 3,370 3,874 5,485828,210 3,197,090914,857 3,074,782 1,753 4,484 5,971 1862 762SLNET7,876 3,911 4,749 6,782 1,018,423 3,621,265 1,102,926 3,475,535 2,613 5,243 7,4692894 904\n\nTABLE III :\nIII\nModel (after removing library & test harness models) metric distributions per project (p) and per model (m) in SC R (R), SC 20R (20R), and SLNET (N); Cyclom.C. = cyclomatic complexity (for a project the max of its models); Model Ref. = model references; Alg.L. = algebraic loops; LL Blocks = library linked blocks; Sub.Blocks = blocks in a subsystem at depth that has most such blocks.\nMinMaxAverageMedianStandard DeviationR20RNR20RNR20RNR20RNR20RNModelsp1111241242375.66.92.81.01.01.014.716.49.7Blocksp m1 11 00 013,555 13,831 172,196 13,555 13,555 18,255457.4 706.1 362.8 95.4 103.0 129.3116.0 140.0 52.0 25.0 25.0 27.01,419.9 1,959.8 3,577.1 448.4 430.6 690.1Block typesp m1 11 11 155 4758 47104 10118.3 10.619.2 10.413.2 10.416.0 8.017.0 11.0 8.0 8.011.1 8.311.9 7.89.3 7.9Connectionsp m0 00 00 014,169 16,491 231,672 14,169 14,169 25,078475.5 748.7 392.9 99.2 109.2 140.0124.0 153.0 57.0 26.0 27.0 28.01,422.1 2,103.5 4,611.7 466.2 453.7 887.1Subsystemsp m0 00 00 01,809 1,2941,873 1,29419,622 2,11746.9 9.868.4 10.034.0 12.17.0 3.07.0 2.02.0 2.0179.3 44.1210.8 41.8414.1 75.3Cyclom. C.p m0 00 00 0322 322322 3222,404 2,40427.7 14.030.7 13.622.2 13.77.0 4.07.0 4.55.0 2.049.4 32.454.1 31.681.1 59.0Model Ref.p m0 00 00 04 410 254 120.1 0.00.1 0.00.1 0.00.0 0.00.0 0.00.0 0.00.4 0.20.8 0.11.5 0.4Alg. L.p m0 00 00 07 29 137 60.2 0.10.2 0.10.1 0.10.0 0.00.0 0.00.0 0.00.7 0.21.0 0.21.1 0.3LL Blocksp m0 00 00 0657 31423 312,311 4419.1 1.911.8 1.75.6 2.00.0 0.00.0 0.00.0 0.053.8 4.548.7 4.381.1 15.0Sub. Blocks-22321211009.69.59.111.011.07.03.93.911.5\n\nTABLE IV :\nIV\nS-function per-model reuse rate for models with 1+ S-functions; M S-fct = models with 1+ S-functions; LQ = lower quartile; UQ = upper quartile; med = median.\nM S-fctmin LQ medUQmaxavgSC R3510.00.00.0 0.38 0.92 0.20SC 20R3780.00.00.0 0.50 0.98 0.23SLNET1,5040.00.00.0 0.50 0.99 0.21\n\nTABLE V :\nV\nCorrelation between cyclomatic complexity and model metrics; M,B,C from Table II: models, blocks, and nonhidden connections; UB = unique block types; MHD = max.hierarchy depth; CRB = child-model representing blocks i.e., model reference and subsystem; NCS = contained subsystems.\nMBCUBMHD CRB NCSSC R1600.29 0.32 0.310.380.280.29SC 20R580.16 0.16 0.200.310.410.41SLNET \u22652002790.27 0.27 0.230.100.280.27SLNET 200-300111-0.02 0.12 0.160.050.070.07\n\nTABLE VI :\nVI\nSLNET Evol and SC 20REvol per-model (m) and per-project (p) change metrics; Total commits, commits per day during project duration, merge commits (\u227b), and commits of 1+ mdl/slx files (MS); commit authors and commit MS authors; med = median; std = standard deviation.\nSC 20REvolSLNET Evolmin maxavgmedstdmin maxavgmedstdCommitsp1590 62.7 10.5 124.61963 43.97.5 120.1Commit / dayp040.90.31.20241.90.63.1Commits MS [%]p0100 38.8 26.831.21100 31.425.023.5Commits\u227b [%]p0172.70.04.70403.20.06.7Updates MSm0433.31.05.70531.81.02.8Authorsp m1 116 32.8 1.12.0 1.03.5 0.41 121 82.0 1.31.0 1.02.6 0.7Authors MS [%]p0100 68.6 75.034.510100 82.2 100.026.1\n\nTABLE VII :\nVII\nModels configured for code generation; M = all models; EC 20 = SC 20 Embedded Coder heuristics; EC = our Embedded Coder heuristics; GRT = Simulink Coder (Real-Time Workshop); Other = other code generation toolboxes.\nMEC 20ECGRT OtherTotalTutorial411112013GitHub1650452460MATC674047101109257Sourceforge230009687183Others700101SC R1,117152262200514Academic6900394136233Industry-M4040337767177Industry174051291135No Info550128029SC 20R1,323042328204574GitHub1,63714129502234865MATC6,23919423 1,0502971,770SLNET7,87633552 1,5525312,635\nAuthorized licensed use limited to the terms of the applicable license agreement with IEEE. Restrictions apply.\nThe earlier work discussed in this paragraph and our own analysis all use Kendall's \u03c4 at a 0.05 significance level and follow a recent labeling of subsequent |\u03c4 | ranges at that level, i.e.: \"weak\" below 0.4, then \"moderate\" to below 0.7, \"strong\" to below 0.9, etc.[34] \nACKNOWLEDGEMENTS Christoph Csallner has a potential research conflict of interest due to a financial interest with Microsoft and The Trade Desk.A management plan has been created to preserve objectivity in research in accordance with UTA policy.This material is based upon work supported by the National Science Foundation (NSF) under Grant No. 1911017 and a gift from MathWorks.\nSimulink model transformation for backwards version compatibility. B Adhikari, E J Rapos, M Stephan, MODELS-C. IEEEOct. 2021\n\nSyntax, predicates, idioms -what really affects code complexity?. S Ajami, Y Woodbridge, D G Feitelson, Empir. Softw. Eng. 241Feb. 2019\n\nA novel industry grade dataset for fault prediction based on model-driven developed automotive embedded software. H Altinger, S Siegl, Y Dajsuren, F Wotawa, May 2015MSR. IEEE\n\nInvestigating controller evolution and divergence through mining and mutation*. B Balasubramaniam, H Bagheri, S Elbaum, J Bradley, ICCPS. 2020\n\nAn empirical validation of cognitive complexity as a measure of source code understandability. M M Bar\u00f3n, M Wyrich, S Wagner, ESEM. ACMOct. 2020512\n\nComponent and connector views in practice: An experience report,\" in MODELS. V Bertram, S Maoz, J O Ringert, B Rumpe, M Von Wenckstern, September 2017IEEE Computer Society\n\nCharacteristics, potentials, and limitations of open-source Simulink projects for empirical research. A Boll, F Brokhausen, T Amorim, T Kehrer, A Vogelsang, Software and Systems Modeling. 20Apr. 2021\n\nCharacteristics, potentials, and limitations of open source Simulink projects for empirical research: Dataset. A Boll, T Kehrer, A Vogelsang, T Amorim, F Brokhausen, 10.6084/m9.figshare.13636589.v22021\n\nCharacteristics, potentials, and limitations of open source Simulink projects for empirical research: Dataset. 10.6084/m9.figshare.13636589.v12021\n\nReplicability of experimental tool evaluations in model-based software and systems engineering with MATLAB/Simulink. A Boll, N Vieregg, T Kehrer, Innovations in Systems and Software Engineering. Mar. 2022\n\nCocosim, a code generation framework for control/command applications an overview of cocosim for multi-periodic discrete Simulink models. H Bourbouh, P.-L Garoche, T Loquen, \u00c9 Noulard, C Pagetti, ERTS. 2020\n\nExperimental and Quasi-Experimental Designs for Research. D T Campbell, J C Stanley, 1963Houghton Mifflin Company3\n\nCognitive complexity: An overview and evaluation. G A Campbell, TechDebt. ACMMay 2018\n\nAutomatically finding bugs in a commercial cyber-physical system development tool chain with SLforge. S A Chowdhury, S Mohian, S Mehra, S Gawsane, T T Johnson, C Csallner, ICSE. ACMMay 2018\n\nSLEMI: Equivalence modulo input (EMI) based mutation of CPS models for finding compiler bugs in Simulink. S A Chowdhury, S L Shrestha, T T Johnson, C Csallner, ICSE. ACMMay 2020\n\nSLEMI: finding simulink compiler bugs through equivalence modulo input (EMI). 10.1145/3377812.3382147Proc. 42nd International Conference on Software Engineering (ICSE), Companion Volume. ACM. 42nd International Conference on Software Engineering (ICSE), Companion Volume. ACMMay 2020\n\nA curated corpus of Simulink models for model-based empirical studies. S A Chowdhury, L S Varghese, S Mohian, T T Johnson, C Csallner, SEsCPS. ACMMay 2018\n\nRevisiting the debate: Are code metrics useful for measuring maintenance effort?. S A Chowdhury, R Holmes, A Zaidman, R Kazman, Empir. Softw. Eng. 276Nov. 2022\n\nSimulink models are also software: Modularity assessment. Y Dajsuren, M G J Van Den Brand, A Serebrenik, S A Roubtsov, QoSA. Jun. 2013\n\nTargetlink. 2023. June 2023\n\nConsiderations and pitfalls for reducing threats to the validity of controlled experiments on code comprehension. D G Feitelson, Empir. Softw. Eng. 276Nov. 2022\n\nPitfalls and guidelines for using time-based Git data. S W Flint, J Chauhan, R Dyer, Empir. Softw. Eng. 277Dec. 2022\n\nQuality model based on iso/iec 9126 for internal quality of matlab/simulink/stateflow models,\" in ICIT. W Hu, T Loeffler, J Wegener, 2012IEEE\n\nVideo surveillance system design with Simulink and Xilinx FPGAs. A Hwang, 2022. Nov 2022\n\nApplying modular decomposition in Simulink. M Jaskolka, S Scott, V Pantelic, A Wassyng, M Lawford, 2020ISSRE-W. IEEE\n\nCyclomatic complexity and lines of code: Empirical evidence of a stable linear relationship. G Jay, J E Hale, R K Smith, D P Hale, N A Kraft, C Ward, J. Softw. Eng. Appl. 232009\n\nOptimal test case generation for Simulink models using slicing. Z Jiang, X Wu, Z Dong, M Mu, QRS-CJuly 2017\n\nAn in-depth study of the promises and perils of mining GitHub. E Kalliamvakou, G Gousios, K Blincoe, L Singer, D M Germ\u00e1n, D E Damian, Empir. Softw. Eng. 2152016\n\nAutomatic code generation from MATLAB/Simulink for critical applications. J Krizan, L Ertl, M Bradac, M Jasansky, A Andreev, CCECE. IEEEMay 2014\n\nEmpirical analysis of the relationship between CC and SLOC in a large corpus of Java methods and C functions. D Landman, A Serebrenik, E Bouwers, J J Vinju, J. Softw. Eng. Appl. 287Jul. 2016\n\nUnderstanding large-scale software systems -structure and flows. O Levy, D G Feitelson, Empir. Softw. Eng. 263May 2021\n\nImproving fault localization for Simulink models using search-based testing and prediction models. B Liu, Lucia , S Nejati, L C Briand, SANER. Feb. 2017\n\nWhat are the dominant projects in the github python ecosystem?\" in TSA. W Ma, L Chen, Y Zhou, B Xu, September 2016IEEE\n\nEffects of measurements on correlations of software code metrics. M A A Mamun, C Berger, J Hansson, 10.1007/s10664-019-09714-9Empir. Softw. Eng. 2442019\n\nControl algorithm modeling guidelines using MATLAB, Simulink, and Stateflow. Advisory Mathworks, ( Board, Mab), MathWorks Inc. 2020Tech. Rep. Version 5.0\n\nModel References. 2022. Nov 2022MathWorks Inc\n\nProducts and services. 2022. Nov 2022\n\nChoose among types of model components. 2023. April 2023\n\nConfigure a system target file. 2023. June 2023\n\nCustom libraries. 2023. June 2023\n\nCyclomatic complexity metric. 2023. April 2023\n\nDisplay. 2023. June 2023\n\nEmbedded Coder. 2023. June 2023\n\nEnhanced calculation of cyclomatic complexity. 2023. February 2023\n\nFrom. 2023. June 2023\n\nAuthorized licensed use limited to the terms of the applicable license agreement with IEEE. -- Goto, 2023. June 2023\n\nHow accelerator model works documentation. 2023. June 2023\n\nLinked blocks. 2023. June 2023Online\n\nMATLAB & Simulink. 2023. June 2023\n\nMultiport switch. Scope. 522023. April 2023. 2023. June 2023\n\nSimulink block libraries documentation. 2023. June 2023\n\nSimulink Check. 2023. June 2023\n\nSimulink Coder. 2023. February 2023\n\nSimulink Test. 2023. April 2023\n\nTarget language compiler basics. 2023. June 2023\n\nTo Workspace. 2023. June 2023\n\nTreat as atomic unit. 2023. April 2023\n\nEffective test suites for mixed discrete-continuous stateflow controllers. R Matinnejad, S Nejati, L C Briand, T Bruckmann, ESEC/FSE. ACMAug. 2015\n\nAutomated test suite generation for time-continuous Smulink models. ICSE. May 2016\n\nTest generation and test prioritization for Simulink models with dynamic behavior. IEEE Trans. Software Eng. 4592019\n\nA complexity measure. T J Mccabe, IEEE Trans. Softw. Eng. 24Dec. 1976\n\nOpen science in software engineering. D M\u00e9ndez, D Graziotin, S Wagner, H Seibold, Contemporary Empirical Methods in Software Engineering. Springer2020\n\nA framework for modeling, simulation and automatic code generation of sensor network application. M M R Mozumdar, F Gregoretti, L Lavagno, L Vanzago, S Olivieri, IEEE SECON. 2008\n\nTailoring complexity metrics for Simulink models. M Olszewska, Y Dajsuren, H Altinger, A Serebrenik, M A Wald\u00e9n, M G J Van Den, Brand, ECSA-W. Nov. 20165\n\nSoftware engineering practices and simulink: Bridging the gap. V Pantelic, S M Postma, M Lawford, M Jaskolka, B Mackenzie, A Korobkine, M Bender, J Ong, G Marks, A Wassyng, STTT. 2012018\n\nA toolset for Simulink: Improving software engineering practices in development with Simulink. V Pantelic, S M Postma, M Lawford, A Korobkine, B Mackenzie, J Ong, M Bender, February 2015MODELS. SciTePress\n\nMutation testing based evaluation of formal verification tools. A C Rao, A Raouf, G Dhadyalla, V Pasupuleti, DSA. IEEEOct. 2017\n\nSlicing MATLAB Simulink models. R Reicherdt, S Glesner, ICSE. June 2012\n\nHow many blocks are in that model?. G Rouleau, 2023. June 2023\n\nOn-the-fly translation and execution of OCL-like queries on Simulink models. B S\u00e1nchez, A Zolotas, H H Rodriguez, D S Kolovos, R F Paige, MODELS. 2019IEEE\n\nDetecting variability in MATLAB/Simulink models: An industry-inspired technique and its evaluation. A Schlie, D Wille, S Schulze, L Cleophas, I Schaefer, SPLC. September 2017\n\nComparing the applicability of complexity measurements for Simulink models during integration testing -an industrial case study. J Schroeder, C Berger, T Herpel, M Staron, SAM. IEEEMay 2015\n\nUnveiling anomalies and their impact on software quality in model-based automotive software revisions with software metrics and domain experts. J Schroeder, C Berger, M Staron, T Herpel, A Knauss, ISSTA. ACMJul. 2016\n\nHome. Shafiul Azam, Chowdhury , 2022. Nov 2022\n\nAutomatic generation of Simulink models to find bugs in a cyber-physical system tool chain using deep learning. S L Shrestha, June 2020\n\n10.5281/zenodo.633604850417/SLNET Metrics: SLNET Metrics MSR Release. Mar. 2022\n\n. Slnet-Miner, 2022. November 2022\n\n50417/SLReplicationTool: Replicability Study: Corpora For Understanding Simulink Models & Projects. Jul. 2023\n\n. 10.5281/zenodo.8111687\n\nMATLAB/Simulink Installation. 2023. June 2023\n\nSimulink Model Version. 2023. July 2023Online\n\nReplicability study: Corpora for understanding simulink models & projects (analysis data) and slnet-evol dataset. S L Shrestha, S A Chowdhury, C Csallner, Jul. 2023\n\nDeepFuzzSL: Generating models with deep learning to find bugs in the Simulink toolchain. DeepTest. ACMMay 2020\n\nSLNET: A redistributable corpus of 3rd-party Simulink models: Dataset. 10.5281/zenodo.4898432Jun. 2020\n\nSLNET: A Redistributable Corpus of 3rd-party Simulink models. MSR. IEEEMay 2022\n\nSLGPT: Using transfer learning to directly generate Simulink model files and find bugs in the Simulink toolchain. S L Shrestha, C Csallner, EASE. ACM2021\n\nThe ABC of software engineering research. K Stol, B Fitzgerald, ACM Transactions on Software Engineering and Methodology. 273Sep. 2018\n\nSix strategies for generalizing software engineering theories. R J Wieringa, M Daneva, 10.1016/j.scico.2014.11.013Science of Computer Programming. 1012015\n\nAn empirical study of class sizes for large java systems. H Zhang, H B K Tan, December 2007APSEC. IEEE Computer Society\n\nThe distribution of program sizes and its implications: An eclipse case study. H Zhang, H B K Tan, M Marchesi, 1st International Symposium on Emerging Trends in Software Metrics. 2009\n", "annotations": {"author": "[{\"end\":208,\"start\":77},{\"end\":351,\"start\":209},{\"end\":472,\"start\":352}]", "publisher": null, "author_last_name": "[{\"end\":95,\"start\":87},{\"end\":231,\"start\":222},{\"end\":370,\"start\":362}]", "author_first_name": "[{\"end\":82,\"start\":77},{\"end\":86,\"start\":83},{\"end\":216,\"start\":209},{\"end\":221,\"start\":217},{\"end\":361,\"start\":352}]", "author_affiliation": "[{\"end\":207,\"start\":125},{\"end\":350,\"start\":268},{\"end\":471,\"start\":389}]", "title": "[{\"end\":74,\"start\":1},{\"end\":546,\"start\":473}]", "venue": null, "abstract": "[{\"end\":2197,\"start\":686}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2469,\"start\":2465},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":2475,\"start\":2471},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":2481,\"start\":2477},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":2487,\"start\":2483},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":2493,\"start\":2489},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2648,\"start\":2645},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2898,\"start\":2894},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3132,\"start\":3128},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":3494,\"start\":3490},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3613,\"start\":3610},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3805,\"start\":3802},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":3927,\"start\":3923},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":5290,\"start\":5286},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":5315,\"start\":5311},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":5365,\"start\":5361},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":5543,\"start\":5539},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":5770,\"start\":5766},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":6343,\"start\":6339},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":6608,\"start\":6604},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":6672,\"start\":6668},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":7226,\"start\":7222},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":7257,\"start\":7253},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":7836,\"start\":7832},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":8524,\"start\":8520},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8782,\"start\":8778},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8788,\"start\":8784},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":8794,\"start\":8790},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8869,\"start\":8866},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8875,\"start\":8871},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":8910,\"start\":8907},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9051,\"start\":9047},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9147,\"start\":9143},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":9285,\"start\":9281},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":9530,\"start\":9526},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":10447,\"start\":10443},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":10768,\"start\":10764},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":11022,\"start\":11019},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11028,\"start\":11024},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":11034,\"start\":11030},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":11068,\"start\":11064},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11306,\"start\":11302},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":11349,\"start\":11346},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":11691,\"start\":11687},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":11870,\"start\":11866},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":11876,\"start\":11872},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":11887,\"start\":11883},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":12397,\"start\":12393},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":12447,\"start\":12443},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":12967,\"start\":12963},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":12989,\"start\":12985},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":13587,\"start\":13583},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":13828,\"start\":13824},{\"end\":13900,\"start\":13883},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13933,\"start\":13930},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":14122,\"start\":14119},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":14764,\"start\":14760},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":15455,\"start\":15451},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":15461,\"start\":15457},{\"attributes\":{\"ref_id\":\"b83\"},\"end\":15467,\"start\":15463},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16092,\"start\":16088},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":16234,\"start\":16230},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":16404,\"start\":16401},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":16446,\"start\":16442},{\"attributes\":{\"ref_id\":\"b86\"},\"end\":16763,\"start\":16759},{\"attributes\":{\"ref_id\":\"b87\"},\"end\":16769,\"start\":16765},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":17176,\"start\":17172},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":17237,\"start\":17234},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":17328,\"start\":17324},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":17684,\"start\":17680},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":19262,\"start\":19258},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":19418,\"start\":19414},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":19468,\"start\":19464},{\"end\":19542,\"start\":19538},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":19647,\"start\":19643},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":20471,\"start\":20468},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":20989,\"start\":20985},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":21167,\"start\":21164},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":22339,\"start\":22335},{\"attributes\":{\"ref_id\":\"b83\"},\"end\":22671,\"start\":22667},{\"attributes\":{\"ref_id\":\"b79\"},\"end\":22838,\"start\":22834},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":24019,\"start\":24015},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":24146,\"start\":24142},{\"attributes\":{\"ref_id\":\"b80\"},\"end\":25338,\"start\":25334},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":25403,\"start\":25399},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":25470,\"start\":25466},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":25748,\"start\":25744},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":26637,\"start\":26633},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":26780,\"start\":26776},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28033,\"start\":28030},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":28399,\"start\":28395},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":28405,\"start\":28401},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":28411,\"start\":28407},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":28588,\"start\":28584},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28710,\"start\":28706},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":28823,\"start\":28819},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":29442,\"start\":29438},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":29448,\"start\":29444},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":29454,\"start\":29450},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":29460,\"start\":29456},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":31554,\"start\":31550},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":31560,\"start\":31556},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":31700,\"start\":31696},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":31723,\"start\":31719},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":32045,\"start\":32041},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":32059,\"start\":32055},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":32884,\"start\":32881},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":33102,\"start\":33098},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":33108,\"start\":33104},{\"attributes\":{\"ref_id\":\"b82\"},\"end\":33114,\"start\":33110},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":33120,\"start\":33116},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":33273,\"start\":33269},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":33279,\"start\":33275},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":33697,\"start\":33693},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":33787,\"start\":33783},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":34294,\"start\":34290},{\"attributes\":{\"ref_id\":\"b88\"},\"end\":34655,\"start\":34651},{\"attributes\":{\"ref_id\":\"b89\"},\"end\":34661,\"start\":34657},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":34819,\"start\":34815},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":35194,\"start\":35190},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":36403,\"start\":36399},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":37914,\"start\":37910},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":38394,\"start\":38390},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":38911,\"start\":38907},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":38917,\"start\":38913},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":38923,\"start\":38919},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":38929,\"start\":38925},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":38935,\"start\":38931},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":39010,\"start\":39006},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":39029,\"start\":39025},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":39173,\"start\":39170},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":39287,\"start\":39284},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":39410,\"start\":39406},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":39784,\"start\":39780},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":39969,\"start\":39965},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":40132,\"start\":40128},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":43033,\"start\":43029},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":43039,\"start\":43035},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":52082,\"start\":52078}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":44163,\"start\":44058},{\"attributes\":{\"id\":\"fig_1\"},\"end\":44401,\"start\":44164},{\"attributes\":{\"id\":\"fig_2\"},\"end\":44811,\"start\":44402},{\"attributes\":{\"id\":\"fig_3\"},\"end\":44880,\"start\":44812},{\"attributes\":{\"id\":\"fig_4\"},\"end\":44952,\"start\":44881},{\"attributes\":{\"id\":\"fig_5\"},\"end\":45194,\"start\":44953},{\"attributes\":{\"id\":\"fig_6\"},\"end\":45424,\"start\":45195},{\"attributes\":{\"id\":\"fig_7\"},\"end\":45533,\"start\":45425},{\"attributes\":{\"id\":\"fig_8\"},\"end\":45771,\"start\":45534},{\"attributes\":{\"id\":\"fig_9\"},\"end\":46083,\"start\":45772},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":46609,\"start\":46084},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":48164,\"start\":46610},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":49736,\"start\":48165},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":50033,\"start\":49737},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":50492,\"start\":50034},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":51150,\"start\":50493},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":51699,\"start\":51151}]", "paragraph": "[{\"end\":2899,\"start\":2216},{\"end\":3382,\"start\":2901},{\"end\":4089,\"start\":3384},{\"end\":4841,\"start\":4091},{\"end\":5397,\"start\":4843},{\"end\":6773,\"start\":5399},{\"end\":7350,\"start\":6775},{\"end\":7800,\"start\":7405},{\"end\":8161,\"start\":7802},{\"end\":9148,\"start\":8217},{\"end\":9614,\"start\":9150},{\"end\":10111,\"start\":9616},{\"end\":10769,\"start\":10113},{\"end\":11166,\"start\":10822},{\"end\":11692,\"start\":11168},{\"end\":12398,\"start\":11747},{\"end\":12806,\"start\":12400},{\"end\":13136,\"start\":12808},{\"end\":13722,\"start\":13138},{\"end\":14123,\"start\":13769},{\"end\":14656,\"start\":14125},{\"end\":15468,\"start\":14700},{\"end\":15858,\"start\":15470},{\"end\":16405,\"start\":15883},{\"end\":16832,\"start\":16407},{\"end\":17494,\"start\":16834},{\"end\":18098,\"start\":17584},{\"end\":18601,\"start\":18100},{\"end\":19173,\"start\":18603},{\"end\":19761,\"start\":19175},{\"end\":20345,\"start\":19763},{\"end\":20803,\"start\":20407},{\"end\":21290,\"start\":20805},{\"end\":21627,\"start\":21292},{\"end\":22027,\"start\":21629},{\"end\":22340,\"start\":22029},{\"end\":23080,\"start\":22381},{\"end\":23412,\"start\":23082},{\"end\":23914,\"start\":23455},{\"end\":24147,\"start\":23916},{\"end\":24633,\"start\":24196},{\"end\":24985,\"start\":24635},{\"end\":25339,\"start\":24987},{\"end\":25749,\"start\":25341},{\"end\":26154,\"start\":25751},{\"end\":26638,\"start\":26212},{\"end\":26754,\"start\":26640},{\"end\":27251,\"start\":26756},{\"end\":27781,\"start\":27303},{\"end\":28824,\"start\":27783},{\"end\":29279,\"start\":28826},{\"end\":29800,\"start\":29281},{\"end\":30391,\"start\":29802},{\"end\":31388,\"start\":30393},{\"end\":31701,\"start\":31402},{\"end\":32885,\"start\":31703},{\"end\":33209,\"start\":32887},{\"end\":33530,\"start\":33211},{\"end\":34015,\"start\":33623},{\"end\":34396,\"start\":34057},{\"end\":35490,\"start\":34445},{\"end\":36360,\"start\":35554},{\"end\":36620,\"start\":36362},{\"end\":36959,\"start\":36677},{\"end\":37408,\"start\":36961},{\"end\":37915,\"start\":37410},{\"end\":38395,\"start\":37917},{\"end\":38747,\"start\":38397},{\"end\":39288,\"start\":38807},{\"end\":39696,\"start\":39290},{\"end\":40597,\"start\":39698},{\"end\":40764,\"start\":40599},{\"end\":41201,\"start\":40793},{\"end\":41373,\"start\":41203},{\"end\":41527,\"start\":41375},{\"end\":42207,\"start\":41529},{\"end\":42795,\"start\":42209},{\"end\":43081,\"start\":42797},{\"end\":43827,\"start\":43119},{\"end\":44057,\"start\":43829},{\"end\":44162,\"start\":44070},{\"end\":44400,\"start\":44177},{\"end\":44810,\"start\":44414},{\"end\":44879,\"start\":44815},{\"end\":44951,\"start\":44893},{\"end\":45193,\"start\":44968},{\"end\":45423,\"start\":45210},{\"end\":45532,\"start\":45428},{\"end\":45770,\"start\":45546},{\"end\":46082,\"start\":45787},{\"end\":46309,\"start\":46097},{\"end\":47192,\"start\":46625},{\"end\":48567,\"start\":48182},{\"end\":49909,\"start\":49752},{\"end\":50326,\"start\":50047},{\"end\":50774,\"start\":50508},{\"end\":51383,\"start\":51168}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":17184,\"start\":17183},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":28077,\"start\":28075},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":28135,\"start\":28133},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":28834,\"start\":28832},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":29854,\"start\":29851},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":33968,\"start\":33965},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":35204,\"start\":35202},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":36969,\"start\":36967},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":40608,\"start\":40605}]", "section_header": "[{\"end\":2214,\"start\":2199},{\"end\":7403,\"start\":7353},{\"end\":8215,\"start\":8164},{\"end\":10820,\"start\":10772},{\"end\":11745,\"start\":11695},{\"end\":13767,\"start\":13725},{\"end\":14698,\"start\":14659},{\"end\":15881,\"start\":15861},{\"end\":17541,\"start\":17497},{\"end\":17582,\"start\":17544},{\"end\":20405,\"start\":20348},{\"end\":22379,\"start\":22343},{\"end\":23453,\"start\":23415},{\"end\":24194,\"start\":24150},{\"end\":26210,\"start\":26157},{\"end\":27301,\"start\":27254},{\"end\":31400,\"start\":31391},{\"end\":33579,\"start\":33533},{\"end\":33621,\"start\":33582},{\"end\":34055,\"start\":34018},{\"end\":34443,\"start\":34399},{\"end\":35552,\"start\":35493},{\"end\":36675,\"start\":36623},{\"end\":38805,\"start\":38750},{\"end\":40791,\"start\":40767},{\"end\":43117,\"start\":43084},{\"end\":44067,\"start\":44059},{\"end\":44174,\"start\":44165},{\"end\":44411,\"start\":44403},{\"end\":44890,\"start\":44882},{\"end\":44965,\"start\":44954},{\"end\":45207,\"start\":45196},{\"end\":45543,\"start\":45535},{\"end\":45784,\"start\":45773},{\"end\":46094,\"start\":46085},{\"end\":46621,\"start\":46611},{\"end\":48177,\"start\":48166},{\"end\":49748,\"start\":49738},{\"end\":50044,\"start\":50035},{\"end\":50504,\"start\":50494},{\"end\":51163,\"start\":51152}]", "table": "[{\"end\":46609,\"start\":46310},{\"end\":48164,\"start\":47193},{\"end\":49736,\"start\":48568},{\"end\":50033,\"start\":49910},{\"end\":50492,\"start\":50327},{\"end\":51150,\"start\":50775},{\"end\":51699,\"start\":51384}]", "figure_caption": "[{\"end\":44163,\"start\":44069},{\"end\":44401,\"start\":44176},{\"end\":44811,\"start\":44413},{\"end\":44880,\"start\":44814},{\"end\":44952,\"start\":44892},{\"end\":45194,\"start\":44967},{\"end\":45424,\"start\":45209},{\"end\":45533,\"start\":45427},{\"end\":45771,\"start\":45545},{\"end\":46083,\"start\":45786},{\"end\":46310,\"start\":46096},{\"end\":47193,\"start\":46624},{\"end\":48568,\"start\":48181},{\"end\":49910,\"start\":49751},{\"end\":50327,\"start\":50046},{\"end\":50775,\"start\":50507},{\"end\":51384,\"start\":51167}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":6438,\"start\":6437},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":6529,\"start\":6528},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":24899,\"start\":24898},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":31018,\"start\":31009},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":37925,\"start\":37924},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":38464,\"start\":38463}]", "bib_author_first_name": "[{\"end\":52532,\"start\":52531},{\"end\":52544,\"start\":52543},{\"end\":52546,\"start\":52545},{\"end\":52555,\"start\":52554},{\"end\":52657,\"start\":52656},{\"end\":52666,\"start\":52665},{\"end\":52680,\"start\":52679},{\"end\":52682,\"start\":52681},{\"end\":52842,\"start\":52841},{\"end\":52854,\"start\":52853},{\"end\":52863,\"start\":52862},{\"end\":52875,\"start\":52874},{\"end\":52984,\"start\":52983},{\"end\":53003,\"start\":53002},{\"end\":53014,\"start\":53013},{\"end\":53024,\"start\":53023},{\"end\":53143,\"start\":53142},{\"end\":53145,\"start\":53144},{\"end\":53154,\"start\":53153},{\"end\":53164,\"start\":53163},{\"end\":53274,\"start\":53273},{\"end\":53285,\"start\":53284},{\"end\":53293,\"start\":53292},{\"end\":53295,\"start\":53294},{\"end\":53306,\"start\":53305},{\"end\":53315,\"start\":53314},{\"end\":53472,\"start\":53471},{\"end\":53480,\"start\":53479},{\"end\":53494,\"start\":53493},{\"end\":53504,\"start\":53503},{\"end\":53514,\"start\":53513},{\"end\":53682,\"start\":53681},{\"end\":53690,\"start\":53689},{\"end\":53700,\"start\":53699},{\"end\":53713,\"start\":53712},{\"end\":53723,\"start\":53722},{\"end\":54039,\"start\":54038},{\"end\":54047,\"start\":54046},{\"end\":54058,\"start\":54057},{\"end\":54266,\"start\":54265},{\"end\":54281,\"start\":54277},{\"end\":54292,\"start\":54291},{\"end\":54302,\"start\":54301},{\"end\":54313,\"start\":54312},{\"end\":54394,\"start\":54393},{\"end\":54396,\"start\":54395},{\"end\":54408,\"start\":54407},{\"end\":54410,\"start\":54409},{\"end\":54502,\"start\":54501},{\"end\":54504,\"start\":54503},{\"end\":54641,\"start\":54640},{\"end\":54643,\"start\":54642},{\"end\":54656,\"start\":54655},{\"end\":54666,\"start\":54665},{\"end\":54675,\"start\":54674},{\"end\":54686,\"start\":54685},{\"end\":54688,\"start\":54687},{\"end\":54699,\"start\":54698},{\"end\":54836,\"start\":54835},{\"end\":54838,\"start\":54837},{\"end\":54851,\"start\":54850},{\"end\":54853,\"start\":54852},{\"end\":54865,\"start\":54864},{\"end\":54867,\"start\":54866},{\"end\":54878,\"start\":54877},{\"end\":55265,\"start\":55264},{\"end\":55267,\"start\":55266},{\"end\":55280,\"start\":55279},{\"end\":55282,\"start\":55281},{\"end\":55294,\"start\":55293},{\"end\":55304,\"start\":55303},{\"end\":55306,\"start\":55305},{\"end\":55317,\"start\":55316},{\"end\":55432,\"start\":55431},{\"end\":55434,\"start\":55433},{\"end\":55447,\"start\":55446},{\"end\":55457,\"start\":55456},{\"end\":55468,\"start\":55467},{\"end\":55569,\"start\":55568},{\"end\":55581,\"start\":55580},{\"end\":55585,\"start\":55582},{\"end\":55602,\"start\":55601},{\"end\":55616,\"start\":55615},{\"end\":55618,\"start\":55617},{\"end\":55790,\"start\":55789},{\"end\":55792,\"start\":55791},{\"end\":55893,\"start\":55892},{\"end\":55895,\"start\":55894},{\"end\":55904,\"start\":55903},{\"end\":55915,\"start\":55914},{\"end\":56060,\"start\":56059},{\"end\":56066,\"start\":56065},{\"end\":56078,\"start\":56077},{\"end\":56164,\"start\":56163},{\"end\":56233,\"start\":56232},{\"end\":56245,\"start\":56244},{\"end\":56254,\"start\":56253},{\"end\":56266,\"start\":56265},{\"end\":56277,\"start\":56276},{\"end\":56400,\"start\":56399},{\"end\":56407,\"start\":56406},{\"end\":56409,\"start\":56408},{\"end\":56417,\"start\":56416},{\"end\":56419,\"start\":56418},{\"end\":56428,\"start\":56427},{\"end\":56430,\"start\":56429},{\"end\":56438,\"start\":56437},{\"end\":56440,\"start\":56439},{\"end\":56449,\"start\":56448},{\"end\":56550,\"start\":56549},{\"end\":56559,\"start\":56558},{\"end\":56565,\"start\":56564},{\"end\":56573,\"start\":56572},{\"end\":56658,\"start\":56657},{\"end\":56674,\"start\":56673},{\"end\":56685,\"start\":56684},{\"end\":56696,\"start\":56695},{\"end\":56706,\"start\":56705},{\"end\":56708,\"start\":56707},{\"end\":56718,\"start\":56717},{\"end\":56720,\"start\":56719},{\"end\":56832,\"start\":56831},{\"end\":56842,\"start\":56841},{\"end\":56850,\"start\":56849},{\"end\":56860,\"start\":56859},{\"end\":56872,\"start\":56871},{\"end\":57014,\"start\":57013},{\"end\":57025,\"start\":57024},{\"end\":57039,\"start\":57038},{\"end\":57050,\"start\":57049},{\"end\":57052,\"start\":57051},{\"end\":57161,\"start\":57160},{\"end\":57169,\"start\":57168},{\"end\":57171,\"start\":57170},{\"end\":57315,\"start\":57314},{\"end\":57326,\"start\":57321},{\"end\":57330,\"start\":57329},{\"end\":57340,\"start\":57339},{\"end\":57342,\"start\":57341},{\"end\":57442,\"start\":57441},{\"end\":57448,\"start\":57447},{\"end\":57456,\"start\":57455},{\"end\":57464,\"start\":57463},{\"end\":57556,\"start\":57555},{\"end\":57560,\"start\":57557},{\"end\":57569,\"start\":57568},{\"end\":57579,\"start\":57578},{\"end\":57728,\"start\":57720},{\"end\":57741,\"start\":57740},{\"end\":58318,\"start\":58316},{\"end\":58895,\"start\":58894},{\"end\":58909,\"start\":58908},{\"end\":58919,\"start\":58918},{\"end\":58921,\"start\":58920},{\"end\":58931,\"start\":58930},{\"end\":59192,\"start\":59191},{\"end\":59194,\"start\":59193},{\"end\":59279,\"start\":59278},{\"end\":59289,\"start\":59288},{\"end\":59302,\"start\":59301},{\"end\":59312,\"start\":59311},{\"end\":59491,\"start\":59490},{\"end\":59495,\"start\":59492},{\"end\":59507,\"start\":59506},{\"end\":59521,\"start\":59520},{\"end\":59532,\"start\":59531},{\"end\":59543,\"start\":59542},{\"end\":59623,\"start\":59622},{\"end\":59636,\"start\":59635},{\"end\":59648,\"start\":59647},{\"end\":59660,\"start\":59659},{\"end\":59674,\"start\":59673},{\"end\":59676,\"start\":59675},{\"end\":59686,\"start\":59685},{\"end\":59690,\"start\":59687},{\"end\":59791,\"start\":59790},{\"end\":59803,\"start\":59802},{\"end\":59805,\"start\":59804},{\"end\":59815,\"start\":59814},{\"end\":59826,\"start\":59825},{\"end\":59838,\"start\":59837},{\"end\":59851,\"start\":59850},{\"end\":59864,\"start\":59863},{\"end\":59874,\"start\":59873},{\"end\":59881,\"start\":59880},{\"end\":59890,\"start\":59889},{\"end\":60011,\"start\":60010},{\"end\":60023,\"start\":60022},{\"end\":60025,\"start\":60024},{\"end\":60035,\"start\":60034},{\"end\":60046,\"start\":60045},{\"end\":60059,\"start\":60058},{\"end\":60072,\"start\":60071},{\"end\":60079,\"start\":60078},{\"end\":60186,\"start\":60185},{\"end\":60188,\"start\":60187},{\"end\":60195,\"start\":60194},{\"end\":60204,\"start\":60203},{\"end\":60217,\"start\":60216},{\"end\":60283,\"start\":60282},{\"end\":60296,\"start\":60295},{\"end\":60360,\"start\":60359},{\"end\":60465,\"start\":60464},{\"end\":60476,\"start\":60475},{\"end\":60487,\"start\":60486},{\"end\":60489,\"start\":60488},{\"end\":60502,\"start\":60501},{\"end\":60504,\"start\":60503},{\"end\":60515,\"start\":60514},{\"end\":60517,\"start\":60516},{\"end\":60644,\"start\":60643},{\"end\":60654,\"start\":60653},{\"end\":60663,\"start\":60662},{\"end\":60674,\"start\":60673},{\"end\":60686,\"start\":60685},{\"end\":60849,\"start\":60848},{\"end\":60862,\"start\":60861},{\"end\":60872,\"start\":60871},{\"end\":60882,\"start\":60881},{\"end\":61055,\"start\":61054},{\"end\":61068,\"start\":61067},{\"end\":61078,\"start\":61077},{\"end\":61088,\"start\":61087},{\"end\":61098,\"start\":61097},{\"end\":61141,\"start\":61134},{\"end\":61157,\"start\":61148},{\"end\":61289,\"start\":61288},{\"end\":61291,\"start\":61290},{\"end\":61776,\"start\":61775},{\"end\":61778,\"start\":61777},{\"end\":61790,\"start\":61789},{\"end\":61792,\"start\":61791},{\"end\":61805,\"start\":61804},{\"end\":62239,\"start\":62238},{\"end\":62241,\"start\":62240},{\"end\":62253,\"start\":62252},{\"end\":62322,\"start\":62321},{\"end\":62330,\"start\":62329},{\"end\":62479,\"start\":62478},{\"end\":62481,\"start\":62480},{\"end\":62493,\"start\":62492},{\"end\":62630,\"start\":62629},{\"end\":62639,\"start\":62638},{\"end\":62643,\"start\":62640},{\"end\":62772,\"start\":62771},{\"end\":62781,\"start\":62780},{\"end\":62785,\"start\":62782},{\"end\":62792,\"start\":62791}]", "bib_author_last_name": "[{\"end\":52541,\"start\":52533},{\"end\":52552,\"start\":52547},{\"end\":52563,\"start\":52556},{\"end\":52663,\"start\":52658},{\"end\":52677,\"start\":52667},{\"end\":52692,\"start\":52683},{\"end\":52851,\"start\":52843},{\"end\":52860,\"start\":52855},{\"end\":52872,\"start\":52864},{\"end\":52882,\"start\":52876},{\"end\":53000,\"start\":52985},{\"end\":53011,\"start\":53004},{\"end\":53021,\"start\":53015},{\"end\":53032,\"start\":53025},{\"end\":53151,\"start\":53146},{\"end\":53161,\"start\":53155},{\"end\":53171,\"start\":53165},{\"end\":53282,\"start\":53275},{\"end\":53290,\"start\":53286},{\"end\":53303,\"start\":53296},{\"end\":53312,\"start\":53307},{\"end\":53330,\"start\":53316},{\"end\":53477,\"start\":53473},{\"end\":53491,\"start\":53481},{\"end\":53501,\"start\":53495},{\"end\":53511,\"start\":53505},{\"end\":53524,\"start\":53515},{\"end\":53687,\"start\":53683},{\"end\":53697,\"start\":53691},{\"end\":53710,\"start\":53701},{\"end\":53720,\"start\":53714},{\"end\":53734,\"start\":53724},{\"end\":54044,\"start\":54040},{\"end\":54055,\"start\":54048},{\"end\":54065,\"start\":54059},{\"end\":54275,\"start\":54267},{\"end\":54289,\"start\":54282},{\"end\":54299,\"start\":54293},{\"end\":54310,\"start\":54303},{\"end\":54321,\"start\":54314},{\"end\":54405,\"start\":54397},{\"end\":54418,\"start\":54411},{\"end\":54513,\"start\":54505},{\"end\":54653,\"start\":54644},{\"end\":54663,\"start\":54657},{\"end\":54672,\"start\":54667},{\"end\":54683,\"start\":54676},{\"end\":54696,\"start\":54689},{\"end\":54708,\"start\":54700},{\"end\":54848,\"start\":54839},{\"end\":54862,\"start\":54854},{\"end\":54875,\"start\":54868},{\"end\":54887,\"start\":54879},{\"end\":55277,\"start\":55268},{\"end\":55291,\"start\":55283},{\"end\":55301,\"start\":55295},{\"end\":55314,\"start\":55307},{\"end\":55326,\"start\":55318},{\"end\":55444,\"start\":55435},{\"end\":55454,\"start\":55448},{\"end\":55465,\"start\":55458},{\"end\":55475,\"start\":55469},{\"end\":55578,\"start\":55570},{\"end\":55599,\"start\":55586},{\"end\":55613,\"start\":55603},{\"end\":55627,\"start\":55619},{\"end\":55802,\"start\":55793},{\"end\":55901,\"start\":55896},{\"end\":55912,\"start\":55905},{\"end\":55920,\"start\":55916},{\"end\":56063,\"start\":56061},{\"end\":56075,\"start\":56067},{\"end\":56086,\"start\":56079},{\"end\":56170,\"start\":56165},{\"end\":56242,\"start\":56234},{\"end\":56251,\"start\":56246},{\"end\":56263,\"start\":56255},{\"end\":56274,\"start\":56267},{\"end\":56285,\"start\":56278},{\"end\":56404,\"start\":56401},{\"end\":56414,\"start\":56410},{\"end\":56425,\"start\":56420},{\"end\":56435,\"start\":56431},{\"end\":56446,\"start\":56441},{\"end\":56454,\"start\":56450},{\"end\":56556,\"start\":56551},{\"end\":56562,\"start\":56560},{\"end\":56570,\"start\":56566},{\"end\":56576,\"start\":56574},{\"end\":56671,\"start\":56659},{\"end\":56682,\"start\":56675},{\"end\":56693,\"start\":56686},{\"end\":56703,\"start\":56697},{\"end\":56715,\"start\":56709},{\"end\":56727,\"start\":56721},{\"end\":56839,\"start\":56833},{\"end\":56847,\"start\":56843},{\"end\":56857,\"start\":56851},{\"end\":56869,\"start\":56861},{\"end\":56880,\"start\":56873},{\"end\":57022,\"start\":57015},{\"end\":57036,\"start\":57026},{\"end\":57047,\"start\":57040},{\"end\":57058,\"start\":57053},{\"end\":57166,\"start\":57162},{\"end\":57181,\"start\":57172},{\"end\":57319,\"start\":57316},{\"end\":57337,\"start\":57331},{\"end\":57349,\"start\":57343},{\"end\":57445,\"start\":57443},{\"end\":57453,\"start\":57449},{\"end\":57461,\"start\":57457},{\"end\":57467,\"start\":57465},{\"end\":57566,\"start\":57561},{\"end\":57576,\"start\":57570},{\"end\":57587,\"start\":57580},{\"end\":57738,\"start\":57729},{\"end\":57747,\"start\":57742},{\"end\":57753,\"start\":57749},{\"end\":58323,\"start\":58319},{\"end\":58906,\"start\":58896},{\"end\":58916,\"start\":58910},{\"end\":58928,\"start\":58922},{\"end\":58941,\"start\":58932},{\"end\":59201,\"start\":59195},{\"end\":59286,\"start\":59280},{\"end\":59299,\"start\":59290},{\"end\":59309,\"start\":59303},{\"end\":59320,\"start\":59313},{\"end\":59504,\"start\":59496},{\"end\":59518,\"start\":59508},{\"end\":59529,\"start\":59522},{\"end\":59540,\"start\":59533},{\"end\":59552,\"start\":59544},{\"end\":59633,\"start\":59624},{\"end\":59645,\"start\":59637},{\"end\":59657,\"start\":59649},{\"end\":59671,\"start\":59661},{\"end\":59683,\"start\":59677},{\"end\":59698,\"start\":59691},{\"end\":59705,\"start\":59700},{\"end\":59800,\"start\":59792},{\"end\":59812,\"start\":59806},{\"end\":59823,\"start\":59816},{\"end\":59835,\"start\":59827},{\"end\":59848,\"start\":59839},{\"end\":59861,\"start\":59852},{\"end\":59871,\"start\":59865},{\"end\":59878,\"start\":59875},{\"end\":59887,\"start\":59882},{\"end\":59898,\"start\":59891},{\"end\":60020,\"start\":60012},{\"end\":60032,\"start\":60026},{\"end\":60043,\"start\":60036},{\"end\":60056,\"start\":60047},{\"end\":60069,\"start\":60060},{\"end\":60076,\"start\":60073},{\"end\":60086,\"start\":60080},{\"end\":60192,\"start\":60189},{\"end\":60201,\"start\":60196},{\"end\":60214,\"start\":60205},{\"end\":60228,\"start\":60218},{\"end\":60293,\"start\":60284},{\"end\":60304,\"start\":60297},{\"end\":60368,\"start\":60361},{\"end\":60473,\"start\":60466},{\"end\":60484,\"start\":60477},{\"end\":60499,\"start\":60490},{\"end\":60512,\"start\":60505},{\"end\":60523,\"start\":60518},{\"end\":60651,\"start\":60645},{\"end\":60660,\"start\":60655},{\"end\":60671,\"start\":60664},{\"end\":60683,\"start\":60675},{\"end\":60695,\"start\":60687},{\"end\":60859,\"start\":60850},{\"end\":60869,\"start\":60863},{\"end\":60879,\"start\":60873},{\"end\":60889,\"start\":60883},{\"end\":61065,\"start\":61056},{\"end\":61075,\"start\":61069},{\"end\":61085,\"start\":61079},{\"end\":61095,\"start\":61089},{\"end\":61105,\"start\":61099},{\"end\":61146,\"start\":61142},{\"end\":61300,\"start\":61292},{\"end\":61407,\"start\":61396},{\"end\":61787,\"start\":61779},{\"end\":61802,\"start\":61793},{\"end\":61814,\"start\":61806},{\"end\":62250,\"start\":62242},{\"end\":62262,\"start\":62254},{\"end\":62327,\"start\":62323},{\"end\":62341,\"start\":62331},{\"end\":62490,\"start\":62482},{\"end\":62500,\"start\":62494},{\"end\":62636,\"start\":62631},{\"end\":62647,\"start\":62644},{\"end\":62778,\"start\":62773},{\"end\":62789,\"start\":62786},{\"end\":62801,\"start\":62793}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":52588,\"start\":52464},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":10917238},\"end\":52725,\"start\":52590},{\"attributes\":{\"id\":\"b2\"},\"end\":52901,\"start\":52727},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":218833902},\"end\":53045,\"start\":52903},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":220769224},\"end\":53194,\"start\":53047},{\"attributes\":{\"id\":\"b5\"},\"end\":53367,\"start\":53196},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":234856285},\"end\":53568,\"start\":53369},{\"attributes\":{\"doi\":\"10.6084/m9.figshare.13636589.v2\",\"id\":\"b7\"},\"end\":53771,\"start\":53570},{\"attributes\":{\"doi\":\"10.6084/m9.figshare.13636589.v1\",\"id\":\"b8\"},\"end\":53919,\"start\":53773},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":248631880},\"end\":54125,\"start\":53921},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":213006977},\"end\":54333,\"start\":54127},{\"attributes\":{\"id\":\"b11\"},\"end\":54449,\"start\":54335},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":51711001},\"end\":54536,\"start\":54451},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":47019892},\"end\":54727,\"start\":54538},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":211103257},\"end\":54906,\"start\":54729},{\"attributes\":{\"doi\":\"10.1145/3377812.3382147\",\"id\":\"b15\",\"matched_paper_id\":211106787},\"end\":55191,\"start\":54908},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":49866368},\"end\":55347,\"start\":55193},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":250259502},\"end\":55508,\"start\":55349},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":18814593},\"end\":55644,\"start\":55510},{\"attributes\":{\"id\":\"b19\"},\"end\":55673,\"start\":55646},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":248912249},\"end\":55835,\"start\":55675},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":263790976},\"end\":55953,\"start\":55837},{\"attributes\":{\"id\":\"b22\"},\"end\":56096,\"start\":55955},{\"attributes\":{\"id\":\"b23\"},\"end\":56186,\"start\":56098},{\"attributes\":{\"id\":\"b24\"},\"end\":56304,\"start\":56188},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":4363650},\"end\":56483,\"start\":56306},{\"attributes\":{\"id\":\"b26\"},\"end\":56592,\"start\":56485},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":207144667},\"end\":56755,\"start\":56594},{\"attributes\":{\"id\":\"b28\"},\"end\":56901,\"start\":56757},{\"attributes\":{\"id\":\"b29\"},\"end\":57093,\"start\":56903},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":232073205},\"end\":57213,\"start\":57095},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":18761167},\"end\":57367,\"start\":57215},{\"attributes\":{\"id\":\"b32\"},\"end\":57487,\"start\":57369},{\"attributes\":{\"doi\":\"10.1007/s10664-019-09714-9\",\"id\":\"b33\",\"matched_paper_id\":182355593},\"end\":57641,\"start\":57489},{\"attributes\":{\"id\":\"b34\"},\"end\":57796,\"start\":57643},{\"attributes\":{\"id\":\"b35\"},\"end\":57843,\"start\":57798},{\"attributes\":{\"id\":\"b36\"},\"end\":57882,\"start\":57845},{\"attributes\":{\"id\":\"b37\"},\"end\":57940,\"start\":57884},{\"attributes\":{\"id\":\"b38\"},\"end\":57989,\"start\":57942},{\"attributes\":{\"id\":\"b39\"},\"end\":58024,\"start\":57991},{\"attributes\":{\"id\":\"b40\"},\"end\":58072,\"start\":58026},{\"attributes\":{\"id\":\"b41\"},\"end\":58098,\"start\":58074},{\"attributes\":{\"id\":\"b42\"},\"end\":58131,\"start\":58100},{\"attributes\":{\"id\":\"b43\"},\"end\":58199,\"start\":58133},{\"attributes\":{\"id\":\"b44\"},\"end\":58222,\"start\":58201},{\"attributes\":{\"id\":\"b45\"},\"end\":58340,\"start\":58224},{\"attributes\":{\"id\":\"b46\"},\"end\":58400,\"start\":58342},{\"attributes\":{\"id\":\"b47\"},\"end\":58438,\"start\":58402},{\"attributes\":{\"id\":\"b48\"},\"end\":58474,\"start\":58440},{\"attributes\":{\"id\":\"b49\"},\"end\":58536,\"start\":58476},{\"attributes\":{\"id\":\"b50\"},\"end\":58593,\"start\":58538},{\"attributes\":{\"id\":\"b51\"},\"end\":58626,\"start\":58595},{\"attributes\":{\"id\":\"b52\"},\"end\":58663,\"start\":58628},{\"attributes\":{\"id\":\"b53\"},\"end\":58696,\"start\":58665},{\"attributes\":{\"id\":\"b54\"},\"end\":58746,\"start\":58698},{\"attributes\":{\"id\":\"b55\"},\"end\":58777,\"start\":58748},{\"attributes\":{\"id\":\"b56\"},\"end\":58817,\"start\":58779},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":15247250},\"end\":58965,\"start\":58819},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":17430315},\"end\":59049,\"start\":58967},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":67762867},\"end\":59167,\"start\":59051},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":9116234},\"end\":59238,\"start\":59169},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":118646604},\"end\":59390,\"start\":59240},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":17830426},\"end\":59570,\"start\":59392},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":15981214},\"end\":59725,\"start\":59572},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":27811622},\"end\":59913,\"start\":59727},{\"attributes\":{\"id\":\"b65\"},\"end\":60119,\"start\":59915},{\"attributes\":{\"id\":\"b66\"},\"end\":60248,\"start\":60121},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":15141657},\"end\":60321,\"start\":60250},{\"attributes\":{\"id\":\"b68\"},\"end\":60385,\"start\":60323},{\"attributes\":{\"id\":\"b69\",\"matched_paper_id\":208213011},\"end\":60541,\"start\":60387},{\"attributes\":{\"id\":\"b70\",\"matched_paper_id\":1751780},\"end\":60717,\"start\":60543},{\"attributes\":{\"id\":\"b71\"},\"end\":60908,\"start\":60719},{\"attributes\":{\"id\":\"b72\",\"matched_paper_id\":974167},\"end\":61126,\"start\":60910},{\"attributes\":{\"id\":\"b73\"},\"end\":61174,\"start\":61128},{\"attributes\":{\"id\":\"b74\"},\"end\":61311,\"start\":61176},{\"attributes\":{\"doi\":\"10.5281/zenodo.6336048\",\"id\":\"b75\"},\"end\":61392,\"start\":61313},{\"attributes\":{\"id\":\"b76\"},\"end\":61428,\"start\":61394},{\"attributes\":{\"id\":\"b77\"},\"end\":61539,\"start\":61430},{\"attributes\":{\"doi\":\"10.5281/zenodo.8111687\",\"id\":\"b78\"},\"end\":61565,\"start\":61541},{\"attributes\":{\"id\":\"b79\"},\"end\":61612,\"start\":61567},{\"attributes\":{\"id\":\"b80\"},\"end\":61659,\"start\":61614},{\"attributes\":{\"id\":\"b81\"},\"end\":61825,\"start\":61661},{\"attributes\":{\"id\":\"b82\"},\"end\":61937,\"start\":61827},{\"attributes\":{\"doi\":\"10.5281/zenodo.4898432\",\"id\":\"b83\"},\"end\":62041,\"start\":61939},{\"attributes\":{\"id\":\"b84\"},\"end\":62122,\"start\":62043},{\"attributes\":{\"id\":\"b85\",\"matched_paper_id\":234370607},\"end\":62277,\"start\":62124},{\"attributes\":{\"id\":\"b86\",\"matched_paper_id\":52306413},\"end\":62413,\"start\":62279},{\"attributes\":{\"doi\":\"10.1016/j.scico.2014.11.013\",\"id\":\"b87\",\"matched_paper_id\":14389490},\"end\":62569,\"start\":62415},{\"attributes\":{\"id\":\"b88\"},\"end\":62690,\"start\":62571},{\"attributes\":{\"id\":\"b89\",\"matched_paper_id\":6792399},\"end\":62875,\"start\":62692}]", "bib_title": "[{\"end\":52654,\"start\":52590},{\"end\":52981,\"start\":52903},{\"end\":53140,\"start\":53047},{\"end\":53469,\"start\":53369},{\"end\":54036,\"start\":53921},{\"end\":54263,\"start\":54127},{\"end\":54499,\"start\":54451},{\"end\":54638,\"start\":54538},{\"end\":54833,\"start\":54729},{\"end\":54984,\"start\":54908},{\"end\":55262,\"start\":55193},{\"end\":55429,\"start\":55349},{\"end\":55566,\"start\":55510},{\"end\":55787,\"start\":55675},{\"end\":55890,\"start\":55837},{\"end\":56397,\"start\":56306},{\"end\":56655,\"start\":56594},{\"end\":57011,\"start\":56903},{\"end\":57158,\"start\":57095},{\"end\":57312,\"start\":57215},{\"end\":57553,\"start\":57489},{\"end\":57718,\"start\":57643},{\"end\":58492,\"start\":58476},{\"end\":58892,\"start\":58819},{\"end\":59033,\"start\":58967},{\"end\":59132,\"start\":59051},{\"end\":59189,\"start\":59169},{\"end\":59276,\"start\":59240},{\"end\":59488,\"start\":59392},{\"end\":59620,\"start\":59572},{\"end\":59788,\"start\":59727},{\"end\":60280,\"start\":60250},{\"end\":60462,\"start\":60387},{\"end\":60641,\"start\":60543},{\"end\":61052,\"start\":60910},{\"end\":62236,\"start\":62124},{\"end\":62319,\"start\":62279},{\"end\":62476,\"start\":62415},{\"end\":62769,\"start\":62692}]", "bib_author": "[{\"end\":52543,\"start\":52531},{\"end\":52554,\"start\":52543},{\"end\":52565,\"start\":52554},{\"end\":52665,\"start\":52656},{\"end\":52679,\"start\":52665},{\"end\":52694,\"start\":52679},{\"end\":52853,\"start\":52841},{\"end\":52862,\"start\":52853},{\"end\":52874,\"start\":52862},{\"end\":52884,\"start\":52874},{\"end\":53002,\"start\":52983},{\"end\":53013,\"start\":53002},{\"end\":53023,\"start\":53013},{\"end\":53034,\"start\":53023},{\"end\":53153,\"start\":53142},{\"end\":53163,\"start\":53153},{\"end\":53173,\"start\":53163},{\"end\":53284,\"start\":53273},{\"end\":53292,\"start\":53284},{\"end\":53305,\"start\":53292},{\"end\":53314,\"start\":53305},{\"end\":53332,\"start\":53314},{\"end\":53479,\"start\":53471},{\"end\":53493,\"start\":53479},{\"end\":53503,\"start\":53493},{\"end\":53513,\"start\":53503},{\"end\":53526,\"start\":53513},{\"end\":53689,\"start\":53681},{\"end\":53699,\"start\":53689},{\"end\":53712,\"start\":53699},{\"end\":53722,\"start\":53712},{\"end\":53736,\"start\":53722},{\"end\":54046,\"start\":54038},{\"end\":54057,\"start\":54046},{\"end\":54067,\"start\":54057},{\"end\":54277,\"start\":54265},{\"end\":54291,\"start\":54277},{\"end\":54301,\"start\":54291},{\"end\":54312,\"start\":54301},{\"end\":54323,\"start\":54312},{\"end\":54407,\"start\":54393},{\"end\":54420,\"start\":54407},{\"end\":54515,\"start\":54501},{\"end\":54655,\"start\":54640},{\"end\":54665,\"start\":54655},{\"end\":54674,\"start\":54665},{\"end\":54685,\"start\":54674},{\"end\":54698,\"start\":54685},{\"end\":54710,\"start\":54698},{\"end\":54850,\"start\":54835},{\"end\":54864,\"start\":54850},{\"end\":54877,\"start\":54864},{\"end\":54889,\"start\":54877},{\"end\":55279,\"start\":55264},{\"end\":55293,\"start\":55279},{\"end\":55303,\"start\":55293},{\"end\":55316,\"start\":55303},{\"end\":55328,\"start\":55316},{\"end\":55446,\"start\":55431},{\"end\":55456,\"start\":55446},{\"end\":55467,\"start\":55456},{\"end\":55477,\"start\":55467},{\"end\":55580,\"start\":55568},{\"end\":55601,\"start\":55580},{\"end\":55615,\"start\":55601},{\"end\":55629,\"start\":55615},{\"end\":55804,\"start\":55789},{\"end\":55903,\"start\":55892},{\"end\":55914,\"start\":55903},{\"end\":55922,\"start\":55914},{\"end\":56065,\"start\":56059},{\"end\":56077,\"start\":56065},{\"end\":56088,\"start\":56077},{\"end\":56172,\"start\":56163},{\"end\":56244,\"start\":56232},{\"end\":56253,\"start\":56244},{\"end\":56265,\"start\":56253},{\"end\":56276,\"start\":56265},{\"end\":56287,\"start\":56276},{\"end\":56406,\"start\":56399},{\"end\":56416,\"start\":56406},{\"end\":56427,\"start\":56416},{\"end\":56437,\"start\":56427},{\"end\":56448,\"start\":56437},{\"end\":56456,\"start\":56448},{\"end\":56558,\"start\":56549},{\"end\":56564,\"start\":56558},{\"end\":56572,\"start\":56564},{\"end\":56578,\"start\":56572},{\"end\":56673,\"start\":56657},{\"end\":56684,\"start\":56673},{\"end\":56695,\"start\":56684},{\"end\":56705,\"start\":56695},{\"end\":56717,\"start\":56705},{\"end\":56729,\"start\":56717},{\"end\":56841,\"start\":56831},{\"end\":56849,\"start\":56841},{\"end\":56859,\"start\":56849},{\"end\":56871,\"start\":56859},{\"end\":56882,\"start\":56871},{\"end\":57024,\"start\":57013},{\"end\":57038,\"start\":57024},{\"end\":57049,\"start\":57038},{\"end\":57060,\"start\":57049},{\"end\":57168,\"start\":57160},{\"end\":57183,\"start\":57168},{\"end\":57321,\"start\":57314},{\"end\":57329,\"start\":57321},{\"end\":57339,\"start\":57329},{\"end\":57351,\"start\":57339},{\"end\":57447,\"start\":57441},{\"end\":57455,\"start\":57447},{\"end\":57463,\"start\":57455},{\"end\":57469,\"start\":57463},{\"end\":57568,\"start\":57555},{\"end\":57578,\"start\":57568},{\"end\":57589,\"start\":57578},{\"end\":57740,\"start\":57720},{\"end\":57749,\"start\":57740},{\"end\":57755,\"start\":57749},{\"end\":58325,\"start\":58316},{\"end\":58908,\"start\":58894},{\"end\":58918,\"start\":58908},{\"end\":58930,\"start\":58918},{\"end\":58943,\"start\":58930},{\"end\":59203,\"start\":59191},{\"end\":59288,\"start\":59278},{\"end\":59301,\"start\":59288},{\"end\":59311,\"start\":59301},{\"end\":59322,\"start\":59311},{\"end\":59506,\"start\":59490},{\"end\":59520,\"start\":59506},{\"end\":59531,\"start\":59520},{\"end\":59542,\"start\":59531},{\"end\":59554,\"start\":59542},{\"end\":59635,\"start\":59622},{\"end\":59647,\"start\":59635},{\"end\":59659,\"start\":59647},{\"end\":59673,\"start\":59659},{\"end\":59685,\"start\":59673},{\"end\":59700,\"start\":59685},{\"end\":59707,\"start\":59700},{\"end\":59802,\"start\":59790},{\"end\":59814,\"start\":59802},{\"end\":59825,\"start\":59814},{\"end\":59837,\"start\":59825},{\"end\":59850,\"start\":59837},{\"end\":59863,\"start\":59850},{\"end\":59873,\"start\":59863},{\"end\":59880,\"start\":59873},{\"end\":59889,\"start\":59880},{\"end\":59900,\"start\":59889},{\"end\":60022,\"start\":60010},{\"end\":60034,\"start\":60022},{\"end\":60045,\"start\":60034},{\"end\":60058,\"start\":60045},{\"end\":60071,\"start\":60058},{\"end\":60078,\"start\":60071},{\"end\":60088,\"start\":60078},{\"end\":60194,\"start\":60185},{\"end\":60203,\"start\":60194},{\"end\":60216,\"start\":60203},{\"end\":60230,\"start\":60216},{\"end\":60295,\"start\":60282},{\"end\":60306,\"start\":60295},{\"end\":60370,\"start\":60359},{\"end\":60475,\"start\":60464},{\"end\":60486,\"start\":60475},{\"end\":60501,\"start\":60486},{\"end\":60514,\"start\":60501},{\"end\":60525,\"start\":60514},{\"end\":60653,\"start\":60643},{\"end\":60662,\"start\":60653},{\"end\":60673,\"start\":60662},{\"end\":60685,\"start\":60673},{\"end\":60697,\"start\":60685},{\"end\":60861,\"start\":60848},{\"end\":60871,\"start\":60861},{\"end\":60881,\"start\":60871},{\"end\":60891,\"start\":60881},{\"end\":61067,\"start\":61054},{\"end\":61077,\"start\":61067},{\"end\":61087,\"start\":61077},{\"end\":61097,\"start\":61087},{\"end\":61107,\"start\":61097},{\"end\":61148,\"start\":61134},{\"end\":61160,\"start\":61148},{\"end\":61302,\"start\":61288},{\"end\":61409,\"start\":61396},{\"end\":61789,\"start\":61775},{\"end\":61804,\"start\":61789},{\"end\":61816,\"start\":61804},{\"end\":62252,\"start\":62238},{\"end\":62264,\"start\":62252},{\"end\":62329,\"start\":62321},{\"end\":62343,\"start\":62329},{\"end\":62492,\"start\":62478},{\"end\":62502,\"start\":62492},{\"end\":62638,\"start\":62629},{\"end\":62649,\"start\":62638},{\"end\":62780,\"start\":62771},{\"end\":62791,\"start\":62780},{\"end\":62803,\"start\":62791}]", "bib_venue": "[{\"end\":55183,\"start\":55100},{\"end\":52529,\"start\":52464},{\"end\":52711,\"start\":52694},{\"end\":52839,\"start\":52727},{\"end\":53039,\"start\":53034},{\"end\":53177,\"start\":53173},{\"end\":53271,\"start\":53196},{\"end\":53555,\"start\":53526},{\"end\":53679,\"start\":53570},{\"end\":53882,\"start\":53773},{\"end\":54114,\"start\":54067},{\"end\":54327,\"start\":54323},{\"end\":54391,\"start\":54335},{\"end\":54523,\"start\":54515},{\"end\":54714,\"start\":54710},{\"end\":54893,\"start\":54889},{\"end\":55098,\"start\":55009},{\"end\":55334,\"start\":55328},{\"end\":55494,\"start\":55477},{\"end\":55633,\"start\":55629},{\"end\":55656,\"start\":55646},{\"end\":55821,\"start\":55804},{\"end\":55939,\"start\":55922},{\"end\":56057,\"start\":55955},{\"end\":56161,\"start\":56098},{\"end\":56230,\"start\":56188},{\"end\":56475,\"start\":56456},{\"end\":56547,\"start\":56485},{\"end\":56746,\"start\":56729},{\"end\":56829,\"start\":56757},{\"end\":57079,\"start\":57060},{\"end\":57200,\"start\":57183},{\"end\":57356,\"start\":57351},{\"end\":57439,\"start\":57369},{\"end\":57632,\"start\":57615},{\"end\":57768,\"start\":57755},{\"end\":57814,\"start\":57798},{\"end\":57866,\"start\":57845},{\"end\":57922,\"start\":57884},{\"end\":57972,\"start\":57942},{\"end\":58007,\"start\":57991},{\"end\":58054,\"start\":58026},{\"end\":58081,\"start\":58074},{\"end\":58114,\"start\":58100},{\"end\":58178,\"start\":58133},{\"end\":58205,\"start\":58201},{\"end\":58314,\"start\":58224},{\"end\":58383,\"start\":58342},{\"end\":58415,\"start\":58402},{\"end\":58457,\"start\":58440},{\"end\":58499,\"start\":58494},{\"end\":58576,\"start\":58538},{\"end\":58609,\"start\":58595},{\"end\":58642,\"start\":58628},{\"end\":58678,\"start\":58665},{\"end\":58729,\"start\":58698},{\"end\":58760,\"start\":58748},{\"end\":58799,\"start\":58779},{\"end\":58951,\"start\":58943},{\"end\":59039,\"start\":59035},{\"end\":59158,\"start\":59134},{\"end\":59225,\"start\":59203},{\"end\":59376,\"start\":59322},{\"end\":59564,\"start\":59554},{\"end\":59713,\"start\":59707},{\"end\":59904,\"start\":59900},{\"end\":60008,\"start\":59915},{\"end\":60183,\"start\":60121},{\"end\":60310,\"start\":60306},{\"end\":60357,\"start\":60323},{\"end\":60531,\"start\":60525},{\"end\":60701,\"start\":60697},{\"end\":60846,\"start\":60719},{\"end\":61112,\"start\":61107},{\"end\":61132,\"start\":61128},{\"end\":61286,\"start\":61176},{\"end\":61381,\"start\":61335},{\"end\":61528,\"start\":61430},{\"end\":61595,\"start\":61567},{\"end\":61636,\"start\":61614},{\"end\":61773,\"start\":61661},{\"end\":61914,\"start\":61827},{\"end\":62008,\"start\":61939},{\"end\":62103,\"start\":62043},{\"end\":62268,\"start\":62264},{\"end\":62399,\"start\":62343},{\"end\":62560,\"start\":62529},{\"end\":62627,\"start\":62571},{\"end\":62869,\"start\":62803}]"}}}, "year": 2023, "month": 12, "day": 17}