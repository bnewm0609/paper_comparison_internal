{"id": 258617356, "updated": "2023-06-08 05:52:13.839", "metadata": {"title": "HyperSpec: Ultrafast Mass Spectra Clustering in Hyperdimensional Space", "authors": "[{\"first\":\"Weihong\",\"last\":\"Xu\",\"middle\":[]},{\"first\":\"Jaeyoung\",\"last\":\"Kang\",\"middle\":[]},{\"first\":\"Wout\",\"last\":\"Bittremieux\",\"middle\":[]},{\"first\":\"Niema\",\"last\":\"Moshiri\",\"middle\":[]},{\"first\":\"Tajana\",\"last\":\"Rosing\",\"middle\":[]}]", "venue": "Journal of Proteome Research", "journal": "Journal of Proteome Research", "publication_date": {"year": 2023, "month": 5, "day": 11}, "abstract": "As current shotgun proteomics experiments can produce gigabytes of mass spectrometry data per hour, processing these massive data volumes has become progressively more challenging. Spectral clustering is an effective approach to speed up downstream data processing by merging highly similar spectra to minimize data redundancy. However, because state-of-the-art spectral clustering tools fail to achieve optimal runtimes, this simply moves the processing bottleneck. In this work, we present a fast spectral clustering tool, HyperSpec, based on hyperdimensional computing (HDC). HDC shows promising clustering capability while only requiring lightweight binary operations with high parallelism that can be optimized using low-level hardware architectures, making it possible to run HyperSpec on graphics processing units to achieve extremely efficient spectral clustering performance. Additionally, HyperSpec includes optimized data preprocessing modules to reduce the spectrum preprocessing time, which is a critical bottleneck during spectral clustering. Based on experiments using various mass spectrometry data sets, HyperSpec produces results with comparable clustering quality as state-of-the-art spectral clustering tools while achieving speedups by orders of magnitude, shortening the clustering runtime of over 21 million spectra from 4 h to only 24 min.", "fields_of_study": "[\"Medicine\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": "37166120", "pubmedcentral": "10243109", "dblp": null, "doi": "10.1021/acs.jproteome.2c00612"}}, "content": {"source": {"pdf_hash": "da9b4d6ec65e79908cad664c9526cb11eb6da5f9", "pdf_src": "PubMedCentral", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://doi.org/10.1021/acs.jproteome.2c00612", "status": "HYBRID"}}, "grobid": {"id": "cd8e8cba25fd00ca0a6249a9060e3a8dbb30604d", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/da9b4d6ec65e79908cad664c9526cb11eb6da5f9.txt", "contents": "\nHyperSpec: Ultrafast Mass Spectra Clustering in Hyperdimensional Space\n\n\nWeihong Xu \nJaeyoung Kang \nWout Bittremieux \nNiema Moshiri \nTajana Rosing \nHyperSpec: Ultrafast Mass Spectra Clustering in Hyperdimensional Space\n10.1021/acs.jproteome.2c00612Cite This: J. Proteome Res. 2023, 22, 1639\u22121648 Read Online ACCESS Metrics & More Article Recommendations * s\u0131 Supporting Informationmass spectrometryspectral clusteringpeptide identificationhyperdimensional computingruntime optimization\nAs current shotgun proteomics experiments can produce gigabytes of mass spectrometry data per hour, processing these massive data volumes has become progressively more challenging. Spectral clustering is an effective approach to speed up downstream data processing by merging highly similar spectra to minimize data redundancy. However, because state-of-the-art spectral clustering tools fail to achieve optimal runtimes, this simply moves the processing bottleneck. In this work, we present a fast spectral clustering tool, HyperSpec, based on hyperdimensional computing (HDC). HDC shows promising clustering capability while only requiring lightweight binary operations with high parallelism that can be optimized using low-level hardware architectures, making it possible to run HyperSpec on graphics processing units to achieve extremely efficient spectral clustering performance. Additionally, HyperSpec includes optimized data preprocessing modules to reduce the spectrum preprocessing time, which is a critical bottleneck during spectral clustering. Based on experiments using various mass spectrometry data sets, HyperSpec produces results with comparable clustering quality as state-of-the-art spectral clustering tools while achieving speedups by orders of magnitude, shortening the clustering runtime of over 21 million spectra from 4 h to only 24 min.\n\nINTRODUCTION\n\nMass spectrometry (MS) is currently the dominant analytical technique to analyze the protein composition of biological samples and study the proteome. 1\u22123 Fueled by progress in instrumentation over the previous decade, modern MS experiments can consist of millions of mass spectra and require tens to hundreds of gigabytes storage space. However, because a typical spectral identification workflow consists of exhaustively comparing each collected MS/MS spectrum against the digested protein database to find relevant peptide\u2212spectrum matches, the generation of increasingly large data sets can become problematic as MS data analysis becomes excessively time consuming. For example, analyzing a large-scale draft human proteome data set, 1 amounting to 25 million MS/MS spectra and 131 GB of MS data, requires several hours to days of processing time.\n\nSpectral clustering is an effective approach to shortening the spectral identification runtime by reducing the search space. 4\u22129 Prior to peptide identification, highly similar MS/MS spectra are first clustered together, and each cluster is represented by a consensus spectrum. The benefits of this approach are 3-fold. First, clustering minimizes data redundancy by grouping repeated MS/MS spectra and representing them as a single consensus spectrum. Second, rather than having to analyze all raw spectra, downstream tools only need to process a smaller number of consensus spectra. For example, Wang et al. 4 reported using spectral clustering to reduce the runtime of subsequent peptide identification by over 50%. Third, the downstream analysis can achieve better results by operating on high-quality consensus spectra with a higher signal-to-noise ratio compared to the raw spectra. 10 Previous spectral clustering tools have focused on optimizing clustering quality and clustering speed. For example, MS-Cluster 5 and spectra-cluster 8 use an iterative greedy approach to efficiently merge similar spectra. spectra-cluster has been utilized for large-scale clustering of public MS data in the PRoteomics IDEntifications (PRIDE) database 11 to build the PRIDE-Cluster spectral libraries. MaRaCluster 6 proposed an optimized similarity metric that relies on the rarity of fragment peaks to compare MS/MS spectra. Based on the intuition that peaks shared by only a few spectra offer more evidence than peaks shared by a large number of spectra, relative to a background frequency of fragment peaks with specific m/z values, matches of frequent fragment peaks contribute less to the spectrum similarity than matches of rare peaks. Next, MaRaCluster performs hierarchical clustering with complete linkage to group similar spectra in clusters. However, the clustering speed of MS-Cluster, spectra-cluster, and MaR-aCluster can be extremely slow on large data sets as they run on CPU hardware only, which lacks massive parallelism. For example, Bittremieux et al. 9 reported that these tools took 8\u2212 30 h to cluster a draft human proteome data set consisting of 25 million MS/MS spectra. 1 Unfortunately, such long clustering runtime negates any potential benefits of shortened runtime from downstream applications. Additionally, as current MS data repositories contain orders of magnitude more data, with several billions of MS/MS spectra currently available, performing spectral clustering at the repository scale becomes increasingly challenging and computationally infeasible.\n\nSeveral spectral clustering tools have tried to address this issue by focusing on processing speed. msCRUSH 4 utilizes locality-sensitive hashing (LSH) to achieve fast clustering speeds by projecting similar spectra into shared LSH buckets to avoid unnecessary pairwise spectrum comparisons. Within each bucket, msCRUSH then uses a greedy spectrum merging strategy similar to MS-Cluster and spectra-cluster to cluster the spectra. falcon 9 first converts spectra to low-dimensional vectors using a hashing strategy. It uses approximate nearest neighbor searching 12 to construct a sparse pairwise distance matrix, which helps to shorten the required runtime.\n\nClusterSheep 7 further optimizes the spectral clustering runtime by offloading computations to a graphics processing unit (GPU). Compared to falcon, ClusterSheep implements function kernels on a GPU to speed up further. Unfortunately, however, despite their efficient runtimes, falcon and Cluster-Sheep exhibit some reduction in clustering quality compared to MaRaCluster and msCRUSH. Consequently, existing spectral clustering tools still lack the ability to yield high clustering quality within a short runtime when processing large-scale data sets.\n\nHere, we propose HyperSpec, a GPU-accelerated spectral clustering library using brain-inspired hyperdimensional computing (HDC). 13 Unlike previous hashing-based methods that project spectra into a low-dimensional space, HDC instead encodes spectra into binary high-dimensional vectors, called hypervectors (HVs). Compared to the low-dimensional embeddings used by msCRUSH 4 and falcon, 9 HVs are superior in the sense that spectra can be encoded as compact, binary vector representations with a minimal loss of information. Additionally, binary HDC operation in Hyper-Spec offers high data parallelism for low-level hardware architecture, which we leveraged by developing fast Python kernels tailored for exploiting GPU resources. By operating on spectra represented as HVs, HyperSpec achieves state-of-theart clustering quality and clustering speed. Our experiments show that HyperSpec is scalable to different data set sizes and significantly accelerates spectral clustering up to 15\u00d7 compared to alternative clustering tools. As an example, clustering of a large draft human proteome data set 1 was reduced from over 4 h (using MaRaCluster) to only 24 min. Meanwhile, the peptide identification quality using clustered consensuses generated by HyperSpec is comparable with state-of-the-art tools. HyperSpec is freely available as open source on GitHub at https://github.com/wh-xu/Hyper-Spec under the BSD license.\n\n\nMATERIALS AND METHODS\n\n\nOverall Flow\n\nHyperSpec is a Python library for spectral clustering that optimally makes use of both CPU and GPU hardware resources (Figure 1a). The overall data processing flow of HyperSpec consists of five main steps, including spectrum preprocessing, bucket division, hyperdimensional (HD) encoding, HD distance computation, and clustering. The first two steps, namely, spectrum preprocessing and bucket division, are executed on a CPU, while the HD encoding and distance computation are accelerated using GPUs. This allows Hyper-Spec to fully utilize both CPU and GPU computing resources for optimized preprocessing and clustering speed.\n\n\nEfficient Spectrum Preprocessing\n\nPrior to spectral clustering, the raw spectra need to be loaded and preprocessed. This is one of the bottlenecks during spectral clustering, contributing 20\u221290% of the overall runtime for several state-of-the-art spectral clustering tools ( Figure 2).\n\nThere are several reasons contributing to the slow preprocessing step. (1) During preprocessing, raw spectra are loaded and parsed from the storage device, after which the parsed spectra are processed to remove noise. The parsing phase is bounded by the speed of parsing spectral data into a numerical format, since the peak information takes up over 95% of the data volume in raw files. (2) Processing the parsed spectra is computation bounded, because it requires sorting, computing, and data manipulation for high-dimensional peak vectors. (3) Another crucial factor limiting the preprocessing speed of existing clustering tools is the underutilization of storage I/O bandwidth. Specifically, modern solid-state drives (SSD) provide GB/s sequential access speeds, but most clustering tools cannot provide sufficient preprocessing speed to match the I/O bandwidth. To this end, HyperSpec optimizes spectrum preprocessing as follows.\n\n\nMultiprocessing.\n\nHyperSpec uses the commonly used Mascot Generic Format (MGF) as an input. HyperSpec utilizes multiprocessing to read each file in parallel and distribute the computation to k independent CPU cores ( Figure 1b). Spectrum preprocessing is composed of two phases: spectrum parsing and preprocessing. We implemented an optimized spectrum data parser and a parallelized preprocessor, which are executed independently on k CPU cores to increase data parallelism. Supplementary Information Figure S1 shows that multiprocessing achieves sublinear speedup and effectively reduces the preprocessing time.\n\n2.2.2. Spectrum Data Parser. Rather than using standalone C++ or Python parsing, 4,5,9 HyperSpec uses a hybrid C+ +\u2212Python program, which balances Python's convenience of code extension and C++'s performance. The low-level spectrum data parser is built using the Spirit X3 parser in Boost C++ 14 to convert MGF data to numerical arrays. After being compiled, the spectrum data parser is invoked by the high-level Python interface using multiprocessing.\n\n\nParallelized Preprocessor.\n\nHyperSpec's parallelized preprocessor reduces the preprocessing time by vectorizing the computation. Specifically, the preprocessing operations are parallelized to multiple CPU cores using just-intime (JIT) compilation by Numba. 15 The JIT compilation requires negligible human intervention while providing great portability for code extension and modification.\n\nThese modules are used to preprocess the spectra as follows. First, peaks related to the precursor ion or with <1% intensity than the base peak intensity are removed. Second, spectra with <5 valid peaks or with a <250 Da mass range between their minimum and maximum peaks are removed. Third, at most, 50 peaks with the highest intensities are retained, and the peak intensities are normalized to [0, 1] using their L2 norm.\n\n\nBucket Division\n\nAn important challenge while clustering large data sets, with n spectra, is that performing all pairwise spectrum comparisons results in a dense pairwise distance matrix with quadratic n ( ) 2 complexity, which is prohibitive for large n. To reduce this requirement, we follow a simple and effective strategy by dividing spectra into buckets. 7,9 After all MGF files have been processed by the spectrum preprocessing module, the spectra are sorted and organized by ascending precursor m/z order ( Figure 1b). Instead of having to cluster an entire data set, the spectra are divided into smaller buckets as follows\n= \u00d7 m z C bucket ( / 1.00794) 1.0005079 i i i \u00c5 \u00c7 \u00c5 \u00c5 \u00c5 \u00c5 \u00c5 \u00c5 \u00c5 \u00c5 \u00d1 \u00d6 \u00d1 \u00d1 \u00d1 \u00d1 \u00d1 \u00d1 \u00d1 \u00d1 (1)\nwhere C i is the precursor charge, m/z i is the precursor m/z associated with the ith spectrum, 1.00794 is the mass of the charge, and 1.0005079 corresponds to the distance between the centers of two adjacent clusters of physically possible peptide masses. 16 Each bucket is represented using an integer. This bucket division scheme significantly reduces the memory usage and runtime by only comparing spectra within the same bucket to compute distance matrices for each bucket, instead of having to perform all pairwise spectrum comparisons for the full data set. Runtime profiling for five popular spectral clustering tools (falcon, 9 msCRUSH, 4 MaRaCluster, 6 spectra-cluster, 8 and MS-Cluster 5 ). The runtimes were evaluated in terms of the time required for spectrum preprocessing and the time required for spectral clustering.\n\n\nGPU-Accelerated Spectral Clustering in Hyperdimensional Space\n\nHyperSpec exploits emerging HDC techniques 13,17 to convert the preprocessed spectra into hyperdimensional space, where data are expressed as high-dimensional vectors with binary values. An important advantage of such HDC encoding is that the transformed data preserve features of the original space while exhibiting opportunities for data parallelism that can be leveraged by parallel GPU architectures. 17 Due to this reason, the final three steps of HyperSpec (HD encoding, HD distance computation, and clustering) can be significantly accelerated using a GPU or CPU. HyperSpec clusters spectra by bucket granularity, meaning that one bucket is encoded, computed, and clustered at a time.\n\n2.4.1. HD Encoding for Spectra. Whereas previous works 4,6 directly computed spectrum similarities and performed clustering using the peak vectors, HyperSpec first uses HD encoding to project spectra to binary hypervectors (HVs) in the hyperdimensional space before performing the distance calculations ( Figure 3). The HD encoding models the locality of the peak m/z and intensity values using two sets of encoding HVs (ID HVs I and level HVs L, respectively). The ID HVs I \u2208{ I 1 , I 2 , ..., I f } reflect the spatial locality of m/z values, while the level HVs L\u2208{ L 1 , L 2 , ..., L Q } reflect the intensity of peaks, where f and Q are the maximum peak index range and intensity quantization levels, respectively. Both I i and L j are Ddimensional binary HVs, such that\nI i , L j \u2208{0,1} D .\nThe two sets of encoding HVs, I and L, are iteratively generated in a stochastic manner. For ID HVs I, first a random HV is generated and regarded as I 1 . Next, the ith HV I i is generated by randomly flipping a specific number of bits from its preceding HV I i\u22121 . In this work, the default number of flipped bits is D 2 . For level HVs L, the generation process of first HV L 1 is identical with I. The difference is that level HVs generate the ith HV L i by flipping D Q bits compared to the preceding HV L i\u22121 . The impact of the generation parameters on the clustering quality is discussed in section 3.\n\nIn the HD spectrum encoding process, the spectra in each bucket are first converted and quantized to two sparse vectors: peak m/z and peak intensity vectors. Based on the m/z and intensity pairs (i, j) in the peak m/z and peak intensity vectors, HyperSpec's HD encoder finds the associated ID HV I i and level HV L j in the encoding HV sets. The fetched ID HV I i and level HV L j are then pointwise XORed by\nI i \u2295L j . After all i j ( , )\n, where denotes the set of peak m/z and intensity vectors, are computed, the HD-encoded spectrum is generated as follows\n= h I L Majority i j i j ( , ) i k j j j j j j j y { z z z z z z z(2)\nwhere Majority(\u00b7) denotes the pointwise majority function that generates the binarized spectrum HV h\u2208{0, 1} D . The HD dimension D needs to be large (normally > 1000) to guarantee representation capability. 17 However, because such a large dimension incurs an expensive encoding cost, we have made two optimizations to reduce the encoding overhead.\n\n2.4.2. Bit Packing. By default, existing CPU or GPU architectures have a byte-level data granularity. However, storing a binary HV as a byte array needs 8\u00d7 larger space than the theoretical number of bits D. To increase the memory efficiency of HyperSpec, HVs are stored in a bit-packed data structure, where every 32 bits of a HV h are packed into a 32bit integer and each HV is stored in an integer array with length D\n\n\n32\n\n, which reduces the memory requirements to store a HV 8-fold.\n\n\nBatched GPU Parallel Encoding.\n\nThe HD encoding is a bit-parallel algorithm, such that each bit of h can be computed independently. We have implemented the HD encoding modules using the CUDA platform 18 and the HDC-specialized GPU memory optimization scheme 19 to exploit this parallelism on GPUs. Before starting the HD encoding process, ID HVs I and level HVs L are transferred to the GPU memory. We found that data transfer of the HVs incurs a large overhead, since the size of the ID HVs I is much larger than the size of a single encoded spectrum. To reduce this overhead, the GPU parallel encoding in HyperSpec is performed in a batchwise manner, where the HV data are transferred while a batch of spectra are processed.\n\n\nHD Distance Computation.\n\nThe clustering step of HyperSpec operates on the pairwise distance matrix of each bucket (also called bucket distance matrix). We use a normalized Hamming distance to measure the similarity between spectrum HVs. For two binary encoded spectra h i and h j , the Hamming distance is first computed by counting the set bits of their XOR result h i \u2295h j . Then the Hamming distance is normalized to [0, 1] by dividing D. Consequently,\nthe pairwise distance d(h i , h j ) is computed as = d D h h h h ( , ) popcount( ) i j i j(3)\nwhere popcount(\u00b7) denotes the operation that obtains the number of set bits in a binary vector. The HDC-based distance computation is lightweight because the computation of eq 3 only needs XOR and onescounting operations. Our efficient implementation of these distance calculations leverages two CUDA integer intrinsics, XOR and popc. Additionally, by operating on bit-packed HVs, the time complexity to calculate each value in the pairwise distance matrix is reduced from D to D 32 .\n\n\nClustering Algorithms.\n\nHyperSpec supports two popular clustering algorithms\ufffdDBSCAN 20 and hierarchical clustering 21 \ufffdto cluster each spectra bucket based on the bucket distance matrix. HyperSpec implements these two clustering algorithms due to their three common benefits.  21,24 are available and the clustering speed scales well to million-or even billion-scale scenarios.\n\n\nSoftware Development and Code Availability\n\nHyperSpec was implemented in Python 3.8. The MGF loading and parsing functions were written in C++ and compiled to Cython interfaces 25 that can be invoked by Python. The spectrum preprocessing functionality was parallelized using the JIT compilation library Numba (version 1.20.2). 15 The HD encoding and distance computation functions on a GPU were implemented using Numba and CuPy. We used the DBSCAN available in the cuML library (version 22.04) 24  \u2022 Clustered spectra ratio. The clustered spectra ratio equals the number of clustered spectra divided by the total number of spectra. This metric evaluates the clustering capability of the corresponding clustering tool. \u2022 Incorrect clustering ratio. Incorrectly clustered spectra are those spectra whose peptide labels deviate from the most frequent peptide label in their clusters. The incorrect clustering ratio is the number of incorrectly clustered spectra divided by the total number of clustered and identified spectra. \u2022 Completeness. Completeness measures the fragmentation of spectra corresponding to the same peptide across multiple clusters and is based on the notion of entropy in information theory. A clustering result that perfectly satisfies the completeness criterium (value \"1\") assigns all PSMs with an identical peptide label to a single cluster. Completeness is computed as one minus the conditional entropy of the cluster distribution given the peptide assignments divided by the maximum reduction in entropy the peptide assignments could provide. 27 \u2022 Runtime. The runtime is defined as the wall clock time between the start of spectrum preprocessing and the finish of the clustering procedure. We use the Linux system command to measure the wall clock time. The time for generating cluster consensus spectra was excluded since the overhead hereof is small.\n\n\nHardware Configurations.\n\nThe runtime performance of all clustering libraries was measured on a server with a 12-core CPU, 128 GB DDR4 memory, and a 2 TB NVMe solid-state drive (SSD). The equipped GPU card was an NVIDIA GeForce RTX 3090 GPU with 24 GB RAM. All tools were allowed to use all available processor cores and threads.\n\n\nBenchmarks.\n\nWe compared HyperSpec to six stateof-the-art spectral clustering libraries, including GLEAMS, 23 falcon, 9 msCRUSH, 4 MaRaCluster, 6 spectra-cluster, 8 and MS-Cluster. 5 The clustering quality was controlled by varying the spectrum similarity threshold values, while the other configurations were set to the default values without explicit specifications. The distance threshold during clustering in HyperSpec was from 0.2 to 0.45. GLEAMS' distance threshold for agglomerative clustering with complete linkage was 0.2\u2212 0.7. The cosine distance threshold of falcon was 0.05\u22120.25. msCRUSH's cosine similarity threshold was varied from 0.3 to 0.8. MaRaCluster's P value was from \u221230 to \u22123. The clustering threshold for spectra-cluster was 0.8\u22120.99999. MS-Cluster's mixture probability was from 0.00001 to 0.1.\n\n\nData Set.\n\nWe used five MS data sets at different scales for evaluation (Table 1). These data sets consist of various human proteomics data, such as the HEK293 cell line, 2,28,29 HeLa, 3 and a draft map of the human proteome. 1 For all data sets, raw files were downloaded from PRIDE 30 and converted to MGF files using ThermoRawFileParser. 31 For each data set, spectra with precursor charge 2 and precursor charge 3 were considered. The largest data set, These identifications were obtained via automatic reanalysis of public data on MassIVE using MS-GF+. 32 Spectra were searched against the UniProtKB/Swiss-Prot human reference proteome (downloaded 2016/05/23) 33 augmented with common contaminants. Search settings included a 50 ppm precursor mass tolerance, trypsin cleavage with maximum one nonenzymatic peptide terminus, and cysteine carbamidomethylation as a static modification. Methionine oxidation, formation of pyroglutamate from N-terminal glutamine, Nterminal carbamylation, N-terminal acetylation, and deamidation of asparagine and glutamine were specified as variable modifications, with a maximum one modification per peptide. The remaining four data sets were used for runtime evaluation only.\n\n\nRESULTS\n\n\nClustering Quality Comparison\n\n\nHyperSpec Clustering Quality Using Different Parameters.\n\nWe studied the impact of HD parameters and clustering algorithms on HyperSpec's clustering quality to select the optimal parameter combination. For HD, the two hyperparameters that influence the capability to represent spectra as HVs, and thus impact the spectrum clustering quality, are the HV dimension D and quantization level Q. Using the draft human proteome Data set-E, we examined the clustering quality using different combinations of clustering algorithms (DBSCAN or hierarchical clustering with complete linkage), HV dimension D (Supplementary Information Table  S1), and quantization level Q (Supplementary Information  Table S2), fixing the clustering distance threshold.\n\nFirst, the HV dimension D was varied between 128 and 8192 and three clustering quality metrics (clustered spectra ratio, incorrect clustering ratio, and completeness) were computed for each combination of clustering algorithm and D value (Supplementary Information Table S1). This evaluation showed that as the HV dimension D increases, the incorrect clustering ratio and the clustered spectra ratio for both clustering algorithms decreased. However, the completeness of DBSCAN decreases from 0.8979 to 0.8615, while hierarchical clustering's completeness is improved from 0.8071 to 0.8406. This is because a larger D allows the HVs to more granularly represent the spectra after encoding; their corresponding similarities will more accurately reflect the true spectral similarities and avoid that spectra corresponding to different peptides are incorrectly grouped together. The clustering results become less complete for DBSCAN as the density-based DBSCAN is unable to form large clusters when the spectral similarities are more accurate. Larger D also increases the memory usage for HV encoding and storing. The HV dimension D = 2048 balances well between clustering quality and memory consumption. We used D = 2048 as the default value for HV dimension.\n\nIn the second experiment, we fixed D = 2048 and then varied the quantization level Q from 4 to 64 and calculated the corresponding clustering quality metrics for each quantization level (Supplementary Information Table S2). Increasing quantization level Q reduced the clustered spectra ratio as well as completeness while slightly improving the incorrect clustering ratio for both clustering algorithms. For DBSCAN, the incorrect clustering ratio dropped from 1.41% to 1.29% while completeness dropped from 0.8644 to 0.8595 as Q is increasing from 4 to 64. Overall, the clustering quality is less sensitive to the change of quantization level Q. We choose Q = 16 as the default value for quantization level.\n\nWe find hierarchical clustering with complete linkage achieves a better clustering spectra ratio and lower incorrect clustering ratio as compared to DBSCAN (see Supplementary Information Tables S1 and S2). In the following sections, we use hierarchical clustering as the default clustering algorithm without explicit specifications.\n\n\nComparison with Existing Tools.\n\nUsing the draft human proteome Data set-E, we also compared the clustering quality of HyperSpec to six alternative spectral clustering tools ( Figure 4). As suggested previously, 8,22 a high clustered spectra ratio at a low incorrect clustering ratio indicates a better clustering capability for a specific tool. Additionally, completeness measures fragmentation of the same peptide over multiple clusters, and an ideal clustering result should be as complete as possible to ensure that spectra originating from the same peptide are more likely to be grouped into a single cluster.\n\nFor the clustered spectra ratio shown in Figure 4a, HyperSpec is significantly higher than falcon and MS-Cluster across different incorrect clustering ratios. Meanwhile, Hyper-Spec consistently clusters more spectra than MaRaCluster and is slightly inferior to GLEAMS, achieving the second best result at the region with low incorrect clustering ratio.\n\nIn terms of completeness, HyperSpec outperforms spectracluster, MS-Cluster, and falcon, achieving top-3 completeness among the six clustering tools according to Figure 4b. In contrast to falcon and spectra-cluster, which reach a plateau in terms of completeness as the incorrect clustering ratio increases, HyperSpec is able to trade off a small amount of incorrect clustering ratio for more complete clustering results. HyperSpec also maintains high completeness values as the incorrect clustering ratio increases. For the region with incorrect clustering ratio > 3%, HyperSpec surpasses other counterparts except for MaRaCluster, suggesting that the clusters produced by HyperSpec are generally less fragmented. This can be especially beneficial for downstream analysis tasks since more complete clustering results can be represented by a smaller number of consensus spectra to optimally minimize data redundancy.\n\nTo intuitively understand the clustering results, we studied the distribution of cluster sizes for the most frequently identified peptide sequence VATVSIPR with precursor charge 2 for different spectral clustering tools ( Figure 5). Here, HyperSpec used a threshold of eps = 0.25, HD dimension of D = 2048, and quantization level of Q = 16 to achieve a clustering with a ratio of incorrectly clustered spectra < 1.2%. The other spectral clustering tools use configurations as listed in Table 2. We can see that HyperSpec mostly forms medium-size clusters with size 5\u2212500 as compared to falcon and msCRUSH which tend to generate large clusters (size > 500). The majority of clusters produced by MaRaCluster and spectra-cluster contain less than 100 spectra, which indicates that these two tools are more likely to group spectra corresponding to the same peptide into multiple small and fragmented clusters. The characteristics of cluster size distribution for HyperSpec is most similar to those of MaRaCluster and spectra-cluster that also adopt hierarchical clustering. In comparison, falcon and msCRUSH group these spectra into a limited number of large clusters that contain at least 5000 spectra. We also add the six most frequent peptide sequences on Data set-E with charge 2 and charge 3 as shown in (Supplementary Information Figure  S2) to illustrate the distribution of the cluster sizes.\n\n\nSpectra Database Searching Comparison\n\nThe generated consensuses from spectra clustering tools can be used for the downstream spectra database search to identify peptide sequences. We compared the spectra searching performance on the human proteome draft Data set-E in Table 1 for three clustering tools, including HyperSpec, GLEAMS, and falcon. The clustering results generated by these tools were controlled to have a clustered spectra ratio around 60%. The clustering consensuses of HyperSpec were generated based on the original raw spectra data. We use the default parameters provided by the software except for the distance thresholds. Specifically, HyperSpec uses a distance threshold value = 0.3 and produces 62.9% clustered ratio with 1.58% incorrect clustering ratio. GLEAMS uses a distance threshold value = 0.25 and produces 59.1% clustered ratio with 1.14% incorrect clustering ratio. falcon uses a distance threshold value = 0.2 and produces 61.1% clustered ratio with 4.27% incorrect clustering ratio. The clustering consensuses were searched using MSGF+ 32 with the same parameters given in section 2.6.4. Figure 6 illustrates the Venn diagrams that depict the overlap relationship of identified unique peptides using consensus spectra clustered by HyperSpec, GLEAMS, and falcon. GLEAMS identifies the largest number of unique peptides. HyperSpec identifies 8.1% and 1.1% less unique peptides for charge 2 and identifies 7.8% and 4.1% less unique peptides for charge 3 as compared to GLEAMS and falcon, respectively. It should be noted that HyperSpec achieves a much lower incorrect clustering ratio than falcon (1.58% vs 4.27%). Considering that HyperSpec is significantly faster than GLEAMS and falcon, we believe its slight degradation of spectra searching quality is acceptable. Furthermore, Hyper-Spec not only boosts the spectra clustering procedure but also reduces the search time of spectra database search. HyperSpec yields about a 2.7\u00d7 speedup over the spectra searching using   raw spectra because the redundant searching processes for those similar spectra are skipped.\n\n\nRuntime Performance Comparison\n\nRuntime is a crucial metric to evaluate the efficiency of spectral clustering tools. Especially, to be able to perform spectral clustering at the repository scale, tools have to be fast to handle the ever-growing amount of MS data that is available in public data resources.\n\nWe first compared the total clustering time of HyperSpec using DBSCAN or hierarchical clustering with complete linkage on five data sets. Supplementary Information Figure  S3 shows that hierarchical clustering was \u223c29% faster than DBSCAN on the small-size and medium-size Data set-A to Data set-D. However, HyperSpec using DBSCAN generated more complete results with 38% shorter runtime than hierarchical clustering on large-scale data set Data set-E. The shorter runtime on large-scale data sets comes from the optimized DBSCAN routines on parallel GPU devices.\n\nWe extensively measured the runtime performance of HyperSpec hierarchical clustering with complete linkage compared to three fast spectral clustering tools on five data sets with a varying number of spectra in Table 1. falcon and GLEAMS are Python-based libraries that use both optimized JIT compilation and multiprocessing, while msCRUSH and MaRaCluster were written in high-performance C++ and optimized using multithreading. spectra-cluster and MS-Cluster were not considered here since they are significantly (>5\u00d7) slower than other tools. Our evaluation results in Figure  7 indicate that HyperSpec consistently outperforms all other tools in terms of runtime; 10.8 \u00d7 to 15.0 \u00d7 speedup was observed across different data sets. HyperSpec's speed advantage for spectra preprocessing progressively grows for larger data sets (Figure 8a). We further investigated the runtime scalability when processing an increasing number of spectra (Figure 8b). Our analysis shows HyperSpec's excellent scalability and performance advantages over alternative tools for increasingly large MS data sets.\n\nWe also studied detailed performance metrics (runtime, peak memory consumption, and clustering quality) when running HyperSpec, GLEAMS, falcon, msCRUSH, and MaRaCluster on the draft human proteome Data set-E ( Table 2). All tools were allowed to use all available CPU cores to obtain the fastest clustering speed and were configured to produce a clustering result with a ratio of incorrect clustered spectra around 1.0%. HyperSpec was able to process the full draft human proteome data set, amounting to 131 GB of MS data, in a mere 24 min, which is by far the fastest speed among the four spectral clustering tools considered. This runtime is 2.3\u00d7 faster than the second-fastest tool, msCRUSH, while achieving a higher clustered spectra ratio and smaller peak memory usage. Although GLEAMS produced the highest ratio of correctly clustered spectra, it required 217 min of processing time, which is 9.0\u00d7 slower than HyperSpec. This is because >90% of GLEAMS' runtime is consumed by the spectra preprocessing and embedding steps. MaRaCluster obtained the lowest ratio of incorrectly clustered spectra among all tools and a comparable completeness value with HyperSpec. Finally, with a peak memory consumption of 54 GB, HyperSpec was more memory efficient than msCRUSH and falcon. In summary, because HyperSpec achieves an optimal tradeoff between clustering quality and runtime efficiency, it is an especially appealing option to process the quickly growing volumes of MS data.\n\n\nDISCUSSION\n\nHere, we have presented a HDC-based spectral clustering tool, HyperSpec, to achieve both excellent clustering quality and runtime. Instead of clustering raw spectra directly, HyperSpec leverages HDC 17 to convert spectra to hyperdimensional space. Specifically, the spectra are first encoded into binary HVs that have high dimensionality but simpler representation format. Our evaluations show that HyperSpec achieves a comparable clustering quality as state-of-the-art spectral  clustering tools. [4][5][6]9,34 Furthermore, we profiled and analyzed the bottlenecks of existing clustering tools. We developed optimized spectra preprocessing routines and an efficient clustering flow by addressing bottleneck components. As a result, HyperSpec achieved the fastest speed among all tools considered and is orders of magnitude faster than alternative spectral clustering tools.\n\nHyperSpec is extensible to plug in and support other MS workloads. For example, spectrum preprocessing is a common step during various MS data analysis tasks, such as sequence database searching 35 and spectral library searching. 34,36 The spectrum preprocessing routines in HyperSpec are highly modularized, so that users can easily integrate these optimized routines into other workloads to take advantage of their efficient implementations.\n\nAnother potential application of HyperSpec is to utilize the compact binary HV representation to compress MS data. We have demonstrated that the original spectra in floating-point format can be encoded into binary HVs with D = 1024\u22124096 bits with minimal loss of information to maintain a high-quality clustering quality. In this case, the original spectrum with 50\u2212 100 peaks in 32-bit or 64-bit floating-point number can be compressed by a factor of 3.1\u221212.5\u00d7. Moreover, HV encoding could be convenient for the subsequent downstream MS workloads, such as spectrum identification. Specifically, off-theshelf HDC-based pattern matching algorithms 37\u221239 could be leveraged to match spectra against a peptide database.\n\nThere are still several opportunities to improve upon HyperSpec's clustering quality and runtime performance. Similar to MaRaCluster and spectra-cluster, 6,34 one possible approach could be to derive an optimized distance function to compare spectrum HVs and improve the clustering quality, since finding similar spectra is an essential task during spectral clustering. Another strategy could be to adopt a postprocessing scheme after clustering to split up invalid clusters. 7, 22 To further shorten the clustering runtime, the HV distance computations and the clustering step can be parallelized over multiple GPU cards. Because the bucket division mechanism relaxes data dependencies between different buckets of spectra and the clustering implementations in cuML 24 natively support multiple GPUs, a multi-GPU mode could be integrated in HyperSpec at minimal effort to achieve a near-linear speedup. The other possible speedup opportunity is combining HyperSpec with the emerging near-storage spectrum processing hardware 40 that can generate higher energy efficiency for repository-scale data processing.\n\n\n\u25a0 ASSOCIATED CONTENT\n\n\n* s\u0131 Supporting Information\n\nThe Supporting Information is available free of charge at https://pubs.acs.org/doi/10.1021/acs.jproteome.2c00612.\n\nClustering quality on Data set-E for different clustering algorithms and values of HD dimension D.; clustering quality on Data set-E for different clustering algorithms and values of HD quantization level Q; runtime of multiprocessing-based preprocessing using different CPU cores on Data set-E; distribution of cluster sizes for the six most frequently identified peptide sequences on Data set-E with precursor charge 2 and charge 3; runtime comparison for HyperSpec with DBSCAN and hierarchical clustering with complete linkage on five data sets (PDF)\n\nFigure 1 .\n1(a) Overall diagram of HyperSpec. (b) HyperSpec's spectrum preprocessing and bucket division flow. HyperSpec's spectra preprocessing and bucket division are optimized using multiprocessing on a CPU. HD encoding and distance computation are offloaded to a highly parallel GPU.\n\nFigure 2 .\n2Figure 2. Runtime profiling for five popular spectral clustering tools (falcon, 9 msCRUSH, 4 MaRaCluster, 6 spectra-cluster, 8 and MS-Cluster 5 ). The runtimes were evaluated in terms of the time required for spectrum preprocessing and the time required for spectral clustering.\n\nFigure 3 .\n3HD encoding and distance computation on a GPU. Each preprocessed spectrum's m/z and intensity after vectorization and quantization are encoded into single hypervector (HV). Then, the bucket distance matrix is computed.\n\n( 1 )\n1DBSCAN and hierarchical clustering have been previously demonstrated effective to generate satisfactory quality for spectral clustering. 9,22,23 The analysis in section 3.1 shows DBSCAN and hierarchical clustering yield various trade-offs between runtime and clustering quality. Supporting both of them allows the users to have more flexible choices. (2) DBSCAN and hierarchical clustering require minimal efforts to tune the algorithmic hyperparameters, as the number of clusters does not need to be specified explicitly. (3) From the perspective of runtime performance, the offthe-shelf fast DBSCAN and hierarchical clustering implementations\n\nFigure 5 .\n5Distribution of cluster sizes for the most frequently identified peptide sequence VATVSIPR with precursor charge 2.\n\nFigure 6 .\n6Venn diagrams that depict the overlap of identified unique peptides using consensus spectra generated by HyperSpec, GLEAMS, and falcon. The precursor charges include charge 2 in a and charge 3 in b. Identified peptides from HyperSpec are highly overlapped with the results generated by GLEAMS and falcon.\n\nFigure 7 .\n7Total clustering runtime speedup of HyperSpec compared to alternative clustering tools. The tool with the slowest runtime on each data set was normalized to 1.\n\nFigure 8 .\n8Runtime performance of msCRUSH, 4 falcon,9 and HyperSpec when scaling to different data set sizes and number of spectra.\n\nTable 1 .\n1Properties of the Evaluated MS Data Setsdata set \nsample type \nPRIDE ID \n\nno. of \nspectra \nsize \n\nData set-A kidney cell 2 \nPXD001468 \n1.1M \n5.6 GB \nData set-B kidney cell 28 \nPXD001197 \n1.1M \n25 GB \nData set-C HeLa proteins 3 \nPXD003258 \n4.1M \n54 GB \nData set-D HEK293 cell 29 \nPXD001511 \n4.2M \n87 GB \nData set-E \nhuman proteome \ndraft 1 \n\n\nTable 2 .\n2Key Performance Metrics of HyperSpec, GLEAMS, falcon, msCRUSH, and MaRaCluster on the draft Human Proteome Data Set-E.tool \nparameters \nruntime \npeak memory \nclustered spectra \nincorrect clustering ratio \ncompleteness \n\nHyperSpec \neps = 0.25, D = 2048, Q = 16 \n24 min \n54 GB \n10 290 245 (48.70%) \n1.08% \n0.7885 \nGLEAMS \nthreshold = 0.25 \n217 min \n34 GB \n12 392 427 (59.06%) \n1.14% \n0.8251 \nfalcon \neps = 0.05 \n161 min \n87 GB \n5 675 468 (27.42%) \n1.11% \n0.8438 \nmsCRUSH \nsimilarity = 0.8 \n55 min \n91 GB \n4 397 921 (22.34%) \n1.16% \n0.8418 \nMaRaCluster \npvalThreshold = \u221230.0 \n251 min \n19 GB \n9 305 471 (43.20%) \n1.07% \n0.7911 \n\n\nThe authors declare no competing financial interest.\nA draft map of the human proteome. M.-S Kim, S M Pinto, D Getnet, R S Nirujogi, S S Manda, R Chaerkady, A K Madugundu, D S Kelkar, R Isserlin, S Jain, 10.1038/nature13302Nature. 509Kim, M.-S.; Pinto, S. M.; Getnet, D.; Nirujogi, R. S.; Manda, S. S.; Chaerkady, R.; Madugundu, A. K.; Kelkar, D. S.; Isserlin, R.; Jain, S.; et al. A draft map of the human proteome. Nature 2014, 509, 575\u2212 581.\n\nA mass-tolerant database search identifies a large proportion of unassigned spectra in shotgun proteomics as modified peptides. J M Chick, D Kolippakkam, D P Nusinow, B Zhai, R Rad, E L Huttlin, S P Gygi, 10.1038/nbt.3267Nature biotechnology. 33Chick, J. M.; Kolippakkam, D.; Nusinow, D. P.; Zhai, B.; Rad, R.; Huttlin, E. L.; Gygi, S. P. A mass-tolerant database search identifies a large proportion of unassigned spectra in shotgun proteomics as modified peptides. Nature biotechnology 2015, 33, 743\u2212749.\n\nA quantitative spatial proteomics analysis of proteome turnover in human cells. F.-M Boisvert, Y Ahmad, M Gierlin\u015bki, F Charriere, D Lamont, M Scott, G Barton, A I Lamond, 10.1074/mcp.M111.011429M111.011429Mol. Cell. Proteomics. 20123Boisvert, F.-M.; Ahmad, Y.; Gierlin\u015bki, M.; Charriere, F.; Lamont, D.; Scott, M.; Barton, G.; Lamond, A. I. A quantitative spatial proteomics analysis of proteome turnover in human cells. Mol. Cell. Proteomics 2012, 11 (3), M111.011429.\n\nmsCRUSH: fast tandem mass spectral clustering using locality sensitive hashing. L Wang, S Li, H Tang, 10.1021/acs.jproteome.8b00448?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJ. Proteome Res. 18Wang, L.; Li, S.; Tang, H. msCRUSH: fast tandem mass spectral clustering using locality sensitive hashing. J. Proteome Res. 2018, 18, 147\u2212158.\n\nClustering millions of tandem mass spectra. A M Frank, N Bandeira, Z Shen, S Tanner, S P Briggs, R D Smith, P A Pevzner, 10.1021/pr070361e?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of proteome research. 7Frank, A. M.; Bandeira, N.; Shen, Z.; Tanner, S.; Briggs, S. P.; Smith, R. D.; Pevzner, P. A. Clustering millions of tandem mass spectra. Journal of proteome research 2008, 7, 113\u2212122.\n\nMaRaCluster: A fragment rarity metric for clustering fragment spectra in shotgun proteomics. M The, L K\u00e4ll, 10.1021/acs.jproteome.5b00749?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of proteome research. 15The, M.; K\u00e4ll, L. MaRaCluster: A fragment rarity metric for clustering fragment spectra in shotgun proteomics. Journal of proteome research 2016, 15, 713\u2212720.\n\nClusterSheep: A Graphics Processing Unit-Accelerated Software Tool for Large-Scale Clustering of Tandem Mass Spectra from Shotgun Proteomics. P K P To, L Wu, C M Chan, A Hoque, H Lam, 10.1021/acs.jproteome.2c00612?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of Proteome Research. 20J. Proteome ResTo, P. K. P.; Wu, L.; Chan, C. M.; Hoque, A.; Lam, H. ClusterSheep: A Graphics Processing Unit-Accelerated Software Tool for Large-Scale Clustering of Tandem Mass Spectra from Shotgun Proteomics. Journal of Proteome Research 2021, 20, 5359\u22125367. https://doi.org/10.1021/acs.jproteome.2c00612 J. Proteome Res. 2023, 22, 1639\u22121648\n\nRecognizing millions of consistently unidentified spectra across hundreds of shotgun proteomics datasets. J Griss, Y Perez-Riverol, S Lewis, D L Tabb, J A Dianes, N Del-Toro, M Rurik, M Walzer, O Kohlbacher, H Hermjakob, 10.1038/nmeth.3902Nature methods. 13Griss, J.; Perez-Riverol, Y.; Lewis, S.; Tabb, D. L.; Dianes, J. A.; Del-Toro, N.; Rurik, M.; Walzer, M.; Kohlbacher, O.; Hermjakob, H.; et al. Recognizing millions of consistently unidentified spectra across hundreds of shotgun proteomics datasets. Nature methods 2016, 13, 651\u2212656.\n\nLarge-scale tandem mass spectrum clustering using fast nearest neighbor searching. W Bittremieux, K Laukens, W S Noble, P C Dorrestein, 10.1002/rcm.9153Rapid Commun. Mass Spectrom. 9153Bittremieux, W.; Laukens, K.; Noble, W. S.; Dorrestein, P. C. Large-scale tandem mass spectrum clustering using fast nearest neighbor searching. Rapid Commun. Mass Spectrom. 2021, e9153.\n\nA Comprehensive Evaluation of Consensus Spectrum Generation Methods in Proteomics. X Luo, W Bittremieux, J Griss, E W Deutsch, T Sachsenberg, L I Levitsky, M V Ivanov, J A Bubis, R Gabriels, H Webel, A Sanchez, M Bai, L K\u00e4ll, Y Perez-Riverol, 10.1021/acs.jproteome.2c00069?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of Proteome Research. 2022Luo, X.; Bittremieux, W.; Griss, J.; Deutsch, E. W.; Sachsenberg, T.; Levitsky, L. I.; Ivanov, M. V.; Bubis, J. A.; Gabriels, R.; Webel, H.; Sanchez, A.; Bai, M.; K\u00e4ll, L.; Perez- Riverol, Y. A Comprehensive Evaluation of Consensus Spectrum Generation Methods in Proteomics. Journal of Proteome Research 2022, 21, 1566\u22121574.\n\nThe PRIDE database resources in 2022: a hub for mass spectrometry-based proteomics evidences. Y Perez-Riverol, J Bai, C Bandla, D Garc\u00eda-Seisdedos, S Hewapathirana, S Kamatchinathan, D J Kundu, A Prakash, A Frericks-Zipper, M Eisenacher, 10.1093/nar/gkab1038Nucleic acids research 2022, 50, D543\u2212D552Perez-Riverol, Y.; Bai, J.; Bandla, C.; Garc\u00eda-Seisdedos, D.; Hewapathirana, S.; Kamatchinathan, S.; Kundu, D. J.; Prakash, A.; Frericks-Zipper, A.; Eisenacher, M.; et al. The PRIDE database resources in 2022: a hub for mass spectrometry-based proteomics evidences. Nucleic acids research 2022, 50, D543\u2212D552.\n\nBillion-scale similarity search with GPUs. J Johnson, M Douze, H J\u00e9gou, 10.1109/TBDATA.2019.2921572IEEE Trans. Big Data. 7Johnson, J.; Douze, M.; J\u00e9gou, H. Billion-scale similarity search with GPUs. IEEE Trans. Big Data 2021, 7, 535\u2212547.\n\nHyperdimensional Computing: An Introduction to Computing in Distributed Representation with High-Dimensional Random Vectors. P Kanerva, 10.1007/s12559-009-9009-8Cognitive Computation. 1Kanerva, P. Hyperdimensional Computing: An Introduction to Computing in Distributed Representation with High-Dimensional Random Vectors. Cognitive Computation 2009, 1, 139\u2212159.\n\nThe Boost C++ Libraries: Generic Programming. S Nakariakov, Nakariakov, S. The Boost C++ Libraries: Generic Program- ming;\n\n. Sergei Nakariakov, Sergei Nakariakov, 2013.\n\nA llvm-based python jit compiler. S K Lam, A Pitrou, S Seibert, Numba, 10.1145/2833157.2833162Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC. the Second Workshop on the LLVM Compiler Infrastructure in HPCNew YorkAssociation for Computing Machinerypp 1\u22126Lam, S. K.; Pitrou, A.; Seibert, S. Numba: A llvm-based python jit compiler. Proceedings of the Second Workshop on the LLVM Compiler Infrastructure in HPC; Association for Computing Machinery: New York, 2015; pp 1\u22126 .\n\n. W E Wolski, M Farrow, A.-K Emde, H Lehrach, M Lalowski, K Reinert, Proteome Science. 418Wolski, W. E.; Farrow, M.; Emde, A.-K.; Lehrach, H.; Lalowski, M.; Reinert, K. Proteome Science 2006, 4, 18.\n\nTheoretical Foundations of Hyperdimensional Computing. A Thomas, S Dasgupta, T Rosing, 10.1613/jair.1.12664Journal of Artificial Intelligence Research. 2021Thomas, A.; Dasgupta, S.; Rosing, T. Theoretical Foundations of Hyperdimensional Computing. Journal of Artificial Intelligence Research 2021, 72, 215\u2212249.\n\n. Cuda Nvidia, release: 11.6. 2022NVIDIA, CUDA, release: 11.6. 2022; https://developer.nvidia. com/cuda-toolkit.\n\nXCelHD: An Efficient GPU-Powered Hyperdimensional Computing with Parallelized Training. J Kang, B Khaleghi, Y Kim, T Rosing, 10.1109/ASP-DAC52403.2022.971254927th Asia and South Pacific Design Automation Conference. Kang, J.; Khaleghi, B.; Kim, Y.; Rosing, T. XCelHD: An Efficient GPU-Powered Hyperdimensional Computing with Paral- lelized Training; 2022 27th Asia and South Pacific Design Automation Conference (ASP-DAC);\n\n. IEEE. pp 220\u2212225IEEE, 2022; pp 220\u2212225 .\n\nA density-based algorithm for discovering clusters in large spatial databases with noise. M Ester, H.-P Kriegel, J Sander, X Xu, KDD'96: Proceedings of the Second International Conference on Knowledge Discovery and Data Mining. AAAI PressEster, M.; Kriegel, H.-P.; Sander, J.; Xu, X. A density-based algorithm for discovering clusters in large spatial databases with noise. KDD'96: Proceedings of the Second International Conference on Knowledge Discovery and Data Mining; AAAI Press, 1996; pp 226\u2212 231.\n\nFast hierarchical, agglomerative clustering routines for R and Python. D Mullner, Fastcluster, 10.18637/jss.v053.i09J. Stat. Software. 53Mullner, D. fastcluster: Fast hierarchical, agglomerative clustering routines for R and Python. J. Stat. Software 2013, 53, 1\u221218.\n\nComparison and evaluation of clustering algorithms for tandem mass spectra. V Rieder, K U Schork, L Kerschke, B Blank-Landeshammer, A Sickmann, J Rahnenfuhrer, 10.1021/acs.jproteome.7b00427?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJ. Proteome Res. 16Rieder, V.; Schork, K. U.; Kerschke, L.; Blank-Landeshammer, B.; Sickmann, A.; Rahnenfuhrer, J. Comparison and evaluation of clustering algorithms for tandem mass spectra. J. Proteome Res. 2017, 16, 4035\u22124044.\n\nA learned embedding for efficient joint analysis of millions of mass spectra. W Bittremieux, D H May, J Bilmes, W S Noble, 10.1038/s41592-022-01496-1Nat. Methods. 19Bittremieux, W.; May, D. H.; Bilmes, J.; Noble, W. S. A learned embedding for efficient joint analysis of millions of mass spectra. Nat. Methods 2022, 19, 675\u2212678.\n\nMachine learning in python: Main developments and technology trends in data science, machine learning, and artificial intelligence. S Raschka, J Patterson, C Nolet, 10.3390/info110401932020193Raschka, S.; Patterson, J.; Nolet, C. Machine learning in python: Main developments and technology trends in data science, machine learning, and artificial intelligence. Information 2020, 11, 193.\n\nS Behnel, R Bradshaw, C Citro, L Dalcin, D S Seljebotn, K Smith, Cython, 10.1109/MCSE.2010.118The best of both worlds. Computing in Science & Engineering. 13Behnel, S.; Bradshaw, R.; Citro, C.; Dalcin, L.; Seljebotn, D. S.; Smith, K. Cython: The best of both worlds. Computing in Science & Engineering 2011, 13, 31\u221239.\n\nRAPIDS: Collection of Libraries for End to End GPU Data Science. R D Team, Team, R. D. RAPIDS: Collection of Libraries for End to End GPU Data Science; https://rapids.ai, 2018.\n\nA Conditional Entropy-Based External Cluster Evaluation Measure. A Rosenberg, J Hirschberg, V-Measure, Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL). the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL)Prague, Czech RepublicAssociation for Computational Linguisticspp 410\u2212420Rosenberg, A.; Hirschberg, J. V-Measure: A Conditional Entropy-Based External Cluster Evaluation Measure. Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP- CoNLL), Prague, Czech Republic; Association for Computational Linguistics, 2007; pp 410\u2212420.\n\nCellular signature of SIL1 depletion: disease pathogenesis due to alterations in protein composition beyond the ER machinery. A Roos, L Kollipara, S Buchkremer, T Labisch, E Brauers, C Gatz, C Lentz, J Gerardo-Nava, J Weis, R P Zahedi, 10.1007/s12035-015-9456-z53Roos, A.; Kollipara, L.; Buchkremer, S.; Labisch, T.; Brauers, E.; Gatz, C.; Lentz, C.; Gerardo-Nava, J.; Weis, J.; Zahedi, R. P. Cellular signature of SIL1 depletion: disease pathogenesis due to alterations in protein composition beyond the ER machinery. Molecular neuro- biology 2016, 53, 5527\u22125541.\n\nComparison of different sample preparation protocols reveals lysis buffer-specific extraction biases in gram-negative bacteria and human cells. T Glatter, E Ahrn\u00e9, A Schmidt, 10.1021/acs.jproteome.5b00654?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of Proteome Research. 14Glatter, T.; Ahrn\u00e9, E.; Schmidt, A. Comparison of different sample preparation protocols reveals lysis buffer-specific extraction biases in gram-negative bacteria and human cells. Journal of Proteome Research 2015, 14, 4472\u22124485.\n\nThe PRIDE database and related tools and resources in 2019: improving support for quantification data. Y Perez-Riverol, A Csordas, J Bai, M Bernal-Llinares, S Hewapathirana, D J Kundu, A Inuganti, J Griss, G Mayer, M Eisenacher, 10.1093/nar/gky1106Nucleic acids research 2019, 47, D442\u2212D450Perez-Riverol, Y.; Csordas, A.; Bai, J.; Bernal-Llinares, M.; Hewapathirana, S.; Kundu, D. J.; Inuganti, A.; Griss, J.; Mayer, G.; Eisenacher, M.; et al. The PRIDE database and related tools and resources in 2019: improving support for quantification data. Nucleic acids research 2019, 47, D442\u2212D450.\n\nThermoRawFileParser: modular, scalable, and cross-platform RAW file conversion. N Hulstaert, J Shofstahl, T Sachsenberg, M Walzer, H Barsnes, L Martens, Y Perez-Riverol, 10.1021/acs.jproteome.9b00328?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asJournal of proteome research. 19Hulstaert, N.; Shofstahl, J.; Sachsenberg, T.; Walzer, M.; Barsnes, H.; Martens, L.; Perez-Riverol, Y. ThermoRawFileParser: modular, scalable, and cross-platform RAW file conversion. Journal of proteome research 2020, 19, 537\u2212542.\n\nMS-GF+ makes progress towards a universal database search tool for proteomics. S Kim, P A Pevzner, 10.1038/ncomms6277Nat. Commun. 5Kim, S.; Pevzner, P. A. MS-GF+ makes progress towards a universal database search tool for proteomics. Nat. Commun. 2014, 5, 1\u221210.\n\nThe UniProtKB guide to the human proteome. L Breuza, S Poux, A Estreicher, M L Famiglietti, M Magrane, M Tognolli, A Bridge, D Baratin, N Redaschi, 10.1093/database/bav120120Breuza, L.; Poux, S.; Estreicher, A.; Famiglietti, M. L.; Magrane, M.; Tognolli, M.; Bridge, A.; Baratin, D.; Redaschi, N. The UniProtKB guide to the human proteome. Database 2016, 2016, bav120.\n\nDevelopment and validation of a spectral library searching method for peptide identification from MS/MS. H Lam, E W Deutsch, J S Eddes, J K Eng, N King, S E Stein, R Aebersold, 10.1002/pmic.200600625PROTEOMICS. 7Lam, H.; Deutsch, E. W.; Eddes, J. S.; Eng, J. K.; King, N.; Stein, S. E.; Aebersold, R. Development and validation of a spectral library searching method for peptide identification from MS/MS. PROTEOMICS 2007, 7, 655\u2212667.\n\nExtremely Fast and Accurate Open Modification Spectral Library Searching of High-Resolution Mass Spectra Using Feature Hashing and Graphics Processing Units. J K Eng, B C Searle, K R Clauser, D L Tabb, W Bittremieux, K Laukens, W S Noble, 10.1021/acs.jproteome.9b00291?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asR111.009522Molecular & Cellular Proteomics. 1036Journal of Proteome ResearchEng, J. K.; Searle, B. C.; Clauser, K. R.; Tabb, D. L. A Face in the Crowd: Recognizing Peptides Through Database Search. Molecular & Cellular Proteomics 2011, 10, R111.009522. (36) Bittremieux, W.; Laukens, K.; Noble, W. S. Extremely Fast and Accurate Open Modification Spectral Library Searching of High- Resolution Mass Spectra Using Feature Hashing and Graphics Processing Units. Journal of Proteome Research 2019, 18, 3792\u22123799.\n\nGenieHD: efficient DNA pattern matching accelerator using hyperdimensional computing. Y Kim, M Imani, N Moshiri, T Rosing, DATE '20: Proceedings of the 23rd Conference on Design, Automation and Test in Europe. pp 115\u2212120Kim, Y.; Imani, M.; Moshiri, N.; Rosing, T. GenieHD: efficient DNA pattern matching accelerator using hyperdimensional comput- ing. DATE '20: Proceedings of the 23rd Conference on Design, Automation and Test in Europe; EDA Consortium, 2020; pp 115\u2212120.\n\nHDNA: Energyefficient dna sequencing using hyperdimensional computing. M Imani, T Nassar, A Rahimi, T Rosing, 10.1109/BHI.2018.8333421Imani, M.; Nassar, T.; Rahimi, A.; Rosing, T. HDNA: Energy- efficient dna sequencing using hyperdimensional computing. 2018\n\n. IEEE EMBS International Conference on Biomedical & Health Informatics (BHI. IEEE EMBS International Conference on Biomedical & Health Informatics (BHI);\n\n. IEEE. IEEE, 2018; pp 271\u2212274 .\n\nMassively Parallel Open Modification Spectral Library Searching with Hyperdimensional Computing. arXiv 2211. J Kang, W Xu, W Bittremieux, T Rosing, 10.48550/arXiv.2211.16422?urlappend=%3Fref%3DPDF&jav=VoR&rel=cite-asDOI: 10.48550/ arXiv.2211.16422Kang, J.; Xu, W.; Bittremieux, W.; Rosing, T. Massively Parallel Open Modification Spectral Library Searching with Hyperdimen- sional Computing. arXiv 2211.16422 2022, DOI: 10.48550/ arXiv.2211.16422\n\nA near-storage framework for boosted data preprocessing of mass spectrum clustering. W Xu, J Kang, T Rosing, 10.1145/3489517.3530449Proceedings of the 59th ACM/IEEE Design Automation Conference. the 59th ACM/IEEE Design Automation ConferenceXu, W.; Kang, J.; Rosing, T. A near-storage framework for boosted data preprocessing of mass spectrum clustering. Proceedings of the 59th ACM/IEEE Design Automation Conference;\n\n. Acm/Ieee, ACM/IEEE, 2022; pp 313\u2212318\n", "annotations": {"author": "[{\"end\":85,\"start\":74},{\"end\":100,\"start\":86},{\"end\":118,\"start\":101},{\"end\":133,\"start\":119},{\"end\":148,\"start\":134}]", "publisher": null, "author_last_name": "[{\"end\":84,\"start\":82},{\"end\":99,\"start\":95},{\"end\":117,\"start\":106},{\"end\":132,\"start\":125},{\"end\":147,\"start\":141}]", "author_first_name": "[{\"end\":81,\"start\":74},{\"end\":94,\"start\":86},{\"end\":105,\"start\":101},{\"end\":124,\"start\":119},{\"end\":140,\"start\":134}]", "author_affiliation": null, "title": "[{\"end\":71,\"start\":1},{\"end\":219,\"start\":149}]", "venue": null, "abstract": "[{\"end\":1850,\"start\":487}]", "bib_ref": "[{\"end\":2847,\"start\":2844},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3330,\"start\":3329},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3610,\"start\":3608},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3761,\"start\":3760},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3965,\"start\":3963},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":4026,\"start\":4025},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4784,\"start\":4783},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4908,\"start\":4907},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6645,\"start\":6643},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6902,\"start\":6901},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":9435,\"start\":9432},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":10523,\"start\":10521},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10525,\"start\":10523},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10526,\"start\":10525},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":11154,\"start\":11152},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":12074,\"start\":12072},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":12075,\"start\":12074},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":12692,\"start\":12690},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":13114,\"start\":13113},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13378,\"start\":13375},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":13380,\"start\":13378},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":13739,\"start\":13737},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":16273,\"start\":16271},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":17165,\"start\":17163},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":18952,\"start\":18949},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":18954,\"start\":18952},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":19381,\"start\":19379},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":19548,\"start\":19546},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":20622,\"start\":20620},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":21374,\"start\":21372},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":21429,\"start\":21428},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":21447,\"start\":21446},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":22273,\"start\":22272},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":22314,\"start\":22313},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":22430,\"start\":22428},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":22647,\"start\":22645},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":22754,\"start\":22752},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26605,\"start\":26603},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":26607,\"start\":26605},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":35732,\"start\":35729},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":35735,\"start\":35732},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":35738,\"start\":35735},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":35740,\"start\":35738},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":35742,\"start\":35740},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":36304,\"start\":36302},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":36340,\"start\":36337},{\"end\":36342,\"start\":36340},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":37751,\"start\":37749},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":41244,\"start\":41243}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":39391,\"start\":39103},{\"attributes\":{\"id\":\"fig_1\"},\"end\":39683,\"start\":39392},{\"attributes\":{\"id\":\"fig_2\"},\"end\":39915,\"start\":39684},{\"attributes\":{\"id\":\"fig_3\"},\"end\":40568,\"start\":39916},{\"attributes\":{\"id\":\"fig_4\"},\"end\":40697,\"start\":40569},{\"attributes\":{\"id\":\"fig_5\"},\"end\":41015,\"start\":40698},{\"attributes\":{\"id\":\"fig_6\"},\"end\":41188,\"start\":41016},{\"attributes\":{\"id\":\"fig_7\"},\"end\":41322,\"start\":41189},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":41675,\"start\":41323},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":42314,\"start\":41676}]", "paragraph": "[{\"end\":2717,\"start\":1866},{\"end\":5299,\"start\":2719},{\"end\":5959,\"start\":5301},{\"end\":6512,\"start\":5961},{\"end\":7931,\"start\":6514},{\"end\":8599,\"start\":7972},{\"end\":8887,\"start\":8636},{\"end\":9823,\"start\":8889},{\"end\":10438,\"start\":9844},{\"end\":10892,\"start\":10440},{\"end\":11284,\"start\":10923},{\"end\":11709,\"start\":11286},{\"end\":12342,\"start\":11729},{\"end\":13266,\"start\":12433},{\"end\":14023,\"start\":13332},{\"end\":14800,\"start\":14025},{\"end\":15431,\"start\":14822},{\"end\":15841,\"start\":15433},{\"end\":15993,\"start\":15873},{\"end\":16412,\"start\":16064},{\"end\":16834,\"start\":16414},{\"end\":16902,\"start\":16841},{\"end\":17631,\"start\":16937},{\"end\":18090,\"start\":17660},{\"end\":18669,\"start\":18185},{\"end\":19049,\"start\":18696},{\"end\":20930,\"start\":19096},{\"end\":21262,\"start\":20959},{\"end\":22084,\"start\":21278},{\"end\":23299,\"start\":22098},{\"end\":24085,\"start\":23402},{\"end\":25345,\"start\":24087},{\"end\":26054,\"start\":25347},{\"end\":26388,\"start\":26056},{\"end\":27005,\"start\":26424},{\"end\":27359,\"start\":27007},{\"end\":28276,\"start\":27361},{\"end\":29674,\"start\":28278},{\"end\":31775,\"start\":29716},{\"end\":32084,\"start\":31810},{\"end\":32648,\"start\":32086},{\"end\":33738,\"start\":32650},{\"end\":35216,\"start\":33740},{\"end\":36105,\"start\":35231},{\"end\":36550,\"start\":36107},{\"end\":37268,\"start\":36552},{\"end\":38379,\"start\":37270},{\"end\":38547,\"start\":38434},{\"end\":39102,\"start\":38549}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":12432,\"start\":12343},{\"attributes\":{\"id\":\"formula_1\"},\"end\":14821,\"start\":14801},{\"attributes\":{\"id\":\"formula_2\"},\"end\":15872,\"start\":15842},{\"attributes\":{\"id\":\"formula_3\"},\"end\":16063,\"start\":15994},{\"attributes\":{\"id\":\"formula_4\"},\"end\":18184,\"start\":18091}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":22168,\"start\":22159},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":23977,\"start\":23941},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":24041,\"start\":24005},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":24360,\"start\":24325},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":25568,\"start\":25533},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":28771,\"start\":28764},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":29953,\"start\":29946},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":32867,\"start\":32860},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":33957,\"start\":33950}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1864,\"start\":1852},{\"attributes\":{\"n\":\"2.\"},\"end\":7955,\"start\":7934},{\"attributes\":{\"n\":\"2.1.\"},\"end\":7970,\"start\":7958},{\"attributes\":{\"n\":\"2.2.\"},\"end\":8634,\"start\":8602},{\"attributes\":{\"n\":\"2.2.1.\"},\"end\":9842,\"start\":9826},{\"attributes\":{\"n\":\"2.2.3.\"},\"end\":10921,\"start\":10895},{\"attributes\":{\"n\":\"2.3.\"},\"end\":11727,\"start\":11712},{\"attributes\":{\"n\":\"2.4.\"},\"end\":13330,\"start\":13269},{\"end\":16839,\"start\":16837},{\"attributes\":{\"n\":\"2.4.3.\"},\"end\":16935,\"start\":16905},{\"attributes\":{\"n\":\"2.4.4.\"},\"end\":17658,\"start\":17634},{\"attributes\":{\"n\":\"2.4.5.\"},\"end\":18694,\"start\":18672},{\"attributes\":{\"n\":\"2.5.\"},\"end\":19094,\"start\":19052},{\"attributes\":{\"n\":\"2.6.2.\"},\"end\":20957,\"start\":20933},{\"attributes\":{\"n\":\"2.6.3.\"},\"end\":21276,\"start\":21265},{\"attributes\":{\"n\":\"2.6.4.\"},\"end\":22096,\"start\":22087},{\"attributes\":{\"n\":\"3.\"},\"end\":23309,\"start\":23302},{\"attributes\":{\"n\":\"3.1.\"},\"end\":23341,\"start\":23312},{\"attributes\":{\"n\":\"3.1.1.\"},\"end\":23400,\"start\":23344},{\"attributes\":{\"n\":\"3.1.2.\"},\"end\":26422,\"start\":26391},{\"attributes\":{\"n\":\"3.2.\"},\"end\":29714,\"start\":29677},{\"attributes\":{\"n\":\"3.3.\"},\"end\":31808,\"start\":31778},{\"attributes\":{\"n\":\"4.\"},\"end\":35229,\"start\":35219},{\"end\":38402,\"start\":38382},{\"end\":38432,\"start\":38405},{\"end\":39114,\"start\":39104},{\"end\":39403,\"start\":39393},{\"end\":39695,\"start\":39685},{\"end\":39922,\"start\":39917},{\"end\":40580,\"start\":40570},{\"end\":40709,\"start\":40699},{\"end\":41027,\"start\":41017},{\"end\":41200,\"start\":41190},{\"end\":41333,\"start\":41324},{\"end\":41686,\"start\":41677}]", "table": "[{\"end\":41675,\"start\":41375},{\"end\":42314,\"start\":41806}]", "figure_caption": "[{\"end\":39391,\"start\":39116},{\"end\":39683,\"start\":39405},{\"end\":39915,\"start\":39697},{\"end\":40568,\"start\":39924},{\"end\":40697,\"start\":40582},{\"end\":41015,\"start\":40711},{\"end\":41188,\"start\":41029},{\"end\":41322,\"start\":41202},{\"end\":41375,\"start\":41335},{\"end\":41806,\"start\":41688}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8100,\"start\":8090},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":8885,\"start\":8877},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10053,\"start\":10043},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10336,\"start\":10327},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12235,\"start\":12226},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":14338,\"start\":14330},{\"end\":26575,\"start\":26567},{\"end\":27057,\"start\":27048},{\"end\":27531,\"start\":27522},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":28508,\"start\":28500},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":29620,\"start\":29610},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":30807,\"start\":30799},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":32260,\"start\":32250},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":33229,\"start\":33220},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":33487,\"start\":33477},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":33596,\"start\":33586}]", "bib_author_first_name": "[{\"end\":42407,\"start\":42403},{\"end\":42414,\"start\":42413},{\"end\":42416,\"start\":42415},{\"end\":42425,\"start\":42424},{\"end\":42435,\"start\":42434},{\"end\":42437,\"start\":42436},{\"end\":42449,\"start\":42448},{\"end\":42451,\"start\":42450},{\"end\":42460,\"start\":42459},{\"end\":42473,\"start\":42472},{\"end\":42475,\"start\":42474},{\"end\":42488,\"start\":42487},{\"end\":42490,\"start\":42489},{\"end\":42500,\"start\":42499},{\"end\":42512,\"start\":42511},{\"end\":42890,\"start\":42889},{\"end\":42892,\"start\":42891},{\"end\":42901,\"start\":42900},{\"end\":42916,\"start\":42915},{\"end\":42918,\"start\":42917},{\"end\":42929,\"start\":42928},{\"end\":42937,\"start\":42936},{\"end\":42944,\"start\":42943},{\"end\":42946,\"start\":42945},{\"end\":42957,\"start\":42956},{\"end\":42959,\"start\":42958},{\"end\":43353,\"start\":43349},{\"end\":43365,\"start\":43364},{\"end\":43374,\"start\":43373},{\"end\":43388,\"start\":43387},{\"end\":43401,\"start\":43400},{\"end\":43411,\"start\":43410},{\"end\":43420,\"start\":43419},{\"end\":43430,\"start\":43429},{\"end\":43432,\"start\":43431},{\"end\":43822,\"start\":43821},{\"end\":43830,\"start\":43829},{\"end\":43836,\"start\":43835},{\"end\":44123,\"start\":44122},{\"end\":44125,\"start\":44124},{\"end\":44134,\"start\":44133},{\"end\":44146,\"start\":44145},{\"end\":44154,\"start\":44153},{\"end\":44164,\"start\":44163},{\"end\":44166,\"start\":44165},{\"end\":44176,\"start\":44175},{\"end\":44178,\"start\":44177},{\"end\":44187,\"start\":44186},{\"end\":44189,\"start\":44188},{\"end\":44570,\"start\":44569},{\"end\":44577,\"start\":44576},{\"end\":44991,\"start\":44990},{\"end\":44995,\"start\":44992},{\"end\":45001,\"start\":45000},{\"end\":45007,\"start\":45006},{\"end\":45009,\"start\":45008},{\"end\":45017,\"start\":45016},{\"end\":45026,\"start\":45025},{\"end\":45588,\"start\":45587},{\"end\":45597,\"start\":45596},{\"end\":45614,\"start\":45613},{\"end\":45623,\"start\":45622},{\"end\":45625,\"start\":45624},{\"end\":45633,\"start\":45632},{\"end\":45635,\"start\":45634},{\"end\":45645,\"start\":45644},{\"end\":45657,\"start\":45656},{\"end\":45666,\"start\":45665},{\"end\":45676,\"start\":45675},{\"end\":45690,\"start\":45689},{\"end\":46107,\"start\":46106},{\"end\":46122,\"start\":46121},{\"end\":46133,\"start\":46132},{\"end\":46135,\"start\":46134},{\"end\":46144,\"start\":46143},{\"end\":46146,\"start\":46145},{\"end\":46480,\"start\":46479},{\"end\":46487,\"start\":46486},{\"end\":46502,\"start\":46501},{\"end\":46511,\"start\":46510},{\"end\":46513,\"start\":46512},{\"end\":46524,\"start\":46523},{\"end\":46539,\"start\":46538},{\"end\":46541,\"start\":46540},{\"end\":46553,\"start\":46552},{\"end\":46555,\"start\":46554},{\"end\":46565,\"start\":46564},{\"end\":46567,\"start\":46566},{\"end\":46576,\"start\":46575},{\"end\":46588,\"start\":46587},{\"end\":46597,\"start\":46596},{\"end\":46608,\"start\":46607},{\"end\":46615,\"start\":46614},{\"end\":46623,\"start\":46622},{\"end\":47166,\"start\":47165},{\"end\":47183,\"start\":47182},{\"end\":47190,\"start\":47189},{\"end\":47200,\"start\":47199},{\"end\":47220,\"start\":47219},{\"end\":47237,\"start\":47236},{\"end\":47255,\"start\":47254},{\"end\":47257,\"start\":47256},{\"end\":47266,\"start\":47265},{\"end\":47277,\"start\":47276},{\"end\":47296,\"start\":47295},{\"end\":47726,\"start\":47725},{\"end\":47737,\"start\":47736},{\"end\":47746,\"start\":47745},{\"end\":48047,\"start\":48046},{\"end\":48331,\"start\":48330},{\"end\":48416,\"start\":48410},{\"end\":48490,\"start\":48489},{\"end\":48492,\"start\":48491},{\"end\":48499,\"start\":48498},{\"end\":48509,\"start\":48508},{\"end\":48961,\"start\":48960},{\"end\":48963,\"start\":48962},{\"end\":48973,\"start\":48972},{\"end\":48986,\"start\":48982},{\"end\":48994,\"start\":48993},{\"end\":49005,\"start\":49004},{\"end\":49017,\"start\":49016},{\"end\":49214,\"start\":49213},{\"end\":49224,\"start\":49223},{\"end\":49236,\"start\":49235},{\"end\":49476,\"start\":49472},{\"end\":49673,\"start\":49672},{\"end\":49681,\"start\":49680},{\"end\":49693,\"start\":49692},{\"end\":49700,\"start\":49699},{\"end\":50143,\"start\":50142},{\"end\":50155,\"start\":50151},{\"end\":50166,\"start\":50165},{\"end\":50176,\"start\":50175},{\"end\":50629,\"start\":50628},{\"end\":50902,\"start\":50901},{\"end\":50912,\"start\":50911},{\"end\":50914,\"start\":50913},{\"end\":50924,\"start\":50923},{\"end\":50936,\"start\":50935},{\"end\":50958,\"start\":50957},{\"end\":50970,\"start\":50969},{\"end\":51366,\"start\":51365},{\"end\":51381,\"start\":51380},{\"end\":51383,\"start\":51382},{\"end\":51390,\"start\":51389},{\"end\":51400,\"start\":51399},{\"end\":51402,\"start\":51401},{\"end\":51750,\"start\":51749},{\"end\":51761,\"start\":51760},{\"end\":51774,\"start\":51773},{\"end\":52008,\"start\":52007},{\"end\":52018,\"start\":52017},{\"end\":52030,\"start\":52029},{\"end\":52039,\"start\":52038},{\"end\":52049,\"start\":52048},{\"end\":52051,\"start\":52050},{\"end\":52064,\"start\":52063},{\"end\":52393,\"start\":52392},{\"end\":52395,\"start\":52394},{\"end\":52571,\"start\":52570},{\"end\":52584,\"start\":52583},{\"end\":53440,\"start\":53439},{\"end\":53448,\"start\":53447},{\"end\":53461,\"start\":53460},{\"end\":53475,\"start\":53474},{\"end\":53486,\"start\":53485},{\"end\":53497,\"start\":53496},{\"end\":53505,\"start\":53504},{\"end\":53514,\"start\":53513},{\"end\":53530,\"start\":53529},{\"end\":53538,\"start\":53537},{\"end\":53540,\"start\":53539},{\"end\":54024,\"start\":54023},{\"end\":54035,\"start\":54034},{\"end\":54044,\"start\":54043},{\"end\":54493,\"start\":54492},{\"end\":54510,\"start\":54509},{\"end\":54521,\"start\":54520},{\"end\":54528,\"start\":54527},{\"end\":54547,\"start\":54546},{\"end\":54564,\"start\":54563},{\"end\":54566,\"start\":54565},{\"end\":54575,\"start\":54574},{\"end\":54587,\"start\":54586},{\"end\":54596,\"start\":54595},{\"end\":54605,\"start\":54604},{\"end\":55062,\"start\":55061},{\"end\":55075,\"start\":55074},{\"end\":55088,\"start\":55087},{\"end\":55103,\"start\":55102},{\"end\":55113,\"start\":55112},{\"end\":55124,\"start\":55123},{\"end\":55135,\"start\":55134},{\"end\":55567,\"start\":55566},{\"end\":55574,\"start\":55573},{\"end\":55576,\"start\":55575},{\"end\":55794,\"start\":55793},{\"end\":55804,\"start\":55803},{\"end\":55812,\"start\":55811},{\"end\":55826,\"start\":55825},{\"end\":55828,\"start\":55827},{\"end\":55843,\"start\":55842},{\"end\":55854,\"start\":55853},{\"end\":55866,\"start\":55865},{\"end\":55876,\"start\":55875},{\"end\":55887,\"start\":55886},{\"end\":56226,\"start\":56225},{\"end\":56233,\"start\":56232},{\"end\":56235,\"start\":56234},{\"end\":56246,\"start\":56245},{\"end\":56248,\"start\":56247},{\"end\":56257,\"start\":56256},{\"end\":56259,\"start\":56258},{\"end\":56266,\"start\":56265},{\"end\":56274,\"start\":56273},{\"end\":56276,\"start\":56275},{\"end\":56285,\"start\":56284},{\"end\":56715,\"start\":56714},{\"end\":56717,\"start\":56716},{\"end\":56724,\"start\":56723},{\"end\":56726,\"start\":56725},{\"end\":56736,\"start\":56735},{\"end\":56738,\"start\":56737},{\"end\":56749,\"start\":56748},{\"end\":56751,\"start\":56750},{\"end\":56759,\"start\":56758},{\"end\":56774,\"start\":56773},{\"end\":56785,\"start\":56784},{\"end\":56787,\"start\":56786},{\"end\":57465,\"start\":57464},{\"end\":57472,\"start\":57471},{\"end\":57481,\"start\":57480},{\"end\":57492,\"start\":57491},{\"end\":57924,\"start\":57923},{\"end\":57933,\"start\":57932},{\"end\":57943,\"start\":57942},{\"end\":57953,\"start\":57952},{\"end\":58411,\"start\":58410},{\"end\":58419,\"start\":58418},{\"end\":58425,\"start\":58424},{\"end\":58440,\"start\":58439},{\"end\":58835,\"start\":58834},{\"end\":58841,\"start\":58840},{\"end\":58849,\"start\":58848}]", "bib_author_last_name": "[{\"end\":42411,\"start\":42408},{\"end\":42422,\"start\":42417},{\"end\":42432,\"start\":42426},{\"end\":42446,\"start\":42438},{\"end\":42457,\"start\":42452},{\"end\":42470,\"start\":42461},{\"end\":42485,\"start\":42476},{\"end\":42497,\"start\":42491},{\"end\":42509,\"start\":42501},{\"end\":42517,\"start\":42513},{\"end\":42898,\"start\":42893},{\"end\":42913,\"start\":42902},{\"end\":42926,\"start\":42919},{\"end\":42934,\"start\":42930},{\"end\":42941,\"start\":42938},{\"end\":42954,\"start\":42947},{\"end\":42964,\"start\":42960},{\"end\":43362,\"start\":43354},{\"end\":43371,\"start\":43366},{\"end\":43385,\"start\":43375},{\"end\":43398,\"start\":43389},{\"end\":43408,\"start\":43402},{\"end\":43417,\"start\":43412},{\"end\":43427,\"start\":43421},{\"end\":43439,\"start\":43433},{\"end\":43827,\"start\":43823},{\"end\":43833,\"start\":43831},{\"end\":43841,\"start\":43837},{\"end\":44131,\"start\":44126},{\"end\":44143,\"start\":44135},{\"end\":44151,\"start\":44147},{\"end\":44161,\"start\":44155},{\"end\":44173,\"start\":44167},{\"end\":44184,\"start\":44179},{\"end\":44197,\"start\":44190},{\"end\":44574,\"start\":44571},{\"end\":44582,\"start\":44578},{\"end\":44998,\"start\":44996},{\"end\":45004,\"start\":45002},{\"end\":45014,\"start\":45010},{\"end\":45023,\"start\":45018},{\"end\":45030,\"start\":45027},{\"end\":45594,\"start\":45589},{\"end\":45611,\"start\":45598},{\"end\":45620,\"start\":45615},{\"end\":45630,\"start\":45626},{\"end\":45642,\"start\":45636},{\"end\":45654,\"start\":45646},{\"end\":45663,\"start\":45658},{\"end\":45673,\"start\":45667},{\"end\":45687,\"start\":45677},{\"end\":45700,\"start\":45691},{\"end\":46119,\"start\":46108},{\"end\":46130,\"start\":46123},{\"end\":46141,\"start\":46136},{\"end\":46157,\"start\":46147},{\"end\":46484,\"start\":46481},{\"end\":46499,\"start\":46488},{\"end\":46508,\"start\":46503},{\"end\":46521,\"start\":46514},{\"end\":46536,\"start\":46525},{\"end\":46550,\"start\":46542},{\"end\":46562,\"start\":46556},{\"end\":46573,\"start\":46568},{\"end\":46585,\"start\":46577},{\"end\":46594,\"start\":46589},{\"end\":46605,\"start\":46598},{\"end\":46612,\"start\":46609},{\"end\":46620,\"start\":46616},{\"end\":46637,\"start\":46624},{\"end\":47180,\"start\":47167},{\"end\":47187,\"start\":47184},{\"end\":47197,\"start\":47191},{\"end\":47217,\"start\":47201},{\"end\":47234,\"start\":47221},{\"end\":47252,\"start\":47238},{\"end\":47263,\"start\":47258},{\"end\":47274,\"start\":47267},{\"end\":47293,\"start\":47278},{\"end\":47307,\"start\":47297},{\"end\":47734,\"start\":47727},{\"end\":47743,\"start\":47738},{\"end\":47752,\"start\":47747},{\"end\":48055,\"start\":48048},{\"end\":48342,\"start\":48332},{\"end\":48427,\"start\":48417},{\"end\":48496,\"start\":48493},{\"end\":48506,\"start\":48500},{\"end\":48517,\"start\":48510},{\"end\":48524,\"start\":48519},{\"end\":48970,\"start\":48964},{\"end\":48980,\"start\":48974},{\"end\":48991,\"start\":48987},{\"end\":49002,\"start\":48995},{\"end\":49014,\"start\":49006},{\"end\":49025,\"start\":49018},{\"end\":49221,\"start\":49215},{\"end\":49233,\"start\":49225},{\"end\":49243,\"start\":49237},{\"end\":49483,\"start\":49477},{\"end\":49678,\"start\":49674},{\"end\":49690,\"start\":49682},{\"end\":49697,\"start\":49694},{\"end\":49707,\"start\":49701},{\"end\":50149,\"start\":50144},{\"end\":50163,\"start\":50156},{\"end\":50173,\"start\":50167},{\"end\":50179,\"start\":50177},{\"end\":50637,\"start\":50630},{\"end\":50650,\"start\":50639},{\"end\":50909,\"start\":50903},{\"end\":50921,\"start\":50915},{\"end\":50933,\"start\":50925},{\"end\":50955,\"start\":50937},{\"end\":50967,\"start\":50959},{\"end\":50983,\"start\":50971},{\"end\":51378,\"start\":51367},{\"end\":51387,\"start\":51384},{\"end\":51397,\"start\":51391},{\"end\":51408,\"start\":51403},{\"end\":51758,\"start\":51751},{\"end\":51771,\"start\":51762},{\"end\":51780,\"start\":51775},{\"end\":52015,\"start\":52009},{\"end\":52027,\"start\":52019},{\"end\":52036,\"start\":52031},{\"end\":52046,\"start\":52040},{\"end\":52061,\"start\":52052},{\"end\":52070,\"start\":52065},{\"end\":52078,\"start\":52072},{\"end\":52400,\"start\":52396},{\"end\":52581,\"start\":52572},{\"end\":52595,\"start\":52585},{\"end\":52606,\"start\":52597},{\"end\":53445,\"start\":53441},{\"end\":53458,\"start\":53449},{\"end\":53472,\"start\":53462},{\"end\":53483,\"start\":53476},{\"end\":53494,\"start\":53487},{\"end\":53502,\"start\":53498},{\"end\":53511,\"start\":53506},{\"end\":53527,\"start\":53515},{\"end\":53535,\"start\":53531},{\"end\":53547,\"start\":53541},{\"end\":54032,\"start\":54025},{\"end\":54041,\"start\":54036},{\"end\":54052,\"start\":54045},{\"end\":54507,\"start\":54494},{\"end\":54518,\"start\":54511},{\"end\":54525,\"start\":54522},{\"end\":54544,\"start\":54529},{\"end\":54561,\"start\":54548},{\"end\":54572,\"start\":54567},{\"end\":54584,\"start\":54576},{\"end\":54593,\"start\":54588},{\"end\":54602,\"start\":54597},{\"end\":54616,\"start\":54606},{\"end\":55072,\"start\":55063},{\"end\":55085,\"start\":55076},{\"end\":55100,\"start\":55089},{\"end\":55110,\"start\":55104},{\"end\":55121,\"start\":55114},{\"end\":55132,\"start\":55125},{\"end\":55149,\"start\":55136},{\"end\":55571,\"start\":55568},{\"end\":55584,\"start\":55577},{\"end\":55801,\"start\":55795},{\"end\":55809,\"start\":55805},{\"end\":55823,\"start\":55813},{\"end\":55840,\"start\":55829},{\"end\":55851,\"start\":55844},{\"end\":55863,\"start\":55855},{\"end\":55873,\"start\":55867},{\"end\":55884,\"start\":55877},{\"end\":55896,\"start\":55888},{\"end\":56230,\"start\":56227},{\"end\":56243,\"start\":56236},{\"end\":56254,\"start\":56249},{\"end\":56263,\"start\":56260},{\"end\":56271,\"start\":56267},{\"end\":56282,\"start\":56277},{\"end\":56295,\"start\":56286},{\"end\":56721,\"start\":56718},{\"end\":56733,\"start\":56727},{\"end\":56746,\"start\":56739},{\"end\":56756,\"start\":56752},{\"end\":56771,\"start\":56760},{\"end\":56782,\"start\":56775},{\"end\":56793,\"start\":56788},{\"end\":57469,\"start\":57466},{\"end\":57478,\"start\":57473},{\"end\":57489,\"start\":57482},{\"end\":57499,\"start\":57493},{\"end\":57930,\"start\":57925},{\"end\":57940,\"start\":57934},{\"end\":57950,\"start\":57944},{\"end\":57960,\"start\":57954},{\"end\":58416,\"start\":58412},{\"end\":58422,\"start\":58420},{\"end\":58437,\"start\":58426},{\"end\":58447,\"start\":58441},{\"end\":58838,\"start\":58836},{\"end\":58846,\"start\":58842},{\"end\":58856,\"start\":58850},{\"end\":59178,\"start\":59170}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1038/nature13302\",\"id\":\"b0\",\"matched_paper_id\":4397578},\"end\":42759,\"start\":42368},{\"attributes\":{\"doi\":\"10.1038/nbt.3267\",\"id\":\"b1\",\"matched_paper_id\":7515640},\"end\":43267,\"start\":42761},{\"attributes\":{\"doi\":\"10.1074/mcp.M111.011429\",\"id\":\"b2\",\"matched_paper_id\":19569565},\"end\":43739,\"start\":43269},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":54524738},\"end\":44076,\"start\":43741},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":8681431},\"end\":44474,\"start\":44078},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":21136001},\"end\":44846,\"start\":44476},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":242948617},\"end\":45479,\"start\":44848},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":12869639},\"end\":46021,\"start\":45481},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":231885082},\"end\":46394,\"start\":46023},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":246384071},\"end\":47069,\"start\":46396},{\"attributes\":{\"id\":\"b10\"},\"end\":47680,\"start\":47071},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":926364},\"end\":47919,\"start\":47682},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":733980},\"end\":48282,\"start\":47921},{\"attributes\":{\"id\":\"b13\"},\"end\":48406,\"start\":48284},{\"attributes\":{\"id\":\"b14\"},\"end\":48453,\"start\":48408},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":15284090},\"end\":48956,\"start\":48455},{\"attributes\":{\"id\":\"b16\"},\"end\":49156,\"start\":48958},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":222378549},\"end\":49468,\"start\":49158},{\"attributes\":{\"id\":\"b18\"},\"end\":49582,\"start\":49470},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":247037290},\"end\":50006,\"start\":49584},{\"attributes\":{\"id\":\"b20\"},\"end\":50050,\"start\":50008},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":355163},\"end\":50555,\"start\":50052},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":9796413},\"end\":50823,\"start\":50557},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":206668156},\"end\":51285,\"start\":50825},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":91516960},\"end\":51615,\"start\":51287},{\"attributes\":{\"id\":\"b25\"},\"end\":52005,\"start\":51617},{\"attributes\":{\"id\":\"b26\"},\"end\":52325,\"start\":52007},{\"attributes\":{\"id\":\"b27\"},\"end\":52503,\"start\":52327},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":14153811},\"end\":53311,\"start\":52505},{\"attributes\":{\"id\":\"b29\"},\"end\":53877,\"start\":53313},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":25076393},\"end\":54387,\"start\":53879},{\"attributes\":{\"id\":\"b31\"},\"end\":54979,\"start\":54389},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":155965057},\"end\":55485,\"start\":54981},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":8535829},\"end\":55748,\"start\":55487},{\"attributes\":{\"id\":\"b34\"},\"end\":56118,\"start\":55750},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":1600543},\"end\":56554,\"start\":56120},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":155313613},\"end\":57376,\"start\":56556},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":219858990},\"end\":57850,\"start\":57378},{\"attributes\":{\"id\":\"b38\"},\"end\":58109,\"start\":57852},{\"attributes\":{\"id\":\"b39\"},\"end\":58265,\"start\":58111},{\"attributes\":{\"id\":\"b40\"},\"end\":58299,\"start\":58267},{\"attributes\":{\"id\":\"b41\"},\"end\":58747,\"start\":58301},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":251744339},\"end\":59166,\"start\":58749},{\"attributes\":{\"id\":\"b43\"},\"end\":59206,\"start\":59168}]", "bib_title": "[{\"end\":42401,\"start\":42368},{\"end\":42887,\"start\":42761},{\"end\":43347,\"start\":43269},{\"end\":43819,\"start\":43741},{\"end\":44120,\"start\":44078},{\"end\":44567,\"start\":44476},{\"end\":44988,\"start\":44848},{\"end\":45585,\"start\":45481},{\"end\":46104,\"start\":46023},{\"end\":46477,\"start\":46396},{\"end\":47723,\"start\":47682},{\"end\":48044,\"start\":47921},{\"end\":48487,\"start\":48455},{\"end\":49211,\"start\":49158},{\"end\":49670,\"start\":49584},{\"end\":50140,\"start\":50052},{\"end\":50626,\"start\":50557},{\"end\":50899,\"start\":50825},{\"end\":51363,\"start\":51287},{\"end\":52568,\"start\":52505},{\"end\":54021,\"start\":53879},{\"end\":55059,\"start\":54981},{\"end\":55564,\"start\":55487},{\"end\":56223,\"start\":56120},{\"end\":56712,\"start\":56556},{\"end\":57462,\"start\":57378},{\"end\":58832,\"start\":58749}]", "bib_author": "[{\"end\":42413,\"start\":42403},{\"end\":42424,\"start\":42413},{\"end\":42434,\"start\":42424},{\"end\":42448,\"start\":42434},{\"end\":42459,\"start\":42448},{\"end\":42472,\"start\":42459},{\"end\":42487,\"start\":42472},{\"end\":42499,\"start\":42487},{\"end\":42511,\"start\":42499},{\"end\":42519,\"start\":42511},{\"end\":42900,\"start\":42889},{\"end\":42915,\"start\":42900},{\"end\":42928,\"start\":42915},{\"end\":42936,\"start\":42928},{\"end\":42943,\"start\":42936},{\"end\":42956,\"start\":42943},{\"end\":42966,\"start\":42956},{\"end\":43364,\"start\":43349},{\"end\":43373,\"start\":43364},{\"end\":43387,\"start\":43373},{\"end\":43400,\"start\":43387},{\"end\":43410,\"start\":43400},{\"end\":43419,\"start\":43410},{\"end\":43429,\"start\":43419},{\"end\":43441,\"start\":43429},{\"end\":43829,\"start\":43821},{\"end\":43835,\"start\":43829},{\"end\":43843,\"start\":43835},{\"end\":44133,\"start\":44122},{\"end\":44145,\"start\":44133},{\"end\":44153,\"start\":44145},{\"end\":44163,\"start\":44153},{\"end\":44175,\"start\":44163},{\"end\":44186,\"start\":44175},{\"end\":44199,\"start\":44186},{\"end\":44576,\"start\":44569},{\"end\":44584,\"start\":44576},{\"end\":45000,\"start\":44990},{\"end\":45006,\"start\":45000},{\"end\":45016,\"start\":45006},{\"end\":45025,\"start\":45016},{\"end\":45032,\"start\":45025},{\"end\":45596,\"start\":45587},{\"end\":45613,\"start\":45596},{\"end\":45622,\"start\":45613},{\"end\":45632,\"start\":45622},{\"end\":45644,\"start\":45632},{\"end\":45656,\"start\":45644},{\"end\":45665,\"start\":45656},{\"end\":45675,\"start\":45665},{\"end\":45689,\"start\":45675},{\"end\":45702,\"start\":45689},{\"end\":46121,\"start\":46106},{\"end\":46132,\"start\":46121},{\"end\":46143,\"start\":46132},{\"end\":46159,\"start\":46143},{\"end\":46486,\"start\":46479},{\"end\":46501,\"start\":46486},{\"end\":46510,\"start\":46501},{\"end\":46523,\"start\":46510},{\"end\":46538,\"start\":46523},{\"end\":46552,\"start\":46538},{\"end\":46564,\"start\":46552},{\"end\":46575,\"start\":46564},{\"end\":46587,\"start\":46575},{\"end\":46596,\"start\":46587},{\"end\":46607,\"start\":46596},{\"end\":46614,\"start\":46607},{\"end\":46622,\"start\":46614},{\"end\":46639,\"start\":46622},{\"end\":47182,\"start\":47165},{\"end\":47189,\"start\":47182},{\"end\":47199,\"start\":47189},{\"end\":47219,\"start\":47199},{\"end\":47236,\"start\":47219},{\"end\":47254,\"start\":47236},{\"end\":47265,\"start\":47254},{\"end\":47276,\"start\":47265},{\"end\":47295,\"start\":47276},{\"end\":47309,\"start\":47295},{\"end\":47736,\"start\":47725},{\"end\":47745,\"start\":47736},{\"end\":47754,\"start\":47745},{\"end\":48057,\"start\":48046},{\"end\":48344,\"start\":48330},{\"end\":48429,\"start\":48410},{\"end\":48498,\"start\":48489},{\"end\":48508,\"start\":48498},{\"end\":48519,\"start\":48508},{\"end\":48526,\"start\":48519},{\"end\":48972,\"start\":48960},{\"end\":48982,\"start\":48972},{\"end\":48993,\"start\":48982},{\"end\":49004,\"start\":48993},{\"end\":49016,\"start\":49004},{\"end\":49027,\"start\":49016},{\"end\":49223,\"start\":49213},{\"end\":49235,\"start\":49223},{\"end\":49245,\"start\":49235},{\"end\":49485,\"start\":49472},{\"end\":49680,\"start\":49672},{\"end\":49692,\"start\":49680},{\"end\":49699,\"start\":49692},{\"end\":49709,\"start\":49699},{\"end\":50151,\"start\":50142},{\"end\":50165,\"start\":50151},{\"end\":50175,\"start\":50165},{\"end\":50181,\"start\":50175},{\"end\":50639,\"start\":50628},{\"end\":50652,\"start\":50639},{\"end\":50911,\"start\":50901},{\"end\":50923,\"start\":50911},{\"end\":50935,\"start\":50923},{\"end\":50957,\"start\":50935},{\"end\":50969,\"start\":50957},{\"end\":50985,\"start\":50969},{\"end\":51380,\"start\":51365},{\"end\":51389,\"start\":51380},{\"end\":51399,\"start\":51389},{\"end\":51410,\"start\":51399},{\"end\":51760,\"start\":51749},{\"end\":51773,\"start\":51760},{\"end\":51782,\"start\":51773},{\"end\":52017,\"start\":52007},{\"end\":52029,\"start\":52017},{\"end\":52038,\"start\":52029},{\"end\":52048,\"start\":52038},{\"end\":52063,\"start\":52048},{\"end\":52072,\"start\":52063},{\"end\":52080,\"start\":52072},{\"end\":52402,\"start\":52392},{\"end\":52583,\"start\":52570},{\"end\":52597,\"start\":52583},{\"end\":52608,\"start\":52597},{\"end\":53447,\"start\":53439},{\"end\":53460,\"start\":53447},{\"end\":53474,\"start\":53460},{\"end\":53485,\"start\":53474},{\"end\":53496,\"start\":53485},{\"end\":53504,\"start\":53496},{\"end\":53513,\"start\":53504},{\"end\":53529,\"start\":53513},{\"end\":53537,\"start\":53529},{\"end\":53549,\"start\":53537},{\"end\":54034,\"start\":54023},{\"end\":54043,\"start\":54034},{\"end\":54054,\"start\":54043},{\"end\":54509,\"start\":54492},{\"end\":54520,\"start\":54509},{\"end\":54527,\"start\":54520},{\"end\":54546,\"start\":54527},{\"end\":54563,\"start\":54546},{\"end\":54574,\"start\":54563},{\"end\":54586,\"start\":54574},{\"end\":54595,\"start\":54586},{\"end\":54604,\"start\":54595},{\"end\":54618,\"start\":54604},{\"end\":55074,\"start\":55061},{\"end\":55087,\"start\":55074},{\"end\":55102,\"start\":55087},{\"end\":55112,\"start\":55102},{\"end\":55123,\"start\":55112},{\"end\":55134,\"start\":55123},{\"end\":55151,\"start\":55134},{\"end\":55573,\"start\":55566},{\"end\":55586,\"start\":55573},{\"end\":55803,\"start\":55793},{\"end\":55811,\"start\":55803},{\"end\":55825,\"start\":55811},{\"end\":55842,\"start\":55825},{\"end\":55853,\"start\":55842},{\"end\":55865,\"start\":55853},{\"end\":55875,\"start\":55865},{\"end\":55886,\"start\":55875},{\"end\":55898,\"start\":55886},{\"end\":56232,\"start\":56225},{\"end\":56245,\"start\":56232},{\"end\":56256,\"start\":56245},{\"end\":56265,\"start\":56256},{\"end\":56273,\"start\":56265},{\"end\":56284,\"start\":56273},{\"end\":56297,\"start\":56284},{\"end\":56723,\"start\":56714},{\"end\":56735,\"start\":56723},{\"end\":56748,\"start\":56735},{\"end\":56758,\"start\":56748},{\"end\":56773,\"start\":56758},{\"end\":56784,\"start\":56773},{\"end\":56795,\"start\":56784},{\"end\":57471,\"start\":57464},{\"end\":57480,\"start\":57471},{\"end\":57491,\"start\":57480},{\"end\":57501,\"start\":57491},{\"end\":57932,\"start\":57923},{\"end\":57942,\"start\":57932},{\"end\":57952,\"start\":57942},{\"end\":57962,\"start\":57952},{\"end\":58418,\"start\":58410},{\"end\":58424,\"start\":58418},{\"end\":58439,\"start\":58424},{\"end\":58449,\"start\":58439},{\"end\":58840,\"start\":58834},{\"end\":58848,\"start\":58840},{\"end\":58858,\"start\":58848},{\"end\":59180,\"start\":59170}]", "bib_venue": "[{\"end\":42544,\"start\":42538},{\"end\":43002,\"start\":42982},{\"end\":43496,\"start\":43475},{\"end\":43930,\"start\":43915},{\"end\":44287,\"start\":44259},{\"end\":44684,\"start\":44656},{\"end\":45132,\"start\":45104},{\"end\":45734,\"start\":45720},{\"end\":46202,\"start\":46175},{\"end\":46739,\"start\":46711},{\"end\":47163,\"start\":47071},{\"end\":47801,\"start\":47781},{\"end\":48103,\"start\":48082},{\"end\":48328,\"start\":48284},{\"end\":48626,\"start\":48549},{\"end\":49043,\"start\":49027},{\"end\":49308,\"start\":49265},{\"end\":49798,\"start\":49742},{\"end\":50014,\"start\":50010},{\"end\":50278,\"start\":50181},{\"end\":50690,\"start\":50673},{\"end\":51072,\"start\":51057},{\"end\":51448,\"start\":51436},{\"end\":51747,\"start\":51617},{\"end\":52160,\"start\":52101},{\"end\":52390,\"start\":52327},{\"end\":52758,\"start\":52608},{\"end\":53437,\"start\":53313},{\"end\":54154,\"start\":54126},{\"end\":54490,\"start\":54389},{\"end\":55251,\"start\":55223},{\"end\":55615,\"start\":55604},{\"end\":55791,\"start\":55750},{\"end\":56329,\"start\":56319},{\"end\":56909,\"start\":56878},{\"end\":57586,\"start\":57501},{\"end\":57921,\"start\":57852},{\"end\":58187,\"start\":58113},{\"end\":58273,\"start\":58269},{\"end\":58408,\"start\":58301},{\"end\":58942,\"start\":58881},{\"end\":48698,\"start\":48628},{\"end\":52917,\"start\":52760},{\"end\":58990,\"start\":58944}]"}}}, "year": 2023, "month": 12, "day": 17}