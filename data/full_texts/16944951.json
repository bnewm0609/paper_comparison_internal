{"id": 16944951, "updated": "2022-03-16 09:17:21.41", "metadata": {"title": "OpenMili: a 60 GHz software radio platform with a reconfigurable phased-array antenna", "authors": "[{\"first\":\"Jialiang\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Xinyu\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Pushkar\",\"last\":\"Kulkarni\",\"middle\":[]},{\"first\":\"Parameswaran\",\"last\":\"Ramanathan\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 22nd Annual International Conference on Mobile Computing and Networking", "publication_date": {"year": 2016, "month": null, "day": null}, "abstract": "The 60 GHz wireless technology holds great potential for multi-Gbps communications and high-precision radio sensing. But the lack of an accessible experimental platform has been impeding its progress. In this paper, we overcome the barrier with OpenMili, a reconfigurable 60 GHz radio architecture. OpenMili builds from off-the-shelf FPGA processor, data converters and 60 GHz RF front-end. It employs customized clocking, channelization and interfacing modules, to achieve Gsps sampling bandwidth, Gbps wireless bit-rate, and Gsps sample streaming from/to a PC host. It also incorporates the first programmable, electronically steerable 60 GHz phased-array antenna. OpenMili adopts programming models that ease development, through automatic parallelization inside signal processing blocks, and modular, rate-insensitive interfaces across blocks. It provides common reference designs to bootstrap the development of new network protocols and sensing applications. We verify the effectiveness of OpenMili through benchmark communication/sensing experiments, and showcase its usage by prototyping a pairwise phased-array localization scheme, and a learning-assisted real-time beam adaptation protocol.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2526381904", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/mobicom/ZhangZKR16", "doi": "10.1145/2973750.2973760"}}, "content": {"source": {"pdf_hash": "389bacd0c4fcd05a569e8a02b1bd730f04c610e9", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "http://dl.acm.org/ft_gateway.cfm?id=2973760&type=pdf", "status": "BRONZE"}}, "grobid": {"id": "3bc0f1cf36f7c39b9214cceb943361b2a5d8a948", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/389bacd0c4fcd05a569e8a02b1bd730f04c610e9.txt", "contents": "\nOpenMili: A 60 GHz Software Radio Platform With a Reconfigurable Phased-Array Antenna\n\n\nJialiang Zhang jialiang.zhang@ece.wisc.edu \nDepartment of Electrical and Computer Engineering\nUniversity of Wisconsin-Madison\n\n\nXinyu Zhang xyzhang@ece.wisc.edu \nDepartment of Electrical and Computer Engineering\nUniversity of Wisconsin-Madison\n\n\nPushkar Kulkarni pkulkarni@wisc.edu \nDepartment of Electrical and Computer Engineering\nUniversity of Wisconsin-Madison\n\n\nParameswaran Ramanathan parmesh.ramanathan@wisc.edu \nDepartment of Electrical and Computer Engineering\nUniversity of Wisconsin-Madison\n\n\nOpenMili: A 60 GHz Software Radio Platform With a Reconfigurable Phased-Array Antenna\n10.1145/2973750.2973760CCS Concepts \u2022Networks \u2192 Network experimentationProgramming in- terfaces\u2022Hardware \u2192 Digital signal processing\u2022Computer systems organization \u2192 Reconfigurable computingKeywords 60 GHz, Millimeter-wave, Software radio, Testbed, Experi- mental platform\nThe 60 GHz wireless technology holds great potential for multi-Gbps communications and high-precision radio sensing. But the lack of an accessible experimental platform has been impeding its progress. In this paper, we overcome the barrier with OpenMili, a reconfigurable 60 GHz radio architecture. OpenMili builds from off-the-shelf FPGA processor, data converters and 60 GHz RF front-end. It employs customized clocking, channelization and interfacing modules, to achieve Gsps sampling bandwidth, Gbps wireless bit-rate, and Gsps sample streaming from/to a PC host. It also incorporates the first programmable, electronically steerable 60 GHz phased-array antenna. OpenMili adopts programming models that ease development, through automatic parallelization inside signal processing blocks, and modular, rate-insensitive interfaces across blocks. It provides common reference designs to bootstrap the development of new network protocols and sensing applications. We verify the effectiveness of OpenMili through benchmark communication/sensing experiments, and showcase its usage by prototyping a pairwise phased-array localization scheme, and a learning-assisted real-time beam adaptation protocol.\n\nINTRODUCTION\n\nThe unlicensed millimeter-wave (mmWave) spectrum around the 60 GHz frequency promises a blueprint of wireless networking at wire-speed. The vast amount of spectrum re-Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. source, spanning 57 GHz to 64 GHz in many countries, enables multi-Gpbs data rate. The small wavelength (\u223c 5mm) enables miniature antenna-arrays that can form highly directional \"pencil beams\" to boost link quality and spatial reuse. mmWave is thus considered as an enabling technology for 5G wireless broadband [1]. Recent commercialization of 60 GHz devices (e.g., by Qualcomm [2] and Intel [3]) also triggers low-cost mmWave sensing applications, which used to be available only in dedicated environment for medical/security inspection. Together, short wavelength and high directionality translates into high sensitivity, enabling subtle object localization/tracking [4], vital-sign detection and mobile mmWave imaging [5].\n\nRealizing the vision of mmWave networking and sensing necessitates a reconfigurable experimental platform that allows prototyping before the protocols/applications are deployed. Ideally, one would need a mmWave software-radio platform that allows reconfiguration from the PHY layer up to applications, can transmit customized waveforms and acquire RSS/phase information for sensing applications [4,[6][7][8]. On the 2.4 GHz and 5 GHz microwave spectrum, counterpart devices such as USRP [9], WARP [10] and Sora [11] have reshaped the landscape of wireless experimentation in the past decade, speeding up the ratification of nextgeneration wireless standards (e.g., 802.11ax [12]) and sensing appliances [13]. However, to our knowledge, there exists no reconfigurable platform that can capture the unique features of 60 GHz wireless systems, particularly the Gsps sampling bandwidth and electronically steerable phased-array antennas.\n\nIn this paper, we propose OpenMili, an open-access 60 GHz software-radio, which fills the gap and opens up new directions for mmWave sensing and protocol development. OpenMili has a software-defined mmWave network stack spanning PHY layer signal processing to applications. It can also act as a programmable 60 GHz radio sensor with a custom-built phased-array. From the hardware architecture perspective, OpenMili integrates off-the-shelf baseband processing unit (BPU), ADC/DAC and 60 GHz RF front-end (frequency up/down-converters), and develops a signal chain to enable Gsps of sampling bandwidth. It allows flexible channelization and reclocks the 60 GHz front-end to overcome its inherent phase-noise problem. OpenMili's baseband processing unit (BPU) centers around a Kintex Ultra-Scale FPGA, and uses a customized PCIe module to realize 1 Gsps real-time sample streaming from/to a PC host. The PC host can reconfigure/monitor the RF front-end and signal processing modules in real-time. OpenMili's most out-standing feature is a reconfigurable phased-array antenna that can switch between 16 beam patterns at \u03bcs granularity, under the control of the BPU. We design the phased-array specifically to fit the WR-15 waveguide (a standard antenna interface on 60 GHz radios), ensuring it can retrofit both OpenMili's RF front-end and other commercial mmWave radios that are typically equipped with WR-15 horn antennas [14].\n\nFrom the software architecture perspective, OpenMili takes advantage of the massive parallelization on the FPGA to enable Gsps sample processing. It eases prototyping by using C++ to define signal processing blocks, and using AXI [15] as inter-block gluing mechanism, which facilitates modularity and eliminates the need for inter-block rate matchinga well-known headache in FPGA programming. We choose this programming model also because the complexity of intrablock parallelization can be hidden from application developers, although coarse-grained inter-block parallelization still need to be explicitly expressed.\n\nOpenMili provides three reference designs which we believe to capture the unique aspects of mmWave and can be instrumental for a wide range of 60 GHz network protocols and wireless sensing applications [4,[6][7][8]. (i) Gbps baseband communication module: allowing a wide range of network protocol development on the FPGA or PC host; (ii) Real-time RSS/phase sensing: using an 802.11ad-like preamble to sense the channel state information (CSI), with around 300K CSI readings per second across 1 GHz bandwidth, enabling many real-time sensing applications [8]. (iii) Real-time phased-array controller: allowing 16 beamforming patterns based on a discrete codebook. Codebook entry selection is made in real-time on a Microblaze processor, programmable in C. This module can also access the real-time CSI statistics, allowing beam adaptation based on channel conditions.\n\nTo showcase the use of OpenMili in prototyping 60 GHz systems, we propose and implement two new 60 GHz location sensing and beamforming adaptation mechanisms, which are of independent interest. (i) Pairwise relative localization of phased-arrays. Many recent systems have used 2.4 GHz phased-arrays [16,17] for angle-of-arrival (AoA) estimation, but they need multiple phased-arrays to triangulate a target radio, and they assume the phase-shift values are continuously adjustable, which is not applicable to practical 60 GHz phased-arrays that use hard-wired phase-shifters. We propose a simple algorithm that leverages the discrete phaseshifting to estimate the AoA as well as distance between a pair of phased-arrays, enabling pairwise localization instead of triangulation. (ii) Learning-assisted real-time beam adaptation. The short-wavelength at 60 GHz enables compact phased-array design, with many antenna elements but correspondingly a large number of beamforming codebook entries to choose from, which entails huge adaptation overhead at run time. We propose a new principle to make this tradeoff: we allow a pair of phased-array nodes to learn the correlation between beam patterns offline, and then prune the adaptation space at run-time, which substantially saves the beam searching overhead.\n\nContributions. To prepare for an open-source release, we have intentionally used off-the-shelf hardware modules to build OpenMili (except for the programmable phasedarray). Our main contribution lies in tasking these modules into a reconfigurable architecture, designing the soft- ware framework and common interfaces to enable the development of new mmWave communication and sensing applications. This contribution breaks down into the following aspects: (i) Hardware architecture (Sec. 2 and 4): We develop the first 60 GHz reconfigurable radio architecture that achieves Gsps sampling bandwidth, Gbps wireless bit-rate, and Gsps real-time sample streaming from/to a PC host. The hardware architecture builds on customized clocking, channelization and interfacing modules. Most remarkably, it incorporates the first programmable 60 GHz phased-array design.\n\n(ii) Software framework (Sec. 3): We explore FPGA programming models that ease development, through automatic parallelization inside signal processing blocks, and modular, rate-insensitive interfaces across blocks. We also provide reference designs to bootstrap the development of protocols and sensing applications, featuring the Gbps communications and beam steering capabilities of 60 GHz radios.\n\n(iii) New network protocol and sensing modality (Sec. 6): We design a new 60 GHz beam adaptation protocol and a simple pairwise location application. We further showcase the usefulness of the reconfigurable platform in prototyping and experimenting with such mechanisms.\n\nThe software code and hardware schematics of OpenMili will be available on our project website [18].\n\n\nHARDWARE ARCHITECTURE\n\nThe diagram in Figure 1 and portrait in Figure 2 illustrate OpenMili's hardware architecture and Tx/Rx signal chains. OpenMili comprises 5 major modules: PC host, baseband processing unit (BPU), data converters (ADC/DAC), RF front-end, and phased-array antenna. The PC host configures the high-level parameters of other modules, and can also generate digital waveforms or log the received digital signal samples for offline processing. It interfaces with the BPU via PCIe gen3. The BPU is an FPGA module that executes real-time physical layer signal processing and MAC layer protocols. Along the Tx signal chain, basedband signals generated by the BPU or PC host are eventually converted to analog waveforms by the DAC, upconverted to 60 GHz by the RF front-end, and emitted through a custombuilt phased-array antenna; and vice versa for the Rx signal chain.\n\nBesides reconfigurability, the hardware architecture aims for a few ambitious performance goals: Gsps sampling rate, real-time Gsps signal processing at BPU and sample transportation to PC host, and low phase noise. Below we describe the hardware modules, along with the interface design and optimization to meet the goals.\n\n\nHardware Modules\n\nRF front-end. OpenMili uses the PEM-003 60 GHz transceivers [19] as RF front-end. PEM-003 is essentially an 802.11ad compatible frequency up-converter/down-converter. Its carrier frequency can switch between 4 channels from 57.24 GHz to 64.80 GHz, each channel spanning 1.8 GHz analog bandwidth. Alternatively, it can degrade to a custommode, and switch between 15 channels, each spanning 540 MHz. It also has a programmable RF gain controller, allowing continuous adjustment of output power up to 12 dBm. PEM-003 can be connected to any 60 GHz antennas with a WR-15 waveguide interface.\n\nBaseband processing unit (BPU). OpenMili's BPU employs Xilinx's KCU105 development board, centered around a Kintex UltraScale FPGA XCKU040. We choose XCKU040 FPGA as it supports the PCIe gen3 interface which can provide enough bandwidth to support multi-Gsps data streaming to a PC host. Also, it has 1920 on-chip DSP slices that serve as arithmetic logic units (ALU). Each DSP slice has two 32-bit adder, one 24-bit multiplier and other logics (e.g., multiplexer, shifter). The DSP slices together can provide a computation throughput of up to 960G multiply and add operations per second, making Gsps signal processing possible.\n\nThe BPU acts as the central processing module within the OpenMili architecture. It not only executes real-time signal processing, but also houses the FMC (FPGA magazine board) sampling board that interfaces with the data converters, and the PCIe interface to the PC host, as well as 1.8V GPIO (AXI-lite to control, 40 MHz max I/O speed) to control the phased array antenna.\n\nADC and DAC. OpenMili's data converter module employs the FMCDAQ2 development board [20] from Analog Devices, which integrates a dual-channel AD9680 ADC [21], AD9144 DAC [22], and other peripheral components on an FMC daughter board attached to the BPU.\n\nEach ADC channel (I or Q) samples at 1 Gsps with a 12bit resolution, supporting up to 1 GHz bandwidth within the baseband. It has an internal data path with 2\u00d7, 4\u00d7 and 8\u00d7 decimation filters, and a numerically controlled oscillator. This makes it possible to instantaneously switch between different bandwidth configurations under the control of the BPU.\n\nThe DAC has 14-bit high resolution, and default to 1 Gsps sampling rate to match the ADC rate. Its outputs waveforms are staircase-like, whose frequency response is a sinc function and causes a 6 dB loss at the maximum sampling frequency [23]. This will degrade the magnitude of highfrequency baseband signals. To reduce such frequency selective artifacts, we enable the 2\u00d7 upsampler inside the DAC, which increases the output sampling rate from 1 Gsps to 2 Gsps. Such oversampling effectively limits the bandwidth of output baseband signals to 1 GHz, within which the DAC's gain remains relatively flat.\n\n\nDesigning Interfaces Between Hardware Modules\n\nInterfacing data converters with RF front-end. The PEM-003 RF front-end can only output or receive I/Q samples via a differential interface, i.e., it has no reference to ground and voltage samples are taken as the difference between two wires. Yet, the data converters use a single-ended interface, with voltage measured between a single wire and ground. To bridge the PEM-003 and data converters, we insert a BALUN circuit [24] which performs the single-ended to differential conversion for each I and Q channel. Each BALUN has 500 MHz bandwidth, so it also serves as an analog low-pass filter for the I/Q channel, preventing the notorious aliasing effect caused by digital sampling [23].\n\nAn additional interfacing issue lies in voltage mismatch: the DAC has an output power level of 0 dBm [25], whereas the maximum input level of the PEM-003 is -20 dBm. To overcome this issue, we insert a 30 dB attenuator in between, which ensures a -30 dBm input power into PEM-003, well below the limit. Albeit conservative, this does not sacrifice performance, because PEM-003 has an RF gain up to 38 dBm, which can rescale the input signals to 38\u221230 = 8 dBm and still ensure the transmitter is not saturated (PEM-003's transmitter front-end saturates at around 12 dBm [26]). On the other hand, PEM-003's receiver front-end has a variable gain amplifier, which can be adjusted to match the ADC's input power level without any external attenuator.\n\nInterfacing BPU and data converters using JESD-204B. The ADC/DAC use JESD204B, a high-speed serial interfacing protocol, to transport data samples from/to the BPU's FPGA. JESD204B transports data in the units of 16-bit (to cover the maximum resolution of data converters), and the sampling rate of both I and Q channels are 1 Gsps. So the total data rates on the JESD204B interface is 16 bps/converter \u00b7 2converters \u00b7 1Gsps = 32Gbps. Together with 25% overhead induced by JESD204B's error correction code, the total data rate is 40 Gbps. Both the ADC and DAC use up to 4 serial channels, each being a copper line with 10.76 Gbps maximum rate. So we reconfigure the JESD204B and limit each channel's rate to 10 Gsps to meet the 40 Gbps requirement.\n\nInterfaces to the PC host. To interface the BPU with the PC host, we custom-built a PCIe gen3 driver, which allows the BPU to route all digital samples in real time between the PC and the data converters (detailed in Sec. 3.2). Between the PEM-003 RF front-end and the PC host, there exists a built-in USB interface, with a proprietary graphical interface for configuring the RF parameters. But this interface precludes integration with other components in Open-Mili. We thus reverse-engineer the USB interface using US-BPcap [27], and decypher the configuration commands and USB protocols between the host and PEM-003. Then, we develop our own USB driver in C, which replays the protocol to reconfigure the PEM-003 via real-time command lines. \n\n\nReclocking and Noise Reduction\n\nReducing carrier clock noise. Phase noise, i.e., shortterm fluctuation in the phase of carrier waveform, represents a key metric in rating an RF front-end. For a millimeterwave radio, phase-noise is especially critical, because the carrier clock (tens of GHz) is generated by multiplying a lowfrequency (MHz) reference clock, and even a low phase-noise at the reference will be magnified by orders of magnitude [28]. Specific to the PEM-003 front-end, its reference clock works at 308.571 MHz, and the phase-noise will be amplified by 60GHz/308.571MHz = 194 = 23dB.\n\nFor an empirical understanding the phase noise of PEM-003, we send a 100 MHz baseband sine tone with a constant magnitude, using a highly-directional 3.4 \u2022 horn antenna to preclude multipath channel distortion. Figure 3(a) shows the received waveform, whose magnitude manifests many notches over time. This is mainly attributed to sudden phase fluctuation, which prevents the sine wave from reaching its magnitude. Figure 3(b) plots the frequency-domain spectrum of the received signal, which is supposed to be a single peak, but actually smeared significantly, indicating the noise is multiplicative rather than additive. This also hints to the characteristics of phase noise [28], which cannot be eliminated using conventional linear filters.\n\nSince we cannot modify the on-chip clock of PEM-003, we use an external clock [29], driven by a high performance PLL, to substitute the original reference clock. The new clock is connected to PEM-003 via its MCX reference clock port. Figure 4 shows the 100 MHz sine tone after the reclocking. We observe a stable envelop, corresponding to a low-noise single-carrier frequency spectrum, which verifies the effectiveness of reclocking.\n\nReducing DC leakage noise. DC noise comes from the leakage of RF circuit's carrier signals, which translates into the zero-frequency in baseband, and may compromise the SNR of low-frequency baseband signals. In OpenMili, DC leakage is attributed to the RF hardware PEM-003, but can be mitigated via software-based signal processing in two ways.\n\n(i) Band shifting, i.e., migrating the entire baseband signals away from zero-frequency, which we realize by modulating the signals with a numerical controlled oscillator (NCO) built in the data converters. Figure 5 provides experimental evidence for this mechanism. In this experiment, we send a narrowband QPSK signal with 500 kHz bandwidth and sweep the center frequency from 1MHz to 500 MHz. We measure the error vector magnitude (EVM) of received signals as the normalized Euclidean distance between the transmitted and received signal vectors in the complex plane. The results show that the EVM near DC can be as high as 22%, due to strong DC leakage. But the EVM rolls off over frequency and becomes negligible above 100 MHz. Thus, in case when bandwidth can be sacrificed, we always migrate the baseband signals beyond 100 MHz to ensure high SNR.\n\n(ii) Oversampling, equivalent to maintaining the Gsps sam-pling rate in OpenMili but reducing baseband signal's band-width. We realize this by implementing a downsampler (in-side the data converter board), combined with a low-pass filter, both reconfigurable through OpenMili's BPU. To understand the benefits empirically, we send out a 200 MHz single-tone signal at 200MHz, and then measure the received SNR. The result in Figure 6 shows that every 2\u00d7 of oversampling provides around 3 dB SNR gain, albeit cutting the signal bandwidth by half. It is up to the application developer to decide on the proper tradeoff.\n\n\nSOFTWARE FRAMEWORK AND PRO-GRAMMING MODELS\n\nIn OpenMili, the general purpose processor (GPP) on the PC host, the FPGA-based BPU, and the microblaze processor together form a heterogeneous computing architecture. Depending on application needs, one or multiple processing units need to be chosen appropriately to balance the tradeoffs between computational throughput and flexibility, as summarized in Table 1. OpenMili's software framework and programming models are designed accordingly to ease such choices. We build high-rate real-time signal processing blocks in FPGA using C++, and leverage high-level synthesis (HLS) to automate the code-level parallelization and achieve Gsps processing speed. We have also developed firmware to enable Gsps sample transportation between the BPU and the PC host, and allow fast prototyping of signal processing algorithms running on the GPP. Besides, we employ the BPU's microblaze processor when it becomes necessary to execute real-time control and signaling operations (e.g., medium access protocols) between signal processing blocks. Table 2 summarizes the percentage of FPGA resource utilization in OpenMili's software framework. \n\n\nProgramming Models for FPGA Based Real-Time Processing\n\nIn general, a software-radio should support three categories of operations: TWEAK (defining and modifying a signal processing block); TAP (monitoring the output/status of a block); and INSERT/DELETE (i.e., adding/removing blocks) [30]. OpenMili's programming model supports these operations with two design goals: (i) tweaking a digital signal processing (DSP) block to achieve Gsps processing speed with deterministic timing, leveraging automated massive parallelization instead of low-level hardware language.\n\n(ii) enabling flexible and modular TAP and INSERT, such that developers need not worry about rate compatibility between consecutive DSP blocks, which is a common headache for low-level FPGA development.\n\n\nAutomating Parallelization and Pipelining for Gsps Processing\n\nWhy using HLS in SDR? HLS is an automated design process that interprets a high-level language (e.g., C/C++) into hardware description language (HDL) that can be executed by the FPGA. HLS has gained popularity and maturity in the past a few years, and major FPGA providers (e.g., Xilinx and Altera) have all released their own HLS toolchain [31,32]. Building SDR application in HLS has several advantage over the traditional HLS. The HLS programming model affords similar flexibility as the GPP-based GNURadio [33], which uses high level language to define and glue the DSP blocks. A plethora of common DSP blocks are already available from FPGA providers and third-party developers. HLS hides majority of the hardware details from DSP algorithm developers. More importantly, HLS allows us to flexibly adjust the level of algorithm parallelization, which is critical for real-time Gsps signal processing.\n\nPipelining and parallelization in HLS. The clock speed of modern FPGAs is limited to 200\u223c300 MHz. To enable Gsps signal processing, we must take advantage of the massive parallelization. In traditional HDL, transforming the signal processing algorithms to fit FPGA's parallel architecture entails significant programming efforts. A minor adjustment to parallelization level may result in a chain effect, requiring an overhaul of the entire HDL code base. In contrast, given a target parallelization level, an HLS toolchain can tell how many cycles are needed for a DSP block to generate all the outputs, with how many resource elements. This helps developers to make the best tradeoff between resource consumption and performance.\n\nWe showcase the automated parallelization using an FIR filter block, which comprises a sequence of multiply-andadd operations, most commonly seen in DSP blocks.  signal sample. In contrast, Figure 8 shows a manually \"unrolled\" version of the code, with unrolling factor of 2, i.e., it can calculate 2 FIR stages within one cycle. A higher unrolling factor achieves higher parallelization, but at the cost of higher hardware resource consumption. HLS enables us to automate the unrolling procedure -developer only needs to set the unrolling factor in a configuration file, and then HLS can automatically accomplish the loop unrolling based on the single version of C++ code, while providing a latency/throughput report. Developer only needs to iterate over the configuration instead of rewriting the code. Table 3 lists the latency and resource usage report for a 16tap FIR filter implementation on OpenMili's BPU, with different loop unrolling factors. Suppose the FPGA is clocked at 250 MHz, then HLS suggests an unrolling factor of 64 to achieve 4 samples/cycle, i.e., 1 Gsps processing rate.\nfor ( i=N\u22121; i >=0; i \u2212=2) { s h i f t r e g [ i ]= s h i f t r e g [ i \u2212 2 ] ; s h i f t r e g [ i \u22121]= s h i f t r e g [ i \u2212 3 ] ; acc+=s h i f t r e g [ i ] * c [ i ] ; acc+=s h i f t r e g [ i \u22121] * c [ i \u2212 1 ] ; }\n\nUsing AXI to Facilitate Modular Design\n\nOpenMili adopts the Advanced eXtensible Interface (AXI) [15] -an on-chip interconnect standard for the connection and management of functional blocks in system-on-a-chip designs -as a generic mechanism to glue the DSP blocks. This design choice affords two critical properties to simplify the FPGA programming: (i) Modularity: allowing TAP, INSERT/DELETE of one DSP block without affecting others. (ii) Rate insensitivity: allowing faster DSP blocks to be connected directly, while using AXI to automate the ratematching mechanism. In contrast, in conventional HDL based programming, the developer needs to have a global view of the entire DSP chain, manually assuring the operations of adjacent DSP blocks are synchronized at cycle level.\n\nOpenMili employs two kinds of AXI buses: AXI-Stream and AXI-Lite. AXI-Stream is used to transport high speed samples sequentially between DSP blocks, JESD204 transceivers, PCIe DMA controllers, etc. AXI-Stream provides a maximum bus width of 2048 bits, and when running on the 250 MHz Xilinx Kintex UltraScale FPGA, it has 64 GB/s rate, sufficient for interconnecting Gsps DSP blocks. AXI-Stream provides two critical advantages in programming OpenMili: (i) Standard inter-block interfaces. In OpenMili, the HLS can directly augment a customized DSP block with the AXI-Stream interface. In addition, since all the DSP blocks follow the interfacing standard, one block can be substituted by others (DELETE/INSERT) by rewiring a line in the GUI toolkit. AXI-Stream also eases the incorporation of existing DSP IP libraries into a custom design. (ii) Rate insensitive design. All the AXI-Stream interfaces share the same bus clock (250 MHz in OpenMili). The HLS design tool will handle the hand-shake between DSP blocks and insert FIFO for buffering incoming/outgoing signal samples.   Therefore, the programmer needs not worry about the interblock synchronization or rate matching which is a common challenge in multi-rate DSP systems.\n\nOn the other hand, AXI-Lite is a light-weight, low-speed AXI protocol for memory address based register access. In OpenMili, we use AXI-Lite to control/reconfigure the lowlevel components, e.g., sampling speed, center frequency, downsampling and upsampling ratio of ADC/DAC, and phase shift values of the phased-array antenna etc. All such configurations are stored in registers connected to the AXI-lite bus, and both the PC host and Microblaze processor can access the register through memory operations. Figure 9 summarizes the usage of AXI inside OpenMili's software architecture. The inter-module connection for the PCIe interface (PC to BPU) and the JESD204B interface (BPU to ADC/DAC) are all implemented using AXI-Stream bus which can natively support INSERT/DELETE. This allows arbitrary DSP blocks to be connected to the host PC or data converters, in a compatible way as the inter-DSP-block connection. To support TAP, we add an AXI-Stream multiplexer between the PCIe DMA controller and DSP blocks. User can access the intermediate result of any DSP block by connecting the signal to the MUX, which reroute the signal to the PC host for observation. We also built a round-robin scheduler for the multiplexer, which works together with the PCIe driver (Sec. 3.2). It can transport the data from different blocks in a time-division manner, demultiplex the data after going through PCIe, and deliver them to user space C/MATLAB applications. Moreover, we use AXI-Lite to augment control functionalities on signal processing blocks, e.g., MAC-level rate adaptation in communication applications and waveform selection in sensing applications.\n\nHere we use a frequency-modulated continuous-wave (FMCW) Radar as an example to showcase the usage of AXI-based modular programming in OpenMili. Figure 10 illustrates a diagram of the FMCW Radar. The output frequency of a  Numerically Controlled Oscillator (NCO) is controlled by a continuous-wave generator which could be configured to generate triangular wave, saw wave, and sine wave with different sweeping rate. With AXI-Stream, we can flexibly route the NCO output to both DAC (to emit continuous waves) and mixer (to obtain differential frequency). The received and mixed signals go through an FFT module for differential frequency analysis, and the results are passed to the PC host, to realize radar applications such as ranging, tracking, etc. All connections (arrows) here are realized using the modular AXI-Stream interface.\n\n\nFast Prototyping Using GPP\n\nTo enable Gsps sample transfer between the PC host and BPU, we develop the PCIe driver based on the PCIe 2.0 data streaming reference design from Xilinx [34]. The driver comprises a control plane and data plane. The control plane provides low speed channel to control the low-level components like DMA controller on FPGA, ADC and DAC, etc. The challenge in building the PCIe data plane lies in the mismatch between stream data and packet data -The data converter and DSP logic produce/consume stream data which have no start and ending, but the PCIe can only handle packetized data via bursty DMA transfer.\n\nWe overhauled the PCIe 2.0 reference design to enable PCIe 3.0 transportation, by upgrading the corresponding bus width from 128 bit to 256 bit, boosting the nominal bandwidth from 4GBps to 8GBps. We empirically found that larger DMA packet size leads to higher throughput (Figure 11), because it amortizes the per-packet coordination overhead between the host PC's DMA engine and the FPGA's DMA controller. To achieve the PCIe throughput requirement of 40 Gbps (Sec. 2.2), a minimum DMA packet size of 256kB is needed.\n\nHowever, the FPGA is designed for computation rather than storage, so its FIFO has a very shallow buffer depth of 128 kB. We thus design a ring buffer whose control logic is implemented in the BPU. Figure 12 quantifies the sample error ratio (sum of sample loss and duplication ratio) when transferring random digital samples based on the ring buffer. We empirically choose the buffer configuration (256kB*8ways or 512kB*4ways) with minimal total buffer size.\n\nAs the CPU will replace the cache in the size of a cache line (typically 64kB), the typical discontinuous memory allocation will reduce the speed of memory access at the host side. Thus, we use cmem, a contiguous physical memory allocator [35] as a kernel space buffer between user applications and DMA engine, in order to maximize memory-DMA efficiency. As the cmem only has 128 MB of space, the kernel driver will automatically copy the data between cmem buffer and user memory. Consequently, the maximum sample length is determined by the system memory size. In our host PC, we allocate 24 GB memory for sample trace collection. At 1 Gsps sampling rate, this amounts to a trace length of 6 seconds in 16-bit I/Q channel mode and 24 seconds in 8-bit real-channel mode.\n\nTo support fast prototyping on the host PC, we implement a C API and a MATLAB API atop. The APIs include both data-stream interface (for reading and monitoring the DSP block), which reads/writes to the addresses of sample buffers, and AXI-Lite based register access interface (for hardware configuration like ADC/DAC and phasedarray controller), which accesses the registers on the BPU. As MATLAB has its own data structure, a sample's real and image parts are not stored in continuous addresses. To reduce the impact of data copying, our MATLAB API accepts matrix whose column is the time and row is the content for different buffer. In this manner, the data order from/to MATLAB is consistent with the data order used by the DAC/ADC.\n\n\nPROGRAMMABLE PHASED ARRAY AN-TENNA\n\nOpenMili's antenna array design aims for three features: (i) Programmability: supporting real-time switching between codebook entries corresponding to different beam patterns.\n\n(ii) Scalability: the number of antenna elements can easily scale up to support larger phased-array size, and hence more beam patterns with higher directionality. (iii) Compatibility with the WR-15 waveguide interface on the PEM-003 mmWave front-end.\n\nExisting mmWave phased arrays are typically integrated on-chip antennas that interface with monolithic integrated circuits (MMICs) [36,37]. In contrast, as a standalone module, OpenMili's phased array faces unique challenges that entail customized design choices. First, the antenna elements need to be mounted on a planar substrate which needs proper transition to the WR-15 waveguide. At 60 GHz frequencies, significant insertion loss can occur when using a straightforward touch-and-mount transition. Second, to avoid grating lobes in the antenna array, the spacing between the adjacent antenna elements should be as small as wavelength-scale (\u223c5 mm), otherwise significant amount of energy is radiated in undesired directions. Also, mmWave signals must be routed optimally under this tight dimension constraint. Third, to have a functional planar design at 60 GHz, the substrates with higher dielectric constants are very thin (a few microns). Therefore, mechanical stability support is needed when interfaced with the waveguide, as small misalignment can lead to severe signal loss.\n\nBelow we present OpenMili's phased array design meeting above challenges, and its beam pattern controller design to offer the programmability feature. \n\n\nPhased-Array Antenna Design\n\n\nArchitecture\n\nWe design a linear array, with microstrip antenna elements driven by a phase-shifting network, as illustrated in Figure 13. The mmWave front end generates waveguide ended signal which goes through a waveguide to microstrip transition to make the signal compatible with the antenna's planar structure. Then, the signal propagates through a series of tree-structured power divider networks, with a 3 dB power division at each junction. The tree structure allows the phased array to be scalable to the 2 th power number of antenna elements.\n\nTo realize phase shifting, we use a discrete network with varying transmission line lengths in each signal branch, causing two different delays corresponding to two phase shift values of 0 \u2022 and 180 \u2022 , respectively. A single pole double throw (SPDT) switch [38] is used to select the appropriate phase shift in each signal path. This signal further goes through a second stage of switches before feeding the antenna array element. Overall, the phase shifting network allows us to realize any codebook where individual antenna element's weight can be either e 0 or e j\u03c0 .\n\nWe emphasize that this architecture can be easily expanded to support a richer codebook and larger number of antenna elements. For example, one can use 60 GHz SP3T switches (e.g., [39]) to add an additional phase shift branch. Alternative switches (e.g. [40]) exist that can also be used as a variable voltage attenuator. This will futher provide amplitude control for each antenna element path. We can cascade these switches with the existing ones in OpenMili such that more phase shifts and amplitude attenuation options can together create larger codebooks and hence more beams. On the other hand, to enlarge the phased array size, we can simply expand the binary-tree structured phase-shifting network, adding more branches and antenna elements.\n\n\nDesign and Fabrication\n\nWaveguide to microstrip transition: At mmWave frequencies, a mature approach to waveguide-microstrip transition is to place a single substrate in between. However, this requires via holes connecting the grounds of bottom and top surfaces of the substrate. Such a requirement is easily satisfied for integrated antennas but prone to manufacturing error for OpenMili's standalone phased array. Therefore, we adopt a via-less design for its simple construction, low cost and ease of fabrication. As shown in Figure 14 \u03bbg/4 distance in the parallel plate waveguide [41].\n\nPower divider network: Power divider network is a classical routing structure inside mmWave antenna arrays. A variety of power divider networks have been presented in the literature, e.g., Lange [42], simple T-junction [43] or a Wilkinson [44]. We adopt the Wilkinson power divider without the isolation resistor, considering its low loss, as its distribution uses simple mitered curve with only one width across the power divider network, in contrast to other schemes that divide power by splitting a wide signal trace into narrower ones which causes loss [45].\n\nPhase shifting network and antenna elements: Microstrip patch is used for each antenna element due to its low cost, low profile and ease of fabrication for mmWave front end module. A 4-element linear array of microstrip patch antennas is designed. An inset fed technique is used for impedance matching. Spacing between adjacent antenna elements is 0.6\u03bb, which is selected based on the chosen phase shifting and switching network. Two electrical delay lines are designed for each arm of the antenna feed network, such that they present a phase shift of 180 \u2022 . Single pole double throw (SPDT) switches [38] are used to select between these two phase shifts for each antenna element. The selection of a particular phase shift for each antenna element is carried out using control logic implemented in the BPU (more details in Sec. 4.2).\n\nSubstrate, fixture, and fabrication: Choosing the right dielectric medium at mmWave frequencies is vital to optimal performance. The electromagnetic waves can be guided not only with conductor configurations but also along dielectric layers, giving rise to surface waves resulting in performance degradation. In addition, low impedance line results in wider strips, which also tends to lower the cut-off frequencies of undesirable higher-order modes within or near the operating frequency range. Therefore, to avoid higher order modes and the propagation of surface waves, we use thin substrates. Empirical methods [46] have been proposed that relate the substrate's thickness and dielectric properties to its operating frequency. We used Rogers 6010.2LM substrate [47] with a thickness of 5 mils (0.127 mm), which has a maximum operating frequency of about 74 GHz. To offer mechanical stability, we also designed a fixture made of aluminum, and attached in between the phased-array and the WR-15 waveguide.\n\nBefore fabrication, the phased array design is simulated using a 3D EM solver software, CST Microwave Studio, which takes as input the geometry and dielectric properties of the phased-array's constituting materials. Figure 15(a) illustrates the fabricated phased-array. We will compare the array's simulated gain pattern with measurement in Sec. 5.3.\n\n\nProgrammable Phased Array Controller\n\nIn OpenMili, antenna beam-switching command can be initiated by the PC host or Microblaze processor (programmable in C), which in turn controls the FPGA's GPIO and drives the voltage change of each switch in the phase-shifting network. The phased array controller needs a 4-bit input into the phase-shifting network to generate the 16 beam patterns. Our implementation extends the Xilinx AXI-to-GPIO IP core to enable the Microblaze/PC to control the antenna switches. The Microblaze/PC uses the AXI-Lite interface (Sec. 3.1.2) to write a 32-bit word (supporting up to 32 switches) to a register with a predefined 32-bit bus address. The register switches the voltage of the GPIO ports, whose output will be updated at the next rising edge of the AXI bus clock.\n\nNote that each switch is a PIN diode that has 22 mA forward current and needs to flip between positive and negative voltages, so we cannot directly interface it with the FPGA's GPIO which is 1.8V unipolar and bears 8 mA drive current. We thus build a customized phased-array controller board (Figure 15(b)), which can be plugged into the FPGA's PMOD interface -a standard interface for connecting with peripheral modules. Figure 13 illustrates a diagram of the phased-array controller, with three main functions: (i) Convert the positive power supply into negative power supply; (ii) Convert the GPIO's 0V-1.8V unipolar signal into -5V to +5V bipolar signal and provide the 22 mA forward current; (iii) Provide enough output current. More specifically, we use the MAX889 negative power IC [48] to generate the negative power supply, and AD8001 [49] as a bipolar comparator to convert the 1.8V IO, in order to meet the voltage and current requirement of the antenna switch.\n\n\nREFERENCE BLOCKS AND EXPERIMEN-TAL VALIDATION\n\nIn this section, we present the design and experimentation of a few reference blocks, which verify the performance of OpenMili's hardware architecture, as well as the effectiveness of its programming models in prototyping communication and sensing applications.\n\n\nGbps Baseband Communication System\n\nPrototyping the 802.11ad baseband communication system. We have built a real-time Gsps baseband communication system on OpenMili, which implements the majority of the 802.11ad PHY-layer [50]. Figure 16 shows the system architecture. Along the transmitter path, we can generate data bits from either the PC host or BPU. The data are patched with CRC checksum and then sent to a convolution encoder (supporting rate 1/2, 2/3, 3/4 and 7/8). Coded binary bits are modulated into analog waveforms through a mapper and IFFT module, which supports both singlecarrier-FDMA and OFDM as specified in 802.11ad. Before routing the waveform to the DAC, we prepend known preambles which form a complete packet. Along the receiver path, we have implemented preamble-based packet detection, synchronization, and channel estimation modules. The detected packet is demodulated following a reverse path as the transmitter's.\n\nAll the DSP blocks run on the BPU, and are prototyped following the programming model in Sec. 3. We implement (TWEAK) each DSP block using HLS, and connect them us-  ing AXI-Stream for automatic rate matching. Moreover, we prototype simple monitoring (TAP) functions, which compute performance statistics, e.g., packet error rate (PER), and store them in an AXI-Lite register. The register can be accessed by both the host PC and Microblaze following the standard AXI-Lite read operations. Further, the decoded data bits can be forwarded to the host PC in real-time through the PCIe driver that we developed.\n\nWe have also implemented basic rate adaptation and beam adaptation mechanisms within this reference communication system. Basically, the receiver can compute a received signal strength (RSS) value based on the packet preamble. The RSS is stored in a register inside the BPU with pre-defined memory address. The Microblaze can read the register and then determine the modulation/coding scheme (MCS) using any customized rate adaptation protocols. Further, it can switch across different beam directions by commanding the phased-array controller (Sec. 4.2). It then measures the RSS of each and choose the best direction. A more sophisticated MAC-level signaling mechanism as in 802.11ad [50] can be implemented but is beyond the scope our reference design.\n\nExperimental validation. We verify the reference design by measuring the performance of different MCS under different SNR levels (created by configuring OpenMili's RF gain values). By default, we send packets of size 1KB, and fix the antenna beam to a single direction. Figure 17(a) plots the measured SNR-PER curve, averaged over 10 4 packets in each run. We observe that a relatively high SNR threshold of 15 dB is needed to achieve a reasonable PER performance (< 0.1), since channel coding is not executed here. In general, OFDM achieves higher performance than the single carrier modulation, because it can absorb the multipath reflections using the cyclic prefix (CP) mechanism [11]. In addition, given a fixed bandwidth, a larger number of subcarriers result in much worse performance. For example, at 25 dB SNR, OFDM with 256 subcarriers (OFDM-BPSK-256) results in PER=0.01, whereas OFDM with 2048 subcarri-  ers has PER\u22481. This is mainly due to the inherent phasenoise in 60 GHz radios, which cannot be completely eliminated since even small phase noise at the reference clock will be amplified by orders of magnitude at 60 GHz (Sec. 2.3). Phase noise \"smears\" the frequency spectrum of a subcarrier, resulting in inter-carrier interference, which worsens the bit errors. Figure 17(b) shows the impact of coding and interleaving, focusing on QPSK without loss of generality. A higher channel coding rate improves PER performance, consistent with theoretical predictions [23]. Moreover, with a bit-interleaver (randomizing bit positions in the packet), bursty channel errors are reduced, and hence lower PER. In Figure 18, we further compare the PER performance with an ideal simulated Rician channel with different K parameters, where K denotes the ratio between the LOS component and NLOS component in a Rician model. The measured PER is between Rician curves with K = 4 and K = 6, and nearly overlaps with K = 5. On one hand, this implies that OpenMili's hardware/software modules are not introducing any artifacts that compromise the channel measurement and communication performance. On the other hand, it indicates that even if we use a single-beam directional antenna, non-negligible multipath effect still exist, likely caused by ambient reflections as well as unavoidable side lobes in the antenna gain pattern. Table 4 lists the MCS levels supported in the reference design, by default using OFDM with 256 subcarriers. The corresponding SNR thresholds are obtained when measured PER reaches around 1%. As in legacy OFDM communication systems, we place null subcarriers near DC and the band edge, which confines the effective bandwidth to 800 MHz. Although the MCS is not comparable with 802.11ad, its spans from 12.5 Mbps to 1.3 Gbps, and already allows exploration of Gbps rate adaptation protocols.\n\n\nReal-Time GHz RSS/Phase Sensing\n\nOpenMili supports two modes of wireless sensing applications. In the radar mode, OpenMili serves as a programmable radar, where the transmitter emits 60 GHz signals while the receiver captures and processes the reflected signals. To isolate direct leakage between the Tx and Rx, we can either mount highly-directional horn antennas on the RF frontend, or place 60 GHz absorbers in between. An example radar prototype has been discussed in Sec. 3.1.2.\n\nIn the communication system as a sensor (CSAS) mode, the transmitter emits 802.11ad-like packet preambles, and the receiver estimates the channel information by processing the received preambles. This is equivalent to stripping off the modulation/coding blocks in the communication reference design. More specifically, following 802.11ad, we im-  plement a preamble structure that uses 2176 samples for detection/synchronization and 1152 samples for per-subcarrier channel state information (CSI) estimation. With 1 Gsps sampling rate, the preamble duration becomes 3.4\u03bcs. Upon receiving the preamble, the receiver can compute the CSI and store it in a register in one clock cycle (4ns), and the Microblaze can read the CSI in 12 clock cycles (48ns). Therefore, the overall CSI sensing latency predominantly depends on the preamble transmission time, i.e., OpenMili can obtain the CSI of the entire 1 GHz channel every 3.4\u03bcs. We evaluate the channel sensing accuracy by measuring the EVM across all subcarriers. Figure 19 plots the EVM across a wide range of SNR levels. At low SNR, the channel sensing errors are mainly caused by channel noise. Beyond 15 dB SNR, the phase error converges to around 4% and magnitude error to 1.5%. Such residual errors originate from the hardware noise in OpenMili, which induces a small amount of magnitude/phase variations. Table 5 lists OpenMili's phased-array beam patterns obtained based on the simulation method in 4.1. Due to codebook symmetry, we have 8 beam patterns in total and 5 unique ones. For codebook entry (1,1,1,1), there is only one mainlobe giving rise to a gain of 14.3 dBi. Whereas for other entries there are two mainlobes which split the gain.\n\n\nReal-Time Phased-Array Controller\n\nTo measure the actual beam pattern, we mount the phased array on a Tx and a 3.4 \u2022 horn antenna on the Rx. We then use a step motor to rotate the phased array with 1 degree granularity, while using 60GHz RF absorbers to block reflection paths around the Tx/Rx. Figure 20 show the measured angular gains of codebook entries (1,1,1,1) and (1,1,-1,-1), which demonstrate consistent patterns with the simulation results. We have observed similar consistencies for other codebooks but omit the results due to space constraint.\n\nTo evaluate the phased-array's switching efficiency, we use a oscilloscope to monitor the input/output of our controller board and measure the rise and fall time. We observe that both have a similar rise/fall time of below 2.5 ns. Hence, the 5 10 Expe.\n\nSim.\n\n(a) 5 10 Expe. Sim.\n\n(b) Figure 20: Simulated and measured radiation pattern of: (a) codebook (1,1,1,1); (b) codebook (1,1,-1,-1).\n\nstabilization time of our phased array antenna is below 2.5 ns, which is negligible compared with the channel estimation which is the latency bottleneck (Section 5.2).\n\n\nCASE STUDIES\n\n\nPairwise Localization of 60 GHz Phased-Arrays\n\nWe propose a simple scheme that leverages the ultra-wide band (high time resolution) and discrete beam switching capability of 60 GHz phased-arrays to realize pairwise localization instead of multi-node triangulation [16,17,51]. This scheme targets the scenario where the Tx and Rx have a lineof-sight (LOS), which represents the most common cases for 60 GHz links. There exists mature ways to determine if the LOS condition is satisfied [16].\n\nThe localization scheme has two primitives: ranging and AoA estimation. We use a pulse delay method to estimate the LOS range between Tx and Rx, whose fundamental principle is similar to the FMCW radar. The Tx sends a known pseudo-random sequence and Rx runs a cross correlation and translates the peak position into time of flight estimation. Using OpenMili's Gsps sampling capability, we can achieve 1 ns timing resolution which gives a 30 cm ranging resolution.\n\nTo estimate the AoA, we face two challenges unseen in prior work [16,17]: the limited number of discrete beam patterns and the irregular beam pattern with imperfect directionality. However, we can harness the measured gain pattern of the few beam patterns as follows. For simplicity, suppose the Tx uses a fixed beam pointing to the Rx, which is necessary for establishing a communication path. The radiation pattern of a beam can be obtained at factory calibration time. Specific to OpenMili's phased-array, we have measured the radiation patterns with 1 \u2022 granularity (Sec 5.3). So we have 180 gain vectors, each consisting of the gains of all 5 effective beam patterns at a specific angle. We can derive the signal power at the antenna from pathloss model [52] using the ranging result. We then add it to the gain vectors to get the RSS estimation vector at each direction. When conducting the localization, we measure the RSS vector by switching across all beam directions. Finally, we run a vector matching between the measured RSS vectors and the calibrated RSS vector in the foregoing step. The direction of the best match is used as the AoA estimation. Given the range and AoA, the Tx and Rx's relative position is readily available.\n\nWe have quickly prototyped the pairwise localization scheme  using OpenMili's GPP programming model. We test its effectiveness by placing the Tx and Rx at random locations in a 11m \u00d7 8m indoor environment. Besides the phased-array, we also use two different sets of horn antennas (beamwidth A1 = 20 \u2022 and A2 = 3.4 \u2022 ) as benchmark, which are steered using a mechanical rotator (with granularity of \u03c0/A1 and \u03c0/A2). These horn antennas can be considered as ideal phased-arrays with slow steering but without any side lobes. For a given Tx, we measure the location error between estimated and ground-truth Rx spot. Our experimental results in Figure 21 (a) show the average error is 0.51m, 0.72m, 1.63m, for the 3.4 \u2022 , 20 \u2022 horn antenna, and phased-array antenna, respectively. The phased-array has larger error due to its limited number of beam directions, and also the multipath effects created by imperfect beam patterns (esp. sidelobes). Figure 21 (b) further shows the impact of sampling bandwith. A wider bandwidth translates into higher time resolution, and hence the Gsps bandwidth achieves 0.52m mean error, in contrast to 0.99m at 500 MHz.\n\n\nLearning Assisted Beam Adaptation (LABA)\n\nA dominating indoor use case of 60 GHz networks (e.g., 802.11ad) lies in cordless computing, i.e., replacing Gbps Ethernet and monitor cables with a 60 GHz wireless links [53]. However, due to heavy human activities, such links are prone to blockage. Although electronic beam-steering is designed into 802.11ad to detour blockage, searching for the best beam direction involves non-trivial signaling overhead, especially considering the up to hundred-scale beam patterns that can be generated by a 60 GHz phased-array [54].\n\nWe propose LABA, a simple learning assisted protocol to reduce the beam search space and hence the overhead. LABA is applicable to quasi-stationary links, which may be blocked frequently, but moved only occasionally. Although a node may generate many beam patterns, the gain patterns of different beams may be partially overlapping and correlated across spatial angles [55]. Therefore, LABA learns the correlation offline, and prunes the correlated beams during run-time beam searching. Specifically, during the learning phase, a person stands at a random position p between the Tx and Rx to block the link, while we use OpenMili to col-lect each beam pattern j's RSS, denoted as S j p . Suppose we create P random blockage positions in total, then for each beam pattern j, we have a vector of measured RSS [S j 1 , S j 2 , \u00b7 \u00b7 \u00b7 , S j P ] across all blockage positions. We then compute the pairwise cross correlation between the RSS vectors. At run time, whenever severe rate drop occurs, LABA initiates beam steering just like a normal 802.11ad protocol, but only searches across the beam patterns that have < 0.5 correlation with the current one.\n\nWe have implemented LABA's learning module on Open-Mili's GPP module, and run-time adaptation mechanism on its real-time phased-array controlling module (on the Microblaze). To show its effectiveness, we test it across 9 different locations in 3 environments with different reflection characteristics: an office, corridor and student lab. We use OpenMili's phased-array hardware, as well as a phased-array emulation method [55], which first uses a 3.4 \u2022 horn antenna to collect the channel AoA pattern and then convolve it with the angular gain pattern of an ideal 4 element linear array. As shown in Figure 22(a), LABA can consistently prune the search space and reduce the beam searching overhead by around 70%, compared with an exhaustive search. The reductions is slightly lower than the emulated phasedarray, which assumes isotropic radiation patterns for each antenna element and thus causing more overlapping/correlation across beam patterns. Due to limited number of antenna elements, we are unable to generate quasi-omni beam patterns to run the 802.11ad-compatible hierarchical beamsearching, but LABA's pruning method can be readily used to prune any existing beam searching method.\n\nIn Figure 22(b), we show the RSS traces across 3 human blockage events. We see that LABA demonstrate a similar level of RSS as the exhaustive search, implying it either chooses the best beam direction or choose one with similar RSS. This effectively verifies that LABA reduces beam searching overhead without sacrificing link performance. It also verifies that OpenMili can switch across all beam patterns without any noticeable latency.\n\n\nRELATED WORK\n\nSoftware Radio Platforms. In the past a few years, a variety of software-radio platforms have been proposed to facilitate the development of new wireless protocols. These platforms share a similar high-level architecture: they connect a PC host with an external baseband processing unit (typically an FPGA), which attaches ADC/DAC and subsequently an RF front-end. Different platforms may partition the processing tasks between the BPU and PC host differently, to make a tradeoff between flexibility and performance. On one end of the spectrum lies the purely softwaredefined frameworks. The well-known USRP/GNURadio [9,33] platform, for example, runs PHY-layer modulation/demodulation algorithms entirely on the PC host's general processor (GPP). Despite its flexibility, USRP/GNURadio suffers from long processing latency and PC-to-radio interface latency, which precludes real-time MAC operations. A more powerful system, Sora [11] applies sophisticated algorithmspecific parallelization (e.g., core dedication) to achieve similar throughput as commercial 802.11b radios. On the other hand, most recent software-radio platforms adopt a hybrid framework. For example, WARP [10] allocates intensive signal processing functions to the FPGA, and light-weight control functions to the Microblaze or PC processor.\n\nIn terms of software framework, OpenMili is heavily inspired by WARP. The main difference is that WARP uses Matlab Simulink to define signal processing blocks, whereas OpenMili uses C++ based HLS. More importantly, WARP hard-wires the blocks, and hence, the developer must have precise estimation of the processing latency of each block. This hinders modular refinement, because any modification must take into perspective the timing of the entire signal processing flow. In contrast, OpenMili separates the signaling between blocks using AXI, which can essentially buffer adjacent blocks' input/output samples, thus decoupling their rate-dependency. This principled design borrows from a rich history in DSP systems implemented as a composition of blocks. For example, Airblue [56] and Atomix [30] designed customized FIFO buffers to enable modularized programming of DSP blocks. We note that, when developing PHYlayer signal processing systems, all these software-radio systems, including OpenMili, may use HLS to automate the intra-block parallelization. But they still require the developer to have knowledge about the relation between blocks, and to manually partition the blocks to maximize parallelism. This is particularly important for OpenMili with Gsps of processing load on FPGAs that are clocked at sub-GHz.\n\nAs for hardware architecture, OpenMili distinguishes itself in its Gsps sampling/processing rate and programmable phased-array, running at the 60 GHz carrier frequency. The challenges in enabling these features have been covered in previous sections. Some recent studies customized 60 GHz testbeds [55,57,58], using WARP or signal generator (network analyzer) as BPU. These testbeds do not capture the two unique features of 60 GHz radios, although they have similar or higher cost than OpenMili 1 . Arnold [59] and Zetterberg et al. [60] developed customized RF front-end which, together with USRP, form a programmable 60 GHz platform. But the platform has a low sampling rate limited by USRP's narrow band, and it uses fixed horn or on-chip antennas. National Instruments recently released a mmWave experimental platform based on their PXI baseband processing unit [61]. The platform runs on the 71GHz-76GHz spectrum and costs $134K -almost 5\u00d7 compared with OpenMili. Other commercial platforms (e.g., Keysight's [62]) have similar limitations. All in all, OpenMili represents the first reconfigurable platform to support 60 GHz wireless protocols where real-time phased-array beamforming acts as a predominant feature to overcome blockage/mobility [55,63]. It is also the first to enable novel 60 GHz sensing applications that capitalize on the electronically steerable phased-array and GHz sampling bandwidth.\n\nWe note that the RFIC industry have mature ways to manufacture on-chip 60 GHz phased-arrays [64][65][66]. Yet, it entails non-trivial challenges to design a programmable phased-array using discrete phase-switches and interfacing it with the WR-15 waveguide form-factor. We believe Open-Mili's phased-array design can be a standalone contribution, especially considering the fact that it can be detached from OpenMili and applied to commercial/customized 60 GHz radios with the WR-15 antenna interface [14,55,57,58]. 1 The material/fabrication cost of OpenMili's phased array is \u223c$1.5K, similar to the horn antenna in [55,57,58]. OpenMili uses the same RF front-end as [55,57,58]. Its BPU/converters have similar cost as WARP (\u223c$5K), much cheaper than a network analyzer.\n\nPhased-array based location sensing. Phased-array has shown potential in radio localization, especially due as it can identify AoA via multi-antenna signal processing algorithms [67,68]. Recent systems [17,51] renovated such algorithms to isolate LOS paths, and can localize a client via multi-AP triangulation. However, these systems commonly use radios with a digital phased-array which can continuously adjust phased-shift values. In contrast, practical millimeter-wave radios [50,69,70] only allow a set of discrete phase shifters, which entails new AoA processing. We have explored a basic localization mechanism on such a practical phased-array, which not only senses AoA, but also distance between a pair of 60 GHz phased-arrays. This can be a primitive component for a wide-range of 60 GHz sensing applications, e.g., location-aware beam-steering [71].\n\nBeam adaptation protocols in directional-antenna networks. Low-frequency directional-antenna based MAC or routing protocols have been extensively explored in adhoc networks [72]. At the 60 GHz frequency band, many new challenges emerge, especially due to larger scale phased array with up-to hundred-scale antenna elements, and hence higher directionality. Also, shorter wavelength causes more vulnerability to obstacle blockage. Many PHY/MAC protocols [73][74][75][76] have been proposed to improve the efficiency of beamsteering and overcome blockage, yet they only build on simulation. They also use arbitrarily designed codebooks, whereas practical phased arrays need to respect fabrication constraints. In addition, large phased-array means large number of beam patterns to adapt which, combined with available bit-rate levels, substantially inflates the decision space when link quality degrades. Our case study of LABA exploits the practical tradeoffs herein, and propose a learning-based framework to facilitate the decision making. This is of independent interest and can be a building block for a wide range of MAC/application level protocols. Our recent project, BeamSpy [77] addressed a similar problem of overcoming blockage for 60 GHz links. BeamSpy adopts a sophisticated channel model that characterizes the beam correlation by explicitly modeling the magnitude, phase and angle of propagation paths. In contrast, LABA learns the correlation between different beam patterns from historical measurement. It treats the correlation function as a black box and learns it by training. In this sense, LABA can simplify the beam-quality prediction.\n\n\nCONCLUSION\n\nWe have designed and implemented OpenMili, the first reconfigurable architecture that captures the unique aspects of 60 GHz radios, especially the Gsps sampling/processing rate, and electronically steerable phased-array antenna. OpenMili will be a ready-to-use, open-source platform to speed up the development of next-generation Gbps wireless protocols and sensing applications. Moreover, we believe our experience in the hardware/software framework will be transferable to future high-performance mmWave softwareradios.\n\nMobiCom' 16 ,\n16October 03-07, 2016, New York City, NY, USA c 2016 ACM. ISBN 978-1-4503-4226-1/16/10. . . $15.00 DOI: http://dx.doi.org/10.1145/2973750.2973760\n\nFigure 1 :Figure 2 :\n12OpenMili's hardware architecture. Portrait of OpenMili: (a) Overall architecture; (b) Baseband processing uint (BPU); (c) Receiver with phased array antenna; (d) Transmitter without mounting antenna.\n\nFigure 3 :Figure 4 :\n34Waveform/spectrum of a 100 MHz sine tone with the original carrier clock in PEM-003. Waveform/spectrum after reclocking.\n\nFigure 5 :Figure 6 :\n56Impact Oversampling improves SNR.\n\nFigure 7 :\n7Figure 7 shows the C++ code for an N -tap FIR filter. The for loop executes one multiply-and-add in each iteration, and it needs N cycles to generate the outputs for each new Original FIR filter in C++.\n\nFigure 8 :\n8Partially unrolled FIR filter (factor=2).\n\nFigure 9 :\n9OpenMili's AXI-based baseband processing system.\n\nFigure 10 :Figure 11 :\n1011Prototyping an FMCW Radar usingOpenMili's programming model. Throughput of PCIe driver between BPU and PC host.\n\nFigure 12 :\n12Sample loss under different BPU buffer levels.\n\nFigure 13 :\n13Architecture of OpenMili's phased-array antenna: (a) one antenna channel; (b) Four antenna channels.\n\nFigure 14 :Figure 15 :\n1415, we use a rectangular patch element on the bottom surface of the substrate which couples energy to a microstrip line on the top surface of the substrate. In order to have a short circuit at the edge of the waveguide, an open circuit is created at a Schematic of waveguide to microstrip transition [41]. (a) Phased array antenna; (b) antenna controller board.\n\nFigure 16 :Figure 17 :\n1617Baseband communication system reference design. Packet error ratio (a) under different modulation schemes and (b) coding schemes.\n\nFigure 18 :\n18Packet\n\nFigure 19 :\n19Estimation error of magnitude and phase in the sensing reference design.\n\nFigure 21 :Figure 22 :\n2122Localization error with (a) phasedarray antenna and horn antennas with different beamwidth; (b) different bandwidth. (a) Reduction of beam search overhead and (b) RSS under blockage events (Oracle switches across all beam directions in real-time and finds the best).\n\nTable 1 :\n1Choosing the processing unit for different tasks and requirements. SP: signal processing.Real-time Non-real-time \nControl \nMicroblaze \nPC \nSP (heavy) \nFPGA \nPC \nSP (light) \nMicroblaze \nPC \n\n\nTable 2 :\n2FPGA utilization percentage with Open-Mili's heterogeneous computing architecture and software framework.UnRolling Factor Samples per cycle DSP48 Usage \n1(Unrolled) \n1/16 \n1 \n2 \n1/8 \n2 \n4 \n1/4 \n4 \n8 \n1/2 \n8 \n16 \n1 \n16 \n32 \n2 \n32 \n64 \n4 \n64 \n\n\n\nTable 3 :\n3Latency and resource usage for 16 tap FIR filter.TX AXI Data Path 2 \n\nTX AXI Data Path N \n\nM \nU \nX \n\nFrom \nPCI-E \n128bit@ \n250MHz \n\nA \nD \nD \nE \nR \n\nPCI-E \nRegister \nSpace \nTo \nI DAC1 \n16bit@ \n1GHz \n\nTo \nQ DAC \n16bit@ \n1GHz \n\nC \nR \nO \nS \nS \nB \nA \nR \n\nAXI \nModule \n\nAXI DATAPATHN \n\nAXI DATAPATH2 \nM \nU \nX \n\nFrom \nI ADC1 \n16bit@ \n1GHz \n\nFrom \nQ ADC \n16bit@ \n1GHz \n\nTo \nPCI-E \n128bit@ \n250MHz \nAXI \nModule \n\nAXI \nModule \n\nAXI \nModule \n\nAXI \nModule \n\nAXI \nModule \n\nAXI-Lite Connection \nAXI-Stream Connection \n\n\n\nTable 4 :\n4Capabilities of baseband reference design.Codebook \nEntry \n\nMainlobe \nDirec-\ntion \n\nMainlobe \nGain \n(dBi) \n\nSidelobe \nDirec-\ntion \n\nSidelobe \nLevel (dB) \n\n1,1,1,1 \n0 \u2022 \n14.3 \n+/-39.1 \u2022 \n2.46 \n1,1,1,-1 \n+/-15 \u2022 \n11.2 \n+/-48 \u2022 \n5.47 \n1,1,-1,1 \n+/-36 \u2022 \n11.3 \n4 \u2022 \n8.31 \n1,1,-1,-1 \n+/-19 \u2022 \n12.2 \n+/-73 \u2022 \n-14.55 \n1,-1,1,-1 \n+/-36 \u2022 \n11.3 \n4 \u2022 \n8.31 \n1,-1,1,-1 \n+/-47 \u2022 \n12.5 \n+/-\n11.5 \u2022 \n\n4.5 \n\n1,-1,-1,1 \n+/-31 \u2022 \n12.4 \n+/-66 \u2022 \n-4.67 \n1,-1,-1,-1 \n+/-15 \u2022 \n11.2 \n+/-48 \u2022 \n5.47 \n\n\n\nTable 5 :\n5Direction and Gain of main lobe and largest \nsidelobe for each codebook entry \n\nAcknowledgementsWe appreciate the insightful comments and feedback from the anonymous reviewers. The work reported in this paper is supported in part by the NSF under Grant CNS-1506657, CNS-1518728, CNS-1343363, and CNS-1350039.\nMillimeter Wave Mobile Communications for 5G Cellular: It Will Work!. T Rappaport, S Sun, R Mayzus, H Zhao, Y Azar, K Wang, G Wong, J Schulz, M Samimi, F Gutierrez, IEEE Access. 1T. Rappaport, S. Sun, R. Mayzus, H. Zhao, Y. Azar, K. Wang, G. Wong, J. Schulz, M. Samimi, and F. Gutierrez, \"Millimeter Wave Mobile Communications for 5G Cellular: It Will Work!\" IEEE Access, vol. 1, 2013.\n\nQualcomm VIVE 802.11ad. Qualcomm, Qualcomm, \"Qualcomm VIVE 802.11ad ,\" https://www.qualcomm.com/products/vive/11ad, 2015.\n\nIntel Tri-Band Wireless-AC 18260. Intel, Intel, \"Intel Tri-Band Wireless-AC 18260,\" 2015. [Online]. Available: http://www.intel.com/content/dam/www/ public/us/en/documents/product-briefs/ tri-band-wireless-ac17265-brief.pdf\n\nmTrack: High-Precision Passive Tracking Using Millimeter Wave Radios. T Wei, X Zhang, Proc. of ACM MobiCom. of ACM MobiComT. Wei and X. Zhang, \"mTrack: High-Precision Passive Tracking Using Millimeter Wave Radios,\" in Proc. of ACM MobiCom, 2015.\n\nReusing 60GHz Radios for Mobile Radar Imaging. Y Zhu, Y Zhu, B Y Zhao, H Zheng, Proc. of ACM MobiCom. of ACM MobiComY. Zhu, Y. Zhu, B. Y. Zhao, and H. Zheng, \"Reusing 60GHz Radios for Mobile Radar Imaging,\" in Proc. of ACM MobiCom, 2015.\n\nWhole-home Gesture Recognition Using Wireless Signals. Q Pu, S Gupta, S Gollakota, S Patel, Proc. of ACM MobiCom. of ACM MobiComQ. Pu, S. Gupta, S. Gollakota, and S. Patel, \"Whole-home Gesture Recognition Using Wireless Signals,\" in Proc. of ACM MobiCom, 2013.\n\nWiDeo: Fine-grained Device-free Motion Tracing Using RF Backscatter. K Joshi, D Bharadia, M Kotaru, S Katti, Proc. of USENIX NSDI. of USENIX NSDIK. Joshi, D. Bharadia, M. Kotaru, and S. Katti, \"WiDeo: Fine-grained Device-free Motion Tracing Using RF Backscatter,\" in Proc. of USENIX NSDI, 2015.\n\nProject Soli. Google, Google, \"Project Soli,\" 2015.\n\nEttus Research, Llc , Universal Software Radio Peripheral (USRP). Ettus Research LLC, \"Universal Software Radio Peripheral (USRP),\" http://www.ettus.com/.\n\nWARP: a Flexible Platform for Clean-Slate Wireless Medium Access Protocol Design. A Khattab, J Camp, C Hunter, P Murphy, A Sabharwal, E W Knightly, SIGMOBILE Mob. Comput. Commun. Rev. 12A. Khattab, J. Camp, C. Hunter, P. Murphy, A. Sabharwal, and E. W. Knightly, \"WARP: a Flexible Platform for Clean-Slate Wireless Medium Access Protocol Design,\" SIGMOBILE Mob. Comput. Commun. Rev., vol. 12, 2008.\n\nSora: High Performance Software Radio Using General Purpose Multi-core Processors. K Tan, J Zhang, J Fang, H Liu, Y Ye, S Wang, Y Zhang, H Wu, W Wang, G M Voelker, Proc. of USENIX NSDI. of USENIX NSDIK. Tan, J. Zhang, J. Fang, H. Liu, Y. Ye, S. Wang, Y. Zhang, H. Wu, W. Wang, and G. M. Voelker, \"Sora: High Performance Software Radio Using General Purpose Multi-core Processors,\" in Proc. of USENIX NSDI, 2009.\n\n802.11x. IEEE. IEEE, \"802.11x ,\" http://www.ieee802.org/11/, 2015.\n\nTool Release: Gathering 802.11N Traces with Channel State Information. D Halperin, W Hu, A Sheth, D Wetherall, SIGCOMM Comput. Commun. Rev. 411D. Halperin, W. Hu, A. Sheth, and D. Wetherall, \"Tool Release: Gathering 802.11N Traces with Channel State Information,\" SIGCOMM Comput. Commun. Rev., vol. 41, no. 1, 2011.\n\nHXI GigaLink E-Band 60 GHz Radio Systems. Hxi Llc, HXI LLC, \"HXI GigaLink E-Band 60 GHz Radio Systems,\" 2013. [Online]. Available: http://www.hxi.com/D Radios.asp\n\n. Xilinx, AXI Reference Guide. Xilinx, \"AXI Reference Guide,\" http://www.xilinx.com, 2015.\n\nArrayTrack: A Fine-grained Indoor Location System. J Xiong, K Jamieson, Proc. of USENIX NSDI. of USENIX NSDIJ. Xiong and K. Jamieson, \"ArrayTrack: A Fine-grained Indoor Location System,\" in Proc. of USENIX NSDI, 2013.\n\nPinPoint: Localizing Interfering Radios. K Joshi, S Hong, S Katti, Proc. of USENIX NSDI. of USENIX NSDIK. Joshi, S. Hong, and S. Katti, \"PinPoint: Localizing Interfering Radios,\" in Proc. of USENIX NSDI, 2013.\n\nWiMi: Wisconsin Millimeter-wave Software Radio. X Zhang, P Ramanathan, X. Zhang and P. Ramanathan, \"WiMi: Wisconsin Millimeter-wave Software Radio,\" 2016. [Online]. Available: http://xyzhang.ece.wisc.edu/wimi/\n\nGHz Transmit/Receive Development Systems. GHz Transmit/Receive Development Systems,\" http://www.pasternack.com, 2014.\n\nAD-FMCDAQ2-EBZ Evaluation Board. Analog Devices, Analog Devices, \"AD-FMCDAQ2-EBZ Evaluation Board,\" 2015. [Online]. Available: http://www.analog.com/en/ design-center/evaluation-hardware-and-software/ evaluation-boards-kits/eval-ad-fmcdaq2-ebz.html\n\nAD9680 14-Bit, 1.25 GSPS/1 GSPS/820 MSPS/500 MSPS JESD204B, Dual Analog-to-Digital Converter. --, \"AD9680 14-Bit, 1.25 GSPS/1 GSPS/820 MSPS/500 MSPS JESD204B, Dual Analog-to-Digital Converter,\" 2015. [Online]. Available: http://www.analog.com/en/ products/analog-to-digital-converters/ high-speed-ad-10msps/ad9680.html\n\n16-Bit, 2.8 GSPS, Digital-to-Analog Converter. AD9144 Quad. --, \"AD9144 Quad, 16-Bit, 2.8 GSPS, Digital-to-Analog Converter,\" 2015. [Online]. Available: http://www.analog.com/en/products/ digital-to-analog-converters/da-converters/AD9144.html\n\nThe Scientist & Engineer's Guide to Digital Signal Processing. S W Smith, California Technical PublishingS. W. Smith, The Scientist & Engineer's Guide to Digital Signal Processing. California Technical Publishing, 1997.\n\nMinicircuits, RF Transformer ADT2-1T. Minicircuits, \"RF Transformer ADT2-1T,\" http://www.minicircuits.com/pdfs/ADT2-1T.pdf, 2016.\n\nAnalog Devices, AD9144 Quad, 16-Bit, 2.8 GSPS, TxDAC Digital-to-Analog Converter. Analog DEvices, \"AD9144 Quad, 16-Bit, 2.8 GSPS, TxDAC Digital-to-Analog Converter,\" http://www.analog.com.\n\n60 GHz Transmitter Waveguide Module. Pasternack Enterprises, Inc, Pasternack Enterprises, Inc., \"60 GHz Transmitter Waveguide Module,\" 2014. [Online]. Available: http://www. pasternack.com/60-ghz-transmitter-module-pem001-p.aspx\n\nOpen Source USB Packet Capture. USBPcap DevelopersUSBPcap Developers, \"Open Source USB Packet Capture,\" http://desowin.org/usbpcap/, 2016.\n\nB Schiek, H.-J Siweris, I Rolfes, Noise in High-Frequency Circuits and Oscillators. WileyB. Schiek, H.-J. Siweris, and I. Rolfes, Noise in High-Frequency Circuits and Oscillators. Wiley, 2006.\n\nADF4351 Evaluation Board. Analog Devices, Analog Devices, \"ADF4351 Evaluation Board,\" http://www.analog.com.\n\nAtomix: A Framework for Deploying Signal Processing Applications on Wireless Infrastructure. M Bansal, A Schulman, S Katti, Proc. of USENIX NSDI. of USENIX NSDIM. Bansal, A. Schulman, and S. Katti, \"Atomix: A Framework for Deploying Signal Processing Applications on Wireless Infrastructure,\" in Proc. of USENIX NSDI, 2015.\n\nUltraFast High-Level Productivity Design Methodology Guide. Xilinx, Xilinx, \"UltraFast High-Level Productivity Design Methodology Guide,\" http://www.xilinx.com.\n\nSpectra-Q Engine. Altera , Altera, \"Spectra-Q Engine,\" https://www.altera.com, 2015.\n\nGnuradio, The GNU Software Radio. GNURadio, \"The GNU Software Radio,\" http://gnuradio.org/trac/wiki.\n\nKCU105 PCI Express Streaming Data Plane TRD. Xilinx, Xilinx, \"KCU105 PCI Express Streaming Data Plane TRD,\" http://www.xilinx.com.\n\nCmem overview. Texus Instrument, Texus Instrument., \"Cmem overview.\" [Online]. Available: http://processors.wiki.ti.com/index.php/CMEM Overview\n\nA 60GHz Digitally Controlled RF Beamforming Array in 65nm CMOS With Off-Chip Antennas. S Lin, K B Ng, H Wong, K M Luk, S S Wong, A S Y Poon, IEEE Radio Frequency Integrated Circuits Symposium (RFIC). S. Lin, K. B. Ng, H. Wong, K. M. Luk, S. S. Wong, and A. S. Y. Poon, \"A 60GHz Digitally Controlled RF Beamforming Array in 65nm CMOS With Off-Chip Antennas,\" in IEEE Radio Frequency Integrated Circuits Symposium (RFIC), 2011.\n\nSingle-Element and Phased-Array Transceiver Chipsets for 60-GHz Gb/s Communications. A Valdes-Garcia, S Reynolds, A Natarajan, D Kam, D Liu, J W Lai, Y L O Huang, P Y Chen, M D Tsai, J H C Zhan, S Nicolson, B Floyd, IEEE Communications Magazine. 494A. Valdes-Garcia, S. Reynolds, A. Natarajan, D. Kam, D. Liu, J. W. Lai, Y. L. O. Huang, P. Y. Chen, M. D. Tsai, J. H. C. Zhan, S. Nicolson, and B. Floyd, \"Single-Element and Phased-Array Transceiver Chipsets for 60-GHz Gb/s Communications,\" IEEE Communications Magazine, vol. 49, no. 4, 2011.\n\nAnalog Devices, SPDT, Reflective Switch Chip. GHzAnalog Devices, \"SPDT, Reflective Switch Chip, 55 -86 GHz,\" http://www.analog.com/media/en/technical- documentation/data-sheets/hmc-sdd112.pdf, 2015.\n\n60 -90 GHz SP3T Switch Flip Chip. Triquint Semiconductor, TriQuint Semiconductor, \"60 -90 GHz SP3T Switch Flip Chip,\" 2016. [Online]. Available: http://www.triquint.com/products/p/TGS4305-FC\n\nMultifunction switch chips. Gotmic, Gotmic, \"Multifunction switch chips,\" 2016. [Online]. Available: http://www.gotmic.se/switches.html\n\nStudy of Planar Microstrip-to-Waveguide Transitions in Millimemter-Wave Band. Seo Kazuyuki, Kazuyuki SEO, \"Study of Planar Microstrip-to-Waveguide Transitions in Millimemter-Wave Band,\" 2011. [Online].\n\nInterdigitated Strip-Line Quadrature Hybrid. J Lange, G-MTT International Microwave Symposium. J. Lange, \"Interdigitated Strip-Line Quadrature Hybrid,\" in G-MTT International Microwave Symposium, 1969.\n\nMicrowave Engineering. D M Pozar, John Wiley & SonsD. M. Pozar, Microwave Engineering. John Wiley & Sons, 2009.\n\nAn N-Way Hybrid Power Divider. E J Wilkinson, IRE Transactions on Microwave Theory and Techniques. 81E. J. Wilkinson, \"An N-Way Hybrid Power Divider,\" IRE Transactions on Microwave Theory and Techniques, vol. 8, no. 1, 1960.\n\nModified Millimeter-Wave Wilkinson Power Divider For Antenna Feeding Networks. F D L Peters, D Hammou, S O Tatu, T A Denidni, Progress In Electromagnetics Research Letters. 17F. D. L. Peters, D. Hammou, S. O. Tatu, and T. A. Denidni, \"Modified Millimeter-Wave Wilkinson Power Divider For Antenna Feeding Networks,\" Progress In Electromagnetics Research Letters, vol. 17, 2010.\n\nElectromagnetic Waves and Antennas. Sophocles J Orfanidis, Orfanidis, Sophocles J., \"Electromagnetic Waves and Antennas,\" 2014. [Online]. Available: http://www.ece. rutgers.edu/\u02dcorfanidi/ewa/orfanidis-ewa-book.pdf\n\nRogers 6010 Datasheet. Rogers Corporation, Rogers Corporation, \"Rogers 6010 Datasheet,\" https://www.rogerscorp.com/documents/612/acs/RT- duroid-6006-6010LM-laminate-data-sheet.pdf, 2014.\n\nInc Maxim, MAX889 High-Frequency, Regulated, 200mA, Inverting Charge Pump. Maxim, Inc., \"MAX889 High-Frequency, Regulated, 200mA, Inverting Charge Pump,\" https://www.maximintegrated.com/en/products/power/charge- pumps/MAX889.html, 2014.\n\nAD8001 800 MHz 50 mW urrent Feedback Amplifier. \"AD8001 800 MHz 50 mW urrent Feedback Amplifier,\" 2014. [Online]. Available: http://www.analog.com/en/ products/amplifiers/operational-amplifiers/ current-feedback-amplifiers/ad8001.html\n\nIeee Standards Association, Enhancements for Very High Throughput in the 60 GHz Band. 802IEEE Standards Association, \"IEEE Standards 802.11ad-2012: Enhancements for Very High Throughput in the 60 GHz Band,\" 2012.\n\nDOF: A Local Wireless Information Plane. S S Hong, S R Katti, Proc. of ACM SIGCOMM. of ACM SIGCOMMS. S. Hong and S. R. Katti, \"DOF: A Local Wireless Information Plane,\" in Proc. of ACM SIGCOMM, 2011.\n\nChannel Models for 60 GHz WLAN Systems. A Maltsev, V Erceg, E Perahia, C Hansen, R Maslennikov, A Lomayev, A Sevastyanov, A Khoryaev, 11-09/0334r8IEEE. 802A. Maltsev, V. Erceg, E. Perahia, C. Hansen, R. Maslennikov, A. Lomayev, A. Sevastyanov, and A. Khoryaev, \"Channel Models for 60 GHz WLAN Systems,\" IEEE 802.11-09/0334r8, 2010.\n\nConsolidation of Usage Models in 802. IEEE 802.11ad Working Group. 11IEEE 802.11ad Working Group, \"Consolidation of Usage Models in 802.11ad,\" http://mentor.ieee.org/802.11/dcn/07/11-07-2988-04-0000- liaison-from-wi-fi-alliance-to-802-11-regarding-wfa-vht- study-group-consolidation-of-usage-models.ppt, 2015.\n\nA 60 GHz Single-Chip 256-Element Wafer-Scale Phased Array With EIRP of 45 dBm Using Sub-Reticle Stitching. S Zihir, O D Gurbuz, A Karroy, S Raman, G M Rebeiz, IEEE Radio Frequency Integrated Circuits Symposium (RFIC). S. Zihir, O. D. Gurbuz, A. Karroy, S. Raman, and G. M. Rebeiz, \"A 60 GHz Single-Chip 256-Element Wafer-Scale Phased Array With EIRP of 45 dBm Using Sub-Reticle Stitching,\" in IEEE Radio Frequency Integrated Circuits Symposium (RFIC), 2015.\n\n60 GHz Indoor Networking through Flexible Beams: A Link-Level Profiling. S Sur, V Venkateswaran, X Zhang, P Ramanathan, Proc. of ACM SIGMETRICS. of ACM SIGMETRICSS. Sur, V. Venkateswaran, X. Zhang, and P. Ramanathan, \"60 GHz Indoor Networking through Flexible Beams: A Link-Level Profiling,\" in Proc. of ACM SIGMETRICS, 2015.\n\nAirblue: A System for Cross-layer Wireless Protocol Development. M C Ng, K E Fleming, M Vutukuru, S Gross, Arvind , H Balakrishnan, Proc. of ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS). of ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS)M. C. Ng, K. E. Fleming, M. Vutukuru, S. Gross, Arvind, and H. Balakrishnan, \"Airblue: A System for Cross-layer Wireless Protocol Development,\" in Proc. of ACM/IEEE Symposium on Architectures for Networking and Communications Systems (ANCS), 2010.\n\nSteering with Eyes Closed: mm-Wave Beam Steering without In-Band Measurement. T Nitsche, A B Flores, E W Knightly, J Widmer, Proc. of IEEE INFOCOM. of IEEE INFOCOMT. Nitsche, A. B. Flores, E. W. Knightly, and J. Widmer, \"Steering with Eyes Closed: mm-Wave Beam Steering without In-Band Measurement,\" in Proc. of IEEE INFOCOM, 2015.\n\nBoon and Bane of 60 GHz Networks: Practical Insights into Beamforming, Interference, and Frame Level Operation. T Nitsche, G Bielsa, I Tejado, A Loch, J Widmer, Proc. of ACM CoNEXT. of ACM CoNEXTT. Nitsche, G. Bielsa, , I. Tejado, A. Loch, and J. Widmer, \"Boon and Bane of 60 GHz Networks: Practical Insights into Beamforming, Interference, and Frame Level Operation,\" in Proc. of ACM CoNEXT, 2015.\n\nDemo: Spectrum-Agile mm-Wave Packet Radio Implementation on USRPs. J Arnold, L Simic, M Petrova, P M\u00e4h\u00f6nen, Proc. of Workshop on Software Radio Implementation Forum (SRIF). of Workshop on Software Radio Implementation Forum (SRIF)J. Arnold, L. Simic, M. Petrova, and P. M\u00e4h\u00f6nen, \"Demo: Spectrum-Agile mm-Wave Packet Radio Implementation on USRPs,\" in Proc. of Workshop on Software Radio Implementation Forum (SRIF), 2015.\n\nOpen Source SDR Frontend and Measurements for 60-GHz Wireless Experimentation. P Zetterberg, R Fardi, IEEE Access. 3P. Zetterberg and R. Fardi, \"Open Source SDR Frontend and Measurements for 60-GHz Wireless Experimentation,\" IEEE Access, vol. 3, 2015.\n\nmmWave Transceiver System. National InstrumentsNational Instruments, \"mmWave Transceiver System,\" 2016. [Online]. Available: http://www.ni.com/sdr/mmwave/\n\n5G Waveform Generation and Analysis Testbed, Reference Solution. Keysight TechnologiesKeysight Technologies, \"5G Waveform Generation and Analysis Testbed, Reference Solution,\" 2016. [Online].\n\nBlockage and Directivity in 60 GHz Wireless Personal Area Networks. S Singh, F Ziliotto, U Madhow, E M Belding, M Rodwell, IEEE JSAC. 278S. Singh, F. Ziliotto, U. Madhow, E. M. Belding, and M. Rodwell, \"Blockage and Directivity in 60 GHz Wireless Personal Area Networks,\" IEEE JSAC, vol. 27, no. 8, 2009.\n\nA 60GHz CMOS Phased-Array Transceiver Pair for Multi-Gb/s Wireless Communications. S Emami, R Wiser, E Ali, M Forbes, M Gordon, X Guan, S Lo, P Mcelwee, J Parker, J Tani, J Gilbert, C Doan, IEEE International Solid-State Circuits Conference (ISSCC). S. Emami, R. Wiser, E. Ali, M. Forbes, M. Gordon, X. Guan, S. Lo, P. McElwee, J. Parker, J. Tani, J. Gilbert, and C. Doan, \"A 60GHz CMOS Phased-Array Transceiver Pair for Multi-Gb/s Wireless Communications,\" in IEEE International Solid-State Circuits Conference (ISSCC), 2011.\n\nA 60GHz Digitally Controlled RF Beamforming Array in 65nm CMOS With Off-Chip Antennas. S Lin, K Ng, H Wong, K Luk, S Wong, A Poon, IEEE Radio Frequency Integrated Circuits Symposium (RFIC). S. Lin, K. Ng, H. Wong, K. Luk, S. Wong, and A. Poon, \"A 60GHz Digitally Controlled RF Beamforming Array in 65nm CMOS With Off-Chip Antennas,\" in IEEE Radio Frequency Integrated Circuits Symposium (RFIC), 2011.\n\nA Fully Integrated 16-Element Phased-Array Transmitter in SiGe BiCMOS for 60-GHz Communications. A Valdes-Garcia, S Nicolson, J.-W Lai, A Natarajan, P.-Y Chen, S Reynolds, J.-H Zhan, D Kam, D Liu, B Floyd, IEEE Journal of Solid-State Circuits. 4512A. Valdes-Garcia, S. Nicolson, J.-W. Lai, A. Natarajan, P.-Y. Chen, S. Reynolds, J.-H. Zhan, D. Kam, D. Liu, and B. Floyd, \"A Fully Integrated 16-Element Phased-Array Transmitter in SiGe BiCMOS for 60-GHz Communications,\" IEEE Journal of Solid-State Circuits, vol. 45, no. 12, 2010.\n\nMultiple Emitter Location and Signal Parameter Estimation. R Schmidt, IEEE Transactions on Antennas and Propagation. 343R. Schmidt, \"Multiple Emitter Location and Signal Parameter Estimation,\" IEEE Transactions on Antennas and Propagation, vol. 34, no. 3, 1986.\n\nESPRIT-Estimation of Signal Parameters Via Rotational Invariance Techniques. R Roy, T Kailath, IEEE Transactions on Acoustics, Speech and Signal Processing. 377R. Roy and T. Kailath, \"ESPRIT-Estimation of Signal Parameters Via Rotational Invariance Techniques,\" IEEE Transactions on Acoustics, Speech and Signal Processing, vol. 37, no. 7, 1989.\n\nIEEE Standards 802.15.3c-2009: Millimeter-wave-based Alternate Physical Layer Extension. Ieee Standards Association, IEEE Standards Association, \"IEEE Standards 802.15.3c-2009: Millimeter-wave-based Alternate Physical Layer Extension,\" 2009.\n\nStandard ECMA-387: High Rate 60 GHz PHY, MAC and PALs. Ecma International, ECMA International, \"Standard ECMA-387: High Rate 60 GHz PHY, MAC and PALs,\" 2010.\n\nMobiSteer: Using Steerable Beam Directional Antenna for Vehicular Network Access. V Navda, A P Subramanian, K Dhanasekaran, A Timm-Giel, S Das, Proc. of ACM MobiSys. of ACM MobiSysV. Navda, A. P. Subramanian, K. Dhanasekaran, A. Timm-Giel, and S. Das, \"MobiSteer: Using Steerable Beam Directional Antenna for Vehicular Network Access,\" in Proc. of ACM MobiSys, 2007.\n\nA Survey On MAC Protocols for Wireless Adhoc Networks with Beamforming Antennas. O Bazan, M Jaseemuddin, IEEE Communications Surveys and Tutorials. 142O. Bazan and M. Jaseemuddin, \"A Survey On MAC Protocols for Wireless Adhoc Networks with Beamforming Antennas,\" IEEE Communications Surveys and Tutorials, vol. 14, no. 2, 2012.\n\nOn the Efficient Beam-Forming Training for 60GHz Wireless Personal Area Networks. B Li, Z Zhou, W Zou, X Sun, G Du, IEEE Transactions on Wireless Communications. 122B. Li, Z. Zhou, W. Zou, X. Sun, and G. Du, \"On the Efficient Beam-Forming Training for 60GHz Wireless Personal Area Networks,\" IEEE Transactions on Wireless Communications, vol. 12, no. 2, 2013.\n\nBeam Codebook Based Beamforming Protocol for Multi-Gbps Millimeter-Wave WPAN Systems. J Wang, Z Lan, C Woo Pyo, T Baykas, C.-S Sum, M Rahman, J Gao, R Funada, F Kojima, H Harada, S Kato, IEEE Journal on Selected Areas in Communications. 278J. Wang, Z. Lan, C. woo Pyo, T. Baykas, C.-S. Sum, M. Rahman, J. Gao, R. Funada, F. Kojima, H. Harada, and S. Kato, \"Beam Codebook Based Beamforming Protocol for Multi-Gbps Millimeter-Wave WPAN Systems,\" IEEE Journal on Selected Areas in Communications, vol. 27, no. 8, 2009.\n\nAdaptive Beamforming for 60 GHz Radios: Challenges and Preliminary Solutions. K Ramachandran, N Prasad, K Hosoya, K Maruhashi, S Rangarajan, ACM mmCom. K. Ramachandran, N. Prasad, K. Hosoya, K. Maruhashi, and S. Rangarajan, \"Adaptive Beamforming for 60 GHz Radios: Challenges and Preliminary Solutions,\" in ACM mmCom, 2010.\n\nBeam Switching Support to Resolve Link-Blockage Problem. X An, C.-S Sum, R Prasad, J Wang, Z Lan, J Wang, R Hekmat, H Harada, I Niemegeers, 60X. An, C.-S. Sum, R. Prasad, J. Wang, Z. Lan, J. Wang, R. Hekmat, H. Harada, and I. Niemegeers, \"Beam Switching Support to Resolve Link-Blockage Problem in 60\n\nGhz Wpans, IEEE International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC). GHz WPANs,\" in IEEE International Symposium on Personal, Indoor and Mobile Radio Communications (PIMRC), 2009.\n\nBeamSpy: Enabling Robust 60 GHz Links Under Blockage. S Sur, X Zhang, P Ramanathan, R Chandra, USENIX Symposium on Networked Systems Design and Implementation (NSDI). S. Sur, X. Zhang, P. Ramanathan, and R. Chandra, \"BeamSpy: Enabling Robust 60 GHz Links Under Blockage,\" in USENIX Symposium on Networked Systems Design and Implementation (NSDI), 2016.\n", "annotations": {"author": "[{\"end\":216,\"start\":89},{\"end\":334,\"start\":217},{\"end\":455,\"start\":335},{\"end\":592,\"start\":456}]", "publisher": null, "author_last_name": "[{\"end\":103,\"start\":98},{\"end\":228,\"start\":223},{\"end\":351,\"start\":343},{\"end\":479,\"start\":469}]", "author_first_name": "[{\"end\":97,\"start\":89},{\"end\":222,\"start\":217},{\"end\":342,\"start\":335},{\"end\":468,\"start\":456}]", "author_affiliation": "[{\"end\":215,\"start\":133},{\"end\":333,\"start\":251},{\"end\":454,\"start\":372},{\"end\":591,\"start\":509}]", "title": "[{\"end\":86,\"start\":1},{\"end\":678,\"start\":593}]", "venue": null, "abstract": "[{\"end\":2151,\"start\":951}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3225,\"start\":3222},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3292,\"start\":3289},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3306,\"start\":3303},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3583,\"start\":3580},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3635,\"start\":3632},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4036,\"start\":4033},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":4039,\"start\":4036},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":4042,\"start\":4039},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4045,\"start\":4042},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4128,\"start\":4125},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4139,\"start\":4135},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4153,\"start\":4149},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4316,\"start\":4312},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4345,\"start\":4341},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5998,\"start\":5994},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":6235,\"start\":6231},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6825,\"start\":6822},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":6828,\"start\":6825},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":6831,\"start\":6828},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6834,\"start\":6831},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7179,\"start\":7176},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":7793,\"start\":7789},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":7796,\"start\":7793},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":10429,\"start\":10425},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":13343,\"start\":13339},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":13412,\"start\":13408},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":13429,\"start\":13425},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":14107,\"start\":14103},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":14947,\"start\":14943},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":15207,\"start\":15203},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":15315,\"start\":15311},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":15783,\"start\":15779},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":17237,\"start\":17233},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":17902,\"start\":17898},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":18735,\"start\":18731},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":18882,\"start\":18878},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":22524,\"start\":22520},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":23416,\"start\":23412},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":23419,\"start\":23416},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":23585,\"start\":23581},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":26124,\"start\":26120},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":30716,\"start\":30712},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":32392,\"start\":32388},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":34259,\"start\":34255},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":34262,\"start\":34259},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":36212,\"start\":36208},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":36707,\"start\":36703},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":36781,\"start\":36777},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":37864,\"start\":37860},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":38066,\"start\":38062},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":38090,\"start\":38086},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":38110,\"start\":38106},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":38428,\"start\":38424},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":39036,\"start\":39032},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":39886,\"start\":39882},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":40036,\"start\":40032},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":42223,\"start\":42219},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":42278,\"start\":42274},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":42942,\"start\":42938},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":44959,\"start\":44955},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":45714,\"start\":45710},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":46509,\"start\":46505},{\"end\":50839,\"start\":50835},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":50858,\"start\":50857},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":51438,\"start\":51434},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":51441,\"start\":51438},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":51444,\"start\":51441},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":51659,\"start\":51655},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":52197,\"start\":52193},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":52200,\"start\":52197},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":52891,\"start\":52887},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":54738,\"start\":54734},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":55085,\"start\":55081},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":55461,\"start\":55457},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":56666,\"start\":56662},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":58508,\"start\":58505},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":58511,\"start\":58508},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":58822,\"start\":58818},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":59067,\"start\":59063},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":59982,\"start\":59978},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":59998,\"start\":59994},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":60824,\"start\":60820},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":60827,\"start\":60824},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":60830,\"start\":60827},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":61033,\"start\":61029},{\"end\":61060,\"start\":61056},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":61393,\"start\":61389},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":61541,\"start\":61537},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":61777,\"start\":61773},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":61780,\"start\":61777},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":62033,\"start\":62029},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":62037,\"start\":62033},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":62041,\"start\":62037},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":62442,\"start\":62438},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":62445,\"start\":62442},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":62448,\"start\":62445},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":62451,\"start\":62448},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":62454,\"start\":62453},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":62558,\"start\":62554},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":62561,\"start\":62558},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":62564,\"start\":62561},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":62609,\"start\":62605},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":62612,\"start\":62609},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":62615,\"start\":62612},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":62891,\"start\":62887},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":62894,\"start\":62891},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":62915,\"start\":62911},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":62918,\"start\":62915},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":63193,\"start\":63189},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":63196,\"start\":63193},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":63199,\"start\":63196},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":63568,\"start\":63564},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":63748,\"start\":63744},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":64028,\"start\":64024},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":64032,\"start\":64028},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":64036,\"start\":64032},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":64040,\"start\":64036},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":64757,\"start\":64753}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":65925,\"start\":65765},{\"attributes\":{\"id\":\"fig_1\"},\"end\":66149,\"start\":65926},{\"attributes\":{\"id\":\"fig_2\"},\"end\":66294,\"start\":66150},{\"attributes\":{\"id\":\"fig_3\"},\"end\":66352,\"start\":66295},{\"attributes\":{\"id\":\"fig_4\"},\"end\":66568,\"start\":66353},{\"attributes\":{\"id\":\"fig_5\"},\"end\":66623,\"start\":66569},{\"attributes\":{\"id\":\"fig_6\"},\"end\":66685,\"start\":66624},{\"attributes\":{\"id\":\"fig_7\"},\"end\":66825,\"start\":66686},{\"attributes\":{\"id\":\"fig_8\"},\"end\":66887,\"start\":66826},{\"attributes\":{\"id\":\"fig_9\"},\"end\":67003,\"start\":66888},{\"attributes\":{\"id\":\"fig_10\"},\"end\":67391,\"start\":67004},{\"attributes\":{\"id\":\"fig_11\"},\"end\":67549,\"start\":67392},{\"attributes\":{\"id\":\"fig_12\"},\"end\":67571,\"start\":67550},{\"attributes\":{\"id\":\"fig_13\"},\"end\":67659,\"start\":67572},{\"attributes\":{\"id\":\"fig_14\"},\"end\":67954,\"start\":67660},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":68156,\"start\":67955},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":68411,\"start\":68157},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":68929,\"start\":68412},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":69420,\"start\":68930},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":69512,\"start\":69421}]", "paragraph": "[{\"end\":3636,\"start\":2167},{\"end\":4571,\"start\":3638},{\"end\":5999,\"start\":4573},{\"end\":6618,\"start\":6001},{\"end\":7488,\"start\":6620},{\"end\":8795,\"start\":7490},{\"end\":9655,\"start\":8797},{\"end\":10056,\"start\":9657},{\"end\":10328,\"start\":10058},{\"end\":10430,\"start\":10330},{\"end\":11314,\"start\":10456},{\"end\":11639,\"start\":11316},{\"end\":12247,\"start\":11660},{\"end\":12878,\"start\":12249},{\"end\":13253,\"start\":12880},{\"end\":13508,\"start\":13255},{\"end\":13863,\"start\":13510},{\"end\":14469,\"start\":13865},{\"end\":15208,\"start\":14519},{\"end\":15956,\"start\":15210},{\"end\":16705,\"start\":15958},{\"end\":17452,\"start\":16707},{\"end\":18052,\"start\":17487},{\"end\":18798,\"start\":18054},{\"end\":19233,\"start\":18800},{\"end\":19579,\"start\":19235},{\"end\":20435,\"start\":19581},{\"end\":21053,\"start\":20437},{\"end\":22231,\"start\":21100},{\"end\":22801,\"start\":22290},{\"end\":23005,\"start\":22803},{\"end\":23975,\"start\":23071},{\"end\":24707,\"start\":23977},{\"end\":25803,\"start\":24709},{\"end\":26803,\"start\":26064},{\"end\":28038,\"start\":26805},{\"end\":29690,\"start\":28040},{\"end\":30528,\"start\":29692},{\"end\":31165,\"start\":30559},{\"end\":31686,\"start\":31167},{\"end\":32147,\"start\":31688},{\"end\":32919,\"start\":32149},{\"end\":33656,\"start\":32921},{\"end\":33870,\"start\":33695},{\"end\":34122,\"start\":33872},{\"end\":35211,\"start\":34124},{\"end\":35364,\"start\":35213},{\"end\":35948,\"start\":35411},{\"end\":36521,\"start\":35950},{\"end\":37272,\"start\":36523},{\"end\":37865,\"start\":37299},{\"end\":38429,\"start\":37867},{\"end\":39265,\"start\":38431},{\"end\":40274,\"start\":39267},{\"end\":40626,\"start\":40276},{\"end\":41428,\"start\":40667},{\"end\":42402,\"start\":41430},{\"end\":42713,\"start\":42452},{\"end\":43657,\"start\":42752},{\"end\":44267,\"start\":43659},{\"end\":45024,\"start\":44269},{\"end\":47844,\"start\":45026},{\"end\":48330,\"start\":47880},{\"end\":50033,\"start\":48332},{\"end\":50591,\"start\":50071},{\"end\":50845,\"start\":50593},{\"end\":50851,\"start\":50847},{\"end\":50872,\"start\":50853},{\"end\":50983,\"start\":50874},{\"end\":51152,\"start\":50985},{\"end\":51660,\"start\":51217},{\"end\":52126,\"start\":51662},{\"end\":53369,\"start\":52128},{\"end\":54518,\"start\":53371},{\"end\":55086,\"start\":54563},{\"end\":56237,\"start\":55088},{\"end\":57432,\"start\":56239},{\"end\":57871,\"start\":57434},{\"end\":59198,\"start\":57888},{\"end\":60520,\"start\":59200},{\"end\":61935,\"start\":60522},{\"end\":62707,\"start\":61937},{\"end\":63569,\"start\":62709},{\"end\":65228,\"start\":63571},{\"end\":65764,\"start\":65243}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":26022,\"start\":25804}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":21464,\"start\":21457},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":22141,\"start\":22134},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":25521,\"start\":25514},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":47362,\"start\":47355},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":49699,\"start\":49692}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":2165,\"start\":2153},{\"attributes\":{\"n\":\"2.\"},\"end\":10454,\"start\":10433},{\"attributes\":{\"n\":\"2.1\"},\"end\":11658,\"start\":11642},{\"attributes\":{\"n\":\"2.2\"},\"end\":14517,\"start\":14472},{\"attributes\":{\"n\":\"2.3\"},\"end\":17485,\"start\":17455},{\"attributes\":{\"n\":\"3.\"},\"end\":21098,\"start\":21056},{\"attributes\":{\"n\":\"3.1\"},\"end\":22288,\"start\":22234},{\"attributes\":{\"n\":\"3.1.1\"},\"end\":23069,\"start\":23008},{\"attributes\":{\"n\":\"3.1.2\"},\"end\":26062,\"start\":26024},{\"attributes\":{\"n\":\"3.2\"},\"end\":30557,\"start\":30531},{\"attributes\":{\"n\":\"4.\"},\"end\":33693,\"start\":33659},{\"attributes\":{\"n\":\"4.1\"},\"end\":35394,\"start\":35367},{\"attributes\":{\"n\":\"4.1.1\"},\"end\":35409,\"start\":35397},{\"attributes\":{\"n\":\"4.1.2\"},\"end\":37297,\"start\":37275},{\"attributes\":{\"n\":\"4.2\"},\"end\":40665,\"start\":40629},{\"attributes\":{\"n\":\"5.\"},\"end\":42450,\"start\":42405},{\"attributes\":{\"n\":\"5.1\"},\"end\":42750,\"start\":42716},{\"attributes\":{\"n\":\"5.2\"},\"end\":47878,\"start\":47847},{\"attributes\":{\"n\":\"5.3\"},\"end\":50069,\"start\":50036},{\"attributes\":{\"n\":\"6.\"},\"end\":51167,\"start\":51155},{\"attributes\":{\"n\":\"6.1\"},\"end\":51215,\"start\":51170},{\"attributes\":{\"n\":\"6.2\"},\"end\":54561,\"start\":54521},{\"attributes\":{\"n\":\"7.\"},\"end\":57886,\"start\":57874},{\"attributes\":{\"n\":\"8.\"},\"end\":65241,\"start\":65231},{\"end\":65779,\"start\":65766},{\"end\":65947,\"start\":65927},{\"end\":66171,\"start\":66151},{\"end\":66316,\"start\":66296},{\"end\":66364,\"start\":66354},{\"end\":66580,\"start\":66570},{\"end\":66635,\"start\":66625},{\"end\":66709,\"start\":66687},{\"end\":66838,\"start\":66827},{\"end\":66900,\"start\":66889},{\"end\":67027,\"start\":67005},{\"end\":67415,\"start\":67393},{\"end\":67562,\"start\":67551},{\"end\":67584,\"start\":67573},{\"end\":67683,\"start\":67661},{\"end\":67965,\"start\":67956},{\"end\":68167,\"start\":68158},{\"end\":68422,\"start\":68413},{\"end\":68940,\"start\":68931},{\"end\":69431,\"start\":69422}]", "table": "[{\"end\":68156,\"start\":68056},{\"end\":68411,\"start\":68274},{\"end\":68929,\"start\":68473},{\"end\":69420,\"start\":68984},{\"end\":69512,\"start\":69433}]", "figure_caption": "[{\"end\":65925,\"start\":65782},{\"end\":66149,\"start\":65950},{\"end\":66294,\"start\":66174},{\"end\":66352,\"start\":66319},{\"end\":66568,\"start\":66366},{\"end\":66623,\"start\":66582},{\"end\":66685,\"start\":66637},{\"end\":66825,\"start\":66714},{\"end\":66887,\"start\":66841},{\"end\":67003,\"start\":66903},{\"end\":67391,\"start\":67032},{\"end\":67549,\"start\":67420},{\"end\":67571,\"start\":67565},{\"end\":67659,\"start\":67587},{\"end\":67954,\"start\":67688},{\"end\":68056,\"start\":67967},{\"end\":68274,\"start\":68169},{\"end\":68473,\"start\":68424},{\"end\":68984,\"start\":68942}]", "figure_ref": "[{\"end\":10479,\"start\":10471},{\"end\":10504,\"start\":10496},{\"end\":18273,\"start\":18265},{\"end\":18477,\"start\":18469},{\"end\":19042,\"start\":19034},{\"end\":19796,\"start\":19788},{\"end\":20869,\"start\":20861},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":24907,\"start\":24899},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":28555,\"start\":28547},{\"end\":29846,\"start\":29837},{\"end\":31450,\"start\":31440},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":31895,\"start\":31886},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":35533,\"start\":35524},{\"end\":37813,\"start\":37804},{\"end\":40504,\"start\":40492},{\"end\":41735,\"start\":41722},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":41861,\"start\":41852},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":42953,\"start\":42944},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":45305,\"start\":45296},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":46316,\"start\":46307},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":46655,\"start\":46646},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":49353,\"start\":49344},{\"end\":49898,\"start\":49889},{\"end\":50340,\"start\":50331},{\"end\":50887,\"start\":50878},{\"end\":50982,\"start\":50938},{\"end\":54020,\"start\":54011},{\"end\":54320,\"start\":54311},{\"end\":56849,\"start\":56840},{\"end\":57446,\"start\":57437}]", "bib_author_first_name": "[{\"end\":69813,\"start\":69812},{\"end\":69826,\"start\":69825},{\"end\":69833,\"start\":69832},{\"end\":69843,\"start\":69842},{\"end\":69851,\"start\":69850},{\"end\":69859,\"start\":69858},{\"end\":69867,\"start\":69866},{\"end\":69875,\"start\":69874},{\"end\":69885,\"start\":69884},{\"end\":69895,\"start\":69894},{\"end\":70548,\"start\":70547},{\"end\":70555,\"start\":70554},{\"end\":70772,\"start\":70771},{\"end\":70779,\"start\":70778},{\"end\":70786,\"start\":70785},{\"end\":70788,\"start\":70787},{\"end\":70796,\"start\":70795},{\"end\":71019,\"start\":71018},{\"end\":71025,\"start\":71024},{\"end\":71034,\"start\":71033},{\"end\":71047,\"start\":71046},{\"end\":71295,\"start\":71294},{\"end\":71304,\"start\":71303},{\"end\":71316,\"start\":71315},{\"end\":71326,\"start\":71325},{\"end\":71579,\"start\":71574},{\"end\":71593,\"start\":71590},{\"end\":71813,\"start\":71812},{\"end\":71824,\"start\":71823},{\"end\":71832,\"start\":71831},{\"end\":71842,\"start\":71841},{\"end\":71852,\"start\":71851},{\"end\":71865,\"start\":71864},{\"end\":71867,\"start\":71866},{\"end\":72214,\"start\":72213},{\"end\":72221,\"start\":72220},{\"end\":72230,\"start\":72229},{\"end\":72238,\"start\":72237},{\"end\":72245,\"start\":72244},{\"end\":72251,\"start\":72250},{\"end\":72259,\"start\":72258},{\"end\":72268,\"start\":72267},{\"end\":72274,\"start\":72273},{\"end\":72282,\"start\":72281},{\"end\":72284,\"start\":72283},{\"end\":72683,\"start\":72682},{\"end\":72695,\"start\":72694},{\"end\":72701,\"start\":72700},{\"end\":72710,\"start\":72709},{\"end\":73236,\"start\":73235},{\"end\":73245,\"start\":73244},{\"end\":73445,\"start\":73444},{\"end\":73454,\"start\":73453},{\"end\":73462,\"start\":73461},{\"end\":73663,\"start\":73662},{\"end\":73672,\"start\":73671},{\"end\":73983,\"start\":73977},{\"end\":74822,\"start\":74821},{\"end\":74824,\"start\":74823},{\"end\":75116,\"start\":75110},{\"end\":75671,\"start\":75670},{\"end\":75684,\"start\":75680},{\"end\":75695,\"start\":75694},{\"end\":75896,\"start\":75890},{\"end\":76068,\"start\":76067},{\"end\":76078,\"start\":76077},{\"end\":76090,\"start\":76089},{\"end\":76485,\"start\":76479},{\"end\":76801,\"start\":76796},{\"end\":77014,\"start\":77013},{\"end\":77021,\"start\":77020},{\"end\":77023,\"start\":77022},{\"end\":77029,\"start\":77028},{\"end\":77037,\"start\":77036},{\"end\":77039,\"start\":77038},{\"end\":77046,\"start\":77045},{\"end\":77048,\"start\":77047},{\"end\":77056,\"start\":77055},{\"end\":77060,\"start\":77057},{\"end\":77439,\"start\":77438},{\"end\":77456,\"start\":77455},{\"end\":77468,\"start\":77467},{\"end\":77481,\"start\":77480},{\"end\":77488,\"start\":77487},{\"end\":77495,\"start\":77494},{\"end\":77497,\"start\":77496},{\"end\":77504,\"start\":77503},{\"end\":77508,\"start\":77505},{\"end\":77517,\"start\":77516},{\"end\":77519,\"start\":77518},{\"end\":77527,\"start\":77526},{\"end\":77529,\"start\":77528},{\"end\":77537,\"start\":77536},{\"end\":77541,\"start\":77538},{\"end\":77549,\"start\":77548},{\"end\":77561,\"start\":77560},{\"end\":77902,\"start\":77896},{\"end\":78138,\"start\":78130},{\"end\":78506,\"start\":78503},{\"end\":78674,\"start\":78673},{\"end\":78855,\"start\":78854},{\"end\":78857,\"start\":78856},{\"end\":78976,\"start\":78975},{\"end\":78978,\"start\":78977},{\"end\":79250,\"start\":79249},{\"end\":79254,\"start\":79251},{\"end\":79264,\"start\":79263},{\"end\":79274,\"start\":79273},{\"end\":79276,\"start\":79275},{\"end\":79284,\"start\":79283},{\"end\":79286,\"start\":79285},{\"end\":79593,\"start\":79584},{\"end\":79595,\"start\":79594},{\"end\":79792,\"start\":79786},{\"end\":79954,\"start\":79951},{\"end\":80681,\"start\":80680},{\"end\":80683,\"start\":80682},{\"end\":80691,\"start\":80690},{\"end\":80693,\"start\":80692},{\"end\":80881,\"start\":80880},{\"end\":80892,\"start\":80891},{\"end\":80901,\"start\":80900},{\"end\":80912,\"start\":80911},{\"end\":80922,\"start\":80921},{\"end\":80937,\"start\":80936},{\"end\":80948,\"start\":80947},{\"end\":80963,\"start\":80962},{\"end\":81592,\"start\":81591},{\"end\":81601,\"start\":81600},{\"end\":81603,\"start\":81602},{\"end\":81613,\"start\":81612},{\"end\":81623,\"start\":81622},{\"end\":81632,\"start\":81631},{\"end\":81634,\"start\":81633},{\"end\":82017,\"start\":82016},{\"end\":82024,\"start\":82023},{\"end\":82041,\"start\":82040},{\"end\":82050,\"start\":82049},{\"end\":82336,\"start\":82335},{\"end\":82338,\"start\":82337},{\"end\":82344,\"start\":82343},{\"end\":82346,\"start\":82345},{\"end\":82357,\"start\":82356},{\"end\":82369,\"start\":82368},{\"end\":82383,\"start\":82377},{\"end\":82387,\"start\":82386},{\"end\":82912,\"start\":82911},{\"end\":82923,\"start\":82922},{\"end\":82925,\"start\":82924},{\"end\":82935,\"start\":82934},{\"end\":82937,\"start\":82936},{\"end\":82949,\"start\":82948},{\"end\":83279,\"start\":83278},{\"end\":83290,\"start\":83289},{\"end\":83300,\"start\":83299},{\"end\":83310,\"start\":83309},{\"end\":83318,\"start\":83317},{\"end\":83634,\"start\":83633},{\"end\":83644,\"start\":83643},{\"end\":83653,\"start\":83652},{\"end\":83664,\"start\":83663},{\"end\":84069,\"start\":84068},{\"end\":84083,\"start\":84082},{\"end\":84660,\"start\":84659},{\"end\":84669,\"start\":84668},{\"end\":84681,\"start\":84680},{\"end\":84691,\"start\":84690},{\"end\":84693,\"start\":84692},{\"end\":84704,\"start\":84703},{\"end\":84981,\"start\":84980},{\"end\":84990,\"start\":84989},{\"end\":84999,\"start\":84998},{\"end\":85006,\"start\":85005},{\"end\":85016,\"start\":85015},{\"end\":85026,\"start\":85025},{\"end\":85034,\"start\":85033},{\"end\":85040,\"start\":85039},{\"end\":85051,\"start\":85050},{\"end\":85061,\"start\":85060},{\"end\":85069,\"start\":85068},{\"end\":85080,\"start\":85079},{\"end\":85513,\"start\":85512},{\"end\":85520,\"start\":85519},{\"end\":85526,\"start\":85525},{\"end\":85534,\"start\":85533},{\"end\":85541,\"start\":85540},{\"end\":85549,\"start\":85548},{\"end\":85925,\"start\":85924},{\"end\":85942,\"start\":85941},{\"end\":85957,\"start\":85953},{\"end\":85964,\"start\":85963},{\"end\":85980,\"start\":85976},{\"end\":85988,\"start\":85987},{\"end\":86003,\"start\":85999},{\"end\":86011,\"start\":86010},{\"end\":86018,\"start\":86017},{\"end\":86025,\"start\":86024},{\"end\":86419,\"start\":86418},{\"end\":86700,\"start\":86699},{\"end\":86707,\"start\":86706},{\"end\":87454,\"start\":87453},{\"end\":87463,\"start\":87462},{\"end\":87465,\"start\":87464},{\"end\":87480,\"start\":87479},{\"end\":87496,\"start\":87495},{\"end\":87509,\"start\":87508},{\"end\":87821,\"start\":87820},{\"end\":87830,\"start\":87829},{\"end\":88151,\"start\":88150},{\"end\":88157,\"start\":88156},{\"end\":88165,\"start\":88164},{\"end\":88172,\"start\":88171},{\"end\":88179,\"start\":88178},{\"end\":88516,\"start\":88515},{\"end\":88524,\"start\":88523},{\"end\":88531,\"start\":88530},{\"end\":88542,\"start\":88541},{\"end\":88555,\"start\":88551},{\"end\":88562,\"start\":88561},{\"end\":88572,\"start\":88571},{\"end\":88579,\"start\":88578},{\"end\":88589,\"start\":88588},{\"end\":88599,\"start\":88598},{\"end\":88609,\"start\":88608},{\"end\":89025,\"start\":89024},{\"end\":89041,\"start\":89040},{\"end\":89051,\"start\":89050},{\"end\":89061,\"start\":89060},{\"end\":89074,\"start\":89073},{\"end\":89329,\"start\":89328},{\"end\":89338,\"start\":89334},{\"end\":89345,\"start\":89344},{\"end\":89355,\"start\":89354},{\"end\":89363,\"start\":89362},{\"end\":89370,\"start\":89369},{\"end\":89378,\"start\":89377},{\"end\":89388,\"start\":89387},{\"end\":89398,\"start\":89397},{\"end\":89576,\"start\":89573},{\"end\":89841,\"start\":89840},{\"end\":89848,\"start\":89847},{\"end\":89857,\"start\":89856},{\"end\":89871,\"start\":89870}]", "bib_author_last_name": "[{\"end\":69823,\"start\":69814},{\"end\":69830,\"start\":69827},{\"end\":69840,\"start\":69834},{\"end\":69848,\"start\":69844},{\"end\":69856,\"start\":69852},{\"end\":69864,\"start\":69860},{\"end\":69872,\"start\":69868},{\"end\":69882,\"start\":69876},{\"end\":69892,\"start\":69886},{\"end\":69905,\"start\":69896},{\"end\":70161,\"start\":70153},{\"end\":70291,\"start\":70286},{\"end\":70552,\"start\":70549},{\"end\":70561,\"start\":70556},{\"end\":70776,\"start\":70773},{\"end\":70783,\"start\":70780},{\"end\":70793,\"start\":70789},{\"end\":70802,\"start\":70797},{\"end\":71022,\"start\":71020},{\"end\":71031,\"start\":71026},{\"end\":71044,\"start\":71035},{\"end\":71053,\"start\":71048},{\"end\":71301,\"start\":71296},{\"end\":71313,\"start\":71305},{\"end\":71323,\"start\":71317},{\"end\":71332,\"start\":71327},{\"end\":71541,\"start\":71535},{\"end\":71588,\"start\":71580},{\"end\":71821,\"start\":71814},{\"end\":71829,\"start\":71825},{\"end\":71839,\"start\":71833},{\"end\":71849,\"start\":71843},{\"end\":71862,\"start\":71853},{\"end\":71876,\"start\":71868},{\"end\":72218,\"start\":72215},{\"end\":72227,\"start\":72222},{\"end\":72235,\"start\":72231},{\"end\":72242,\"start\":72239},{\"end\":72248,\"start\":72246},{\"end\":72256,\"start\":72252},{\"end\":72265,\"start\":72260},{\"end\":72271,\"start\":72269},{\"end\":72279,\"start\":72275},{\"end\":72292,\"start\":72285},{\"end\":72692,\"start\":72684},{\"end\":72698,\"start\":72696},{\"end\":72707,\"start\":72702},{\"end\":72720,\"start\":72711},{\"end\":72977,\"start\":72970},{\"end\":73100,\"start\":73094},{\"end\":73242,\"start\":73237},{\"end\":73254,\"start\":73246},{\"end\":73451,\"start\":73446},{\"end\":73459,\"start\":73455},{\"end\":73468,\"start\":73463},{\"end\":73669,\"start\":73664},{\"end\":73683,\"start\":73673},{\"end\":73991,\"start\":73984},{\"end\":74830,\"start\":74825},{\"end\":74991,\"start\":74979},{\"end\":75124,\"start\":75117},{\"end\":75359,\"start\":75337},{\"end\":75364,\"start\":75361},{\"end\":75678,\"start\":75672},{\"end\":75692,\"start\":75685},{\"end\":75702,\"start\":75696},{\"end\":75904,\"start\":75897},{\"end\":76075,\"start\":76069},{\"end\":76087,\"start\":76079},{\"end\":76096,\"start\":76091},{\"end\":76365,\"start\":76359},{\"end\":76555,\"start\":76547},{\"end\":76700,\"start\":76694},{\"end\":76812,\"start\":76802},{\"end\":77018,\"start\":77015},{\"end\":77026,\"start\":77024},{\"end\":77034,\"start\":77030},{\"end\":77043,\"start\":77040},{\"end\":77053,\"start\":77049},{\"end\":77065,\"start\":77061},{\"end\":77453,\"start\":77440},{\"end\":77465,\"start\":77457},{\"end\":77478,\"start\":77469},{\"end\":77485,\"start\":77482},{\"end\":77492,\"start\":77489},{\"end\":77501,\"start\":77498},{\"end\":77514,\"start\":77509},{\"end\":77524,\"start\":77520},{\"end\":77534,\"start\":77530},{\"end\":77546,\"start\":77542},{\"end\":77558,\"start\":77550},{\"end\":77567,\"start\":77562},{\"end\":77910,\"start\":77903},{\"end\":78152,\"start\":78139},{\"end\":78322,\"start\":78316},{\"end\":78515,\"start\":78507},{\"end\":78680,\"start\":78675},{\"end\":78863,\"start\":78858},{\"end\":78988,\"start\":78979},{\"end\":79261,\"start\":79255},{\"end\":79271,\"start\":79265},{\"end\":79281,\"start\":79277},{\"end\":79294,\"start\":79287},{\"end\":79605,\"start\":79596},{\"end\":79804,\"start\":79793},{\"end\":79960,\"start\":79955},{\"end\":80451,\"start\":80425},{\"end\":80688,\"start\":80684},{\"end\":80699,\"start\":80694},{\"end\":80889,\"start\":80882},{\"end\":80898,\"start\":80893},{\"end\":80909,\"start\":80902},{\"end\":80919,\"start\":80913},{\"end\":80934,\"start\":80923},{\"end\":80945,\"start\":80938},{\"end\":80960,\"start\":80949},{\"end\":80972,\"start\":80964},{\"end\":81598,\"start\":81593},{\"end\":81610,\"start\":81604},{\"end\":81620,\"start\":81614},{\"end\":81629,\"start\":81624},{\"end\":81641,\"start\":81635},{\"end\":82021,\"start\":82018},{\"end\":82038,\"start\":82025},{\"end\":82047,\"start\":82042},{\"end\":82061,\"start\":82051},{\"end\":82341,\"start\":82339},{\"end\":82354,\"start\":82347},{\"end\":82366,\"start\":82358},{\"end\":82375,\"start\":82370},{\"end\":82400,\"start\":82388},{\"end\":82920,\"start\":82913},{\"end\":82932,\"start\":82926},{\"end\":82946,\"start\":82938},{\"end\":82956,\"start\":82950},{\"end\":83287,\"start\":83280},{\"end\":83297,\"start\":83291},{\"end\":83307,\"start\":83301},{\"end\":83315,\"start\":83311},{\"end\":83325,\"start\":83319},{\"end\":83641,\"start\":83635},{\"end\":83650,\"start\":83645},{\"end\":83661,\"start\":83654},{\"end\":83672,\"start\":83665},{\"end\":84080,\"start\":84070},{\"end\":84089,\"start\":84084},{\"end\":84666,\"start\":84661},{\"end\":84678,\"start\":84670},{\"end\":84688,\"start\":84682},{\"end\":84701,\"start\":84694},{\"end\":84712,\"start\":84705},{\"end\":84987,\"start\":84982},{\"end\":84996,\"start\":84991},{\"end\":85003,\"start\":85000},{\"end\":85013,\"start\":85007},{\"end\":85023,\"start\":85017},{\"end\":85031,\"start\":85027},{\"end\":85037,\"start\":85035},{\"end\":85048,\"start\":85041},{\"end\":85058,\"start\":85052},{\"end\":85066,\"start\":85062},{\"end\":85077,\"start\":85070},{\"end\":85085,\"start\":85081},{\"end\":85517,\"start\":85514},{\"end\":85523,\"start\":85521},{\"end\":85531,\"start\":85527},{\"end\":85538,\"start\":85535},{\"end\":85546,\"start\":85542},{\"end\":85554,\"start\":85550},{\"end\":85939,\"start\":85926},{\"end\":85951,\"start\":85943},{\"end\":85961,\"start\":85958},{\"end\":85974,\"start\":85965},{\"end\":85985,\"start\":85981},{\"end\":85997,\"start\":85989},{\"end\":86008,\"start\":86004},{\"end\":86015,\"start\":86012},{\"end\":86022,\"start\":86019},{\"end\":86031,\"start\":86026},{\"end\":86427,\"start\":86420},{\"end\":86704,\"start\":86701},{\"end\":86715,\"start\":86708},{\"end\":87084,\"start\":87058},{\"end\":87285,\"start\":87267},{\"end\":87460,\"start\":87455},{\"end\":87477,\"start\":87466},{\"end\":87493,\"start\":87481},{\"end\":87506,\"start\":87497},{\"end\":87513,\"start\":87510},{\"end\":87827,\"start\":87822},{\"end\":87842,\"start\":87831},{\"end\":88154,\"start\":88152},{\"end\":88162,\"start\":88158},{\"end\":88169,\"start\":88166},{\"end\":88176,\"start\":88173},{\"end\":88182,\"start\":88180},{\"end\":88521,\"start\":88517},{\"end\":88528,\"start\":88525},{\"end\":88539,\"start\":88532},{\"end\":88549,\"start\":88543},{\"end\":88559,\"start\":88556},{\"end\":88569,\"start\":88563},{\"end\":88576,\"start\":88573},{\"end\":88586,\"start\":88580},{\"end\":88596,\"start\":88590},{\"end\":88606,\"start\":88600},{\"end\":88614,\"start\":88610},{\"end\":89038,\"start\":89026},{\"end\":89048,\"start\":89042},{\"end\":89058,\"start\":89052},{\"end\":89071,\"start\":89062},{\"end\":89085,\"start\":89075},{\"end\":89332,\"start\":89330},{\"end\":89342,\"start\":89339},{\"end\":89352,\"start\":89346},{\"end\":89360,\"start\":89356},{\"end\":89367,\"start\":89364},{\"end\":89375,\"start\":89371},{\"end\":89385,\"start\":89379},{\"end\":89395,\"start\":89389},{\"end\":89409,\"start\":89399},{\"end\":89582,\"start\":89577},{\"end\":89845,\"start\":89842},{\"end\":89854,\"start\":89849},{\"end\":89868,\"start\":89858},{\"end\":89879,\"start\":89872}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":52993221},\"end\":70127,\"start\":69742},{\"attributes\":{\"id\":\"b1\"},\"end\":70250,\"start\":70129},{\"attributes\":{\"id\":\"b2\"},\"end\":70475,\"start\":70252},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":12788258},\"end\":70722,\"start\":70477},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":16201183},\"end\":70961,\"start\":70724},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":2321381},\"end\":71223,\"start\":70963},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":16966632},\"end\":71519,\"start\":71225},{\"attributes\":{\"id\":\"b7\"},\"end\":71572,\"start\":71521},{\"attributes\":{\"id\":\"b8\"},\"end\":71728,\"start\":71574},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":8670286},\"end\":72128,\"start\":71730},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2528758},\"end\":72541,\"start\":72130},{\"attributes\":{\"id\":\"b11\"},\"end\":72609,\"start\":72543},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":13561174},\"end\":72926,\"start\":72611},{\"attributes\":{\"id\":\"b13\"},\"end\":73090,\"start\":72928},{\"attributes\":{\"id\":\"b14\"},\"end\":73182,\"start\":73092},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":4911368},\"end\":73401,\"start\":73184},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":12123085},\"end\":73612,\"start\":73403},{\"attributes\":{\"id\":\"b17\"},\"end\":73823,\"start\":73614},{\"attributes\":{\"id\":\"b18\"},\"end\":73942,\"start\":73825},{\"attributes\":{\"id\":\"b19\"},\"end\":74192,\"start\":73944},{\"attributes\":{\"id\":\"b20\"},\"end\":74512,\"start\":74194},{\"attributes\":{\"id\":\"b21\"},\"end\":74756,\"start\":74514},{\"attributes\":{\"id\":\"b22\"},\"end\":74977,\"start\":74758},{\"attributes\":{\"id\":\"b23\"},\"end\":75108,\"start\":74979},{\"attributes\":{\"id\":\"b24\"},\"end\":75298,\"start\":75110},{\"attributes\":{\"id\":\"b25\"},\"end\":75528,\"start\":75300},{\"attributes\":{\"id\":\"b26\"},\"end\":75668,\"start\":75530},{\"attributes\":{\"id\":\"b27\"},\"end\":75862,\"start\":75670},{\"attributes\":{\"id\":\"b28\"},\"end\":75972,\"start\":75864},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":14883925},\"end\":76297,\"start\":75974},{\"attributes\":{\"id\":\"b30\"},\"end\":76459,\"start\":76299},{\"attributes\":{\"id\":\"b31\"},\"end\":76545,\"start\":76461},{\"attributes\":{\"id\":\"b32\"},\"end\":76647,\"start\":76547},{\"attributes\":{\"id\":\"b33\"},\"end\":76779,\"start\":76649},{\"attributes\":{\"id\":\"b34\"},\"end\":76924,\"start\":76781},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":17744842},\"end\":77351,\"start\":76926},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":17616698},\"end\":77894,\"start\":77353},{\"attributes\":{\"id\":\"b37\"},\"end\":78094,\"start\":77896},{\"attributes\":{\"id\":\"b38\"},\"end\":78286,\"start\":78096},{\"attributes\":{\"id\":\"b39\"},\"end\":78423,\"start\":78288},{\"attributes\":{\"id\":\"b40\"},\"end\":78626,\"start\":78425},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":110304482},\"end\":78829,\"start\":78628},{\"attributes\":{\"id\":\"b42\"},\"end\":78942,\"start\":78831},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":110577431},\"end\":79168,\"start\":78944},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":53386487},\"end\":79546,\"start\":79170},{\"attributes\":{\"id\":\"b45\"},\"end\":79761,\"start\":79548},{\"attributes\":{\"id\":\"b46\"},\"end\":79949,\"start\":79763},{\"attributes\":{\"id\":\"b47\"},\"end\":80187,\"start\":79951},{\"attributes\":{\"id\":\"b48\"},\"end\":80423,\"start\":80189},{\"attributes\":{\"id\":\"b49\"},\"end\":80637,\"start\":80425},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":10437251},\"end\":80838,\"start\":80639},{\"attributes\":{\"doi\":\"11-09/0334r8\",\"id\":\"b51\"},\"end\":81171,\"start\":80840},{\"attributes\":{\"id\":\"b52\"},\"end\":81482,\"start\":81173},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":15740096},\"end\":81941,\"start\":81484},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":2270406},\"end\":82268,\"start\":81943},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":819637},\"end\":82831,\"start\":82270},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":13891098},\"end\":83164,\"start\":82833},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":19000916},\"end\":83564,\"start\":83166},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":6733384},\"end\":83987,\"start\":83566},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":859143},\"end\":84240,\"start\":83989},{\"attributes\":{\"id\":\"b60\"},\"end\":84396,\"start\":84242},{\"attributes\":{\"id\":\"b61\"},\"end\":84589,\"start\":84398},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":2187722},\"end\":84895,\"start\":84591},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":22933173},\"end\":85423,\"start\":84897},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":17744842},\"end\":85825,\"start\":85425},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":13004351},\"end\":86357,\"start\":85827},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":31251598},\"end\":86620,\"start\":86359},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":14254482},\"end\":86967,\"start\":86622},{\"attributes\":{\"id\":\"b68\"},\"end\":87210,\"start\":86969},{\"attributes\":{\"id\":\"b69\"},\"end\":87369,\"start\":87212},{\"attributes\":{\"id\":\"b70\",\"matched_paper_id\":8650335},\"end\":87737,\"start\":87371},{\"attributes\":{\"id\":\"b71\",\"matched_paper_id\":146918},\"end\":88066,\"start\":87739},{\"attributes\":{\"id\":\"b72\",\"matched_paper_id\":23156589},\"end\":88427,\"start\":88068},{\"attributes\":{\"id\":\"b73\",\"matched_paper_id\":603463},\"end\":88944,\"start\":88429},{\"attributes\":{\"id\":\"b74\",\"matched_paper_id\":8999555},\"end\":89269,\"start\":88946},{\"attributes\":{\"id\":\"b75\"},\"end\":89571,\"start\":89271},{\"attributes\":{\"id\":\"b76\"},\"end\":89784,\"start\":89573},{\"attributes\":{\"id\":\"b77\",\"matched_paper_id\":15470075},\"end\":90138,\"start\":89786}]", "bib_title": "[{\"end\":69810,\"start\":69742},{\"end\":70545,\"start\":70477},{\"end\":70769,\"start\":70724},{\"end\":71016,\"start\":70963},{\"end\":71292,\"start\":71225},{\"end\":71810,\"start\":71730},{\"end\":72211,\"start\":72130},{\"end\":72550,\"start\":72543},{\"end\":72680,\"start\":72611},{\"end\":73233,\"start\":73184},{\"end\":73442,\"start\":73403},{\"end\":74559,\"start\":74514},{\"end\":76065,\"start\":75974},{\"end\":77011,\"start\":76926},{\"end\":77436,\"start\":77353},{\"end\":78671,\"start\":78628},{\"end\":78973,\"start\":78944},{\"end\":79247,\"start\":79170},{\"end\":80678,\"start\":80639},{\"end\":80878,\"start\":80840},{\"end\":81209,\"start\":81173},{\"end\":81589,\"start\":81484},{\"end\":82014,\"start\":81943},{\"end\":82333,\"start\":82270},{\"end\":82909,\"start\":82833},{\"end\":83276,\"start\":83166},{\"end\":83631,\"start\":83566},{\"end\":84066,\"start\":83989},{\"end\":84657,\"start\":84591},{\"end\":84978,\"start\":84897},{\"end\":85510,\"start\":85425},{\"end\":85922,\"start\":85827},{\"end\":86416,\"start\":86359},{\"end\":86697,\"start\":86622},{\"end\":87451,\"start\":87371},{\"end\":87818,\"start\":87739},{\"end\":88148,\"start\":88068},{\"end\":88513,\"start\":88429},{\"end\":89022,\"start\":88946},{\"end\":89838,\"start\":89786}]", "bib_author": "[{\"end\":69825,\"start\":69812},{\"end\":69832,\"start\":69825},{\"end\":69842,\"start\":69832},{\"end\":69850,\"start\":69842},{\"end\":69858,\"start\":69850},{\"end\":69866,\"start\":69858},{\"end\":69874,\"start\":69866},{\"end\":69884,\"start\":69874},{\"end\":69894,\"start\":69884},{\"end\":69907,\"start\":69894},{\"end\":70163,\"start\":70153},{\"end\":70293,\"start\":70286},{\"end\":70554,\"start\":70547},{\"end\":70563,\"start\":70554},{\"end\":70778,\"start\":70771},{\"end\":70785,\"start\":70778},{\"end\":70795,\"start\":70785},{\"end\":70804,\"start\":70795},{\"end\":71024,\"start\":71018},{\"end\":71033,\"start\":71024},{\"end\":71046,\"start\":71033},{\"end\":71055,\"start\":71046},{\"end\":71303,\"start\":71294},{\"end\":71315,\"start\":71303},{\"end\":71325,\"start\":71315},{\"end\":71334,\"start\":71325},{\"end\":71543,\"start\":71535},{\"end\":71590,\"start\":71574},{\"end\":71596,\"start\":71590},{\"end\":71823,\"start\":71812},{\"end\":71831,\"start\":71823},{\"end\":71841,\"start\":71831},{\"end\":71851,\"start\":71841},{\"end\":71864,\"start\":71851},{\"end\":71878,\"start\":71864},{\"end\":72220,\"start\":72213},{\"end\":72229,\"start\":72220},{\"end\":72237,\"start\":72229},{\"end\":72244,\"start\":72237},{\"end\":72250,\"start\":72244},{\"end\":72258,\"start\":72250},{\"end\":72267,\"start\":72258},{\"end\":72273,\"start\":72267},{\"end\":72281,\"start\":72273},{\"end\":72294,\"start\":72281},{\"end\":72694,\"start\":72682},{\"end\":72700,\"start\":72694},{\"end\":72709,\"start\":72700},{\"end\":72722,\"start\":72709},{\"end\":72979,\"start\":72970},{\"end\":73102,\"start\":73094},{\"end\":73244,\"start\":73235},{\"end\":73256,\"start\":73244},{\"end\":73453,\"start\":73444},{\"end\":73461,\"start\":73453},{\"end\":73470,\"start\":73461},{\"end\":73671,\"start\":73662},{\"end\":73685,\"start\":73671},{\"end\":73993,\"start\":73977},{\"end\":74832,\"start\":74821},{\"end\":74993,\"start\":74979},{\"end\":75126,\"start\":75110},{\"end\":75361,\"start\":75337},{\"end\":75366,\"start\":75361},{\"end\":75680,\"start\":75670},{\"end\":75694,\"start\":75680},{\"end\":75704,\"start\":75694},{\"end\":75906,\"start\":75890},{\"end\":76077,\"start\":76067},{\"end\":76089,\"start\":76077},{\"end\":76098,\"start\":76089},{\"end\":76367,\"start\":76359},{\"end\":76488,\"start\":76479},{\"end\":76557,\"start\":76547},{\"end\":76702,\"start\":76694},{\"end\":76814,\"start\":76796},{\"end\":77020,\"start\":77013},{\"end\":77028,\"start\":77020},{\"end\":77036,\"start\":77028},{\"end\":77045,\"start\":77036},{\"end\":77055,\"start\":77045},{\"end\":77067,\"start\":77055},{\"end\":77455,\"start\":77438},{\"end\":77467,\"start\":77455},{\"end\":77480,\"start\":77467},{\"end\":77487,\"start\":77480},{\"end\":77494,\"start\":77487},{\"end\":77503,\"start\":77494},{\"end\":77516,\"start\":77503},{\"end\":77526,\"start\":77516},{\"end\":77536,\"start\":77526},{\"end\":77548,\"start\":77536},{\"end\":77560,\"start\":77548},{\"end\":77569,\"start\":77560},{\"end\":77912,\"start\":77896},{\"end\":78154,\"start\":78130},{\"end\":78324,\"start\":78316},{\"end\":78517,\"start\":78503},{\"end\":78682,\"start\":78673},{\"end\":78865,\"start\":78854},{\"end\":78990,\"start\":78975},{\"end\":79263,\"start\":79249},{\"end\":79273,\"start\":79263},{\"end\":79283,\"start\":79273},{\"end\":79296,\"start\":79283},{\"end\":79607,\"start\":79584},{\"end\":79806,\"start\":79786},{\"end\":79962,\"start\":79951},{\"end\":80453,\"start\":80425},{\"end\":80690,\"start\":80680},{\"end\":80701,\"start\":80690},{\"end\":80891,\"start\":80880},{\"end\":80900,\"start\":80891},{\"end\":80911,\"start\":80900},{\"end\":80921,\"start\":80911},{\"end\":80936,\"start\":80921},{\"end\":80947,\"start\":80936},{\"end\":80962,\"start\":80947},{\"end\":80974,\"start\":80962},{\"end\":81600,\"start\":81591},{\"end\":81612,\"start\":81600},{\"end\":81622,\"start\":81612},{\"end\":81631,\"start\":81622},{\"end\":81643,\"start\":81631},{\"end\":82023,\"start\":82016},{\"end\":82040,\"start\":82023},{\"end\":82049,\"start\":82040},{\"end\":82063,\"start\":82049},{\"end\":82343,\"start\":82335},{\"end\":82356,\"start\":82343},{\"end\":82368,\"start\":82356},{\"end\":82377,\"start\":82368},{\"end\":82386,\"start\":82377},{\"end\":82402,\"start\":82386},{\"end\":82922,\"start\":82911},{\"end\":82934,\"start\":82922},{\"end\":82948,\"start\":82934},{\"end\":82958,\"start\":82948},{\"end\":83289,\"start\":83278},{\"end\":83299,\"start\":83289},{\"end\":83309,\"start\":83299},{\"end\":83317,\"start\":83309},{\"end\":83327,\"start\":83317},{\"end\":83643,\"start\":83633},{\"end\":83652,\"start\":83643},{\"end\":83663,\"start\":83652},{\"end\":83674,\"start\":83663},{\"end\":84082,\"start\":84068},{\"end\":84091,\"start\":84082},{\"end\":84668,\"start\":84659},{\"end\":84680,\"start\":84668},{\"end\":84690,\"start\":84680},{\"end\":84703,\"start\":84690},{\"end\":84714,\"start\":84703},{\"end\":84989,\"start\":84980},{\"end\":84998,\"start\":84989},{\"end\":85005,\"start\":84998},{\"end\":85015,\"start\":85005},{\"end\":85025,\"start\":85015},{\"end\":85033,\"start\":85025},{\"end\":85039,\"start\":85033},{\"end\":85050,\"start\":85039},{\"end\":85060,\"start\":85050},{\"end\":85068,\"start\":85060},{\"end\":85079,\"start\":85068},{\"end\":85087,\"start\":85079},{\"end\":85519,\"start\":85512},{\"end\":85525,\"start\":85519},{\"end\":85533,\"start\":85525},{\"end\":85540,\"start\":85533},{\"end\":85548,\"start\":85540},{\"end\":85556,\"start\":85548},{\"end\":85941,\"start\":85924},{\"end\":85953,\"start\":85941},{\"end\":85963,\"start\":85953},{\"end\":85976,\"start\":85963},{\"end\":85987,\"start\":85976},{\"end\":85999,\"start\":85987},{\"end\":86010,\"start\":85999},{\"end\":86017,\"start\":86010},{\"end\":86024,\"start\":86017},{\"end\":86033,\"start\":86024},{\"end\":86429,\"start\":86418},{\"end\":86706,\"start\":86699},{\"end\":86717,\"start\":86706},{\"end\":87086,\"start\":87058},{\"end\":87287,\"start\":87267},{\"end\":87462,\"start\":87453},{\"end\":87479,\"start\":87462},{\"end\":87495,\"start\":87479},{\"end\":87508,\"start\":87495},{\"end\":87515,\"start\":87508},{\"end\":87829,\"start\":87820},{\"end\":87844,\"start\":87829},{\"end\":88156,\"start\":88150},{\"end\":88164,\"start\":88156},{\"end\":88171,\"start\":88164},{\"end\":88178,\"start\":88171},{\"end\":88184,\"start\":88178},{\"end\":88523,\"start\":88515},{\"end\":88530,\"start\":88523},{\"end\":88541,\"start\":88530},{\"end\":88551,\"start\":88541},{\"end\":88561,\"start\":88551},{\"end\":88571,\"start\":88561},{\"end\":88578,\"start\":88571},{\"end\":88588,\"start\":88578},{\"end\":88598,\"start\":88588},{\"end\":88608,\"start\":88598},{\"end\":88616,\"start\":88608},{\"end\":89040,\"start\":89024},{\"end\":89050,\"start\":89040},{\"end\":89060,\"start\":89050},{\"end\":89073,\"start\":89060},{\"end\":89087,\"start\":89073},{\"end\":89334,\"start\":89328},{\"end\":89344,\"start\":89334},{\"end\":89354,\"start\":89344},{\"end\":89362,\"start\":89354},{\"end\":89369,\"start\":89362},{\"end\":89377,\"start\":89369},{\"end\":89387,\"start\":89377},{\"end\":89397,\"start\":89387},{\"end\":89411,\"start\":89397},{\"end\":89584,\"start\":89573},{\"end\":89847,\"start\":89840},{\"end\":89856,\"start\":89847},{\"end\":89870,\"start\":89856},{\"end\":89881,\"start\":89870}]", "bib_venue": "[{\"end\":70599,\"start\":70585},{\"end\":70840,\"start\":70826},{\"end\":71091,\"start\":71077},{\"end\":71370,\"start\":71356},{\"end\":72330,\"start\":72316},{\"end\":73292,\"start\":73278},{\"end\":73506,\"start\":73492},{\"end\":76134,\"start\":76120},{\"end\":80737,\"start\":80723},{\"end\":82105,\"start\":82088},{\"end\":82584,\"start\":82497},{\"end\":82996,\"start\":82981},{\"end\":83361,\"start\":83348},{\"end\":83796,\"start\":83739},{\"end\":87551,\"start\":87537},{\"end\":69918,\"start\":69907},{\"end\":70151,\"start\":70129},{\"end\":70284,\"start\":70252},{\"end\":70583,\"start\":70563},{\"end\":70824,\"start\":70804},{\"end\":71075,\"start\":71055},{\"end\":71354,\"start\":71334},{\"end\":71533,\"start\":71521},{\"end\":71638,\"start\":71596},{\"end\":71912,\"start\":71878},{\"end\":72314,\"start\":72294},{\"end\":72556,\"start\":72552},{\"end\":72749,\"start\":72722},{\"end\":72968,\"start\":72928},{\"end\":73121,\"start\":73102},{\"end\":73276,\"start\":73256},{\"end\":73490,\"start\":73470},{\"end\":73660,\"start\":73614},{\"end\":73865,\"start\":73825},{\"end\":73975,\"start\":73944},{\"end\":74286,\"start\":74194},{\"end\":74572,\"start\":74561},{\"end\":74819,\"start\":74758},{\"end\":75015,\"start\":74993},{\"end\":75190,\"start\":75126},{\"end\":75335,\"start\":75300},{\"end\":75560,\"start\":75530},{\"end\":75752,\"start\":75704},{\"end\":75888,\"start\":75864},{\"end\":76118,\"start\":76098},{\"end\":76357,\"start\":76299},{\"end\":76477,\"start\":76461},{\"end\":76579,\"start\":76557},{\"end\":76692,\"start\":76649},{\"end\":76794,\"start\":76781},{\"end\":77124,\"start\":77067},{\"end\":77597,\"start\":77569},{\"end\":77940,\"start\":77912},{\"end\":78128,\"start\":78096},{\"end\":78314,\"start\":78288},{\"end\":78501,\"start\":78425},{\"end\":78721,\"start\":78682},{\"end\":78852,\"start\":78831},{\"end\":79041,\"start\":78990},{\"end\":79341,\"start\":79296},{\"end\":79582,\"start\":79548},{\"end\":79784,\"start\":79763},{\"end\":80024,\"start\":79962},{\"end\":80235,\"start\":80189},{\"end\":80509,\"start\":80453},{\"end\":80721,\"start\":80701},{\"end\":80990,\"start\":80986},{\"end\":81238,\"start\":81211},{\"end\":81700,\"start\":81643},{\"end\":82086,\"start\":82063},{\"end\":82495,\"start\":82402},{\"end\":82979,\"start\":82958},{\"end\":83346,\"start\":83327},{\"end\":83737,\"start\":83674},{\"end\":84102,\"start\":84091},{\"end\":84267,\"start\":84242},{\"end\":84461,\"start\":84398},{\"end\":84723,\"start\":84714},{\"end\":85145,\"start\":85087},{\"end\":85613,\"start\":85556},{\"end\":86069,\"start\":86033},{\"end\":86474,\"start\":86429},{\"end\":86777,\"start\":86717},{\"end\":87056,\"start\":86969},{\"end\":87265,\"start\":87212},{\"end\":87535,\"start\":87515},{\"end\":87885,\"start\":87844},{\"end\":88228,\"start\":88184},{\"end\":88664,\"start\":88616},{\"end\":89096,\"start\":89087},{\"end\":89326,\"start\":89271},{\"end\":89672,\"start\":89584},{\"end\":89951,\"start\":89881}]"}}}, "year": 2023, "month": 12, "day": 17}