{"id": 256417263, "updated": "2023-02-28 15:13:30.502", "metadata": {"title": "ASSURER: A PPA-friendly Security Closure Framework for Physical Design", "authors": "[{\"first\":\"Guangxin\",\"last\":\"Guo\",\"middle\":[]},{\"first\":\"Hailong\",\"last\":\"You\",\"middle\":[]},{\"first\":\"Zhengguang\",\"last\":\"Tang\",\"middle\":[]},{\"first\":\"Benzheng\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Cong\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Xiaojue\",\"last\":\"Zhang\",\"middle\":[]}]", "venue": "2023 28th Asia and South Pacific Design Automation Conference (ASP-DAC)", "journal": "2023 28th Asia and South Pacific Design Automation Conference (ASP-DAC)", "publication_date": {"year": 2023, "month": 1, "day": 16}, "abstract": "Hardware security is emerging in the very large scale integration (VLSI). The seminal threats, like hardware Trojan insertion, probing attacks, and fault injection, are hard to detect and almost impossi-ble to fix at post-design stage. The optimal solution is to prevent them at the physical design stage. Usually, defending against them may cause a lot of power, performance, and area (PPA) loss. In this paper, we propose a PPA-friendly physical layout security closure framework ASSURER. Reward-directed placement refinement and multi-threshold partition algorithm are proposed to assure Trojan threats are empty. Cleaning up probing attacks is established on a patch-based ECO routing flow. Evaluated on the ISPD'22 bench-marks, ASSURER can clean out the Trojan threat with no leakage power increase when shrinking the physical layout area. When not shrinking, ASSURER only increases 14% total power. Compared with the work of first place in the ISPD2022 Contest, ASSURE reduced 53% additional total power consumption, and probing vulnerability can be reduced by 97.6% under the premise of timing closure. We believe this work shall open up a new perspective for preventing Trojan insertion and probing attacks.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/aspdac/GuoYTLLZ23", "doi": "10.1145/3566097.3567923"}}, "content": {"source": {"pdf_hash": "9536b1bd95e6fa9b56d2e6b8e13ddb815a007b71", "pdf_src": "IEEE", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "https://dl.acm.org/doi/pdf/10.1145/3566097.3567923", "status": "BRONZE"}}, "grobid": {"id": "f2875a3bad01132dd05fc69ce26ac8d62f6ed2b2", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/9536b1bd95e6fa9b56d2e6b8e13ddb815a007b71.txt", "contents": "\nASSURER: A PPA-friendly Security Closure Framework for Physical Design\nJanuary 16-19, 2023. January 16-19, 2023\n\nGuangxin Guo gxguo@stu.xidian.edu.cn \nHailong You hlyou@mail.xidian.edu.cn \nZhengguang Tang zgtang@stu.xidian.edu.cn \nBenzheng Li bzli@stu.xidian.edu.cn \nCong Li licong@xidian.edu.cn \nXiaojue Zhang \nGuangxin Guo \nHailong You \nZhengguang Tang \nBenzheng Li \nCong Li \nXi-Aojue Zhang \n\nXidian University Xi'an\nShaanxiChina\n\n\nXidian University Xi'an\nShaanxiChina\n\n\nXidian University Xi'an\nShaanxiChina\n\n\nXidian University Xi'an\nShaanxiChina\n\n\nXidian University Xi'an\nShaanxiChina\n\n\nGIGA Design Automation Shenzhen\nGuangdongChina\n\nASSURER: A PPA-friendly Security Closure Framework for Physical Design\n\n28th Asia and South Pacific Design Automation Con-ference (ASPDAC '23)\nTokyo, Japan2023January 16-19, 2023. January 16-19, 202310.1145/3566097.3567923ACM Reference Format:, Japan. ACM, New York, NY, USA, 6 pages. https://doi.org/10.1145/3566097.3567923 * Corresponding author. ACM ISBN 978-1-4503-9783-4/23/01. . . $15.00Hardware security closurePPA-friendlyPhysical designHardware TrojansProbing attacksFault-Injection\nHardware security is emerging in the very large scale integration (VLSI). The seminal threats, like hardware Trojan insertion, probing attacks, and fault injection, are hard to detect and almost impossible to fix at post-design stage. The optimal solution is to prevent them at the physical design stage. Usually, defending against them may cause a lot of power, performance, and area (PPA) loss. In this paper, we propose a PPA-friendly physical layout security closure framework ASSURER. Reward-directed placement refinement and multi-threshold partition algorithm are proposed to assure Trojan threats are empty. Cleaning up probing attacks is established on a patch-based ECO routing flow. Evaluated on the ISPD'22 benchmarks, ASSURER can clean out the Trojan threat with no leakage power increase when shrinking the physical layout area. When not shrinking, ASSURER only increases 14% total power. Compared with the work of first place in the ISPD2022 Contest, ASSURE reduced 53% additional total power consumption, and probing vulnerability can be reduced by 97.6% under the premise of timing closure. We believe this work shall open up a new perspective for preventing Trojan insertion and probing attacks.CCS CONCEPTS\u2022 Security and privacy \u2192 Security in hardware; \u2022 Hardware \u2192 Physical design (EDA).\n\nINTRODUCTION\n\nVarious and serious hardware threats are emerging throughout the lifecycle of integrated circuits (ICs). Many seminal threats are executed post-design stage, which we can not ensure security once the physical design is done. For example, there is no way to ensure that the layout has not been inserted by hardware Trojan and other unknown threats after the manufacturing is completed [12]. Similarly, we can not prevent probing attacks that can access, monitor, and extract sensitive information at the running time of a chip [9]. However, electronic design automation (EDA) tools traditionally optimize PPA, and there is currently little to no experience related to designing secure ICs available within the EDA community [4].\n\nThis paper proposes a framework named ASSURER, as shown in Figure 1, to bridge the gap between traditional EDA tools for hardware security closure. ASSURER hardens the physical layout at design time to prevent threats are executed at post-design stage. As shown in Figure 1, it includes two parts, one is the Trojan closure framework which is introduced in Section 3, and another is the probing closure framework described in Section 4. ASSURER takes LEF, DEF, netlist, security assets, and constraints files as input, and a hardened layout is generated at the end. Our contributions are summarized as follows:\n\n(1) Reward-directed refinement and multi-threshold partition algorithm are proposed to prevent Trojan insertion. According to our knowledge, ASSURER is the first framework that could clean out potential hardware Trojan threats. (2) This paper proposes a probing attack prevention flow based on ECO routing, including selectively rerouting security nets, occupying free track above security assets, and an iterative refinement stage targeting high vulnerability nets. On the benchmark published by the ISPD2022 Contest, vulnerability can be reduced by 97.6% on average. (3) Compared with the first place in ISPD'22, our framework reduces 53% additional total power and 65% additional cell insertion at the condition of timing closure and without shrinking layout area.\n\n\nPRELIMINARIES\n\nThis section introduces the shortened problem definition of Trojan insertion and probing as well as fault injection at first. The previous works and their drawbacks are described later.\n\n\nProblem Formulation\n\nThe Trojan insertion and probing are relevant to security assets. Security assets are defined as security cells and nets relevant to sensitive data and information or other assets. And these cells and nets are identified from the post-layout netlists based on the documentation and HDL code of the designs [5].\n\n\nTrojan Insertion.\n\nThe key idea of Trojan insertion targeting physical design is to find or make some space to place and wire up their Trojans. To describe the vulnerability of physical layout could be inserted Trojans, [4] proposed the notion of exploitable region. The exploitable regions are 1) free or occupied by removable cells(e.g., filler or non-functional cells), 2) having more than the threshold number of continuous placement sites to place Trojans, and 3) meeting the timing of routing Trojans to the security assets. Without loss of generality, the threshold and timing constraint can be adjusted to targeting at the different types of Trojans. For example, the threshold is set to 20 for the A2 Trojan [12].\n\n\nProbing, Fault-Injection targeting at\n\nFrontside. The vulnerability of probing and fault-injection targeting at frontside is measured by the exposed area, which is the area of security cells and nets that can be accessed via direct line of sight through the metal stack. These two types of attack share the same principle, so in this article below, we denote them as Probing. The vulnerability of Probing score is defined as the exposed area of security assets. The detailed definition of score is in [4].\n\n\nPrevious Work\n\n\nTrojan Insertion.\n\nThere are two main ideas to prevent Trojan insertion. One is filling the exploitable regions in the layout. Ba et al. [1] introduced a method, whose purpose is to maximize density, by using functional cells instead of filled cells to insert into the layout. It uses a greedy algorithm to select which cell to insert according to width, number of inputs, and decoupling capacitance value as same as [11]. However, this method inserts too many cells, bringing routing constraints, and can't ensure closure of Trojan insertion threat. Another idea about Trojan prevention is pushing exploitable regions away from security assets. Knechtel et al. [5] proposed a tilebased placement and routing method, which selectively manages exploitable regions instead of increasing density globally [7], to ensure that exploitable regions and low-density regions are pushed closer to the areas of less sensitive assets without hurting wirelength and PPA too much. However, with the number of security cells increasing, this method cannot ensure Trojan threat closure. [5] also proposed an important idea of using buffering and gate sizing to reduce space for Trojan insertion. This inspires us to come up with the Trojan closure framework proposed in this paper. But almost none of them can ensure Trojan closure. \n\n\nProbing, Fault-Injection targeting at\n\nFrontside. The principle of preventing probing and fault injection attack is to obstruct the line of sight to the security assets through the metal stack. There are two types of solutions. The first type of solution is routing existing nets to block the line of sight. Moving sensitive routes to lower metal layers while increasing the width of no-sensitive nets routed above is proposed in [5]. This method is only a trend to reduce exposed area, and the result can not be ensured. The second solution is adding additional shielding. Trippel et al. [8] uses guard wires to protect security-critical wires. Wang et al. [10] against attack by the internal shielding, which adds shield nets connected to customed cells, the same idea with [5]. However, this method will consume too many cells and routing resources when the security nets and cells are sparse and dispersed to a large area. Also, with the FIB(focused ion beam) aspect ratio increase, the fully protected nets decrease rapidly. Based on these efforts and problems, we propose our solution in Section 3 and Section 4.\n\n\nTROJAN DEFENSE FRAMEWORK\n\nAs shown in Figure 1, the Trojan defense framework is composed of three steps. The first step is the row-level placement refinement described in Section 3.1. This step substantially reduces the exploitable regions by shifting the cells locally regarding performance. Then a partition-based Trojan removal algorithm targeted on residual Trojan closure is proposed in Section 3.2. By using buffers to cut exploitable regions according to the partition result, Trojan removal can ensure Trojan is empty. However, inserting buffers may disturb the timing of the current layout, so it is necessary to run the timing closure, described in Section 3.3, to optimize the timing. The timing closure operation may move away from a few cells cutting exploitable regions.\n\nThus, a few iterations between Trojan removal and timing closure are needed to ensure Trojan closure.\n\n\nRow-level Placement Refinement\n\nThis section proposed a placement refinement algorithm to move the cells to a preferable position to split the exploitable regions into small pieces that are less than the threshold. As Algorithm 1 shows, the movement of the cells is determined by a reward function R(p, s)\n\n\nAlgorithm 1 Row-Level Placement Refinement\n\nInput: The original layout; 1: for row = 2 . . .maxRow do 2: for j = 1 . . . RowCellNum(row) do 3: oldP \u2190 position(row, j) 4: bestP \u2190 oldP 5: bestReward \u2190 minInte\u0434er 6: for s = \u2212shi f tRan\u0434e . . . shi f tRan\u0434e do 7: p \u2190 oldP + s 8: reward \u2190 R(p, s) 9: if reward > bestReward then 10: bestP \u2190 p 11: bestReward \u2190 reward 12: PlacementCellTo(bestP) in the row by row manner. This reward function aims to cut the exploitable regions between two adjacent rows as many as possible. It takes the target position(p) and the relevant position to the origin(s) as input. The shift range (shi f tRan\u0434e) of s is limited to eight here, because too much movement distance will do harm to timing. The reward function is defined as follows:\nR(p, s) = \u2212\u03bb \u00d7 |s | + \u03b1 \u00d7 C lef t (p) + \u03b2 \u00d7 C r i\u0434ht (p) + \u03b3 \u00d7 C inter (p) \u03bb = 0.1, s < 0 0.2, s > 0 (1)\nwhere C lef t is the adjoin site number between the moving cell and the left boundary site of nodes in the below row. The node is defined as continuing unoccupied placement sites in the horizontal direction, as shown in Figure 2. The C r i\u0434ht and C inter are the adjoining site number of right boundary and internal sites, respectively. For example, when moving cell E in row 2, C inter = 2, as for cell F, C r i\u0434ht = 1, C inter = 1, as for cell D, C inter = 1, C lef t = 1. The experimental result has verified the effectiveness of the reward function. It can reduce about half of exploitable regions on average in practice. A demonstration is shown in Figure 3, and the exploitable regions in Figure 2 can be cleaned out using this algorithm. The reason why this function works is explained here. Moving a long distance from the original position is bad for timing, so a discount rate \u03bb is applied on abstract shifting distance |s |. Shifting to cover the left boundary is recommended because it gives residual unplaced cells in the right more chance to reduce adjoin sites number between nodes in different rows. The value chosen here is the relevant value and not layout dependent. In this principle, the value of \u03b1 is defined as 1.1, which is a little larger than \u03b2 as 0.9. As for the internal sites of nodes, covering them has more rewards than moving distance, C inter is set to 0.21 bigger than \u03bb. Moreover, considering the shifting distance and friendliness to our partition refinement algorithm proposed in Section 3.2, covering the boundary site will have more rewards. All hyperparameters are well-designed, but it is permitted to adjust them. It is a tradeoff between moving distance and the ability to reduce exploitable regions. Again, the dedicated algorithm effectively reduces the exploitable regions and does a little harm to performance because of the property of shifting locally.\n\n\nTrojan Removal\n\nMany methods were proposed to reduce the number of exploitable regions, but little to no can ensure Trojan closure in the following two cases. In the case of allowing changes to the layout area, it is easy to get a Trojan closure layout. The higher cell density, the less exploitable regions there are. However, in many cases in the reality  circuit design, it is unreasonable to change the area, which may introduce routing congestion, negative timing slack, and other issues. The algorithm proposed in this section can get a Trojan free layout regardless of changing the area or not. The basic idea is to execute partition in Section 3.2.1 and standard cell refinement alternatively in Section 3.2.2 until there is no place could be inserted by Trojans.\n\n\nPartition.\n\nThis part will introduce an innovative partition algorithm to cut the exploitable regions into small pieces less than the threshold. In order to make as little impact as possible on power and performance, a multi-threshold exploitable regions partition flow is proposed here to insert as few buffers as possible. This uses 76, 36, and 19 continue sites as the threshold. Using 76 in the first iteration, then 36 in the second, and 19 will be used in subsequent iterations. The detailed partition flow, including four steps, is described as follows.\n\n1) Build Graph. This step builds some connected graphs from the exploitable regions based on the current layout. The graph node is defined in Figure 2, which is the continuing unoccupied placement sites in a row. The weight of the node is the covered number of sites. There is an edge if there are adjoin sites between two nodes. The weight of an edge is the number of adjoining sites. A demo of the graph build is shown in Figure 4a. 2) Multi-level Clustering. Considering effectivity and time complexity, Here, we adopt a multi-level partitioning algorithm, as shown in Algorithm 2. Given the built graph, we merge the adjacency nodes according to the weight of edge, as shown at line 5, Algorithm 2. We use a multi-level cluster algorithm [6]. At every level, we cluster until the node number reduces to clusterRatio of the original number of nodes if possible, as shown at line 11, Algorithm 2. At the end of the phase, the nodes whose weight exceeds the Trojan threshold will be cut to ensure Trojan is empty. The time complex is O(m \u00d7 lo\u0434(m)), m is the net number. The cluster process demo is shown in Figure 4b.\n\n3) Cutting Sites Refinement. The cutting sites are the sites used to cut the graph edge(i.e., split exploitable regions). The are yellow rectangles shown in Figure 4c. Once the clustering phase is done, the edges of the graphs are optimal positions that need to be cut. Because the cutting sites occupy placement sites, there may produce redundancy, e.g., cutting sites \u03b1 in Figure 4c. The refinement stage applied on cutting sites is necessary. This stage leverage mounts of operations. They are 1) Delete, delete redundant cutting sites. 2) Move horizontally, which means moving the cutting sites in the\n\n\nAlgorithm 2 Multi-Level Clustering\n\nInput: Graph build from layout; clusterRatio, default to 0.9; Output: Graph with the node weight less than threshold 1: oldNodeNum \u2190 0 2: newNodeNum \u2190 number(Nodes) 3: while oldNodeNum newNodeNum do 4: oldNodeNum \u2190 newNodeNum 5: Sort Nets by weight in a decreasing manner 6: for cnets in Nets do 7: node 1 , node 2 \u2190 cnets.twoNodes 8: if W node 1 + W node 2 < threshold then 9: cluster(node 1 , node 2 ) 10:\n\nnewNodeNum \u2190 number(Nodes) 11: if newNodeNum < oldNodeNum \u00d7 clusterRatio then 12: break 13: Cut the nodes whose weight exceeds the threshold horizontal direction to balance the weight of adjacency nodes. \n\n\n4) Mapping Cutting Sites to Physical Buffers.\n\nMapping cutting sites to physical buffers should take many factors into consideration, including cell library, timing, power, routing difficulty, and others. The timing of an inserted buffer is complex and relevant to the specific position in the timing path. However, the timing of the original layout has been optimized, and the inserted buffers will disturb the timing and power. The negative influence increase as the buffer size increases. For the above consideration, this paper uses the combination of buffers with the least remainder of site number and then the least number of buffers.\n\n\nStandard cell refinement.\n\nThis section aims to clean up the small number of residual exploitable regions without inserting additional cells. Unlike cutting buffer refinement mentioned in the previous section, standard cell refinement targets cells across the physical layout. There are three strategies in this refinement stage, including 1) chain movement, 2) increasing cell drive strength, and 3)deleting redundancy inserted cells. These strategies running in turns can squeeze the exploitable regions and cut graph nodes. For example, as shown in Figure 4d, if we expand cell E one site to the right, the cutting sites \u03b2 can be removed.\n\n\nTiming Closure\n\nThe principle of our operations is to make as little negative impact on the layout as possible. However, because the original layout has been optimized, most operations may result in bad timing. It is necessary to perform the timing closure step. This step is composed of two parts.\n\nOne is connecting buffers to the net in the layout. When the location of an inserted buffer is done, which nets to connect has a significant impact on timing. Inserting a buffer into the timing path has the potential to improve or mess up the timing. The effect is mainly affected by the input capacitance of the inserted buffer, the  output drive strength, the number of fanouts, etc. This paper selects the net with the maximal timing slack within a specific square to connect. Our experimental results have shown the efficiency and effectiveness of the method. Another part is timing optimization based on the commercial tool Cadence Innovus [2] is performed here to release the timing budget caused by the security closure operations.\n\n\nPROBING DEFENSE FRAMEWORK\n\nIn this section, a probing defense framework will be introduced, which includes three steps: a) selectively reroute (SR), b) occupying free track (OFT), and c) high vulnerability refinement (HVR). The SR is to selectively reroute the security nets to the lower layer, which is the basis for obtaining a high coverage of security assets for subsequent operations. After SR is done, the OFT can highly reduce the exposed area by occupying the free routing track above the security assets, as data distribution shows from SR to OFT in Figure 5a. However, there are still some high exposed area percentages, as shown in Figure 5a OFT data distribution. So the HVR is targeting at high vulnerable nets to further reduce the exposed area.\n\n\nSelectively Reroute\n\nThis section selectively reroutes the nets to reduce the exposed area and achieve a routing result beneficial for subsequent operations to reduce the exposed area of security nets. There are two objectives of this reroute. One is routing the security nets in the lower metals. Another is setting routing blockage on the top metal layer that covers the rectangles of security cells, which is beneficial for the coverage of security cells. Note that it is hard to control a net to route on the specific routing track in commercial CAD tools, but it is possible to control the nets not to be routed in certain areas by setting routing blockage.\n\nThe following describes the detailed steps of selectively rerouting based on the commercial tool Cadence Innovus. a) delete the routes of security nets and export routing of residual nets. b) delete all routing. c) set routing constraints, i.e., the top routing layer of the security nets, and set routing blockage at the top layer at the specific rectangles. d) route the security nets considering the constraints. e) import the routing which is exported in the previous step and deal with the conflicts. This flow ensures that there are as few changes to the original routing as possible, thus without disturbing timing too much.\n\n\nOccupying Free Track\n\nThis section introduces an algorithm that can reduce the exposed area further by occupying the free track above the security nets. Derived from [5], increasing the width of the above non-security  Figure 6: Occupying free track above security assets. Rectangles in green represent the exposed area of security assets. Rectangles in yellow represent non-security nets.\n\nnets can reduce exposure/block the line of sight. As shown in Figure 6b, increasing the width of the net above can totally cover the exposed area. However, it is not friendly to design rule checking (DRC). Splitting large pieces of metal into route segments can meet DRC demand, as shown in Figure 6c. For the power consideration, we remove the redundancy route segments as shown in Figure 6d. Then a DRC-aware patch algorithm is performed to decrease the exposed area, as shown in Figure 6e. This simple idea can significantly reduce the exposed area after our improvement, as shown in Figure 5a. The detailed occupying free track algorithm is composed of the following steps. Firstly, we get the present routing result after selectively rerouting. We will perform the following step layer by layer. Considering that the overlapping of routing tracks on different metal layers can provide more coverage area, we patch the routing segment on tracks if the layer number is even and in the middle of two tracks if odd. Secondly, a depth-first-search (DFS) method is applied to find the free tracks above the security nets and cells. Once the routing segments have been patched, we will connect the patched segments to the non-security nets. Lastly, after parsing the DRC rules, A hole-patching algorithm is performed here to reduce the exposed area of security assets in consideration of DRC rules and residual exposed area. After about two or three layers are patched, the exposed area can be substantially reduced, as shown in Figure 5a, from SR to OFT.\n\n\nHigh Vulnerability Refinement\n\nThis section proposed an algorithm that iteratively rips up and routes a few numbers of highly vulnerable security nets. Unlike the selectively reroute algorithm described in Section 4.1, this step is directed by the result of the exposed area. More specifically, given a net with the maximally exposed percentage area, we will set routing blockage at the exposed area on the routing metal layer, then reroute the net under the constraint. The detailed process is given by algorithm 3. Targeting the high vulnerable nets can furtherly reduce the maximal and total exposed area, as shown in Figure 5b, from OFT to HVR.\n\n\nEXPERIMENTAL RESULTS\n\nWe evaluated our framework on several representative layout benchmarks released from the ISPD2022 Contest using Nangate 45nm Open Cell Library [3]. Those benchmarks have different timing constraints, target utilization, and library configurations (process corners, metal stacks) across the different designs to make for a varied range of benchmark layouts. The detailed benchmark information can be found in [4]. We implement our algorithm based on C++ and TCL scripts interact with Cadence Innovus for layout operation. The runtime is short and mainly dominated by the Innovus optimization stage. The result presented here is tested and scored by evaluation scripts released from the ISPD'22 contest. Without loss of generality, the Trojan type selected by the contest is the A2 Trojan [12] and the threshold is 20, which is one of the most strict condition [7]. All results listed below are under the premise of functional equivalent,\n\n\nAlgorithm 3 High Vulnerability Refinement\n\nInput: Routing after the occupying free track step; tar\u0434etScore(0.05); epoch (10); netNumPerEpoch (8); tryNumPer Net(10); 1: for e = 1 . . . epoch do 2: nets \u2190 TopKExposedPercent(netNumPerEpoch) 3: for k = 1 . . . netNumPerEpoch do 4: net \u2190 nets(k) 5: for t = 1 . . . tryNumPer Net do 6: score \u2190 ExposedAreaPercent(net) 7: if score < tar\u0434etScore then 8: Fix the parallel route segments above net 9: break 10: else 11: area \u2190 ExposedArea(net) 12: AddRouteBlockage(area) 13: DeleteRouteBlockage(all)  Table 1 shows the comparison with the first place in the ISPD'22 Contest in the case of without shrinking physical layout area. It also shows the result when shrinking area. There are four metrics listed here. 1) Core utilization (CU) is the utilization percentage of placement sites. 2) Area (AR) is the area of the layout, whose unit is um 2 . 3) Cell number (CN) is the cell number across the layout, indicating the number of inserted buffers and the timing closure effort. 4) Leakage power (LP) is the total leakage power, which indicates the increased power caused by inserted buffers and the drive strength changes of buffers, which unit is mW. We adopt leakage power in Trojan result because it can reflect the increase of power caused by inserted buffers. The total power is also relevant to other factors, e.g., placement and routing, which will be analyzed after the whole closure flow. Compared to the initial layout, the first place of ISPD'22 increases 22% CU, 21% CN, and 34% CP on average, but ours only increases 9% CU, 8% CN, and 14% LP at the constraint of without area shrink. Note that the core utilization of the major benchmarks is around 50%, which is very strict and needs more effort to clean out exploitable regions. With the CU increase, the consumed LP and CN are rapidly decreased, as CU in Table 1. The reduction compared to best in ISPD'22 is shown in Figure 7. ours reduces 65% consumed cell numbers and 60% leakage power consumption on average. The 100% reduction is because the exploitable regions are small. As for the case of allowing area shrinks, the increase of CN and LP can almost be ignored, but again, it is unreasonable to change the layout area in some conditions.  \n\n\nA E S_ 1 C am el lia C A ST M IS T Y op en M SP 43 0_ 1 PR E SE N T SE E D T D E\n\n\nTrojan Closure Result\n\n\nProbing Prevention Result\n\nWe can reduce the probing vulnerability score to zero using the largescale shielding method mentioned before. But for better practicality, we evaluate our framework on the benchmark of ISPD'22. ASSURER can reduce the vulnerability score by 97.6%, from 100% to 2.4%, on average. Furthermore, c total (cell total exposed area) and n total (net total exposed area) can be decreased to 0.16% and 1.28% on average, which means that the total exposed area is substantially reduced. max and av\u0434 in the table is the maximal and the average exposed percentage respectively defined in [4]. Note that the Probing metric is strict here because it is assumed that the aspect ratio of the radium laser of the probing attack is infinite.\n\n\nFramework Result\n\nThe output of ASSURER is a layout with Trojan free, timing closure, and very low probing vulnerability. As shown in Table 2, the best in ISPD'22 increases 30% of the total power compared to the initial layout. In comparison, ours only increases by 14% without layout shrinking, and tiny increases by 2% total power with shrinking.\n\n\nCONCLUSION\n\nThis paper proposes a security closure framework named ASSURER, which considers PPA at the entire flow. For security closure, we take a new perspective on hardware Trojan removal by casting it into a placement refinement and graph partition problem. We develop a Trojan closure framework that ensures Trojan free with only 14% additional total power cost in the constraint of without shrinking area, and no additional leakage power consumption with shrinking area. Compared with first place in ISPD2022 Contest, we reduced 60% additional leakage power consumption. For the Probing attack, we can reduce the vulnerability score by 97.6% on average in a more reasonable way.\n\nIn the future, we plan to use an analytical reward function for placement to further reduce the exploitable region more subtly. Although the problem definition and principle of our framework is suit for various Trojans, some extremely case of Trojans also need be evaluated. For accurate assessment, we will take the aspect ratio of the radium laser into consideration and reroute more efficiently to further reduce the probing vulnerability. We believe that the security closure of the physical layout can be well done underlying our proposed framework.\n\nFigure 1 :\n1Framework of ASSURER.\n\nFigure 2 : 3 Figure 3 :\n233Initial placement of an example layout. The node is defined as continuing unoccupied sites in a row. (a) After placing row 2 (b) After placing row An example of row-level placement refinement.\n\n\na) Build graph from layout. (b) Cluster node and cut edge.(c) Cutting sites without refinement. Rectangles in yellow are cutting sites, whose sites number do not less than three for cell library consideration.(d) Cutting sites with refinement.\n\nFigure 4 :\n4Example of Trojan removal.\n\n\n3) Move vertically. 4) Shrink, which means decreasing the site number in cutting sites, as \u03b3 shown from Figure 4c to Figure 4d. 5) Expand, which means increasing the site number in cutting sites. 6) Cut, which means breakdown cutting sites in the middle. It is good for timing because it disperses the timing budget to different timing paths. Those operations are executed in turns and organized by an iteration method. This iteration is practical and necessary. As demonstrated in Figure 4c and Figure 4d, This stage can reduce four sites, although there are only ten sites across all cutting sites.\n\n\nTop 10 Exposed percentage of security nets after each epoch in stepHigh vulnerability refinement.\n\nFigure 5 :\n5Exposed percentage.\n\nFigure 7 :\n7Reduced percentage compared to ISPD'22 first place timing closure and Trojan closure, i.e., there is no timing violation and no exploitable regions.\n\nTable 1 :\n1Experimental results of Trojan closure on ISPD2022 Contest benchmarks [4]The scripts and executable program are got from the first place in ISPD'22.Case name \nInitial \nBest in ISPD'22 * \nOurs \nOurs-Shrink \nCU \nAR \nCN \nLP \nCU \nAR \nCN \nLP \nCU \nAR \nCN \nLP \nCU \nAR \nCN \nLP \n\nAES_1 \n75 \n51113 16509 0.77 \n78 \n51113 17302 0.81 \n76 \n51113 16887 0.79 \n93 \n40814 16571 0.74 \nCamellia \n51 \n19698 \n6710 \n0.15 \n59 \n19698 \n8158 \n0.18 \n53 \n19698 \n6979 \n0.15 \n94 \n11072 \n6730 \n0.15 \nCAST \n51 \n30494 12682 0.26 \n72 \n30494 15903 0.41 \n57 \n30494 13784 0.30 \n92 \n17954 13105 0.26 \nMISTY \n52 \n24168 \n9517 \n0.20 \n70 \n24168 11479 0.31 \n64 \n24168 10931 0.27 \n92 \n14346 \n9850 \n0.20 \nopenMSP430_1 \n50 \n19395 \n4690 \n0.11 \n61 \n19395 \n6372 \n0.16 \n56 \n19395 \n5390 \n0.14 \n98 \n10377 \n4625 \n0.11 \nPRESENT \n51 \n4301 \n868 \n0.02 \n60 \n4301 \n1144 \n0.03 \n55 \n4301 \n994 \n0.02 \n99 \n2410 \n869 \n0.02 \nSEED \n51 \n30494 12682 0.26 \n72 \n30494 15777 0.41 \n57 \n30494 13294 0.30 \n92 \n17954 13093 0.27 \nTDEA \n81 \n5443 \n2269 \n0.05 \n81 \n5443 \n2279 \n0.05 \n81 \n5443 \n2269 \n0.05 \n95 \n4456 \n2263 \n0.05 \n\nRatio \n1.00 \n1.00 \n1.00 \n1.00 1.22 \n1.00 \n1.21 \n1.34 1.09 \n1.00 \n1.08 \n1.14 1.69 \n0.63 \n1.01 \n1.00 \n\n* \n\nTable 2 :\n2Total power(mW ) after Trojan closureDesign \nInitial ISPD'22 Ours Ours-shrink \nAES_1 \n66.67 \n68.81 \n68.61 \n64.48 \nCamellia \n1.69 \n2.15 \n1.89 \n1.73 \nCAST \n4.60 \n7.16 \n5.69 \n4.83 \nMISTY \n3.30 \n4.66 \n4.16 \n3.42 \nopenMSP430_1 \n0.38 \n0.50 \n0.44 \n0.42 \nPRESENT \n0.38 \n0.44 \n0.41 \n0.33 \nSEED \n4.60 \n7.20 \n5.39 \n4.85 \nTDEA \n1.48 \n1.53 \n1.48 \n1.49 \nRatio \n1.00 \n1.30 \n1.14 \n1.02 \n\n\nACKNOWLEDGMENTSThe authors would like to thank the ISPD'22 contest organizing committee and the patient answers from Johann Knechtel. Thanks to Ruihua Xue for providing beautiful illustrations.\nHardware Trust through Layout Filling: A Hardware Trojan Prevention Technique. Papa-Sidy, Sophie Ba, Manikandan Dupuis, Marie-Lise Palanichamy, Giorgio Di Flottes, Bruno Natale, Rouzeyre, 10.1109/ISVLSI.2016.22IEEE Computer Society Annual Symposium on VLSI. IEEEPapa-Sidy Ba, Sophie Dupuis, Manikandan Palanichamy, Marie-Lise Flottes, Gior- gio Di Natale, and Bruno Rouzeyre. 2016. Hardware Trust through Layout Fill- ing: A Hardware Trojan Prevention Technique. In 2016 IEEE Computer Society Annual Symposium on VLSI (ISVLSI). IEEE, Pittsburgh, PA, 254-259. https: //doi.org/10.1109/ISVLSI.2016.22\n\nCadence Inc. 2019. Innovus Implementation System. Cadence Inc. 2019. Innovus Implementation System. https://www.cadence.com.\n\nNanGate FreePDK45 Open Cell Library. Nangate Inc, 2325Nangate Inc. 2011. NanGate FreePDK45 Open Cell Library. http://www.nangate. com/?page_id=2325\n\nBenchmarking Security Closure of Physical Layouts: ISPD 2022 Contest. Johann Knechtel, Jayanth Gopinath, Mohammed Ashraf, Jitendra Bhandari, Ozgur Sinanoglu, Ramesh Karri, 10.1145/3505170.3511046Proceedings of the 2022 International Symposium on Physical Design. ACM, Virtual Event Canada. the 2022 International Symposium on Physical Design. ACM, Virtual Event CanadaJohann Knechtel, Jayanth Gopinath, Mohammed Ashraf, Jitendra Bhandari, Ozgur Sinanoglu, and Ramesh Karri. 2022. Benchmarking Security Closure of Physical Layouts: ISPD 2022 Contest. In Proceedings of the 2022 International Symposium on Physical Design. ACM, Virtual Event Canada, 221-228. https://doi.org/10. 1145/3505170.3511046\n\nSecurity Closure of Physical Layouts ICCAD Special Session Paper. Johann Knechtel, Jayanth Gopinath, Jitendra Bhandari, Mohammed Ashraf, Hussam Amrouch, Shekhar Borkar, Sung-Kyu Lim, Ozgur Sinanoglu, Ramesh Karri, 2021 IEEE/ACM International Conference On Computer Aided Design (ICCAD). Johann Knechtel, Jayanth Gopinath, Jitendra Bhandari, Mohammed Ashraf, Hus- sam Amrouch, Shekhar Borkar, Sung-Kyu Lim, Ozgur Sinanoglu, and Ramesh Karri. 2021. Security Closure of Physical Layouts ICCAD Special Session Paper. In 2021 IEEE/ACM International Conference On Computer Aided Design (ICCAD).\n\n. 10.1109/ICCAD51958.2021.9643543IEEE. IEEE, Munich, Germany, 1-9. https://doi.org/10.1109/ICCAD51958.2021.9643543\n\nXiyi He, and Hailong You. 2022. High quality hypergraph partitioning for logic emulation. Benzheng Li, Zhongdong Qi, Zhengguang Tang, 10.1016/j.vlsi.2021.11.005Integration. 83Benzheng Li, Zhongdong Qi, Zhengguang Tang, Xiyi He, and Hailong You. 2022. High quality hypergraph partitioning for logic emulation. Integration 83 (2022), 67-76. https://doi.org/10.1016/j.vlsi.2021.11.005\n\nICAS: an Extensible Framework for Estimating the Susceptibility of IC Layouts to Additive Trojans. Timothy Trippel, G Kang, Kevin B Shin, Matthew Bush, Hicks, 10.1109/SP40000.2020.000832020 IEEE Symposium on Security and Privacy (SP). San Francisco, CA, USAIEEETimothy Trippel, Kang G. Shin, Kevin B. Bush, and Matthew Hicks. 2020. ICAS: an Extensible Framework for Estimating the Susceptibility of IC Layouts to Ad- ditive Trojans. In 2020 IEEE Symposium on Security and Privacy (SP). IEEE, San Francisco, CA, USA, 1742-1759. https://doi.org/10.1109/SP40000.2020.00083\n\nTimothy Trippel, G Kang, Kevin B Shin, Matthew Bush, Hicks, arXiv:1906.08842arXiv: 1906.08842T-TER: Defeating A2 Trojans with Targeted Tamper-Evident Routing. Timothy Trippel, Kang G. Shin, Kevin B. Bush, and Matthew Hicks. 2020. T-TER: Defeating A2 Trojans with Targeted Tamper-Evident Routing. arXiv:1906.08842 [cs] (Oct. 2020). http://arxiv.org/abs/1906.08842 arXiv: 1906.08842.\n\nProbing Attacks on Integrated Circuits: Challenges and Research Opportunities. Huanyu Wang, Domenic Forte, Mark M Tehranipoor, Qihang Shi, 10.1109/MDAT.2017.2729398Conference Name: IEEE Design Test. 34Huanyu Wang, Domenic Forte, Mark M. Tehranipoor, and Qihang Shi. 2017. Prob- ing Attacks on Integrated Circuits: Challenges and Research Opportunities. IEEE Design Test 34, 5 (Oct. 2017), 63-71. https://doi.org/10.1109/MDAT.2017.2729398 Conference Name: IEEE Design Test.\n\nTehranipoor. 2020. A Physical Design Flow Against Front-Side Probing Attacks by Internal Shielding. Huanyu Wang, Qihang Shi, Adib Nahiyan, Domenic Forte, Mark M , 10.1109/TCAD.2019.2952133IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems. 39Huanyu Wang, Qihang Shi, Adib Nahiyan, Domenic Forte, and Mark M. Tehra- nipoor. 2020. A Physical Design Flow Against Front-Side Probing Attacks by Internal Shielding. IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems 39, 10 (Oct. 2020), 2152-2165. https://doi.org/10.1109/TCAD. 2019.2952133\n\nBISA: Built-in self-authentication for preventing hardware Trojan insertion. Kan Xiao, Mohammed Tehranipoor, 10.1109/HST.2013.65815642013 IEEE International Symposium on Hardware-Oriented Security and Trust (HOST). Austin, TX, USAIEEEKan Xiao and Mohammed Tehranipoor. 2013. BISA: Built-in self-authentication for preventing hardware Trojan insertion. In 2013 IEEE International Symposium on Hardware-Oriented Security and Trust (HOST). IEEE, Austin, TX, USA, 45-50. https://doi.org/10.1109/HST.2013.6581564\n\nA2: Analog Malicious Hardware. Kaiyuan Yang, Matthew Hicks, Qing Dong, Todd Austin, Dennis Sylvester, 10.1109/SP.2016.102016 IEEE Symposium on Security and Privacy (SP). San Jose, CAIEEEKaiyuan Yang, Matthew Hicks, Qing Dong, Todd Austin, and Dennis Sylvester. 2016. A2: Analog Malicious Hardware. In 2016 IEEE Symposium on Security and Privacy (SP). IEEE, San Jose, CA, 18-37. https://doi.org/10.1109/SP.2016.10\n", "annotations": {"author": "[{\"end\":151,\"start\":114},{\"end\":189,\"start\":152},{\"end\":231,\"start\":190},{\"end\":267,\"start\":232},{\"end\":297,\"start\":268},{\"end\":312,\"start\":298},{\"end\":326,\"start\":313},{\"end\":339,\"start\":327},{\"end\":356,\"start\":340},{\"end\":369,\"start\":357},{\"end\":378,\"start\":370},{\"end\":394,\"start\":379},{\"end\":433,\"start\":395},{\"end\":472,\"start\":434},{\"end\":511,\"start\":473},{\"end\":550,\"start\":512},{\"end\":589,\"start\":551},{\"end\":638,\"start\":590},{\"end\":151,\"start\":114},{\"end\":189,\"start\":152},{\"end\":231,\"start\":190},{\"end\":267,\"start\":232},{\"end\":297,\"start\":268},{\"end\":312,\"start\":298},{\"end\":326,\"start\":313},{\"end\":339,\"start\":327},{\"end\":356,\"start\":340},{\"end\":369,\"start\":357},{\"end\":378,\"start\":370},{\"end\":394,\"start\":379},{\"end\":433,\"start\":395},{\"end\":472,\"start\":434},{\"end\":511,\"start\":473},{\"end\":550,\"start\":512},{\"end\":589,\"start\":551},{\"end\":638,\"start\":590}]", "publisher": null, "author_last_name": "[{\"end\":126,\"start\":123},{\"end\":163,\"start\":160},{\"end\":205,\"start\":201},{\"end\":243,\"start\":241},{\"end\":275,\"start\":273},{\"end\":311,\"start\":306},{\"end\":325,\"start\":322},{\"end\":338,\"start\":335},{\"end\":355,\"start\":351},{\"end\":368,\"start\":366},{\"end\":377,\"start\":375},{\"end\":393,\"start\":388},{\"end\":126,\"start\":123},{\"end\":163,\"start\":160},{\"end\":205,\"start\":201},{\"end\":243,\"start\":241},{\"end\":275,\"start\":273},{\"end\":311,\"start\":306},{\"end\":325,\"start\":322},{\"end\":338,\"start\":335},{\"end\":355,\"start\":351},{\"end\":368,\"start\":366},{\"end\":377,\"start\":375},{\"end\":393,\"start\":388}]", "author_first_name": "[{\"end\":122,\"start\":114},{\"end\":159,\"start\":152},{\"end\":200,\"start\":190},{\"end\":240,\"start\":232},{\"end\":272,\"start\":268},{\"end\":305,\"start\":298},{\"end\":321,\"start\":313},{\"end\":334,\"start\":327},{\"end\":350,\"start\":340},{\"end\":365,\"start\":357},{\"end\":374,\"start\":370},{\"end\":387,\"start\":379},{\"end\":122,\"start\":114},{\"end\":159,\"start\":152},{\"end\":200,\"start\":190},{\"end\":240,\"start\":232},{\"end\":272,\"start\":268},{\"end\":305,\"start\":298},{\"end\":321,\"start\":313},{\"end\":334,\"start\":327},{\"end\":350,\"start\":340},{\"end\":365,\"start\":357},{\"end\":374,\"start\":370},{\"end\":387,\"start\":379}]", "author_affiliation": "[{\"end\":432,\"start\":396},{\"end\":471,\"start\":435},{\"end\":510,\"start\":474},{\"end\":549,\"start\":513},{\"end\":588,\"start\":552},{\"end\":637,\"start\":591},{\"end\":432,\"start\":396},{\"end\":471,\"start\":435},{\"end\":510,\"start\":474},{\"end\":549,\"start\":513},{\"end\":588,\"start\":552},{\"end\":637,\"start\":591}]", "title": "[{\"end\":71,\"start\":1},{\"end\":709,\"start\":639},{\"end\":71,\"start\":1},{\"end\":709,\"start\":639}]", "venue": "[{\"end\":781,\"start\":711},{\"end\":781,\"start\":711}]", "abstract": "[{\"end\":2438,\"start\":1131},{\"end\":2438,\"start\":1131}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b12\"},\"end\":2842,\"start\":2838},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2983,\"start\":2980},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3180,\"start\":3177},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":5098,\"start\":5095},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5325,\"start\":5322},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5823,\"start\":5819},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6331,\"start\":6328},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6491,\"start\":6488},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6772,\"start\":6768},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7016,\"start\":7013},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7156,\"start\":7153},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7425,\"start\":7422},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8104,\"start\":8101},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":8263,\"start\":8260},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8333,\"start\":8329},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8450,\"start\":8447},{\"end\":10094,\"start\":10092},{\"end\":10132,\"start\":10130},{\"end\":10159,\"start\":10157},{\"end\":10175,\"start\":10173},{\"end\":10202,\"start\":10200},{\"end\":10249,\"start\":10247},{\"end\":10265,\"start\":10263},{\"end\":10285,\"start\":10283},{\"end\":10317,\"start\":10314},{\"end\":10331,\"start\":10328},{\"end\":10355,\"start\":10352},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":14848,\"start\":14845},{\"end\":16034,\"start\":16032},{\"end\":16068,\"start\":16066},{\"end\":16095,\"start\":16093},{\"end\":16141,\"start\":16139},{\"end\":16165,\"start\":16163},{\"end\":16201,\"start\":16199},{\"end\":16244,\"start\":16242},{\"end\":16306,\"start\":16303},{\"end\":16357,\"start\":16354},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":18719,\"start\":18716},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":21041,\"start\":21038},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":23638,\"start\":23635},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":23903,\"start\":23900},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":24283,\"start\":24279},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":24354,\"start\":24351},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":24555,\"start\":24551},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":24575,\"start\":24572},{\"end\":24626,\"start\":24624},{\"end\":24671,\"start\":24669},{\"end\":24708,\"start\":24706},{\"end\":24725,\"start\":24723},{\"end\":24761,\"start\":24759},{\"end\":24796,\"start\":24794},{\"end\":24827,\"start\":24825},{\"end\":24872,\"start\":24870},{\"end\":24882,\"start\":24879},{\"end\":24891,\"start\":24888},{\"end\":24919,\"start\":24916},{\"end\":24946,\"start\":24943},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":27399,\"start\":27396},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":2842,\"start\":2838},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2983,\"start\":2980},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3180,\"start\":3177},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":5098,\"start\":5095},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5325,\"start\":5322},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5823,\"start\":5819},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6331,\"start\":6328},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6491,\"start\":6488},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6772,\"start\":6768},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7016,\"start\":7013},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7156,\"start\":7153},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7425,\"start\":7422},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8104,\"start\":8101},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":8263,\"start\":8260},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8333,\"start\":8329},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8450,\"start\":8447},{\"end\":10094,\"start\":10092},{\"end\":10132,\"start\":10130},{\"end\":10159,\"start\":10157},{\"end\":10175,\"start\":10173},{\"end\":10202,\"start\":10200},{\"end\":10249,\"start\":10247},{\"end\":10265,\"start\":10263},{\"end\":10285,\"start\":10283},{\"end\":10317,\"start\":10314},{\"end\":10331,\"start\":10328},{\"end\":10355,\"start\":10352},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":14848,\"start\":14845},{\"end\":16034,\"start\":16032},{\"end\":16068,\"start\":16066},{\"end\":16095,\"start\":16093},{\"end\":16141,\"start\":16139},{\"end\":16165,\"start\":16163},{\"end\":16201,\"start\":16199},{\"end\":16244,\"start\":16242},{\"end\":16306,\"start\":16303},{\"end\":16357,\"start\":16354},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":18719,\"start\":18716},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":21041,\"start\":21038},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":23638,\"start\":23635},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":23903,\"start\":23900},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":24283,\"start\":24279},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":24354,\"start\":24351},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":24555,\"start\":24551},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":24575,\"start\":24572},{\"end\":24626,\"start\":24624},{\"end\":24671,\"start\":24669},{\"end\":24708,\"start\":24706},{\"end\":24725,\"start\":24723},{\"end\":24761,\"start\":24759},{\"end\":24796,\"start\":24794},{\"end\":24827,\"start\":24825},{\"end\":24872,\"start\":24870},{\"end\":24882,\"start\":24879},{\"end\":24891,\"start\":24888},{\"end\":24919,\"start\":24916},{\"end\":24946,\"start\":24943},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":27399,\"start\":27396}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":29172,\"start\":29138},{\"attributes\":{\"id\":\"fig_1\"},\"end\":29393,\"start\":29173},{\"attributes\":{\"id\":\"fig_2\"},\"end\":29639,\"start\":29394},{\"attributes\":{\"id\":\"fig_3\"},\"end\":29679,\"start\":29640},{\"attributes\":{\"id\":\"fig_4\"},\"end\":30282,\"start\":29680},{\"attributes\":{\"id\":\"fig_5\"},\"end\":30382,\"start\":30283},{\"attributes\":{\"id\":\"fig_6\"},\"end\":30415,\"start\":30383},{\"attributes\":{\"id\":\"fig_8\"},\"end\":30577,\"start\":30416},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":31741,\"start\":30578},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":32126,\"start\":31742},{\"attributes\":{\"id\":\"fig_0\"},\"end\":29172,\"start\":29138},{\"attributes\":{\"id\":\"fig_1\"},\"end\":29393,\"start\":29173},{\"attributes\":{\"id\":\"fig_2\"},\"end\":29639,\"start\":29394},{\"attributes\":{\"id\":\"fig_3\"},\"end\":29679,\"start\":29640},{\"attributes\":{\"id\":\"fig_4\"},\"end\":30282,\"start\":29680},{\"attributes\":{\"id\":\"fig_5\"},\"end\":30382,\"start\":30283},{\"attributes\":{\"id\":\"fig_6\"},\"end\":30415,\"start\":30383},{\"attributes\":{\"id\":\"fig_8\"},\"end\":30577,\"start\":30416},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":31741,\"start\":30578},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":32126,\"start\":31742}]", "paragraph": "[{\"end\":3181,\"start\":2454},{\"end\":3793,\"start\":3183},{\"end\":4562,\"start\":3795},{\"end\":4765,\"start\":4580},{\"end\":5099,\"start\":4789},{\"end\":5824,\"start\":5121},{\"end\":6332,\"start\":5866},{\"end\":7668,\"start\":6370},{\"end\":8789,\"start\":7710},{\"end\":9576,\"start\":8818},{\"end\":9679,\"start\":9578},{\"end\":9987,\"start\":9714},{\"end\":10757,\"start\":10034},{\"end\":12764,\"start\":10863},{\"end\":13538,\"start\":12783},{\"end\":14101,\"start\":13553},{\"end\":15221,\"start\":14103},{\"end\":15828,\"start\":15223},{\"end\":16274,\"start\":15867},{\"end\":16480,\"start\":16276},{\"end\":17124,\"start\":16530},{\"end\":17768,\"start\":17154},{\"end\":18069,\"start\":17787},{\"end\":18809,\"start\":18071},{\"end\":19571,\"start\":18839},{\"end\":20236,\"start\":19595},{\"end\":20869,\"start\":20238},{\"end\":21261,\"start\":20894},{\"end\":22816,\"start\":21263},{\"end\":23467,\"start\":22850},{\"end\":24428,\"start\":23492},{\"end\":26684,\"start\":24474},{\"end\":27543,\"start\":26821},{\"end\":27894,\"start\":27564},{\"end\":28581,\"start\":27909},{\"end\":29137,\"start\":28583},{\"end\":3181,\"start\":2454},{\"end\":3793,\"start\":3183},{\"end\":4562,\"start\":3795},{\"end\":4765,\"start\":4580},{\"end\":5099,\"start\":4789},{\"end\":5824,\"start\":5121},{\"end\":6332,\"start\":5866},{\"end\":7668,\"start\":6370},{\"end\":8789,\"start\":7710},{\"end\":9576,\"start\":8818},{\"end\":9679,\"start\":9578},{\"end\":9987,\"start\":9714},{\"end\":10757,\"start\":10034},{\"end\":12764,\"start\":10863},{\"end\":13538,\"start\":12783},{\"end\":14101,\"start\":13553},{\"end\":15221,\"start\":14103},{\"end\":15828,\"start\":15223},{\"end\":16274,\"start\":15867},{\"end\":16480,\"start\":16276},{\"end\":17124,\"start\":16530},{\"end\":17768,\"start\":17154},{\"end\":18069,\"start\":17787},{\"end\":18809,\"start\":18071},{\"end\":19571,\"start\":18839},{\"end\":20236,\"start\":19595},{\"end\":20869,\"start\":20238},{\"end\":21261,\"start\":20894},{\"end\":22816,\"start\":21263},{\"end\":23467,\"start\":22850},{\"end\":24428,\"start\":23492},{\"end\":26684,\"start\":24474},{\"end\":27543,\"start\":26821},{\"end\":27894,\"start\":27564},{\"end\":28581,\"start\":27909},{\"end\":29137,\"start\":28583}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":10862,\"start\":10758},{\"attributes\":{\"id\":\"formula_0\"},\"end\":10862,\"start\":10758}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":24980,\"start\":24973},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":26300,\"start\":26293},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":27687,\"start\":27680},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":24980,\"start\":24973},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":26300,\"start\":26293},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":27687,\"start\":27680}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2452,\"start\":2440},{\"attributes\":{\"n\":\"2\"},\"end\":4578,\"start\":4565},{\"attributes\":{\"n\":\"2.1\"},\"end\":4787,\"start\":4768},{\"attributes\":{\"n\":\"2.1.1\"},\"end\":5119,\"start\":5102},{\"attributes\":{\"n\":\"2.1.2\"},\"end\":5864,\"start\":5827},{\"attributes\":{\"n\":\"2.2\"},\"end\":6348,\"start\":6335},{\"attributes\":{\"n\":\"2.2.1\"},\"end\":6368,\"start\":6351},{\"attributes\":{\"n\":\"2.2.2\"},\"end\":7708,\"start\":7671},{\"attributes\":{\"n\":\"3\"},\"end\":8816,\"start\":8792},{\"attributes\":{\"n\":\"3.1\"},\"end\":9712,\"start\":9682},{\"end\":10032,\"start\":9990},{\"attributes\":{\"n\":\"3.2\"},\"end\":12781,\"start\":12767},{\"attributes\":{\"n\":\"3.2.1\"},\"end\":13551,\"start\":13541},{\"end\":15865,\"start\":15831},{\"end\":16528,\"start\":16483},{\"attributes\":{\"n\":\"3.2.2\"},\"end\":17152,\"start\":17127},{\"attributes\":{\"n\":\"3.3\"},\"end\":17785,\"start\":17771},{\"attributes\":{\"n\":\"4\"},\"end\":18837,\"start\":18812},{\"attributes\":{\"n\":\"4.1\"},\"end\":19593,\"start\":19574},{\"attributes\":{\"n\":\"4.2\"},\"end\":20892,\"start\":20872},{\"attributes\":{\"n\":\"4.3\"},\"end\":22848,\"start\":22819},{\"attributes\":{\"n\":\"5\"},\"end\":23490,\"start\":23470},{\"end\":24472,\"start\":24431},{\"end\":26767,\"start\":26687},{\"attributes\":{\"n\":\"5.1\"},\"end\":26791,\"start\":26770},{\"attributes\":{\"n\":\"5.2\"},\"end\":26819,\"start\":26794},{\"attributes\":{\"n\":\"5.3\"},\"end\":27562,\"start\":27546},{\"attributes\":{\"n\":\"6\"},\"end\":27907,\"start\":27897},{\"end\":29149,\"start\":29139},{\"end\":29197,\"start\":29174},{\"end\":29651,\"start\":29641},{\"end\":30394,\"start\":30384},{\"end\":30427,\"start\":30417},{\"end\":30588,\"start\":30579},{\"end\":31752,\"start\":31743},{\"attributes\":{\"n\":\"1\"},\"end\":2452,\"start\":2440},{\"attributes\":{\"n\":\"2\"},\"end\":4578,\"start\":4565},{\"attributes\":{\"n\":\"2.1\"},\"end\":4787,\"start\":4768},{\"attributes\":{\"n\":\"2.1.1\"},\"end\":5119,\"start\":5102},{\"attributes\":{\"n\":\"2.1.2\"},\"end\":5864,\"start\":5827},{\"attributes\":{\"n\":\"2.2\"},\"end\":6348,\"start\":6335},{\"attributes\":{\"n\":\"2.2.1\"},\"end\":6368,\"start\":6351},{\"attributes\":{\"n\":\"2.2.2\"},\"end\":7708,\"start\":7671},{\"attributes\":{\"n\":\"3\"},\"end\":8816,\"start\":8792},{\"attributes\":{\"n\":\"3.1\"},\"end\":9712,\"start\":9682},{\"end\":10032,\"start\":9990},{\"attributes\":{\"n\":\"3.2\"},\"end\":12781,\"start\":12767},{\"attributes\":{\"n\":\"3.2.1\"},\"end\":13551,\"start\":13541},{\"end\":15865,\"start\":15831},{\"end\":16528,\"start\":16483},{\"attributes\":{\"n\":\"3.2.2\"},\"end\":17152,\"start\":17127},{\"attributes\":{\"n\":\"3.3\"},\"end\":17785,\"start\":17771},{\"attributes\":{\"n\":\"4\"},\"end\":18837,\"start\":18812},{\"attributes\":{\"n\":\"4.1\"},\"end\":19593,\"start\":19574},{\"attributes\":{\"n\":\"4.2\"},\"end\":20892,\"start\":20872},{\"attributes\":{\"n\":\"4.3\"},\"end\":22848,\"start\":22819},{\"attributes\":{\"n\":\"5\"},\"end\":23490,\"start\":23470},{\"end\":24472,\"start\":24431},{\"end\":26767,\"start\":26687},{\"attributes\":{\"n\":\"5.1\"},\"end\":26791,\"start\":26770},{\"attributes\":{\"n\":\"5.2\"},\"end\":26819,\"start\":26794},{\"attributes\":{\"n\":\"5.3\"},\"end\":27562,\"start\":27546},{\"attributes\":{\"n\":\"6\"},\"end\":27907,\"start\":27897},{\"end\":29149,\"start\":29139},{\"end\":29197,\"start\":29174},{\"end\":29651,\"start\":29641},{\"end\":30394,\"start\":30384},{\"end\":30427,\"start\":30417},{\"end\":30588,\"start\":30579},{\"end\":31752,\"start\":31743}]", "table": "[{\"end\":31741,\"start\":30738},{\"end\":32126,\"start\":31791},{\"end\":31741,\"start\":30738},{\"end\":32126,\"start\":31791}]", "figure_caption": "[{\"end\":29172,\"start\":29151},{\"end\":29393,\"start\":29201},{\"end\":29639,\"start\":29396},{\"end\":29679,\"start\":29653},{\"end\":30282,\"start\":29682},{\"end\":30382,\"start\":30285},{\"end\":30415,\"start\":30396},{\"end\":30577,\"start\":30429},{\"end\":30738,\"start\":30590},{\"end\":31791,\"start\":31754},{\"end\":29172,\"start\":29151},{\"end\":29393,\"start\":29201},{\"end\":29639,\"start\":29396},{\"end\":29679,\"start\":29653},{\"end\":30282,\"start\":29682},{\"end\":30382,\"start\":30285},{\"end\":30415,\"start\":30396},{\"end\":30577,\"start\":30429},{\"end\":30738,\"start\":30590},{\"end\":31791,\"start\":31754}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3250,\"start\":3242},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3456,\"start\":3448},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8838,\"start\":8830},{\"end\":11091,\"start\":11083},{\"end\":11525,\"start\":11517},{\"end\":11566,\"start\":11558},{\"end\":14253,\"start\":14245},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":14537,\"start\":14527},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15220,\"start\":15211},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15389,\"start\":15380},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15607,\"start\":15598},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":17688,\"start\":17679},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":19380,\"start\":19371},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":19464,\"start\":19455},{\"end\":21099,\"start\":21091},{\"end\":21334,\"start\":21325},{\"end\":21563,\"start\":21554},{\"end\":21655,\"start\":21646},{\"end\":21754,\"start\":21745},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":21859,\"start\":21850},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":22799,\"start\":22790},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":23449,\"start\":23440},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":26364,\"start\":26356},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3250,\"start\":3242},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3456,\"start\":3448},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8838,\"start\":8830},{\"end\":11091,\"start\":11083},{\"end\":11525,\"start\":11517},{\"end\":11566,\"start\":11558},{\"end\":14253,\"start\":14245},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":14537,\"start\":14527},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15220,\"start\":15211},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15389,\"start\":15380},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":15607,\"start\":15598},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":17688,\"start\":17679},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":19380,\"start\":19371},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":19464,\"start\":19455},{\"end\":21099,\"start\":21091},{\"end\":21334,\"start\":21325},{\"end\":21563,\"start\":21554},{\"end\":21655,\"start\":21646},{\"end\":21754,\"start\":21745},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":21859,\"start\":21850},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":22799,\"start\":22790},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":23449,\"start\":23440},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":26364,\"start\":26356}]", "bib_author_first_name": "[{\"end\":32417,\"start\":32411},{\"end\":32432,\"start\":32422},{\"end\":32451,\"start\":32441},{\"end\":32472,\"start\":32465},{\"end\":32475,\"start\":32473},{\"end\":32490,\"start\":32485},{\"end\":33091,\"start\":33084},{\"end\":33272,\"start\":33266},{\"end\":33290,\"start\":33283},{\"end\":33309,\"start\":33301},{\"end\":33326,\"start\":33318},{\"end\":33342,\"start\":33337},{\"end\":33360,\"start\":33354},{\"end\":33967,\"start\":33961},{\"end\":33985,\"start\":33978},{\"end\":34004,\"start\":33996},{\"end\":34023,\"start\":34015},{\"end\":34038,\"start\":34032},{\"end\":34055,\"start\":34048},{\"end\":34072,\"start\":34064},{\"end\":34083,\"start\":34078},{\"end\":34101,\"start\":34095},{\"end\":34699,\"start\":34691},{\"end\":34713,\"start\":34704},{\"end\":34728,\"start\":34718},{\"end\":35090,\"start\":35083},{\"end\":35101,\"start\":35100},{\"end\":35113,\"start\":35108},{\"end\":35115,\"start\":35114},{\"end\":35129,\"start\":35122},{\"end\":35562,\"start\":35555},{\"end\":35573,\"start\":35572},{\"end\":35585,\"start\":35580},{\"end\":35587,\"start\":35586},{\"end\":35601,\"start\":35594},{\"end\":36023,\"start\":36017},{\"end\":36037,\"start\":36030},{\"end\":36049,\"start\":36045},{\"end\":36051,\"start\":36050},{\"end\":36071,\"start\":36065},{\"end\":36518,\"start\":36512},{\"end\":36531,\"start\":36525},{\"end\":36541,\"start\":36537},{\"end\":36558,\"start\":36551},{\"end\":36570,\"start\":36566},{\"end\":36572,\"start\":36571},{\"end\":37082,\"start\":37079},{\"end\":37097,\"start\":37089},{\"end\":37549,\"start\":37542},{\"end\":37563,\"start\":37556},{\"end\":37575,\"start\":37571},{\"end\":37586,\"start\":37582},{\"end\":37601,\"start\":37595},{\"end\":32417,\"start\":32411},{\"end\":32432,\"start\":32422},{\"end\":32451,\"start\":32441},{\"end\":32472,\"start\":32465},{\"end\":32475,\"start\":32473},{\"end\":32490,\"start\":32485},{\"end\":33091,\"start\":33084},{\"end\":33272,\"start\":33266},{\"end\":33290,\"start\":33283},{\"end\":33309,\"start\":33301},{\"end\":33326,\"start\":33318},{\"end\":33342,\"start\":33337},{\"end\":33360,\"start\":33354},{\"end\":33967,\"start\":33961},{\"end\":33985,\"start\":33978},{\"end\":34004,\"start\":33996},{\"end\":34023,\"start\":34015},{\"end\":34038,\"start\":34032},{\"end\":34055,\"start\":34048},{\"end\":34072,\"start\":34064},{\"end\":34083,\"start\":34078},{\"end\":34101,\"start\":34095},{\"end\":34699,\"start\":34691},{\"end\":34713,\"start\":34704},{\"end\":34728,\"start\":34718},{\"end\":35090,\"start\":35083},{\"end\":35101,\"start\":35100},{\"end\":35113,\"start\":35108},{\"end\":35115,\"start\":35114},{\"end\":35129,\"start\":35122},{\"end\":35562,\"start\":35555},{\"end\":35573,\"start\":35572},{\"end\":35585,\"start\":35580},{\"end\":35587,\"start\":35586},{\"end\":35601,\"start\":35594},{\"end\":36023,\"start\":36017},{\"end\":36037,\"start\":36030},{\"end\":36049,\"start\":36045},{\"end\":36051,\"start\":36050},{\"end\":36071,\"start\":36065},{\"end\":36518,\"start\":36512},{\"end\":36531,\"start\":36525},{\"end\":36541,\"start\":36537},{\"end\":36558,\"start\":36551},{\"end\":36570,\"start\":36566},{\"end\":36572,\"start\":36571},{\"end\":37082,\"start\":37079},{\"end\":37097,\"start\":37089},{\"end\":37549,\"start\":37542},{\"end\":37563,\"start\":37556},{\"end\":37575,\"start\":37571},{\"end\":37586,\"start\":37582},{\"end\":37601,\"start\":37595}]", "bib_author_last_name": "[{\"end\":32409,\"start\":32400},{\"end\":32420,\"start\":32418},{\"end\":32439,\"start\":32433},{\"end\":32463,\"start\":32452},{\"end\":32483,\"start\":32476},{\"end\":32497,\"start\":32491},{\"end\":32507,\"start\":32499},{\"end\":33095,\"start\":33092},{\"end\":33281,\"start\":33273},{\"end\":33299,\"start\":33291},{\"end\":33316,\"start\":33310},{\"end\":33335,\"start\":33327},{\"end\":33352,\"start\":33343},{\"end\":33366,\"start\":33361},{\"end\":33976,\"start\":33968},{\"end\":33994,\"start\":33986},{\"end\":34013,\"start\":34005},{\"end\":34030,\"start\":34024},{\"end\":34046,\"start\":34039},{\"end\":34062,\"start\":34056},{\"end\":34076,\"start\":34073},{\"end\":34093,\"start\":34084},{\"end\":34107,\"start\":34102},{\"end\":34702,\"start\":34700},{\"end\":34716,\"start\":34714},{\"end\":34733,\"start\":34729},{\"end\":35098,\"start\":35091},{\"end\":35106,\"start\":35102},{\"end\":35120,\"start\":35116},{\"end\":35134,\"start\":35130},{\"end\":35141,\"start\":35136},{\"end\":35570,\"start\":35563},{\"end\":35578,\"start\":35574},{\"end\":35592,\"start\":35588},{\"end\":35606,\"start\":35602},{\"end\":35613,\"start\":35608},{\"end\":36028,\"start\":36024},{\"end\":36043,\"start\":36038},{\"end\":36063,\"start\":36052},{\"end\":36075,\"start\":36072},{\"end\":36523,\"start\":36519},{\"end\":36535,\"start\":36532},{\"end\":36549,\"start\":36542},{\"end\":36564,\"start\":36559},{\"end\":37087,\"start\":37083},{\"end\":37109,\"start\":37098},{\"end\":37554,\"start\":37550},{\"end\":37569,\"start\":37564},{\"end\":37580,\"start\":37576},{\"end\":37593,\"start\":37587},{\"end\":37611,\"start\":37602},{\"end\":32409,\"start\":32400},{\"end\":32420,\"start\":32418},{\"end\":32439,\"start\":32433},{\"end\":32463,\"start\":32452},{\"end\":32483,\"start\":32476},{\"end\":32497,\"start\":32491},{\"end\":32507,\"start\":32499},{\"end\":33095,\"start\":33092},{\"end\":33281,\"start\":33273},{\"end\":33299,\"start\":33291},{\"end\":33316,\"start\":33310},{\"end\":33335,\"start\":33327},{\"end\":33352,\"start\":33343},{\"end\":33366,\"start\":33361},{\"end\":33976,\"start\":33968},{\"end\":33994,\"start\":33986},{\"end\":34013,\"start\":34005},{\"end\":34030,\"start\":34024},{\"end\":34046,\"start\":34039},{\"end\":34062,\"start\":34056},{\"end\":34076,\"start\":34073},{\"end\":34093,\"start\":34084},{\"end\":34107,\"start\":34102},{\"end\":34702,\"start\":34700},{\"end\":34716,\"start\":34714},{\"end\":34733,\"start\":34729},{\"end\":35098,\"start\":35091},{\"end\":35106,\"start\":35102},{\"end\":35120,\"start\":35116},{\"end\":35134,\"start\":35130},{\"end\":35141,\"start\":35136},{\"end\":35570,\"start\":35563},{\"end\":35578,\"start\":35574},{\"end\":35592,\"start\":35588},{\"end\":35606,\"start\":35602},{\"end\":35613,\"start\":35608},{\"end\":36028,\"start\":36024},{\"end\":36043,\"start\":36038},{\"end\":36063,\"start\":36052},{\"end\":36075,\"start\":36072},{\"end\":36523,\"start\":36519},{\"end\":36535,\"start\":36532},{\"end\":36549,\"start\":36542},{\"end\":36564,\"start\":36559},{\"end\":37087,\"start\":37083},{\"end\":37109,\"start\":37098},{\"end\":37554,\"start\":37550},{\"end\":37569,\"start\":37564},{\"end\":37580,\"start\":37576},{\"end\":37593,\"start\":37587},{\"end\":37611,\"start\":37602}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1109/ISVLSI.2016.22\",\"id\":\"b0\",\"matched_paper_id\":14793380},\"end\":32919,\"start\":32321},{\"attributes\":{\"id\":\"b1\"},\"end\":33045,\"start\":32921},{\"attributes\":{\"id\":\"b2\"},\"end\":33194,\"start\":33047},{\"attributes\":{\"doi\":\"10.1145/3505170.3511046\",\"id\":\"b3\",\"matched_paper_id\":248151110},\"end\":33893,\"start\":33196},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":245446601},\"end\":34483,\"start\":33895},{\"attributes\":{\"doi\":\"10.1109/ICCAD51958.2021.9643543\",\"id\":\"b5\"},\"end\":34599,\"start\":34485},{\"attributes\":{\"doi\":\"10.1016/j.vlsi.2021.11.005\",\"id\":\"b6\",\"matched_paper_id\":245390602},\"end\":34982,\"start\":34601},{\"attributes\":{\"doi\":\"10.1109/SP40000.2020.00083\",\"id\":\"b7\",\"matched_paper_id\":216394845},\"end\":35553,\"start\":34984},{\"attributes\":{\"doi\":\"arXiv:1906.08842\",\"id\":\"b8\"},\"end\":35936,\"start\":35555},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":13126610},\"end\":36410,\"start\":35938},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":209088548},\"end\":37000,\"start\":36412},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":13915850},\"end\":37509,\"start\":37002},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7133559},\"end\":37923,\"start\":37511},{\"attributes\":{\"doi\":\"10.1109/ISVLSI.2016.22\",\"id\":\"b0\",\"matched_paper_id\":14793380},\"end\":32919,\"start\":32321},{\"attributes\":{\"id\":\"b1\"},\"end\":33045,\"start\":32921},{\"attributes\":{\"id\":\"b2\"},\"end\":33194,\"start\":33047},{\"attributes\":{\"doi\":\"10.1145/3505170.3511046\",\"id\":\"b3\",\"matched_paper_id\":248151110},\"end\":33893,\"start\":33196},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":245446601},\"end\":34483,\"start\":33895},{\"attributes\":{\"doi\":\"10.1109/ICCAD51958.2021.9643543\",\"id\":\"b5\"},\"end\":34599,\"start\":34485},{\"attributes\":{\"doi\":\"10.1016/j.vlsi.2021.11.005\",\"id\":\"b6\",\"matched_paper_id\":245390602},\"end\":34982,\"start\":34601},{\"attributes\":{\"doi\":\"10.1109/SP40000.2020.00083\",\"id\":\"b7\",\"matched_paper_id\":216394845},\"end\":35553,\"start\":34984},{\"attributes\":{\"doi\":\"arXiv:1906.08842\",\"id\":\"b8\"},\"end\":35936,\"start\":35555},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":13126610},\"end\":36410,\"start\":35938},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":209088548},\"end\":37000,\"start\":36412},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":13915850},\"end\":37509,\"start\":37002},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7133559},\"end\":37923,\"start\":37511}]", "bib_title": "[{\"end\":32398,\"start\":32321},{\"end\":33264,\"start\":33196},{\"end\":33959,\"start\":33895},{\"end\":34689,\"start\":34601},{\"end\":35081,\"start\":34984},{\"end\":36015,\"start\":35938},{\"end\":36510,\"start\":36412},{\"end\":37077,\"start\":37002},{\"end\":37540,\"start\":37511},{\"end\":32398,\"start\":32321},{\"end\":33264,\"start\":33196},{\"end\":33959,\"start\":33895},{\"end\":34689,\"start\":34601},{\"end\":35081,\"start\":34984},{\"end\":36015,\"start\":35938},{\"end\":36510,\"start\":36412},{\"end\":37077,\"start\":37002},{\"end\":37540,\"start\":37511}]", "bib_author": "[{\"end\":32411,\"start\":32400},{\"end\":32422,\"start\":32411},{\"end\":32441,\"start\":32422},{\"end\":32465,\"start\":32441},{\"end\":32485,\"start\":32465},{\"end\":32499,\"start\":32485},{\"end\":32509,\"start\":32499},{\"end\":33097,\"start\":33084},{\"end\":33283,\"start\":33266},{\"end\":33301,\"start\":33283},{\"end\":33318,\"start\":33301},{\"end\":33337,\"start\":33318},{\"end\":33354,\"start\":33337},{\"end\":33368,\"start\":33354},{\"end\":33978,\"start\":33961},{\"end\":33996,\"start\":33978},{\"end\":34015,\"start\":33996},{\"end\":34032,\"start\":34015},{\"end\":34048,\"start\":34032},{\"end\":34064,\"start\":34048},{\"end\":34078,\"start\":34064},{\"end\":34095,\"start\":34078},{\"end\":34109,\"start\":34095},{\"end\":34704,\"start\":34691},{\"end\":34718,\"start\":34704},{\"end\":34735,\"start\":34718},{\"end\":35100,\"start\":35083},{\"end\":35108,\"start\":35100},{\"end\":35122,\"start\":35108},{\"end\":35136,\"start\":35122},{\"end\":35143,\"start\":35136},{\"end\":35572,\"start\":35555},{\"end\":35580,\"start\":35572},{\"end\":35594,\"start\":35580},{\"end\":35608,\"start\":35594},{\"end\":35615,\"start\":35608},{\"end\":36030,\"start\":36017},{\"end\":36045,\"start\":36030},{\"end\":36065,\"start\":36045},{\"end\":36077,\"start\":36065},{\"end\":36525,\"start\":36512},{\"end\":36537,\"start\":36525},{\"end\":36551,\"start\":36537},{\"end\":36566,\"start\":36551},{\"end\":36575,\"start\":36566},{\"end\":37089,\"start\":37079},{\"end\":37111,\"start\":37089},{\"end\":37556,\"start\":37542},{\"end\":37571,\"start\":37556},{\"end\":37582,\"start\":37571},{\"end\":37595,\"start\":37582},{\"end\":37613,\"start\":37595},{\"end\":32411,\"start\":32400},{\"end\":32422,\"start\":32411},{\"end\":32441,\"start\":32422},{\"end\":32465,\"start\":32441},{\"end\":32485,\"start\":32465},{\"end\":32499,\"start\":32485},{\"end\":32509,\"start\":32499},{\"end\":33097,\"start\":33084},{\"end\":33283,\"start\":33266},{\"end\":33301,\"start\":33283},{\"end\":33318,\"start\":33301},{\"end\":33337,\"start\":33318},{\"end\":33354,\"start\":33337},{\"end\":33368,\"start\":33354},{\"end\":33978,\"start\":33961},{\"end\":33996,\"start\":33978},{\"end\":34015,\"start\":33996},{\"end\":34032,\"start\":34015},{\"end\":34048,\"start\":34032},{\"end\":34064,\"start\":34048},{\"end\":34078,\"start\":34064},{\"end\":34095,\"start\":34078},{\"end\":34109,\"start\":34095},{\"end\":34704,\"start\":34691},{\"end\":34718,\"start\":34704},{\"end\":34735,\"start\":34718},{\"end\":35100,\"start\":35083},{\"end\":35108,\"start\":35100},{\"end\":35122,\"start\":35108},{\"end\":35136,\"start\":35122},{\"end\":35143,\"start\":35136},{\"end\":35572,\"start\":35555},{\"end\":35580,\"start\":35572},{\"end\":35594,\"start\":35580},{\"end\":35608,\"start\":35594},{\"end\":35615,\"start\":35608},{\"end\":36030,\"start\":36017},{\"end\":36045,\"start\":36030},{\"end\":36065,\"start\":36045},{\"end\":36077,\"start\":36065},{\"end\":36525,\"start\":36512},{\"end\":36537,\"start\":36525},{\"end\":36551,\"start\":36537},{\"end\":36566,\"start\":36551},{\"end\":36575,\"start\":36566},{\"end\":37089,\"start\":37079},{\"end\":37111,\"start\":37089},{\"end\":37556,\"start\":37542},{\"end\":37571,\"start\":37556},{\"end\":37582,\"start\":37571},{\"end\":37595,\"start\":37582},{\"end\":37613,\"start\":37595}]", "bib_venue": "[{\"end\":33564,\"start\":33486},{\"end\":35241,\"start\":35219},{\"end\":37232,\"start\":37217},{\"end\":37693,\"start\":37681},{\"end\":33564,\"start\":33486},{\"end\":35241,\"start\":35219},{\"end\":37232,\"start\":37217},{\"end\":37693,\"start\":37681},{\"end\":32577,\"start\":32531},{\"end\":32969,\"start\":32921},{\"end\":33082,\"start\":33047},{\"end\":33484,\"start\":33391},{\"end\":34180,\"start\":34109},{\"end\":34522,\"start\":34518},{\"end\":34772,\"start\":34761},{\"end\":35217,\"start\":35169},{\"end\":35712,\"start\":35648},{\"end\":36135,\"start\":36102},{\"end\":36677,\"start\":36600},{\"end\":37215,\"start\":37135},{\"end\":37679,\"start\":37631},{\"end\":32577,\"start\":32531},{\"end\":32969,\"start\":32921},{\"end\":33082,\"start\":33047},{\"end\":33484,\"start\":33391},{\"end\":34180,\"start\":34109},{\"end\":34522,\"start\":34518},{\"end\":34772,\"start\":34761},{\"end\":35217,\"start\":35169},{\"end\":35712,\"start\":35648},{\"end\":36135,\"start\":36102},{\"end\":36677,\"start\":36600},{\"end\":37215,\"start\":37135},{\"end\":37679,\"start\":37631}]"}}}, "year": 2023, "month": 12, "day": 17}