{"id": 6484161, "updated": "2023-09-28 22:34:47.401", "metadata": {"title": "Lifted Rule Injection for Relation Embeddings", "authors": "[{\"first\":\"Thomas\",\"last\":\"Demeester\",\"middle\":[]},{\"first\":\"Tim\",\"last\":\"Rocktaschel\",\"middle\":[]},{\"first\":\"Sebastian\",\"last\":\"Riedel\",\"middle\":[]}]", "venue": "EMNLP", "journal": "Proceedings of the 2016 Conference on Empirical Methods in Natural Language Processing", "publication_date": {"year": 2016, "month": 6, "day": 27}, "abstract": "Methods based on representation learning currently hold the state-of-the-art in many natural language processing and knowledge base inference tasks. Yet, a major challenge is how to efficiently incorporate commonsense knowledge into such models. A recent approach regularizes relation and entity representations by propositionalization of first-order logic rules. However, propositionalization does not scale beyond domains with only few entities and rules. In this paper we present a highly efficient method for incorporating implication rules into distributed representations for automated knowledge base construction. We map entity-tuple embeddings into an approximately Boolean space and encourage a partial ordering over relation embeddings based on implication rules mined from WordNet. Surprisingly, we find that the strong restriction of the entity-tuple embedding space does not hurt the expressiveness of the model and even acts as a regularizer that improves generalization. By incorporating few commonsense rules, we achieve an increase of 2 percentage points mean average precision over a matrix factorization baseline, while observing a negligible increase in runtime.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1606.08359", "mag": "2963290083", "acl": "D16-1146", "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/DemeesterRR16", "doi": "10.18653/v1/d16-1146"}}, "content": {"source": {"pdf_hash": "bbe4d6bd4fcaeb851a5886cd35615c09fbd40738", "pdf_src": "ACL", "pdf_uri": "[\"https://www.aclweb.org/anthology/D16-1146.pdf\"]", "oa_url_match": true, "oa_info": {"license": "CCBY", "open_access_url": "https://www.aclweb.org/anthology/D16-1146.pdf", "status": "HYBRID"}}, "grobid": {"id": "936c8b805721b5e027b8ec4b11ce49fc9a553360", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/bbe4d6bd4fcaeb851a5886cd35615c09fbd40738.txt", "contents": "\nLifted Rule Injection for Relation Embeddings\nAssociation for Computational LinguisticsCopyright Association for Computational LinguisticsNovember 1-5, 2016. 2016\n\nThomas Demeester tdmeeste@intec.ugent.be \nGhent University -iMinds Ghent\nBelgium\n\nTim Rockt\u00e4schel t.rocktaschel@cs.ucl.ac.uk \nUniversity College London London\nUK\n\nSebastian Riedel s.riedel@cs.ucl.ac.uk \nUniversity College London London\nUK\n\nLifted Rule Injection for Relation Embeddings\n\nProceedings of the 2016 Conference on Empirical Methods in Natural Language Processing\nthe 2016 Conference on Empirical Methods in Natural Language ProcessingAustin, TexasAssociation for Computational LinguisticsNovember 1-5, 2016. 2016\nMethods based on representation learning currently hold the state-of-the-art in many natural language processing and knowledge base inference tasks. Yet, a major challenge is how to efficiently incorporate commonsense knowledge into such models. A recent approach regularizes relation and entity representations by propositionalization of first-order logic rules. However, propositionalization does not scale beyond domains with only few entities and rules. In this paper we present a highly efficient method for incorporating implication rules into distributed representations for automated knowledge base construction. We map entity-tuple embeddings into an approximately Boolean space and encourage a partial ordering over relation embeddings based on implication rules mined from WordNet. Surprisingly, we find that the strong restriction of the entity-tuple embedding space does not hurt the expressiveness of the model and even acts as a regularizer that improves generalization. By incorporating few commonsense rules, we achieve an increase of 2 percentage points mean average precision over a matrix factorization baseline, while observing a negligible increase in runtime.\n\nIntroduction\n\nCurrent successful methods for automated knowledge base construction tasks heavily rely on learned distributed vector representations (Nickel et al., 2012;Riedel et al., 2013;Socher et al., 2013;Chang et al., 2014;Neelakantan et al., 2015;Toutanova et al., 2015;Nickel et al., 2015;. Although these models are able to learn robust representations from large amounts of data, they often lack commonsense knowledge. Such knowledge is rarely explicitly stated in texts but can be found in resources like PPDB (Ganitkevitch et al., 2013) or WordNet (Miller, 1995).\n\nCombining neural methods with symbolic commonsense knowledge, for instance in the form of implication rules, is in the focus of current research (Rockt\u00e4schel et al., 2014;Wang et al., 2014;Bowman et al., 2015;Wang et al., 2015;Vendrov et al., 2016;Hu et al., 2016;. A recent approach (Rockt\u00e4schel et al., 2015) regularizes entity-tuple and relation embeddings via first-order logic rules. To this end, every first-order rule is propositionalized based on observed entity-tuples, and a differentiable loss term is added for every propositional rule. This approach does not scale beyond only a few entity-tuples and rules. For example, propositionalizing the rule \u2200x : isMan(x) \u21d2 isMortal(x) would result in a very large number of loss terms on a large database.\n\nIn this paper, we present a method to incorporate simple rules while maintaining the computational efficiency of only modeling training facts. This is achieved by minimizing an upper bound of the loss that encourages the implication between relations to hold, entirely independent from the number of entity pairs. It only involves representations of the relations that are mentioned in rules, as well as a general rule-independent constraint on the entity-tuple embedding space. In the example given above, if we require that every component of the vector representation of isMan is smaller than the corresponding component of relation isMortal, then we can show that the rule holds for any nonnegative representation of an entity-tuple. Hence our method avoids the need for separate loss terms for every ground atom resulting from propositionalizing rules. In statistical relational learning this type of approach is often referred to as lifted inference or learning (Poole, 2003;Braz, 2007) because it deals with groups of random variables at a first-order level. In this sense our approach is a lifted form of rule injection. This allows for imposing large numbers of rules while learning distributed representations of relations and entity-tuples. Besides drastically lower computation time, an important advantage of our method over Rockt\u00e4schel et al. (2015) is that when these constraints are satisfied, the injected rules always hold, even for unseen but inferred facts. While the method presented here only deals with implications and not general first-order rules, it does not rely on the assumption of independence between relations, and is hence more generally applicable.\n\nOur contributions are fourfold: (i) we develop a very efficient way of regularizing relation representations to incorporate first-order logic implications ( \u00a73), (ii) we reveal that, against expectation, mapping entity-tuple embeddings to non-negative space does not hurt but instead improves the generalization ability of our model ( \u00a75.1) (iii) we show improvements on a knowledge base completion task by injecting mined commonsense rules from WordNet ( \u00a75.3), and finally (iv) we give a qualitative analysis of the results, demonstrating that implication constraints are indeed satisfied in an asymmetric way and result in a substantially increased structuring of the relation embedding space ( \u00a75.6).\n\n\nBackground\n\nIn this section we revisit the matrix factorization relation extraction model by Riedel et al. (2013) and introduce the notation used throughout the paper. We choose the matrix factorization model for its simplicity as the base on which we develop implication injection. Riedel et al. (2013) represent every relation r \u2208 R (selected from Freebase (Bollacker et al., 2008) or extracted as textual surface pattern) by a k-dimensional latent representation r \u2208 R k . A particular relation instance or fact is the combination of a relation r and a tuple t of entities that are engaged in that relation, and is written as r, t . We write O as the set of all such input facts available for training. Furthermore, every entity-tuple t \u2208 T is represented by a latent vector t \u2208 R k (with T the set of all entity-tuples in O).\n\nModel F by Riedel et al. (2013) measures the compatibility between a relation r and an entitytuple t using the dot product r t of their respective vector representations. During training, the representations are learned such that valid facts receive high scores, whereas negative ones receive low scores. Typically no negative evidence is available at training time, and therefore a Bayesian Personalized Ranking (BPR) objective (Rendle et al., 2009) is used. Given a pair of facts f p := r p , t p \u2208 O and f q := r q , t q \u2208 O, this objective requires that\nr p t p \u2264 r q t q .\n(1)\n\nThe embeddings can be trained by minimizing a convex loss function R that penalizes violations of that requirement when iterating over the training set. In practice, each positive training fact r, t q is compared with a randomly sampled unobserved fact r, t p for the same relation. The overall loss can hence be written as\nL R = r,tq \u2208O tp\u2208T , r,tp \u2208O R r [t p \u2212 t q ] .\n(2) and measures how well observed valid facts are ranked above unobserved facts, thus reconstructing the ranking of the training data. We will henceforth call L R the reconstruction loss, to make a distinction with the implication loss that we will introduce later. Riedel et al. (2013) use the logistic loss R (s) := \u2212 log \u03c3(\u2212s), where \u03c3(s) := (1 + e \u2212x ) \u22121 denotes the sigmoid function. In order to avoid overfitting, an L 2 regularization term on the r and t embeddings is added to the reconstruction loss. The overall objective to minimize hence is\nL F = L R + \u03b1 r r 2 2 + t t 2 2(3)\nwhere \u03b1 is the regularization strength.\n\n\nLifted Injection of Implications\n\nIn this section, we show how an implication \u2200t \u2208 T : r p , t \u21d2 r q , t ,\n\ncan be imposed independently of the entity-tuples. For simplicity, we abbreviate such implications as r p \u21d2 r q (e.g., professorAt \u21d2 employeeAt).\n\n\nGrounded Loss Formulation\n\nThe implication rule can be imposed by requiring that every tuple t \u2208 T is at least as compatible with relation r p as with r q . Written in terms of the latent representations, eq. (4) therefore becomes\n\u2200t \u2208 T : r p t \u2264 r q t(5)\nIf r p , t is a true fact with a high score r p t, and the fact r q , t has an even higher score, it must also be true, but not vice versa. We can therefore inject an implication rule by minimizing a loss term with a separate contribution from every t \u2208 T , adding up to the total loss if the corresponding inequality is not satisfied. In order to make the contribution of every tuple t to that loss independent of the magnitude of the tuple embedding, we divide both sides of the above inequality by t 1 . Witht := t/ t 1 , the implication loss for the rule r p \u21d2 r q can be written as\nL I = \u2200t\u2208T I [r p \u2212 r q ] t(6)\nfor an appropriate convex loss function I , similarly to eq. (2). In practice, the summation can be reduced to those tuples that occur in combination with r p or r q in the training data. Still, the propositionalization in terms of training facts leads to a heavy computational cost for imposing a single implication, similar to the technique introduced in Rockt\u00e4schel et al. (2015). Moreover, with that simplification there is no guarantee that the implication between both relations would generalize towards inferred facts not seen during training.\n\n\nLifted Loss Formulation\n\nThe problems mentioned above can be avoided if instead of L I , a tuple-independent upper bound is minimized. Such a bound can be constructed, provided all components of t are restricted to a nonnegative embedding space, i.e., T \u2286 R k,+ . If this holds, Jensen's inequality allows us to transform eq. (6) as follows\nL I = \u2200t\u2208T I k i=1t i [r p \u2212 r q ] 1 i (7) \u2264 k i=1 I [r p \u2212 r q ] 1 i \u2200t\u2208Tt i (8)\nwhere 1 i is the unit vector along dimension i in tuple-space. This is allowed because the\n{t i } k i=1\nform convex coefficients (t i > 0, and it i = 1), and I is a convex function. If we define\nL U I := k i=1 I [r p \u2212 r q ] 1 i(9)\nwe can write\nL I \u2264 \u03b2L U I(10)\nin which \u03b2 is an upper bound on tt i . One such bound is |T |, but others are conceivable too. In practice we rescale \u03b2 to a hyper-parameter\u03b2 that we use to control the impact of the upper bound to the overall loss. We call L U I the lifted loss, as it no longer depends on any of the entity-tuples; it is grounded over the unit tuples 1 i instead.\n\nThe implication r p \u21d2 r q can thus be imposed by minimizing the lifted loss L U I . Note that by minimizing L U I , the model is encouraged to satisfy the constraint r p \u2264 r q on the relation embeddings, where \u2264 denotes the component-wise comparison. In fact, a sufficient condition for eq. (5) to hold, is r p \u2264 r q and \u2200t \u2208 T : t \u2265 0\n\nwith 0 the k-dimensional null vector. This corresponds to a single relation-specific loss term, and the general restriction T \u2286 R k,+ on the tupleembedding space.\n\n\nApproximately Boolean Entity Tuples\n\nIn order to impose implications by minimizing a lifted loss L U I , the tuple-embedding space needs to be restricted to R k,+ . We have chosen to restrict the tuple space even more than required, namely to the hypercube t \u2208 [0, 1] k , as approximately Boolean embeddings (Kruszewski et al., 2015). The tuple embeddings are constructed from real-valued vectors e, using the component-wise sigmoid function\nt = \u03c3(e), e \u2208 R k .(12)\nFor minimizing the loss, the gradients are hence computed with respect to e, and the L 2 regularization is applied to the components of e instead of t.\n\nOther choices for ensuring the restriction t \u2265 0 in eq. (11) are possible, but we found that our approach works better in practice than those (e.g., the exponential transformation proposed by Demeester et al. (2016)). It can also be observed that the unit tuples over which the implication loss is grounded, form a special case of approximately Boolean embeddings.\n\nIn order to investigate the impact of this restriction even when not injecting any rules, we introduce model FS: the original model F, but with sigmoidal entity-tuples:\nL F S = r,tq \u2208O tp\u2208T , r,tp \u2208O R r [\u03c3(e p ) \u2212 \u03c3(e q )] + \u03b1 r r 2 2 + e e 2 2(13)\nHere, e p and e q are the real-valued representations as in eq. (12), for tuples t p and t q , respectively. With the above choice of a non-negative tupleembedding space we can now state the full lifted rule injection model (FSL):\nL F SL = L F S +\u03b2 I\u2208I L U I(14)\nL U I denotes a lifted loss term for every rule in a set I of implication rules that we want to inject.\n\n\nConvex Implication Loss\n\nThe logistic loss R (see \u00a72) is not suited for imposing implications because once the inequality in eq. (11) is satisfied, the components of r p and r q do not need to be separated any further. However, with R this would continue to happen due to the small non-zero gradient. In the reconstruction loss L R this is a desirable effect which further separates the scores for positive from negative examples. However, if an implication is imposed between two relations that are almost equivalent according to the training data, we still want to find almost equivalent embedding vectors. Hence, we propose to use the loss\nI (s) = max(0, s + \u03b4)(15)\nwith \u03b4 a small positive margin to ensure that the gradient does not disappear before the inequality is actually satisfied. We use \u03b4 = 0.01 in all experiments.\n\nThe main advantage of the presented approach over earlier methods that impose the rules in a grounded way (Rockt\u00e4schel et al., 2015;Wang et al., 2015) is the computational efficiency of imposing the lifted loss. Evaluating L U I or its gradient for one implication rule is comparable to evaluating the reconstruction loss for one pair of training facts. In typical applications there are much fewer rules than training facts and the extra computation time needed to inject these rules is therefore negligible.\n\n\nRelated Work\n\nRecent research on combining rules with learned vector representations has been important for new developments in the field of knowledge base completion. Rockt\u00e4schel et al. (2014) and Rockt\u00e4schel et al. (2015) provided a framework to jointly maximize the probability of observed facts and propositionalized first-order logic rules. Wang et al. (2015) demonstrated how different types of rules can be incorporated using an Integer Linear Programming approach. Wang and Cohen (2016) learned embeddings for facts and first-order logic rules using matrix factorization. Yet, all of these approaches ground the rules in the training data, limiting their scalability towards large rule sets and KBs with many entities. As argued in the introduction, this forms an important motivation for the lifted rule injection model put forward in this work, which by construction does not suffer from that limitation. Wei et al. (2015) proposed an alternative strategy to tackle the scalability problem by reasoning on a filtered subset of grounded facts. Wu et al. (2015) proposed to use a path ranking approach for capturing long-range interactions between entities, and to add these as an extra loss term, besides the loss that models pairwise relations. Our model FSL differs substantially from their approach, in that we consider tuples instead of separate entities, and we inject a given set of rules. Yet, by cre-ating a partial ordering in the relation embeddings as a result of injecting implication rules, model FSL can also capture interactions beyond direct relations. This will be demonstrated in \u00a75.3 by injecting rules between surface patterns only and still measuring an improvement on predictions for structured Freebase relations.\n\nCombining logic and distributed representations is also an active field of research outside of automated knowledge base completion. Recent advances include the work by Faruqui et al. (2014), who injected ontological knowledge from WordNet into word representations. Furthermore, Vendrov et al. (2016) proposed to enforce a partial ordering in an embeddings space of images and phrases. Our method is related to such order embeddings since we define a partial ordering on relation embeddings. However, to ensure that implications hold for all entity-tuples we also need a restriction on the entitytuple embedding space and derive bounds on the loss. Another important contribution is the recent work by Hu et al. (2016), who proposed a framework for injecting rules into general neural network architectures, by jointly training on the actual targets and on the rule-regularized predictions provided by a teacher network. Although quite different at first sight, their work could offer a way to use our model in various neural network architectures, by integrating the proposed lifted loss into the teacher network.\n\nThis paper builds upon our previous workshop paper (Demeester et al., 2016). In that work, we tested different tuple embedding transformations in an ad-hoc manner. We used approximately Boolean representations of relations instead of entity-tuples, strongly reducing the model's degrees of freedom. We now derive the FSL model from a carefully considered mathematical transformation of the grounded loss. The FSL model only restricts the tuple embedding space, whereby relation vectors remain real valued. Furthermore, previous experiments were performed on small-scale artificial datasets, whereas we now test on a real-world relation extraction benchmark.\n\nFinally, we explicitly discuss the main differences with respect to the strongly related work from Rockt\u00e4schel et al. (2015). Their method is more general, as they cover a wide range of first-order logic rules, whereas we only discuss implications. Lifted rule injection beyond implications will be studied in future research contributions. However, albeit less general, our model has a number of clear advantages:\n\nScalability -Our proposed model of lifted rule injection scales according to the number of implication rules, instead of the number of rules times the number of observed facts for every relation present in a rule.\n\nGeneralizability -Injected implications will hold even for facts not seen during training, because their validity only depends on the order relation imposed on the relation representations. This is not guaranteed when training on rules grounded in training facts by Rockt\u00e4schel et al. (2015).\n\nTraining Flexibility -Our method can be trained with various loss functions, including the rank-based loss as used in Riedel et al. (2013). This was not possible for the model of Rockt\u00e4schel et al. (2015) and already leads to an improved accuracy as seen from the zero-shot learning experiment in \u00a75.2.\n\nIndependence Assumption -In Rockt\u00e4schel et al. (2015) an implication of the form a p \u21d2 a q for two ground atoms a p and a q is modeled by the logical equivalence \u00ac(a p \u2227 \u00aca q ), and its probability is approximated in terms of the elementary probabilities \u03c0(a p ) and \u03c0(a q ) as 1 \u2212 \u03c0(a p ) 1 \u2212 \u03c0(a q ) . This assumes the independence of the two atoms a p and a q , which may not hold in practice. Our approach does not rely on that assumption and also works for cases of statistical dependence. For example, the independence assumption does not hold in the trivial case where the relations r p and r q in the two atoms are equivalent, whereas in our model, the constraints r p \u2264 r q and r p \u2265 r q would simply reduce to r p = r q .\n\n\nExperiments and Results\n\nWe now present our experimental results. We start by describing the experimental setup and hyperparameters. Before turning to the injection of rules, we compare model F with model FS, and show that restricting the tuple embedding space has a regularization effect, rather than limiting the expressiveness of the model ( \u00a75.1). We then demonstrate that model FSL is capable of zero-shot learning ( \u00a75.2), and show that injecting high-quality WordNet rules  Riedel et al. (2013) are denoted as R13-F. leads to an improved precision ( \u00a75.3). We proceed with a visual illustration of the relation embeddings with and without injected rules ( \u00a75.4), provide details on time efficiency of the lifted rule injection method ( \u00a75.5), and show that it correctly captures the asymmetry of implication rules ( \u00a75.6). All models were implemented in Tensor-Flow (Abadi et al., 2015). We use the hyperparameters of Riedel et al. (2013), with k = 100 hidden dimensions and a weight of \u03b1 = 0.01 for the L 2 regularization loss. We use ADAM (Kingma and Ba, 2014) for optimization with an initial learning rate of 0.005 and a mini-batch size of 8192. The embeddings are initialized by sampling uniformly from [\u22120.1, 0.1] and we use\u03b2 = 0.1 for the implication loss throughout our experiments.\n\n\nRestricted Embedding Space\n\nBefore incorporating external commonsense knowledge into relation representations, we were curious how much we lose by restricting the entity-tuple space to approximately Boolean embeddings. We evaluate our models on the New York Times dataset introduced by Riedel et al. (2013). Surprisingly, we find that the expressiveness of the model does not suffer from this strong restriction. From Table 1 we see that restricting the tuple-embedding space seems to perform slightly better (FS) as opposed to a realvalued tuple-embedding space (F), suggesting that this restriction has a regularization effect that improves generalization. We also provide the original results for model F by Riedel et al. (2013) (denoted as R13-F) for comparison. Due to a different implementation and optimization procedure, the results for our model F and R13-F are not identical.\n\nInspecting the top relations for a sampled dimension in the embedding space reveals that the relation space of model FS more closely resembles clusters than that of model F (Table 2). We hypothesize that this might be caused by approximately Boolean entity-tuple representations in model FS, resulting in attribute-like entity-tuple vectors that capture which relation clusters they belong to.\n\n\nZero-shot Learning\n\nThe zero-shot learning experiment performed in Rockt\u00e4schel et al. (2015) leads to an important finding: when injecting implications with right-hand sides for Freebase relations for which no or very limited training facts are available, the model should be able to infer the validity of Freebase facts for those relations based on rules and correlations between textual surface patterns.\n\nWe inject the same hand-picked relations as used by Rockt\u00e4schel et al. (2015), after removing all Freebase training facts. The lifted rule injection (model FSL) reaches a weighted MAP of 0.35, comparable with 0.38 by the Joint model from Rockt\u00e4schel et al. (2015) (denoted R15-Joint). Note that for this experiment we initialized the Freebase relations implied by the rules with negative random vectors (sampled uniformly from [\u22127.9, \u22128.1]). The reason is that without any negative training facts for these relations, their components can only go up due to the implication loss, and we do not want to get values that are too high before optimization. Figure 1 shows how the relation extraction performance improves when more Freebase relation training facts are added. It effictively measures how well the proposed models, matrix factorization (F), propositionalized rule injection (R15-Joint), and our model (FSL), can make use of the provided rules and correlations between textual surface form pat- Table 2: Top patterns for a randomly sampled dimension in non-restricted and restricted embedding space .\n\n\nModel F (non-restricted) Model FS (restricted)\n\nnsubj<-represent->dobj rcmod->return->prep->to->pobj appos->member->prep->of->pobj->team->nn nn<-return->prep->to->pobj nsubj<-die->dobj nsubj<-return->prep->to->pobj nsubj<-speak->prep->about->pobj rcmod->leave->dobj appos->champion->poss nsubj<-quit->dobj terns and increased fractions of Freebase training facts. Although FSL starts at a lower performance than R15-Joint when no Freebase training facts are present, it outperforms R15-Joint and a plain matrix factorization model by a substantial margin when provided with more than 7.5% of Freebase training facts. This indicates that, in addition to being much faster than R15-Joint, it can make better use of provided rules and few training facts. We attribute this to the Bayesian personalized ranking loss instead of the logistic loss used in Rockt\u00e4schel et al. (2015). The former is compatible with our ruleinjection method, but not with the approach of maximizing the expectation of propositional rules used by R15-Joint.\n\n\nInjecting Knowledge from WordNet\n\nThe main purpose of this work is to be able to incorporate rules from external resources for aid-ing relation extraction. We use WordNet hypernyms to generate rules for the NYT dataset. To this end we iterate over all surface form patterns in the dataset and attempt to replace words in the pattern by their hypernyms. If the resulting pattern is contained in the dataset, we generate the corresponding rule. For instance, we generate a rule appos->diplomat->amod \u21d2 appos->official->amod since both patterns are contained in the NYT dataset and we know from WordNet that a diplomat is an official. This leads to 427 rules from WordNet that we subsequently annotate manually to obtain 36 high-quality rules. Note that none of these rules directly imply a Freebase relation. Although the test relations all originate from Freebase, we still hope to see improvements by transitive effects, i.e., better surface form representations that in turn help to predict Freebase facts.\n\nWe show results obtained by injecting these WordNet rules in Table 1 (column FSL). The weighted MAP measure increases by 2% with respect to model FS, and 4% compared to our reimplementation of the matrix factorization model F. This demonstrates that imposing a partial ordering based on implication rules can be used to incorporate logical commonsense knowledge and increase the quality of information extraction systems. Note that our evaluation setting guarantees that only indirect effects of the rules are measured, i.e., we do not use any rules directly implying test relations. This shows that injecting such rules influences the relation embedding space beyond only the relations explicitly stated in the rules. For example, injecting the rule appos<-father->appos \u21d2 poss<-parent->appos can contribute to improved predictions for the test relation parent/child. \n\n\nVisualizing Relation Embeddings\n\nWe provide a visual inspection of how the structure of the relation embedding space changes when rules are imposed. We select all relations involved in the WordNet rules, and gather them as columns in a single matrix, sorted by increasing 1 norm (values in the 100 dimensions are similarly sorted). Figures 2a  and 2b show the difference between model F (without injected rules) and FSL (with rules). The values of the embeddings in model FSL are more polarized, i.e., we observe stronger negative or positive components than for model F. Furthermore, FSL also reveals a clearer difference between the leftmost (mostly negative, more specific) and right-most (predominantly positive, more general) embeddings (i.e., a clearer separation between positive and negative values in the plot), which results from imposing the order relation in eq. (11) when injecting implications.\n\n\nEfficiency of Lifted Injection of Rules\n\nIn order to get an idea of the time efficiency of injecting rules, we measure the time per epoch when restricting the program execution to a single 2.4GHz CPU core. We measure on average 6.33s per epoch without rules (model FS), against 6.76s and 6.97s when injecting the 36 high-quality WordNet rules and the unfiltered 427 rules (model FSL), respectively. Increasing the amount of injected rules from 36 to 427 leads to an increase of only 3% in computation time, even though in our setup all rule losses are used in every training batch. This confirms the high efficiency of our lifted rule injection method.\n\n\nAsymmetric Character of Implications\n\nIn order to demonstrate that injecting implications conserves their asymmetric nature, we perform the following experiment. After incorporating highquality Wordnet rules r p \u21d2 r q into model FSL we select all of the tuples t p that occur with relation r p in a training fact r p , t p . Matching these with relation r q should result in high values for the scores r q t p , if the implication holds. If however the tuples t q are selected from the training facts r q , t q , and matched with relation r p , the scores r p t q should be much lower if the inverse implication does not hold (in other words, if r q and r p are not equivalent). Table 3 lists the averaged results for 5 example rules, and the average over all relations in WordNet rules, both for the case with injected rules (model FSL), and without rules (model FS). For easier comparison, the scores are mapped to the unit interval via the sigmoid function. This quantity \u03c3(r t) is often interpreted as the probability that the corresponding fact holds (Riedel et al., 2013), but because of the BPR-based training, only differences between scores play a role here. After injecting rules, the average scores of facts inferred by these rules (i.e., column \u03c3(r q t p ) for model FSL) are always higher than for facts (incorrectly) inferred by the inverse rules (column \u03c3(r p t q ) for model FSL). In the fourth example, the inverse rule leads to high scores as well (on average 0.79, vs. 0.98 for the actual rule). This is due to the fact that the daily and newspaper relations are more or less equivalent, such that the components of r p are not much below those of r q . For the last example (the ambassador \u21d2 diplomat rule), the asymmetry in the implication is maintained, although the absolute scores are rather low for these two relations.\n\nThe results for model FS reflect how strongly the implications in either direction are latently present in the training data. We can only conclude that model FS manages to capture the similarity be-rule model FSL model FS r p \u21d2 r q \u03c3(r q t p ) \u03c3(r p t q ) \u03c3(r q t p ) \u03c3(r p t q )  Table 3: Average of \u03c3(r q t) over all inferred facts r q , t p for tuples t p from training items for relation r p , and vice versa, for Wordnet implications r p \u21d2 r q , and model FSL (injected rules) vs. model FS (no rules).\n\ntween relations, but not the asymmetric character of implications. For example, purely based on the training data, it appears to be more likely that the parent relation implies the father relation, than vice versa. This again demonstrates the importance and added value of injecting external rules capturing commonsense knowledge.\n\n\nConclusions\n\nWe presented a novel, fast approach for incorporating first-order implication rules into distributed representations of relations. We termed our approach 'lifted rule injection', as it avoids the costly grounding of first-order implication rules and is thus independent of the size of the domain of entities. By construction, these rules are satisfied for any observed or unobserved fact. The presented approach requires a restriction on the entity-tuple embedding space. However, experiments on a real-world dataset show that this does not impair the expressiveness of the learned representations. On the contrary, it appears to have a beneficial regularization effect. By incorporating rules generated from WordNet hypernyms, our model improved over a matrix factorization baseline for knowledge base completion. Especially for domains where annotation is costly and only small amounts of training facts are available, our approach provides a way to leverage external knowledge sources for inferring facts.\n\nIn future work, we want to extend the proposed ideas beyond implications towards general firstorder logic rules. We believe that supporting conjunctions, disjunctions and negations would enable to debug and improve representation learning based knowledge base completion. Furthermore, we want to integrate these ideas into neural methods beyond matrix factorization approaches.\n\nFigure 1 :\n1Weighted MAP for injecting hand-picked rules as a function of the fraction of Freebase training facts. Comparison between model F (lowest, in blue), R15-Joint (middle, in green) and model FSL (highest, in red).\n\nFigure 2 :\n2Visualization of embeddings (columns) for the relations that appear in the high-quality Word-Net rules, (a) without and (b) with injection of these rules. Values range from -1 (orange) via 0 (white) to 1 (purple). Best viewed in color.\n\n\nappos->ambassador->amod \u21d2 appos->diplomat->amodappos->party->amod \n\u21d2 appos->organization->amod \n0.99 \n0.22 \n0.70 \n0.86 \nposs<-father->appos \n\u21d2 poss<-parent->appos \n0.96 \n0.00 \n0.72 \n0.89 \nappos->prosecutor->nn \n\u21d2 appos->lawyer->nn \n0.99 \n0.01 \n0.87 \n0.80 \nappos->daily->amod \n\u21d2 appos->newspaper->amod \n0.98 \n0.79 \n0.90 \n0.86 \n0.31 \n0.05 \n0.93 \n0.84 \n\naverage over 36 high-quality Wordnet rules \n0.95 \n0.28 \n0.74 \n0.70 \n\n\nAcknowledgmentsThis work was supported by the Research Foundation -Flanders (FWO), Ghent University -iMinds, Microsoft Research through its PhD Scholarship Programme, an Allen Distinguished Investigator Award, and a Marie Curie Career Integration Award.\nTensorFlow: Large-scale machine learning on heterogeneous systems. Mart\u00edn Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg. Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay VasudevanFernanda Vi\u00e9gasOriol Vinyals. Software available from tensorflow.orgMart\u00edn Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefow- icz, Lukasz Kaiser, Manjunath Kudlur, Josh Leven- berg, Dan Man\u00e9, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fer- nanda Vi\u00e9gas, Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, and Xiaoqiang Zheng. 2015. TensorFlow: Large-scale machine learning on heterogeneous systems. Software avail- able from tensorflow.org.\n\nFreebase: a collaboratively created graph database for structuring human knowledge. Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, Jamie Taylor, Proceedings of the 2008 ACM SIGMOD international conference on Management of data. the 2008 ACM SIGMOD international conference on Management of dataACMKurt Bollacker, Colin Evans, Praveen Paritosh, Tim Sturge, and Jamie Taylor. 2008. Freebase: a col- laboratively created graph database for structuring hu- man knowledge. In Proceedings of the 2008 ACM SIGMOD international conference on Management of data, pages 1247-1250. ACM.\n\nRecursive neural networks can learn logical semantics. Christopher Samuel R Bowman, Christopher D Potts, Manning, Proceedings of the 3rd Workshop on Continuous Vector Space Models and their Compositionality (CVSC). the 3rd Workshop on Continuous Vector Space Models and their Compositionality (CVSC)Samuel R Bowman, Christopher Potts, and Christopher D Manning. 2015. Recursive neural networks can learn logical semantics. In Proceedings of the 3rd Workshop on Continuous Vector Space Models and their Compo- sitionality (CVSC).\n\nLifted First-order Probabilistic Inference. Rodrigo De Salvo Braz, Champaign, IL, USA. AAI3290183Ph.D. thesisRodrigo De Salvo Braz. 2007. Lifted First-order Proba- bilistic Inference. Ph.D. thesis, Champaign, IL, USA. AAI3290183.\n\nTyped tensor decomposition of knowledge bases for relation extraction. Kai-Wei Chang, Wen-Tau Yih, Bishan Yang, Christopher Meek, EMNLP. Kai-Wei Chang, Wen-tau Yih, Bishan Yang, and Christo- pher Meek. 2014. Typed tensor decomposition of knowledge bases for relation extraction. In EMNLP, pages 1568-1579.\n\n. W William, Cohen, TensorLog: A Differentiable Deductive Database. ArXiv e-prints. William. W. Cohen. 2016. TensorLog: A Differentiable Deductive Database. ArXiv e-prints, May.\n\nRegularizing relation representations by first-order implications. Thomas Demeester, Tim Rockt\u00e4schel, Sebastian Riedel, NAACL Workshop on Automated Knowledge Base Construction (AKBC). Thomas Demeester, Tim Rockt\u00e4schel, and Sebastian Riedel. 2016. Regularizing relation representations by first-order implications. In NAACL Workshop on Automated Knowledge Base Construction (AKBC).\n\nRetrofitting word vectors to semantic lexicons. Manaal Faruqui, Jesse Dodge, K Sujay, Chris Jauhar, Eduard Dyer, Noah A Hovy, Smith, arXiv:1411.4166arXiv preprintManaal Faruqui, Jesse Dodge, Sujay K Jauhar, Chris Dyer, Eduard Hovy, and Noah A Smith. 2014. Retrofitting word vectors to semantic lexicons. arXiv preprint arXiv:1411.4166.\n\nPpdb: The paraphrase database. Juri Ganitkevitch, Benjamin Van Durme, Chris Callison-Burch, Annual Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL). Juri Ganitkevitch, Benjamin Van Durme, and Chris Callison-Burch. 2013. Ppdb: The paraphrase database. In Annual Conference of the North Ameri- can Chapter of the Association for Computational Lin- guistics (HLT-NAACL), pages 758-764.\n\nZhiting Hu, Xuezhe Ma, Zhengzhong Liu, Eduard Hovy, Eric Xing, arXiv:1603.06318Harnessing deep neural networks with logic rules. arXiv preprintZhiting Hu, Xuezhe Ma, Zhengzhong Liu, Eduard Hovy, and Eric Xing. 2016. Harnessing deep neural networks with logic rules. arXiv preprint arXiv:1603.06318.\n\nAdam: A method for stochastic optimization. Diederik Kingma, Jimmy Ba, arXiv:1412.6980arXiv preprintDiederik Kingma and Jimmy Ba. 2014. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980.\n\nDeriving boolean structures from distributional vectors. German Kruszewski, Denis Paperno, Marco Baroni, Transactions of the Association for Computational Linguistics. 3German Kruszewski, Denis Paperno, and Marco Baroni. 2015. Deriving boolean structures from distributional vectors. Transactions of the Association for Computa- tional Linguistics, 3:375-388.\n\nWordnet: a lexical database for english. A George, Miller, Communications of the ACM. 3811George A Miller. 1995. Wordnet: a lexical database for english. Communications of the ACM, 38(11):39-41.\n\nCompositional vector space models for knowledge base completion. Arvind Neelakantan, Benjamin Roth, Andrew Mc-Callum, arXiv:1504.06662arXiv preprintArvind Neelakantan, Benjamin Roth, and Andrew Mc- Callum. 2015. Compositional vector space mod- els for knowledge base completion. arXiv preprint arXiv:1504.06662.\n\nFactorizing yago: scalable machine learning for linked data. Maximilian Nickel, Hans-Peter Volker Tresp, Kriegel, Proceedings of the 21st international conference on World Wide Web. the 21st international conference on World Wide WebACMMaximilian Nickel, Volker Tresp, and Hans-Peter Kriegel. 2012. Factorizing yago: scalable machine learning for linked data. In Proceedings of the 21st international conference on World Wide Web, pages 271-280. ACM.\n\nA review of relational machine learning for knowledge graphs: From multirelational link prediction to automated knowledge graph construction. Maximilian Nickel, Kevin Murphy, Volker Tresp, Evgeniy Gabrilovich, arXiv:1503.00759arXiv preprintMaximilian Nickel, Kevin Murphy, Volker Tresp, and Evgeniy Gabrilovich. 2015. A review of relational machine learning for knowledge graphs: From multi- relational link prediction to automated knowledge graph construction. arXiv preprint arXiv:1503.00759.\n\nFirst-order probabilistic inference. David Poole, Proceedings of the 18th International Joint Conference on Artificial Intelligence (IJCAI). the 18th International Joint Conference on Artificial Intelligence (IJCAI)San Francisco, CA, USAMorgan Kaufmann Publishers IncDavid Poole. 2003. First-order probabilistic inference. In Proceedings of the 18th International Joint Confer- ence on Artificial Intelligence (IJCAI), pages 985-991, San Francisco, CA, USA. Morgan Kaufmann Publish- ers Inc.\n\nBPR: Bayesian personalized ranking from implicit feedback. Steffen Rendle, Christoph Freudenthaler, Zeno Gantner, Lars Schmidt-Thieme, Proceedings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence (UAI). the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence (UAI)Arlington, Virginia, United StatesAUAI PressSteffen Rendle, Christoph Freudenthaler, Zeno Gantner, and Lars Schmidt-Thieme. 2009. BPR: Bayesian per- sonalized ranking from implicit feedback. In Proceed- ings of the Twenty-Fifth Conference on Uncertainty in Artificial Intelligence (UAI), pages 452-461, Arling- ton, Virginia, United States. AUAI Press.\n\nRelation extraction with matrix factorization and universal schemas. Sebastian Riedel, Limin Yao, Andrew Mccallum, Benjamin M Marlin, Annual Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL). Sebastian Riedel, Limin Yao, Andrew McCallum, and Benjamin M Marlin. 2013. Relation extraction with matrix factorization and universal schemas. In An- nual Conference of the North American Chapter of the Association for Computational Linguistics (HLT- NAACL), pages 74-84.\n\nLearning knowledge base inference with neural theorem provers. Tim Rockt\u00e4schel, Sebastian Riedel, NAACL Workshop on Automated Knowledge Base Construction (AKBC). Tim Rockt\u00e4schel and Sebastian Riedel. 2016. Learn- ing knowledge base inference with neural theorem provers. In NAACL Workshop on Automated Knowl- edge Base Construction (AKBC).\n\nLow-dimensional embeddings of logic. Tim Rockt\u00e4schel, Matko Bosnjak, Sameer Singh, Sebastian Riedel, ACL Workshop on Semantic Parsing. Tim Rockt\u00e4schel, Matko Bosnjak, Sameer Singh, and Se- bastian Riedel. 2014. Low-dimensional embeddings of logic. In ACL Workshop on Semantic Parsing.\n\nInjecting Logical Background Knowledge into Embeddings for Relation Extraction. Tim Rockt\u00e4schel, Sameer Singh, Sebastian Riedel, Annual Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL). Tim Rockt\u00e4schel, Sameer Singh, and Sebastian Riedel. 2015. Injecting Logical Background Knowledge into Embeddings for Relation Extraction. In Annual Con- ference of the North American Chapter of the Associ- ation for Computational Linguistics (HLT-NAACL).\n\nReasoning with neural tensor networks for knowledge base completion. Richard Socher, Danqi Chen, D Christopher, Andrew Manning, Ng, Advances in Neural Information Processing Systems (NIPS). Richard Socher, Danqi Chen, Christopher D Manning, and Andrew Ng. 2013. Reasoning with neural ten- sor networks for knowledge base completion. In Advances in Neural Information Processing Systems (NIPS).\n\nRepresenting text for joint embedding of text and knowledge bases. Kristina Toutanova, Danqi Chen, Patrick Pantel, Hoifung Poon, Pallavi Choudhury, Michael Gamon, EMNLP. Kristina Toutanova, Danqi Chen, Patrick Pantel, Hoi- fung Poon, Pallavi Choudhury, and Michael Gamon. 2015. Representing text for joint embedding of text and knowledge bases. In EMNLP.\n\nIvan Vendrov, Ryan Kiros, abs/1511.06361Sanja Fidler, and Raquel Urtasun. 2016. Order-embeddings of images and language. arXiv preprintIvan Vendrov, Ryan Kiros, Sanja Fidler, and Raquel Ur- tasun. 2016. Order-embeddings of images and lan- guage. arXiv preprint, abs/1511.06361.\n\nRow-less universal schema. Patrick Verga, Andrew Mccallum, NAACL Workshop on Automated Knowledge Base Construction (AKBC). Patrick Verga and Andrew McCallum. 2016. Row-less universal schema. In NAACL Workshop on Automated Knowledge Base Construction (AKBC).\n\nMultilingual relation extraction using compositional universal schema. Patrick Verga, David Belanger, Emma Strubell, Benjamin Roth, Andrew Mccallum, Annual Conference of the North American Chapter of the Association for Computational Linguistics (HLT-NAACL). ACLPatrick Verga, David Belanger, Emma Strubell, Ben- jamin Roth, and Andrew McCallum. 2016. Multilin- gual relation extraction using compositional universal schema. In Annual Conference of the North American Chapter of the Association for Computational Linguis- tics (HLT-NAACL), pages 886-896. ACL.\n\nLearning first-order logic embeddings via matrix factorization. Yang William, William W Wang, Cohen, Proceedings of the 25th International Joint Conference on Artificial Intelligence (IJCAI 2015). the 25th International Joint Conference on Artificial Intelligence (IJCAI 2015)New York, NYAAAIWilliam Yang Wang and William W. Cohen. 2016. Learning first-order logic embeddings via matrix fac- torization. In Proceedings of the 25th International Joint Conference on Artificial Intelligence (IJCAI 2015), New York, NY, July. AAAI.\n\nStructure learning via parameter learning. Yang William, Kathryn Wang, William W Mazaitis, Cohen, Proceedings of the 23rd ACM International Conference on Conference on Information and Knowledge Management. the 23rd ACM International Conference on Conference on Information and Knowledge ManagementACMWilliam Yang Wang, Kathryn Mazaitis, and William W Cohen. 2014. Structure learning via parameter learn- ing. In Proceedings of the 23rd ACM International Conference on Conference on Information and Knowl- edge Management, pages 1199-1208. ACM.\n\nKnowledge base completion using embeddings and rules. Quan Wang, Bin Wang, Li Guo, Proceedings of the 24th International Conference on Artificial Intelligence (IJCAI). the 24th International Conference on Artificial Intelligence (IJCAI)AAAI PressQuan Wang, Bin Wang, and Li Guo. 2015. Knowledge base completion using embeddings and rules. In Pro- ceedings of the 24th International Conference on Ar- tificial Intelligence (IJCAI), pages 1859-1865. AAAI Press.\n\nLarge-scale knowledge base completion: Inferring via grounding network sampling over selected instances. Zhuoyu Wei, Jun Zhao, Kang Liu, Zhenyu Qi, Zhengya Sun, Guanhua Tian, Proceedings of the 24th ACM International on Conference on Information and Knowledge Management (CIKM). the 24th ACM International on Conference on Information and Knowledge Management (CIKM)ACMZhuoyu Wei, Jun Zhao, Kang Liu, Zhenyu Qi, Zhengya Sun, and Guanhua Tian. 2015. Large-scale knowl- edge base completion: Inferring via grounding net- work sampling over selected instances. In Proceed- ings of the 24th ACM International on Conference on Information and Knowledge Management (CIKM), pages 1331-1340. ACM.\n\nStructured embedding via pairwise relations and long-range interactions in knowledge base. Fei Wu, Jun Song, Yi Yang, Xi Li, Zhongfei Zhang, Yueting Zhuang, AAAI Conference on Artificial Intelligence. Fei Wu, Jun Song, Yi Yang, Xi Li, Zhongfei Zhang, and Yueting Zhuang. 2015. Structured embedding via pairwise relations and long-range interactions in knowledge base. In AAAI Conference on Artificial In- telligence, pages 1663-1670.\n", "annotations": {"author": "[{\"end\":246,\"start\":165},{\"end\":327,\"start\":247},{\"end\":404,\"start\":328}]", "publisher": "[{\"end\":88,\"start\":47},{\"end\":664,\"start\":623}]", "author_last_name": "[{\"end\":181,\"start\":172},{\"end\":262,\"start\":251},{\"end\":344,\"start\":338}]", "author_first_name": "[{\"end\":171,\"start\":165},{\"end\":250,\"start\":247},{\"end\":337,\"start\":328}]", "author_affiliation": "[{\"end\":245,\"start\":207},{\"end\":326,\"start\":291},{\"end\":403,\"start\":368}]", "title": "[{\"end\":46,\"start\":1},{\"end\":450,\"start\":405}]", "venue": "[{\"end\":538,\"start\":452}]", "abstract": "[{\"end\":1871,\"start\":689}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b14\"},\"end\":2042,\"start\":2021},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":2062,\"start\":2042},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2082,\"start\":2062},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2101,\"start\":2082},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2126,\"start\":2101},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":2149,\"start\":2126},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":2169,\"start\":2149},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2420,\"start\":2393},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":2446,\"start\":2432},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2620,\"start\":2594},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":2638,\"start\":2620},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2658,\"start\":2638},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":2676,\"start\":2658},{\"end\":2697,\"start\":2676},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2713,\"start\":2697},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2759,\"start\":2733},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4192,\"start\":4179},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4203,\"start\":4192},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":4574,\"start\":4549},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5716,\"start\":5696},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5906,\"start\":5886},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5986,\"start\":5962},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":6465,\"start\":6445},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6884,\"start\":6863},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":7676,\"start\":7656},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9534,\"start\":9509},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":11575,\"start\":11550},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":12076,\"start\":12053},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":13807,\"start\":13781},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":13825,\"start\":13807},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":14380,\"start\":14355},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":14410,\"start\":14385},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":14551,\"start\":14533},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":14681,\"start\":14660},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":15119,\"start\":15102},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":15256,\"start\":15240},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":16123,\"start\":16102},{\"end\":16234,\"start\":16213},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16652,\"start\":16636},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":17125,\"start\":17101},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":17833,\"start\":17808},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18631,\"start\":18606},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":18772,\"start\":18752},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18838,\"start\":18813},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18991,\"start\":18966},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20173,\"start\":20153},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":20565,\"start\":20545},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20617,\"start\":20597},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":20741,\"start\":20720},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":21278,\"start\":21258},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":21703,\"start\":21683},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":22347,\"start\":22322},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":22740,\"start\":22715},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":22926,\"start\":22901},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":24647,\"start\":24622},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29329,\"start\":29308}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32563,\"start\":32340},{\"attributes\":{\"id\":\"fig_1\"},\"end\":32812,\"start\":32564},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33235,\"start\":32813}]", "paragraph": "[{\"end\":2447,\"start\":1887},{\"end\":3209,\"start\":2449},{\"end\":4894,\"start\":3211},{\"end\":5600,\"start\":4896},{\"end\":6432,\"start\":5615},{\"end\":6991,\"start\":6434},{\"end\":7015,\"start\":7012},{\"end\":7340,\"start\":7017},{\"end\":7943,\"start\":7389},{\"end\":8018,\"start\":7979},{\"end\":8127,\"start\":8055},{\"end\":8274,\"start\":8129},{\"end\":8507,\"start\":8304},{\"end\":9120,\"start\":8534},{\"end\":9702,\"start\":9152},{\"end\":10045,\"start\":9730},{\"end\":10218,\"start\":10128},{\"end\":10322,\"start\":10232},{\"end\":10372,\"start\":10360},{\"end\":10738,\"start\":10390},{\"end\":11075,\"start\":10740},{\"end\":11239,\"start\":11077},{\"end\":11683,\"start\":11279},{\"end\":11859,\"start\":11708},{\"end\":12225,\"start\":11861},{\"end\":12395,\"start\":12227},{\"end\":12707,\"start\":12477},{\"end\":12843,\"start\":12740},{\"end\":13488,\"start\":12871},{\"end\":13673,\"start\":13515},{\"end\":14184,\"start\":13675},{\"end\":15932,\"start\":14201},{\"end\":17048,\"start\":15934},{\"end\":17707,\"start\":17050},{\"end\":18123,\"start\":17709},{\"end\":18338,\"start\":18125},{\"end\":18632,\"start\":18340},{\"end\":18936,\"start\":18634},{\"end\":19669,\"start\":18938},{\"end\":20969,\"start\":19697},{\"end\":21857,\"start\":21000},{\"end\":22252,\"start\":21859},{\"end\":22661,\"start\":22275},{\"end\":23770,\"start\":22663},{\"end\":24802,\"start\":23821},{\"end\":25812,\"start\":24839},{\"end\":26683,\"start\":25814},{\"end\":27594,\"start\":26719},{\"end\":28249,\"start\":27638},{\"end\":30096,\"start\":28290},{\"end\":30604,\"start\":30098},{\"end\":30936,\"start\":30606},{\"end\":31960,\"start\":30952},{\"end\":32339,\"start\":31962}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7011,\"start\":6992},{\"attributes\":{\"id\":\"formula_1\"},\"end\":7388,\"start\":7341},{\"attributes\":{\"id\":\"formula_2\"},\"end\":7978,\"start\":7944},{\"attributes\":{\"id\":\"formula_4\"},\"end\":8533,\"start\":8508},{\"attributes\":{\"id\":\"formula_5\"},\"end\":9151,\"start\":9121},{\"attributes\":{\"id\":\"formula_6\"},\"end\":10127,\"start\":10046},{\"attributes\":{\"id\":\"formula_7\"},\"end\":10231,\"start\":10219},{\"attributes\":{\"id\":\"formula_8\"},\"end\":10359,\"start\":10323},{\"attributes\":{\"id\":\"formula_9\"},\"end\":10389,\"start\":10373},{\"attributes\":{\"id\":\"formula_11\"},\"end\":11707,\"start\":11684},{\"attributes\":{\"id\":\"formula_12\"},\"end\":12476,\"start\":12396},{\"attributes\":{\"id\":\"formula_13\"},\"end\":12739,\"start\":12708},{\"attributes\":{\"id\":\"formula_14\"},\"end\":13514,\"start\":13489}]", "table_ref": "[{\"end\":21397,\"start\":21390},{\"end\":22041,\"start\":22032},{\"end\":23672,\"start\":23665},{\"end\":25882,\"start\":25875},{\"end\":28938,\"start\":28931},{\"end\":30386,\"start\":30379}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1885,\"start\":1873},{\"attributes\":{\"n\":\"2\"},\"end\":5613,\"start\":5603},{\"attributes\":{\"n\":\"3\"},\"end\":8053,\"start\":8021},{\"attributes\":{\"n\":\"3.1\"},\"end\":8302,\"start\":8277},{\"attributes\":{\"n\":\"3.2\"},\"end\":9728,\"start\":9705},{\"attributes\":{\"n\":\"3.3\"},\"end\":11277,\"start\":11242},{\"attributes\":{\"n\":\"3.4\"},\"end\":12869,\"start\":12846},{\"attributes\":{\"n\":\"4\"},\"end\":14199,\"start\":14187},{\"attributes\":{\"n\":\"5\"},\"end\":19695,\"start\":19672},{\"attributes\":{\"n\":\"5.1\"},\"end\":20998,\"start\":20972},{\"attributes\":{\"n\":\"5.2\"},\"end\":22273,\"start\":22255},{\"end\":23819,\"start\":23773},{\"attributes\":{\"n\":\"5.3\"},\"end\":24837,\"start\":24805},{\"attributes\":{\"n\":\"5.4\"},\"end\":26717,\"start\":26686},{\"attributes\":{\"n\":\"5.5\"},\"end\":27636,\"start\":27597},{\"attributes\":{\"n\":\"5.6\"},\"end\":28288,\"start\":28252},{\"attributes\":{\"n\":\"6\"},\"end\":30950,\"start\":30939},{\"end\":32351,\"start\":32341},{\"end\":32575,\"start\":32565}]", "table": "[{\"end\":33235,\"start\":32862}]", "figure_caption": "[{\"end\":32563,\"start\":32353},{\"end\":32812,\"start\":32577},{\"end\":32862,\"start\":32815}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":23322,\"start\":23314},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27036,\"start\":27018}]", "bib_author_first_name": "[{\"end\":33563,\"start\":33557},{\"end\":33577,\"start\":33571},{\"end\":33591,\"start\":33587},{\"end\":33606,\"start\":33600},{\"end\":33622,\"start\":33615},{\"end\":33634,\"start\":33629},{\"end\":33646,\"start\":33642},{\"end\":33648,\"start\":33647},{\"end\":33662,\"start\":33658},{\"end\":33677,\"start\":33670},{\"end\":33692,\"start\":33684},{\"end\":33706,\"start\":33700},{\"end\":33720,\"start\":33717},{\"end\":33739,\"start\":33733},{\"end\":33754,\"start\":33746},{\"end\":33770,\"start\":33763},{\"end\":33786,\"start\":33778},{\"end\":33797,\"start\":33792},{\"end\":33816,\"start\":33810},{\"end\":33834,\"start\":33825},{\"end\":34815,\"start\":34811},{\"end\":34832,\"start\":34827},{\"end\":34847,\"start\":34840},{\"end\":34861,\"start\":34858},{\"end\":34875,\"start\":34870},{\"end\":35382,\"start\":35371},{\"end\":35413,\"start\":35400},{\"end\":35906,\"start\":35890},{\"end\":36155,\"start\":36148},{\"end\":36170,\"start\":36163},{\"end\":36182,\"start\":36176},{\"end\":36200,\"start\":36189},{\"end\":36385,\"start\":36384},{\"end\":36387,\"start\":36386},{\"end\":36636,\"start\":36630},{\"end\":36651,\"start\":36648},{\"end\":36674,\"start\":36665},{\"end\":36999,\"start\":36993},{\"end\":37014,\"start\":37009},{\"end\":37023,\"start\":37022},{\"end\":37036,\"start\":37031},{\"end\":37051,\"start\":37045},{\"end\":37064,\"start\":37058},{\"end\":37317,\"start\":37313},{\"end\":37340,\"start\":37332},{\"end\":37357,\"start\":37352},{\"end\":37726,\"start\":37719},{\"end\":37737,\"start\":37731},{\"end\":37752,\"start\":37742},{\"end\":37764,\"start\":37758},{\"end\":37775,\"start\":37771},{\"end\":38071,\"start\":38063},{\"end\":38085,\"start\":38080},{\"end\":38295,\"start\":38289},{\"end\":38313,\"start\":38308},{\"end\":38328,\"start\":38323},{\"end\":38635,\"start\":38634},{\"end\":38860,\"start\":38854},{\"end\":38882,\"start\":38874},{\"end\":38895,\"start\":38889},{\"end\":39173,\"start\":39163},{\"end\":39192,\"start\":39182},{\"end\":39706,\"start\":39696},{\"end\":39720,\"start\":39715},{\"end\":39735,\"start\":39729},{\"end\":39750,\"start\":39743},{\"end\":40092,\"start\":40087},{\"end\":40609,\"start\":40602},{\"end\":40627,\"start\":40618},{\"end\":40647,\"start\":40643},{\"end\":40661,\"start\":40657},{\"end\":41277,\"start\":41268},{\"end\":41291,\"start\":41286},{\"end\":41303,\"start\":41297},{\"end\":41783,\"start\":41780},{\"end\":41806,\"start\":41797},{\"end\":42098,\"start\":42095},{\"end\":42117,\"start\":42112},{\"end\":42133,\"start\":42127},{\"end\":42150,\"start\":42141},{\"end\":42427,\"start\":42424},{\"end\":42447,\"start\":42441},{\"end\":42464,\"start\":42455},{\"end\":42916,\"start\":42909},{\"end\":42930,\"start\":42925},{\"end\":42938,\"start\":42937},{\"end\":42958,\"start\":42952},{\"end\":43310,\"start\":43302},{\"end\":43327,\"start\":43322},{\"end\":43341,\"start\":43334},{\"end\":43357,\"start\":43350},{\"end\":43371,\"start\":43364},{\"end\":43390,\"start\":43383},{\"end\":43595,\"start\":43591},{\"end\":43609,\"start\":43605},{\"end\":43904,\"start\":43897},{\"end\":43918,\"start\":43912},{\"end\":44207,\"start\":44200},{\"end\":44220,\"start\":44215},{\"end\":44235,\"start\":44231},{\"end\":44254,\"start\":44246},{\"end\":44267,\"start\":44261},{\"end\":44758,\"start\":44754},{\"end\":44775,\"start\":44768},{\"end\":44777,\"start\":44776},{\"end\":45267,\"start\":45263},{\"end\":45284,\"start\":45277},{\"end\":45298,\"start\":45291},{\"end\":45300,\"start\":45299},{\"end\":45823,\"start\":45819},{\"end\":45833,\"start\":45830},{\"end\":45842,\"start\":45840},{\"end\":46337,\"start\":46331},{\"end\":46346,\"start\":46343},{\"end\":46357,\"start\":46353},{\"end\":46369,\"start\":46363},{\"end\":46381,\"start\":46374},{\"end\":46394,\"start\":46387},{\"end\":47010,\"start\":47007},{\"end\":47018,\"start\":47015},{\"end\":47027,\"start\":47025},{\"end\":47036,\"start\":47034},{\"end\":47049,\"start\":47041},{\"end\":47064,\"start\":47057}]", "bib_author_last_name": "[{\"end\":33569,\"start\":33564},{\"end\":33585,\"start\":33578},{\"end\":33598,\"start\":33592},{\"end\":33613,\"start\":33607},{\"end\":33627,\"start\":33623},{\"end\":33640,\"start\":33635},{\"end\":33656,\"start\":33649},{\"end\":33668,\"start\":33663},{\"end\":33682,\"start\":33678},{\"end\":33698,\"start\":33693},{\"end\":33715,\"start\":33707},{\"end\":33731,\"start\":33721},{\"end\":33744,\"start\":33740},{\"end\":33761,\"start\":33755},{\"end\":33776,\"start\":33771},{\"end\":33790,\"start\":33787},{\"end\":33808,\"start\":33798},{\"end\":33823,\"start\":33817},{\"end\":33841,\"start\":33835},{\"end\":34825,\"start\":34816},{\"end\":34838,\"start\":34833},{\"end\":34856,\"start\":34848},{\"end\":34868,\"start\":34862},{\"end\":34882,\"start\":34876},{\"end\":35398,\"start\":35383},{\"end\":35419,\"start\":35414},{\"end\":35428,\"start\":35421},{\"end\":35911,\"start\":35907},{\"end\":36161,\"start\":36156},{\"end\":36174,\"start\":36171},{\"end\":36187,\"start\":36183},{\"end\":36205,\"start\":36201},{\"end\":36395,\"start\":36388},{\"end\":36402,\"start\":36397},{\"end\":36646,\"start\":36637},{\"end\":36663,\"start\":36652},{\"end\":36681,\"start\":36675},{\"end\":37007,\"start\":37000},{\"end\":37020,\"start\":37015},{\"end\":37029,\"start\":37024},{\"end\":37043,\"start\":37037},{\"end\":37056,\"start\":37052},{\"end\":37069,\"start\":37065},{\"end\":37076,\"start\":37071},{\"end\":37330,\"start\":37318},{\"end\":37350,\"start\":37341},{\"end\":37372,\"start\":37358},{\"end\":37729,\"start\":37727},{\"end\":37740,\"start\":37738},{\"end\":37756,\"start\":37753},{\"end\":37769,\"start\":37765},{\"end\":37780,\"start\":37776},{\"end\":38078,\"start\":38072},{\"end\":38088,\"start\":38086},{\"end\":38306,\"start\":38296},{\"end\":38321,\"start\":38314},{\"end\":38335,\"start\":38329},{\"end\":38642,\"start\":38636},{\"end\":38650,\"start\":38644},{\"end\":38872,\"start\":38861},{\"end\":38887,\"start\":38883},{\"end\":38905,\"start\":38896},{\"end\":39180,\"start\":39174},{\"end\":39205,\"start\":39193},{\"end\":39214,\"start\":39207},{\"end\":39713,\"start\":39707},{\"end\":39727,\"start\":39721},{\"end\":39741,\"start\":39736},{\"end\":39762,\"start\":39751},{\"end\":40098,\"start\":40093},{\"end\":40616,\"start\":40610},{\"end\":40641,\"start\":40628},{\"end\":40655,\"start\":40648},{\"end\":40676,\"start\":40662},{\"end\":41284,\"start\":41278},{\"end\":41295,\"start\":41292},{\"end\":41312,\"start\":41304},{\"end\":41331,\"start\":41314},{\"end\":41795,\"start\":41784},{\"end\":41813,\"start\":41807},{\"end\":42110,\"start\":42099},{\"end\":42125,\"start\":42118},{\"end\":42139,\"start\":42134},{\"end\":42157,\"start\":42151},{\"end\":42439,\"start\":42428},{\"end\":42453,\"start\":42448},{\"end\":42471,\"start\":42465},{\"end\":42923,\"start\":42917},{\"end\":42935,\"start\":42931},{\"end\":42950,\"start\":42939},{\"end\":42966,\"start\":42959},{\"end\":42970,\"start\":42968},{\"end\":43320,\"start\":43311},{\"end\":43332,\"start\":43328},{\"end\":43348,\"start\":43342},{\"end\":43362,\"start\":43358},{\"end\":43381,\"start\":43372},{\"end\":43396,\"start\":43391},{\"end\":43603,\"start\":43596},{\"end\":43615,\"start\":43610},{\"end\":43910,\"start\":43905},{\"end\":43927,\"start\":43919},{\"end\":44213,\"start\":44208},{\"end\":44229,\"start\":44221},{\"end\":44244,\"start\":44236},{\"end\":44259,\"start\":44255},{\"end\":44276,\"start\":44268},{\"end\":44766,\"start\":44759},{\"end\":44782,\"start\":44778},{\"end\":44789,\"start\":44784},{\"end\":45275,\"start\":45268},{\"end\":45289,\"start\":45285},{\"end\":45309,\"start\":45301},{\"end\":45316,\"start\":45311},{\"end\":45828,\"start\":45824},{\"end\":45838,\"start\":45834},{\"end\":45846,\"start\":45843},{\"end\":46341,\"start\":46338},{\"end\":46351,\"start\":46347},{\"end\":46361,\"start\":46358},{\"end\":46372,\"start\":46370},{\"end\":46385,\"start\":46382},{\"end\":46399,\"start\":46395},{\"end\":47013,\"start\":47011},{\"end\":47023,\"start\":47019},{\"end\":47032,\"start\":47028},{\"end\":47039,\"start\":47037},{\"end\":47055,\"start\":47050},{\"end\":47071,\"start\":47065}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":34725,\"start\":33490},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":207167677},\"end\":35314,\"start\":34727},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":15618372},\"end\":35844,\"start\":35316},{\"attributes\":{\"id\":\"b3\"},\"end\":36075,\"start\":35846},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":1077128},\"end\":36382,\"start\":36077},{\"attributes\":{\"id\":\"b5\"},\"end\":36561,\"start\":36384},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":16518575},\"end\":36943,\"start\":36563},{\"attributes\":{\"doi\":\"arXiv:1411.4166\",\"id\":\"b7\"},\"end\":37280,\"start\":36945},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":6067240},\"end\":37717,\"start\":37282},{\"attributes\":{\"doi\":\"arXiv:1603.06318\",\"id\":\"b9\"},\"end\":38017,\"start\":37719},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b10\"},\"end\":38230,\"start\":38019},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":16470003},\"end\":38591,\"start\":38232},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":1671874},\"end\":38787,\"start\":38593},{\"attributes\":{\"doi\":\"arXiv:1504.06662\",\"id\":\"b13\"},\"end\":39100,\"start\":38789},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":6348464},\"end\":39552,\"start\":39102},{\"attributes\":{\"doi\":\"arXiv:1503.00759\",\"id\":\"b15\"},\"end\":40048,\"start\":39554},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":62068714},\"end\":40541,\"start\":40050},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":10795036},\"end\":41197,\"start\":40543},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":2687019},\"end\":41715,\"start\":41199},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":11066688},\"end\":42056,\"start\":41717},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":17419203},\"end\":42342,\"start\":42058},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":6488690},\"end\":42838,\"start\":42344},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":8429835},\"end\":43233,\"start\":42840},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":2127100},\"end\":43589,\"start\":43235},{\"attributes\":{\"doi\":\"abs/1511.06361\",\"id\":\"b24\"},\"end\":43868,\"start\":43591},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":5332396},\"end\":44127,\"start\":43870},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":9206785},\"end\":44688,\"start\":44129},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":12071886},\"end\":45218,\"start\":44690},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":5722871},\"end\":45763,\"start\":45220},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":3143712},\"end\":46224,\"start\":45765},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":213169},\"end\":46914,\"start\":46226},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":3834409},\"end\":47349,\"start\":46916}]", "bib_title": "[{\"end\":33555,\"start\":33490},{\"end\":34809,\"start\":34727},{\"end\":35369,\"start\":35316},{\"end\":36146,\"start\":36077},{\"end\":36628,\"start\":36563},{\"end\":37311,\"start\":37282},{\"end\":38287,\"start\":38232},{\"end\":38632,\"start\":38593},{\"end\":39161,\"start\":39102},{\"end\":40085,\"start\":40050},{\"end\":40600,\"start\":40543},{\"end\":41266,\"start\":41199},{\"end\":41778,\"start\":41717},{\"end\":42093,\"start\":42058},{\"end\":42422,\"start\":42344},{\"end\":42907,\"start\":42840},{\"end\":43300,\"start\":43235},{\"end\":43895,\"start\":43870},{\"end\":44198,\"start\":44129},{\"end\":44752,\"start\":44690},{\"end\":45261,\"start\":45220},{\"end\":45817,\"start\":45765},{\"end\":46329,\"start\":46226},{\"end\":47005,\"start\":46916}]", "bib_author": "[{\"end\":33571,\"start\":33557},{\"end\":33587,\"start\":33571},{\"end\":33600,\"start\":33587},{\"end\":33615,\"start\":33600},{\"end\":33629,\"start\":33615},{\"end\":33642,\"start\":33629},{\"end\":33658,\"start\":33642},{\"end\":33670,\"start\":33658},{\"end\":33684,\"start\":33670},{\"end\":33700,\"start\":33684},{\"end\":33717,\"start\":33700},{\"end\":33733,\"start\":33717},{\"end\":33746,\"start\":33733},{\"end\":33763,\"start\":33746},{\"end\":33778,\"start\":33763},{\"end\":33792,\"start\":33778},{\"end\":33810,\"start\":33792},{\"end\":33825,\"start\":33810},{\"end\":33843,\"start\":33825},{\"end\":34827,\"start\":34811},{\"end\":34840,\"start\":34827},{\"end\":34858,\"start\":34840},{\"end\":34870,\"start\":34858},{\"end\":34884,\"start\":34870},{\"end\":35400,\"start\":35371},{\"end\":35421,\"start\":35400},{\"end\":35430,\"start\":35421},{\"end\":35913,\"start\":35890},{\"end\":36163,\"start\":36148},{\"end\":36176,\"start\":36163},{\"end\":36189,\"start\":36176},{\"end\":36207,\"start\":36189},{\"end\":36397,\"start\":36384},{\"end\":36404,\"start\":36397},{\"end\":36648,\"start\":36630},{\"end\":36665,\"start\":36648},{\"end\":36683,\"start\":36665},{\"end\":37009,\"start\":36993},{\"end\":37022,\"start\":37009},{\"end\":37031,\"start\":37022},{\"end\":37045,\"start\":37031},{\"end\":37058,\"start\":37045},{\"end\":37071,\"start\":37058},{\"end\":37078,\"start\":37071},{\"end\":37332,\"start\":37313},{\"end\":37352,\"start\":37332},{\"end\":37374,\"start\":37352},{\"end\":37731,\"start\":37719},{\"end\":37742,\"start\":37731},{\"end\":37758,\"start\":37742},{\"end\":37771,\"start\":37758},{\"end\":37782,\"start\":37771},{\"end\":38080,\"start\":38063},{\"end\":38090,\"start\":38080},{\"end\":38308,\"start\":38289},{\"end\":38323,\"start\":38308},{\"end\":38337,\"start\":38323},{\"end\":38644,\"start\":38634},{\"end\":38652,\"start\":38644},{\"end\":38874,\"start\":38854},{\"end\":38889,\"start\":38874},{\"end\":38907,\"start\":38889},{\"end\":39182,\"start\":39163},{\"end\":39207,\"start\":39182},{\"end\":39216,\"start\":39207},{\"end\":39715,\"start\":39696},{\"end\":39729,\"start\":39715},{\"end\":39743,\"start\":39729},{\"end\":39764,\"start\":39743},{\"end\":40100,\"start\":40087},{\"end\":40618,\"start\":40602},{\"end\":40643,\"start\":40618},{\"end\":40657,\"start\":40643},{\"end\":40678,\"start\":40657},{\"end\":41286,\"start\":41268},{\"end\":41297,\"start\":41286},{\"end\":41314,\"start\":41297},{\"end\":41333,\"start\":41314},{\"end\":41797,\"start\":41780},{\"end\":41815,\"start\":41797},{\"end\":42112,\"start\":42095},{\"end\":42127,\"start\":42112},{\"end\":42141,\"start\":42127},{\"end\":42159,\"start\":42141},{\"end\":42441,\"start\":42424},{\"end\":42455,\"start\":42441},{\"end\":42473,\"start\":42455},{\"end\":42925,\"start\":42909},{\"end\":42937,\"start\":42925},{\"end\":42952,\"start\":42937},{\"end\":42968,\"start\":42952},{\"end\":42972,\"start\":42968},{\"end\":43322,\"start\":43302},{\"end\":43334,\"start\":43322},{\"end\":43350,\"start\":43334},{\"end\":43364,\"start\":43350},{\"end\":43383,\"start\":43364},{\"end\":43398,\"start\":43383},{\"end\":43605,\"start\":43591},{\"end\":43617,\"start\":43605},{\"end\":43912,\"start\":43897},{\"end\":43929,\"start\":43912},{\"end\":44215,\"start\":44200},{\"end\":44231,\"start\":44215},{\"end\":44246,\"start\":44231},{\"end\":44261,\"start\":44246},{\"end\":44278,\"start\":44261},{\"end\":44768,\"start\":44754},{\"end\":44784,\"start\":44768},{\"end\":44791,\"start\":44784},{\"end\":45277,\"start\":45263},{\"end\":45291,\"start\":45277},{\"end\":45311,\"start\":45291},{\"end\":45318,\"start\":45311},{\"end\":45830,\"start\":45819},{\"end\":45840,\"start\":45830},{\"end\":45848,\"start\":45840},{\"end\":46343,\"start\":46331},{\"end\":46353,\"start\":46343},{\"end\":46363,\"start\":46353},{\"end\":46374,\"start\":46363},{\"end\":46387,\"start\":46374},{\"end\":46401,\"start\":46387},{\"end\":47015,\"start\":47007},{\"end\":47025,\"start\":47015},{\"end\":47034,\"start\":47025},{\"end\":47041,\"start\":47034},{\"end\":47057,\"start\":47041},{\"end\":47073,\"start\":47057}]", "bib_venue": "[{\"end\":35033,\"start\":34967},{\"end\":35615,\"start\":35531},{\"end\":39335,\"start\":39284},{\"end\":40287,\"start\":40191},{\"end\":40879,\"start\":40770},{\"end\":44978,\"start\":44887},{\"end\":45517,\"start\":45426},{\"end\":46001,\"start\":45933},{\"end\":46592,\"start\":46505},{\"end\":33857,\"start\":33843},{\"end\":34965,\"start\":34884},{\"end\":35529,\"start\":35430},{\"end\":35888,\"start\":35846},{\"end\":36212,\"start\":36207},{\"end\":36466,\"start\":36404},{\"end\":36745,\"start\":36683},{\"end\":36991,\"start\":36945},{\"end\":37482,\"start\":37374},{\"end\":37846,\"start\":37798},{\"end\":38061,\"start\":38019},{\"end\":38398,\"start\":38337},{\"end\":38677,\"start\":38652},{\"end\":38852,\"start\":38789},{\"end\":39282,\"start\":39216},{\"end\":39694,\"start\":39554},{\"end\":40189,\"start\":40100},{\"end\":40768,\"start\":40678},{\"end\":41441,\"start\":41333},{\"end\":41877,\"start\":41815},{\"end\":42191,\"start\":42159},{\"end\":42581,\"start\":42473},{\"end\":43028,\"start\":42972},{\"end\":43403,\"start\":43398},{\"end\":43710,\"start\":43631},{\"end\":43991,\"start\":43929},{\"end\":44386,\"start\":44278},{\"end\":44885,\"start\":44791},{\"end\":45424,\"start\":45318},{\"end\":45931,\"start\":45848},{\"end\":46503,\"start\":46401},{\"end\":47115,\"start\":47073}]"}}}, "year": 2023, "month": 12, "day": 17}