{"id": 206594275, "updated": "2023-09-27 22:38:16.91", "metadata": {"title": "A Large Dataset to Train Convolutional Networks for Disparity, Optical Flow, and Scene Flow Estimation", "authors": "[{\"first\":\"Nikolaus\",\"last\":\"Mayer\",\"middle\":[]},{\"first\":\"Eddy\",\"last\":\"Ilg\",\"middle\":[]},{\"first\":\"Philip\",\"last\":\"Hausser\",\"middle\":[]},{\"first\":\"Philipp\",\"last\":\"Fischer\",\"middle\":[]},{\"first\":\"Daniel\",\"last\":\"Cremers\",\"middle\":[]},{\"first\":\"Alexey\",\"last\":\"Dosovitskiy\",\"middle\":[]},{\"first\":\"Thomas\",\"last\":\"Brox\",\"middle\":[]}]", "venue": "ArXiv", "journal": "2016 IEEE Conference on Computer Vision and Pattern Recognition (CVPR)", "publication_date": {"year": 2015, "month": null, "day": null}, "abstract": "Recent work has shown that optical flow estimation can be formulated as a supervised learning task and can be successfully solved with convolutional networks. Training of the so-called FlowNet was enabled by a large synthetically generated dataset. The present paper extends the concept of optical flow estimation via convolutional networks to disparity and scene flow estimation. To this end, we propose three synthetic stereo video datasets with sufficient realism, variation, and size to successfully train large networks. Our datasets are the first large-scale datasets to enable training and evaluating scene flow methods. Besides the datasets, we present a convolutional network for real-time disparity estimation that provides state-of-the-art results. By combining a flow and disparity estimation network and training it jointly, we demonstrate the first scene flow estimation with a convolutional network.", "fields_of_study": "[\"Computer Science\",\"Mathematics\"]", "external_ids": {"arxiv": "1512.02134", "mag": "3100388886", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/cvpr/MayerIHFCDB16", "doi": "10.1109/cvpr.2016.438"}}, "content": {"source": {"pdf_hash": "03ae7d364ff25aa21fa9f5b682c38f1a7ac46bef", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/1512.02134v1.pdf\"]", "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/1512.02134", "status": "GREEN"}}, "grobid": {"id": "db8c6f661dd0a1efe338e6fac5518a89d4211422", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/03ae7d364ff25aa21fa9f5b682c38f1a7ac46bef.txt", "contents": "\nA Large Dataset to Train Convolutional Networks for Disparity, Optical Flow, and Scene Flow Estimation\n\n\nNikolaus Mayer \nUniversity of Freiburg\n\n\nEddy Ilg \nUniversity of Freiburg\n\n\nPhilip H\u00e4usser \nTechnical University of Munich\nTechnical University of Munich\nUniversity of Freiburg\n\n\nPhilipp Fischer fischer@cs.uni-freiburg.de2haeusser@cs.tum.edu \nUniversity of Freiburg\n\n\nDaniel Cremers cremers@tum.de \nAlexey Dosovitskiy dosovits@cs.uni-freiburg.de \nThomas Brox brox@cs.uni-freiburg.de \nA Large Dataset to Train Convolutional Networks for Disparity, Optical Flow, and Scene Flow Estimation\n\nRecent work has shown that optical flow estimation can be formulated as a supervised learning task and can be successfully solved with convolutional networks. Training of the so-called FlowNet was enabled by a large synthetically generated dataset. The present paper extends the concept of optical flow estimation via convolutional networks to disparity and scene flow estimation. To this end, we propose three synthetic stereo video datasets with sufficient realism, variation, and size to successfully train large networks. Our datasets are the first large-scale datasets to enable training and evaluating scene flow methods. Besides the datasets, we present a convolutional network for real-time disparity estimation that provides state-of-the-art results. By combining a flow and disparity estimation network and training it jointly, we demonstrate the first scene flow estimation with a convolutional network. * These authors contributed equally \u2020 Supported by the Deutsche Telekom Stiftung\n\nIntroduction\n\nEstimating scene flow means providing the depth and 3D motion vectors of all visible points in a stereo video. It is the \"royal league\" task when it comes to reconstruction and motion estimation and provides an important basis for numerous higher-level challenges such as advanced driver assistance and autonomous systems. Research over the last decades has focused on its subtasks, namely disparity estimation and optical flow estimation, with considerable success. The full scene flow problem has not been explored to the same extent. While partial scene flow can be simply assembled from the subtask results, it is expected that the joint estimation of all components would be advantageous, Figure 1. Our datasets provide over 35 000 stereo frames with dense ground truth for optical flow, disparity and disparity change, as well as other data such as object segmentation.\n\nwith regard to both efficiency and accuracy. One reason for scene flow being less explored than its subtasks seems to be a shortage of fully annotated ground truth data.\n\nThe availability of such data has become even more important in the era of convolutional networks. Dosovitskiy et al. [4] showed that optical flow estimation can be posed as a supervised learning problem and can be solved with a large network. For training their network, they created a simple synthetic 2D dataset of flying chairs, which proved to be sufficient to predict accurate optical flow in general videos. These results suggest that also disparities and scene flow can be estimated via a convolutional network, ideally jointly, efficiently, and in real-time. What is missing to implement this idea is a large dataset with sufficient realism and variability to train such a network and to evaluate its performance. Dataset MPI Sintel [2] KITTI Benchmark Suite [17] SUN3D [27] NYU2 [18] Ours  Table 1. Comparison of available datasets: Our new collection offers more annotated data and greater data variety than any existing choice. All our data has fully contiguous, dense, accurate ground truth.\n\nIn this paper, we present a collection of three such datasets, made using a customized version of the open source 3D creation suite Blender 3 . Our effort is similar in spirit to the Sintel benchmark [2]. In contrast to Sintel, our dataset is large enough to facilitate training of convolutional networks, and it provides ground truth for scene flow. In particular, it includes stereo color images and ground truth for bidirectional disparity, bidirectional optical flow and disparity change, motion boundaries, and object segmentation. Moreover, the full camera calibration and 3D point positions are available, i.e. our dataset also covers RGBD data.\n\nWe cannot exploit the full potential of this dataset in a single paper, but we already demonstrate various usage examples in conjunction with convolutional network training. We train a network for disparity estimation, which yields competitive performance also on previous benchmarks, especially among those methods that run in real-time. Finally, we also present a network for scene flow estimation and provide the first quantitative numbers on full scene flow on a sufficiently sized test set.\n\n\nRelated Work\n\nDatasets. The first significant efforts to create standard datasets were the Middlebury datasets for stereo disparity estimation [22] and optical flow estimation [1]. While the stereo dataset consists of real scenes, the optical flow dataset is a mixture of real scenes and rendered scenes. Both datasets are very small in today's terms. Especially the small test sets have led to heavy manual overfitting. An advantage of the stereo dataset is the availability of relevant real scenes, especially in the latest high-resolution version from 2014 [21].\n\nMPI Sintel [2] is an entirely synthetic dataset derived from a short open source animated 3D movie. It provides dense ground truth for optical flow. Since very recently, a beta testing version of disparities is available for training.\n\nWith 1064 training frames, the Sintel dataset is the largest dataset currently available. It contains sufficiently realistic scenes including natural image degradations such as fog and motion blur. The authors put much effort into the correctness of the ground truth for all frames and pixels. This makes the dataset a very reliable test set for comparison of methods. However, for training convolutional networks, the dataset is still too small.\n\nThe KITTI dataset was produced in 2012 [8] and extended in 2015 [17]. It contains stereo videos of road scenes from a calibrated pair of cameras mounted on a car. Ground truth for optical flow and disparity is obtained from a 3D laser scanner combined with the egomotion data of the car. While the dataset contains real data, the acquisition method restricts the ground truth to static parts of the scene. Moreover, the laser only provides sparse data up to a certain distance and height. For the most recent version, 3D models of cars were fitted to the point clouds to obtain a denser labeling and to include also moving objects. However, the ground truth in these areas is still an approximation.\n\nDosovitskiy et al. [4] trained convolutional networks for optical flow estimation on a synthetic dataset of moving 2D chair images superimposed on natural background images. This dataset is large but limited to single-view optical flow. It does not contain 3D motions and is not yet publicly available.\n\nBoth the latest Sintel dataset and the KITTI dataset can be used to estimate scene flow with some restrictions. In occluded areas (visible in one frame but not in the other), ground truth for scene flow is not available. On KITTI, the most interesting component of scene flow, namely the 3D motion of points, is missing or approximated via fitted CAD models of cars. A comprehensive overview of the most important comparable datasets and their features is given in Table 1.\n\nConvolutional networks. Convolutional networks [16] have proven very successful for a variety of recognition tasks, such as image classification [15]. Recent applications of convolutional networks include also depth estima-tion from single images [6], stereo matching [28], and optical flow estimation [4].\n\nThe FlowNet of Dosovitskiy et al. [4] is most related to our work. It uses an encoder-decoder architecture with additional crosslinks between contracting and expanding network parts, where the encoder computes abstract features from receptive fields of increasing size, and the decoder reestablishes the original resolution via an expanding upconvolutional architecture [5]. We adapt this approach for disparity estimation.\n\nThe disparity estimation method in\u017dbontar et al. [28] uses a Siamese network for computing matching distances between image patches. To actually estimate the disparity, the authors then perform cross-based cost aggregation [29] and semi-global matching (SGM) [11]. In contrast to our work,\u017dbontar et al. have no end-to-end training of a convolutional network on the disparity estimation task, with corresponding consequences for computational efficiency and elegance.\n\nScene flow. While there are hundreds of papers on disparity estimation and optical flow estimation, there are only a few on scene flow. None of them uses a learning approach.\n\nScene flow estimation was popularized for the first time by the work of Vedula et al. [23] who analyzed different possible problem settings. Later works were dominated by variational methods. Huguet and Devernay [12] formulated scene flow estimation in a joint variational approach. Wedel et al. [26] followed the variational framework but decoupled the disparity estimation for larger efficiency and accuracy. Vogel et al. [25] combined the task of scene flow estimation with superpixel segmentation using a piecewise rigid model for regularization. Quiroga et al. [19] extended the regularizer further to a smooth field of rigid motion. Like Wedel et al. [26] they decoupled the disparity estimation and replaced it by the depth values of RGBD videos.\n\nThe fastest method in KITTI's scene flow top 7 is from Cech et al. [3] with a runtime of 2.4 seconds. The method employs a seed growing algorithm for simultaneous disparity and optical flow estimation.\n\n\nDefinition of Scene Flow\n\nOptical flow is a projection of the world's 3D motion onto the image plane. Commonly, scene flow is considered as the underlying 3D motion field that can be computed from stereo videos or RGBD videos. Assume two successive time frames t and t + 1 of a stereo pair, yielding four images (I t L , I t R , I t+1 L , I t+1 R ). Scene flow provides for each visible point in one of these four images the point's 3D position and its 3D motion vector [24].\n\nThese 3D quantities can be computed only in the case of known camera intrinsics and extrinsics. A cameraindependent definition of scene flow is obtained by the separate components optical flow, the disparity, and the dispar-  Figure 2. Given stereo images at times t\u22121, t and t+1, the arrows indicate disparity and flow relations between them. The red components are commonly used to estimate scene flow. In our datasets we provide all relations including the blue arrows.\n\nity change [12], cf. Fig. 2. This representation is complete in the sense that the visible 3D points and their 3D motion vectors can be computed from the components if the camera parameters are known.\n\nGiven the disparities at t and t+1, the disparity change is almost redundant. Thus, in the KITTI 2015 scene flow benchmark [17], only optical flow and disparities are evaluated. In this case, scene flow can be reconstructed only for surface points that are visible in both the left and the right frame. Especially in the context of convolutional networks, it is particularly interesting to estimate also depth and motion in partially occluded areas. Moreover, reconstruction of the 3D motions from flow and disparities is more sensitive to noise, because a small error in the optical flow can lead to a large error in the 3D motion vector.\n\n\nThree Rendered Datasets\n\nWe created a synthetic dataset suite that consists of three subsets and provides the complete ground truth scene flow (incl. disparity change) in forward and backward direction. To this end, we used the open source 3D creation suite Blender to animate a large number of objects with complex motions and to render the results into tens of thousands of frames. We modified the pipeline of Blender's internal render engine to produce -besides stereo RGB images -three additional data passes per frame and view. These provide 3D positions of all visible surface points, as well as their future and past 3D positions. The pixelwise difference between two such data passes for a given camera view results in an \"image\" of 3D motion vectors -the complete scene flow ground truth as seen by this camera. Note that the information is complete even in occluded regions since the render engine always has full knowledge about all (visible and invisible) scene points. All non-opaque materials -notably, most car windows -were rendered as fully transparent to avoid consistency problems in the 3D data.\n\nGiven the intrinsic camera parameters (focal length, principal point) and the render settings (image size, virtual sensor size and format), we project the 3D motion vector of each pixel into a 2D pixel motion vector coplanar to the imaging plane: the optical flow. Depth is directly retrieved from a pixel's 3D position and converted to disparity using the known configuration of the virtual stereo rig. We compute the disparity change from the depth component of the 3D motion vector. An example of the results is shown in Fig. 1.\n\nIn addition, we rendered object segmentation masks in which each pixel's value corresponds to the unique index of its object. Objects can consist of multiple subparts, of which each can have a separate material (with own appearance properties such as textures). We make use of this and render additional segmentation masks, where each pixel encodes its material's index. The recently available beta version of Sintel also includes this data.\n\nSimilar to the Sintel dataset, we also provide motion boundaries which highlight pixels between at least two moving objects, if the following holds: The difference in motion between the two frames is at least 1.5 pixels, and the boundary segment covers an area of at least 10 pixels. The thresholds were chosen to match the results of Sintel's segmentation.\n\nFor all frames and views, we provide the full camera intrinsics and extrinsics matrices. Those can be used for structure from motion or other tasks that require camera tracking. We rendered all image data using a virtual focal length of 35mm on a 32mm wide simulated sensor. For the Driving dataset we added a wide-angle version using a focal length of 15mm which is visually closer to the existing KITTI datasets.\n\nLike the Sintel dataset, our datasets also include two distinct versions of every image: the clean pass shows colors, textures and scene lighting but no image degradations, while the final pass additionally includes postprocessing effects such as simulated depth-of-field blur, motion blur, sunlight glare, and gamma curve manipulation.\n\nTo handle the massive amount of data (2.5 TB), we compressed all RGB image data to the lossy but high-quality WebP 4 format. Non-RGB data was compressed losslessly using LZO 5 .\n\n\nFlyingThings3D\n\nThe main part of the new data collection consists of everyday objects flying along randomized 3D trajectories. We generated about 25 000 stereo frames with ground truth data. Instead of focusing on a particular task (like KITTI) or enforcing strict naturalism (like Sintel), we rely on randomness and a large pool of rendering assets to generate orders of magnitude more data than any existing option, without running a risk of repetition or saturation. Data generation is fast, fully automatic, and yields dense accurate ground truth for the complete scene flow task. The motivation for creating this dataset is to facilitate training of large convolutional networks, which should benefit from the large variety.\n\nThe base of each scene is a large textured ground plane. We generated 200 static background objects with shapes that were randomly chosen from cuboids and cylinders. Each object was randomly scaled, rotated, textured and then placed on the ground plane.\n\nTo populate the scene, we downloaded 35 927 detailed 3D models from Stanford's ShapeNet [20] 6 database. From these we assembled a training set of 32 872 models and a testing set of size 3 055. Also the model categories were split disjointly.\n\nWe sampled between 5 and 20 random objects from this object collection and randomly textured every material of every object. Each ShapeNet object was translated and rotated along a smooth 3D trajectory modeled such that the camera can see the object, but with randomized displacements. The camera was animated, too.\n\nThe texture collection was a combination of procedural images created using ImageMagick 7 , landscape and cityscape photographs from Flickr 8 , and texture-style pho-\n\n\nKITTI 2015\n\nDriving (ours) Figure 4. Example frames from the 2015 version of the KITTI benchmark suite [17] and our new Driving dataset. Both show many static and moving cars from various realistic viewpoints, thin objects, complex shadows, textured ground, and challenging specular reflections. tographs from Image*After 9 . Like the 3D models, also the textures were split into disjoint training and testing parts.\n\nFor the final pass images, the scenes vary in presence and intensity of motion blur and defocus blur.\n\n\nMonkaa\n\nThe second part of our dataset is made from the open source Blender assets of the animated short film Monkaa 10 . In this regard, it resembles the MPI Sintel dataset. Monkaa contains nonrigid and softly articulated motion as well as visually challenging fur. Beyond that, there are few visual similarities to Sintel; the Monkaa movie does not strive for the same amount of naturalism.\n\nWe selected a number of suitable movie scenes and additionally created entirely new scenes using parts and pieces from Monkaa. To increase the amount of data, we rendered our selfmade scenes in multiple versions, each with random incremental changes to the camera's translation and rotation keyframes.\n\n\nDriving\n\nThe Driving scene is a mostly naturalistic, dynamic street scene from the viewpoint of a driving car, made to resemble the KITTI datasets. It uses car models from the same pool as the FlyingThings3D dataset and additionally employs highly detailed tree models from 3D Warehouse 11 and simple street lights. In Fig. 4 we show selected frames from Driving and lookalike frames from KITTI 2015.\n\nOur stereo baseline is set to 1 Blender unit, which together with a typical car model width of roughly 2 units is comparable to KITTI's setting (54cm baseline, 186cm car width [8]). 9 http://www.imageafter.com/textures.php 10 https://cloud.blender.org/bi/monkaa/ 11 https://3dwarehouse.sketchup.com/\n\n\nNetworks\n\nTo prove the applicability of our new synthetic datasets to scene flow estimation, we use it to train convolutional networks. In general, we follow the architecture of FlowNet [4]. That is, each network consists of a contractive part and an expanding part with long-range links between them. The contracting part contains convolutional layers with occasional strides of 2, resulting in a total downsampling factor of 64. This allows the network to estimate large displacements. The expanding part of the network then gradually and nonlinearly upsamples the feature maps, taking into account also the features from the contractive part. This is done by a series of up-convolutional and convolutional layers. Note that there is no data bottleneck in the network, as information can also pass through the longrange connections between contracting and expanding layers. For an illustration of the overall architecture we refer to the figures in Dosovitskiy et al. [4].\n\nFor disparity estimation we propose the basic architecture DispNet described in Table 2. We found that additional convolutions in the expanding part yield smoother disparity maps than the FlowNet architecture; see Figure 6.\n\nWe also tested an architecture that makes use of an explicit correlation layer [4], which we call DispNetCorr. In this network, the two images are processed separately up to layer conv2 and the resulting features are then correlated horizontally. We consider a maximum displacement of 40 pixels, which corresponds to 160 pixels in the input image. Compared to the 2D correlation in Dosovitskiy et al. [4], 1D correlation is computationally much cheaper and allows us to cover larger displacements with finer sampling than in the FlowNet, which used a stride of 2 for the correlation.\n\nWe train a joint network for scene flow estimation by combining and fine-tuning pretrained networks for disparity and flow. This is illustrated in Figure 5. We use our implementation of FlowNet to predict flow between the left and right image and two DispNets to predict the disparities at t and t + 1. We then fine-tune the large combined network to estimate flow, disparity, and additionally disparity change.\n\nTraining. All networks are trained end-to-end, given the images as input and the ground truth (optical flow, disparity, or scene flow) as output. We employ a custom version of Caffe [13] and make use of the Adam optimizer [14]. We set \u03b2 1 = 0.9 and \u03b2 2 = 0.999 as in Kingma et al. [14]. As learning rate we used \u03bb = 1e \u2212 4 and divided it by 2 every 200 000 iterations starting from iteration 400 000.\n\nDue to the depth of the networks and the direct connections between contracting and expanding layers (see Table 2), lower layers get mixed gradients if all six losses are active. We found that using a loss weight schedule can be beneficial: we start training with a loss weight of 1 assigned to the lowest resolution loss loss6 and a weight of 0 for all other losses (that is, all other losses are switched off). During training, we progressively increase the weights of losses with higher resolution and deactivate the low resolution losses. This enables the network to first learn a coarse representation and then proceed with finer resolutions without losses constraining intermediate features.\n\nData Augmentation. Despite the large training set, we chose to perform data augmentation to introduce more diversity into the training data at almost no extra cost 12 . We perform spatial transformations (rotation, translation, cropping, scaling) and chromatic transformations (color, contrast, brightness), and we use the same transformation for all 2 or 4 input images. 12 The computational bottleneck is in reading the training samples from disk, whereas data augmentation is performed on the fly. For disparity, introducing any rotation or vertical shift would break the epipolar constraint. Horizontal shifts would lead to negative disparities or shifting infinity towards the camera.\n\n\nExperiments\n\nEvaluation of existing methods. We evaluated several existing disparity and optical flow estimation methods on our new dataset. Namely, for disparity we evaluate the state-of-the-art method of\u017dbontar and LeCun [28] and the popular Semi-Global Matching [11] approach with a block matching implementation from OpenCV 13 . Results are shown together with those of our DispNets in Table 3. We use the endpoint error (EPE) as error measure in most cases, with the only exception of KITTI 2015 test set where only the D1-all error measure is reported by the KITTI evaluation server. It is the percentage of pixels for which the estimation error is larger than 3px and larger than 5% of the ground truth disparity at this pixel. DispNet. We train DispNets on the FlyingThings3D dataset and then optionally fine-tune it on KITTI. The finetuned networks are denoted by '-K' suffix in the table. Disp-NetCorr fine-tuned on KITTI 2015 is currently second best in the KITTI 2015 top results table, slightly behind MC-CNN-acrt [28], while being roughly 1000 times faster. On KITTI resolution it runs at 15 frames per second on an Nvidia GTX TitanX GPU. For foreground pixels (belonging to car models) it reaches an error that is roughly half the error of [28]. The network achieves about 30% lower error than the best real-time method reported in the table, Multi-Block-Matching [7]. Also on the other datasets DispNet performs well and outperforms both SGM and MC-CNN.\n\nWhile fine-tuning on KITTI improves the results on this dataset, it increases errors on other datasets. We explain this significant performance drop by the fact that KITTI 2015 only contains relatively small disparities, up to roughly 150 pixels, while the other datasets contain some disparities of 500 pixels and more. When fine-tuned on KITTI, the network seems to lose its ability to predict large displacements, hence making huge errors on these.\n\nWe introduced several modifications to the network architecture compared to the FlowNet [4]. First, we added convolutional layers between up-convolutional layers in the expanding part of the network. As expected, this allows the network to better regularize the disparity map and predict smoother results, as illustrated in Figure 6. Quantitatively, this results in roughly 15% relative EPE decrease on KITTI-2015.\n\nSecond, we trained a version of our network with a 1D correlation layer. In contrast to Dosovitskiy et al. [4], we find that networks with correlation are systematically better (see Table 3). A likely plausible explanation is that the 1D nature of the disparity estimation problem allows us to compute correlations at a finer grid than the FlowNet.\n\nSceneFlowNet. We present early results on full scene flow estimation with a convolutional network. Figure 8 shows the results of the network for one FlyingThings scene. The network is able to predict disparity change well, even in the regions which get occluded. Due to the large amount of data that has to be processed when training for scene flow, the network training is relatively slow (a forward pass of the network takes 0.28s, 5 times longer than on a DispNet) and has not converged yet. We expect the results to further improve as we allow the network to train longer. A quantitative evaluation on our datasets is shown in Table 4.\n\n\nConclusion\n\nWe have introduced a synthetic dataset containing over 35 000 stereo image pairs with ground truth disparity, optical flow, and scene flow. While our motivation was to create a sufficiently large dataset that is suitable to train convolutional networks to estimate these quantities, the dataset can also serve for evaluation of other methods. This is particularly interesting for scene flow, where there has been a lack of datasets with ground truth.\n\nWe have demonstrated that the dataset can indeed be used to successfully train large convolutional networks: the network we trained for disparity estimation is on par with the state of the art and runs 1000 times faster. A first approach of training the network for scene flow estimation using a standard network architecture also shows promising results. We are convinced that our dataset will help to boost deep learning research for such challenging vision tasks as stereo, flow and scene flow estimation.  \n\n\nIntroduction\n\nDue to space limitations in the paper, this supplemental material contains a more detailed description of the dataset generation process (Section 2) as well as more details and more qualitative results of DispNet (Section 3).\n\n\nDataset creation details\n\nWe modified the pipeline of Blender's 1 internal render engine to produce -besides stereo RGB images -three additional data passes per frame and stereo view. Fig. 2 gives a visual breakdown of this data:\n\n\u2022 In the base pass (3DPos t ), each pixel stores the true 3D position of the scene point which projects into that pixel (the 3D position is given within the camera coordinate system).\n\n\u2022 For the second pass (3DPos t\u22121 ), we revert time to the previous frame t\u22121 and save all vertices' 3D positions at that time. We then return to the current frame t and use the vertex 3D positions at time t to project the 3D vertices of time t \u2212 1 into image space. Hence, we again store 3D positions for each pixel, but this time the 3D positions from time t\u22121 using the projection at time t.\n\n\u2022 The third pass (3DPos t+1 ) is analogous to the second pass, except that this time we use the subsequent frame t+1 instead of the previous frame t\u22121.  These three data structures contain all information about the 3D structure and 3D motion of the scene as seen from the current viewpoint. From the 3DPos data we generate the scene flow data. Fig. 3 describes the data conversion steps from the blender output to the resulting dataset. Note that color images and segmentation masks are directly produced by Blender and do not need any post-processing. Together with the camera intrinsics and extrinsics, various data can be generated, including calibrated RGBD images. Fig. 4 shows example segmentation masks for a frame from one of our datasets. Materials can be shared across objects, but the combination of object indices and material Project to pixel space:\nPix i := K \u00b7 3DPos i Pixelwise Pix t\u22121 \u2212 Pix t Pixelwise Pix t+1 \u2212 Pix t\nOptical ow into future Optical ow into past\nDepth t\u22121 Depth t Depth t+1 Extract Z channel Disp t\u22121 Disp t Disp t+1\nDepth to disparity:\nDisp i := (Depth i \u00b7 b) \u00b7 f \u22121 Disparity Pixelwise Disp t\u22121 \u2212Disp t Pixelwise Disp t+1 \u2212Disp t\nDisp. change into future\n\nDisp. change into past OUTPUTS Figure 3. Data generation overview for a single view at frame time t: Blender directly outputs the Final pass and Clean pass images, as well as the object-level and material-level segmentation masks. Disparity is directly obtained from depth, which is given by the Z channel of the current 3DPos map as described in Fig. 2 (b is the stereo baseline, f denotes the focal length). Subtracting the current disparity map from the future/past disparity map results in the disparity change in future/past direction. The original 3DPos images are projected from camera space into pixel space using the camera intrinsics matrix K. Subtracting the current pixel position image from the future/past pixel position images yields the optical flow into the future/past.\n\nindices yields a unique oversegmentation of a scene (consistent across all frames of the scene). While our experiments do not make use of these data, for other applications we also include the object and material IDs in our dataset.\n\nWith this supplemental material, we also provide a video that demonstrates the datasets we created and the final outcome of the pipeline, i.e. optical flow, disparity, disparity change and object and material index ground truth.\n\n\nDispNetCorr\n\nIntuitively, the simple DispNet disparity estimation architecture (as described in the main paper) has to learn the concept of matching parts of different images in rectified stereo images from scratch. Since the structure of the prob- Material indices can be shared across objects, but can be combined with the object indices to yield an oversegmentation into parts.\n\nlem is well known (correspondences can only be found in accordance with the epipolar geometry [9]), we introduced an alternative architecture -the DispNetCorr -in which we explicitly correlate features along horizontal scanlines. While the DispNet uses two stacked RGB images as a single input (i.e. one six-channel input blob), the Disp-NetCorr architecture first processes the input images separately, then correlates features between the two images and further processes the result. This behavior is similar to the correlation architecture used in [4] where Dosovitskiy et al. constructed a 2D correlation layer with limited neighborhood size and different striding in each of the images. For disparity estimation, we can use a simpler approach without striding and with larger neighborhood size, because the correlation along one dimension is computationally less demanding. One can additionally reduce the amount of comparisons by limiting the search to only one direction. For example, if we are given a left camera image and look for correspondences within the right camera image, then all disparity displacements are to the left.\n\nGiven two feature blobs a and b with multiple channels and identical sizes, we compute a correlation map of the same width and height, but with D channels, where D is the number of possible disparity values. For one pixel at location (x, y) in the first feature blob a, the resulting correlation entry at channel d \u2208 [0, D \u2212 1] is the scalar product of the two feature vectors a (x,y) and b (x\u2212d,y) .\n\n\nQualitative Examples\n\nWe show a qualitative evaluation of our networks for disparity estimation and compare them to other approaches in This shows that the finetuned networks do not simply oversmooth, but are still able to find small structures and disparity discontinuities.\n\nFigure 3 .\n3Example scenes from our FlyingThings3D dataset. 3rd row: Optical flow images, 4th row: Disparity images, 5th row: Disparity change images. Best viewed on a color screen in high resolution (images normalized for display).\n\nFigure 5 .\n5Interleaving the weights of a FlowNet (green) and two DispNets (red and blue) to a SceneFlowNet. For every layer, the filter masks are created by taking the weights of one network (left) and setting the weights of the other networks to zero, respectively (middle). The outputs from each network are then concatenated to yield one big network with three times the number of inputs and outputs (right).\n\nFigure 6 .\n6Close-up of a predicted disparity map without (left) and with (right) convolutions between up-convolutions. Note how the prediction on the right is much smoother.\n\nFigure 7 .Figure 8 .\n78Disparity Results. Rows from top to bottom: KITTI 2012, KITTI 2015, FlyingThings3D, Monkaa, Sintel. Note how the DispNet prediction is basically noise-free.RGB image 0/1 (L) RGB image 0/1 (R)flow GT / prediction disp GT / prediction \u2206disp GT / prediction Results of our SceneFlowNet created from pretrained FlowNet and DispNets. The disparity change was added and the network was fine-tuned on FlyingThings3D for 80 000 iterations. The disparity change predictions are already quite good after these few training iterations.\n\nFigure 1 .\n1Bird's eye view of the Driving scene. The camera follows a convoluted path on street level and encounters many turns, crossings, other cars and varying lighting conditions.\n\n1\nOur modifications branch off of version 2.75b of the Blender source code. Starting with version 2.75, Blender supports multiview rendering.\n\nFigure 2 .\n2Our intermediate render data for frame t: The X/Y/Z channels encode the 3D positions (relative to the camera) of all visible points at frame t (center column) and what their respective 3D positions were/will be in the previous/next frame (left/right columns). The 3D positions of the previous and next frame are stored at the same image locations as in frame t. Hence, analyzing a location from frame t gives information about the past, current and future 3D position of the corresponding 3D point. All scene flow data can then be derived from this information. E.g.: The car moving to the right changes its X values (note, that the perspective projection compresses the intensity gradient of the distant sky into an apparent step at X = 0). Nothing is moving vertically, so all Y values are constant over time. The camera is moving forward and all Z values change uniformly (note, how objects on the right side become visible).\n\nFigure 4 .\n4Segmentation data: object indices are unique per scene.\n\nFigure 5 .Figure 6 .Figure 7 .Figure 8 .Figure 9 .Figure 10 .\n5678910Disparities on a Sintel frame: DispNet and DispNetCorr1D fill the occluded regions in a much more reasonable way compared to other approaches. Disparities on a Sintel frame: DispNetCorr1D provides sharper estimates and the smooth areas on the dragon head are estimated better than with DispNet. Disparities on a Sintel frame: The networks finetuned on the KITTI 2015 dataset cannot estimate large disparities anymore (large disparities are not present in KITTI). Also MC-CNN-fst has problems with the large disparities. Disparities on a Sintel frame: DispNet and DispNetCorr1D can handle occluded regions in a nice way. After finetuning on KITTI 2015 the networks fail in the sky region (ground truth for sky and other small disparities are not present in KITTI). Disparities on a KITTI 2015 frame: The sparsity of the KITTI 2015 dataset leads to very smooth predictions when finetuning a network with such ground truth. While the non-finetuned DispNet and DispNetCorr1D estimate fine details accurately, they are less accurate in the smooth road and ground regions which are very common in KITTI. Disparities on a KITTI 2015 frame: Finetuning the networks on KITTI leads to much smoother estimates. However, DispNet-K and DispNetCorr1D-K can still recognize the delineator posts in the bottom left, which DispNet and DispNetCorr1D ignore completely.\nhttps://www.blender.org/\nhttps://developers.google.com/speed/webp/ 5 http://www.oberhumer.com/opensource/lzo/\nhttp://shapenet.cs.stanford.edu/ 7 http://www.imagemagick.org/script/index.php 8 https://www.flickr.com/ Non-commercial public license. We used the code framework by Hays and Efros[10] \nhttp://docs.opencv.org/2.4/modules/calib3d/ doc/camera_calibration_and_3d_reconstruction. html#stereosgbm\nAcknowledgementsThe work was partially funded by the ERC Starting Grant VideoLearn, the ERC Consolidator Grant 3D Reloaded, and by the DFG Grants BR 3815/7-1 and CR 250/13-1.\nA database and evaluation methodology for optical flow. S Baker, D Scharstein, J Lewis, S Roth, M J Black, R Szeliski, MSR-TR-2009-179Technical ReportS. Baker, D. Scharstein, J. Lewis, S. Roth, M. J. Black, and R. Szeliski. A database and evaluation methodology for op- tical flow. Technical Report MSR-TR-2009-179, December 2009. 2\n\nA naturalistic open source movie for optical flow evaluation. D J Butler, J Wulff, G B Stanley, M J Black, ECCV, Part IV. 7577D. J. Butler, J. Wulff, G. B. Stanley, and M. J. Black. A naturalistic open source movie for optical flow evaluation. In ECCV, Part IV, LNCS 7577, pages 611-625, Oct. 2012. 2\n\nScene flow estimation by growing correspondence seeds. J Cech, J Sanchez-Riera, R P Horaud, CVPR. J. Cech, J. Sanchez-Riera, and R. P. Horaud. Scene flow es- timation by growing correspondence seeds. In CVPR, 2011. 3\n\nFlowNet: Learning optical flow with convolutional networks. A Dosovitskiy, P Fischer, E Ilg, P H\u00e4usser, C Haz\u0131rba\u015f, V Golkov, P Van Der Smagt, D Cremers, T Brox, ICCV. 712A. Dosovitskiy, P. Fischer, E. Ilg, P. H\u00e4usser, C. Haz\u0131rba\u015f, V. Golkov, P. van der Smagt, D. Cremers, and T. Brox. FlowNet: Learning optical flow with convolutional net- works. In ICCV, 2015. 1, 2, 3, 5, 7, 12\n\nLearning to generate chairs with convolutional neural networks. A Dosovitskiy, J T Springenberg, T Brox, CVPR. A. Dosovitskiy, J. T. Springenberg, and T. Brox. Learning to generate chairs with convolutional neural networks. In CVPR, 2015. 3\n\nDepth map prediction from a single image using a multi-scale deep network. D Eigen, C Puhrsch, R Fergus, NIPS. 3D. Eigen, C. Puhrsch, and R. Fergus. Depth map prediction from a single image using a multi-scale deep network. NIPS, 2014. 3\n\nA multi-block-matching approach for stereo. N Einecke, J Eggert, Intelligent Vehicles Symposium. N. Einecke and J. Eggert. A multi-block-matching approach for stereo. In Intelligent Vehicles Symposium, pages 585- 592, 2015. 7\n\nVision meets robotics: The KITTI dataset. A Geiger, P Lenz, C Stiller, R Urtasun, International Journal of Robotics Research. 25A. Geiger, P. Lenz, C. Stiller, and R. Urtasun. Vision meets robotics: The KITTI dataset. International Journal of Robotics Research (IJRR), 2013. 2, 5\n\nMultiple view geometry in computer vision. R Hartley, A Zisserman, Cambridge university press12R. Hartley and A. Zisserman. Multiple view geometry in computer vision. Cambridge university press, 2003. 12\n\nEfros. im2gps: estimating geographic information from a single image. J Hays, A A , CVPR. J. Hays and A. A. Efros. im2gps: estimating geographic information from a single image. In CVPR, 2008. 4\n\nStereo processing by semiglobal matching and mutual information. H Hirschm\u00fcller, PAMI. 3026H. Hirschm\u00fcller. Stereo processing by semiglobal matching and mutual information. PAMI, 30(2):328-341, 2008. 3, 6\n\nA variational method for scene flow estimation from stereo sequences. F Huguet, F Deverney, ICCV. F. Huguet and F. Deverney. A variational method for scene flow estimation from stereo sequences. In ICCV, 2007. 3\n\nY Jia, E Shelhamer, J Donahue, S Karayev, J Long, R Girshick, S Guadarrama, T Darrell, arXiv:1408.5093Caffe: Convolutional architecture for fast feature embedding. arXiv preprintY. Jia, E. Shelhamer, J. Donahue, S. Karayev, J. Long, R. Gir- shick, S. Guadarrama, and T. Darrell. Caffe: Convolu- tional architecture for fast feature embedding. arXiv preprint arXiv:1408.5093, 2014. 5\n\nAdam: A method for stochastic optimization. D P Kingma, J Ba, ICLR. D. P. Kingma and J. Ba. Adam: A method for stochastic optimization. In ICLR, 2015. 5\n\nImagenet classification with deep convolutional neural networks. A Krizhevsky, I Sutskever, G E Hinton, NIPS. A. Krizhevsky, I. Sutskever, and G. E. Hinton. Imagenet classification with deep convolutional neural networks. In NIPS, pages 1106-1114, 2012. 2\n\nBackpropagation applied to handwritten zip code recognition. Y Lecun, B Boser, J S Denker, D Henderson, R E Howard, W Hubbard, L D , Neural computation. 14Y. LeCun, B. Boser, J. S. Denker, D. Henderson, R. E. Howard, W. Hubbard, and L. D. Jackel. Backpropagation applied to handwritten zip code recognition. Neural compu- tation, 1(4):541-551, 1989. 2\n\nObject scene flow for autonomous vehicles. M Menze, A Geiger, Conference on Computer Vision and Pattern Recognition (CVPR). 35M. Menze and A. Geiger. Object scene flow for autonomous vehicles. In Conference on Computer Vision and Pattern Recognition (CVPR), 2015. 2, 3, 5\n\nIndoor segmentation and support inference from rgbd images. P K Nathan Silberman, Derek Hoiem, R Fergus, ECCV. P. K. Nathan Silberman, Derek Hoiem and R. Fergus. Indoor segmentation and support inference from rgbd images. In ECCV, 2012. 2\n\nScene flow by tracking in intensity and depth data. J Quiroga, F Devernay, J Crowley, Computer Vision and Pattern Recognition Workshops (CVPRW), 2012 IEEE Computer Society Conference on. IEEEJ. Quiroga, F. Devernay, and J. Crowley. Scene flow by tracking in intensity and depth data. In Computer Vision and Pattern Recognition Workshops (CVPRW), 2012 IEEE Com- puter Society Conference on, pages 50-57. IEEE, 2012. 3\n\nSemantically-Enriched 3D Models for Common-sense Knowledge. M Savva, A X Chang, P Hanrahan, CVPR 2015 Workshop on Functionality, Physics, Intentionality and Causality. M. Savva, A. X. Chang, and P. Hanrahan. Semantically- Enriched 3D Models for Common-sense Knowledge. CVPR 2015 Workshop on Functionality, Physics, Intentionality and Causality, 2015. 4\n\nHigh-resolution stereo datasets with subpixel-accurate ground truth. D Scharstein, H Hirschm\u00fcller, Y Kitajima, G Krathwohl, N Ne\u0161i\u0107, X Wang, P Westling, Pattern Recognition. SpringerD. Scharstein, H. Hirschm\u00fcller, Y. Kitajima, G. Krathwohl, N. Ne\u0161i\u0107, X. Wang, and P. Westling. High-resolution stereo datasets with subpixel-accurate ground truth. In Pattern Recognition, pages 31-42. Springer, 2014. 2\n\nA taxonomy and evaluation of dense two-frame stereo correspondence algorithms. D Scharstein, R Szeliski, International journal of computer vision. 471-3D. Scharstein and R. Szeliski. A taxonomy and evaluation of dense two-frame stereo correspondence algorithms. In- ternational journal of computer vision, 47(1-3):7-42, 2002. 2\n\nThree-dimensional scene flow. S Vedula, S Baker, P Rander, R Collins, T Kanade, IEEE Transactions on Pattern Analysis and Machine Intelligence. 273S. Vedula, S. Baker, P. Rander, R. Collins, and T. Kanade. Three-dimensional scene flow. IEEE Transactions on Pat- tern Analysis and Machine Intelligence, 27(3):475-480, 2005. 3\n\nThree-dimensional scene flow. S Vedula, S Baker, P Rander, R T Collins, T Kanade, ICCV. S. Vedula, S. Baker, P. Rander, R. T. Collins, and T. Kanade. Three-dimensional scene flow. In ICCV, pages 722-729, 1999. 3\n\nPiecewise rigid scene flow. C Vogel, K Schindler, S Roth, ICCV. C. Vogel, K. Schindler, and S. Roth. Piecewise rigid scene flow. In ICCV, 2013. 3\n\nEfficient dense scene flow from sparse or dense stereo data. A Wedel, C Rabe, T Vaudrey, T Brox, U Franke, D Cremers, SpringerA. Wedel, C. Rabe, T. Vaudrey, T. Brox, U. Franke, and D. Cremers. Efficient dense scene flow from sparse or dense stereo data. Springer, 2008. 3\n\nSun3d: A database of big spaces reconstructed using sfm and object labels. J Xiao, A Owens, A Torralba, Computer Vision (ICCV), 2013 IEEE International Conference on. J. Xiao, A. Owens, and A. Torralba. Sun3d: A database of big spaces reconstructed using sfm and object labels. In Computer Vision (ICCV), 2013 IEEE International Confer- ence on, pages 1625-1632, Dec 2013. 2\n\nStereo matching by training a convolutional neural network to compare image patches. J \u017dbontar, Y Lecun, arXiv:1510.0597067arXiv preprintJ.\u017dbontar and Y. LeCun. Stereo matching by training a con- volutional neural network to compare image patches. arXiv preprint arXiv:1510.05970, 2015. 3, 6, 7\n\nCross-based local stereo matching using orthogonal integral images. K Zhang, J Lu, G Lafruit, IEEE Trans. Circuits Syst. Video Techn. 197K. Zhang, J. Lu, and G. Lafruit. Cross-based local stereo matching using orthogonal integral images. IEEE Trans. Cir- cuits Syst. Video Techn., 19(7):1073-1079, 2009. 3\n", "annotations": {"author": "[{\"end\":146,\"start\":106},{\"end\":181,\"start\":147},{\"end\":284,\"start\":182},{\"end\":373,\"start\":285},{\"end\":404,\"start\":374},{\"end\":452,\"start\":405},{\"end\":489,\"start\":453}]", "publisher": null, "author_last_name": "[{\"end\":120,\"start\":115},{\"end\":155,\"start\":152},{\"end\":196,\"start\":189},{\"end\":300,\"start\":293},{\"end\":388,\"start\":381},{\"end\":423,\"start\":412},{\"end\":464,\"start\":460}]", "author_first_name": "[{\"end\":114,\"start\":106},{\"end\":151,\"start\":147},{\"end\":188,\"start\":182},{\"end\":292,\"start\":285},{\"end\":380,\"start\":374},{\"end\":411,\"start\":405},{\"end\":459,\"start\":453}]", "author_affiliation": "[{\"end\":145,\"start\":122},{\"end\":180,\"start\":157},{\"end\":283,\"start\":198},{\"end\":372,\"start\":349}]", "title": "[{\"end\":103,\"start\":1},{\"end\":592,\"start\":490}]", "venue": null, "abstract": "[{\"end\":1589,\"start\":594}]", "bib_ref": "[{\"end\":2307,\"start\":2299},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2774,\"start\":2771},{\"end\":3383,\"start\":3376},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3398,\"start\":3395},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":3425,\"start\":3421},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":3436,\"start\":3432},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3446,\"start\":3442},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3862,\"start\":3859},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":4958,\"start\":4954},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4990,\"start\":4987},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":5375,\"start\":5371},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5392,\"start\":5389},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6104,\"start\":6101},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":6130,\"start\":6126},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6785,\"start\":6782},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":7593,\"start\":7589},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7691,\"start\":7687},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7792,\"start\":7789},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":7814,\"start\":7810},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7847,\"start\":7844},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7887,\"start\":7884},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8223,\"start\":8220},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":8328,\"start\":8324},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":8502,\"start\":8498},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8538,\"start\":8534},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":9010,\"start\":9006},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9136,\"start\":9132},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9220,\"start\":9216},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9348,\"start\":9344},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":9490,\"start\":9486},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9581,\"start\":9577},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":9745,\"start\":9742},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10353,\"start\":10349},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":10845,\"start\":10841},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":11159,\"start\":11155},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":16138,\"start\":16134},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":16140,\"start\":16139},{\"end\":16811,\"start\":16803},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":16883,\"start\":16879},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17417,\"start\":17415},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":18577,\"start\":18574},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":18581,\"start\":18580},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":18889,\"start\":18886},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":19673,\"start\":19670},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":19983,\"start\":19980},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":20305,\"start\":20302},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":21085,\"start\":21081},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":21125,\"start\":21121},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":21184,\"start\":21180},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":22374,\"start\":22372},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":22919,\"start\":22915},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":22961,\"start\":22957},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":23723,\"start\":23719},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":23951,\"start\":23947},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":24074,\"start\":24071},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":24707,\"start\":24704},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":25142,\"start\":25139},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":30979,\"start\":30976},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":31436,\"start\":31433},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":37128,\"start\":37124}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32933,\"start\":32700},{\"attributes\":{\"id\":\"fig_1\"},\"end\":33347,\"start\":32934},{\"attributes\":{\"id\":\"fig_2\"},\"end\":33523,\"start\":33348},{\"attributes\":{\"id\":\"fig_3\"},\"end\":34072,\"start\":33524},{\"attributes\":{\"id\":\"fig_4\"},\"end\":34258,\"start\":34073},{\"attributes\":{\"id\":\"fig_5\"},\"end\":34401,\"start\":34259},{\"attributes\":{\"id\":\"fig_6\"},\"end\":35343,\"start\":34402},{\"attributes\":{\"id\":\"fig_7\"},\"end\":35412,\"start\":35344},{\"attributes\":{\"id\":\"fig_8\"},\"end\":36833,\"start\":35413}]", "paragraph": "[{\"end\":2480,\"start\":1605},{\"end\":2651,\"start\":2482},{\"end\":3657,\"start\":2653},{\"end\":4311,\"start\":3659},{\"end\":4808,\"start\":4313},{\"end\":5376,\"start\":4825},{\"end\":5612,\"start\":5378},{\"end\":6060,\"start\":5614},{\"end\":6761,\"start\":6062},{\"end\":7065,\"start\":6763},{\"end\":7540,\"start\":7067},{\"end\":7848,\"start\":7542},{\"end\":8273,\"start\":7850},{\"end\":8742,\"start\":8275},{\"end\":8918,\"start\":8744},{\"end\":9673,\"start\":8920},{\"end\":9876,\"start\":9675},{\"end\":10354,\"start\":9905},{\"end\":10828,\"start\":10356},{\"end\":11030,\"start\":10830},{\"end\":11671,\"start\":11032},{\"end\":12789,\"start\":11699},{\"end\":13322,\"start\":12791},{\"end\":13765,\"start\":13324},{\"end\":14124,\"start\":13767},{\"end\":14540,\"start\":14126},{\"end\":14878,\"start\":14542},{\"end\":15057,\"start\":14880},{\"end\":15789,\"start\":15076},{\"end\":16044,\"start\":15791},{\"end\":16288,\"start\":16046},{\"end\":16605,\"start\":16290},{\"end\":16773,\"start\":16607},{\"end\":17192,\"start\":16788},{\"end\":17295,\"start\":17194},{\"end\":17690,\"start\":17306},{\"end\":17993,\"start\":17692},{\"end\":18396,\"start\":18005},{\"end\":18697,\"start\":18398},{\"end\":19674,\"start\":18710},{\"end\":19899,\"start\":19676},{\"end\":20484,\"start\":19901},{\"end\":20897,\"start\":20486},{\"end\":21299,\"start\":20899},{\"end\":21998,\"start\":21301},{\"end\":22689,\"start\":22000},{\"end\":24161,\"start\":22705},{\"end\":24614,\"start\":24163},{\"end\":25030,\"start\":24616},{\"end\":25380,\"start\":25032},{\"end\":26021,\"start\":25382},{\"end\":26486,\"start\":26036},{\"end\":26998,\"start\":26488},{\"end\":27240,\"start\":27015},{\"end\":27472,\"start\":27269},{\"end\":27657,\"start\":27474},{\"end\":28052,\"start\":27659},{\"end\":28916,\"start\":28054},{\"end\":29033,\"start\":28990},{\"end\":29124,\"start\":29105},{\"end\":29244,\"start\":29220},{\"end\":30033,\"start\":29246},{\"end\":30267,\"start\":30035},{\"end\":30497,\"start\":30269},{\"end\":30880,\"start\":30513},{\"end\":32019,\"start\":30882},{\"end\":32421,\"start\":32021},{\"end\":32699,\"start\":32446}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":28989,\"start\":28917},{\"attributes\":{\"id\":\"formula_1\"},\"end\":29104,\"start\":29034},{\"attributes\":{\"id\":\"formula_2\"},\"end\":29219,\"start\":29125}]", "table_ref": "[{\"end\":3460,\"start\":3453},{\"end\":7539,\"start\":7532},{\"end\":19763,\"start\":19756},{\"end\":21414,\"start\":21407},{\"end\":23089,\"start\":23082},{\"end\":25221,\"start\":25214},{\"end\":26020,\"start\":26013}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1603,\"start\":1591},{\"attributes\":{\"n\":\"2.\"},\"end\":4823,\"start\":4811},{\"attributes\":{\"n\":\"3.\"},\"end\":9903,\"start\":9879},{\"attributes\":{\"n\":\"4.\"},\"end\":11697,\"start\":11674},{\"attributes\":{\"n\":\"4.1.\"},\"end\":15074,\"start\":15060},{\"end\":16786,\"start\":16776},{\"attributes\":{\"n\":\"4.2.\"},\"end\":17304,\"start\":17298},{\"attributes\":{\"n\":\"4.3.\"},\"end\":18003,\"start\":17996},{\"attributes\":{\"n\":\"5.\"},\"end\":18708,\"start\":18700},{\"attributes\":{\"n\":\"6.\"},\"end\":22703,\"start\":22692},{\"attributes\":{\"n\":\"7.\"},\"end\":26034,\"start\":26024},{\"attributes\":{\"n\":\"1.\"},\"end\":27013,\"start\":27001},{\"attributes\":{\"n\":\"2.\"},\"end\":27267,\"start\":27243},{\"attributes\":{\"n\":\"3.\"},\"end\":30511,\"start\":30500},{\"attributes\":{\"n\":\"4.\"},\"end\":32444,\"start\":32424},{\"end\":32711,\"start\":32701},{\"end\":32945,\"start\":32935},{\"end\":33359,\"start\":33349},{\"end\":33545,\"start\":33525},{\"end\":34084,\"start\":34074},{\"end\":34261,\"start\":34260},{\"end\":34413,\"start\":34403},{\"end\":35355,\"start\":35345},{\"end\":35475,\"start\":35414}]", "table": null, "figure_caption": "[{\"end\":32933,\"start\":32713},{\"end\":33347,\"start\":32947},{\"end\":33523,\"start\":33361},{\"end\":34072,\"start\":33548},{\"end\":34258,\"start\":34086},{\"end\":34401,\"start\":34262},{\"end\":35343,\"start\":34415},{\"end\":35412,\"start\":35357},{\"end\":36833,\"start\":35483}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":10590,\"start\":10582},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":10857,\"start\":10851},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":13321,\"start\":13315},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":18321,\"start\":18315},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":19898,\"start\":19890},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":20641,\"start\":20633},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":24948,\"start\":24940},{\"end\":25489,\"start\":25481},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":27433,\"start\":27427},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":28404,\"start\":28398},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":28730,\"start\":28724},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":29285,\"start\":29277},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":29599,\"start\":29593}]", "bib_author_first_name": "[{\"end\":37468,\"start\":37467},{\"end\":37477,\"start\":37476},{\"end\":37491,\"start\":37490},{\"end\":37500,\"start\":37499},{\"end\":37508,\"start\":37507},{\"end\":37510,\"start\":37509},{\"end\":37519,\"start\":37518},{\"end\":37808,\"start\":37807},{\"end\":37810,\"start\":37809},{\"end\":37820,\"start\":37819},{\"end\":37829,\"start\":37828},{\"end\":37831,\"start\":37830},{\"end\":37842,\"start\":37841},{\"end\":37844,\"start\":37843},{\"end\":38103,\"start\":38102},{\"end\":38111,\"start\":38110},{\"end\":38128,\"start\":38127},{\"end\":38130,\"start\":38129},{\"end\":38326,\"start\":38325},{\"end\":38341,\"start\":38340},{\"end\":38352,\"start\":38351},{\"end\":38359,\"start\":38358},{\"end\":38370,\"start\":38369},{\"end\":38382,\"start\":38381},{\"end\":38392,\"start\":38391},{\"end\":38409,\"start\":38408},{\"end\":38420,\"start\":38419},{\"end\":38712,\"start\":38711},{\"end\":38727,\"start\":38726},{\"end\":38729,\"start\":38728},{\"end\":38745,\"start\":38744},{\"end\":38965,\"start\":38964},{\"end\":38974,\"start\":38973},{\"end\":38985,\"start\":38984},{\"end\":39173,\"start\":39172},{\"end\":39184,\"start\":39183},{\"end\":39398,\"start\":39397},{\"end\":39408,\"start\":39407},{\"end\":39416,\"start\":39415},{\"end\":39427,\"start\":39426},{\"end\":39680,\"start\":39679},{\"end\":39691,\"start\":39690},{\"end\":39912,\"start\":39911},{\"end\":39920,\"start\":39919},{\"end\":39922,\"start\":39921},{\"end\":40103,\"start\":40102},{\"end\":40314,\"start\":40313},{\"end\":40324,\"start\":40323},{\"end\":40457,\"start\":40456},{\"end\":40464,\"start\":40463},{\"end\":40477,\"start\":40476},{\"end\":40488,\"start\":40487},{\"end\":40499,\"start\":40498},{\"end\":40507,\"start\":40506},{\"end\":40519,\"start\":40518},{\"end\":40533,\"start\":40532},{\"end\":40885,\"start\":40884},{\"end\":40887,\"start\":40886},{\"end\":40897,\"start\":40896},{\"end\":41060,\"start\":41059},{\"end\":41074,\"start\":41073},{\"end\":41087,\"start\":41086},{\"end\":41089,\"start\":41088},{\"end\":41313,\"start\":41312},{\"end\":41322,\"start\":41321},{\"end\":41331,\"start\":41330},{\"end\":41333,\"start\":41332},{\"end\":41343,\"start\":41342},{\"end\":41356,\"start\":41355},{\"end\":41358,\"start\":41357},{\"end\":41368,\"start\":41367},{\"end\":41379,\"start\":41378},{\"end\":41381,\"start\":41380},{\"end\":41648,\"start\":41647},{\"end\":41657,\"start\":41656},{\"end\":41938,\"start\":41937},{\"end\":41940,\"start\":41939},{\"end\":41964,\"start\":41959},{\"end\":41973,\"start\":41972},{\"end\":42170,\"start\":42169},{\"end\":42181,\"start\":42180},{\"end\":42193,\"start\":42192},{\"end\":42596,\"start\":42595},{\"end\":42605,\"start\":42604},{\"end\":42607,\"start\":42606},{\"end\":42616,\"start\":42615},{\"end\":42959,\"start\":42958},{\"end\":42973,\"start\":42972},{\"end\":42989,\"start\":42988},{\"end\":43001,\"start\":43000},{\"end\":43014,\"start\":43013},{\"end\":43023,\"start\":43022},{\"end\":43031,\"start\":43030},{\"end\":43371,\"start\":43370},{\"end\":43385,\"start\":43384},{\"end\":43651,\"start\":43650},{\"end\":43661,\"start\":43660},{\"end\":43670,\"start\":43669},{\"end\":43680,\"start\":43679},{\"end\":43691,\"start\":43690},{\"end\":43977,\"start\":43976},{\"end\":43987,\"start\":43986},{\"end\":43996,\"start\":43995},{\"end\":44006,\"start\":44005},{\"end\":44008,\"start\":44007},{\"end\":44019,\"start\":44018},{\"end\":44188,\"start\":44187},{\"end\":44197,\"start\":44196},{\"end\":44210,\"start\":44209},{\"end\":44368,\"start\":44367},{\"end\":44377,\"start\":44376},{\"end\":44385,\"start\":44384},{\"end\":44396,\"start\":44395},{\"end\":44404,\"start\":44403},{\"end\":44414,\"start\":44413},{\"end\":44655,\"start\":44654},{\"end\":44663,\"start\":44662},{\"end\":44672,\"start\":44671},{\"end\":45041,\"start\":45040},{\"end\":45052,\"start\":45051},{\"end\":45320,\"start\":45319},{\"end\":45329,\"start\":45328},{\"end\":45335,\"start\":45334}]", "bib_author_last_name": "[{\"end\":37474,\"start\":37469},{\"end\":37488,\"start\":37478},{\"end\":37497,\"start\":37492},{\"end\":37505,\"start\":37501},{\"end\":37516,\"start\":37511},{\"end\":37528,\"start\":37520},{\"end\":37817,\"start\":37811},{\"end\":37826,\"start\":37821},{\"end\":37839,\"start\":37832},{\"end\":37850,\"start\":37845},{\"end\":38108,\"start\":38104},{\"end\":38125,\"start\":38112},{\"end\":38137,\"start\":38131},{\"end\":38338,\"start\":38327},{\"end\":38349,\"start\":38342},{\"end\":38356,\"start\":38353},{\"end\":38367,\"start\":38360},{\"end\":38379,\"start\":38371},{\"end\":38389,\"start\":38383},{\"end\":38406,\"start\":38393},{\"end\":38417,\"start\":38410},{\"end\":38425,\"start\":38421},{\"end\":38724,\"start\":38713},{\"end\":38742,\"start\":38730},{\"end\":38750,\"start\":38746},{\"end\":38971,\"start\":38966},{\"end\":38982,\"start\":38975},{\"end\":38992,\"start\":38986},{\"end\":39181,\"start\":39174},{\"end\":39191,\"start\":39185},{\"end\":39405,\"start\":39399},{\"end\":39413,\"start\":39409},{\"end\":39424,\"start\":39417},{\"end\":39435,\"start\":39428},{\"end\":39688,\"start\":39681},{\"end\":39701,\"start\":39692},{\"end\":39917,\"start\":39913},{\"end\":40116,\"start\":40104},{\"end\":40321,\"start\":40315},{\"end\":40333,\"start\":40325},{\"end\":40461,\"start\":40458},{\"end\":40474,\"start\":40465},{\"end\":40485,\"start\":40478},{\"end\":40496,\"start\":40489},{\"end\":40504,\"start\":40500},{\"end\":40516,\"start\":40508},{\"end\":40530,\"start\":40520},{\"end\":40541,\"start\":40534},{\"end\":40894,\"start\":40888},{\"end\":40900,\"start\":40898},{\"end\":41071,\"start\":41061},{\"end\":41084,\"start\":41075},{\"end\":41096,\"start\":41090},{\"end\":41319,\"start\":41314},{\"end\":41328,\"start\":41323},{\"end\":41340,\"start\":41334},{\"end\":41353,\"start\":41344},{\"end\":41365,\"start\":41359},{\"end\":41376,\"start\":41369},{\"end\":41654,\"start\":41649},{\"end\":41664,\"start\":41658},{\"end\":41957,\"start\":41941},{\"end\":41970,\"start\":41965},{\"end\":41980,\"start\":41974},{\"end\":42178,\"start\":42171},{\"end\":42190,\"start\":42182},{\"end\":42201,\"start\":42194},{\"end\":42602,\"start\":42597},{\"end\":42613,\"start\":42608},{\"end\":42625,\"start\":42617},{\"end\":42970,\"start\":42960},{\"end\":42986,\"start\":42974},{\"end\":42998,\"start\":42990},{\"end\":43011,\"start\":43002},{\"end\":43020,\"start\":43015},{\"end\":43028,\"start\":43024},{\"end\":43040,\"start\":43032},{\"end\":43382,\"start\":43372},{\"end\":43394,\"start\":43386},{\"end\":43658,\"start\":43652},{\"end\":43667,\"start\":43662},{\"end\":43677,\"start\":43671},{\"end\":43688,\"start\":43681},{\"end\":43698,\"start\":43692},{\"end\":43984,\"start\":43978},{\"end\":43993,\"start\":43988},{\"end\":44003,\"start\":43997},{\"end\":44016,\"start\":44009},{\"end\":44026,\"start\":44020},{\"end\":44194,\"start\":44189},{\"end\":44207,\"start\":44198},{\"end\":44215,\"start\":44211},{\"end\":44374,\"start\":44369},{\"end\":44382,\"start\":44378},{\"end\":44393,\"start\":44386},{\"end\":44401,\"start\":44397},{\"end\":44411,\"start\":44405},{\"end\":44422,\"start\":44415},{\"end\":44660,\"start\":44656},{\"end\":44669,\"start\":44664},{\"end\":44681,\"start\":44673},{\"end\":45049,\"start\":45042},{\"end\":45058,\"start\":45053},{\"end\":45326,\"start\":45321},{\"end\":45332,\"start\":45330},{\"end\":45343,\"start\":45336}]", "bib_entry": "[{\"attributes\":{\"doi\":\"MSR-TR-2009-179\",\"id\":\"b0\"},\"end\":37743,\"start\":37411},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":4637111},\"end\":38045,\"start\":37745},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":3830469},\"end\":38263,\"start\":38047},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":12552176},\"end\":38645,\"start\":38265},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":15960930},\"end\":38887,\"start\":38647},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":2255738},\"end\":39126,\"start\":38889},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":8770648},\"end\":39353,\"start\":39128},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":9455111},\"end\":39634,\"start\":39355},{\"attributes\":{\"id\":\"b8\"},\"end\":39839,\"start\":39636},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":2061602},\"end\":40035,\"start\":39841},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":18327083},\"end\":40241,\"start\":40037},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":2610586},\"end\":40454,\"start\":40243},{\"attributes\":{\"doi\":\"arXiv:1408.5093\",\"id\":\"b12\"},\"end\":40838,\"start\":40456},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":6628106},\"end\":40992,\"start\":40840},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":195908774},\"end\":41249,\"start\":40994},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":41312633},\"end\":41602,\"start\":41251},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":12986049},\"end\":41875,\"start\":41604},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":545361},\"end\":42115,\"start\":41877},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":11483010},\"end\":42533,\"start\":42117},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":1337733},\"end\":42887,\"start\":42535},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":14915763},\"end\":43289,\"start\":42889},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":195859047},\"end\":43618,\"start\":43291},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":1241772},\"end\":43944,\"start\":43620},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1241772},\"end\":44157,\"start\":43946},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":7688423},\"end\":44304,\"start\":44159},{\"attributes\":{\"id\":\"b25\"},\"end\":44577,\"start\":44306},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":6033252},\"end\":44953,\"start\":44579},{\"attributes\":{\"doi\":\"arXiv:1510.05970\",\"id\":\"b27\"},\"end\":45249,\"start\":44955},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":38970542},\"end\":45556,\"start\":45251}]", "bib_title": "[{\"end\":37805,\"start\":37745},{\"end\":38100,\"start\":38047},{\"end\":38323,\"start\":38265},{\"end\":38709,\"start\":38647},{\"end\":38962,\"start\":38889},{\"end\":39170,\"start\":39128},{\"end\":39395,\"start\":39355},{\"end\":39909,\"start\":39841},{\"end\":40100,\"start\":40037},{\"end\":40311,\"start\":40243},{\"end\":40882,\"start\":40840},{\"end\":41057,\"start\":40994},{\"end\":41310,\"start\":41251},{\"end\":41645,\"start\":41604},{\"end\":41935,\"start\":41877},{\"end\":42167,\"start\":42117},{\"end\":42593,\"start\":42535},{\"end\":42956,\"start\":42889},{\"end\":43368,\"start\":43291},{\"end\":43648,\"start\":43620},{\"end\":43974,\"start\":43946},{\"end\":44185,\"start\":44159},{\"end\":44652,\"start\":44579},{\"end\":45317,\"start\":45251}]", "bib_author": "[{\"end\":37476,\"start\":37467},{\"end\":37490,\"start\":37476},{\"end\":37499,\"start\":37490},{\"end\":37507,\"start\":37499},{\"end\":37518,\"start\":37507},{\"end\":37530,\"start\":37518},{\"end\":37819,\"start\":37807},{\"end\":37828,\"start\":37819},{\"end\":37841,\"start\":37828},{\"end\":37852,\"start\":37841},{\"end\":38110,\"start\":38102},{\"end\":38127,\"start\":38110},{\"end\":38139,\"start\":38127},{\"end\":38340,\"start\":38325},{\"end\":38351,\"start\":38340},{\"end\":38358,\"start\":38351},{\"end\":38369,\"start\":38358},{\"end\":38381,\"start\":38369},{\"end\":38391,\"start\":38381},{\"end\":38408,\"start\":38391},{\"end\":38419,\"start\":38408},{\"end\":38427,\"start\":38419},{\"end\":38726,\"start\":38711},{\"end\":38744,\"start\":38726},{\"end\":38752,\"start\":38744},{\"end\":38973,\"start\":38964},{\"end\":38984,\"start\":38973},{\"end\":38994,\"start\":38984},{\"end\":39183,\"start\":39172},{\"end\":39193,\"start\":39183},{\"end\":39407,\"start\":39397},{\"end\":39415,\"start\":39407},{\"end\":39426,\"start\":39415},{\"end\":39437,\"start\":39426},{\"end\":39690,\"start\":39679},{\"end\":39703,\"start\":39690},{\"end\":39919,\"start\":39911},{\"end\":39925,\"start\":39919},{\"end\":40118,\"start\":40102},{\"end\":40323,\"start\":40313},{\"end\":40335,\"start\":40323},{\"end\":40463,\"start\":40456},{\"end\":40476,\"start\":40463},{\"end\":40487,\"start\":40476},{\"end\":40498,\"start\":40487},{\"end\":40506,\"start\":40498},{\"end\":40518,\"start\":40506},{\"end\":40532,\"start\":40518},{\"end\":40543,\"start\":40532},{\"end\":40896,\"start\":40884},{\"end\":40902,\"start\":40896},{\"end\":41073,\"start\":41059},{\"end\":41086,\"start\":41073},{\"end\":41098,\"start\":41086},{\"end\":41321,\"start\":41312},{\"end\":41330,\"start\":41321},{\"end\":41342,\"start\":41330},{\"end\":41355,\"start\":41342},{\"end\":41367,\"start\":41355},{\"end\":41378,\"start\":41367},{\"end\":41384,\"start\":41378},{\"end\":41656,\"start\":41647},{\"end\":41666,\"start\":41656},{\"end\":41959,\"start\":41937},{\"end\":41972,\"start\":41959},{\"end\":41982,\"start\":41972},{\"end\":42180,\"start\":42169},{\"end\":42192,\"start\":42180},{\"end\":42203,\"start\":42192},{\"end\":42604,\"start\":42595},{\"end\":42615,\"start\":42604},{\"end\":42627,\"start\":42615},{\"end\":42972,\"start\":42958},{\"end\":42988,\"start\":42972},{\"end\":43000,\"start\":42988},{\"end\":43013,\"start\":43000},{\"end\":43022,\"start\":43013},{\"end\":43030,\"start\":43022},{\"end\":43042,\"start\":43030},{\"end\":43384,\"start\":43370},{\"end\":43396,\"start\":43384},{\"end\":43660,\"start\":43650},{\"end\":43669,\"start\":43660},{\"end\":43679,\"start\":43669},{\"end\":43690,\"start\":43679},{\"end\":43700,\"start\":43690},{\"end\":43986,\"start\":43976},{\"end\":43995,\"start\":43986},{\"end\":44005,\"start\":43995},{\"end\":44018,\"start\":44005},{\"end\":44028,\"start\":44018},{\"end\":44196,\"start\":44187},{\"end\":44209,\"start\":44196},{\"end\":44217,\"start\":44209},{\"end\":44376,\"start\":44367},{\"end\":44384,\"start\":44376},{\"end\":44395,\"start\":44384},{\"end\":44403,\"start\":44395},{\"end\":44413,\"start\":44403},{\"end\":44424,\"start\":44413},{\"end\":44662,\"start\":44654},{\"end\":44671,\"start\":44662},{\"end\":44683,\"start\":44671},{\"end\":45051,\"start\":45040},{\"end\":45060,\"start\":45051},{\"end\":45328,\"start\":45319},{\"end\":45334,\"start\":45328},{\"end\":45345,\"start\":45334}]", "bib_venue": "[{\"end\":37465,\"start\":37411},{\"end\":37865,\"start\":37852},{\"end\":38143,\"start\":38139},{\"end\":38431,\"start\":38427},{\"end\":38756,\"start\":38752},{\"end\":38998,\"start\":38994},{\"end\":39223,\"start\":39193},{\"end\":39479,\"start\":39437},{\"end\":39677,\"start\":39636},{\"end\":39929,\"start\":39925},{\"end\":40122,\"start\":40118},{\"end\":40339,\"start\":40335},{\"end\":40618,\"start\":40558},{\"end\":40906,\"start\":40902},{\"end\":41102,\"start\":41098},{\"end\":41402,\"start\":41384},{\"end\":41726,\"start\":41666},{\"end\":41986,\"start\":41982},{\"end\":42302,\"start\":42203},{\"end\":42701,\"start\":42627},{\"end\":43061,\"start\":43042},{\"end\":43436,\"start\":43396},{\"end\":43762,\"start\":43700},{\"end\":44032,\"start\":44028},{\"end\":44221,\"start\":44217},{\"end\":44365,\"start\":44306},{\"end\":44744,\"start\":44683},{\"end\":45038,\"start\":44955},{\"end\":45383,\"start\":45345}]"}}}, "year": 2023, "month": 12, "day": 17}