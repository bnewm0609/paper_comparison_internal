{"id": 255749330, "updated": "2023-10-05 05:08:19.687", "metadata": {"title": "ChatGPT is not all you need. A State of the Art Review of large Generative AI models", "authors": "[{\"first\":\"Roberto\",\"last\":\"Gozalo-Brizuela\",\"middle\":[]},{\"first\":\"Eduardo\",\"last\":\"Garrido-Merchan\",\"middle\":[\"C.\"]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2023, "month": null, "day": null}, "abstract": "During the last two years there has been a plethora of large generative models such as ChatGPT or Stable Diffusion that have been published. Concretely, these models are able to perform tasks such as being a general question and answering system or automatically creating artistic images that are revolutionizing several sectors. Consequently, the implications that these generative models have in the industry and society are enormous, as several job positions may be transformed. For example, Generative AI is capable of transforming effectively and creatively texts to images, like the DALLE-2 model; text to 3D images, like the Dreamfusion model; images to text, like the Flamingo model; texts to video, like the Phenaki model; texts to audio, like the AudioLM model; texts to other texts, like ChatGPT; texts to code, like the Codex model; texts to scientific texts, like the Galactica model or even create algorithms like AlphaTensor. This work consists on an attempt to describe in a concise way the main models are sectors that are affected by generative AI and to provide a taxonomy of the main generative models published recently.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2301.04655", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/abs-2301-04655", "doi": "10.48550/arxiv.2301.04655"}}, "content": {"source": {"pdf_hash": "1f22de83d912176cb8857efa1c6d65b14d6a2f5c", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/2301.04655v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "5c229c13b0b75266530794822b0257440a34354a", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/1f22de83d912176cb8857efa1c6d65b14d6a2f5c.txt", "contents": "\nChatGPT is not all you need. A State of the Art Review of large Generative AI models\n\n\nRoberto Gozalo-Brizuela \nQuantitative Methods Department\nUniversidad Pontificia Comillas\nMadridSpain\n\nEduardo C Garrido-Merch\u00e1n \nQuantitative Methods Department\nUniversidad Pontificia Comillas\nMadridSpain\n\nChatGPT is not all you need. A State of the Art Review of large Generative AI models\n\nDuring the last two years there has been a plethora of large generative models such as ChatGPT or Stable Diffusion that have been published. Concretely, these models are able to perform tasks such as being a general question and answering system or automatically creating artistic images that are revolutionizing several sectors. Consequently, the implications that these generative models have in the industry and society are enormous, as several job positions may be transformed. For example, Generative AI is capable of transforming effectively and creatively texts to images, like the DALLE-2 model; text to 3D images, like the Dreamfusion model; images to text, like the Flamingo model; texts to video, like the Phenaki model; texts to audio, like the AudioLM model; texts to other texts, like ChatGPT; texts to code, like the Codex model; texts to scientific texts, like the Galactica model or even create algorithms like AlphaTensor. This work consists on an attempt to describe in a concise way the main models are sectors that are affected by generative AI and to provide a taxonomy of the main generative models published recently.\n\nIntroduction\n\nGenerative AI refers to artificial intelligence that can generate novel content, rather than simply analyzing or acting on existing data like expert systems [23]. In particular, expert systems contained knowledge bases and an inference engine that generated content via an if-else rule database. However, modern generative artificial intelligence contain a discriminator or transformer model trained on a corpus or dataset that is able to map the input information into a latent highdimensional space and a generator model, that is able to generate an stochastic behaviour creating novel content in every new trial even from the same prompts as an input, performing unsupervised, semi-supervised or supervised learning, depending on the particular methodology. Regarding the created content by the model, generative artificial intelligence models are different from predictive machine learning systems, that merely perform a discrimination behaviour, solving classification or regression problems. In particular, these models are able to discriminate information and generate information of the transformed input information, or prompt.\n\nThe key aspect about generative models is that their architecture and the data that they have been fed is enormous. For example, it is possible now to estimate the parameters of the model by feeding it the contents of the whole Wikipedia, Github, social networks, Google images and more. Despite being fed with an enormous size of data, thanks to the rise of computing we can design deep neural networks [18], transformers [22] and other models such as generative adversarial networks [9] or variational autoencoders [23] whose capacity is able to model the complexity of the data, without suffering from underfitting. As they are able to modelize the high-dimensional probability distribution of language or photos of a concrete or general domain, if they are complemented by generative models that map the latent high-dimensional semantic space of language of photos to a multimedia representation of text, audio or video we can map any input format like texts to any output format like video. In this sense, applications of this technology are endless, in the sense that we can train a model to generate genuine different multimedia formats as video, audio or text from different multimedia input formats, as for example, text.\n\nWe believe that it is necessary to provide a state-of-the-art review on the most popular generative AI models as they are revolutionizing several industries like the art industry [2] or universities [16,30]. As models are now able to generate genuine artistic content or large texts answering a prompt, these two industries and other ones that we will detail throughout this manuscript will need to readapt their activity to continue providing value. In this sense, generative AI models will not replace humans but enhance our content, being an inspiration for artists or improving the content generated by professors. In order to provide information for a professional working in any industry that can be benefited by these models we have made the organization of the paper as the following one. First, we will provide a taxonomy of the main generative models that have appeared in the industry. Then, the following sections will analyze each of the categories of the taxonomy. Finally, we finish the manuscript with a conclusions and further work section. We do not study the technical aspects of every model, such as transformers in detail as our purpose in this review is on the applications of the models and the content that they generative but not on how they work. For a detailed explanation of deep learning models and generative models we recommend other references [18,23].\n\n\nA Taxonomy of Generative AI models\n\nBefore analyzing each model in detail, we have tried to organize the current generative artificial models into a taxonomy whose categories represent the main mappings between each multimedia input and output type of data. The result is the one that we have illustrated in Figure 1. We have discovered a total of 9 categories, where each of the models that appear in Figure 1 will be described in detail in the following section. Each of the covered models has been published recently, as we illustrate in Figure 2, as our main concern in this manuscript is to describe the latest advances in generative AI models.\n\nInterestingly, only six organizations are behind the deployment of these models, as we illustrate in Figure 3. The main reason behind this fact is that in order  to be able to estimate the parameters of these models, it is mandatory to have an enormous computation power and a highly skilled and experienced team in data science and data engineering. Consequently, only the companies shown on Figure 3, with the help of acquired startups and collaborations with academia, have been able to successfully deploy generative artificial intelligence models. Fig. 3. Models by developer. In terms of major companies participating in startups, note that Microsoft invested 1 billion dollars in OpenAI and helps them with the development of models. As well, note that Google acquired Deepmind in 2014. In terms of universities, note that VisualGPT was developed by KAUST, Carnegie Mellon University and Nanyang Technological University and that the Human Motion Diffusion Model was developed by Tel Aviv University, Israel. As well, other projects are developed by a company in collaboration with a university. Concretely, this is the case for Stable Diffsion (Runway, Stability AI and LMU MUNICH), Soundify (Runway and Carnegie Mellon University) and DreamFusion (Google and UC Berkeley) Now that we have provided and analyzed the latest generative artificial intelligence models, the following section will cover each of the categories of the taxonomy presented in Figure 1 in detail.\n\n\nGenerative AI models categories\n\nIn this section we will cover in detail the nine categories described in Figure 1 of the previous section. For every category, we illustrate the details of the models shown in Figure 1.\n\n\nText-to-image models\n\nWe begin the review by considering the models whose input is a text prompt and whose output is an image. DALL\u00b7E 2 : DALL\u00b7E 2, created by OpenAI, is able to generate original, genuine and realistic images and art from a prompt consisting on a text description [10]. Luckily, it is possible to use the OPENAI API to get access to this model. In particular, DALL\u00b7E 2 manages to combine concepts, attributes and different styles. In order to do so, it uses the CLIP neural network. CLIP (Contrastive Language-Image Pre-Training) is a neural network trained on a variety of (image, text) pairs [25]. Using CLIP, that can be instructed in natural language to predict the most relevant text snippet, given an image, the model has recently merged as a successful representation learner for images. Concretely, CLIP embeddings have several desirable properties: they are robust to image distribution shift, have impressive zero-shot capabilities and have been fine-tuned to achieve state-of-theart results. In order to obtain a full generative model of images, the CLIP image embedding decoder module is combined with a prior model, which generates possible CLIP image embeddings from a given text caption. We illustrate an image generated from a prompt in Figure 4  IMAGEN : Imagen is a text-to-image diffusion model [17] consisting on large transformer language models. Critically, the main discovery observed with this model made is that large language models, pre-trained on text-only corpora, are very effective at encoding text for image synthesis [28]. Precisely, using Imagen, it has been found out that increasing the size of the language model boosts both sample fidelity and image-text alignment much more than increasing the size of the image diffusion model. The model was created by Google and the API can be found in their web page. For the evaluation of their model, Google created Drawbench, a set of 200 prompts that support the evaluation and comparison of text-to-image models. Most concretely, the model is based on a pretrained text encoder (like BERT [12]) that performs a mapping from text to a sequence of word embeddings and a cascade of conditional diffusion models that map these embeddings to images of increasing resolutions. We show an image generated from a prompt in Figure 5. Stable Diffusion : Stable Diffusion is a latent-diffusion model that is opensource and has been developed by the CompVis group at LMU Munich. The main difference of this model with respect to the other ones is the use of a latent diffusion model and that it performs image modification as it can perform operations in its latent space. For Stable Diffusion, we can use the API via their website. More concretely, Stable Diffusion consists of two parts: the text encoder and the image generator [17]. The image information creator works completely in the latent space. This property makes it faster than previous diffusion models that worked in a pixel space. We illustrate a Stable Diffusion image example in Figure 7. Muse : This model is a Text-to-image transformer model that achieves state-ofthe-art image generation while being more efficient than diffusion or autoregressive models [6]. Concretely, it is trained on a masked modelling task in discrete token space. Consequently, it is more efficient because of the use of discrete tokens and requiring fewer sampling iterations. Compared to Parti, a autoregressive model, Muse is more efficient because of parallel decoding. Muse is 10x faster at inference time than Imagen-3B or Parti-3B and 3x faster than Stable Diffusion v 1.4. Muse is also faster than than Stable Diffusion in spite of both models working in the latent space of a VQGAN. We append a comparison of the generated images by DALL\u00b7E 2, IMAGEN and Muse in Figure ??.\n\n\nText-to-3D models\n\nThe models that have been described in the previous section deal with the mapping of text prompts to 2D images. However, for some industries like gaming, it is necessary to generate 3D images. In this section, we briefly describe two text-to-3D models: Dreamfusion and Magic3D.\n\nDreamfusion : DreamFusion is a text-to-3D model developed by Google Research that uses a pretrained 2D text-to-image diffusion model to perform textto-3D synthesis [24]. In particular, Dreamfusion replaces previous CLIP techniques with a loss derived from distillation of a 2D diffusion model. Concretely, the diffusion model can be used as a loss within a generic continuous optimization problem to generate samples. Critically, sampling in parameter space is much harder than in pixels as we want to create 3D models that look like good images when rendered from random angles. To solve the issue, this model uses a differentiable generator. Other approaches are focused on sampling pixels, however, this model instead focuses on creating 3D models that look like good images when rendered from random angles. We illustrate in Figure 8 an example of an image created by Dreamfusion from one particular angle along with all the variations that can be generated from additional text prompts. In order to see the full animated image, we recommend to visit the web page of Dreamfusion. Magic3D : This model is a text to 3D model made by NVIDIA Corporation. While the Dreamfusion model achieves remarkable results, the method has two problems: mainly, the long processing time and the low-quality of the generated images. However, these problems are addressed by Magic3D using a two-stage optimization framework [20]. Firstly, Magic3D builds a low-resolution diffusion prior and, then, it accelerates with a sparse 3D hash grid structure. Using that, a textured 3D mesh model is furthered optimized with an efficient differentiable render. Comparatively, regarding human evaluation, the model achieves better results, as 61.7% prefer this model to DreamFusion. As we can see in Figure 9, Magic3D achieves much higher quality 3D shapes in both geometry and texture compared to DreamFusion. . 3D Images generated by Magic3D and Dreamfusion, where \"Ours\" refer to Magic3D. We can see a total of 8 text prompts and the images that both models generate from that prompts.\n\n\nImage-to-Text models\n\nSometimes, it is also useful to obtain a text that describes an image, that is precisely the inverse mapping to the one that has been analyzed in the previous subsections. In this section, we analyze two models that perform this task, along with others: Flamingo and VisualGPT.\n\nFlamingo : A Visual Language Model created by Deepmind using few shot learning on a wide range of open-ended vision and language tasks, simply by being prompted with a few input/output examples [1]. Concretely, the input of Flamingo contains visually conditioned autoregressive text generation models able to ingest a sequence of text tokens interleaved with images and/or videos and produce text as output. A query is made to the model along with a photo or a video and the model answers with a text answer. Some examples can be observed in Figure 10. Flamingo models take advantage of two complementary models: a vision model that analyzes visual scenes and a large language model which performs a basic form of reasoning. The language model is trained on a large amount of text data. VisualGPT : VisualGPT is an image captioning model made by OpenAI [7]. Concretely, VisualGPT leverages knowledge from the pretrained language model GPT-2 [5]. In order to bridge the semantic gap between different modalities, a novel encoder-decoder attention mechanism [33] is designed with an unsaturated rectified gating function. Critically, the biggest advantage of this model is that it does not need for as much data as other image-to-text models. In particular, improving data efficiency in image captioning networks would enable quick data curation, description of rare objects, and applications in specialized domains. Most interestingly, the API of this model can be found on GitHub. We include three examples of text prompts generated by the model with respect to three images fed to the model in Figure 11.\n\n\nText-to-Video models\n\nAs we have seen in the previous subsections, it is now possible to generate images from text. Consequently, the next logical step is to generate videos, that are Fig. 11. Three examples of text prompts generated by the images shown on the left. We also show the attention scores that the model assign to every word of the texts. In the third image, we can see for example how the most discriminative information about the image is the word \"cat\" and \"television\". sequences of images, from texts. In this section, we provide information about two models that are able to perform this task: Phenaki and Soundify.\n\nPhenaki : This model has been made by Google Research, and it is capable of performing realistic video synthesis, given a sequence of textual prompts [34]. Most interestingly, we can get access to the API of the model from GitHub. In particular, Phenaki is the first model that can generate videos from open domain time variable prompts. To address data issues, it performs joint training on a large image-text pairs dataset as well as a smaller number of video-text examples can result in generalization beyond what is available in the video datasets. This is mainly due to image-text datasets having billions of inputs while text-video datasets are much smaller. As well, limitations come from computational capabilities for videos of variable length.\n\nThe model has three parts: the C-ViViT encoder, the training transformer and the video generator. The encoder gets a compressed representation of videos. First tokens are transformed into embeddings. This is followed by the temporal transformer, then the spatial transformer. After the output of the spatial transformer, they apply a single linear projection without activation to map the tokens back to pixel space. Consequently, the model generates temporally coherent and diverse videos conditioned on open domain prompts even when the prompt is a new composition of concepts. The videos can be minutes long, while the model is trained on 1.4 second videos. Below we show in Figure 12 and in Figure 13 some examples of the creation of a video through a series of text prompts and from a series of text prompts and an image.  Soundify : In video editing, sound in half of the story. But, for professional video editing, the problems come from finding suitable sounds, aligning sounds, video and tuning parameters [21]. In order to solve this issue, Soundify is a system developed by Runway that matches sound effects to video. This system uses quality sound effects libraries and CLIP (a neural network with zero-shot image classification capabilities cited before). Concretely, the system has three parts: classification, synchronization, and mix. The classification matches effects to a video by classifying sound emitters within. To reduce the distinct sound emitters, the video is split based on absolute color histogram distances. In the synchronization part, intervals are identified comparing effects label with each frame and pinpointing consecutive matches above a threshold. In the mix part, effects are split into around one-second chunks. Critically, chunks are stitched via crossfades.\n\n\nText-to-Audio models\n\nAs we have seen in the previous subsection, images are not the only important non-structured data format. For videos, for music and in lots of contexts, audio can be critical. Consequently, we analyze in this subsection three models whose input information is text and whose output information is audio.\n\nAudioLM : This model has been made by Google for high-quality audio generation with long-term consistency. In particular, AudioLM maps the input audio into a sequence of discrete tokens and casts audio generation as language modeling task in this representation space [4]. By training on large corpora of raw audio waveforms, AudioLM learns to generate natural and coherent continuations given short prompts. The approach can be extended beyond speech by generating coherent piano music continuations, despite being trained without any symbolic representation of music. As with the other models, the API can be found through GitHub. Audio signals involve multiple scales of abstractions. When it comes to audio synthesis, multiple scales make achieving high audio quality while displaying consistency very challenging. This gets achieved by this model by combining recent advances in neural audio compression, self-supervised representation learning and language modelling.\n\nIn terms of subjective evaluation, raters were asked to listen to a sample of 10 seconds and decide whether it is human speech or a synthetic continuation. Based on 1000 ratings collected, the rate is 51.2%, which is not statistically significant from assigning labels at random. This tells us that humans cannot differentiate between synthetic and real samples.\n\nJukebox : This is a model, developed by OpenAI, that generates music with singing in the raw audio domain [13]. Once again, its API can be found in GitHub. Previously, earlier models in the text-to-music genre generated music symbolically in the form of a pianoroll which specifies timing, pitch and velocity. The challenging aspect is the non-symbolic approach where music is tried to be produced directly as a piece of audio. In fact, the space of raw audio is extremely high dimensional which makes the problem very challenging. Consequently, the key issue is that modelling that raw audio produces long-range dependencies, making it computationally challenging to learn the high-level semantics of music.\n\nIn order to solve this issue, this model tries to solve it by means of a hierarchical VQ-VAE architecture to compress audio into a discrete space [14], with a loss function designed to retain the most amount of information. This model produces songs from very different genres such as rock, hip-hop and jazz. However, the model is just limited to English songs. Concretely, its dataset for training is from 1.2 million songs from LyricWiki. The VQ-VAE has 5 billion parameters and is trained on 9-second audio clips for 3 days.\n\nWhisper : This model is an Audio-to-Text converter developed by OpenAI. It achieves several tasks in this field: multi-lingual speech recognition, translation and language identification [26]. As in previous cases, its API can be found in the GitHub website. The goal of a speech recognition system should be to work reliably out of the box in a broad range of environments without requiring supervised fine-tuning of a decoder for every deployment distribution. This is hard because of the lack of a high-quality pre-trained decoder.\n\nConcretely, this model is trained on 680,000 hours of labeled audio data. This data is collected from the internet, which results in a very diverse dataset covering a broad distribution of audio from many different environments, recordings setups, speakers and languages. The model makes sure that the dataset is only from human voice as machine learning voice would impair the model. Files are broken in 30 second segments paired with the subset of the transcript that occurs within that time segment.\n\nThe model has an encoder-deccoder transformer, as this architecture has been validated to scale reliably. We can observe the model's architecture characteristics through the figure below. We can see the different types of data and the learning sequence.\n\n\nText-to-Text models\n\nThe previous models all convert a non-structured data type into another one. But, regarding text, it is very useful to convert text into another text in order to satisfy tasks as general question and answering. The following four models treat text and also output texts to satisfy different needs.\n\nChatGPT : The popular ChatGPT is a model by OpenAI which interacts in a conversational way. As it is widely known, the model answers follow-up questions, challenges incorrect premises and reject inappropriate requests. More concretely, the algorithm behind ChatGPT is based on a transformer. However, the training is made through Reinforcement Learning for Human Feedback. In particular, an initial model is trained using supervised fine-tuning: human AI trainers would provide conversations in which they played both sides, the user and an AI assistant. Then, those people would be given the model-written responses to help them compose their response. This dataset was mixed to that of InstructGPT [3], which was transformed into a dialogue format. A demo can be found in their website and the API may also be found in OpenAI's website. We summarize the main steps of ChatGPT training in Figure 14, available in the ChatGPT demo's website. Finally, ChatGPT is also able to generate code and simple mathematics.\n\nLaMDA : LaMDA is a language model for dialog applications [32]. Unlike most other language models, LaMDA was trained on dialogue. It is a family of transformer-based neural language models specialized for dialog which have up to 137B parameters and are pre-trained on 1.56T words of public dialog data and web text. Fine-tuning can enable for safety and factual grounding of the model. Only 0.001% of training data was used for fine-tuning, which is a great achievement of the model. In particular, dialog modes take advantage of Transformers' ability to present long-term dependencies in text. Concretely, they are generally very well-suited for model scaling. Consequently, LaMDA makes use of a single model to perform multiple tasks: it generates several responses, which are filtered for safety, grounded on an external knowledge source and reranked to find the highest-quality response. We illustrate in Figure 15 an example of a dialog with the model.\n\nPEER : Collaborative language model developed by Meta AI research trained on edit histories to cover the entire writing process [29]. It is based on four  steps: Plan, Edit, Explain and Repeat. These steps are repeated until the text is in a satisfactory state that requires no further updates. The model allow to decompose the task of writing a paper into multiple easier subtasks. As well, the model allows humans to intervene at any time and steer the model in any direction.\n\nIt is mainly trained on Wikipedia edit histories. The approach is a selftraining, using models to infill missing data and then train other models on this synthetic data. The downside of this comes from comments being very noisy and a lack of citations, which tries to be compensated by a retrieval system which does not always work. The framework is based on an iterative process.\n\nThe entire process of formulating a plan, collecting documents, performing an edit and explaining it can be repeated multiple times until arriving at a sequence of texts. For the training, a DeepSpeed transformer is used.\n\nMeta AI Speech from Brain : Model developed by Meta AI to help people unable to communicate through speech, typing or gestures [11]. Previous techniques relied on invasive brain-recording techniques which require neurosurgical interventions. This model tries to decode language directly from noninvasive brain recordings. This would provide a safer, more scalable solution that could benefit many more people. The challenge with this proposed method come from noise and differences in each person's brain and where the sensors are placed.\n\nA deep learning model is trained with contrastive learning and used to maximally align noninvasive brain recordings and speech sounds. A self-supervised learning model called wave2vec 2.0. is used to identify the complex representations of speech in the brains of volunteers listening to audiobooks. The two noninvasive technologies used to measure neuronal activity are electroencephalography and magnetoencephalography.\n\nTraining data comes from four opensource datasets which represent 150 hours of recordings of 169 volunteers listening to audiobooks. EEG and MEG recordings are inserted into a brain model, which consists of a standard deep convolutional network with residual connections. These recordings are what comes from individuals' brains. This model then has both a speech model for sound and a brain model for MEG data.\n\nResults show that several components of the algorithm were beneficial to decoding performance. As well, analysis shows that the algorithm improves as EEG and MEG recordings increase. This research shows that self-supervised trained AI can decode perveived speech despite noise and variability in that data. The biggest limitation of this research is that it focuses on speech perception, but the ultimate goal would be to extend this work to speech production.\n\n\nText-to-Code models\n\nAlthough we have covered text-to-text models, not all texts follows the same syntax. An special type of text is code. In programming, it is essential to know how to convert an idea into code. In order to do so, Codex and Alphacode models help.\n\nCodex : AI system created by OpenAI which translates text to code. It is a general-purpose programming model, as it can be applied to basically any programming task [8]. Programming can be broken down into two parts: breaking a problem down into simpler problems and mapping those problems into existing code (libraries, APIs, or functions) that already exist. The second part is the most time-barring part for programmers, and it is where Codex excels the most. The data collected for training was collected in May 2020 from public software repositories hosted on GitHub, containing 179GB of unique Python files under 1 MB. The model is fine-tuned from GPT-3, which already contains strong natural language representations. The demo and the API can be found in Open AI's website.\n\nAlphacode : Other language models have demonstrated an impressive ability to generate code, but these systems still perform poorly when evaluated on more complex, unseen problems. However, Alphacode is a system for code generation for problems that require for deeper reasoning [19]. Three components are key for this achievement: having an extensive dataset for training and evaluation, large and efficient transformer based architectures and a large-scale model sampling.\n\nIn terms of training, the model is firstly pre-trained through GitHub repositories amounting to 715.1 GB of code. This is a much more extensive dataset than Codex's pre training dataset. For the training to be better, a fine-tuning dataset is introduced from the Codeforces plataform. Through this platform, Codecontests are conducted, for the validation phase, in which we better the performance of the model. Regarding the transformer-based architecture, they use an encoder-decoder transformer architecture. Compared to decoder-only architectures commonly used, this architecture allows for a bidirectional description and extra flexibility. As well, they use a shallow encoder and a deep encoder to further the model's efficiency. To reduce the cost of sampling, multi-query attention is used.\n\n\nText-to-Science models\n\nEven scientific texts are being targeted by generative AI, as the Galactica and Minerva models have shown. Although there is a long way to manage success in this field, it is critical to study the first attempts towards automatic scientific text generation.\n\nGalactica : Galactica is a new large model for automatically organizing science developed by Meta AI and Papers with Code. The main advantage of the model is the ability to train on it for multiple epochs without overfitting, where upstream and downstream performance improves with use of repeated tokens. The dataset design is critical to the approach as all of it is processed in a common markdown format to blend knowledge between sources. Citations are processed via a certain token that allows researchers to predict a citation given any input context. The capability of the model of predicting citations improves with scale and the model becomes better at the distribution of citations. In addition, the model can perform multi-modal tasks involving SMILES chemical formulas and protein sequences. Concretely, Galactica uses a transformer architecture in a decoder-only setup with GeLU activation for all model sizes.\n\nMinerva : Language model capable of solving mathematical and scientific questions using step-by-step reasoning. Minerva has a very clear focus on the collection of training data for this purpose. It solves quantitative reasoning problems, makes models at scale and employs best-in-class inference techniques. Concretely, Minerva solves these problems by generating solutions step-by-step, this means including calculations and symbolic manipulation without having the need for external tools such a calculator.\n\n\nOther models\n\nWe would like to finish our review by covering additional models that do not fit any of the categories mentioned previously.\n\nAlphatensor, created by the research company Deepmind, is a completely revolutionary model in the industry for its ability to discover new algorithms [15]. In the published example, Alpha Tensor creates a more efficient algorithm for matrix multiplication, which is very important, as improving the efficiency of algorithms affects a lot of computations, from neural networks to scientific computing routines.\n\nThe methodology is based on a deep reinforcement learning approach in which the agent, AlphaTensor is trained to play a single-player game where the objective is finding tensor decomposisitions within a finite factor space. At each step of the TensorGame, the player selects how to combine different entries of the matrices to multiply. A score is assigned based on the number of selected operations required to reach the correct multiplication result. To solve TensorGame, an agent, AlphaTensor was developed. AlphaTensor uses a specialized neural network architecture to exploit symmetries using synthetic training games.\n\nGATO is a single generalist agent made by Deepmind. It works as a multimodal, multi-task, multi-embodiment generalist policy [27]. The same network with the same weights can carry very different capabilities from playing Atari, caption images, chatting, stacking blocks and many more. There are many benefits from using a single neural sequence model across all tasks. It reduces the need for hand crafting policy models with their own inductive biases. It increases the amount and diversity of training data. This general agent is successful at many tasks and can be adapted with little extra data to succeed at an even larger number of tasks. r training at the operating point of model scale that allows real-time control of real-world robots, currently around 1.2B parameters in the case of GATO.\n\nOther published generative AI models are able to generate human motion [31] or, in the case of ChatBCG, slides using ChatGPT as a surrogate model.\n\n\nConclusions and further work\n\nThrough this paper, we can observe the capabilities which generative artificial intelligence has. We have seen a great deal of creativity as well as personalization in tasks such as text-to-image or in tasks such as text-to-audio. They also are accurate in text-to-science or text-to-code tasks. This can help economies in a major way as it can help optimize creative and non-creative tasks.\n\nHowever, because of the way that they are constructed at the moment, these models face a number of limitations. In terms of dataset, finding data for some of the models found such as the text-to-science or the text-to-audio is very hard, making it very time-consuming to train the model. In particular, datasets and parameters have to be enormous, making it harder to train. One of the biggest issues with models is trying solutions out of the problems in the dataset, with which models have more trouble solving. As well, in terms of computation, a lot of time and computation capacity is necessary in order to run them. Many days and advanced computers are needed in order to run the models.\n\nIn addition, these models face bias from the data which needs to be controlled. Galactica model tries to control this issue through a layer of no bias, but it still a major issue for Generative Artificial Intelligence.\n\nWith the Minerva model, we can see that the model knows the steps which it needs to take to solve an equation. This is groundbreaking as one of the biggest limitations with these models is that the models do not understand exactly what they are doing. Moreover, it's still an industry starting; thus accuracy is still an issue. Text-to-video models for example are only represented by Phenaki because how hard it is to produce accurate videos. Text-to-science models do find some accuracy but that accuracy is still way behind to what it should be for professionals to actually rely on this technology on a day-to-day basis.\n\nFurthermore, these models need to be constrained because of a lack of understanding of ethics. Phenaki on its paper even acknowledges that a system like text-to-video can be used to create deep-fakes. Lastly, we are still in a phase where we are discovering what exactly the purpose of this intelligence will be. There has been articles comparing Google to ChatGPT3, which is totally inexact as ChatGPT3 does not update its information in real time. We should be aware about the limitations of these models to try and improve them in the following years.\n\nFig. 1 .\n1A taxonomy of the most popular generative AI models that have recently appeared classified according to their input and generated formats.\n\nFig. 2 .\n2Covered models by date of release. All models were released during 2022 except LaMDA, which was released in 2021 and Muse, in 2023.\n\nFig. 4 .\n4Image generated from the prompt \"A shiba inu wearing a beret and black turtleneck\".\n\nFig. 5 .\n5Image generated from the prompt \"A cute corgi lives in a house made out of sushi\".\n\nFig. 6 .\n6Image generated from the prompt \"A cute corgi lives in a house made out of sushi\".\n\nFig. 7 .\n7Comparison of generated images by the DALL\u00b7E 2, IMAGEN and Muse models with respect to the prompts that appear in the column of the left. The first column of images contains the results generated by DALL\u00b7E 2, the second the results obtained with IMAGEN and the third the images created by Muse.\n\nFig. 8 .\n8A 3D squirrel generated by Dreamfusion is shown at the left. Then, the other images contain the modifications generated to the squirrel with text prompts like \"wearing a jacket\".\n\nFig. 9\n9Fig. 9. 3D Images generated by Magic3D and Dreamfusion, where \"Ours\" refer to Magic3D. We can see a total of 8 text prompts and the images that both models generate from that prompts.\n\nFig. 10 .\n10Input prompts that contain images and text and output generated text respones from Flamingo. Every column contains a single example where we can see how Flamingo answers the question using the image from the text.\n\nFig. 12 .\n12Sequence of images created by the Phenaki model given four different prompts.\n\nFig. 13 .\n13Sequences of images created by the Phenaki model given an image and the prompt. We can see how the model is able to manipulate the given image according to the text prompt.\n\nFig. 14 .\n14Training steps of ChatGPT, combining supervised learning with reinforcement learning.\n\nFig. 15 .\n15Example of a dialog made with LaMDA.\n\nFlamingo: a visual language model for few-shot learning. J.-B Alayrac, J Donahue, P Luc, A Miech, I Barr, Y Hasson, K Lenc, A Mensch, K Millican, M Reynolds, arXiv:2204.14198arXiv preprintAlayrac, J.-B., Donahue, J., Luc, P., Miech, A., Barr, I., Hasson, Y., Lenc, K., Mensch, A., Millican, K., Reynolds, M., et al. Flamingo: a visual language model for few-shot learning. arXiv preprint arXiv:2204.14198 (2022).\n\nArtificial intelligence in the creative industries: a review. N Anantrasirichai, D Bull, Artificial Intelligence Review. Anantrasirichai, N., and Bull, D. Artificial intelligence in the creative indus- tries: a review. Artificial Intelligence Review (2021), 1-68.\n\nAnalogy generation by prompting large language models: A case study of instructgpt. B Bhavya, J Xiong, C Zhai, arXiv:2210.04186arXiv preprintBhavya, B., Xiong, J., and Zhai, C. Analogy generation by prompting large language models: A case study of instructgpt. arXiv preprint arXiv:2210.04186 (2022).\n\nAudiolm: a language modeling approach to audio generation. Z Borsos, R Marinier, D Vincent, E Kharitonov, O Pietquin, M Sharifi, O Teboul, D Grangier, M Tagliasacchi, N Zeghidour, arXiv:2209.03143arXiv preprintBorsos, Z., Marinier, R., Vincent, D., Kharitonov, E., Pietquin, O., Sharifi, M., Teboul, O., Grangier, D., Tagliasacchi, M., and Zeghidour, N. Audiolm: a language modeling approach to audio generation. arXiv preprint arXiv:2209.03143 (2022).\n\nHello, it's gpt-2-how can i help you? towards the use of pretrained language models for task-oriented dialogue systems. P Budzianowski, I Vuli\u0107, arXiv:1907.05774arXiv preprintBudzianowski, P., and Vuli\u0107, I. Hello, it's gpt-2-how can i help you? towards the use of pretrained language models for task-oriented dialogue systems. arXiv preprint arXiv:1907.05774 (2019).\n\nH Chang, H Zhang, J Barber, A Maschinot, J Lezama, L Jiang, M.-H Yang, K Murphy, W T Freeman, M Rubinstein, arXiv:2301.00704Text-to-image generation via masked generative transformers. arXiv preprintChang, H., Zhang, H., Barber, J., Maschinot, A., Lezama, J., Jiang, L., Yang, M.-H., Murphy, K., Freeman, W. T., Rubinstein, M., et al. Muse: Text-to-image generation via masked generative transformers. arXiv preprint arXiv:2301.00704 (2023).\n\nVisualgpt: Data-efficient adaptation of pretrained language models for image captioning. J Chen, H Guo, K Yi, B Li, M Elhoseiny, Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition. the IEEE/CVF Conference on Computer Vision and Pattern RecognitionChen, J., Guo, H., Yi, K., Li, B., and Elhoseiny, M. Visualgpt: Data-efficient adaptation of pretrained language models for image captioning. In Proceedings of the IEEE/CVF Conference on Computer Vision and Pattern Recognition (2022), pp. 18030-18040.\n\nEvaluating large language models trained on code. M Chen, J Tworek, H Jun, Q Yuan, H P D O Pinto, J Kaplan, H Edwards, Y Burda, N Joseph, G Brockman, arXiv:2107.03374arXiv preprintChen, M., Tworek, J., Jun, H., Yuan, Q., Pinto, H. P. d. O., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., et al. Evaluating large language models trained on code. arXiv preprint arXiv:2107.03374 (2021).\n\nGenerative adversarial networks: An overview. A Creswell, T White, V Dumoulin, K Arulkumaran, B Sengupta, A A Bharath, IEEE signal processing magazine. 35Creswell, A., White, T., Dumoulin, V., Arulkumaran, K., Sengupta, B., and Bharath, A. A. Generative adversarial networks: An overview. IEEE signal processing magazine 35, 1 (2018), 53-65.\n\nDiscovering the hidden vocabulary of. G Daras, A G Dimakis, arXiv:2206.00169dalle-2. arXiv preprintDaras, G., and Dimakis, A. G. Discovering the hidden vocabulary of dalle-2. arXiv preprint arXiv:2206.00169 (2022).\n\nA D\u00e9fossez, C Caucheteux, J Rapin, O Kabeli, J.-R King, arXiv:2208.12266Decoding speech from non-invasive brain recordings. arXiv preprintD\u00e9fossez, A., Caucheteux, C., Rapin, J., Kabeli, O., and King, J.-R. De- coding speech from non-invasive brain recordings. arXiv preprint arXiv:2208.12266 (2022).\n\nJ Devlin, M.-W Chang, K Lee, K Toutanova, Bert, arXiv:1810.04805Pre-training of deep bidirectional transformers for language understanding. arXiv preprintDevlin, J., Chang, M.-W., Lee, K., and Toutanova, K. Bert: Pre-training of deep bidirectional transformers for language understanding. arXiv preprint arXiv:1810.04805 (2018).\n\nP Dhariwal, H Jun, C Payne, J W Kim, A Radford, I Sutskever, Jukebox, arXiv:2005.00341A generative model for music. arXiv preprintDhariwal, P., Jun, H., Payne, C., Kim, J. W., Radford, A., and Sutskever, I. Jukebox: A generative model for music. arXiv preprint arXiv:2005.00341 (2020).\n\nGroup latent embedding for vector quantized variational autoencoder in non-parallel voice conversion. S Ding, R Gutierrez-Osuna, INTERSPEECH. Ding, S., and Gutierrez-Osuna, R. Group latent embedding for vector quan- tized variational autoencoder in non-parallel voice conversion. In INTERSPEECH (2019), pp. 724-728.\n\nDiscovering faster matrix multiplication algorithms with reinforcement learning. A Fawzi, M Balog, A Huang, T Hubert, B Romera-Paredes, M Barekatain, A Novikov, F J Ruiz, J Schrittwieser, G Swirszcz, Nature. 610Fawzi, A., Balog, M., Huang, A., Hubert, T., Romera-Paredes, B., Barekatain, M., Novikov, A., R Ruiz, F. J., Schrittwieser, J., Swirszcz, G., et al. Discovering faster matrix multiplication algorithms with reinforcement learning. Nature 610, 7930 (2022), 47-53.\n\nArtificial intelligence and computer science in education: From kindergarten to university. M Kandlhofer, G Steinbauer, S Hirschmugl-Gaisch, P Huber, 2016 IEEE Frontiers in Education Conference (FIE). IEEEKandlhofer, M., Steinbauer, G., Hirschmugl-Gaisch, S., and Huber, P. Artificial intelligence and computer science in education: From kindergarten to university. In 2016 IEEE Frontiers in Education Conference (FIE) (2016), IEEE, pp. 1-9.\n\nVariational diffusion models. D Kingma, T Salimans, B Poole, J Ho, Advances in neural information processing systems. 34Kingma, D., Salimans, T., Poole, B., and Ho, J. Variational diffusion models. Advances in neural information processing systems 34 (2021), 21696-21707.\n\nDeep learning. Y Lecun, Y Bengio, G Hinton, nature. 521LeCun, Y., Bengio, Y., and Hinton, G. Deep learning. nature 521, 7553 (2015), 436-444.\n\nCompetition-level code generation with alphacode. Y Li, D Choi, J Chung, N Kushman, J Schrittwieser, R Leblond, T Eccles, J Keeling, F Gimeno, A Dal Lago, Science. 378Li, Y., Choi, D., Chung, J., Kushman, N., Schrittwieser, J., Leblond, R., Eccles, T., Keeling, J., Gimeno, F., Dal Lago, A., et al. Competition-level code generation with alphacode. Science 378, 6624 (2022), 1092-1097.\n\nC.-H Lin, J Gao, L Tang, T Takikawa, X Zeng, X Huang, K Kreis, S Fidler, M.-Y Liu, T.-Y Lin, Magic3d, arXiv:2211.10440High-resolution text-to-3d content creation. arXiv preprintLin, C.-H., Gao, J., Tang, L., Takikawa, T., Zeng, X., Huang, X., Kreis, K., Fidler, S., Liu, M.-Y., and Lin, T.-Y. Magic3d: High-resolution text-to-3d content creation. arXiv preprint arXiv:2211.10440 (2022).\n\nD C Lin, .-E Germanidis, A Valenzuela, C Shi, Y Martelaro, N Soundify, arXiv:2112.09726Matching sound effects to video. arXiv preprintLin, D. C.-E., Germanidis, A., Valenzuela, C., Shi, Y., and Martelaro, N. Soundify: Matching sound effects to video. arXiv preprint arXiv:2112.09726 (2021).\n\nA survey of transformers. T Lin, Y Wang, X Liu, X Qiu, AI OpenLin, T., Wang, Y., Liu, X., and Qiu, X. A survey of transformers. AI Open (2022).\n\nProbabilistic machine learning: an introduction. K P Murphy, MIT press2022Murphy, K. P. Probabilistic machine learning: an introduction. MIT press, 2022.\n\nDreamfusion: Textto-3d using 2d diffusion. B Poole, A Jain, J T Barron, B Mildenhall, arXiv:2209.14988arXiv preprintPoole, B., Jain, A., Barron, J. T., and Mildenhall, B. Dreamfusion: Text- to-3d using 2d diffusion. arXiv preprint arXiv:2209.14988 (2022).\n\nLearning transferable visual models from natural language supervision. A Radford, J W Kim, C Hallacy, A Ramesh, G Goh, S Agarwal, G Sastry, A Askell, P Mishkin, J Clark, PMLRInternational Conference on Machine Learning. Radford, A., Kim, J. W., Hallacy, C., Ramesh, A., Goh, G., Agarwal, S., Sastry, G., Askell, A., Mishkin, P., Clark, J., et al. Learning transferable visual models from natural language supervision. In International Conference on Machine Learning (2021), PMLR, pp. 8748-8763.\n\nRobust speech recognition via large-scale weak supervision. A Radford, J W Kim, T Xu, G Brockman, C Mcleavey, I Sutskever, arXiv:2212.04356arXiv preprintRadford, A., Kim, J. W., Xu, T., Brockman, G., McLeavey, C., and Sutskever, I. Robust speech recognition via large-scale weak supervision. arXiv preprint arXiv:2212.04356 (2022).\n\n. S Reed, K Zolna, E Parisotto, S G Colmenarejo, A Novikov, G Barth-Maron, M Gimenez, Y Sulsky, J Kay, J T Springenberg, arXiv:2205.06175A generalist agent. arXiv preprintReed, S., Zolna, K., Parisotto, E., Colmenarejo, S. G., Novikov, A., Barth-Maron, G., Gimenez, M., Sulsky, Y., Kay, J., Springenberg, J. T., et al. A generalist agent. arXiv preprint arXiv:2205.06175 (2022).\n\nPhotorealistic text-to-image diffusion models with deep language understanding. C Saharia, W Chan, S Saxena, L Li, J Whang, E Denton, S K S Ghasemipour, B K Ayan, S S Mahdavi, R G Lopes, arXiv:2205.11487arXiv preprintSaharia, C., Chan, W., Saxena, S., Li, L., Whang, J., Denton, E., Ghasemipour, S. K. S., Ayan, B. K., Mahdavi, S. S., Lopes, R. G., et al. Photorealistic text-to-image diffusion models with deep language understanding. arXiv preprint arXiv:2205.11487 (2022).\n\nT Schick, J Dwivedi-Yu, Z Jiang, F Petroni, P Lewis, G Izacard, Q You, C Nalmpantis, E Grave, S Riedel, Peer, arXiv:2208.11663A collaborative language model. arXiv preprintSchick, T., Dwivedi-Yu, J., Jiang, Z., Petroni, F., Lewis, P., Izacard, G., You, Q., Nalmpantis, C., Grave, E., and Riedel, S. Peer: A collaborative language model. arXiv preprint arXiv:2208.11663 (2022).\n\nT Susnjak, Chatgpt, arXiv:2212.09292The end of online exam integrity. arXiv preprintSusnjak, T. Chatgpt: The end of online exam integrity? arXiv preprint arXiv:2212.09292 (2022).\n\nHuman motion diffusion model. G Tevet, S Raab, B Gordon, Y Shafir, D Cohen-Or, A H Bermano, arXiv:2209.14916arXiv preprintTevet, G., Raab, S., Gordon, B., Shafir, Y., Cohen-Or, D., and Bermano, A. H. Human motion diffusion model. arXiv preprint arXiv:2209.14916 (2022).\n\nR Thoppilan, D De Freitas, J Hall, N Shazeer, A Kulshreshtha, H.-T Cheng, A Jin, T Bos, L Baker, Y Du, arXiv:2201.08239Language models for dialog applications. arXiv preprintThoppilan, R., De Freitas, D., Hall, J., Shazeer, N., Kulshreshtha, A., Cheng, H.-T., Jin, A., Bos, T., Baker, L., Du, Y., et al. Lamda: Language models for dialog applications. arXiv preprint arXiv:2201.08239 (2022).\n\nAttention is all you need. Advances in neural information processing systems. A Vaswani, N Shazeer, N Parmar, J Uszkoreit, L Jones, A N Gomez, L Kaiser, I Polosukhin, 30Vaswani, A., Shazeer, N., Parmar, N., Uszkoreit, J., Jones, L., Gomez, A. N., Kaiser, L., and Polosukhin, I. Attention is all you need. Advances in neural information processing systems 30 (2017).\n\nR Villegas, M Babaeizadeh, P.-J Kindermans, H Moraldo, H Zhang, M T Saffar, S Castro, J Kunze, D Erhan, Phenaki, arXiv:2210.02399Variable length video generation from open domain textual description. arXiv preprintVillegas, R., Babaeizadeh, M., Kindermans, P.-J., Moraldo, H., Zhang, H., Saffar, M. T., Castro, S., Kunze, J., and Erhan, D. Phenaki: Variable length video generation from open domain textual description. arXiv preprint arXiv:2210.02399 (2022).\n", "annotations": {"author": "[{\"end\":189,\"start\":88},{\"end\":293,\"start\":190}]", "publisher": null, "author_last_name": "[{\"end\":111,\"start\":96},{\"end\":215,\"start\":200}]", "author_first_name": "[{\"end\":95,\"start\":88},{\"end\":197,\"start\":190},{\"end\":199,\"start\":198}]", "author_affiliation": "[{\"end\":188,\"start\":113},{\"end\":292,\"start\":217}]", "title": "[{\"end\":85,\"start\":1},{\"end\":378,\"start\":294}]", "venue": null, "abstract": "[{\"end\":1521,\"start\":380}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b22\"},\"end\":1698,\"start\":1694},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3083,\"start\":3079},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":3102,\"start\":3098},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3163,\"start\":3160},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":3196,\"start\":3192},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4089,\"start\":4086},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4110,\"start\":4106},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":4113,\"start\":4110},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":5287,\"start\":5283},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":5290,\"start\":5287},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7932,\"start\":7928},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":8262,\"start\":8258},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":8982,\"start\":8978},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9218,\"start\":9214},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9738,\"start\":9734},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":10468,\"start\":10464},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":10861,\"start\":10858},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":11927,\"start\":11923},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":13172,\"start\":13168},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":14323,\"start\":14320},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":14982,\"start\":14979},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":15070,\"start\":15067},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":15186,\"start\":15182},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":16523,\"start\":16519},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":18143,\"start\":18139},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":19525,\"start\":19522},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":20703,\"start\":20699},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":21453,\"start\":21449},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":22023,\"start\":22019},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24151,\"start\":24148},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":24524,\"start\":24520},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":25553,\"start\":25549},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":26637,\"start\":26633},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28779,\"start\":28776},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29675,\"start\":29671},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":32683,\"start\":32679},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":33694,\"start\":33690},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":34441,\"start\":34437}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":37183,\"start\":37034},{\"attributes\":{\"id\":\"fig_1\"},\"end\":37326,\"start\":37184},{\"attributes\":{\"id\":\"fig_2\"},\"end\":37421,\"start\":37327},{\"attributes\":{\"id\":\"fig_3\"},\"end\":37515,\"start\":37422},{\"attributes\":{\"id\":\"fig_4\"},\"end\":37609,\"start\":37516},{\"attributes\":{\"id\":\"fig_5\"},\"end\":37915,\"start\":37610},{\"attributes\":{\"id\":\"fig_6\"},\"end\":38105,\"start\":37916},{\"attributes\":{\"id\":\"fig_7\"},\"end\":38298,\"start\":38106},{\"attributes\":{\"id\":\"fig_8\"},\"end\":38525,\"start\":38299},{\"attributes\":{\"id\":\"fig_9\"},\"end\":38616,\"start\":38526},{\"attributes\":{\"id\":\"fig_10\"},\"end\":38802,\"start\":38617},{\"attributes\":{\"id\":\"fig_11\"},\"end\":38901,\"start\":38803},{\"attributes\":{\"id\":\"fig_12\"},\"end\":38951,\"start\":38902}]", "paragraph": "[{\"end\":2673,\"start\":1537},{\"end\":3905,\"start\":2675},{\"end\":5291,\"start\":3907},{\"end\":5943,\"start\":5330},{\"end\":7423,\"start\":5945},{\"end\":7644,\"start\":7459},{\"end\":11458,\"start\":7669},{\"end\":11757,\"start\":11480},{\"end\":13822,\"start\":11759},{\"end\":14124,\"start\":13847},{\"end\":15731,\"start\":14126},{\"end\":16367,\"start\":15756},{\"end\":17122,\"start\":16369},{\"end\":18924,\"start\":17124},{\"end\":19252,\"start\":18949},{\"end\":20227,\"start\":19254},{\"end\":20591,\"start\":20229},{\"end\":21301,\"start\":20593},{\"end\":21830,\"start\":21303},{\"end\":22366,\"start\":21832},{\"end\":22870,\"start\":22368},{\"end\":23125,\"start\":22872},{\"end\":23446,\"start\":23149},{\"end\":24460,\"start\":23448},{\"end\":25419,\"start\":24462},{\"end\":25899,\"start\":25421},{\"end\":26281,\"start\":25901},{\"end\":26504,\"start\":26283},{\"end\":27044,\"start\":26506},{\"end\":27467,\"start\":27046},{\"end\":27880,\"start\":27469},{\"end\":28342,\"start\":27882},{\"end\":28609,\"start\":28366},{\"end\":29391,\"start\":28611},{\"end\":29866,\"start\":29393},{\"end\":30665,\"start\":29868},{\"end\":30949,\"start\":30692},{\"end\":31874,\"start\":30951},{\"end\":32386,\"start\":31876},{\"end\":32527,\"start\":32403},{\"end\":32938,\"start\":32529},{\"end\":33563,\"start\":32940},{\"end\":34364,\"start\":33565},{\"end\":34512,\"start\":34366},{\"end\":34936,\"start\":34545},{\"end\":35631,\"start\":34938},{\"end\":35851,\"start\":35633},{\"end\":36477,\"start\":35853},{\"end\":37033,\"start\":36479}]", "formula": null, "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1535,\"start\":1523},{\"attributes\":{\"n\":\"2\"},\"end\":5328,\"start\":5294},{\"attributes\":{\"n\":\"3\"},\"end\":7457,\"start\":7426},{\"attributes\":{\"n\":\"3.1\"},\"end\":7667,\"start\":7647},{\"attributes\":{\"n\":\"3.2\"},\"end\":11478,\"start\":11461},{\"attributes\":{\"n\":\"3.3\"},\"end\":13845,\"start\":13825},{\"attributes\":{\"n\":\"3.4\"},\"end\":15754,\"start\":15734},{\"attributes\":{\"n\":\"3.5\"},\"end\":18947,\"start\":18927},{\"attributes\":{\"n\":\"3.6\"},\"end\":23147,\"start\":23128},{\"attributes\":{\"n\":\"3.7\"},\"end\":28364,\"start\":28345},{\"attributes\":{\"n\":\"3.8\"},\"end\":30690,\"start\":30668},{\"attributes\":{\"n\":\"3.9\"},\"end\":32401,\"start\":32389},{\"attributes\":{\"n\":\"4\"},\"end\":34543,\"start\":34515},{\"end\":37043,\"start\":37035},{\"end\":37193,\"start\":37185},{\"end\":37336,\"start\":37328},{\"end\":37431,\"start\":37423},{\"end\":37525,\"start\":37517},{\"end\":37619,\"start\":37611},{\"end\":37925,\"start\":37917},{\"end\":38113,\"start\":38107},{\"end\":38309,\"start\":38300},{\"end\":38536,\"start\":38527},{\"end\":38627,\"start\":38618},{\"end\":38813,\"start\":38804},{\"end\":38912,\"start\":38903}]", "table": null, "figure_caption": "[{\"end\":37183,\"start\":37045},{\"end\":37326,\"start\":37195},{\"end\":37421,\"start\":37338},{\"end\":37515,\"start\":37433},{\"end\":37609,\"start\":37527},{\"end\":37915,\"start\":37621},{\"end\":38105,\"start\":37927},{\"end\":38298,\"start\":38115},{\"end\":38525,\"start\":38312},{\"end\":38616,\"start\":38539},{\"end\":38802,\"start\":38630},{\"end\":38901,\"start\":38816},{\"end\":38951,\"start\":38915}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5610,\"start\":5602},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5704,\"start\":5696},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":5843,\"start\":5835},{\"end\":6054,\"start\":6046},{\"end\":6346,\"start\":6338},{\"end\":6504,\"start\":6498},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":7412,\"start\":7404},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":7540,\"start\":7532},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":7643,\"start\":7635},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":8925,\"start\":8917},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":9968,\"start\":9960},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":10687,\"start\":10679},{\"end\":11456,\"start\":11448},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":12596,\"start\":12588},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":13542,\"start\":13534},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":14677,\"start\":14668},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":15730,\"start\":15721},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":15925,\"start\":15918},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":17811,\"start\":17802},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":17828,\"start\":17819},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":24347,\"start\":24338},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25380,\"start\":25371}]", "bib_author_first_name": "[{\"end\":39014,\"start\":39010},{\"end\":39025,\"start\":39024},{\"end\":39036,\"start\":39035},{\"end\":39043,\"start\":39042},{\"end\":39052,\"start\":39051},{\"end\":39060,\"start\":39059},{\"end\":39070,\"start\":39069},{\"end\":39078,\"start\":39077},{\"end\":39088,\"start\":39087},{\"end\":39100,\"start\":39099},{\"end\":39430,\"start\":39429},{\"end\":39449,\"start\":39448},{\"end\":39717,\"start\":39716},{\"end\":39727,\"start\":39726},{\"end\":39736,\"start\":39735},{\"end\":39994,\"start\":39993},{\"end\":40004,\"start\":40003},{\"end\":40016,\"start\":40015},{\"end\":40027,\"start\":40026},{\"end\":40041,\"start\":40040},{\"end\":40053,\"start\":40052},{\"end\":40064,\"start\":40063},{\"end\":40074,\"start\":40073},{\"end\":40086,\"start\":40085},{\"end\":40102,\"start\":40101},{\"end\":40509,\"start\":40508},{\"end\":40525,\"start\":40524},{\"end\":40757,\"start\":40756},{\"end\":40766,\"start\":40765},{\"end\":40775,\"start\":40774},{\"end\":40785,\"start\":40784},{\"end\":40798,\"start\":40797},{\"end\":40808,\"start\":40807},{\"end\":40820,\"start\":40816},{\"end\":40828,\"start\":40827},{\"end\":40838,\"start\":40837},{\"end\":40840,\"start\":40839},{\"end\":40851,\"start\":40850},{\"end\":41289,\"start\":41288},{\"end\":41297,\"start\":41296},{\"end\":41304,\"start\":41303},{\"end\":41310,\"start\":41309},{\"end\":41316,\"start\":41315},{\"end\":41781,\"start\":41780},{\"end\":41789,\"start\":41788},{\"end\":41799,\"start\":41798},{\"end\":41806,\"start\":41805},{\"end\":41814,\"start\":41813},{\"end\":41820,\"start\":41815},{\"end\":41829,\"start\":41828},{\"end\":41839,\"start\":41838},{\"end\":41850,\"start\":41849},{\"end\":41859,\"start\":41858},{\"end\":41869,\"start\":41868},{\"end\":42178,\"start\":42177},{\"end\":42190,\"start\":42189},{\"end\":42199,\"start\":42198},{\"end\":42211,\"start\":42210},{\"end\":42226,\"start\":42225},{\"end\":42238,\"start\":42237},{\"end\":42240,\"start\":42239},{\"end\":42513,\"start\":42512},{\"end\":42522,\"start\":42521},{\"end\":42524,\"start\":42523},{\"end\":42691,\"start\":42690},{\"end\":42703,\"start\":42702},{\"end\":42717,\"start\":42716},{\"end\":42726,\"start\":42725},{\"end\":42739,\"start\":42735},{\"end\":42993,\"start\":42992},{\"end\":43006,\"start\":43002},{\"end\":43015,\"start\":43014},{\"end\":43022,\"start\":43021},{\"end\":43323,\"start\":43322},{\"end\":43335,\"start\":43334},{\"end\":43342,\"start\":43341},{\"end\":43351,\"start\":43350},{\"end\":43353,\"start\":43352},{\"end\":43360,\"start\":43359},{\"end\":43371,\"start\":43370},{\"end\":43712,\"start\":43711},{\"end\":43720,\"start\":43719},{\"end\":44008,\"start\":44007},{\"end\":44017,\"start\":44016},{\"end\":44026,\"start\":44025},{\"end\":44035,\"start\":44034},{\"end\":44045,\"start\":44044},{\"end\":44063,\"start\":44062},{\"end\":44077,\"start\":44076},{\"end\":44088,\"start\":44087},{\"end\":44090,\"start\":44089},{\"end\":44098,\"start\":44097},{\"end\":44115,\"start\":44114},{\"end\":44493,\"start\":44492},{\"end\":44507,\"start\":44506},{\"end\":44521,\"start\":44520},{\"end\":44542,\"start\":44541},{\"end\":44874,\"start\":44873},{\"end\":44884,\"start\":44883},{\"end\":44896,\"start\":44895},{\"end\":44905,\"start\":44904},{\"end\":45132,\"start\":45131},{\"end\":45141,\"start\":45140},{\"end\":45151,\"start\":45150},{\"end\":45310,\"start\":45309},{\"end\":45316,\"start\":45315},{\"end\":45324,\"start\":45323},{\"end\":45333,\"start\":45332},{\"end\":45344,\"start\":45343},{\"end\":45361,\"start\":45360},{\"end\":45372,\"start\":45371},{\"end\":45382,\"start\":45381},{\"end\":45393,\"start\":45392},{\"end\":45403,\"start\":45402},{\"end\":45650,\"start\":45646},{\"end\":45657,\"start\":45656},{\"end\":45664,\"start\":45663},{\"end\":45672,\"start\":45671},{\"end\":45684,\"start\":45683},{\"end\":45692,\"start\":45691},{\"end\":45701,\"start\":45700},{\"end\":45710,\"start\":45709},{\"end\":45723,\"start\":45719},{\"end\":45733,\"start\":45729},{\"end\":46035,\"start\":46034},{\"end\":46037,\"start\":46036},{\"end\":46046,\"start\":46043},{\"end\":46060,\"start\":46059},{\"end\":46074,\"start\":46073},{\"end\":46081,\"start\":46080},{\"end\":46094,\"start\":46093},{\"end\":46353,\"start\":46352},{\"end\":46360,\"start\":46359},{\"end\":46368,\"start\":46367},{\"end\":46375,\"start\":46374},{\"end\":46521,\"start\":46520},{\"end\":46523,\"start\":46522},{\"end\":46670,\"start\":46669},{\"end\":46679,\"start\":46678},{\"end\":46687,\"start\":46686},{\"end\":46689,\"start\":46688},{\"end\":46699,\"start\":46698},{\"end\":46955,\"start\":46954},{\"end\":46966,\"start\":46965},{\"end\":46968,\"start\":46967},{\"end\":46975,\"start\":46974},{\"end\":46986,\"start\":46985},{\"end\":46996,\"start\":46995},{\"end\":47003,\"start\":47002},{\"end\":47014,\"start\":47013},{\"end\":47024,\"start\":47023},{\"end\":47034,\"start\":47033},{\"end\":47045,\"start\":47044},{\"end\":47440,\"start\":47439},{\"end\":47451,\"start\":47450},{\"end\":47453,\"start\":47452},{\"end\":47460,\"start\":47459},{\"end\":47466,\"start\":47465},{\"end\":47478,\"start\":47477},{\"end\":47490,\"start\":47489},{\"end\":47715,\"start\":47714},{\"end\":47723,\"start\":47722},{\"end\":47732,\"start\":47731},{\"end\":47745,\"start\":47744},{\"end\":47747,\"start\":47746},{\"end\":47762,\"start\":47761},{\"end\":47773,\"start\":47772},{\"end\":47788,\"start\":47787},{\"end\":47799,\"start\":47798},{\"end\":47809,\"start\":47808},{\"end\":47816,\"start\":47815},{\"end\":47818,\"start\":47817},{\"end\":48173,\"start\":48172},{\"end\":48184,\"start\":48183},{\"end\":48192,\"start\":48191},{\"end\":48202,\"start\":48201},{\"end\":48208,\"start\":48207},{\"end\":48217,\"start\":48216},{\"end\":48227,\"start\":48226},{\"end\":48231,\"start\":48228},{\"end\":48246,\"start\":48245},{\"end\":48248,\"start\":48247},{\"end\":48256,\"start\":48255},{\"end\":48258,\"start\":48257},{\"end\":48269,\"start\":48268},{\"end\":48271,\"start\":48270},{\"end\":48570,\"start\":48569},{\"end\":48580,\"start\":48579},{\"end\":48594,\"start\":48593},{\"end\":48603,\"start\":48602},{\"end\":48614,\"start\":48613},{\"end\":48623,\"start\":48622},{\"end\":48634,\"start\":48633},{\"end\":48641,\"start\":48640},{\"end\":48655,\"start\":48654},{\"end\":48664,\"start\":48663},{\"end\":48948,\"start\":48947},{\"end\":49158,\"start\":49157},{\"end\":49167,\"start\":49166},{\"end\":49175,\"start\":49174},{\"end\":49185,\"start\":49184},{\"end\":49195,\"start\":49194},{\"end\":49207,\"start\":49206},{\"end\":49209,\"start\":49208},{\"end\":49399,\"start\":49398},{\"end\":49412,\"start\":49411},{\"end\":49426,\"start\":49425},{\"end\":49434,\"start\":49433},{\"end\":49445,\"start\":49444},{\"end\":49464,\"start\":49460},{\"end\":49473,\"start\":49472},{\"end\":49480,\"start\":49479},{\"end\":49487,\"start\":49486},{\"end\":49496,\"start\":49495},{\"end\":49870,\"start\":49869},{\"end\":49881,\"start\":49880},{\"end\":49892,\"start\":49891},{\"end\":49902,\"start\":49901},{\"end\":49915,\"start\":49914},{\"end\":49924,\"start\":49923},{\"end\":49926,\"start\":49925},{\"end\":49935,\"start\":49934},{\"end\":49945,\"start\":49944},{\"end\":50159,\"start\":50158},{\"end\":50171,\"start\":50170},{\"end\":50189,\"start\":50185},{\"end\":50203,\"start\":50202},{\"end\":50214,\"start\":50213},{\"end\":50223,\"start\":50222},{\"end\":50225,\"start\":50224},{\"end\":50235,\"start\":50234},{\"end\":50245,\"start\":50244},{\"end\":50254,\"start\":50253}]", "bib_author_last_name": "[{\"end\":39022,\"start\":39015},{\"end\":39033,\"start\":39026},{\"end\":39040,\"start\":39037},{\"end\":39049,\"start\":39044},{\"end\":39057,\"start\":39053},{\"end\":39067,\"start\":39061},{\"end\":39075,\"start\":39071},{\"end\":39085,\"start\":39079},{\"end\":39097,\"start\":39089},{\"end\":39109,\"start\":39101},{\"end\":39446,\"start\":39431},{\"end\":39454,\"start\":39450},{\"end\":39724,\"start\":39718},{\"end\":39733,\"start\":39728},{\"end\":39741,\"start\":39737},{\"end\":40001,\"start\":39995},{\"end\":40013,\"start\":40005},{\"end\":40024,\"start\":40017},{\"end\":40038,\"start\":40028},{\"end\":40050,\"start\":40042},{\"end\":40061,\"start\":40054},{\"end\":40071,\"start\":40065},{\"end\":40083,\"start\":40075},{\"end\":40099,\"start\":40087},{\"end\":40112,\"start\":40103},{\"end\":40522,\"start\":40510},{\"end\":40531,\"start\":40526},{\"end\":40763,\"start\":40758},{\"end\":40772,\"start\":40767},{\"end\":40782,\"start\":40776},{\"end\":40795,\"start\":40786},{\"end\":40805,\"start\":40799},{\"end\":40814,\"start\":40809},{\"end\":40825,\"start\":40821},{\"end\":40835,\"start\":40829},{\"end\":40848,\"start\":40841},{\"end\":40862,\"start\":40852},{\"end\":41294,\"start\":41290},{\"end\":41301,\"start\":41298},{\"end\":41307,\"start\":41305},{\"end\":41313,\"start\":41311},{\"end\":41326,\"start\":41317},{\"end\":41786,\"start\":41782},{\"end\":41796,\"start\":41790},{\"end\":41803,\"start\":41800},{\"end\":41811,\"start\":41807},{\"end\":41826,\"start\":41821},{\"end\":41836,\"start\":41830},{\"end\":41847,\"start\":41840},{\"end\":41856,\"start\":41851},{\"end\":41866,\"start\":41860},{\"end\":41878,\"start\":41870},{\"end\":42187,\"start\":42179},{\"end\":42196,\"start\":42191},{\"end\":42208,\"start\":42200},{\"end\":42223,\"start\":42212},{\"end\":42235,\"start\":42227},{\"end\":42248,\"start\":42241},{\"end\":42519,\"start\":42514},{\"end\":42532,\"start\":42525},{\"end\":42700,\"start\":42692},{\"end\":42714,\"start\":42704},{\"end\":42723,\"start\":42718},{\"end\":42733,\"start\":42727},{\"end\":42744,\"start\":42740},{\"end\":43000,\"start\":42994},{\"end\":43012,\"start\":43007},{\"end\":43019,\"start\":43016},{\"end\":43032,\"start\":43023},{\"end\":43038,\"start\":43034},{\"end\":43332,\"start\":43324},{\"end\":43339,\"start\":43336},{\"end\":43348,\"start\":43343},{\"end\":43357,\"start\":43354},{\"end\":43368,\"start\":43361},{\"end\":43381,\"start\":43372},{\"end\":43390,\"start\":43383},{\"end\":43717,\"start\":43713},{\"end\":43736,\"start\":43721},{\"end\":44014,\"start\":44009},{\"end\":44023,\"start\":44018},{\"end\":44032,\"start\":44027},{\"end\":44042,\"start\":44036},{\"end\":44060,\"start\":44046},{\"end\":44074,\"start\":44064},{\"end\":44085,\"start\":44078},{\"end\":44095,\"start\":44091},{\"end\":44112,\"start\":44099},{\"end\":44124,\"start\":44116},{\"end\":44504,\"start\":44494},{\"end\":44518,\"start\":44508},{\"end\":44539,\"start\":44522},{\"end\":44548,\"start\":44543},{\"end\":44881,\"start\":44875},{\"end\":44893,\"start\":44885},{\"end\":44902,\"start\":44897},{\"end\":44908,\"start\":44906},{\"end\":45138,\"start\":45133},{\"end\":45148,\"start\":45142},{\"end\":45158,\"start\":45152},{\"end\":45313,\"start\":45311},{\"end\":45321,\"start\":45317},{\"end\":45330,\"start\":45325},{\"end\":45341,\"start\":45334},{\"end\":45358,\"start\":45345},{\"end\":45369,\"start\":45362},{\"end\":45379,\"start\":45373},{\"end\":45390,\"start\":45383},{\"end\":45400,\"start\":45394},{\"end\":45412,\"start\":45404},{\"end\":45654,\"start\":45651},{\"end\":45661,\"start\":45658},{\"end\":45669,\"start\":45665},{\"end\":45681,\"start\":45673},{\"end\":45689,\"start\":45685},{\"end\":45698,\"start\":45693},{\"end\":45707,\"start\":45702},{\"end\":45717,\"start\":45711},{\"end\":45727,\"start\":45724},{\"end\":45737,\"start\":45734},{\"end\":45746,\"start\":45739},{\"end\":46041,\"start\":46038},{\"end\":46057,\"start\":46047},{\"end\":46071,\"start\":46061},{\"end\":46078,\"start\":46075},{\"end\":46091,\"start\":46082},{\"end\":46103,\"start\":46095},{\"end\":46357,\"start\":46354},{\"end\":46365,\"start\":46361},{\"end\":46372,\"start\":46369},{\"end\":46379,\"start\":46376},{\"end\":46530,\"start\":46524},{\"end\":46676,\"start\":46671},{\"end\":46684,\"start\":46680},{\"end\":46696,\"start\":46690},{\"end\":46710,\"start\":46700},{\"end\":46963,\"start\":46956},{\"end\":46972,\"start\":46969},{\"end\":46983,\"start\":46976},{\"end\":46993,\"start\":46987},{\"end\":47000,\"start\":46997},{\"end\":47011,\"start\":47004},{\"end\":47021,\"start\":47015},{\"end\":47031,\"start\":47025},{\"end\":47042,\"start\":47035},{\"end\":47051,\"start\":47046},{\"end\":47448,\"start\":47441},{\"end\":47457,\"start\":47454},{\"end\":47463,\"start\":47461},{\"end\":47475,\"start\":47467},{\"end\":47487,\"start\":47479},{\"end\":47500,\"start\":47491},{\"end\":47720,\"start\":47716},{\"end\":47729,\"start\":47724},{\"end\":47742,\"start\":47733},{\"end\":47759,\"start\":47748},{\"end\":47770,\"start\":47763},{\"end\":47785,\"start\":47774},{\"end\":47796,\"start\":47789},{\"end\":47806,\"start\":47800},{\"end\":47813,\"start\":47810},{\"end\":47831,\"start\":47819},{\"end\":48181,\"start\":48174},{\"end\":48189,\"start\":48185},{\"end\":48199,\"start\":48193},{\"end\":48205,\"start\":48203},{\"end\":48214,\"start\":48209},{\"end\":48224,\"start\":48218},{\"end\":48243,\"start\":48232},{\"end\":48253,\"start\":48249},{\"end\":48266,\"start\":48259},{\"end\":48277,\"start\":48272},{\"end\":48577,\"start\":48571},{\"end\":48591,\"start\":48581},{\"end\":48600,\"start\":48595},{\"end\":48611,\"start\":48604},{\"end\":48620,\"start\":48615},{\"end\":48631,\"start\":48624},{\"end\":48638,\"start\":48635},{\"end\":48652,\"start\":48642},{\"end\":48661,\"start\":48656},{\"end\":48671,\"start\":48665},{\"end\":48677,\"start\":48673},{\"end\":48956,\"start\":48949},{\"end\":48965,\"start\":48958},{\"end\":49164,\"start\":49159},{\"end\":49172,\"start\":49168},{\"end\":49182,\"start\":49176},{\"end\":49192,\"start\":49186},{\"end\":49204,\"start\":49196},{\"end\":49217,\"start\":49210},{\"end\":49409,\"start\":49400},{\"end\":49423,\"start\":49413},{\"end\":49431,\"start\":49427},{\"end\":49442,\"start\":49435},{\"end\":49458,\"start\":49446},{\"end\":49470,\"start\":49465},{\"end\":49477,\"start\":49474},{\"end\":49484,\"start\":49481},{\"end\":49493,\"start\":49488},{\"end\":49499,\"start\":49497},{\"end\":49878,\"start\":49871},{\"end\":49889,\"start\":49882},{\"end\":49899,\"start\":49893},{\"end\":49912,\"start\":49903},{\"end\":49921,\"start\":49916},{\"end\":49932,\"start\":49927},{\"end\":49942,\"start\":49936},{\"end\":49956,\"start\":49946},{\"end\":50168,\"start\":50160},{\"end\":50183,\"start\":50172},{\"end\":50200,\"start\":50190},{\"end\":50211,\"start\":50204},{\"end\":50220,\"start\":50215},{\"end\":50232,\"start\":50226},{\"end\":50242,\"start\":50236},{\"end\":50251,\"start\":50246},{\"end\":50260,\"start\":50255},{\"end\":50269,\"start\":50262}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:2204.14198\",\"id\":\"b0\"},\"end\":39365,\"start\":38953},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":220768585},\"end\":39630,\"start\":39367},{\"attributes\":{\"doi\":\"arXiv:2210.04186\",\"id\":\"b2\"},\"end\":39932,\"start\":39632},{\"attributes\":{\"doi\":\"arXiv:2209.03143\",\"id\":\"b3\"},\"end\":40386,\"start\":39934},{\"attributes\":{\"doi\":\"arXiv:1907.05774\",\"id\":\"b4\"},\"end\":40754,\"start\":40388},{\"attributes\":{\"doi\":\"arXiv:2301.00704\",\"id\":\"b5\"},\"end\":41197,\"start\":40756},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":235351128},\"end\":41728,\"start\":41199},{\"attributes\":{\"doi\":\"arXiv:2107.03374\",\"id\":\"b7\"},\"end\":42129,\"start\":41730},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":20404279},\"end\":42472,\"start\":42131},{\"attributes\":{\"doi\":\"arXiv:2206.00169\",\"id\":\"b9\"},\"end\":42688,\"start\":42474},{\"attributes\":{\"doi\":\"arXiv:2208.12266\",\"id\":\"b10\"},\"end\":42990,\"start\":42690},{\"attributes\":{\"doi\":\"arXiv:1810.04805\",\"id\":\"b11\"},\"end\":43320,\"start\":42992},{\"attributes\":{\"doi\":\"arXiv:2005.00341\",\"id\":\"b12\"},\"end\":43607,\"start\":43322},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":202720023},\"end\":43924,\"start\":43609},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":252717185},\"end\":44398,\"start\":43926},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":45126361},\"end\":44841,\"start\":44400},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":235694314},\"end\":45114,\"start\":44843},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":1779661},\"end\":45257,\"start\":45116},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":246527904},\"end\":45644,\"start\":45259},{\"attributes\":{\"doi\":\"arXiv:2211.10440\",\"id\":\"b19\"},\"end\":46032,\"start\":45646},{\"attributes\":{\"doi\":\"arXiv:2112.09726\",\"id\":\"b20\"},\"end\":46324,\"start\":46034},{\"attributes\":{\"id\":\"b21\"},\"end\":46469,\"start\":46326},{\"attributes\":{\"id\":\"b22\"},\"end\":46624,\"start\":46471},{\"attributes\":{\"doi\":\"arXiv:2209.14988\",\"id\":\"b23\"},\"end\":46881,\"start\":46626},{\"attributes\":{\"doi\":\"PMLR\",\"id\":\"b24\",\"matched_paper_id\":231591445},\"end\":47377,\"start\":46883},{\"attributes\":{\"doi\":\"arXiv:2212.04356\",\"id\":\"b25\"},\"end\":47710,\"start\":47379},{\"attributes\":{\"doi\":\"arXiv:2205.06175\",\"id\":\"b26\"},\"end\":48090,\"start\":47712},{\"attributes\":{\"doi\":\"arXiv:2205.11487\",\"id\":\"b27\"},\"end\":48567,\"start\":48092},{\"attributes\":{\"doi\":\"arXiv:2208.11663\",\"id\":\"b28\"},\"end\":48945,\"start\":48569},{\"attributes\":{\"doi\":\"arXiv:2212.09292\",\"id\":\"b29\"},\"end\":49125,\"start\":48947},{\"attributes\":{\"doi\":\"arXiv:2209.14916\",\"id\":\"b30\"},\"end\":49396,\"start\":49127},{\"attributes\":{\"doi\":\"arXiv:2201.08239\",\"id\":\"b31\"},\"end\":49789,\"start\":49398},{\"attributes\":{\"id\":\"b32\"},\"end\":50156,\"start\":49791},{\"attributes\":{\"doi\":\"arXiv:2210.02399\",\"id\":\"b33\"},\"end\":50617,\"start\":50158}]", "bib_title": "[{\"end\":39427,\"start\":39367},{\"end\":41286,\"start\":41199},{\"end\":42175,\"start\":42131},{\"end\":43709,\"start\":43609},{\"end\":44005,\"start\":43926},{\"end\":44490,\"start\":44400},{\"end\":44871,\"start\":44843},{\"end\":45129,\"start\":45116},{\"end\":45307,\"start\":45259},{\"end\":46952,\"start\":46883}]", "bib_author": "[{\"end\":39024,\"start\":39010},{\"end\":39035,\"start\":39024},{\"end\":39042,\"start\":39035},{\"end\":39051,\"start\":39042},{\"end\":39059,\"start\":39051},{\"end\":39069,\"start\":39059},{\"end\":39077,\"start\":39069},{\"end\":39087,\"start\":39077},{\"end\":39099,\"start\":39087},{\"end\":39111,\"start\":39099},{\"end\":39448,\"start\":39429},{\"end\":39456,\"start\":39448},{\"end\":39726,\"start\":39716},{\"end\":39735,\"start\":39726},{\"end\":39743,\"start\":39735},{\"end\":40003,\"start\":39993},{\"end\":40015,\"start\":40003},{\"end\":40026,\"start\":40015},{\"end\":40040,\"start\":40026},{\"end\":40052,\"start\":40040},{\"end\":40063,\"start\":40052},{\"end\":40073,\"start\":40063},{\"end\":40085,\"start\":40073},{\"end\":40101,\"start\":40085},{\"end\":40114,\"start\":40101},{\"end\":40524,\"start\":40508},{\"end\":40533,\"start\":40524},{\"end\":40765,\"start\":40756},{\"end\":40774,\"start\":40765},{\"end\":40784,\"start\":40774},{\"end\":40797,\"start\":40784},{\"end\":40807,\"start\":40797},{\"end\":40816,\"start\":40807},{\"end\":40827,\"start\":40816},{\"end\":40837,\"start\":40827},{\"end\":40850,\"start\":40837},{\"end\":40864,\"start\":40850},{\"end\":41296,\"start\":41288},{\"end\":41303,\"start\":41296},{\"end\":41309,\"start\":41303},{\"end\":41315,\"start\":41309},{\"end\":41328,\"start\":41315},{\"end\":41788,\"start\":41780},{\"end\":41798,\"start\":41788},{\"end\":41805,\"start\":41798},{\"end\":41813,\"start\":41805},{\"end\":41828,\"start\":41813},{\"end\":41838,\"start\":41828},{\"end\":41849,\"start\":41838},{\"end\":41858,\"start\":41849},{\"end\":41868,\"start\":41858},{\"end\":41880,\"start\":41868},{\"end\":42189,\"start\":42177},{\"end\":42198,\"start\":42189},{\"end\":42210,\"start\":42198},{\"end\":42225,\"start\":42210},{\"end\":42237,\"start\":42225},{\"end\":42250,\"start\":42237},{\"end\":42521,\"start\":42512},{\"end\":42534,\"start\":42521},{\"end\":42702,\"start\":42690},{\"end\":42716,\"start\":42702},{\"end\":42725,\"start\":42716},{\"end\":42735,\"start\":42725},{\"end\":42746,\"start\":42735},{\"end\":43002,\"start\":42992},{\"end\":43014,\"start\":43002},{\"end\":43021,\"start\":43014},{\"end\":43034,\"start\":43021},{\"end\":43040,\"start\":43034},{\"end\":43334,\"start\":43322},{\"end\":43341,\"start\":43334},{\"end\":43350,\"start\":43341},{\"end\":43359,\"start\":43350},{\"end\":43370,\"start\":43359},{\"end\":43383,\"start\":43370},{\"end\":43392,\"start\":43383},{\"end\":43719,\"start\":43711},{\"end\":43738,\"start\":43719},{\"end\":44016,\"start\":44007},{\"end\":44025,\"start\":44016},{\"end\":44034,\"start\":44025},{\"end\":44044,\"start\":44034},{\"end\":44062,\"start\":44044},{\"end\":44076,\"start\":44062},{\"end\":44087,\"start\":44076},{\"end\":44097,\"start\":44087},{\"end\":44114,\"start\":44097},{\"end\":44126,\"start\":44114},{\"end\":44506,\"start\":44492},{\"end\":44520,\"start\":44506},{\"end\":44541,\"start\":44520},{\"end\":44550,\"start\":44541},{\"end\":44883,\"start\":44873},{\"end\":44895,\"start\":44883},{\"end\":44904,\"start\":44895},{\"end\":44910,\"start\":44904},{\"end\":45140,\"start\":45131},{\"end\":45150,\"start\":45140},{\"end\":45160,\"start\":45150},{\"end\":45315,\"start\":45309},{\"end\":45323,\"start\":45315},{\"end\":45332,\"start\":45323},{\"end\":45343,\"start\":45332},{\"end\":45360,\"start\":45343},{\"end\":45371,\"start\":45360},{\"end\":45381,\"start\":45371},{\"end\":45392,\"start\":45381},{\"end\":45402,\"start\":45392},{\"end\":45414,\"start\":45402},{\"end\":45656,\"start\":45646},{\"end\":45663,\"start\":45656},{\"end\":45671,\"start\":45663},{\"end\":45683,\"start\":45671},{\"end\":45691,\"start\":45683},{\"end\":45700,\"start\":45691},{\"end\":45709,\"start\":45700},{\"end\":45719,\"start\":45709},{\"end\":45729,\"start\":45719},{\"end\":45739,\"start\":45729},{\"end\":45748,\"start\":45739},{\"end\":46043,\"start\":46034},{\"end\":46059,\"start\":46043},{\"end\":46073,\"start\":46059},{\"end\":46080,\"start\":46073},{\"end\":46093,\"start\":46080},{\"end\":46105,\"start\":46093},{\"end\":46359,\"start\":46352},{\"end\":46367,\"start\":46359},{\"end\":46374,\"start\":46367},{\"end\":46381,\"start\":46374},{\"end\":46532,\"start\":46520},{\"end\":46678,\"start\":46669},{\"end\":46686,\"start\":46678},{\"end\":46698,\"start\":46686},{\"end\":46712,\"start\":46698},{\"end\":46965,\"start\":46954},{\"end\":46974,\"start\":46965},{\"end\":46985,\"start\":46974},{\"end\":46995,\"start\":46985},{\"end\":47002,\"start\":46995},{\"end\":47013,\"start\":47002},{\"end\":47023,\"start\":47013},{\"end\":47033,\"start\":47023},{\"end\":47044,\"start\":47033},{\"end\":47053,\"start\":47044},{\"end\":47450,\"start\":47439},{\"end\":47459,\"start\":47450},{\"end\":47465,\"start\":47459},{\"end\":47477,\"start\":47465},{\"end\":47489,\"start\":47477},{\"end\":47502,\"start\":47489},{\"end\":47722,\"start\":47714},{\"end\":47731,\"start\":47722},{\"end\":47744,\"start\":47731},{\"end\":47761,\"start\":47744},{\"end\":47772,\"start\":47761},{\"end\":47787,\"start\":47772},{\"end\":47798,\"start\":47787},{\"end\":47808,\"start\":47798},{\"end\":47815,\"start\":47808},{\"end\":47833,\"start\":47815},{\"end\":48183,\"start\":48172},{\"end\":48191,\"start\":48183},{\"end\":48201,\"start\":48191},{\"end\":48207,\"start\":48201},{\"end\":48216,\"start\":48207},{\"end\":48226,\"start\":48216},{\"end\":48245,\"start\":48226},{\"end\":48255,\"start\":48245},{\"end\":48268,\"start\":48255},{\"end\":48279,\"start\":48268},{\"end\":48579,\"start\":48569},{\"end\":48593,\"start\":48579},{\"end\":48602,\"start\":48593},{\"end\":48613,\"start\":48602},{\"end\":48622,\"start\":48613},{\"end\":48633,\"start\":48622},{\"end\":48640,\"start\":48633},{\"end\":48654,\"start\":48640},{\"end\":48663,\"start\":48654},{\"end\":48673,\"start\":48663},{\"end\":48679,\"start\":48673},{\"end\":48958,\"start\":48947},{\"end\":48967,\"start\":48958},{\"end\":49166,\"start\":49157},{\"end\":49174,\"start\":49166},{\"end\":49184,\"start\":49174},{\"end\":49194,\"start\":49184},{\"end\":49206,\"start\":49194},{\"end\":49219,\"start\":49206},{\"end\":49411,\"start\":49398},{\"end\":49425,\"start\":49411},{\"end\":49433,\"start\":49425},{\"end\":49444,\"start\":49433},{\"end\":49460,\"start\":49444},{\"end\":49472,\"start\":49460},{\"end\":49479,\"start\":49472},{\"end\":49486,\"start\":49479},{\"end\":49495,\"start\":49486},{\"end\":49501,\"start\":49495},{\"end\":49880,\"start\":49869},{\"end\":49891,\"start\":49880},{\"end\":49901,\"start\":49891},{\"end\":49914,\"start\":49901},{\"end\":49923,\"start\":49914},{\"end\":49934,\"start\":49923},{\"end\":49944,\"start\":49934},{\"end\":49958,\"start\":49944},{\"end\":50170,\"start\":50158},{\"end\":50185,\"start\":50170},{\"end\":50202,\"start\":50185},{\"end\":50213,\"start\":50202},{\"end\":50222,\"start\":50213},{\"end\":50234,\"start\":50222},{\"end\":50244,\"start\":50234},{\"end\":50253,\"start\":50244},{\"end\":50262,\"start\":50253},{\"end\":50271,\"start\":50262}]", "bib_venue": "[{\"end\":39008,\"start\":38953},{\"end\":39486,\"start\":39456},{\"end\":39714,\"start\":39632},{\"end\":39991,\"start\":39934},{\"end\":40506,\"start\":40388},{\"end\":40939,\"start\":40880},{\"end\":41409,\"start\":41328},{\"end\":41778,\"start\":41730},{\"end\":42281,\"start\":42250},{\"end\":42510,\"start\":42474},{\"end\":42812,\"start\":42762},{\"end\":43130,\"start\":43056},{\"end\":43436,\"start\":43408},{\"end\":43749,\"start\":43738},{\"end\":44132,\"start\":44126},{\"end\":44599,\"start\":44550},{\"end\":44959,\"start\":44910},{\"end\":45166,\"start\":45160},{\"end\":45421,\"start\":45414},{\"end\":45807,\"start\":45764},{\"end\":46152,\"start\":46121},{\"end\":46350,\"start\":46326},{\"end\":46518,\"start\":46471},{\"end\":46667,\"start\":46626},{\"end\":47101,\"start\":47057},{\"end\":47437,\"start\":47379},{\"end\":47867,\"start\":47849},{\"end\":48170,\"start\":48092},{\"end\":48725,\"start\":48695},{\"end\":49015,\"start\":48983},{\"end\":49155,\"start\":49127},{\"end\":49556,\"start\":49517},{\"end\":49867,\"start\":49791},{\"end\":50356,\"start\":50287},{\"end\":41477,\"start\":41411}]"}}}, "year": 2023, "month": 12, "day": 17}