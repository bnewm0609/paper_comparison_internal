{"id": 259370847, "updated": "2023-10-05 13:38:52.975", "metadata": {"title": "Making Large Language Models Better Reasoners with Step-Aware Verifier", "authors": "[{\"first\":\"Yifei\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Zeqi\",\"last\":\"Lin\",\"middle\":[]},{\"first\":\"Shizhuo\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Qiang\",\"last\":\"Fu\",\"middle\":[]},{\"first\":\"Bei\",\"last\":\"Chen\",\"middle\":[]},{\"first\":\"Jian-Guang\",\"last\":\"Lou\",\"middle\":[]},{\"first\":\"Weizhu\",\"last\":\"Chen\",\"middle\":[]}]", "venue": "ArXiv", "journal": "Proceedings of the 61st Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers)", "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "Few-shot learning is a challenging task that requires language models to generalize from limited examples. Large language models like GPT-3 and PaLM have made impressive progress in this area, but they still face difficulties in reasoning tasks such as GSM8K, a benchmark for arithmetic problems. To improve their reasoning skills, previous work has proposed to guide the language model with prompts that elicit a series of reasoning steps before giving the final answer, achieving a significant improvement on GSM8K from 17.9% to 58.1% in problem-solving rate. In this paper, we present DIVERSE (Diverse Verifier on Reasoning Step), a novel approach that further enhances the reasoning capability of language models. DIVERSE has three main components: first, it generates diverse prompts to explore different reasoning paths for the same question; second, it uses a verifier to filter out incorrect answers based on a weighted voting scheme; and third, it verifies each reasoning step individually instead of the whole chain. We evaluate DIVERSE on the latest language model code-davinci-002 and show that it achieves new state-of-the-art results on six of eight reasoning benchmarks (e.g., GSM8K 74.4% to 83.2%).", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2206.02336", "mag": null, "acl": "2023.acl-long.291", "pubmed": null, "pubmedcentral": null, "dblp": "conf/acl/LiLZFCLC23", "doi": "10.18653/v1/2023.acl-long.291"}}, "content": {"source": {"pdf_hash": "e826ac71dad8c4ce36d82fb7add43e3d306bb7e1", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/2206.02336v3.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "4f32ac4729253c46c01bdf4a115cd6cecf87fbd9", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/e826ac71dad8c4ce36d82fb7add43e3d306bb7e1.txt", "contents": "\nMaking Large Language Models Better Reasoners with Step-Aware Verifier\n\n\nYifei Li yifeili@microsoft.com \nSchool of Computer Science\nNational Key Laboratory for Multimedia Information Processing\nPeking University\n\n\nMicrosoft Corporation\n\n\nZeqi Lin zeqi.lin@microsoft.com \nMicrosoft Corporation\n\n\nShizhuo Zhang \nMicrosoft Corporation\n\n\nQiang Fu qifu@microsoft.com \nMicrosoft Corporation\n\n\nBei Chen bei.chen@microsoft.com \nMicrosoft Corporation\n\n\nJian-Guang Lou jlou@microsoft.com \nMicrosoft Corporation\n\n\nWeizhu Chen wzchen@microsoft.com \nMicrosoft Corporation\n\n\nMaking Large Language Models Better Reasoners with Step-Aware Verifier\n\nFew-shot learning is a challenging task that requires language models to generalize from limited examples. Large language models like GPT-3 and PaLM have made impressive progress in this area, but they still face difficulties in reasoning tasks such as GSM8K, a benchmark for arithmetic problems. To improve their reasoning skills, previous work has proposed to guide the language model with prompts that elicit a series of reasoning steps before giving the final answer, achieving a significant improvement on GSM8K from 17.9% to 58.1% in problem-solving rate. In this paper, we present DIVERSE (Diverse Verifier on Reasoning Step), a novel approach that further enhances the reasoning capability of language models. DIVERSE has three main components: first, it generates diverse prompts to explore different reasoning paths for the same question; second, it uses a verifier to filter out incorrect answers based on a weighted voting scheme; and third, it verifies each reasoning step individually instead of the whole chain. We evaluate DIVERSE on the latest language model code-davinci-002 and show that it achieves new state-of-the-art results on six of eight reasoning benchmarks (e.g., GSM8K 74.4% \u2192 83.2%).\n\nIntroduction\n\nLarge pretrained language models (PLMs) have shown remarkable performance on various natural language processing tasks, either by few-shot learning with prompts (Radford et al., 2019;Le Scao and Rush, 2021;Jin et al., 2022) or by fine-tuning (Houlsby et al., 2019;Hu et al., 2021;He et al., 2022). However, despite the increasing size and capacity of PLMs such as GPT-3 with 175B parameters (Brown et al., 2020) and PaLM with 540B parameters (Chowdhery et al., 2022), their reasoning abilities are still limited and often require mul- * Work was done during an internship at Microsoft Research Asia. tiple steps to produce correct answers, especially for tasks involving arithmetic, commonsense, or inductive reasoning (Cobbe et al., 2021).\n\nRecent works (Wei et al., 2022;Zhou et al., 2022;Kojima et al., 2022;Lampinen et al., 2022) have demonstrated that PLMs possess some latent reasoning capabilities, but they need carefully designed prompts to activate them. For instance, Wei et al. (2022) proposed chain-of-thought reasoning, which inserts multi-step reasoning paths before generating the final answers, and achieved significant improvement on the GSM8K arithmetic benchmark (Cobbe et al., 2021). Wang et al. (2022c) further introduced a voting mechanism to select the most consistent answer among different reasoning paths, and achieved state-of-the-art results on several reasoning benchmarks using the PaLM model (Chowdhery et al., 2022). Building on these successes, this paper continues this line of research and advances the reasoning capabilities of PLMs in three aspects, as illustrated in Figure 1.\n\nFirst, we propose to increase the diversity of reasoning paths by not only sampling from a single prompt, but also varying the prompt itself. We hypothesize that different prompts can elicit different ways of thinking, while the correct answer should be robust to these variations. Second, we propose to use a verifier to score the quality of each reasoning path and guide the voting mechanism. We argue that not all reasoning paths are equally good Figure 2: Chain-of-thought reasoning for GSM8K math word problem. The prompt is colored black and the reasoning path produced by the language model is colored teal. This reasoning path contains two reasoning steps.\n\nor reliable, and some may contain errors or inconsistencies that can be detected by the verifier. Third, we propose to assign a fine-grained label to each step of the reasoning path and use a step-aware verifier to attribute the correctness or wrongness of the final answer to each step. We conjecture that some steps may be correct but followed by wrong steps or vice versa, and identifying these cases can help diagnose and improve the reasoning process.\n\nWe name our method as DIVERSE (diverse verifier on reasoning step) and evaluate it on eight reasoning benchmarks that require different types of reasoning skills. We use three OpenAI PLMs (davinci, text-davinci-002, and code-davinci-002) and compare our results with recent state-of-the-art methods. We find that DIVERSE can consistently and significantly improve the performance of PLMs on these tasks, and achieve new state-of-the-art results on six of them 1 : GSM8K (74.4% \u2192 83.2%), AsDiv (81.9% \u2192 88.7%), MultiArith (99.3% \u2192 99.8%), SVAMP(86.6% \u2192 87.0%), SingleEq (79.5% \u2192 94.9%), and CLUTRR (67.0% \u2192 95.9%).\n\nOur data is publicly available at https://github. com/microsoft/DiVeRSe.\n\n\nDiverse Verifier on Reasoning\n\nStep Figure 1 shows the overview of DIVERSE. The key insights are three-fold: (1) leveraging diverse prompts to induce more diverse reasoning paths from the language models (Section 2.1); (2) train-1 Most of the previous SOTA results were achieved by selfconsistency on PaLM-540B (Chowdhery et al., 2022). ing a voting verifier to better derive the final answers from multiple reasoning paths (Section 2.2);\n\n(3) leveraging step correctness to further boost the voting verifier (Section 2.3).\n\n\nDiverse Prompts\n\nTo reason effectively, it is beneficial to explore diverse reasoning paths, following the idea that \"All Roads lead to Rome\". Wang et al. (2022c) proposed to generate various reasoning paths from language models by sampling decoding. However, their method relies on a fixed set of exemplars for all prompts, which may introduce bias and limit the diversity of the generated reasoning paths. To address this issue, we randomly select M 1 different prompts for each question, and then sample M 2 reasoning paths for each prompt using sampling decoding. This way, we obtain M = M 1 \u00d7 M 2 diverse reasoning paths for each question. 2\n\n\nVoting Verifier\n\nVerifier. The verifier takes a question and a candidate reasoning path as input, and outputs the probability that the reasoning path leads to the correct answer. We use deberta-v3-large (He et al., 2021) as the backbone model, with a small scalar head that outputs predictions on the [CLS] token.\n\nTraining the verifier. For each training question, we generate multiple candidate reasoning paths using chain-of-thought reasoning. We regard the reasoning paths that match the ground truth final answer as positive, and the others as negative.\n\nVoting Verifier. Wang et al. (2022c) use majority voting to aggregate the predictions of different reasoning paths. This method may fail when the majority of the reasoning paths are misled, while the minority of the reasoning paths are reasonable. We propose voting verifier, which leverages both voting and verifier:\ny = arg max y M i=1 1 y i =y \u00b7 f (x i , z i , y i ),(1)\nwhere 1 y i =y is an indicator function that returns 1 (or 0) if y i = y (or not), and f (\u00b7) is the probability produced by the verifier.\n\n\nStep-aware Voting Verifier\n\nEach reasoning path consists of several steps. We hypothesize that not all the steps in an incorrect Figure 3: How step-level labels are extracted. This figure shows four reasoning paths for a math word problem: the first two are positive and the bottom two are negative. The path 7 \u2192 9 \u2192 18 means that the first step calculates 7, the second step calculates 9, and the third step calculates the final answer 18. For the last path, the third step (which calculates 8) has never occurred in any positive reasoning paths, thus we regard this step and all steps after it as negative steps.\n\nreasoning path are equally wrong, and some steps may still be useful for reasoning. To exploit this, we extend the voting verifier to a step-aware voting verifier by introducing an extended loss function:\nL = L 0 + \u03b1 \u00b7 L 1 , L 1 = |D| i=1 |S i | j=1 BCE(label i,j , f \u2032 (input i , j)).\n(2) \u03b1 is a hyperparameter to balance the original loss L 0 and the step-level auxiliary loss L 1 ; S i,1 , S i,2 , ..., S i,|S i | are the steps in z i ; label i,j indicates whether S i,j is correct or not; f \u2032 (input i , j) represents the probability of the positive label for S i,j . 3 To obtain the step-level labels (i.e., label i,j ) for negative training data with wrong answers, we design an algorithm that compares intermediate results among steps in positive/negative reasoning paths. Figure 3 illustrates this algorithm. This algorithm can not only work on math word problems, but also generalize to other reasoning tasks: we use an off-the-shelf natural language inference model, roberta-large-mnli (Liu et al., 2019), to check whether two reasoning steps are semantically equivalent or not. Given a reasoning step, if we cannot find any semantically equivalent step in the positive reasoning paths, we label it and all the subsequent steps as negative steps. \n\n\nDetails\n\nLanguage Models. We use three OpenAI language models: davinci, text-davinci-002 and codedavinci-002. We use the default parameters except a temperature of 0.5 in sampling.\n\nExemplars. For arithmetic/commonsense/inductive reasoning, each prompt contains 5/7/7 exemplars. For DIVERSE, each question has 5 different prompts, and 20 reasoning paths are sampled from the language model for each prompt. For arithmetic reasoning, the exemplars are randomly sampled from the training dataset of GSM8K; for CLUTRR, the exemplars are sampled from its training dataset, with reasoning paths synthesized by handcraft rules (detailed settings for CLUTRR are listed in Appendix D); for StrategyQA and Com-monsenseQA, their original datasets do not contain enough exemplars with well-annotated reasoning paths, so we construct 1, 000 pseudo exemplars by \"self-teaching\" (the approach and the noise issue are discussed in Appendix B) from \"seed\" exemplars provided by Wei et al. (2022).\n\nTraining Datasets. For each task, we sample 1, 000 \u27e8question, answer\u27e9 pairs from the training dataset to train the verifier.\n\nVerifier. We fine-tune deberta-v3-large (He et al., 2021) with learning rate 1 \u00d7 10 \u22125 and batch size 128. For the step-aware verifier, we select the best \u03b1 among 0.0/0.1/0.2/0.3.\n\n\nMethod\n\n\nGSM8K\n\nAsDiv   Table 2: A GSM8K example (code-davinci-002) with step-level scores given by the step-aware verifier. The scores can not only improve the performance but also help the understanding of where the reasoning paths start to be incorrect. Table 1 shows the overall experimental results. We mainly compare DIVERSE with two baselines: (1) greedily decoding a single reasoning path (Wei et al., 2022), referred to as Greedy Decode;\n\n\nMain Results\n\n(2) sampling 100 reasoning paths, then select the final answer via majority voting (Wang et al., 2022c), referred to as Self-Consistency.\n\n\nEffectiveness\n\nExperimental results clearly demonstrate that DI-VERSE can bring significant and consistent improvements over recent strong baselines. The improvements are across different models (davinci, text-davinci-002 and code-davinci-002) as well as different reasoning skills (eight tasks in three reasoning skills). Taking GSM8K as an example, compared to Greedy Decoding and Self-Consistency, DIVERSE brings improvements of 22.2%/12.0% on davinci, 33.1%/12.0% on text-davinci-002, and 27.0%/5.6% on code-davinci-002. Compared to Self-Consistency, DIVERSE achieves average improvements of 5.6%/5.1%/54.3% on the three reasoning skills, respectively.\n\n\nComparing to Previous SOTAs\n\nIn   sulting in more false-positive exemplars in the pseudo exemplar base (Details will be discussed in Section B.2). Regarding inductive reasoning, DI-VERSE achieves a surprisingly good performance of 95.9% on the CLUTRR task, outperforming (+28.9%) previous SOTA result with fine-tuning (Sinha et al., 2019). 5 Table 2 shows an example of step-level scores given by the step-aware verifier. Steps in the correct reasoning path have relatively high scores, while the scores in the wrong reasoning path show where the path starts to be wrong. This indicates that besides improving the performance, the step-aware verifier can also bring interpretability to show the step-level correctness. We also show some extra examples of majority-voting in Table 10.\n\u27e8M 1 , M 2 \u27e9 GSM8K M 1 = 1, M 2 = 100 76.7 M 1 = 5, M 2 = 20 80.0 M 1 = 10, M 2 = 10 79.8 M 1 = 100, M 2 = 1 73.0\n\nCase Study\n\n\nAnalysis\n\nWe also conduct ablation experiments and analysis to investigate the keys to the success of DIVERSE. \n\n\nThe Effectiveness of Diverse Prompts\n\nBy diversifying both prompts and reasoning paths (\u27e8M 1 = 5, M 2 = 20\u27e9), we consistently improve performance over the sampling decoding approach (\u27e8M 1 = 1, M 2 = 100\u27e9) of Wang et al. (2022c), as shown in Table 3. Both methods use majority voting. Table 4 further reveals that neither only using diverse prompts nor only using sampling is optimal. In other words, the best performance is achieved by combining diverse prompts and sampling. Moreover, Figure 4 demonstrates that diverse prompts lead to more diverse reasoning paths. We hypothesize that this diversity contributes to the performance improvement by: (1) making correct results more distinguishable from varied errors during inference; and (2) providing more diverse negative samples for enhancing the verifier's generalizability during training.\n\n\nThe Effectiveness of Voting Verifier\n\nWe compare three algorithms to conclude the agreement from diverse reasoning paths: majority voting, verifier, and voting verifier.  Step Verifier (33%) Equal (50%) Verifier (17%) (b) With the step-aware mechanism, incorrect paths contain more correct steps. Figure 5: Human evaluation on GSM8K shows the effectiveness of the step-aware mechanism for verifier.\n\n\nThe Effectiveness of Step-aware Verifier\n\nWe evaluate the impact of incorporating step-level information into the voting verifier of DIVERSE. Table 6 shows the performance of DIVERSE with and without the step-aware mechanism on both the GSM8K and the CommonsenseQA datasets. We find that using the step-aware verifier improves the performance in most of the experiments. The only exception is code-davinci-002 on GSM8K, where the step-aware verifier slightly lowers the performance. We hypothesize that code-davinci-002 is more capable of generating high-quality reasoning paths, and thus does not benefit much from the step-level information.\n\nDetailed Human Evaluation of Reasoning Steps. We further analyze the quality of generated reasoning steps, by asking human annotators to judge Formulation Error (95%) Missing Steps (2%) Calculation Error (2%) Number Hallucination (1%) Figure 6: The distribution of error types in incorrect reasoning steps.\n\nwhether the GSM8K reasoning steps produced by DIVERSE (with/without step-aware mechanism) are good or not. Here \"good\" means not only correct formulas and calculation results but also textual fluency and logical coherence.\n\nWe further examine the quality of the reasoning steps generated by DIVERSE (with/without stepaware mechanism) for GSM8K, by asking human annotators to rate them based on correctness, fluency, and coherence. For each test question, we compare three reasoning paths produced by codedavinci-002: the one with the highest verifier score, the one with the highest step-aware verifier score, and a randomly chosen one. The annotators (master students) label any incorrect or unsatisfactory reasoning steps in each path (single-blind) and explain why. We collect annotations for 200 test questions, half of which have correct final answers from all three paths, and half of which have incorrect final answers from all three paths.\n\nWe find that all the reasoning paths with correct final answers are also correct in every intermediate step, which shows that code-davinci-002 can reliably generate accurate reasoning steps, not just lucky guesses. However, we also find that many of the correct reasoning paths have unnecessary steps. Figure 5(a) shows that 40% of the random paths have redundant steps, and the verifier can lower this percentage to 31%. We also find that the step-aware verifier can further eliminate redundant reasoning steps from 31% to 20%.\n\nFurthermore, for the incorrect reasoning paths, we find that the step-aware mechanism helps produce more correct steps before making mistakes.\n\nFor each failed test question, we compare the number of correct steps in the path with the highest verifier score and the path with the highest step-aware verifier score (by human evaluation). Figure 5(  shows that for 33%/17% of the failed test cases, the step-aware verifier generates more/fewer correct steps than the verifier without the step-aware mechanism.\n\nStep Error Types. Figure 6 shows the distribution of error types in the incorrect reasoning steps. We see that 95% of the errors are caused by incorrect formulations (i.e., using wrong intermediate results or operators and generating invalid formulas, which lead to incorrect answers). We also see that, although code-davinci-002 often makes division calculation errors (e.g., 10/3 = 3), both the verifier and the step-aware verifier can effectively assign low scores to such paths, thus improving the performance.\n\n\nHow Many Diverse Outputs Do\n\nWe Need? Figure 7 shows the accuracy at different M values, where M is the number of reasoning paths sampled from the 100 generated paths for each question. We observe that: (1) the accuracy increases with more reasoning paths, but the improvement becomes marginal at M \u2265 50;\n\n(2) DIVERSE outperforms self-consistency significantly and consistently at different M values.\n\n\nHow Many Training Data Do We Need?\n\nDIVERSE requires a dataset with reasoning paths for training the verifier. Figure 8 shows how the size of this dataset affects the performance. We observe that: the performance is only reduced by about 2%, even if the size of training data is cut by 75% (from 1, 000 to 250). With the same reasoning paths, voting verifier performs better than majority voting, while verifier without voting causes significant performance drops. \n\n\nThe Impact of the Number of Exemplars\n\nWe conduct experiments for k = 3/5/8 (k is the number of exemplars used in each prompt) on GSM8K. Figure 9 shows the results. We observe that: using 8 exemplars in each prompt can further boost the accuracy of GSM8K to 83.2%. Reasoning via Prompting Gigantic Language Models. Gigantic language models like GPT-3 (Brown et al., 2020) have demonstrated impressive few-shot learning capabilities in many tasks and have attracted many research interests on making gigantic language models better few-shot learners (Zhao et al., 2021;Holtzman et al., 2021;Min et al., 2021;Liu et al., 2022;Lu et al., 2021;Rubin et al., 2021;Min et al., 2022). However, these methods struggle to address tasks requiring reasoning skills.\n\nTo mitigate this, recently there is a line of research that focuses on unleashing the reasoning capabilities of gigantic language models via better prompting strategies. proposed to leverage gigantic language models to decompose questions into sub-questions, thereby addressing them in an iterative manner; Kojima et al. (2022) proposed that gigantic language models can even be good zero-shot reasoners, by designing prompts that can induce language models to do reasoning step-by-step; Lampinen et al. (2022) \n\n\nConclusion and Future Work\n\nIn this paper, we present DIVERSE, a novel and general method to enhance the reasoning abilities of large language models. Our method builds on the idea of prompting language models with multistep reasoning paths, but introduces three key innovations: diverse prompts, voting verifier, and stepwise verifier. The latter is especially novel and effective, as it verifies each reasoning step separately and we provides a detailed analysis of the model's behavior in each step. We demonstrate the superiority of DIVERSE through extensive experiments. For instance, using code-davinci-002, our method achieves state-of-the-art performance on most reasoning tasks, surpassing the 540B PaLM model with previous prompting techniques.\n\nThere are many directions for our future work. (1) As discussed in Appendix B.2, we will continue to investigate how to reduce or recognize false positive pseudo exemplars.\n\n(2) We plan to investigate mechanisms to produce better diverse prompts than simple sampling. (3) We will extend DIVERSE to other tasks and continue to design better prompting techniques to elicit the power of gigantic language models.\n\n\nLimitations\n\nComputing Resources. Despite the surprising performance it achieves, our framework needs to be applied to large language models like GPT-3 or PaLM. Inference with these models costs more time and budgets than fine-tuning models like RoBERTa (Liu et al., 2019).\n\nFaithfulness. Although DIVERSE can significantly improve the accuracy of final answers, we still cannot guarantee that the reasoning paths produced by the language models are 100 percent faithful. This is the key challenge and future direction for this line of research (chain-of-thought reasoning).\n\nMore Training Data. DIVERSE needs more labeled data with well-annotated reasoning paths to construct diverse prompts, and it also needs a training dataset for supervising the verifier. However, from another point of view, this limitation can also be regarded as a contribution that studies how chain-of-thought reasoning can be further improved if we have more training data than just a few exemplars.\n\nHuman Evaluation of Reasoning Steps. We use human evaluation to measure the quality of the intermediate steps in reasoning paths since few current works provide reliable frameworks to evaluate the quality of reasoning steps.  This is the Appendix for the paper: \"On the Advance of Making Language Models Better Reasoners\".\n\n\nReferences\n\n\nA Preliminaries\n\nPrompting. Prompting means prepending a few exemplars to the task input x and generating the output y from the pretrained language model:\np(y|C, x) = |y| t=1 p LM (y t |C, x, y <t ),(3)\nwhere C is the concatenation of K exemplars: C = (x 1 , y 1 ); (x 2 , y 2 ); ...; (x K , y K ). (4) We denote prompt as the concatenation of the exemplars C and the input x.\n\nReasoning Paths. For reasoning tasks that aim to generate an answer y for a question x, Wei et al. (2022) proposed the insertion of a reasoning path z before generating the answer y:\nC \u2032 = (x 1 , z 1 , y 1 ); ...; (x K , z K , y K ),(5)\nwhere z i is a text reasoning path of how the answer y i is reasoned step-by-step for question x i .\n\nThen, during inference, a reasoning path z will be generated before the answer y:\np(y|C \u2032 , x) = p(z|C \u2032 , x) \u00b7 p(y|C \u2032 , x, z). (6)\nFigure 10 demonstrates this idea in arithmetic reasoning (GSM8K), and \n\n\nB Boosting Reasoning Paths via Self-Teaching\n\nIn this section, we first introduce self-teaching, the method we use to construct a larger exemplar base when the original dataset does not contain enough data with well-annotated reasoning paths (Appendix B.1). We then discuss the noise issue when facing multiple-choice tasks (Appendix B.2).\n\n\nB.1 Self Teaching\n\nA critical issue of DIVERSE is how to provide diverse prompts. 6 Supposing that there is an exemplar base E, we can sample K exemplars from it to construct a prompt, and repeat this M 1 times independently to construct M 1 prompts with diverse exemplars.\n\nFor scenarios that do not have sufficient exemplars (i.e., |E| < K * M 1 ), we propose to bootstrap the diversity of prompts by \"self-teaching\", i.e., generating pseudo reasoning paths from a few exemplars and some \u27e8question, answer\u27e9 pairs without reasoning paths. 7 Suppose that D is a dataset without reasoning paths, consisting of CLUTRR 447 Kelly and her mother Ernest made breakfast together. Constance and her husband Ernest wanted a child badly What kind of relative is Kelly to Constance? The possible relationships are: sister, son, aunt, granddaughter, father, grandfather, grandmother, mother-in-law, uncle, niece, mother, brother, daughter, nephew, grandson, son-in-law, father-in-law, daughter-in-law. (x, y * ) pairs. Given the small exemplar base E, for each (x, y * ) \u2208 D, we can use prompting to generate a reasoning path z and the predicted answer y. We define the pseudo exemplar base E \u2032 as:\nE \u2032 = {(x, z, y)|(x, y * ) \u2208 D, y = y * },(7)\nthen E \u222a E \u2032 can be regarded as the new exemplar base for generating diverse prompts.\n\n\nB.2 Noises in Multiple Choice Tasks\n\nIn our experimental setup, StrategyQA and Com-monsenseQA are more challenging than other tasks, as they use pseudo exemplars generated through \"self-teaching\" (Appendix B.1).\n\n\"Self-teaching\" may lead to bad exemplars, whose reasoning paths are invalid but happen to yield answers coinciding with the ground truth. Questions in StrategyQA/CommonsenseQA are twochoice/four-choice questions, respectively. Therefore, such noise would be more serious in Strate-gyQA than in CommonsenseQA. This somehow explains why DIVERSE can achieve comparable performance (\u22120.8%) as the PaLM-based SOTA on CommonsenseQA, while it sees a 3.0% performance decline to PaLM on StrategyQA, which has only two choices. In other words, it is easier for StrategyQA to yield a right answer but a misleading reasoning path. \n\n\nC Data Statistics\n\n\nD Our Changes to CLUTRR\n\nIn our experiments, two changes are applied to the CLUTRR benchmark: (1) appending candidate answers to each question; (2) constructing reasoning paths based on rules. Table 9 shows an example of CLUTRR data after our modification.\n\nCandidate Answers. Besides the original questions (e.g., \"Mary, a female, took her husband who is a male, Roy, out for lunch. Ernest bought to dress for his father Roy. What kind of relative is Ernest to Mary?\"), we also provide all the candidate answers (i.e., \"The possible relationships are: sister, son, aunt, granddaughter, father, grandfather, grandmother, mother-in-law, uncle, niece, mother, brother, daughter, nephew, grandson, son-in-law, father-in-law, daughter-in-law\") in the input sequence. Our preliminary experiments show that, the gigantic language models cannot reach more than 50% accuracy without the sequence of candidate answers.\n\nReasoning Paths. For each question, Sinha et al.\n\n(2019) also provided a knowledge graph that formulates the relations directly mentioned in the question. Each knowledge graph consists of several \u27e8e 1 , r, e 2 \u27e9 triplets, which means there is a relation r from e 1 to e 2 . Take the aforementioned question as an example, the knowledge graph consists of two triplets: \u27e8Mary, husband, Roy\u27e9 and \u27e8Ernest, father, Roy\u27e9.\n\nFor each question, we construct the reasoning path based on its knowledge graph. We first topologically sort all triplets in the knowledge graph. For each triplet, we convert it to a reasoning step using the template \"{e 2 } is the {r} of {e 1 }\". After that, we can get the reasoning path by concatenating these reasoning steps. Take the aforementioned question as an example, the reasoning path is: \"Roy is the husband of Mary. Roy is the father of Ernest. Thus, Ernest is the son of Mary.\" Input: Kelly and her mother Ernest made breakfast together. Constance and her husband Ernest wanted a child badly. What kind of relative is Kelly to Constance? The possible relationships are: sister, son, aunt, granddaughter, father, grandfather, grandmother, mother-in-law, uncle, niece, mother, brother, daughter, nephew, grandson, son-in-law, father-in-law, daughter-in-law. Output: Kelly is the daughter of Ernest. Ernest is the husband of Constance. Thus, Kelly is the daughter of Constance. So the answer is daughter. Table 9: Examples of the original and our constructed CLUTRR data. In our experiments, we concatenated the class information (marked with red) after the input question as the input, and constructed reasoning paths (marked with blue) via a simple text template as the output.\n\n\nQuestion\n\n\nSelf-Consistency DIVERSE\n\n[GSM8K] Siobhan has 2 fewer jewels than Aaron. Aaron has 5 more jewels than half of Raymond's jewels. If Raymond has 40 jewels, how many jewels does Siobhan have?\n\nAaron has 2 more jewels than half of Raymond's jewels. So Aaron has 40 / 2 + 2 = 22 jewels. Siobhan has 2 fewer jewels than Aaron so she has 22 -2 = 20 jewels. So the answer is 20. Answer: 20 (Wrong) Count: 33\n\nRaymond has 40 jewels. Half of Raymond's jewels is 40 / 2 = 20. Aaron has 5 more jewels than half of Raymond's jewels, so he has 20 + 5 = 25 jewels. Siobhan has 2 fewer jewels than Aaron, so she has 25 -2 = 23 jewels. So the answer is 23. Answer: 23 (Correct) Count: 32 [StrategyQA] Could you go to New York Public Library and the Six Flags Great Escape in the same day?\n\nThe New York Public Library is in Manhattan. The Six Flags Great Escape is in Queensbury. Manhattan and Queensbury are too far apart to go to both in a single day. Thus, you could not go to New York Public Library and the Six Flags Great Escape in the same day. So the answer is no. Answer: no (Wrong) Count: 62\n\nThe New York Public Library is in New York City. The Six Flags Great Escape is in Queensbury, New York. Queensbury is about 3.5 hours away from New York City by car. Thus, you could go to the New York Public Library and the Six Flags Great Escape in the same day. So the answer is yes. Answer: yes (Correct) Count: 38 Table 10: Examples of code-davinci-002 on GSM8K. Compared to self-consistency (majority voting), DIVERSE can select the correct-but-not-most answer out of the sampled candidates, thus improving the reasoning performance.\n\nFigure 1 :\n1Our proposed method, DIVERSE (Diverse Verifier on Reasoning Step).\n\nFigure 4 :\n4Diverse prompts increase the diversity of GSM8K reasoning paths and their final answers. This is beneficial for the voting verifier. Left: the average number of distinct reasoning paths per question (we consider two reasoning paths to be the same if they have the same intermediate result chain as shown in Figure 3). Right: the average number of distinct final answers per question.\n\nFigure 7 :\n7GSM8K accuracy at different M values (how many reasoning paths are used for each question).\n\nFigure 8 :\n8. Researchers in the literature have proposed many benchmarks requiring various reasoning skills, including commonsense reasoning(Zellers et al., 2018; Talmor et al., 2019; Bhagavatula et al., 2019; Geva et al., 2021)  numerical reasoning (Dua et al., 2019), multi-hop reasoning (Yang et al., 2018), arithmetic reasoning (Koncel-Kedziorski et al., 2015; Roy and Roth, 2015; Miao et al., 2020; Patel et al., 2021; Cobbe et al., 2021), logical reasoning (Liu et al., 2020; Yu et al., 2020), inductive reasoning (Sinha et al., 2019) and tabular reasoning (Chen et al., 2020; Zhu et al., 2021). Reasoning with Symbolic Systems. Much research in the literature enhances the reasoning capabilities of machine learning systems by exploiting symbolic systems, including knowledge graphs (Mihaylov and Frank, 2018; Bauer et al., 2018; Kundu et al., 2019; Wang et al., 2019; Lin et al., 2019; Ding et al., 2019; Feng et al., 2020; Wang et al., 2022b), or question taxonomies (Dua et al., 2019; Andor et al., 2019; Hu et al., 2019b; Wang et al., 2022a). Although these methods work well on specific benchmarks, they usually require domain-specific designs and human efforts, thus limiting the generalizability. Reasoning via Language Models. This line of work aims to address reasoning tasks in a general sequence-to-sequence manner, empowered by reasoning-aware pre-training or fine-tuning of language models. For example, Deng et al. (2021) DIVERSE performance (code-davinci-002) on GSM8K with different sizes of the training dataset (without labeled reasoning paths). proposed to train the language model with crawled data from the internet; Asai and Hajishirzi (2020) proposed a logic-guided data augmentation method to pre-train the language model; Shen et al. (2021); Cobbe et al. (2021) proposed to train a verifier to rank solutions sampled from fine-tuned language models; Geva et al. (2020); Yoran et al. (2022); Campagna et al. (2020); Wang et al. (2022a) proposed to equip language models with reasoning abilities by generating training examples with human-designed templates; Pi et al. (2022) proposed to inject reasoning capabilities into language models by continual pre-training on program execution data.\n\nFigure 9 :\n9Wei et al. (2022)  proposed chainof-thought reasoning, of which the key insight is the insertion of multi-step reasoning paths before generating the final answers;Wang et al. (2022c)   proposed to improve chain-of-thought reasoning via self-consistency, of which the key insight is to conclude the most consistent answer from different reasoning paths sampled from the language model;Zhou et al. (2022); Creswell et al. (2022)   DIVERSE performance (code-davinci-002)   on GSM8K when each prompt contains 3/5/8 exemplars.\n\n\nproposed building a prompt by selecting examples and explanations together, thus substantially improving performance over selecting examples alone. Despite their great successes, these works come with their limitations. This paper is a continuation of this line of research, focusing on diverse verifier on reasoning steps.\n\n\nArithmetic Reasoning. Following Wang et al. (2022c), we use AsDiv (Miao et al., 2020), Sin-gleEq (Koncel-Kedziorski et al., 2015), MultiArith (Roy and Roth, 2015), SVAMP (Patel et al., 2021), and GSM8K (Cobbe et al., 2021). Inductive Reasoning. We use CLUTRR (Sinha et al., 2019), a diagnostic benchmark for inductive reasoning, requiring inferring kinship relations between characters in short stories.3 Experimental Setup \n\n3.1 Reasoning Tasks \n\nCommonsense Reasoning. Following Wang \net al. (2022c), we use CommonsenseQA (Talmor \net al., 2019) and StrategyQA (Geva et al., 2021). \n\n\n\nTable 1 :\n1The comparison of DIVERSE, Greedy Decode and Self-Consistency.The previous SOTA results (fine-tuned \n\n\nTable 1 ,\n1we also compare DIVERSE with: (1) \nprevious SOTA results based on fine-tuning; (2) \nrecent SOTA results (Wei et al., 2022) based on \nPaLM (Chowdhery et al., 2022), a gigantic lan-\nguage model with 540 billion parameters. 4 \n\nOn all the five arithmetic reasoning tasks, DI-\nVERSE (with code-davinci-002) achieves new \nSOTA results, with an average improvement of \n6.2%. On the two commonsense reasoning tasks, \nthe performance of DIVERSE is slightly lower \n(\u22121.9%) than that of PaLM-based self-consistency. \nWe speculate that the reason might be: these two \ncommonsense reasoning tasks are multiple-choice \ntasks rather than open-ended generation tasks, re-\n\n\nTable 3 :\n3The effectiveness of diverse prompts (\u27e85, 20\u27e9) \ncompared to pure sampling decoding (Wang et al., \n2022c), under majority voting. \n\n\n\nTable 4 :\n4GSM8K majority voting results for different \u27e8M 1 , M 2 \u27e9 settings on code-davinci-002.\n\nTable 5\n5shows \n\n\nTable 5 :\n5The effectiveness of voting verifier. All exepriments in this table use \u27e8M 1 , M 2 \u27e9 = \u27e85, 20\u27e9.Random \nSelected \nVerifier Step \nVerifier \n\n0 \n\n15 \n\n30 \n\n45 \u03f0\u03ed \n\n\u03ef\u03ed \n\n\u03ee\u03ec \n\n(a) The number of correct rea-\nsoning paths containing re-\ndundant steps. \n\n\n\nTable 6 :\n6The effectiveness of step-aware voting verifier, with \u27e8M 1 , M 2 \u27e9 = \u27e85, 20\u27e9.\n\nTable 7 :\n7Besides arithmetic reasoning, we also inves-\ntigate commonsense and inductive reasoning. \n\n\n\nTable 7\n7demonstrates this \nidea in commonsense reasoning (StrategyQA) and \ninductive reasoning (CLUTRR). \n\n\n\nDataset N\nDatasetExample Question GSM8K1319 James decides to run 3 sprints 3 times a week. He runs 60 meters each sprint. How many total meters does he run a week?AsDiv 2096 Seven red apples and two green apples are in the basket. How many apples are in the basket? MultiArith 600 The school cafeteria ordered 42 red apples and 7 green apples for students lunches. But, if only 9 students wanted fruit, how many extra did the cafeteria end up with? SVAMP 1000 Paco had 26 salty cookies and 17 sweet cookies. He ate 14 sweet cookies and 9 salty cookies. How many salty cookies did Paco have left? SingleEq 508 Terez has 44 cows on his farm. 50 percent of the cows are female, and 50 percent of the females are pregnant. How many pregnant female cows does Terez have? CommonsenseQA 3387 Sammy wanted to go to where the people were. Where might he go? Options: (a) race track (b) populated areas (c) desert (d) apartment (e) roadblock StrategyQA 2280 Could you go to New York Public Library and the Six Flags Great Escape in the same day?\n\nTable 8 :\n8Reasoning benchmarks we use in this paper with examples. N means the number of test cases.\n\nTable 8\n8shows the reasoning benchmarks we use in this paper with examples. We use the same test sets asWei et al. (2022)  for GSM8K, AsDiv, MultiArith, SVAMP, SingleEq, and CommonsenseQA.For StrategyQA, there are 2, 290 test cases (i.e., questions paired with TRUE/FALSE labels), but there is no other case that can be leveraged by DIVERSE to construct diverse exemplars (as introduced in Section 2.1). To address this problem, we randomly divide these 2, 290 test cases into two equal parts (denoted as T 1 and T 2 ). For each DI-VERSE experiment of SQA, we conduct two runs: using T 1 to construct diverse exemplars and T 2 as the test set, and vice versa. The final reported solve rate is the average solve rate of these two runs.ForCLUTRR, Sinha et al. (2019)  provided several versions: clean, supporting, irrelevant, and disconnected. The clean version is the basic dataset, while the others are the perturbed variations of it. Our experiments are conducted on the clean version.\n\n\nInput: Story: Kelly and her mother Ernest made breakfast together. Constance and her husband Ernest wanted a child badly. Query: Kelly, Constance Output: daughterVariant \nInput Example \n\nCLUTRR \nfor NLI \n(Original) \n\nCLUTRR \nfor NLG \n(Ours) \n\n\nOur main experiments use M1 = 5 and M2 = 20.\nSpecifically, f \u2032 (input i , j) is predicted from the hidden state of the last token of Si,j in DEBERTA-V3-LARGE, similar to token classification tasks.\nDIVERSE can also be applied to PaLM, but PaLM is not publicly available.\n Sinha et al. (2019)  also introduced a method with 100% accuracy. We do not take it into the comparison, as this method requires a domain-specific system with complicated rules to extract a knowledge graph for each input text.\n Wang et al. (2022c)  tried an ensemble-based approach, i.e., to permutate exemplars in the original prompt. However, this strategy does not increase diversity in terms of exemplars. 7 This is motivated byZelikman et al. (2022).\n\nAnnual Meeting of the Association for Computational Linguistics. Dublin, IrelandAssociation for Computational Linguistics1Long Papers)Annual Meeting of the Association for Compu- tational Linguistics (Volume 1: Long Papers), pages 6016-6031, Dublin, Ireland. Association for Computational Linguistics.\n\nReclor: A reading comprehension dataset requiring logical reasoning. Weihao Yu, Zihang Jiang, Yanfei Dong, Jiashi Feng, 10.48550/ARXIV.2002.04326Weihao Yu, Zihang Jiang, Yanfei Dong, and Jiashi Feng. 2020. Reclor: A reading comprehension dataset requiring logical reasoning.\n\nEric Zelikman, Yuhuai Wu, Noah D Goodman, arXiv:2203.14465Star: Bootstrapping reasoning with reasoning. arXiv preprintEric Zelikman, Yuhuai Wu, and Noah D Goodman. 2022. Star: Bootstrapping reasoning with rea- soning. arXiv preprint arXiv:2203.14465.\n\nSWAG: A large-scale adversarial dataset for grounded commonsense inference. Rowan Zellers, Yonatan Bisk, Roy Schwartz, Yejin Choi, 10.18653/v1/D18-1009Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing. the 2018 Conference on Empirical Methods in Natural Language ProcessingBrussels, BelgiumAssociation for Computational LinguisticsRowan Zellers, Yonatan Bisk, Roy Schwartz, and Yejin Choi. 2018. SWAG: A large-scale adversar- ial dataset for grounded commonsense inference. In Proceedings of the 2018 Conference on Empir- ical Methods in Natural Language Processing, pages 93-104, Brussels, Belgium. Association for Computational Linguistics.\n\nCalibrate before use: Improving few-shot performance of language models. Tony Z Zhao, Eric Wallace, Shi Feng, Dan Klein, Sameer Singh, 10.48550/ARXIV.2102.09690Tony Z. Zhao, Eric Wallace, Shi Feng, Dan Klein, and Sameer Singh. 2021. Calibrate before use: Improving few-shot performance of language models.\n\nLeast-to-most prompting enables complex reasoning in large language models. Denny Zhou, Nathanael Sch\u00e4rli, Le Hou, Jason Wei, Nathan Scales, Xuezhi Wang, 10.48550/ARXIV.2205.10625Quoc Le, and Ed Chi. 2022Olivier BousquetDale SchuurmansDenny Zhou, Nathanael Sch\u00e4rli, Le Hou, Jason Wei, Nathan Scales, Xuezhi Wang, Dale Schuur- mans, Olivier Bousquet, Quoc Le, and Ed Chi. 2022. Least-to-most prompting enables complex reasoning in large language models.\n\nFengbin Zhu, Wenqiang Lei, Youcheng Huang, Chao Wang, Shuo Zhang, 10.48550/ARXIV.2105.07624Jiancheng Lv, Fuli Feng, and Tat-Seng Chua. 2021. Tat-qa: A question answering benchmark on a hybrid of tabular and textual content in finance. Fengbin Zhu, Wenqiang Lei, Youcheng Huang, Chao Wang, Shuo Zhang, Jiancheng Lv, Fuli Feng, and Tat-Seng Chua. 2021. Tat-qa: A ques- tion answering benchmark on a hybrid of tabular and textual content in finance.\n", "annotations": {"author": "[{\"end\":238,\"start\":74},{\"end\":295,\"start\":239},{\"end\":334,\"start\":296},{\"end\":387,\"start\":335},{\"end\":444,\"start\":388},{\"end\":503,\"start\":445},{\"end\":561,\"start\":504},{\"end\":238,\"start\":74},{\"end\":295,\"start\":239},{\"end\":334,\"start\":296},{\"end\":387,\"start\":335},{\"end\":444,\"start\":388},{\"end\":503,\"start\":445},{\"end\":561,\"start\":504}]", "publisher": null, "author_last_name": "[{\"end\":82,\"start\":80},{\"end\":247,\"start\":244},{\"end\":309,\"start\":304},{\"end\":343,\"start\":341},{\"end\":396,\"start\":392},{\"end\":459,\"start\":456},{\"end\":515,\"start\":511},{\"end\":82,\"start\":80},{\"end\":247,\"start\":244},{\"end\":309,\"start\":304},{\"end\":343,\"start\":341},{\"end\":396,\"start\":392},{\"end\":459,\"start\":456},{\"end\":515,\"start\":511}]", "author_first_name": "[{\"end\":79,\"start\":74},{\"end\":243,\"start\":239},{\"end\":303,\"start\":296},{\"end\":340,\"start\":335},{\"end\":391,\"start\":388},{\"end\":455,\"start\":445},{\"end\":510,\"start\":504},{\"end\":79,\"start\":74},{\"end\":243,\"start\":239},{\"end\":303,\"start\":296},{\"end\":340,\"start\":335},{\"end\":391,\"start\":388},{\"end\":455,\"start\":445},{\"end\":510,\"start\":504}]", "author_affiliation": "[{\"end\":213,\"start\":106},{\"end\":237,\"start\":215},{\"end\":294,\"start\":272},{\"end\":333,\"start\":311},{\"end\":386,\"start\":364},{\"end\":443,\"start\":421},{\"end\":502,\"start\":480},{\"end\":560,\"start\":538},{\"end\":213,\"start\":106},{\"end\":237,\"start\":215},{\"end\":294,\"start\":272},{\"end\":333,\"start\":311},{\"end\":386,\"start\":364},{\"end\":443,\"start\":421},{\"end\":502,\"start\":480},{\"end\":560,\"start\":538}]", "title": "[{\"end\":71,\"start\":1},{\"end\":632,\"start\":562},{\"end\":71,\"start\":1},{\"end\":632,\"start\":562}]", "venue": null, "abstract": "[{\"end\":1847,\"start\":634},{\"end\":1847,\"start\":634}]", "bib_ref": "[{\"end\":2046,\"start\":2024},{\"end\":2069,\"start\":2046},{\"end\":2086,\"start\":2069},{\"end\":2127,\"start\":2105},{\"end\":2143,\"start\":2127},{\"end\":2159,\"start\":2143},{\"end\":2274,\"start\":2254},{\"end\":2329,\"start\":2305},{\"end\":2602,\"start\":2582},{\"end\":2636,\"start\":2618},{\"end\":2654,\"start\":2636},{\"end\":2674,\"start\":2654},{\"end\":2696,\"start\":2674},{\"end\":2859,\"start\":2842},{\"end\":3066,\"start\":3046},{\"end\":3087,\"start\":3068},{\"end\":3311,\"start\":3287},{\"end\":5629,\"start\":5605},{\"end\":5982,\"start\":5956},{\"end\":6689,\"start\":6672},{\"end\":9173,\"start\":9155},{\"end\":10398,\"start\":10381},{\"end\":11124,\"start\":11106},{\"end\":18945,\"start\":18919},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":19142,\"start\":19123},{\"end\":19164,\"start\":19142},{\"end\":19181,\"start\":19164},{\"end\":19198,\"start\":19181},{\"end\":19214,\"start\":19198},{\"end\":19233,\"start\":19214},{\"end\":19250,\"start\":19233},{\"end\":22812,\"start\":22795},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":30776,\"start\":30754},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":38994,\"start\":38972},{\"end\":2046,\"start\":2024},{\"end\":2069,\"start\":2046},{\"end\":2086,\"start\":2069},{\"end\":2127,\"start\":2105},{\"end\":2143,\"start\":2127},{\"end\":2159,\"start\":2143},{\"end\":2274,\"start\":2254},{\"end\":2329,\"start\":2305},{\"end\":2602,\"start\":2582},{\"end\":2636,\"start\":2618},{\"end\":2654,\"start\":2636},{\"end\":2674,\"start\":2654},{\"end\":2696,\"start\":2674},{\"end\":2859,\"start\":2842},{\"end\":3066,\"start\":3046},{\"end\":3087,\"start\":3068},{\"end\":3311,\"start\":3287},{\"end\":5629,\"start\":5605},{\"end\":5982,\"start\":5956},{\"end\":6689,\"start\":6672},{\"end\":9173,\"start\":9155},{\"end\":10398,\"start\":10381},{\"end\":11124,\"start\":11106},{\"end\":18945,\"start\":18919},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":19142,\"start\":19123},{\"end\":19164,\"start\":19142},{\"end\":19181,\"start\":19164},{\"end\":19198,\"start\":19181},{\"end\":19214,\"start\":19198},{\"end\":19233,\"start\":19214},{\"end\":19250,\"start\":19233},{\"end\":22812,\"start\":22795},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":30776,\"start\":30754},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":38994,\"start\":38972}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":30109,\"start\":30030},{\"attributes\":{\"id\":\"fig_1\"},\"end\":30506,\"start\":30110},{\"attributes\":{\"id\":\"fig_2\"},\"end\":30611,\"start\":30507},{\"attributes\":{\"id\":\"fig_3\"},\"end\":32835,\"start\":30612},{\"attributes\":{\"id\":\"fig_4\"},\"end\":33370,\"start\":32836},{\"attributes\":{\"id\":\"fig_5\"},\"end\":33696,\"start\":33371},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":34284,\"start\":33697},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":34398,\"start\":34285},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":35068,\"start\":34399},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":35212,\"start\":35069},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":35311,\"start\":35213},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":35329,\"start\":35312},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":35589,\"start\":35330},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":35679,\"start\":35590},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":35783,\"start\":35680},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":35893,\"start\":35784},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":36930,\"start\":35894},{\"attributes\":{\"id\":\"tab_14\",\"type\":\"table\"},\"end\":37033,\"start\":36931},{\"attributes\":{\"id\":\"tab_15\",\"type\":\"table\"},\"end\":38021,\"start\":37034},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":38267,\"start\":38022},{\"attributes\":{\"id\":\"fig_0\"},\"end\":30109,\"start\":30030},{\"attributes\":{\"id\":\"fig_1\"},\"end\":30506,\"start\":30110},{\"attributes\":{\"id\":\"fig_2\"},\"end\":30611,\"start\":30507},{\"attributes\":{\"id\":\"fig_3\"},\"end\":32835,\"start\":30612},{\"attributes\":{\"id\":\"fig_4\"},\"end\":33370,\"start\":32836},{\"attributes\":{\"id\":\"fig_5\"},\"end\":33696,\"start\":33371},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":34284,\"start\":33697},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":34398,\"start\":34285},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":35068,\"start\":34399},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":35212,\"start\":35069},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":35311,\"start\":35213},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":35329,\"start\":35312},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":35589,\"start\":35330},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":35679,\"start\":35590},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":35783,\"start\":35680},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":35893,\"start\":35784},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":36930,\"start\":35894},{\"attributes\":{\"id\":\"tab_14\",\"type\":\"table\"},\"end\":37033,\"start\":36931},{\"attributes\":{\"id\":\"tab_15\",\"type\":\"table\"},\"end\":38021,\"start\":37034},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":38267,\"start\":38022}]", "paragraph": "[{\"end\":2603,\"start\":1863},{\"end\":3478,\"start\":2605},{\"end\":4144,\"start\":3480},{\"end\":4602,\"start\":4146},{\"end\":5217,\"start\":4604},{\"end\":5291,\"start\":5219},{\"end\":5732,\"start\":5325},{\"end\":5817,\"start\":5734},{\"end\":6466,\"start\":5837},{\"end\":6782,\"start\":6486},{\"end\":7027,\"start\":6784},{\"end\":7346,\"start\":7029},{\"end\":7540,\"start\":7403},{\"end\":8157,\"start\":7571},{\"end\":8363,\"start\":8159},{\"end\":9416,\"start\":8445},{\"end\":9599,\"start\":9428},{\"end\":10399,\"start\":9601},{\"end\":10525,\"start\":10401},{\"end\":10706,\"start\":10527},{\"end\":11155,\"start\":10725},{\"end\":11309,\"start\":11172},{\"end\":11968,\"start\":11327},{\"end\":12754,\"start\":12000},{\"end\":12994,\"start\":12893},{\"end\":13841,\"start\":13035},{\"end\":14242,\"start\":13882},{\"end\":14888,\"start\":14287},{\"end\":15196,\"start\":14890},{\"end\":15420,\"start\":15198},{\"end\":16145,\"start\":15422},{\"end\":16675,\"start\":16147},{\"end\":16819,\"start\":16677},{\"end\":17184,\"start\":16821},{\"end\":17700,\"start\":17186},{\"end\":18007,\"start\":17732},{\"end\":18103,\"start\":18009},{\"end\":18571,\"start\":18142},{\"end\":19328,\"start\":18613},{\"end\":19841,\"start\":19330},{\"end\":20598,\"start\":19872},{\"end\":20772,\"start\":20600},{\"end\":21009,\"start\":20774},{\"end\":21285,\"start\":21025},{\"end\":21586,\"start\":21287},{\"end\":21989,\"start\":21588},{\"end\":22313,\"start\":21991},{\"end\":22483,\"start\":22346},{\"end\":22705,\"start\":22532},{\"end\":22889,\"start\":22707},{\"end\":23044,\"start\":22944},{\"end\":23127,\"start\":23046},{\"end\":23249,\"start\":23179},{\"end\":23591,\"start\":23298},{\"end\":23867,\"start\":23613},{\"end\":24780,\"start\":23869},{\"end\":24912,\"start\":24827},{\"end\":25126,\"start\":24952},{\"end\":25749,\"start\":25128},{\"end\":26028,\"start\":25797},{\"end\":26681,\"start\":26030},{\"end\":26731,\"start\":26683},{\"end\":27098,\"start\":26733},{\"end\":28391,\"start\":27100},{\"end\":28593,\"start\":28431},{\"end\":28804,\"start\":28595},{\"end\":29176,\"start\":28806},{\"end\":29489,\"start\":29178},{\"end\":30029,\"start\":29491},{\"end\":2603,\"start\":1863},{\"end\":3478,\"start\":2605},{\"end\":4144,\"start\":3480},{\"end\":4602,\"start\":4146},{\"end\":5217,\"start\":4604},{\"end\":5291,\"start\":5219},{\"end\":5732,\"start\":5325},{\"end\":5817,\"start\":5734},{\"end\":6466,\"start\":5837},{\"end\":6782,\"start\":6486},{\"end\":7027,\"start\":6784},{\"end\":7346,\"start\":7029},{\"end\":7540,\"start\":7403},{\"end\":8157,\"start\":7571},{\"end\":8363,\"start\":8159},{\"end\":9416,\"start\":8445},{\"end\":9599,\"start\":9428},{\"end\":10399,\"start\":9601},{\"end\":10525,\"start\":10401},{\"end\":10706,\"start\":10527},{\"end\":11155,\"start\":10725},{\"end\":11309,\"start\":11172},{\"end\":11968,\"start\":11327},{\"end\":12754,\"start\":12000},{\"end\":12994,\"start\":12893},{\"end\":13841,\"start\":13035},{\"end\":14242,\"start\":13882},{\"end\":14888,\"start\":14287},{\"end\":15196,\"start\":14890},{\"end\":15420,\"start\":15198},{\"end\":16145,\"start\":15422},{\"end\":16675,\"start\":16147},{\"end\":16819,\"start\":16677},{\"end\":17184,\"start\":16821},{\"end\":17700,\"start\":17186},{\"end\":18007,\"start\":17732},{\"end\":18103,\"start\":18009},{\"end\":18571,\"start\":18142},{\"end\":19328,\"start\":18613},{\"end\":19841,\"start\":19330},{\"end\":20598,\"start\":19872},{\"end\":20772,\"start\":20600},{\"end\":21009,\"start\":20774},{\"end\":21285,\"start\":21025},{\"end\":21586,\"start\":21287},{\"end\":21989,\"start\":21588},{\"end\":22313,\"start\":21991},{\"end\":22483,\"start\":22346},{\"end\":22705,\"start\":22532},{\"end\":22889,\"start\":22707},{\"end\":23044,\"start\":22944},{\"end\":23127,\"start\":23046},{\"end\":23249,\"start\":23179},{\"end\":23591,\"start\":23298},{\"end\":23867,\"start\":23613},{\"end\":24780,\"start\":23869},{\"end\":24912,\"start\":24827},{\"end\":25126,\"start\":24952},{\"end\":25749,\"start\":25128},{\"end\":26028,\"start\":25797},{\"end\":26681,\"start\":26030},{\"end\":26731,\"start\":26683},{\"end\":27098,\"start\":26733},{\"end\":28391,\"start\":27100},{\"end\":28593,\"start\":28431},{\"end\":28804,\"start\":28595},{\"end\":29176,\"start\":28806},{\"end\":29489,\"start\":29178},{\"end\":30029,\"start\":29491}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7402,\"start\":7347},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8444,\"start\":8364},{\"attributes\":{\"id\":\"formula_2\"},\"end\":12868,\"start\":12755},{\"attributes\":{\"id\":\"formula_3\"},\"end\":22531,\"start\":22484},{\"attributes\":{\"id\":\"formula_4\"},\"end\":22943,\"start\":22890},{\"attributes\":{\"id\":\"formula_5\"},\"end\":23178,\"start\":23128},{\"attributes\":{\"id\":\"formula_6\"},\"end\":24826,\"start\":24781},{\"attributes\":{\"id\":\"formula_0\"},\"end\":7402,\"start\":7347},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8444,\"start\":8364},{\"attributes\":{\"id\":\"formula_2\"},\"end\":12868,\"start\":12755},{\"attributes\":{\"id\":\"formula_3\"},\"end\":22531,\"start\":22484},{\"attributes\":{\"id\":\"formula_4\"},\"end\":22943,\"start\":22890},{\"attributes\":{\"id\":\"formula_5\"},\"end\":23178,\"start\":23128},{\"attributes\":{\"id\":\"formula_6\"},\"end\":24826,\"start\":24781}]", "table_ref": "[{\"end\":10740,\"start\":10733},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":10973,\"start\":10966},{\"end\":12320,\"start\":12313},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":12753,\"start\":12745},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":13245,\"start\":13238},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":13288,\"start\":13281},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":14394,\"start\":14387},{\"end\":25972,\"start\":25965},{\"end\":28124,\"start\":28117},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":29817,\"start\":29809},{\"end\":10740,\"start\":10733},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":10973,\"start\":10966},{\"end\":12320,\"start\":12313},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":12753,\"start\":12745},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":13245,\"start\":13238},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":13288,\"start\":13281},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":14394,\"start\":14387},{\"end\":25972,\"start\":25965},{\"end\":28124,\"start\":28117},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":29817,\"start\":29809}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1861,\"start\":1849},{\"attributes\":{\"n\":\"2\"},\"end\":5323,\"start\":5294},{\"attributes\":{\"n\":\"2.1\"},\"end\":5835,\"start\":5820},{\"attributes\":{\"n\":\"2.2\"},\"end\":6484,\"start\":6469},{\"attributes\":{\"n\":\"2.3\"},\"end\":7569,\"start\":7543},{\"attributes\":{\"n\":\"3.2\"},\"end\":9426,\"start\":9419},{\"end\":10715,\"start\":10709},{\"end\":10723,\"start\":10718},{\"attributes\":{\"n\":\"4\"},\"end\":11170,\"start\":11158},{\"attributes\":{\"n\":\"4.1\"},\"end\":11325,\"start\":11312},{\"attributes\":{\"n\":\"4.2\"},\"end\":11998,\"start\":11971},{\"attributes\":{\"n\":\"5\"},\"end\":12880,\"start\":12870},{\"attributes\":{\"n\":\"6\"},\"end\":12891,\"start\":12883},{\"attributes\":{\"n\":\"6.1\"},\"end\":13033,\"start\":12997},{\"attributes\":{\"n\":\"6.2\"},\"end\":13880,\"start\":13844},{\"attributes\":{\"n\":\"6.3\"},\"end\":14285,\"start\":14245},{\"attributes\":{\"n\":\"6.4\"},\"end\":17730,\"start\":17703},{\"attributes\":{\"n\":\"6.5\"},\"end\":18140,\"start\":18106},{\"attributes\":{\"n\":\"6.6\"},\"end\":18611,\"start\":18574},{\"attributes\":{\"n\":\"8\"},\"end\":19870,\"start\":19844},{\"attributes\":{\"n\":\"9\"},\"end\":21023,\"start\":21012},{\"end\":22326,\"start\":22316},{\"end\":22344,\"start\":22329},{\"end\":23296,\"start\":23252},{\"end\":23611,\"start\":23594},{\"end\":24950,\"start\":24915},{\"end\":25769,\"start\":25752},{\"end\":25795,\"start\":25772},{\"end\":28402,\"start\":28394},{\"end\":28429,\"start\":28405},{\"end\":30041,\"start\":30031},{\"end\":30121,\"start\":30111},{\"end\":30518,\"start\":30508},{\"end\":30623,\"start\":30613},{\"end\":32847,\"start\":32837},{\"end\":34295,\"start\":34286},{\"end\":34409,\"start\":34400},{\"end\":35079,\"start\":35070},{\"end\":35223,\"start\":35214},{\"end\":35320,\"start\":35313},{\"end\":35340,\"start\":35331},{\"end\":35600,\"start\":35591},{\"end\":35690,\"start\":35681},{\"end\":35792,\"start\":35785},{\"end\":35904,\"start\":35895},{\"end\":36941,\"start\":36932},{\"end\":37042,\"start\":37035},{\"attributes\":{\"n\":\"1\"},\"end\":1861,\"start\":1849},{\"attributes\":{\"n\":\"2\"},\"end\":5323,\"start\":5294},{\"attributes\":{\"n\":\"2.1\"},\"end\":5835,\"start\":5820},{\"attributes\":{\"n\":\"2.2\"},\"end\":6484,\"start\":6469},{\"attributes\":{\"n\":\"2.3\"},\"end\":7569,\"start\":7543},{\"attributes\":{\"n\":\"3.2\"},\"end\":9426,\"start\":9419},{\"end\":10715,\"start\":10709},{\"end\":10723,\"start\":10718},{\"attributes\":{\"n\":\"4\"},\"end\":11170,\"start\":11158},{\"attributes\":{\"n\":\"4.1\"},\"end\":11325,\"start\":11312},{\"attributes\":{\"n\":\"4.2\"},\"end\":11998,\"start\":11971},{\"attributes\":{\"n\":\"5\"},\"end\":12880,\"start\":12870},{\"attributes\":{\"n\":\"6\"},\"end\":12891,\"start\":12883},{\"attributes\":{\"n\":\"6.1\"},\"end\":13033,\"start\":12997},{\"attributes\":{\"n\":\"6.2\"},\"end\":13880,\"start\":13844},{\"attributes\":{\"n\":\"6.3\"},\"end\":14285,\"start\":14245},{\"attributes\":{\"n\":\"6.4\"},\"end\":17730,\"start\":17703},{\"attributes\":{\"n\":\"6.5\"},\"end\":18140,\"start\":18106},{\"attributes\":{\"n\":\"6.6\"},\"end\":18611,\"start\":18574},{\"attributes\":{\"n\":\"8\"},\"end\":19870,\"start\":19844},{\"attributes\":{\"n\":\"9\"},\"end\":21023,\"start\":21012},{\"end\":22326,\"start\":22316},{\"end\":22344,\"start\":22329},{\"end\":23296,\"start\":23252},{\"end\":23611,\"start\":23594},{\"end\":24950,\"start\":24915},{\"end\":25769,\"start\":25752},{\"end\":25795,\"start\":25772},{\"end\":28402,\"start\":28394},{\"end\":28429,\"start\":28405},{\"end\":30041,\"start\":30031},{\"end\":30121,\"start\":30111},{\"end\":30518,\"start\":30508},{\"end\":30623,\"start\":30613},{\"end\":32847,\"start\":32837},{\"end\":34295,\"start\":34286},{\"end\":34409,\"start\":34400},{\"end\":35079,\"start\":35070},{\"end\":35223,\"start\":35214},{\"end\":35320,\"start\":35313},{\"end\":35340,\"start\":35331},{\"end\":35600,\"start\":35591},{\"end\":35690,\"start\":35681},{\"end\":35792,\"start\":35785},{\"end\":35904,\"start\":35895},{\"end\":36941,\"start\":36932},{\"end\":37042,\"start\":37035}]", "table": "[{\"end\":34284,\"start\":34102},{\"end\":34398,\"start\":34359},{\"end\":35068,\"start\":34411},{\"end\":35212,\"start\":35081},{\"end\":35329,\"start\":35322},{\"end\":35589,\"start\":35437},{\"end\":35783,\"start\":35692},{\"end\":35893,\"start\":35794},{\"end\":38267,\"start\":38186},{\"end\":34284,\"start\":34102},{\"end\":34398,\"start\":34359},{\"end\":35068,\"start\":34411},{\"end\":35212,\"start\":35081},{\"end\":35329,\"start\":35322},{\"end\":35589,\"start\":35437},{\"end\":35783,\"start\":35692},{\"end\":35893,\"start\":35794},{\"end\":38267,\"start\":38186}]", "figure_caption": "[{\"end\":30109,\"start\":30043},{\"end\":30506,\"start\":30123},{\"end\":30611,\"start\":30520},{\"end\":32835,\"start\":30625},{\"end\":33370,\"start\":32849},{\"end\":33696,\"start\":33373},{\"end\":34102,\"start\":33699},{\"end\":34359,\"start\":34297},{\"end\":35311,\"start\":35225},{\"end\":35437,\"start\":35342},{\"end\":35679,\"start\":35602},{\"end\":36930,\"start\":35912},{\"end\":37033,\"start\":36943},{\"end\":38021,\"start\":37044},{\"end\":38186,\"start\":38024},{\"end\":30109,\"start\":30043},{\"end\":30506,\"start\":30123},{\"end\":30611,\"start\":30520},{\"end\":32835,\"start\":30625},{\"end\":33370,\"start\":32849},{\"end\":33696,\"start\":33373},{\"end\":34102,\"start\":33699},{\"end\":34359,\"start\":34297},{\"end\":35311,\"start\":35225},{\"end\":35437,\"start\":35342},{\"end\":35679,\"start\":35602},{\"end\":36930,\"start\":35912},{\"end\":37033,\"start\":36943},{\"end\":38021,\"start\":37044},{\"end\":38186,\"start\":38024}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3477,\"start\":3469},{\"end\":3938,\"start\":3930},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5338,\"start\":5330},{\"end\":7680,\"start\":7672},{\"end\":8947,\"start\":8939},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13491,\"start\":13483},{\"end\":14149,\"start\":14141},{\"end\":15133,\"start\":15125},{\"end\":16457,\"start\":16449},{\"end\":17023,\"start\":17014},{\"end\":17212,\"start\":17204},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17749,\"start\":17741},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":18225,\"start\":18217},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":18719,\"start\":18711},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3477,\"start\":3469},{\"end\":3938,\"start\":3930},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5338,\"start\":5330},{\"end\":7680,\"start\":7672},{\"end\":8947,\"start\":8939},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13491,\"start\":13483},{\"end\":14149,\"start\":14141},{\"end\":15133,\"start\":15125},{\"end\":16457,\"start\":16449},{\"end\":17023,\"start\":17014},{\"end\":17212,\"start\":17204},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17749,\"start\":17741},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":18225,\"start\":18217},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":18719,\"start\":18711}]", "bib_author_first_name": "[{\"end\":39375,\"start\":39369},{\"end\":39386,\"start\":39380},{\"end\":39400,\"start\":39394},{\"end\":39413,\"start\":39407},{\"end\":39580,\"start\":39576},{\"end\":39597,\"start\":39591},{\"end\":39608,\"start\":39602},{\"end\":39909,\"start\":39904},{\"end\":39926,\"start\":39919},{\"end\":39936,\"start\":39933},{\"end\":39952,\"start\":39947},{\"end\":40586,\"start\":40582},{\"end\":40588,\"start\":40587},{\"end\":40599,\"start\":40595},{\"end\":40612,\"start\":40609},{\"end\":40622,\"start\":40619},{\"end\":40636,\"start\":40630},{\"end\":40897,\"start\":40892},{\"end\":40913,\"start\":40904},{\"end\":40925,\"start\":40923},{\"end\":40936,\"start\":40931},{\"end\":40948,\"start\":40942},{\"end\":40963,\"start\":40957},{\"end\":41277,\"start\":41270},{\"end\":41291,\"start\":41283},{\"end\":41305,\"start\":41297},{\"end\":41317,\"start\":41313},{\"end\":41328,\"start\":41324},{\"end\":39375,\"start\":39369},{\"end\":39386,\"start\":39380},{\"end\":39400,\"start\":39394},{\"end\":39413,\"start\":39407},{\"end\":39580,\"start\":39576},{\"end\":39597,\"start\":39591},{\"end\":39608,\"start\":39602},{\"end\":39909,\"start\":39904},{\"end\":39926,\"start\":39919},{\"end\":39936,\"start\":39933},{\"end\":39952,\"start\":39947},{\"end\":40586,\"start\":40582},{\"end\":40588,\"start\":40587},{\"end\":40599,\"start\":40595},{\"end\":40612,\"start\":40609},{\"end\":40622,\"start\":40619},{\"end\":40636,\"start\":40630},{\"end\":40897,\"start\":40892},{\"end\":40913,\"start\":40904},{\"end\":40925,\"start\":40923},{\"end\":40936,\"start\":40931},{\"end\":40948,\"start\":40942},{\"end\":40963,\"start\":40957},{\"end\":41277,\"start\":41270},{\"end\":41291,\"start\":41283},{\"end\":41305,\"start\":41297},{\"end\":41317,\"start\":41313},{\"end\":41328,\"start\":41324}]", "bib_author_last_name": "[{\"end\":39378,\"start\":39376},{\"end\":39392,\"start\":39387},{\"end\":39405,\"start\":39401},{\"end\":39418,\"start\":39414},{\"end\":39589,\"start\":39581},{\"end\":39600,\"start\":39598},{\"end\":39616,\"start\":39609},{\"end\":39917,\"start\":39910},{\"end\":39931,\"start\":39927},{\"end\":39945,\"start\":39937},{\"end\":39957,\"start\":39953},{\"end\":40593,\"start\":40589},{\"end\":40607,\"start\":40600},{\"end\":40617,\"start\":40613},{\"end\":40628,\"start\":40623},{\"end\":40642,\"start\":40637},{\"end\":40902,\"start\":40898},{\"end\":40921,\"start\":40914},{\"end\":40929,\"start\":40926},{\"end\":40940,\"start\":40937},{\"end\":40955,\"start\":40949},{\"end\":40968,\"start\":40964},{\"end\":41281,\"start\":41278},{\"end\":41295,\"start\":41292},{\"end\":41311,\"start\":41306},{\"end\":41322,\"start\":41318},{\"end\":41334,\"start\":41329},{\"end\":39378,\"start\":39376},{\"end\":39392,\"start\":39387},{\"end\":39405,\"start\":39401},{\"end\":39418,\"start\":39414},{\"end\":39589,\"start\":39581},{\"end\":39600,\"start\":39598},{\"end\":39616,\"start\":39609},{\"end\":39917,\"start\":39910},{\"end\":39931,\"start\":39927},{\"end\":39945,\"start\":39937},{\"end\":39957,\"start\":39953},{\"end\":40593,\"start\":40589},{\"end\":40607,\"start\":40600},{\"end\":40617,\"start\":40613},{\"end\":40628,\"start\":40623},{\"end\":40642,\"start\":40637},{\"end\":40902,\"start\":40898},{\"end\":40921,\"start\":40914},{\"end\":40929,\"start\":40926},{\"end\":40940,\"start\":40937},{\"end\":40955,\"start\":40949},{\"end\":40968,\"start\":40964},{\"end\":41281,\"start\":41278},{\"end\":41295,\"start\":41292},{\"end\":41311,\"start\":41306},{\"end\":41322,\"start\":41318},{\"end\":41334,\"start\":41329}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":39298,\"start\":38997},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2002.04326\",\"id\":\"b1\"},\"end\":39574,\"start\":39300},{\"attributes\":{\"doi\":\"arXiv:2203.14465\",\"id\":\"b2\"},\"end\":39826,\"start\":39576},{\"attributes\":{\"doi\":\"10.18653/v1/D18-1009\",\"id\":\"b3\",\"matched_paper_id\":52019251},\"end\":40507,\"start\":39828},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2102.09690\",\"id\":\"b4\"},\"end\":40814,\"start\":40509},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2205.10625\",\"id\":\"b5\"},\"end\":41268,\"start\":40816},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2105.07624\",\"id\":\"b6\"},\"end\":41716,\"start\":41270},{\"attributes\":{\"id\":\"b0\"},\"end\":39298,\"start\":38997},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2002.04326\",\"id\":\"b1\"},\"end\":39574,\"start\":39300},{\"attributes\":{\"doi\":\"arXiv:2203.14465\",\"id\":\"b2\"},\"end\":39826,\"start\":39576},{\"attributes\":{\"doi\":\"10.18653/v1/D18-1009\",\"id\":\"b3\",\"matched_paper_id\":52019251},\"end\":40507,\"start\":39828},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2102.09690\",\"id\":\"b4\"},\"end\":40814,\"start\":40509},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2205.10625\",\"id\":\"b5\"},\"end\":41268,\"start\":40816},{\"attributes\":{\"doi\":\"10.48550/ARXIV.2105.07624\",\"id\":\"b6\"},\"end\":41716,\"start\":41270}]", "bib_title": "[{\"end\":39902,\"start\":39828},{\"end\":39902,\"start\":39828}]", "bib_author": "[{\"end\":39380,\"start\":39369},{\"end\":39394,\"start\":39380},{\"end\":39407,\"start\":39394},{\"end\":39420,\"start\":39407},{\"end\":39591,\"start\":39576},{\"end\":39602,\"start\":39591},{\"end\":39618,\"start\":39602},{\"end\":39919,\"start\":39904},{\"end\":39933,\"start\":39919},{\"end\":39947,\"start\":39933},{\"end\":39959,\"start\":39947},{\"end\":40595,\"start\":40582},{\"end\":40609,\"start\":40595},{\"end\":40619,\"start\":40609},{\"end\":40630,\"start\":40619},{\"end\":40644,\"start\":40630},{\"end\":40904,\"start\":40892},{\"end\":40923,\"start\":40904},{\"end\":40931,\"start\":40923},{\"end\":40942,\"start\":40931},{\"end\":40957,\"start\":40942},{\"end\":40970,\"start\":40957},{\"end\":41283,\"start\":41270},{\"end\":41297,\"start\":41283},{\"end\":41313,\"start\":41297},{\"end\":41324,\"start\":41313},{\"end\":41336,\"start\":41324},{\"end\":39380,\"start\":39369},{\"end\":39394,\"start\":39380},{\"end\":39407,\"start\":39394},{\"end\":39420,\"start\":39407},{\"end\":39591,\"start\":39576},{\"end\":39602,\"start\":39591},{\"end\":39618,\"start\":39602},{\"end\":39919,\"start\":39904},{\"end\":39933,\"start\":39919},{\"end\":39947,\"start\":39933},{\"end\":39959,\"start\":39947},{\"end\":40595,\"start\":40582},{\"end\":40609,\"start\":40595},{\"end\":40619,\"start\":40609},{\"end\":40630,\"start\":40619},{\"end\":40644,\"start\":40630},{\"end\":40904,\"start\":40892},{\"end\":40923,\"start\":40904},{\"end\":40931,\"start\":40923},{\"end\":40942,\"start\":40931},{\"end\":40957,\"start\":40942},{\"end\":40970,\"start\":40957},{\"end\":41283,\"start\":41270},{\"end\":41297,\"start\":41283},{\"end\":41313,\"start\":41297},{\"end\":41324,\"start\":41313},{\"end\":41336,\"start\":41324}]", "bib_venue": "[{\"end\":39060,\"start\":38997},{\"end\":39367,\"start\":39300},{\"end\":39678,\"start\":39634},{\"end\":40065,\"start\":39979},{\"end\":40580,\"start\":40509},{\"end\":40890,\"start\":40816},{\"end\":41503,\"start\":41361},{\"end\":39060,\"start\":38997},{\"end\":39367,\"start\":39300},{\"end\":39678,\"start\":39634},{\"end\":40065,\"start\":39979},{\"end\":40580,\"start\":40509},{\"end\":40890,\"start\":40816},{\"end\":41503,\"start\":41361},{\"end\":39077,\"start\":39062},{\"end\":40155,\"start\":40067},{\"end\":39077,\"start\":39062},{\"end\":40155,\"start\":40067}]"}}}, "year": 2023, "month": 12, "day": 17}