{"id": 3985961, "updated": "2023-10-02 03:02:31.588", "metadata": {"title": "Four-State Non-malleable Codes with Explicit Constant Rate", "authors": "[{\"first\":\"Bhavana\",\"last\":\"Kanukurthi\",\"middle\":[]},{\"first\":\"Sai\",\"last\":\"Obbattu\",\"middle\":[\"Lakshmi Bhavana\"]},{\"first\":\"Sruthi\",\"last\":\"Sekar\",\"middle\":[]}]", "venue": "Journal of Cryptology", "journal": "Journal of Cryptology", "publication_date": {"year": 2019, "month": 12, "day": 2}, "abstract": "Non-malleable codes (NMCs), introduced by Dziembowski, Pietrzak and Wichs (ITCS 2010), provide a powerful guarantee in scenarios where the classical notion of error-correcting codes cannot provide any guarantee: a decoded message is either the same or completely independent of the underlying message, regardless of the number of errors introduced into the codeword. Informally, NMCs are defined with respect to a family of tampering functions F\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$\\mathcal {F}$$\\end{document} and guarantee that any tampered codeword decodes either to the same message or to an independent message, so long as it is tampered using a function f\u2208F\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$f \\in \\mathcal {F}$$\\end{document}. One of the well-studied tampering families for NMCs is the t-split-state family, where the adversary tampers each of the t\u201cstates\u201d of a codeword, arbitrarily but independently. Cheraghchi and Guruswami (TCC 2014) obtain a rate-1 non-malleable code for the case where t=O(n)\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$t = \\mathcal {O}(n)$$\\end{document} with n being the codeword length and, in (ITCS 2014), show an upper bound of 1-1/t\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$1-1/t$$\\end{document} on the best achievable rate for any t-split state NMC. For t=10\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$t=10$$\\end{document}, Chattopadhyay and Zuckerman (FOCS 2014) achieve a constant-rate construction where the constant is unknown. In summary, there is no known construction of an NMC with an explicit constant rate for any t=o(n)\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$t= o(n)$$\\end{document}, let alone one that comes close to matching Cheraghchi and Guruswami\u2019s lowerbound! In this work, we construct an efficient non-malleable code in the t-split-state model, for t=4\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$t=4$$\\end{document}, that achieves a constant rate of 13+\u03b6\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$\\frac{1}{3+\\zeta }$$\\end{document}, for any constant \u03b6>0\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$\\zeta > 0$$\\end{document}, and error 2-\u03a9(\u2113/logc+1\u2113)\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$2^{-\\varOmega (\\ell / log^{c+1} \\ell )}$$\\end{document}, where \u2113\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$\\ell $$\\end{document} is the length of the message and c>0\\documentclass[12pt]{minimal} \\usepackage{amsmath} \\usepackage{wasysym} \\usepackage{amsfonts} \\usepackage{amssymb} \\usepackage{amsbsy} \\usepackage{mathrsfs} \\usepackage{upgreek} \\setlength{\\oddsidemargin}{-69pt} \\begin{document}$$c > 0$$\\end{document} is a constant.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2989584888", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/joc/KanukurthiOS20", "doi": "10.1007/s00145-019-09339-7"}}, "content": {"source": {"pdf_hash": "a6369e14ae65825e1ca86a09f9347b2b2397b331", "pdf_src": "Springer", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "719792b6ae58f817e03c4409c657bf04c8b1e16c", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/a6369e14ae65825e1ca86a09f9347b2b2397b331.txt", "contents": "\nFour-State Non-malleable Codes with Explicit Constant Rate *\n\n\nBhavana Kanukurthi bhavana@iisc.ac.in \nSai Lakshmi \nBhavana Obbattu \nSruthi Sekar sruthi.sekar1@gmail.com \n\nDepartment of Computer Science and Automation\nDepartment of Mathematics\nIndian Institute of Science\nBangaloreIndia\n\n\nIndian Institute of Science\nBangaloreIndia\n\nFour-State Non-malleable Codes with Explicit Constant Rate *\n10.1007/s00145-019-09339-7Received 23 March 2018 / Revised 7 August 2019 Online publication 2 December 2019Communicated by Rafail Ostrovsky.\nNon-malleable codes (NMCs), introduced by Dziembowski, Pietrzak and Wichs (ITCS 2010), provide a powerful guarantee in scenarios where the classical notion of error-correcting codes cannot provide any guarantee: a decoded message is either the same or completely independent of the underlying message, regardless of the number of errors introduced into the codeword. Informally, NMCs are defined with respect to a family of tampering functions F and guarantee that any tampered codeword decodes either to the same message or to an independent message, so long as it is tampered using a function f \u2208 F . One of the well-studied tampering families for NMCs is the t-split-state family, where the adversary tampers each of the t \"states\" of a codeword, arbitrarily but independently. Cheraghchi and Guruswami (TCC 2014) obtain a rate-1 non-malleable code for the case where t = O(n) with n being the codeword length and, in (ITCS 2014), show an upper bound of 1 \u2212 1/t on the best achievable rate for any t-split state NMC. For t = 10, Chattopadhyay and Zuckerman (FOCS 2014) achieve a constant-rate construction where the constant is unknown. In summary, there is no known construction of an NMC with an explicit constant rate for any t = o(n), let alone one that comes close to matching Cheraghchi and Guruswami's lowerbound! In this work, we construct an efficient non-malleable code in the t-split-state model, for t = 4, that achieves a constant rate of 1 3+\u03b6 , for any constant \u03b6 > 0, and error 2 \u2212\u03a9( /log c+1 ) , where is the length of the message and c > 0 is a constant. * A preliminary version of this paper appeared in the Proceedings of TCC 2017.\u00a9 International Association for Cryptologic Research 2019Four-State Non-malleable Codes with Explicit Constant Rate 2 LECSS ensures that the bits of a codeword are t-wise independent and detects tampering if the codeword is modified by an offset , when is not a valid codeword of the scheme.3 AMD codes detect tampering attacks that add some pre-determined offset to the codeword. 4 This tampering family captures other tampering attacks such as bit-wise tampering, identity function, and constant function. A motivation to study this model comes from practical applications like cloud storage, where a single file may be stored in t parts at t different locations and an adversary tampers each of these parts independent of the other. It is therefore both of theoretical and practical interest to obtain non-malleable codes for the t-split-state family where t > 1 is as small as possible. 5 Specifically, Liu and Lysyanskaya [34] present a computational non-malleable code w.r.t. split-state tampering functions in the common reference string (CRS) model, using number theoretic assumptions and assuming existence of robust non-interactive zero-knowledge proof systems for an appropriate NP language.\n\nIntroduction\n\nError-correcting codes allow for the correction of errors introduced in data. However, their applicability is limited by the fact that they can only correct a bounded number of errors. When data are completely overwritten, no protection can be guaranteed. Nonmalleable codes, introduced in the work of Dziembowski, Pietrzak and Wichs [22], guarantee that the errors caused to the data will render it either independent of the underlying message or leave it unchanged.\n\nNon-malleable codes are parameterized by a family of tampering functions, F, and they guarantee non-malleability only when m * = Dec( f (Enc(m))) where f \u2208 F and Enc, Dec are the encode and decode functions, respectively. (In other words, there is no guarantee when f / \u2208 F.) Informally, given a tampering family F, a non-malleable code (Enc, Dec) encodes a given message m into a codeword c \u2190 Enc(m) s.t. if c is modified toc = f (c) by some f \u2208 F, then the messagem = Dec(c) contained in the modified codeword is either the original message m or \"unrelated\" to and \"independent\" of m.\n\nTo understand the motivation of studying non-malleable codes, consider their application to cryptography. In any standard cryptographic security game, security is typically guaranteed even when the adversary has access to some permissible input-output behaviour on the secret key sk. 1 If the adversary is allowed to observe input-output behaviour with respect to some modified sk * , we can no longer guarantee any security with respect to the original key sk. Consider a situation where sk * , if different from sk, is guaranteed to be independent of sk. In such a case, no input-output behaviour on sk * can help break the security with respect to sk. (After all, if obtaining information about an independent sk * can help break the security with respect to sk, then an adversary for sk can generate this information on his own.) If sk is encoded with a non-malleable code, then non-malleability will prevent sk * from ever taking a related value and the scheme will continue to remain secure with respect to sk.\n\nIt is no surprise that, since their introduction, non-malleable codes have found many applications such as in securing functionalities against physical-leakage and tamperingattacks [22,34], domain extension of encryption schemes [8,14] and non-malleable commitments [26]. Additionally, non-malleable codes have inspired an impressive line of theoretical research drawing connections across topics such as non-malleable extractors, additive combinatorics and so on. Researchers have been fascinated with two aspects of non-malleable codes: (a.) the richness of the tampering function family which NMCs can protect against and (b.) the rate (= message length codeword length ) they achieve. Our work too falls into this domain with a specific focus on the rate.\n\n\nRelated Work\n\nIn [22], Dziembowski et al. observe that it is impossible to build non-malleable codes which are secure with respect to the class of all functions. The intuition behind this is that this class would contain the function which decodes Enc(m) and re-encodes it into a related value m * . Further, [22] proves an existential result for non-malleable codes w.r.t tampering families of size less than 2 2 n .\n\nA natural but restricted class of tampering functions is the class of bit-wise tampering functions which modify each bit of the codeword independently. Dziembowski et al. [22] presented a construction of non-malleable codes with respect to this family. Their construction used a composition of linear error-correcting secret sharing scheme (LECSS) 2 and Algebraic Manipulation Detection codes (AMD codes). 3 Following this, Cheraghchi and Guruswami [10] gave an explicit construction of an optimal rate NMC w.r.t. bit-wise tampering family. Their construction combines the properties of a LECSS scheme, a sub-optimal NMC for small messages and pseudorandom permutations.\n\nA natural generalization of the bit-wise tampering family is the split-state tampering family, where a codeword is split into blocks (typically of equal length though not necessarily) and each block of the codeword, called a state, is tampered independently. A t-split-state family consists of a family of t functions acting independently on a state of length n/t, where n is the codeword length. 4 Improving on an existential result due to Dziembowski et al. [22], in [9], Cheraghchi and Guruswami show that for a t-split-state family, with each state of codeword containing n/t bits, the upper bound on best achievable rate is 1 \u2212 1/t. Both [22] and [9] give a Monte-Carlo construction of non-malleable codes for the 2-split-state model which show the existence of such codes in the random oracle model. The work of [10] also makes an elegant connection between seedless t-source non-malleable extractors and non-malleable codes in the t-split-state model.\n\nIn spite of the progress on bit-wise tampering function family, the first efficient constructions of split-state non-malleable codes made strong assumptions such as the random oracle model [22] or were in the computational setting [34]. 5 Dziembowski, Kazana and Obremski [18] were the first to present an explicit construction of a non-malleable code for the split-state model. Specifically, they used the inner-product extractor to construct a non-malleable code for 1-bit messages in the 2-split-state model. Improving upon this result, Aggarwal, Dodis and Lovett [3] gave the first information-theoretic construction for k-bit messages in 2-split-state model, achieving rate \u03a9(n \u22126 ). This construction relies on an elegant property of inner-product functions, which is obtained using results from additive combinatorics, including the Quasi-polynomial Freiman-Ruzsa Theorem [36].\n\nNMC with improved rates All of the above works focused on improving the richness of tampering functions which NMCs can tolerate. However, none of them, barring the codes of [10] for the bit-wise tampering family, achieve optimal rate. Chattopadhyay and Zuckerman [16] were the first to construct an efficient constant-rate non-malleable code in the 10-split-state model. Unfortunately, the rate they achieve is an unknown constant which is typically undesirable while building information-theoretic primitives. Additionally, as observed in [2], the rate is likely to be a small (i.e. poor) constant due to their use of additive combinatorics.\n\nFor the 2-split-state model, the construction by Li in [32] achieves the best known rate to date, of \u03a9(1/ log n). Both these works use the connection between seedless t-source non-malleable extractors and non-malleable codes in t-split-state model, due to [10]. The work of Aggarwal et al. [2] gives beautiful connections between various split-state models. Unfortunately, due to a subtle error pointed by Li [32], their proposed construction of a 2-split-state, constant rate, non-malleable code no longer holds, making Li's result the best known for the 2-split-state model. However, there are two conjectured constant-rate NMC constructions. Specifically, in [3], under an inner-product conjecture, the authors get a constant-rate 2-split-state scheme. Further, while [2], as it stands, gives a linear-rate code using existing methods, it gives a constant-rate 2-split-state under an appropriate conjecture.\n\nWe know the following, about the best achievable rate, from [9] : Lemma 1. (Section 1.1, [9]) For non-malleable codes in the t-split-state model, with each state of equal length, the best achievable rate is 1 \u2212 1 t .\n\nWhile Cheraghchi et al. in [10], obtain a Rate-1 (optimal) NMC for t = O(n), there is no known construction for t = o(n), which achieves the optimal rate 1 \u2212 1 t , for tsplit-state family. In this work, we construct a non-malleable code with rate 1 3+\u03b6 , for any constant \u03b6 > 0 in the 4-split-state model.\n\nComputational setting If we resort to computational assumptions, Aggarwal et al. [1] show that a NMC with the best possible rate as well as the least restricted of the tsplit-state families can be obtained. Concretely, they obtain a rate 1 computational NMC w.r.t. 2-split-state tampering function family. Unfortunately, despite significant efforts, there has been a large gap between the rates of the best known constructions in the computational setting and the information-theoretic setting.\n\nWe give an overview of the Rate-1 construction in the computational setting due to Aggarwal et al. [1] and then highlight the challenges of building such codes in the information-theoretic setting. They propose an enhanced notion of non-malleability, called \"augmented\" non-malleability. Informally, a two-split-state non-malleable code is augmented if the tampered message remains close to the simulated message, even given a state of the codeword. Their construction works by choosing a key k ae to a computational authenticated encryption scheme. It encodes this key with a poor-rate 2-split-state non-malleable code to get states c 1 , c 2 . This key is used to compute an authenticated encryption ciphertext (c 3 ) of the message to be encoded. This gives a threestate nmc: (c 1 , c 2 , c 3 ). (They obtain a two-split-state construction by using \"augmented\" non-malleable codes. They also prove that the 2-state construction of [3] achieves augmented non-malleability.) The key behind the optimality of the rate is the observation that the length of the key for authenticated encryption (in the computational setting) can be short (and independent of the message length). We have summarized the prior work on NMCs for the t-split-state model in Fig. 1. Non-malleable codes have also been studied extensively for various other tampering models like the lookahead tampering model [2,7,11,25], N C0 circuits [6], AC0 circuits [7,13], affine functions [13], space-bounded tampering [23] and tampering functions that permute and perturb the codeword bits [4,5].\n\n\nOur Result\n\nInformally, in this work, we obtain information-theoretic constant-rate non-malleable codes in the 4-split-state model. The fact that we make no computational assumptions brings up some unique challenges in both the construction as well as the proof, which we now highlight. As a starting point, consider the same construction [1] described above but replace the computational authenticated encryption scheme with an informationtheoretic one: we would still obtain a secure non-malleable code. However, for an information-theoretic encryption scheme to be secure, we require the length of the key to be as much as the length of the message. This means that to obtain good rate, the splitstate non-malleable code used as a building block should have good rate as it is encoding a key that is as long as the message-this is precisely the problem we are trying to solve! To resolve this chicken-and-egg problem, we observe that an authenticated encryption scheme can be modularly decomposed into an authentication scheme and an encryp-tion scheme: namely, encrypting a message first with a generic (one-time) encryption scheme and then authenticating it with a one-time message authentication code, gives us a construction of an (one-time) authenticated encryption scheme. The good news is that message authentication codes only require short keys (informally, as long as the security parameter) and can, therefore, be encoded using a non-malleable code without compromising on the rate. This leads to the following approach: can we leverage the non-malleability of authentication key to non-malleably encode larger messages?\n\nWe shall motivate our construction by discussing some incorrect constructions. Consider the following attempt: c 1 = (Enc k e (m), Tag k a (Enc k e (m))); c 2 = k e ; (c 3 , c 4 ) = NMEnc(k a ) where Enc is just a one-time pad encryption, MAC = (Tag, Vrfy) is a one-time message authentication code, NMEnc is a 2-split-state non-malleable code and {c i } i\u2208 [4] are all stored in separate states. A fundamental problem with this proposal is that the encryption key is not encoded with a non-malleable code. By simply changing the key k e and leaving the rest of the encoding unchanged, the adversary can relate the tampered messagem to the underlying message m. We can fix this problem by requiring the encryption key to be authenticated as well. Let c 1 = (Enc k e (m), Tag k a (Enc k e (m)||k e )); c 2 = k e ; (c 3 , c 4 ) = NMEnc(k a ). While the authenticity of k e may no longer be an issue, this introduces another problem: c 1 contains a MAC value computed on the key k e and could reveal some information about k e and therefore, the ciphertext c 1 may no longer be secure. The standard definition of a one-time MAC does not guarantee privacy of the underlying message. (We could consider specific MACs which do guarantee privacy as well but such information-theoretic MACs cannot have short keys, which we require, as mentioned above.) Let us try to remove this dependency by encoding the tag using the non-malleable code. Let c 1 = (Enc k e (m)); c 2 = k e ; (c 3 , c 4 ) = NMEnc(k a , Tag k a (Enc k e (m)||k e )). This leads to the following candidate construction to encode a message m:\n\n1. Choose a key k e for one-time pad encryption (Enc) and a key k a for a one-time message authentication code (MAC). 2. Compute c 1 = Enc k e (m), tag t = Tag k a (c 1 ||k e ) and set c 2 = k e . 3. Compute (c 3 , c 4 ) \u2190 NMEnc(k a , t), using a 2-split-state non-malleable code with poor rate. 4. Output c 1 , c 2 , c 3 , c 4 as the four states of the non-malleable code.\n\nIntuitively, this might seem secure as the encryption key k e is authenticated and its tag is non-malleably encoded. Therefore, at best, the tampering function can make the tamperedk a ,t become independent of the underlying values. Assuming that the MAC verifies on the tampered key and tag, one might like to believe that it guarantees independence ofk e and, therefore, of the underlying messagem as well. Unfortunately, this reasoning is not true for message authentication codes with short tags. Specifically, when tags are much shorter than the message, there will necessarily be collisions in the tag space of a given key-i.e. on a given key, there could be multiple message that map to the same tag value. 6 As we describe in the attack below, these \"collisions\" can be exploited to make the code \"malleable\".\n\nAttack on the Candidate Construction To describe an attack, we need to specify tampering functions f 1 , f 2 , f 3 , f 4 . We use x[0] to denote the least significant bit of the binary string x in the description below.\n\n1. Choose constants k 0 , k 1 from the encryption key space, ct 0 , ct 1 from ciphertext space such that ct 0 [0] = k 0 [0] = 0, ct 1 [0] = k 1 [0] = 1 and a tag t * and a key k * a such that Tag k * a (ct 0 ||k 0 ) = Tag k * a (ct 0 ||k 1 ) = Tag k * a (ct 1 ||k 0 ) = Tag k * a (ct 1 ||k 1 ) = t * . Observe that these values are all independent of the message as well as the randomness of the encoding scheme described above. Now we describe the four tampering functions.\n2. f 1 (c 1 ): If c 1 [0] = 0, set c * 1 = ct 0 otherwise c * 1 = ct 1 . 3. f 2 (c 2 ): If c 2 [0] = 0, set c * 2 = k 0 otherwise c * 2 = k 1 . 4. Compute c * 3 , c * 4 = NMEnc(k * a , t * ) 5. f 3 (c 3 ) = c * 3 6. f 4 (c 4 ) = c * 4\nCarefully working through our choice of the various constants will show us that the tampered message will retain the least significant bit of the underlying message, i.e.m[0] = m[0], wherem is the tampered message. Furthermore, collisions in the MAC scheme have been exploited to ensure that tag of the tampered message and key will always verify. Thus any tampering is undetected and reveals information about the underlying message, thus violating non-malleability.\n\nAnalysing the intuition behind the attack, we observe that the main challenge is that, even though the key and the ciphertext are tampered independently, jointly they may retain information about the original message. To overcome this issue, we modify the construction to ensure that the tampered key is never related to the original key. Ensuring this independence proves to be our major bottleneck. We are able to overcome this bottleneck through a somewhat surprising use of (strong) randomness extractors.\n\nUsing Randomness Extractors to \"Amplify\" Non-malleability Informally, randomness extractors allow us to transform non-uniform randomness into uniform randomness. Here we use randomness extractors to generate the key k e , i.e. k e = Ext(w; s) where w and s are uniformly random strings of appropriate lengths. At the outset, this might seem completely pointless: after all, extractors are typically used in settings where one does not have perfect randomness. This is clearly not the case here: indeed, the encoding scheme is allowed to choose its own randomness! How can choosing k e as the output of an extractor be of any help? Showing how the randomness extractor helps in this scenario is the crux of our proof. We consider the following cases:\n\n1. s, w are both unchanged: In this case, the extracted encryption key remains unchanged. While it remains unclear how to argue non-malleability in this scenario, for now, it suffices to note that the attack described above is no longer relevant and, therefore, we defer a discussion on this case to later. 2. s is changed to an independent seeds 7 : In this case,k e is independent of k e , regardless of howw depends on w. As mentioned earlier, here too the attack described above is no longer relevant.\n\n3. s is unchanged but w is changed in a related manner: In this case,k e could contain information about k e .\n\nCase 3 seems to still retain our original bottleneck, and we handle it by ensuring that, in our construction, whenever the source w is changed, the seed s also needs to be changed. This reduces it to Case 2. What remains is to show how we can ensure this through a delicate use of randomness extractors, message authentication codes and non-malleable codes.\n\nOverview of Our construction We use the following tools in our construction: (a) a non-malleable code for 2-split-state model achieving rate \u03a9(1/ log n) [32] where n is the block-length ; (b) a one-time information-theoretic message authentication code; (c) an average-case strong randomness extractor; (d) a perfectly secure encryption scheme, like one-time pad.\n\nStep I: We use a randomness extractor (which typically have short seeds) to extract the encryption key.\n\nStep II: We encrypt the message using the extracted key.\n\nStep III: To detect modification of the source (used to extract the key) and the ciphertext, we authenticate them using two different one-time MACs 8\n\nStep IV: Finally, we encode the authentication keys and tags along with the seed (used to extract the key) using a 2-state non-malleable code. We output the 2-state codeword, the source and the ciphertext.\n\nThe non-malleable encoding in Step IV ties various key components of our construction together and is crucial in overcoming the challenge described in Case3.\n\nWe further observe here that the ciphertext that we output here will be independent of the message by the semantic security of the encryption scheme. Further, if the 2state non-malleable code being used here is an augmented-non-malleable code, then our construction would be a \"2-augmented\" non-malleable code. 9 We formalize this by considering the general definition of j-augmented-non-malleable codes in the t-splitstate model ( j < t) (as defined in [31]) and proving that our construction is in fact a 2-augmented-non-malleable code in the 4-split-state model (assuming the underlying 2-state non-malleable code to be augmented).\n\nProof techniques We prove non-malleability via a series of statistically close hybrids which take us from the tampered game to a simulated game. But some non-trivial challenges arise in our proof: firstly, there are dependencies across states (e.g.: we include the source in one state and the encoding of its tag in another). So, even though the states are modified independently, the modifications will be interlinked through this dependency. Secondly, even though in our encoding, we choose the source uniformly at random, the decode process reveals information about the source. This will prevent us from using extractor security directly. The trick that helps us here is that we capture all the infor- 8 It is crucial to authenticate them separately as, a construction where we do not authenticate them separately is insecure. This is brought out in the security proof later. 9 A key point to note is that the existing efficient 2-state non-malleable code constructions [3,32] are augmented-non-malleable codes, and hence we can in fact start with a 2-split-state augmented-non-malleable code.\n\nmation learnt via the decoding using auxiliary information that is independent of the seed. This will allow us to use the crucial extractor security in our proof.\n\n\nOrganization of the Paper\n\nWe describe preliminaries and building blocks of the construction in Sects. 2 and 3, respectively. We then give the main construction in Sect. 4.2, followed by the proof in Sect. 4.3. We then give a detailed analysis of the rate and error in Sects. 4.4, 4.5, 4.6 and 4.7.\n\n\nPreliminaries\n\nNotation \u03ba denotes security parameter throughout. s \u2208 R S denotes uniform sampling from set S. x \u2190 X denotes sampling from a probability distribution X. x||y represents concatenation of two binary strings x and y. |x| denotes length of binary string x. U l denotes the uniform distribution on {0, 1} l . All logarithms are base 2.\n\nStatistical distance and Entropy Let X 1 , X 2 be two probability distributions over some set S. Their statistical distance is\nSD (X 1 , X 2 ) def = max T \u2286S {Pr[X 1 \u2208 T ] \u2212 Pr[X 2 \u2208 T ]} = 1 2 s\u2208S Pr X 1 [s] \u2212 Pr X 2 [s] (they are said to be \u03b5-close if SD (X 1 , X 2 ) \u2264 \u03b5 and denoted by X 1 \u2248 \u03b5 X 2 ). The min- entropy of a random variable W is H \u221e (W ) = \u2212 log(max w Pr[W = w])\n. For a joint distribution (W, E), define the (average) conditional min-entropy of W given E [21] as\nH \u221e (W | E) = \u2212 log( E e\u2190E (2 \u2212H \u221e (W |E=e) ))\n(here the expectation is taken over e for which Pr\n[E = e] is nonzero). For a random variable W over {0, 1} n , W |E is said to be an (n, t) -source if H \u221e (W |E) \u2265 t. Proposition 1. Let A 1 , .\n.., A n be mutually exclusive and exhaustive events. Then, for probability distributions X 1 , X 2 over some set S, we have:\nSD (X 1 , X 2 ) \u2264 n i=1 Pr[A i ].SD (X 1 |A i , X 2 |A i ) where X j |A i is the distribution of X j conditioned on the event A i . Proof. 2SD (X 1 , X 2 ) = s\u2208S Pr[X 1 = s] \u2212 Pr[X 2 = s] = s\u2208S n i=1 Pr[A i ] Pr[X 1 = s|A i ] \u2212 Pr[A i ] Pr[X 2 = s|A i ] \u2264 s\u2208S n i=1 Pr[A i ] Pr[X 1 = s|A i ] \u2212 Pr[X 2 = s|A i ] = n i=1 Pr[A i ] s\u2208S Pr[X 1 = s|A i ] \u2212 Pr[X 2 = s|A i ] = 2 n i=1 Pr[A i ]SD (X 1 |A i , X 2 |A i ) Lemma 2. [38] For any random variables A, B if A \u2248 B, then for any function f, f (A) \u2248 f (B).\n\nCorollary 1. For any random variables\nA, B, C if (A, B) \u2248 (A, C), then B \u2248 C.\n\nLemma 3. Let A, B be correlated random variables over\nA, B. For randomized func- tions F : A \u2192 X , G : A \u2192 X (randomness used is independent of B) if \u2200 a \u2208 A, F(a) \u2248 G(a), then (B, A, F(A)) \u2248 (B, A, G(A)). Proof. 2SD ((B, A, F(A)), (B, A, G(A))) = b\u2208B a\u2208A x\u2208X Pr[B = b \u2227 A = a \u2227 F(A) = x] \u2212 Pr[B = b \u2227 A = a \u2227 G(A) = x] = b\u2208B a\u2208A x\u2208X Pr[B = b] Pr[A = a \u2227 F(A) = x|B = b] \u2212 Pr[A = a \u2227 G(A) = x|B = b] = b\u2208B a\u2208A x\u2208X Pr[B = b] Pr[A = a|B = b]. Pr[F(A) = x|A = a, B = b] \u2212 Pr[G(A) = x|A = a, B = b] = b\u2208B a\u2208A x\u2208X Pr[B = b] Pr[A = a|B = b]. Pr[F(a) = x|B = b] \u2212 Pr[G(a) = x|B = b] = b\u2208B a\u2208A x\u2208X Pr[B = b] Pr[A = a|B = b] Pr[F(a) = x] \u2212 Pr[G(a) = x] = b\u2208B a\u2208A Pr[A = a \u2227 B = b] x\u2208X Pr[F(a) = x] \u2212 Pr[G(a) = x] \u2264 b\u2208B a\u2208A Pr[A = a \u2227 B = b] \u00b7 2 = 2\nWe also use the following Lemma [21, Lemma 2.2b], which says that the average minentropy of a random variable does not decrease by more than the length of the correlated random variable.\nLemma 4. If B has at most 2 \u03bb possible values, then H \u221e (A | B) \u2265 H \u221e (A, B) \u2212 \u03bb \u2265 H \u221e (A) \u2212 \u03bb. and, more generally, H \u221e (A | B, C) \u2265 H \u221e (A, B | C) \u2212 \u03bb \u2265 H \u221e (A | C) \u2212 \u03bb.\n\nDefinitions\n\nNon-malleable codes were introduced in [22]. We now state the definition of nonmalleable codes given in [10]. \n\n\nDefinition 2.\n\nA coding scheme (Enc, Dec) with message and codeword spaces as\n{0, 1} l , {0, 1} n , respectively, is -non-malleable with respect to a function family F \u2286 { f : {0, 1} n \u2192 {0, 1} n } if \u2200 f \u2208 F, \u2203 a distribution Sim f over {0, 1} l \u222a {same * , \u22a5} such that \u2200 m \u2208 {0, 1} l Tamper m f \u2248 Copy m Sim f\nwhere Tamper m f denotes the distribution Dec( f (Enc(m))) and Copy m Sim f is defined as\nm \u2190 Sim f Copy m Sim f = m i fm = same * m otherwise\nSim f should be efficiently samplable given oracle access to f (.). \nF = {( f 1 , f 2 ) : f i : {0, 1} \u03b2 \u2192 {0, 1} \u03b2 } if \u2200 ( f 1 , f 2 ) \u2208 F, \u2203 a distribution Sim f 1 , f 2 over ({0, 1} \u03b2 ) \u00d7 ({0, 1} \u03b1 \u222a {same * , \u22a5}) such that \u2200 m \u2208 {0, 1} \u03b1 Tamper m f 1 , f 2 \u2248 Copy m Sim f 1 , f 2 where Tamper m f 1 , f 2 denotes the distribution (L 1 , Dec( f 1 (L 1 ), f 2 (L 2 ))), where (L 1 , L 2 ) \u2190 Enc(m). Copy m Sim f 1 , f 2 is defined as (L 1 ,m) \u2190 Sim f 1 , f 2 Copy m Sim f 1 , f 2 = (L 1 , m) i f (L 1 ,m) = (L 1 , same * ) (L 1 ,m) otherwise Sim f 1 , f 2 should be efficiently samplable given oracle access to ( f 1 , f 2 )(.).\nWe now define the generalization of an augmented-non-malleable code (which were first defined in the 2-split-state model in [1]) to the t-split-state model.\n\n\nDefinition 4. [31]\n\nA coding scheme (Enc, Dec) with message and codeword spaces as\n{0, 1} \u03b1 , ({0, 1} \u03b2 ) t , respectively, is an [ , j]-augmented-non-malleable code (where j < t), with respect to the function family F = {( f 1 , \u00b7 \u00b7 \u00b7 , f t ) : f i : {0, 1} \u03b2 \u2192 {0, 1} \u03b2 } if \u2200 ( f 1 , \u00b7 \u00b7 \u00b7 , f t ) \u2208 F, \u2203 a distribution AugSim f 1 ,\u00b7\u00b7\u00b7 , f t over ({0, 1} \u03b2 ) j \u00d7 ({0, 1} \u03b1 \u222a {same * , \u22a5}) such that \u2200 m \u2208 {0, 1} \u03b1 AugTamper m f 1 ,\u00b7\u00b7\u00b7 , f t \u2248 Copy m AugSim f 1 ,\u00b7\u00b7\u00b7 , f t where AugTamper m f,g denotes the distribution (L i 1 , \u00b7 \u00b7 \u00b7 , L i j , Dec( f 1 (L 1 ), \u00b7 \u00b7 \u00b7 , f t (L t ))), where (L 1 , \u00b7 \u00b7 \u00b7 , L t ) \u2190 Enc(m) and (L i 1 , \u00b7 \u00b7 \u00b7 , L i j ) represents some fixed j states of the total t states. Copy m AugSim f 1 ,\u00b7\u00b7\u00b7 , f t is defined as (L i 1 , \u00b7 \u00b7 \u00b7 , L i j ,m) \u2190 AugSim f 1 ,\u00b7\u00b7\u00b7 , f t Copy m AugSim f 1 ,\u00b7\u00b7\u00b7 , f t = (L i 1 , \u00b7 \u00b7 \u00b7 , L i j , m) if (L i 1 , \u00b7 \u00b7 \u00b7 , L i j ,m) = (L i 1 , \u00b7 \u00b7 \u00b7 , L i j , same * ) (L i 1 , \u00b7 \u00b7 \u00b7 , L i j ,m) otherwise\nAugSim f 1 ,\u00b7\u00b7\u00b7 , f t should be efficiently samplable given oracle access to ( f 1 , \u00b7 \u00b7 \u00b7 , f t )(.).\n\n\nBuilding Blocks\n\nWe use information-theoretic message authentication codes, strong average-case extractor and an existing 2-split-state augmented non-malleable code construction by Li, in [32], 10 as building blocks to our construction. We briefly discuss about these building blocks below.\n\n\nOne-Time Message Authentication Codes\nA family of pair of functions {Tag k a : {0, 1} \u03b3 \u2192 {0, 1} \u03b4 , Vrfy k a : {0, 1} \u03b3 \u00d7 {0, 1} \u03b4 \u2192 {0, 1}} k a \u2208{0,1} \u03c4 is said to be a \u03bc \u2212 secure one time MAC if 1. For k a \u2208 R {0, 1} \u03c4 , \u2200 m \u2208 {0, 1} \u03b3 , Pr[Vrfy k a (m, Tag k a (m)) = 1] = 1 2. For any m = m , t, t , Pr k a [Tag k a (m) = t|Tag k a (m ) = t ] \u2264 \u03bc for k a \u2208 R {0, 1} \u03c4\nFor simplicity, we consider Tag to be a deterministic function.\n\n\nExtractors\n\nExtractors [35] yield a close-to-uniform string from a random variable with high minentropy, using a uniformly random seed i as a kind of catalyst. Strong extractors are ones in which the extracted string looks random even in the presence of the seed. We will use only strong extractors in this paper and thus sometimes omit the adjective \"strong.\" \nDefinition 5. Let Ext : {0, 1} n \u00d7 {0, 1} d \u2192 {0, 1}\u221e (W ) \u2265 t, we have SD ((Ext(W ; X ), X ), (U l , X )) \u2264 \u03b5, where X is the uniform distribution over {0, 1} d .\nUniversal hash functions are perhaps the simplest extractors, allowing t = \u2212 2 + 2 log 1 \u03b5 (see [37,Theorem 8.1], [28,Lemma 4.8], and references therein). If an extractor works when the guarantee on W is for conditional min-entropy rather than min-entropy, it is called an average-case extractor. This notation was introduced in [21, Section 2.5]. Vadhan [38,Problem 6.8] showed that all extractors are average-case extractors with a slight loss of parameters: namely, any (t, \u03b5)-extractor for t \u2264 n \u2212 1 is also a (t, 3\u03b5)-average-case extractor. Some extractors-namely, universal hash function [15]-don't lose parameters at all in the average case [21, Section 2.5] (in fact, almost universal hash functions [37] work as well [17]). \u2212\u03a9 \u03b2 log \u03b2 . 10 Although the paper explicitly doesn't state that the construction is augmented, the construction is in fact an augmented-non-malleable code(as observed in [31]). 11 The explicit two-state non-malleable code construction given in [32] is in fact an augmented-nonmalleable code (as observed in [31]).\n\n\nLi's Construction of 2-Split-State Non-malleable Code\n\nLet the message length be \u03b1 for the non-malleable code in Lemma 5. By Lemma 5, we have\n\u03b1 2\u03b2 = \u03a9 1 log \u03b2 \u21d2 \u03b1 = \u03a9 \u03b2 log(\u03b2)\nBy Lemma 9 in \"Appendix 5\", we have\n\u03b2 = O(\u03b1 \u00b7 log(\u03b1))(1)\n\nConstruction\n\nBefore we present our construction, we briefly summarize some important points that we discuss in Sect. 1. We observe that a non-malleable code is unlikely to be secure if the message m is revealed in the clear in any of the states used \"non-trivially\" by the decoder. If it did, then the tampering function for that state could choose whether or not to tamper depending on the information it learns. It is for this reason that, in our construction, we need to encrypt the message (using a one-time pad) and then store the key as well as the ciphertext in separate states. To prevent the adversary from tampering with these in a related manner, we authenticate it using a key k a . We encode k a as well as the tags using a non-malleable code to ensure that any non-trivial tampering will render these independent of the underlying k a and tags. However, as described in Sect. 1, if we store the encryption key k in the clear, then using the collisions in MAC, we can tamper the key and the ciphertext in a related way, hence leading to a related tampered message. We observe that if we are able to relate the tampered ciphertext but not the tampered encryption keyk to k, then the attack described in Sect. 1 no longer holds. Therefore, a key concern we address as we design our scheme is the following: can we ensure the independence of any tampered encryption keyk from the underlying encryption key k?\n\nWe show that a use of randomness extractors to generate k, combined with a careful use of message authentication codes helps us achieve this independence.\n\nFurther, we show how the semantic security of the underlying encryption makes our construction an augmented-non-malleable code (the ciphertext will also be independent of the message m). 12 \n\n\nNotation\n\n-NMEnc,NMDec be an [\u03b5 1 ,1]-augmented-non-malleable code in the two-split-state model over message and codeword spaces as {0, 1} \u03b1 , {0, 1} \u03b2 1 \u00d7 {0, 1} \u03b2 2 , respectively, (as in Lemma 5), with the message length \u03b1 and the length of the two states, \u03b2 1 , \u03b2 2 , respectively. We assume (without loss of generality) that the first state is augmented. NMTamper m f 1 ,f 2 denotes the joint distribution of the first state and the tampered message with respect to NMEnc,NMDec and the tampering functions f 1 , f 2 . NMSim f 1 ,f 2 denotes the augmented simulator of NMEnc,NMDec with respect to the tampering functions f 1 , f 2 . -Tag,Vrfy be an information-theoretic \u03b5 2 secure one-time MAC (as in Lemma 8) over key, message, tag spaces as {0, 1} \u03c4 1 , {0, 1} n , {0, 1} \u03b4 1 , respectively. -Tag',Vrfy' be an information-theoretic \u03b5 3 secure one-time MAC (as in Lemma 8) over key, message, tag spaces as {0, 1} \u03c4 2 , {0, 1} l , {0, 1} \u03b4 2 , respectively. -Ext be an (n, t, d, l, \u03b5 4 ) average-case strong extractor.\n\nThe parameters will be chosen such that \u03b1 = \u03c4 1 + \u03c4 2 + \u03b4 1 + \u03b4 2 + d and n > 1 + l + t. Refer to Sect. 4.5 for details.\n\n\nConstruction Overview\n\nWe now define a construction for l bit messages in the four-split-state model. The idea is to use a randomness extractor (which typically have short seeds) to extract the key and then encode the seed using the underlying augmented-non-malleable code. Further, the source and the ciphertext are stored in separate parts of the codeword. We then authenticate the source and the ciphertext using two different one-time MAC schemes and then encode the authentication keys and tags using the underlying non-malleable code. In other words, we define an encoder, which sends the ciphertext, the source (used to extract the encryption key) and the 2-state codeword encoding the two pairs of authentication keys and tags and the seed. The construction is described below:\nEnc(m) : -w \u2208 R {0, 1} n , s \u2208 R {0, 1} d -k a 1 \u2208 R {0, 1} \u03c4 1 , k a 2 \u2208 R {0, 1} \u03c4 2 -k = Ext(w, s) -c = m \u2295 k -t 1 = Tag k a 1 (w), t 2 = Tag' k a 2 (c)\n-(l 1 , l 2 ) = NMEnc(k a 1 ||k a 2 ||t 1 ||t 2 ||s) -output :(l 1 , l 2 , w, c)\n\nDec(l 1 , l 2 , w, c) :\n\nk a 1 ||k a 2 ||t 1 ||t 2 ||s = NMDec(l 1 , l 2 ) -If k a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5 output \u22a5 -else if Vrfy k a 1 (w, t 1 ) = 1 \u2227 Vrfy' k a 2 (c, t 2 ) = 1 output c \u2295 Ext(w, s) -else output \u22a5 Theorem 1. Let NMEnc,NMDec be an [\u03b5 1 , 1]-augmented-non-malleable code in the two-split-state model, Tag,Vrfy be an information-theoretic \u03b5 2 -secure one-time MAC and Tag',Vrfy' be an information-theoretic \u03b5 3 -secure one-time MAC as given above. Let Ext be an (n, t, d, l, \u03b5 4 ) average-case strong extractor. Let \u03b1 = \u03c4 1 + \u03c4 2 + \u03b4 1 + \u03b4 2 + d and n > 1 + l + t. Proof. We give the proof in two steps. Firstly, we prove that the proposed construction is a augmented-non-malleable coding scheme (Sect. 4.3). Secondly, we set the parameters to achieve the desired rate and error (Sect. 4.4).\n\n\nSecurity Proof\n\nDefine the 4-split-state tampering family for the above construction as\nF = {(h 1 , h 2 , f, g) : h 1 : {0, 1} \u03b2 1 \u2192 {0, 1} \u03b2 1 , h 2 : {0, 1} \u03b2 2 \u2192 {0, 1} \u03b2 2 , f : {0, 1} n \u2192 {0, 1} n , g : {0, 1} l \u2192 {0, 1} l } To show that (Enc, Dec) is augmented-non-malleable we need to show that \u2200 (h 1 , h 2 , f, g) \u2208 F, \u2203 Sim h 1 ,h 2 , f,g such that \u2200 m \u2208 {0, 1} l AugTamper m h 1 ,h 2 , f,g \u2248 \u03b5 Copy m AugSim h 1 ,h 2 , f,g Let (h 1 , h 2 , f, g) \u2208 F.\nWe define the following simulator:\nAugSim h 1 ,h 2 , f,g : 1. k \u2208 R {0, 1} l 2. c = 0 l \u2295 k 3. w \u2208 R {0, 1} n 4. (w,c) = ( f (w), g(c)) 5. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 ASim h 1 ,h 2 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, \u22a5 7. else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * a. Ifw = w andc = c output l sim 1 , c, same * b. else output l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2\n(c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5 We now prove the statistical closeness of the augmented tampered random variable and the simulated random variable (where the states revealed are L 1 , C) through a sequence of hybrids. Proof Overview At a high level, our goal is to remove the dependency of L 1 , C,M 13 on m, through a series of hybrids. The codeword depends on m, directly or indirectly, through various random variables such as the seed S, W , the authentication keys as well as the tags. To begin with, we wish to remove the dependence of the tampered extracted key (used to decrypt the codeword) on the original extracted key. Through a series of hybrids, we achieve this by removing the dependence of the tampered extracted key and the state L 1 on the seed S. Once we do this, we use the extractor property, to remove the dependency of C on W and S. Finally, we use perfect security of the one-time pad to remove dependency ofC on m.\n\nThroughout the proof, we use capital letters to represent the distributions on the corresponding small letters. We also use AugTamper m  1 ,h 2 , f,g is the same as the augmented tampering experiment except that we use the simulator for the underlying augmented-non-malleable code to generate the state l sim 1 and the corresponding tampered message,k a 1 ||k a 2 ||t 1 ||t 2 ||s.\nh 1 ,h 2 , f,g , Hybrid1 m h 1 ,h 2 , f,g ,\nClaim. If (NMEnc,NMDec) is an [\u03b5 1 , 1]-augmented-non-malleable code (with L 1 being the augmented state), then AugTamper m \nh 1 ,h 2 , f,g \u2248 \u03b5 1 Hybrid1 m h 1 ,h 2 , f,g AugTamper m h 1 ,h 2 , f,g : 1. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 2. k a 1 \u2208 R {0, 1} \u03c4 1 , k a 2 \u2208 R {0, 1} \u03c4 2 3. k = Ext(w; s) 4. c = m \u2295 k 5. t 1 = Tag k a 1 (w), t 2 = Tag' k a 2 (c) 6. (w,c) = ( f (w), g(c)) 7. l 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMTamperHybrid1 m h 1 ,h 2 , f,g : 1. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 2. k a 1 \u2208 R {0, 1} \u03c4 1 , k a 2 \u2208 R {0, 1} \u03c4 2 3. k = Ext(w; s) 4. c = m \u2295 k 5. t 1 = Tag k a 1 (w), t 2 = Tag' k a 2 (c) 6. (w,c) = ( f (w), g(c)) 7a. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 7b. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * ,\nassignk a 1 ||k a 2 ||t 1 ||t 2 ||s = k a 1 ||k a 2 ||t 1 ||t 2 ||s 8. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, \u22a5 9. else if Vrfyk  \nW, C, K a 1 ||K a 2 ||T 1 ||T 2 ||S, NMTamper K a 1 ||K a 2 ||T 1 ||T 2 ||S h 1 ,h 2 \u2248 \u03b5 1 W, C, K a 1 ||K a 2 ||T 1 ||T 2 ||S, Copy K a 1 ||K a 2 ||T 1 ||T 2 ||S NMSim h 1 ,h 2\nBy Corollary 1, we get:\nW, C, NMTamper K a 1 ||K a 2 ||T 1 ||T 2 ||S h 1 ,h 2 \u2248 \u03b5 1 W, C, Copy K a 1 ||K a 2 ||T 1 ||T 2 ||S NMSim h 1 ,h 2\nBy Lemma 2, we get:\nW ,C, C, NMTamper K a 1 ||K a 2 ||T 1 ||T 2 ||S h 1 ,h 2 \u2248 \u03b5 1 W ,C, C, Copy K a 1 ||K a 2 ||T 1 ||T 2 ||S NMSim h 1 ,h 2(2)\nNow, we express the outputs of the hybrids as a deterministic function, Q, of the above variables, to apply Lemma 2 and hence prove the claim. Q(w,c, c, l 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s):\n-Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l 1 , c, \u22a5 -else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l 1 , c,c \u2295 Ext(w;s) -else output l 1 , c, \u22a5\nThen, using Eq. 2 and Lemma 2, we get Claim. If (Tag,Vrfy) and (Tag',Vrfy') are \u03b5 2 -, \u03b5 3 -secure information-theoretic onetime MAC (respectively), then Hybrid1 m (w), g(c)) 7. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 8. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * , assignk a 1 ||k a 2 ||t 1 ||t 2 ||s = k a 1 ||k a 2 ||t 1 ||t 2 ||s 9. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim\nQ W ,C, C, NMTamper K a 1 ||K a 2 ||T 1 ||T 2 ||S h 1 ,h 2 \u2248 \u03b5 1 Q W ,C, C, Copy K a 1 ||K a 2 ||T 1 ||T 2 ||S NMSim h 1 ,h 2 \u21d2 AugTamper m h 1 ,h 2 , f,g \u2248 \u03b5 1 Hybrid1 m h 1 ,h 2 , f,h 1 ,h 2 , f,g \u2248 \u03b5 2 +\u03b5 3 Hybrid2 m h 1 ,h 2 , f,g Hybrid1 m h 1 ,h 2 , f,g : 1. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 2. k a 1 \u2208 R {0, 1} \u03c4 1 , k a 2 \u2208 R {0, 1} \u03c4 2 3. k = Ext(w; s) 4. c = m \u2295 k 5. t 1 = Tag k a 1 (w), t 2 = Tag' k a 2 (c) 6. (w,c) = ( f1 , c, \u22a5 10. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 11. else output l sim 1 , c, \u22a5 Hybrid2 m h 1 ,h 2 , f,g : 1. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 3. k = Ext(w; s) 4. c = m \u2295 k 6. (w,c) = ( f (w), g(c)) 7. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 8. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 9. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, \u22a5 10. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 11\n. else output l sim 1 , c, \u22a5 *Steps 2., 5. have been removed here.\n\nProof. If same * is not sampled from NMSim h 1 ,h 2 , then Hybrid1 m h 1 ,h 2 , f,g and Hybrid2 m h 1 ,h 2 , f,g can be evaluated without steps (2,5,8) and (8), respectively. The output of the two hybrids is identical in this case. Therefore, the statistical distance is zero in this case. When same * is sampled, the key difference between Hybrid1 m h 1 ,h 2 , f,g and Hybrid2 m h 1 ,h 2 , f,g is that, corresponding to this case, we remove the two verify checks (of Step 10) in Hybrid2 m h 1 ,h 2 , f,g and simply replace it with the checks shown in Step 8. By Proposition 1 and above observation, we get:\nSD Hybrid1 m h 1 ,h 2 , f,g ; Hybrid2 m h 1 ,h 2 , f,g \u2264 Pr[NMSim h 1 ,h 2 = same * ] \u00b7 SD(Hybrid1 m h 1 ,h 2 , f,g |NMSim h 1 ,h 2 outputs same * ; Hybrid2 m h 1 ,h 2 , f,g |NMSim h 1 ,h 2 outputs same * )\nSo, now remains the case when NMSim h 1 ,h 2 outputs same * . By using unforgeability of (Tag,Vrfy) and (Tag',Vrfy') we show the that two hybrids are statistically close.\n\n-Let E be the event that same * is sampled from NMSim h 1 ,h 2 and\u1ebc be its compliment. -Let F be the event thatW = W \u2227C = C andF its complement.\n\n-E and F are independent becausew,c are deterministic functions of w and C, respectively (which are independent of NMSim h 1 ,h 2 ), and NMSim h 1 ,h 2 does not take any input except for the a-priori fixed tampering functions h 1 , h 2 .  Hybrid2 m h 1 ,h 2 , f,g : It is easy to see that we have rearranged the steps without changing the distributions of any of the random variable, Hybrid2 m\n(W ,T 1 ) = 1 \u2227 Vrfy'K a 2 (C,T 2 ) = 1| T 1 = Tag K a 1 (W ), T 2 = Tag' K a 2 (C), E,F] \u2264 2 Pr[Vrfy K a 1 (W , T 1 ) = 1 \u2227 Vrfy' K a 2 (C, T 2 ) = 1| T 1 = Tag K a 1 (W ), T 2 = Tag' K a 2 (C),F] \u2264 2(\u03b5 2 + \u03b5 3 ) \u2234 Hybrid1 m h 1 ,h 2 , f,g \u2248 \u03b5 2 +\u03b5 3 Hybrid2 m h 1 ,h 2 , f,g Rewriting1. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 2. k = Ext(w; s) 3. c = m \u2295 k 4. (w,c) = ( f (w), g(c)) 5. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5 Hybrid3 m h 1 ,h 2 , f,g : 1. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 2. w \u2208 R {0, 1} n , s \u2208 R {0, 1} d 3. k = Ext(w; s) 4. c = m \u2295 k 5. (w,c) = ( f (w), g(c)) 6. Ifkh 1 ,h 2 , f,g \u2261 Hybrid3 m h 1 ,h 2 , f,g .\nGoing f rom Hybrid3 m h 1 ,h 2 , f,g to Hybrid4 m h 1 ,h 2 , f,g : We now wish to remove dependency of the ciphertext on the source. This removes the dependency across the two states containing w and c, which might have led to related tampering of the message. To do this, we would like to use the security of our randomness extractor and replace the extracted key k by uniform. The main challenge in doing so is that the decoded (tampered) message might itself reveal information about the key k. This is a challenge because this information is learnt after the seed s is chosen. This is the main bottleneck of our proof. The way we overcome it is by carefully arguing that the information revealed by the decoded message might be learnt from auxiliary information. Importantly, this auxiliary information is completely independent of s, and therefore, we can use extractor security. Ext is an (n, t, d, l, \u03b5 4 ) average-case extractor, then Hybrid3 m\n\n\nClaim. If\nh 1 ,h 2 , f,g \u2248 \u03b5 4 Hybrid4 m h 1 ,h 2 , f,g .\nHybrid3 m h 1 ,h 2 , f,g :\n1. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 2. w \u2208 R {0, 1} n ,s \u2208 R {0, 1} d 3. k = Ext(w; s) 4. c = m \u2295 k 5. (w,c) = ( f (w), g(c)) 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, out- put l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5 Hybrid4 m h 1 ,h 2 , f,g : 1. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 2. w \u2208 R {0, 1} n 3. k \u2208 R {0, 1} l 4. c = m \u2295 k 5. (w,c) = ( f (w), g(c)) 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, out- put l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5\nProof. As explained in the motivation to this claim, we wish to replace the extractor output with a uniform string. In this proof, we take a careful look at the information received by the adversary and capture it using auxiliary information that is independent of the extractor seed. Specifically, we consider two cases and carefully analyse the auxiliary information in each of them. We show that in both these cases, the auxiliary information is completely independent of s. We then use the average extractor property to argue security. We define two mutually exclusive events:\n\n-Let Case1 denote the event thatk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * .\n\n-Let Case2 denote the event thatk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * .\n\nBy Proposition 1, we get:\nSD Hybrid3 m h 1 ,h 2 , f,g , Hybrid4 m h 1 ,h 2 , f,g \u2264 Pr[Case1] SD Hybrid3 m h 1 ,h 2 , f,g |Case1, Hybrid4 m h 1 ,h 2 , f,g |Case1 +Pr[Case2] SD Hybrid3 m h 1 ,h 2 , f,g |Case2, Hybrid4 m h 1 ,h 2 , f,g |Case2 (3)\nWe now use the security of the average-case extractor to get the desired statistical closeness in each of the two cases separately. The auxiliary information in each case is different.\n\nCase1 :k a 1 ||k a 2 ||t 1 ||t 2 ||s = same * In this case, the auxiliary information just includes a single bit, indicating whether w is modified or remains the same. So, we first define this indicator function:\neq(w) = 0 i f f (w) = w 1 i f f (w) = w\nLet the auxiliary information be denoted by E 1 \u2261 (eq(W )). E 1 is independent of S because E 1 is determined given W and W is independent of S. Now, E 1 and W are correlated and E 1 can take at most two possible values. Hence, H \u221e (W |E 1 ) \u2265 H \u221e (W ) \u2212 1 = n \u2212 1 by Lemma 4. As n \u2212 1 > t, by security of average-case extractor, we get:\nE 1 , Ext(W ; S) \u2248 \u03b5 4 E 1 , U l\nAs the message m, the distribution NMSim h 1 ,h 2 and the event Case1 are independent of (W, S), we get:\n(m, NMSim h 1 ,h 2 , E 1 , Ext(W ; S))|Case1 \u2248 \u03b5 4 (m, NMSim h 1 ,h 2 , E 1 , U l )|Case1(4)\nNow, we wish to apply Lemma 2, for which, we express the output of the hybrids conditioned on Case1 as a deterministic function of the variables above. Let Q 1 (m, l 1 , same * , eq(w), k) :\n-c = m \u2295 k -c = g(c)\n-If eq(w) = 1 andc = c output l 1 , c,m -else output l 1 , c, \u22a5 Then, the outputs of Hybrid3 m h 1 ,h 2 , f,g |Case1 and Hybrid4 m h 1 ,h 2 , f,g |Case1 are expressible by Q 1 above. Now, Eq. 4 together with Lemma 2, gives:\nQ 1 (m, NMSim h 1 ,h 2 , E 1 , Ext(W ; S))|Case1 \u2248 \u03b5 4 Q 1 (m, NMSim h 1 ,h 2 , E 1 , U l )|Case1 i.e. Hybrid3 m h 1 ,h 2 , f,g |Case1 \u2248 \u03b5 4 Hybrid4 m h 1 ,h 2 , f,g |Case1 (5)\nCase2:k a 1 ||k a 2 ||t 1 ||t 2 ||s = same * This case is further divided into two mutually exclusive events of Case2.\n\nCase2a:k a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5 Givenk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5 both hybrids output l sim 1 , c, \u22a5 with probability 1. Therefore\nSD Hybrid3 m h 1 ,h 2 , f,g |Case2a, Hybrid4 m h 1 ,h 2 , f,g |Case2a = 0( 6 )\nCase2b:k a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5 \u2227k a 1 ||k a 2 ||t 1 ||t 2 ||s = same * Whenk a 1 ||k a 2 ||t 1 ||t 2 ||s = (same * , \u22a5), the auxiliary information consists of an indicator of verification ofw, the simulated authentication key and tag (corresponding to the ciphertext) distributions and the modified encryption key. We first define the indicator of verification bit:\nV eri f y(w) = Vrfyk a 1 ( f (w),t 1 )\nNow, let the auxiliary information be denoted by\nE 2 \u2261 (V eri f y(W ), L sim 1 ,K a 2 ,T 2 , Ext(W ;S)), where L sim 1 ,K a 1 ,K a 2 ,T 1 ,T 2 ,S \u2261 NMSim h 1 ,h 2 |Case2b\ndenote the distributions on the augmented state, authentication key, tag spaces and the seed, when sampled from the simulator conditioned on the event Case2b. E 2 is clearly a deterministic function of L sim 1 ,K a 1 ,K a 2 ,W ,T 1 ,T 2 ,S, all of which are independent of S (as we use the simulator). Hence, E 2 is independent of S. Now, E 2 and W are correlated. But L sim 1 ,K a 2 ,T 2 are independent of W (because NMSim h 1 ,h 2 is independent of W ). Hence,\nH \u221e (W |E 2 ) = H \u221e (W |V eri f y(W ), L sim 1 ,K a 2 ,T 2 , Ext(W ;S)) \u2265 H \u221e (W |L sim 1 ,K a 2 ,T 2 ) \u2212 (1 + l) (by Lemma 4) = H \u221e (W ) \u2212 (1 + l) (as L sim 1 ,K a 2 ,T 2 are independent of W ) = n \u2212 (1 + l)\nAs n \u2212 (1 + l) > t (due to the way we set parameters in Sect. 4.5), by security of average-case extractor, we get:\nE 2 , Ext(W ; S) \u2248 \u03b5 4 E 2 , U l (as event Case2bis independent of W, S, U l )\nAs m is independent of (W, S), we get:\nm, E 2 , Ext(W ; S) \u2248 \u03b5 4 m, E 2 , U l(7)\nNow, we wish to apply Lemma 2 and again, we express the outputs of Hybrid3 m h 1 ,h 2 , f,g | Case2b and Hybrid4 m h 1 ,h 2 , f,g |Case2b as a deterministic function of the variables above. Define function Q 2 as follows. Q 2 (m, V eri f y(w), l 1 ,k a 2 ,t 2 , Ext(w;s), k) :\n-c = m \u2295 k -c = g(c)\n-If V eri f y(w) = 1 and Vrfy k  \nQ 2 (m, E 2 , Ext(W ; S))|Case2b \u2248 \u03b5 4 Q 2 (m, E 2 , U l )|Case2b i.e. Hybrid3 m h 1 ,h 2 , f,g |Case2b \u2248 \u03b5 4 Hybrid4 m h 1 ,h 2 , f,g |Case2b (8)\nHence, by Proposition 1, Eqs. 3, 5, 6 and 8 above, we get:\nHybrid3 m h 1 ,h 2 , f,g \u2248 \u03b5 4 Hybrid4 m h 1 ,h 2 , f,g\nRemark on Auxiliary Information We first observe that the auxiliary information in both cases contains the additional information required to get the outputs of the hybrids, which are independent of the seed. In Case1, we just have a single bit of auxiliary information, which is independent of s. such that we first choose the encryption key k uniformly at random, to get Hybrid5 m h 1 ,h 2 , f,g . This reordering of steps is to stress on the fact that, we have now removed the dependency of the encryption key on w and s and we sample it uniformly at random. Proof. We begin by expressing the hybrid outputs as a randomized function of the message and the ciphertext. The randomness of the randomized function is independent of the input. We define function Q 3 as follows: Q 3 (m, c) : g(c)) -Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 -else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, \u22a5 -else If Vrfyk \nHybrid4 m h 1 ,h 2 , f,g : 1. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 2. w \u2208 R {0, 1} n 3. k \u2208 R {0, 1} l 4. c = m \u2295 k 5. (w,c) = ( f (w), g(c)) 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, out- put l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5 Hybrid5 m h 1 ,h 2 , f,g : 1. k \u2208 R {0, 1} l 2. c = m \u2295 k 3. w \u2208 R {0, 1} n 4. (w,c) = ( f (w), g(c)) 5. l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 6. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. else ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, out- put l sim 1 , c, \u22a5 8. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l sim 1 , c,-l sim 1 ,k a 1 ||k a 2 ||t 1 ||t 2 ||s \u2190 NMSim h 1 ,h 2 -w \u2208 R {0, 1} n -(w,c) = ( f (w),\n\nRate and Error Analysis\n\nWe now present the details of the rate of the code as well as the error it achieves. As we are encoding the seed of the extractor using the underlying non-malleable code, it is important that the strong extractor we use has short seed length. This is guaranteed by the following lemma. We now combine the Lemmas 6 and 7 to get an average-case extractor with optimal seed length.  (  1 )).\n\nNow, we also encode the authentication keys and tags using the underlying non-malleable code. Hence, we require them to have short lengths. This is guaranteed by the following lemma.\n\nLemma 8. [29] For any n , \u03b5 2 > 0 there is an efficient \u03b5 2 \u2212secure one-time MAC with \u03b4 \u2264 (log(n )+log( 1 \u03b5 2 )), \u03c4 \u2264 2\u03b4, where \u03c4, n , \u03b4 are key, message, tag length, respectively.\n\nWe refer the reader to [17] for a construction satisfying these parameters.\n\n\nSetting Parameters\n\n-Set all the error parameters , \u03bc, 1 2 , 3 = 2 \u2212\u03bb and 4 = + \u03bc -The codeword of the construction in Fig. 1 has four states: a two-split state NMC codeword (l 1 , l 2 ), source(w), ciphertext(c). In order to estimate the rate, we need to estimate the length of each of these states. -Let l be the length of the message for construction in Fig. 1. As we are using the one-time pad encryption scheme, |C| = l. -We now estimate the length of the sourcen. Although the source has full entropy (i.e. uniformly random), as we can see from the proof of Claim 4.3, we do reveal some auxiliary information which needs to be taken into account. The amount of auxiliary information that is revealed in Claim 4.3 can be upper bounded by the amount of auxiliary information that is revealed in Case2b. So we need to upper bound this entropy loss. This auxiliary information consists of an indicator bit and an extractor output. We know that the extractor output is of length l bits and the indicator is just one bit. -By Lemma 4, the average entropy of the source given auxiliary information is at least n \u2212 (1 + l)\n\nlength of aux in f o which is at least n \u2212 (1 + l).\n\n-Also we need to make sure that the average entropy we are left with is at least the entropy threshold (t + log( 1 \u03bc )). So we need to estimate t\n\n\u2022 By Corollary 2, we have t = (l + O(log(n) + log( 1 )))\n1 1 \u2212 \u03bd \u2022 It is necessary and sufficient if n \u2212 (1 + l) > t + log( 1 \u03bc ) \u21d2 n \u2265 (1 + 1 1 \u2212 \u03bd )l + \u03bb + O(log(n) + \u03bb)\nAs \u03bd can be very small constant thats close to 0, fixing n = (2+\u03b6 )l +O(log(l)+ \u03bb) for some constant \u03b6 close to 0, would satisfy the above equation.\n\nWe now estimate the length of the codeword of the underlying NMC. We encode an authentication key, tag pair of ciphertext, authentication key, tag pair of the source, extractor seed. We now, estimate their lengths. -\u03c4 1 , \u03b4 1 -length of key, tag to authenticate source(W ) of length n.\n\n\u2022 Applying Lemma 8 with n = n, 2 = 2 \u2212\u03bb gives \u03b4 1 \u2264 (log(n) + \u03bb) and \u03c4 1 \u2264 2\u03b4 1 . Therefore\n\u03c4 1 + \u03b4 1 \u2264 3(log(n) + \u03bb)(9)\n\u03c4 2 , \u03b4 2 -length of key, tag to authenticate ciphertext (c) of length l.\n\n\u2022 Applying Lemma 8 with n = l, 3 = 2 \u2212\u03bb gives \u03b4 2 \u2264 (log(l)+\u03bb) and \u03c4 2 \u2264 2\u03b4 2 . Therefore\n\u03c4 2 + \u03b4 2 \u2264 3(log(l) + \u03bb)(10)\nd-seed length of the extractor.\n\n\u2022 From Corollary 2. we have d = O(log(n) + log (  1 )).\n\n\u2022 Substituting n = (2 + \u03b6 )l + O(log(l) + \u03bb) and = 2 \u2212\u03bb gives\nd = O(log((2 + \u03b6 )l + O(log(l) + \u03bb)) + \u03bb) = O(log(l + \u03bb) + \u03bb) = O(log(l) + \u03bb)(11)\n\u03b1 = \u03c4 1 + \u03c4 2 + \u03b4 1 + \u03b4 2 + d -length of message that we are encoding using NMC in [32].\n\n\u2022 By Eqs. 9, 10, 11 \u03b1 \u2264 (c + 1)(log(l) + \u03bb) + 3(log(l) + \u03bb) + 3(log(n) + \u03bb)\nBy substituting n = (2 + \u03b6 )l + O(log(l) + \u03bb) we get \u03b1 = O(log(l) + \u03bb)(12)\n-2\u03b2-codeword length of NMC in [32].\n\n\u2022 By Eq. 1, we have \u03b2 = O(\u03b1 log(\u03b1)) By Eq. 12, we have\n\u03b1 log(\u03b1) = O((log(l) + \u03bb). log(log(l) + \u03bb)) = O((log(l)) 2 + \u03bb. log(\u03bb) + 2.\u03bb. log(l)))(13)\nTherefore,\n\u03b2 = O((log(l)) 2 + \u03bb log(\u03bb) + 2\u03bb log(l)))(14)\n-Now we have upper bound on the length of all states of the codeword in terms of l and \u03bb.\n\n\nRate\n\nLet R denote the rate of proposed construction. R = l 2\u03b2 + n + l Substituting n and \u03b2 (by Eq. 14)\n\n= l O((log(l)) 2 + \u03bb. log(\u03bb) + 2.\u03bb. log(l)) + (2 + \u03b6 )l + O(log(l) + \u03bb) + l For some constant c \u2265 l c((log(l)) 2 + \u03bb log(\u03bb) + 2\u03bb log(l)) + (2 + \u03b6 )l + O(log(l) + \u03bb) + l = 1 c((log(l)) 2 + \u03bb log(\u03bb) + 2\u03bb log(l)) + (2 + \u03b6 )l + O(log(l) + \u03bb) + l l  Fig. 1 achieves rate that is at least 1 3 + \u03b6 , for some \u03b6 very close to 0.\n\n\nError\n\nError of the proposed construction is \u03b5 1 +\u03b5 2 +\u03b5 3 +\u03b5 4 = 5(2 \u2212\u03bb ). Because \u03bb = o l log l , the error will be at least 2 \u2212 l log l . For any \u03c1 > 0, fixing \u03bb = l log \u03c1+1 l , the error would be at most 5.2 \u2212 l log \u03c1+1 l . Setting \u03ba = \u03bb\u2212log 5, the error would be 2 \u2212\u03ba = 2 \u2212\u03a9(l/ log \u03c1+1 l) . 14\n\n\nBuilding Constant-Rate (t + 2)\n\n(t + 2) (t + 2)-State Augmented-NMC from any t-State Augmented-NMC with Inverse Polynomial Rate Theorem 2. Let NMEnc,NMDec be an [\u03b5 1 , j]-augmented-non-malleable code in the t-split-state model with rate \u03a9 1 \u03b1 a , for some constant a and message length \u03b1. The algorithms (Tag, Vrfy), (Tag', Vrfy'), Ext be as a specified in Sect. 4.1.\n\nFor any constant \u03b6 > 0, messages of length l, any \u03ba such that \u03ba = o l l a+1 , the construction in figure below gives a [2 \u2212\u03ba , j + 1]-augmented-non-malleable code in the t + 2-split-state model with block length (3 + \u03b6 )l + o(l). Thereby, it achieves an asymptotic rate of 1 3 + \u03b6 .\n\n\nEnc(m)\n\n:\n-w \u2208 R {0, 1} n , s \u2208 R {0, 1} d -k a 1 \u2208 R {0, 1} \u03c4 1 , k a 2 \u2208 R {0, 1} \u03c4 2 -k = Ext(w, s) -c = m \u2295 k -t 1 = Tag k a 1\n(w), t 2 = Tag' k a 2 (c) -(l 1 , l 2 , \u00b7 \u00b7 \u00b7 , l t ) = NMEnc(k a 1 ||k a 2 ||t 1 ||t 2 ||s) -Output :(l 1 , l 2 , \u00b7 \u00b7 \u00b7 , l t , w, c) Dec(l 1 , l 2 , \u00b7 \u00b7 \u00b7 , l t , w, c) :\n\nk a 1 ||k a 2 ||t 1 ||t 2 ||s = NMDec(l 1 , l 2 , \u00b7 \u00b7 \u00b7 , l t ) -If k a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5 output \u22a5 -else if Vrfy k a 1 (w, t 1 ) = 1 \u2227 Vrfy' k a 2 (c, t 2 ) = 1 output c \u2295 Ext(w, s) -else output \u22a5 14 If we instantiate our construction with the improved rate (\u03a9((log log log n)/(log log n))) construction of [33], we get an improved error, but our rate remains the same.\n\nProof. The construction in figure above is a secure (t + 2)-state augmented-NMC. The security proof is similar to the proof in Sect. 4.3. Set parameters \u03ba, , \u03bc, 1 2 , 3 , 4 , n, \u03b1 in terms of l, \u03bb as in Sect. 4.5.\n\n-Let \u03b2 be length of t-state codeword of (NMEnc, NMDec) for messages of length \u03b1. \n\n\nConclusion\n\nIn this work, we constructed an efficient 2-augmented-non-malleable code in the t-splitstate model, for t = 4, that achieves a constant rate of 1 3+\u03b6 , for any constant \u03b6 > 0 and error 2 \u2212\u03a9( / log c+1 ) , where is the length of the message and c > 0 is a constant. This improves the constant-rate constructions of Cheraghchi and Guruswami [10] (by bringing down the number of states from n to 4) and Chattopadhyay and Zuckerman [16] (by making the \"constant\" in the rate explicit and by bringing down the number of states from 10 to 4). We stress that, as is the case with all information-theoretic primitives, optimizing constant factors in achieving key parameters, such as, in this case, the rate/number of states etc., is both crucial and challenging.\n\nWhile we obtain our specific parameters by using the 2 state non-malleable code construction due to [32], our techniques are general and uses the underlying NMC in a black-box. Hence, our construction can be generalized to obtain a (t + 2)-state NMC from any t-state NMC, leading to interesting trade-offs between the rate vs the number of states depending on the parameters of underlying NMC (Sect. 5).\n\nAn interesting open problem would be to see if our techniques can be used to improve the rate of non-malleable codes with special features such as \"locality\" [12,19,20], security against continuous tampering [24,30], and leakage-resilience [2]. Subsequent Work Inspired by the NMC construction in this work, Kanukurthi, Obbattu and Sekar give a construction (that is a simplified abstraction of our construction) of a Non-malleable Randomness Encoder (NMRE), in [31], which is a primitive that nonmalleably encodes random messages. Further, in the same work, the authors use NMREs (with rate 1/2 in the 2-split-state model) to get an explicit construction of a three-state non-malleable code, with rate 1 3 . Independently, Gupta, Maji and Wang also gave an explicit construction of a threestate non-malleable code, with rate 1 3 , in [25]. More recently, in [33], Li gives an explicit construction of a non-malleable code in the 2-split-state model achieving rate \u03a9((log log log n)/(log log n)) (which improves the best known rate for 2-split-state constructions). \n\nIn either case, for large \u03b1, \u03b2, for a constant\nc 4 > 0 0 \u2264 c 4 .\u03b2 \u2264 \u03b1 log(\u03b1) \u21d2 \u03b1 log(\u03b1) = \u03a9(\u03b2) \u21d2 \u03b2 = O(\u03b1 log(\u03b1))\nFig. 1 .\n1Summarizing prior work on t-split-state family.\n\nDefinition 1 .\n1A (possibly randomized) function Enc : {0, 1} l \u2192 {0, 1} n and a deterministic function Dec : {0, 1} n \u2192 {0, 1} l \u222a {\u22a5} are said to be a coding scheme if \u2200 m \u2208 {0, 1} l , Pr[Dec(Enc(m)) = m] = 1. l is called the message length, and n is called the block length or the codeword length. Rate of a coding scheme is given by l n .\n\nLemma 5 .\n5[32, Theorem 7.12]  For any \u03b2 \u2208 N, there exists an explicit (augmented 11 ) non-malleable code with an efficient encoder/decoder in the two-split-state model with block length 2\u03b2, rate \u03a9 1 log \u03b2 and error = 2\n\nFor any constant \u03b6 > 0 ,\n0messages of length l, any \u03ba such that \u03ba = o l log l , the construction in figure above is a [2 \u2212\u03ba , 2]-augmented-non-malleable code in the foursplit-state model with block length (3 + \u03b6 )l + o(l). Thereby, it achieves an asymptotic rate of 1 3 + \u03b6 .\n\nk a 1\n1||k a 2 ||t 1 ||t 2 ||s h 1 ,h 2 8. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l 1 , c, \u22a5 9. else if Vrfyk a 1 (w,t 1 ) = 1 \u2227 Vrfy'k a 2 (c,t 2 ) = 1 output l 1 , c,c \u2295 Ext(w;s) 10. else output l 1 , c, \u22a5\n\n\nsim 1 , c,c \u2295 Ext(w;s) 10. else output l sim 1 , c, \u22a5\n\n\na 1 ||k a 2 ||t 1 ||t 2 ||s = same * \u2022 Ifw = w andc = c output l sim 1 , c,m \u2022 else output l sim 1 , c, \u22a5 7. Ifk a 1 ||k a 2 ||t 1 ||t 2 ||s = \u22a5, output l sim 1 , c, sim 1 , c,c \u2295 Ext(w;s) 9. else output l sim 1 , c, \u22a5\n\na 2 (\n2c,t 2 ) = 1 output l 1 , c,c \u2295 Ext(w;s) -else output l 1 , c, \u22a5\n\na 1 (\n1w,t 1 ) = 1 and Vrfy'ka 2 (c,t 2 ) = 1 output l sim 1 , c,c \u2295 Ext(w,s) -else output l sim 1 , c, \u22a5 \u21d2 AugTamper m h 1 ,h 2 , f,g \u2248 \u03b5 1 +\u03b5 2 +\u03b5 3 +\u03b5 4 Copy m AugSim h 1 ,h 2 , f,g\n\nCorollary 2 .\n2For any \u03bc > 0 and every constant \u03bd > 0 all integers n \u2265 t and all \u2265 0, there is an explicit (efficient) (n, t + log( 1 \u03bc ), d, l, + \u03bc)\u2212 average-case strong extractor with l = (1 \u2212 \u03bd)t \u2212 O(log(n) + log( 1 )) and d = O(log(n) + log\n\n\nc(\u03bb log(\u03bb) + 2\u03bb log(l)) + O(\u03bb) l + 3 + \u03b6\n\nFor \u03bb = o\n\u03b2 = O(\u03b1 a+1 ) -The rate r of the (t + 2)\u2212state NMC (Enc, Dec) is r = l \u03b2 + n + l Substituting n and \u03b2 = l O(\u03b1 a+1 ) + (2 + \u03b6 )l + O(log(l) + \u03bb) + l Substituting \u03b1 = O(log(l) + \u03bb) = l O((log(l) + \u03bb) a+1 ) + (2 + \u03b6 )l + O(log(l) + \u03bb) + lFor some constant c \u2265 1 c((log(l) + \u03bb) a+1 ) + (2 + \u03b6 )l + O(log(l) + \u03bb) + l l For large l = 1 c((log(l) + \u03bb) a+1 ) + O(\u03bb) l + 3 + \u03b6 Error analysis is similar to the analysis in Sect. 4.7.\n\n\nDefinition 3. Augmented-Non-malleable Codes[1] A coding scheme (Enc, Dec) with message and codeword spaces as {0, 1} \u03b1 , ({0, 1} \u03b2 ) 2 , respectively, is -augmented-nonmalleable with respect to the function family\n\n\nl be a polynomial time probabilistic function that uses d bits of randomness. We say that Ext is an (n, t, d, l, \u03b5)-strong extractor if for all random variables W over {0, 1} n such that H\n\n\nto denote the distributions on the outputs in the corresponding hybrid experiments described below.Hybrid2 m \nh 1 ,h 2 , f,g , Hybrid3 m \nh 1 ,h 2 , f,g , Hybrid4 m \nh 1 ,h 2 , f,g , Hybrid5 m \nh 1 ,h 2 , f,g , Hybrid6 m \n\nh 1 ,h 2 , f,g \n\nGoing f rom AugTamper ex periment to Hybrid1 m \nh 1 ,h 2 , f,g : Hybrid1 m \nh \n\n\n( as given E and F both the hybrids outputm as the third component.)-Let L 1 , M, M denote the sets {0, 1} \u03b2 1 , {0, 1} l , {0, 1} l \u222a {\u22a5}, respectively. \n\n2SD Hybrid1 m \nh 1 ,h 2 , f,g ; Hybrid2 m \n\nh 1 ,h 2 , f,g \n\n= \n\nl 1 \u2208L 1 \nc\u2208M \nm\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c,m)] \n\n\u2212 Pr[Hybrid2 m \nh 1 ,h 2 , f,g = (l 1 , c,m)] \n\n\u2264 \n\nl 1 \u2208L 1 \nc\u2208M \nm\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E] \n\n\u2212 Pr[Hybrid2 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E] \n\n(as given\u1ebc both the hybrids are identical.) \n\n\u2264 \n\nl 1 \u2208L 1 \nc\u2208M \nm\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E,F] \n\n\u2212 Pr[Hybrid2 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E,F] \n\u2264 \n\nl 1 \u2208L 1 \nc\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c, \u22a5)|E,F] \n\n\u2212 Pr[Hybrid2 m \nh 1 ,h 2 , f,g = (l 1 , c, \u22a5)|E,F] \n\n+ \n\nl 1 \u2208L 1 \nc\u2208M \nm\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E,F] \n\n(given E,F the third component output by Hybrid2 is always \u22a5) \n\n= 1 \u2212 \n\nl 1 \u2208L 1 \nc\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c, \u22a5)|E,F] \n\n+ \n\nl 1 \u2208L 1 \nc\u2208M \nm\u2208M \n\nPr[Hybrid1 m \nh 1 ,h 2 , f,g = (l 1 , c,m)|E,F] \n\n(as Hybrid2|E,F always outputs \u22a5 as third component and the other \n\ncomponents are identical in both hybrids.) \n\n= 2 Pr[Hybrid1 m \nh 1 ,h 2 , f,g doesn't ouput \u22a5 as third component|E,F] \n\u2264 2 Pr[VrfyK \n\na 1 \n\n\n\n\nIn Case2, however, as we add the verification bit to E 2 , it is important that this verification check is independent of s. If we authenticate w and c together, under a single MAC, then the verify check would be dependent on c as well, which in turn depends on s in the third hybrid. So, it is important that we authenticate w and c independently with separate one-time MACs. Then, we give the modified authentication key and tag corresponding to c in E 2 , which are independent of s.Rewriting Hybrid4 m \nh 1 ,h 2 , f,g as Hybrid5 m \nh 1 ,h 2 , f,g : We again rewrite Hybrid4 m \n\nh 1 ,h 2 , f,g \n\n\n\n\nthe perfect security of the one-time pad to remove the dependency of C (and hence, ofC) on m. This gives us the simulated view, independent of m. Claim. Hybrid5 m h 1 ,h 2 , f,g \u2261 Hybrid6 m h 1 ,h 2 , f,g by perfect security of one-time pad encryption.c \u2295 Ext(w;s) \n9. else output l sim \n1 , c, \u22a5 \n\nAs we have only reordered the steps without changing any of the distributions, clearly \nHybrid4 m \nh 1 ,h 2 , f,g \u2261 Hybrid5 m \nh 1 ,h 2 , f,g . \n\nGoing f rom Hybrid5 m \nh 1 ,h 2 , f,g to Hybrid6 m \nh 1 ,h 2 , f,g : In the final hybrid, Hybrid6 m \nh 1 ,h 2 , f,g , \nwe use \n\n\nLemma 6.[27] For every constant \u03bd > 0 all integers n \u2265 t and all \u2265 0, there is anexplicit (efficient) (n, t, d, l, )\u2212strong extractor with l = (1\u2212\u03bd)t \u2212O(log(n)+log( 1 ))Now, as we give some auxiliary information about the source, we require the security of the extractor to hold, even given this information. Hence, we use average-case extractors, given in the following lemma.and d = O(log(n) + log( \n1 )). \n\nLemma 7. [21] For any \u03bc > 0, if Ext is a (worst case)(n, t, d, l, )\u2212strong extractor, \n\nthen Ext is also an average-case (n, t + log( \n1 \n\u03bc \n), d, l, + \u03bc) strong extractor. \n\n\n\n\nlog(\u03b2) \u2264 2. log(\u03b1)Multiplying with Eq. 15, we get0 \u2264 \nc \n2 \n.\u03b2 \u2264 \u03b1 log(\u03b1) \n(16) \n\nIf c < 1, let c = \n1 \nc \n\n\u03b2 \u2264 c .\u03b1 \n\nlog(\u03b2) \u2264 2(log(c ) + log(\u03b1)) \n\nlog(\u03b2) \u2264 4. log(\u03b1) \n\nMultiplying with Eq. 15 \n\n0 \u2264 \nc \n4 \n.\u03b2 \u2264 \u03b1 log(\u03b1) \n\nFor example, this input-output behaviour may be decryption of ciphertexts in the case of Chosen Ciphertext Security of Encryption or signatures of messages in the case of Digital Signatures.\nThis problem does not arise with a MAC such as ax + b where (a, b) is the MAC key and x is the underlying message. There, for a fixed key and fixed tag, there is a unique message which satisfies the linear equation.\nWe ensure this by encoding s using a non-malleable code.\nThe preliminary version of this paper at TCC 2017 did not show the augmented-non-malleability feature.\nCapital letters L 1 , C andM denote the distributions on respective states and the tampered message.\nPublisher's Note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.\nAcknowledgementsWe thank Yevgeniy Dodis for insightful comments related to the generalization in Sect. 5. We also thank the anonymous referees for several helpful comments. Research of the first author was supported, in part, by Department of Science and Technology Inspire Faculty Award.Hybrid5 m h1,h 2 , f,g :Replace sequence of steps 3-9 with an output of Q 3 (m, c) in both the hybrids. By perfect security of OTP encryption, for any message m and a uniform distribution K on the key spaceProof. By the definition of \u03a9, \u2203 a constant c > 0 such that for large \u03b1, \u03b2If c \u2265 1 \u03b2 \u2264 \u03b1\nOptimal computational splitstate non-malleable codes. D Aggarwal, S Agrawal, D Gupta, H K Maji, O Pandey, M Prabhakaran, Theory of Cryptography -13th International Conference, TCC 2016-A. Tel Aviv, IsraelProceedings, Part IID. Aggarwal, S. Agrawal, D. Gupta, H.K. Maji, O. Pandey, M. Prabhakaran, Optimal computational split- state non-malleable codes, in Theory of Cryptography -13th International Conference, TCC 2016-A, Tel Aviv, Israel, January 10-13, 2016, Proceedings, Part II, 2016, pp. 393-417\n\nNon-malleable reductions and applications. D Aggarwal, Y Dodis, T Kazana, M Obremski, Proceedings of the Forty-Seventh Annual ACM on Symposium on Theory of Computing, STOC 2015. the Forty-Seventh Annual ACM on Symposium on Theory of Computing, STOC 2015Portland, OR, USAD. Aggarwal, Y. Dodis, T. Kazana, M. Obremski, Non-malleable reductions and applications, in Proceed- ings of the Forty-Seventh Annual ACM on Symposium on Theory of Computing, STOC 2015, Portland, OR, USA, June 14-17, 2015, pp. 459-468\n\nNon-malleable codes from additive combinatorics. D Aggarwal, Y Dodis, S Lovett, Symposium on Theory of Computing, STOC 2014. New York, NY, USAD. Aggarwal, Y. Dodis, S. Lovett, Non-malleable codes from additive combinatorics, in Symposium on Theory of Computing, STOC 2014, New York, NY, USA, May 31-June 03, 2014, pp. 774-783\n\nExplicit non-malleable codes resistant to permutations and perturbations. S Agrawal, D Gupta, H K Maji, O Pandey, M Prabhakaran, IACR Cryptology ePrint Archive. 841S. Agrawal, D. Gupta, H.K. Maji, O. Pandey, M. Prabhakaran, Explicit non-malleable codes resistant to permutations and perturbations. IACR Cryptology ePrint Archive, 2014, p. 841\n\nA rate-optimizing compiler for nonmalleable codes against bit-wise tampering and permutations. S Agrawal, D Gupta, H K Maji, O Pandey, M Prabhakaran, Theory of Cryptography -12th Theory of Cryptography Conference, TCC 2015. Warsaw, PolandProceedings, Part IS. Agrawal, D. Gupta, H.K. Maji, O. Pandey, M. Prabhakaran, A rate-optimizing compiler for non- malleable codes against bit-wise tampering and permutations, in Theory of Cryptography -12th Theory of Cryptography Conference, TCC 2015, Warsaw, Poland, March 23-25, 2015, Proceedings, Part I, 2015, pp. 375-397\n\nNon-malleable codes for bounded depth, bounded fan-in circuits. M Ball, D Dachman-Soled, M Kulkarni, T Malkin, Advances in Cryptology -EUROCRYPT 2016. M. Fischlin, J.-S. CoronBerlinSpringerM. Ball, D. Dachman-Soled, M. Kulkarni, T. Malkin, Non-malleable codes for bounded depth, bounded fan-in circuits, in M. Fischlin, J.-S. Coron, eds., Advances in Cryptology -EUROCRYPT 2016 (Springer, Berlin), pp. 881-908\n\nNon-malleable codes from average-case hardness: Ac 0 , decision trees, and streaming space-bounded tampering. M Ball, D Dachman-Soled, M Kulkarni, T Malkin, Advances in Cryptology -EUROCRYPT. J.B. Nielsen, V. Rijmen,ChamSpringer International PublishingM. Ball, D. Dachman-Soled, M. Kulkarni, T. Malkin, Non-malleable codes from average-case hardness: Ac 0 , decision trees, and streaming space-bounded tampering, in J.B. Nielsen, V. Rijmen, (eds.,) Advances in Cryptology -EUROCRYPT 2018 (Springer International Publishing, Cham, 2018), pp. 618-650\n\nNon-malleable encryption: Simpler, shorter, stronger. S Coretti, Y Dodis, B Tackmann, D Venturi, Theory of Cryptography. E. Kushilevitz, T. Malkin,Berlin, HeidelbergSpringerS. Coretti, Y. Dodis, B. Tackmann, D. Venturi, Non-malleable encryption: Simpler, shorter, stronger, in E. Kushilevitz, T. Malkin, (eds.), Theory of Cryptography (Springer, Berlin, Heidelberg, 2016), pp. 306-335\n\nCapacity of non-malleable codes. M Cheraghchi, V Guruswami, Innovations in Theoretical Computer Science, ITCS'14. Princeton, NJ, USAM. Cheraghchi, V. Guruswami, Capacity of non-malleable codes, in Innovations in Theoretical Computer Science, ITCS'14, Princeton, NJ, USA, January 12-14, 2014, pp. 155-168\n\nNon-malleable coding against bit-wise and split-state tampering. M Cheraghchi, V Guruswami, Theory of Cryptography -11th Theory of Cryptography Conference, TCC 2014. San Diego, CA, USAM. Cheraghchi, V. Guruswami, Non-malleable coding against bit-wise and split-state tampering, in Theory of Cryptography -11th Theory of Cryptography Conference, TCC 2014, San Diego, CA, USA, February 24-26, 2014. Proceedings, 2014, pp. 440-464\n\nBlock-wise non-malleable codes. N Chandran, V Goyal, P Mukherjee, O Pandey, J Upadhyay, ICALP. 5514N. Chandran, V. Goyal, P. Mukherjee, O. Pandey, J. Upadhyay, Block-wise non-malleable codes, in ICALP volume 55 of LIPIcs (Schloss Dagstuhl -Leibniz-Zentrum fuer Informatik, 2016), pp. 31:1- 31:14\n\nInformation-theoretic local non-malleable codes and their applications. N Chandran, B Kanukurthi, S Raghuraman, Theory of Cryptography -13th International Conference, TCC 2016-A. Tel Aviv, IsraelProceedings, Part IIN. Chandran, B. Kanukurthi, S. Raghuraman, Information-theoretic local non-malleable codes and their applications, in Theory of Cryptography -13th International Conference, TCC 2016-A, Tel Aviv, Israel, January 10-13, 2016, Proceedings, Part II, 2016, pp. 367-392\n\nNon-malleable codes and extractors for small-depth circuits, and affine functions. E Chattopadhyay, X Li, STOC (ACM, 2017). E. Chattopadhyay, X. Li, Non-malleable codes and extractors for small-depth circuits, and affine func- tions, in STOC (ACM, 2017), pp. 1171-1184\n\nFrom single-bit to multi-bit public-key encryption via non-malleable codes. S Coretti, U Maurer, B Tackmann, D Venturi, IACR Cryptology ePrint Archive. 324S. Coretti, U. Maurer, B. Tackmann, D. Venturi, From single-bit to multi-bit public-key encryption via non-malleable codes. IACR Cryptology ePrint Archive, 2014:324 (2014)\n\nUniversal classes of hash functions. J L Carter, M N Wegman, J. Comput. Syst. Sci. 18J.L. Carter, M.N. Wegman, Universal classes of hash functions. J. Comput. Syst. Sci. 18, 143-154 (1979)\n\nNon-malleable codes against constant split-state tampering. E Chattopadhyay, D Zuckerman, 55th IEEE Annual Symposium on Foundations of Computer Science, FOCS. Philadelphia, PA, USAE. Chattopadhyay, D. Zuckerman, Non-malleable codes against constant split-state tampering, in 55th IEEE Annual Symposium on Foundations of Computer Science, FOCS 2014, Philadelphia, PA, USA, October 18-21, 2014, pp. 306-315\n\nRobust fuzzy extractors and authenticated key agreement from close secrets. Y Dodis, B Kanukurthi, J Katz, L Reyzin, A Smith, IEEE Trans. Inf. Theory. Y. Dodis, B. Kanukurthi, J. Katz, L. Reyzin, A. Smith, Robust fuzzy extractors and authenticated key agreement from close secrets. IEEE Trans. Inf. Theory (2012)\n\nNon-malleable codes from two-source extractors. S Dziembowski, T Kazana, M Obremski, Advances in Cryptology -CRYPTO 2013 -33rd Annual Cryptology Conference. Santa Barbara, CA, USAProceedings, Part IIS. Dziembowski, T. Kazana, M. Obremski.,Non-malleable codes from two-source extractors, in Ad- vances in Cryptology -CRYPTO 2013 -33rd Annual Cryptology Conference, Santa Barbara, CA, USA, August 18-22, 2013. Proceedings, Part II, 2013, pp. 239-257\n\nTight upper and lower bounds for leakage-resilient, locally decodable and updatable non-malleable codes. D Dachman-Soled, M Kulkarni, A Shahverdi, IACR Cryptology ePrint Archive. 15D. Dachman-Soled, M. Kulkarni, A. Shahverdi, Tight upper and lower bounds for leakage-resilient, locally decodable and updatable non-malleable codes. IACR Cryptology ePrint Archive, 2017:15 (2017)\n\nD Dachman-Soled, F.-H Liu, El, H.-S Shi, Zhou, Locally decodable and updatable non-malleable codes and their applications. IACR Cryptology ePrint Archive. 663D. Dachman-Soled, F.-H. Liu, El. Shi, H.-S. Zhou, Locally decodable and updatable non-malleable codes and their applications. IACR Cryptology ePrint Archive, 2014:663 (2014)\n\nFuzzy extractors: How to generate strong keys from biometrics and other noisy data. Y Dodis, R Ostrovsky, L Reyzin, A Smith, arXiv:cs/0602007SIAM J. Comput. 381Y. Dodis, R. Ostrovsky, L. Reyzin, A. Smith, Fuzzy extractors: How to generate strong keys from biometrics and other noisy data. SIAM J. Comput. 38(1), 97-139 (2008). arXiv:cs/0602007\n\nNon-malleable codes. S Dziembowski, K Pietrzak, D Wichs, Innovations in Computer Science -ICS 2010. Beijing, ChinaTsinghua UniversityS. Dziembowski, K. Pietrzak, D. Wichs, Non-malleable codes, in Innovations in Computer Science - ICS 2010, Tsinghua University, Beijing, China, January 5-7, 2010. Proceedings, 2010, pp. 434-452\n\nNon-malleable codes for space-bounded tampering. S Faust, K Host\u00e1kov\u00e1, P Mukherjee, D Venturi, CRYPTO. Springer10402S. Faust, K. Host\u00e1kov\u00e1, P. Mukherjee, D. Venturi, Non-malleable codes for space-bounded tampering, in CRYPTO (2), volume 10402 of Lecture Notes in Computer Science (Springer, 2017), pp. 95-126\n\nContinuous non-malleable codes. S Faust, P Mukherjee, J B Nielsen, D Venturi, Theory of Cryptography -11th Theory of Cryptography Conference, TCC 2014. San Diego, CA, USAS. Faust, P. Mukherjee, J.B. Nielsen, D. Venturi, Continuous non-malleable codes, in Theory of Cryp- tography -11th Theory of Cryptography Conference, TCC 2014, San Diego, CA, USA, February 24-26, 2014. Proceedings, 2014, pp. 465-488\n\nNon-malleable codes against lookahead tampering. D Gupta, H K Maji, M Wang, Progress in Cryptology -INDOCRYPT 2018 -19th International Conference on Cryptology in India. New Delhi, IndiaD. Gupta, H.K. Maji, M. Wang, Non-malleable codes against lookahead tampering, in Progress in Cryptology -INDOCRYPT 2018 -19th International Conference on Cryptology in India, New Delhi, India, December 9-12, 2018, Proceedings, 2018, pp. 307-328\n\nTextbook non-malleable commitments. V Goyal, O Pandey, S Richelson, Proceedings of the 48th Annual ACM SIGACT Symposium on Theory of Computing, STOC 2016. the 48th Annual ACM SIGACT Symposium on Theory of Computing, STOC 2016Cambridge, MA, USAV. Goyal, O. Pandey, S. Richelson, Textbook non-malleable commitments. in Proceedings of the 48th Annual ACM SIGACT Symposium on Theory of Computing, STOC 2016, Cambridge, MA, USA, June 18-21, 2016, pp. 1128-1141\n\nUnbalanced expanders and randomness extractors from Parvaresh-ardy codes. V Guruswami, C Umans, S P Vadhan, IEEE Conference on Computational Complexity. V. Guruswami, C. Umans, S.P. Vadhan, Unbalanced expanders and randomness extractors from Parvaresh-ardy codes, in IEEE Conference on Computational Complexity, 2007, pp. 96-108\n\nConstruction of pseudorandom generator from any one-way function. J H\u00e5stad, R Impagliazzo, L A Levin, M Luby, SIAM J. Comput. 284J. H\u00e5stad, R. Impagliazzo, L.A. Levin, M. Luby, Construction of pseudorandom generator from any one-way function. SIAM J. Comput. 28(4), 1364-1396 (1999)\n\nOn the relation between a-codes and codes correcting independent errors. T Johansson, G Kabatianskii, B J M Smeets, Advances in Cryptology -EUROCRYPT '93, Workshop on the Theory and Application of Cryptographic Techniques. Lofthus, NorwayT. Johansson, G. Kabatianskii, B.J.M. Smeets, On the relation between a-codes and codes correcting independent errors, in Advances in Cryptology -EUROCRYPT '93, Workshop on the Theory and Ap- plication of Cryptographic Techniques, Lofthus, Norway, May 23-27, 1993, Proceedings, 1993, pp. 1-11\n\nTamper detection and continuous non-malleable codes. Z Jafargholi, D Wichs, Theory of Cryptography -12th Theory of Cryptography Conference, TCC 2015. Warsaw, PolandProceedings, Part IZ. Jafargholi, D. Wichs, Tamper detection and continuous non-malleable codes, in Theory of Cryptog- raphy -12th Theory of Cryptography Conference, TCC 2015, Warsaw, Poland, March 23-25, 2015, Proceedings, Part I, 2015, pp. 451-480\n\nNon-malleable randomness encoders and their applications. B Kanukurthi, S L B Obbattu, S Sekar, B. Kanukurthi, S.L.B. Obbattu, S. Sekar, Non-malleable randomness encoders and their applications, in Eurocrypt 2018, April 28-May 3 (2018)\n\nImproved non-malleable extractors, non-malleable codes and independent source extractors. X Li, Symposium on Theory of Computing. Montreal, CanadaX. Li, Improved non-malleable extractors, non-malleable codes and independent source extractors, in Symposium on Theory of Computing, STOC 2017, Montreal, Canada, June 19-23, 2017\n\nNon-malleable extractors and non-malleable codes: Partially optimal constructions. X Li, Cryptology ePrint Archive. 353ReportX. Li, Non-malleable extractors and non-malleable codes: Partially optimal constructions. Cryptology ePrint Archive, Report 2018/353, 2018. https://eprint.iacr.org/2018/353\n\nTamper and leakage resilience in the split-state model, IACR Cryptology ePrint Archive. F.-H Liu, A Lysyanskaya, 297F.-H. Liu, A. Lysyanskaya, Tamper and leakage resilience in the split-state model, IACR Cryptology ePrint Archive, p. 297 (2012)\n\nRandomness is linear in space. N , Nisan D Zuckerman, J. Comput. Syst. Sci. 521N. Nisan D. Zuckerman, Randomness is linear in space. J. Comput. Syst. Sci.52(1), 43-53 (1996)\n\nOn the Bogolyubov-Ruzsa lemma. T Sanders, Anal. 53T. Sanders, On the Bogolyubov-Ruzsa lemma. Anal. PDE5(3), 627-655 (2012)\n\nUniversal hash families and the leftover hash lemma, and applications to cryptography and computing. D R Stinson, J. Combin. Math. Combin. Comput. 42D.R. Stinson, Universal hash families and the leftover hash lemma, and applications to cryptography and computing. J. Combin. Math. Combin. Comput., 42, 3-31 (2002). Available at http://www.cacr.math. uwaterloo.ca/~dstinson/publist.html\n\nFoundations and Trends in Theoretical Computer Science. Now Publishers. S Vadhan, Pseudorandomness , S. Vadhan, Pseudorandomness. Foundations and Trends in Theoretical Computer Science. Now Pub- lishers, 2012. Available at http://people.seas.harvard.edu/~salil/pseudorandomness/\n", "annotations": {"author": "[{\"end\":102,\"start\":64},{\"end\":115,\"start\":103},{\"end\":132,\"start\":116},{\"end\":170,\"start\":133},{\"end\":287,\"start\":171},{\"end\":332,\"start\":288},{\"end\":102,\"start\":64},{\"end\":115,\"start\":103},{\"end\":132,\"start\":116},{\"end\":170,\"start\":133},{\"end\":287,\"start\":171},{\"end\":332,\"start\":288},{\"end\":102,\"start\":64},{\"end\":115,\"start\":103},{\"end\":132,\"start\":116},{\"end\":170,\"start\":133},{\"end\":287,\"start\":171},{\"end\":332,\"start\":288}]", "publisher": null, "author_last_name": "[{\"end\":82,\"start\":72},{\"end\":114,\"start\":107},{\"end\":131,\"start\":124},{\"end\":145,\"start\":140},{\"end\":82,\"start\":72},{\"end\":114,\"start\":107},{\"end\":131,\"start\":124},{\"end\":145,\"start\":140},{\"end\":82,\"start\":72},{\"end\":114,\"start\":107},{\"end\":131,\"start\":124},{\"end\":145,\"start\":140}]", "author_first_name": "[{\"end\":71,\"start\":64},{\"end\":106,\"start\":103},{\"end\":123,\"start\":116},{\"end\":139,\"start\":133},{\"end\":71,\"start\":64},{\"end\":106,\"start\":103},{\"end\":123,\"start\":116},{\"end\":139,\"start\":133},{\"end\":71,\"start\":64},{\"end\":106,\"start\":103},{\"end\":123,\"start\":116},{\"end\":139,\"start\":133}]", "author_affiliation": "[{\"end\":286,\"start\":172},{\"end\":331,\"start\":289},{\"end\":286,\"start\":172},{\"end\":331,\"start\":289},{\"end\":286,\"start\":172},{\"end\":331,\"start\":289}]", "title": "[{\"end\":61,\"start\":1},{\"end\":393,\"start\":333},{\"end\":61,\"start\":1},{\"end\":393,\"start\":333},{\"end\":61,\"start\":1},{\"end\":393,\"start\":333}]", "venue": null, "abstract": "[{\"end\":3391,\"start\":535},{\"end\":3391,\"start\":535},{\"end\":3391,\"start\":535}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b21\"},\"end\":3745,\"start\":3741},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4749,\"start\":4748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5667,\"start\":5663},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5670,\"start\":5667},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":5714,\"start\":5711},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5717,\"start\":5714},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5752,\"start\":5748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6265,\"start\":6261},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6557,\"start\":6553},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6838,\"start\":6834},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7012,\"start\":7011},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":7070,\"start\":7069},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7116,\"start\":7112},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7733,\"start\":7732},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7799,\"start\":7795},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7807,\"start\":7804},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7982,\"start\":7978},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7990,\"start\":7987},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8157,\"start\":8153},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8488,\"start\":8484},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":8530,\"start\":8526},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8533,\"start\":8532},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8571,\"start\":8567},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":8865,\"start\":8862},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":9178,\"start\":9174},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9358,\"start\":9354},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9448,\"start\":9444},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9724,\"start\":9721},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9884,\"start\":9880},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10085,\"start\":10081},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10118,\"start\":10115},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10238,\"start\":10234},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":10490,\"start\":10487},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10599,\"start\":10596},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10800,\"start\":10797},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10829,\"start\":10826},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10986,\"start\":10982},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11346,\"start\":11343},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11860,\"start\":11857},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":12695,\"start\":12692},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13145,\"start\":13142},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13147,\"start\":13145},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":13150,\"start\":13147},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13153,\"start\":13150},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":13172,\"start\":13169},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13190,\"start\":13187},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13193,\"start\":13190},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13216,\"start\":13212},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13246,\"start\":13242},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13317,\"start\":13314},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":13319,\"start\":13317},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13665,\"start\":13662},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":15320,\"start\":15317},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":17651,\"start\":17650},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":21552,\"start\":21548},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":22752,\"start\":22751},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":22898,\"start\":22894},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":23783,\"start\":23782},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23957,\"start\":23956},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24053,\"start\":24050},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":24056,\"start\":24053},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25466,\"start\":25462},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":27579,\"start\":27575},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":27644,\"start\":27640},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":28864,\"start\":28861},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":30154,\"start\":30150},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":30158,\"start\":30156},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":30721,\"start\":30717},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31320,\"start\":31316},{\"end\":31332,\"start\":31320},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31338,\"start\":31334},{\"end\":31348,\"start\":31338},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":31579,\"start\":31575},{\"end\":31591,\"start\":31579},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":31818,\"start\":31814},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31932,\"start\":31928},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":31950,\"start\":31946},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":31968,\"start\":31966},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32128,\"start\":32124},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":32133,\"start\":32131},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":32202,\"start\":32198},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32265,\"start\":32261},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":34270,\"start\":34268},{\"end\":34988,\"start\":34980},{\"end\":35152,\"start\":35144},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":39273,\"start\":39272},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":42906,\"start\":42903},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":42908,\"start\":42906},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":42910,\"start\":42908},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":54850,\"start\":54846},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":55046,\"start\":55042},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57665,\"start\":57661},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57853,\"start\":57849},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":60050,\"start\":60048},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":60162,\"start\":60158},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":60876,\"start\":60872},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":60965,\"start\":60961},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":61394,\"start\":61390},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":61692,\"start\":61690},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":61857,\"start\":61853},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":61860,\"start\":61857},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":61863,\"start\":61860},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":61907,\"start\":61903},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":61910,\"start\":61907},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":61938,\"start\":61935},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":62161,\"start\":62157},{\"end\":62524,\"start\":62521},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":62534,\"start\":62530},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":62558,\"start\":62554},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":63294,\"start\":63290},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":65297,\"start\":65294},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":68422,\"start\":68418},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":3745,\"start\":3741},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4749,\"start\":4748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5667,\"start\":5663},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5670,\"start\":5667},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":5714,\"start\":5711},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5717,\"start\":5714},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5752,\"start\":5748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6265,\"start\":6261},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6557,\"start\":6553},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6838,\"start\":6834},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7012,\"start\":7011},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":7070,\"start\":7069},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7116,\"start\":7112},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7733,\"start\":7732},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7799,\"start\":7795},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7807,\"start\":7804},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7982,\"start\":7978},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7990,\"start\":7987},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8157,\"start\":8153},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8488,\"start\":8484},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":8530,\"start\":8526},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8533,\"start\":8532},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8571,\"start\":8567},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":8865,\"start\":8862},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":9178,\"start\":9174},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9358,\"start\":9354},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9448,\"start\":9444},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9724,\"start\":9721},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9884,\"start\":9880},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10085,\"start\":10081},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10118,\"start\":10115},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10238,\"start\":10234},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":10490,\"start\":10487},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10599,\"start\":10596},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10800,\"start\":10797},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10829,\"start\":10826},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10986,\"start\":10982},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11346,\"start\":11343},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11860,\"start\":11857},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":12695,\"start\":12692},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13145,\"start\":13142},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13147,\"start\":13145},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":13150,\"start\":13147},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13153,\"start\":13150},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":13172,\"start\":13169},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13190,\"start\":13187},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13193,\"start\":13190},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13216,\"start\":13212},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13246,\"start\":13242},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13317,\"start\":13314},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":13319,\"start\":13317},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13665,\"start\":13662},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":15320,\"start\":15317},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":17651,\"start\":17650},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":21552,\"start\":21548},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":22752,\"start\":22751},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":22898,\"start\":22894},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":23783,\"start\":23782},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23957,\"start\":23956},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24053,\"start\":24050},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":24056,\"start\":24053},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25466,\"start\":25462},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":27579,\"start\":27575},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":27644,\"start\":27640},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":28864,\"start\":28861},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":30154,\"start\":30150},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":30158,\"start\":30156},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":30721,\"start\":30717},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31320,\"start\":31316},{\"end\":31332,\"start\":31320},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31338,\"start\":31334},{\"end\":31348,\"start\":31338},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":31579,\"start\":31575},{\"end\":31591,\"start\":31579},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":31818,\"start\":31814},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31932,\"start\":31928},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":31950,\"start\":31946},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":31968,\"start\":31966},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32128,\"start\":32124},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":32133,\"start\":32131},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":32202,\"start\":32198},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32265,\"start\":32261},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":34270,\"start\":34268},{\"end\":34988,\"start\":34980},{\"end\":35152,\"start\":35144},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":39273,\"start\":39272},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":42906,\"start\":42903},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":42908,\"start\":42906},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":42910,\"start\":42908},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":54850,\"start\":54846},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":55046,\"start\":55042},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57665,\"start\":57661},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57853,\"start\":57849},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":60050,\"start\":60048},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":60162,\"start\":60158},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":60876,\"start\":60872},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":60965,\"start\":60961},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":61394,\"start\":61390},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":61692,\"start\":61690},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":61857,\"start\":61853},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":61860,\"start\":61857},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":61863,\"start\":61860},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":61907,\"start\":61903},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":61910,\"start\":61907},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":61938,\"start\":61935},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":62161,\"start\":62157},{\"end\":62524,\"start\":62521},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":62534,\"start\":62530},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":62558,\"start\":62554},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":63294,\"start\":63290},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":65297,\"start\":65294},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":68422,\"start\":68418},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":3745,\"start\":3741},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4749,\"start\":4748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5667,\"start\":5663},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5670,\"start\":5667},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":5714,\"start\":5711},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5717,\"start\":5714},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5752,\"start\":5748},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6265,\"start\":6261},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6557,\"start\":6553},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6838,\"start\":6834},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7012,\"start\":7011},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":7070,\"start\":7069},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7116,\"start\":7112},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7733,\"start\":7732},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7799,\"start\":7795},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7807,\"start\":7804},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7982,\"start\":7978},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7990,\"start\":7987},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8157,\"start\":8153},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8488,\"start\":8484},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":8530,\"start\":8526},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":8533,\"start\":8532},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8571,\"start\":8567},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":8865,\"start\":8862},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":9178,\"start\":9174},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9358,\"start\":9354},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9448,\"start\":9444},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9724,\"start\":9721},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9884,\"start\":9880},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10085,\"start\":10081},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10118,\"start\":10115},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10238,\"start\":10234},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":10490,\"start\":10487},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10599,\"start\":10596},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10800,\"start\":10797},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10829,\"start\":10826},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10986,\"start\":10982},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11346,\"start\":11343},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11860,\"start\":11857},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":12695,\"start\":12692},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13145,\"start\":13142},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13147,\"start\":13145},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":13150,\"start\":13147},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13153,\"start\":13150},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":13172,\"start\":13169},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":13190,\"start\":13187},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13193,\"start\":13190},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":13216,\"start\":13212},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13246,\"start\":13242},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13317,\"start\":13314},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":13319,\"start\":13317},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13665,\"start\":13662},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":15320,\"start\":15317},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":17651,\"start\":17650},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":21552,\"start\":21548},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":22752,\"start\":22751},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":22898,\"start\":22894},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":23783,\"start\":23782},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23957,\"start\":23956},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24053,\"start\":24050},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":24056,\"start\":24053},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25466,\"start\":25462},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":27579,\"start\":27575},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":27644,\"start\":27640},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":28864,\"start\":28861},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":30154,\"start\":30150},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":30158,\"start\":30156},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":30721,\"start\":30717},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31320,\"start\":31316},{\"end\":31332,\"start\":31320},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31338,\"start\":31334},{\"end\":31348,\"start\":31338},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":31579,\"start\":31575},{\"end\":31591,\"start\":31579},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":31818,\"start\":31814},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31932,\"start\":31928},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":31950,\"start\":31946},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":31968,\"start\":31966},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32128,\"start\":32124},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":32133,\"start\":32131},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":32202,\"start\":32198},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":32265,\"start\":32261},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":34270,\"start\":34268},{\"end\":34988,\"start\":34980},{\"end\":35152,\"start\":35144},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":39273,\"start\":39272},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":42906,\"start\":42903},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":42908,\"start\":42906},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":42910,\"start\":42908},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":54850,\"start\":54846},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":55046,\"start\":55042},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57665,\"start\":57661},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":57853,\"start\":57849},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":60050,\"start\":60048},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":60162,\"start\":60158},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":60876,\"start\":60872},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":60965,\"start\":60961},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":61394,\"start\":61390},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":61692,\"start\":61690},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":61857,\"start\":61853},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":61860,\"start\":61857},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":61863,\"start\":61860},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":61907,\"start\":61903},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":61910,\"start\":61907},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":61938,\"start\":61935},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":62161,\"start\":62157},{\"end\":62524,\"start\":62521},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":62534,\"start\":62530},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":62558,\"start\":62554},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":63294,\"start\":63290},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":65297,\"start\":65294},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":68422,\"start\":68418}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":62933,\"start\":62875},{\"attributes\":{\"id\":\"fig_1\"},\"end\":63277,\"start\":62934},{\"attributes\":{\"id\":\"fig_2\"},\"end\":63498,\"start\":63278},{\"attributes\":{\"id\":\"fig_3\"},\"end\":63775,\"start\":63499},{\"attributes\":{\"id\":\"fig_4\"},\"end\":63989,\"start\":63776},{\"attributes\":{\"id\":\"fig_5\"},\"end\":64045,\"start\":63990},{\"attributes\":{\"id\":\"fig_6\"},\"end\":64266,\"start\":64046},{\"attributes\":{\"id\":\"fig_7\"},\"end\":64338,\"start\":64267},{\"attributes\":{\"id\":\"fig_8\"},\"end\":64524,\"start\":64339},{\"attributes\":{\"id\":\"fig_9\"},\"end\":64770,\"start\":64525},{\"attributes\":{\"id\":\"fig_10\"},\"end\":64813,\"start\":64771},{\"attributes\":{\"id\":\"fig_11\"},\"end\":65248,\"start\":64814},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":65464,\"start\":65249},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":65655,\"start\":65465},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":65976,\"start\":65656},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":67231,\"start\":65977},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":67833,\"start\":67232},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":68407,\"start\":67834},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":68995,\"start\":68408},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":69221,\"start\":68996},{\"attributes\":{\"id\":\"fig_0\"},\"end\":62933,\"start\":62875},{\"attributes\":{\"id\":\"fig_1\"},\"end\":63277,\"start\":62934},{\"attributes\":{\"id\":\"fig_2\"},\"end\":63498,\"start\":63278},{\"attributes\":{\"id\":\"fig_3\"},\"end\":63775,\"start\":63499},{\"attributes\":{\"id\":\"fig_4\"},\"end\":63989,\"start\":63776},{\"attributes\":{\"id\":\"fig_5\"},\"end\":64045,\"start\":63990},{\"attributes\":{\"id\":\"fig_6\"},\"end\":64266,\"start\":64046},{\"attributes\":{\"id\":\"fig_7\"},\"end\":64338,\"start\":64267},{\"attributes\":{\"id\":\"fig_8\"},\"end\":64524,\"start\":64339},{\"attributes\":{\"id\":\"fig_9\"},\"end\":64770,\"start\":64525},{\"attributes\":{\"id\":\"fig_10\"},\"end\":64813,\"start\":64771},{\"attributes\":{\"id\":\"fig_11\"},\"end\":65248,\"start\":64814},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":65464,\"start\":65249},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":65655,\"start\":65465},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":65976,\"start\":65656},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":67231,\"start\":65977},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":67833,\"start\":67232},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":68407,\"start\":67834},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":68995,\"start\":68408},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":69221,\"start\":68996},{\"attributes\":{\"id\":\"fig_0\"},\"end\":62933,\"start\":62875},{\"attributes\":{\"id\":\"fig_1\"},\"end\":63277,\"start\":62934},{\"attributes\":{\"id\":\"fig_2\"},\"end\":63498,\"start\":63278},{\"attributes\":{\"id\":\"fig_3\"},\"end\":63775,\"start\":63499},{\"attributes\":{\"id\":\"fig_4\"},\"end\":63989,\"start\":63776},{\"attributes\":{\"id\":\"fig_5\"},\"end\":64045,\"start\":63990},{\"attributes\":{\"id\":\"fig_6\"},\"end\":64266,\"start\":64046},{\"attributes\":{\"id\":\"fig_7\"},\"end\":64338,\"start\":64267},{\"attributes\":{\"id\":\"fig_8\"},\"end\":64524,\"start\":64339},{\"attributes\":{\"id\":\"fig_9\"},\"end\":64770,\"start\":64525},{\"attributes\":{\"id\":\"fig_10\"},\"end\":64813,\"start\":64771},{\"attributes\":{\"id\":\"fig_11\"},\"end\":65248,\"start\":64814},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":65464,\"start\":65249},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":65655,\"start\":65465},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":65976,\"start\":65656},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":67231,\"start\":65977},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":67833,\"start\":67232},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":68407,\"start\":67834},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":68995,\"start\":68408},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":69221,\"start\":68996}]", "paragraph": "[{\"end\":3874,\"start\":3407},{\"end\":4462,\"start\":3876},{\"end\":5480,\"start\":4464},{\"end\":6241,\"start\":5482},{\"end\":6661,\"start\":6258},{\"end\":7333,\"start\":6663},{\"end\":8293,\"start\":7335},{\"end\":9179,\"start\":8295},{\"end\":9823,\"start\":9181},{\"end\":10735,\"start\":9825},{\"end\":10953,\"start\":10737},{\"end\":11260,\"start\":10955},{\"end\":11756,\"start\":11262},{\"end\":13320,\"start\":11758},{\"end\":14957,\"start\":13335},{\"end\":16559,\"start\":14959},{\"end\":16934,\"start\":16561},{\"end\":17753,\"start\":16936},{\"end\":17974,\"start\":17755},{\"end\":18450,\"start\":17976},{\"end\":19153,\"start\":18686},{\"end\":19664,\"start\":19155},{\"end\":20415,\"start\":19666},{\"end\":20922,\"start\":20417},{\"end\":21034,\"start\":20924},{\"end\":21393,\"start\":21036},{\"end\":21758,\"start\":21395},{\"end\":21863,\"start\":21760},{\"end\":21921,\"start\":21865},{\"end\":22072,\"start\":21923},{\"end\":22279,\"start\":22074},{\"end\":22438,\"start\":22281},{\"end\":23074,\"start\":22440},{\"end\":24173,\"start\":23076},{\"end\":24337,\"start\":24175},{\"end\":24638,\"start\":24367},{\"end\":24986,\"start\":24656},{\"end\":25114,\"start\":24988},{\"end\":25469,\"start\":25369},{\"end\":25567,\"start\":25517},{\"end\":25836,\"start\":25712},{\"end\":27349,\"start\":27163},{\"end\":27646,\"start\":27536},{\"end\":27726,\"start\":27664},{\"end\":28051,\"start\":27962},{\"end\":28173,\"start\":28105},{\"end\":28893,\"start\":28737},{\"end\":28978,\"start\":28916},{\"end\":29959,\"start\":29857},{\"end\":30252,\"start\":29979},{\"end\":30691,\"start\":30628},{\"end\":31055,\"start\":30706},{\"end\":32267,\"start\":31220},{\"end\":32411,\"start\":32325},{\"end\":32481,\"start\":32446},{\"end\":33923,\"start\":32518},{\"end\":34079,\"start\":33925},{\"end\":34271,\"start\":34081},{\"end\":35297,\"start\":34284},{\"end\":35419,\"start\":35299},{\"end\":36207,\"start\":35445},{\"end\":36444,\"start\":36364},{\"end\":36469,\"start\":36446},{\"end\":37257,\"start\":36471},{\"end\":37347,\"start\":37276},{\"end\":37756,\"start\":37722},{\"end\":39133,\"start\":38151},{\"end\":39515,\"start\":39135},{\"end\":39684,\"start\":39560},{\"end\":40456,\"start\":40308},{\"end\":40658,\"start\":40635},{\"end\":40794,\"start\":40775},{\"end\":41109,\"start\":40920},{\"end\":41676,\"start\":41276},{\"end\":42757,\"start\":42691},{\"end\":43366,\"start\":42759},{\"end\":43744,\"start\":43574},{\"end\":43890,\"start\":43746},{\"end\":44285,\"start\":43892},{\"end\":46198,\"start\":45246},{\"end\":46285,\"start\":46259},{\"end\":47784,\"start\":47204},{\"end\":47858,\"start\":47786},{\"end\":47932,\"start\":47860},{\"end\":47959,\"start\":47934},{\"end\":48362,\"start\":48178},{\"end\":48576,\"start\":48364},{\"end\":48954,\"start\":48617},{\"end\":49092,\"start\":48988},{\"end\":49376,\"start\":49186},{\"end\":49621,\"start\":49398},{\"end\":49917,\"start\":49799},{\"end\":50063,\"start\":49919},{\"end\":50518,\"start\":50143},{\"end\":50606,\"start\":50558},{\"end\":51192,\"start\":50729},{\"end\":51516,\"start\":51402},{\"end\":51634,\"start\":51596},{\"end\":51953,\"start\":51677},{\"end\":52008,\"start\":51975},{\"end\":52214,\"start\":52156},{\"end\":53258,\"start\":52271},{\"end\":54651,\"start\":54263},{\"end\":54835,\"start\":54653},{\"end\":55017,\"start\":54837},{\"end\":55094,\"start\":55019},{\"end\":56217,\"start\":55117},{\"end\":56270,\"start\":56219},{\"end\":56417,\"start\":56272},{\"end\":56475,\"start\":56419},{\"end\":56739,\"start\":56591},{\"end\":57026,\"start\":56741},{\"end\":57119,\"start\":57028},{\"end\":57222,\"start\":57149},{\"end\":57313,\"start\":57224},{\"end\":57375,\"start\":57344},{\"end\":57432,\"start\":57377},{\"end\":57495,\"start\":57434},{\"end\":57666,\"start\":57578},{\"end\":57743,\"start\":57668},{\"end\":57854,\"start\":57819},{\"end\":57910,\"start\":57856},{\"end\":58012,\"start\":58002},{\"end\":58148,\"start\":58059},{\"end\":58254,\"start\":58157},{\"end\":58576,\"start\":58256},{\"end\":58877,\"start\":58586},{\"end\":59247,\"start\":58912},{\"end\":59531,\"start\":59249},{\"end\":59543,\"start\":59542},{\"end\":59837,\"start\":59665},{\"end\":60220,\"start\":59839},{\"end\":60435,\"start\":60222},{\"end\":60518,\"start\":60437},{\"end\":61288,\"start\":60533},{\"end\":61693,\"start\":61290},{\"end\":62761,\"start\":61695},{\"end\":62809,\"start\":62763},{\"end\":3874,\"start\":3407},{\"end\":4462,\"start\":3876},{\"end\":5480,\"start\":4464},{\"end\":6241,\"start\":5482},{\"end\":6661,\"start\":6258},{\"end\":7333,\"start\":6663},{\"end\":8293,\"start\":7335},{\"end\":9179,\"start\":8295},{\"end\":9823,\"start\":9181},{\"end\":10735,\"start\":9825},{\"end\":10953,\"start\":10737},{\"end\":11260,\"start\":10955},{\"end\":11756,\"start\":11262},{\"end\":13320,\"start\":11758},{\"end\":14957,\"start\":13335},{\"end\":16559,\"start\":14959},{\"end\":16934,\"start\":16561},{\"end\":17753,\"start\":16936},{\"end\":17974,\"start\":17755},{\"end\":18450,\"start\":17976},{\"end\":19153,\"start\":18686},{\"end\":19664,\"start\":19155},{\"end\":20415,\"start\":19666},{\"end\":20922,\"start\":20417},{\"end\":21034,\"start\":20924},{\"end\":21393,\"start\":21036},{\"end\":21758,\"start\":21395},{\"end\":21863,\"start\":21760},{\"end\":21921,\"start\":21865},{\"end\":22072,\"start\":21923},{\"end\":22279,\"start\":22074},{\"end\":22438,\"start\":22281},{\"end\":23074,\"start\":22440},{\"end\":24173,\"start\":23076},{\"end\":24337,\"start\":24175},{\"end\":24638,\"start\":24367},{\"end\":24986,\"start\":24656},{\"end\":25114,\"start\":24988},{\"end\":25469,\"start\":25369},{\"end\":25567,\"start\":25517},{\"end\":25836,\"start\":25712},{\"end\":27349,\"start\":27163},{\"end\":27646,\"start\":27536},{\"end\":27726,\"start\":27664},{\"end\":28051,\"start\":27962},{\"end\":28173,\"start\":28105},{\"end\":28893,\"start\":28737},{\"end\":28978,\"start\":28916},{\"end\":29959,\"start\":29857},{\"end\":30252,\"start\":29979},{\"end\":30691,\"start\":30628},{\"end\":31055,\"start\":30706},{\"end\":32267,\"start\":31220},{\"end\":32411,\"start\":32325},{\"end\":32481,\"start\":32446},{\"end\":33923,\"start\":32518},{\"end\":34079,\"start\":33925},{\"end\":34271,\"start\":34081},{\"end\":35297,\"start\":34284},{\"end\":35419,\"start\":35299},{\"end\":36207,\"start\":35445},{\"end\":36444,\"start\":36364},{\"end\":36469,\"start\":36446},{\"end\":37257,\"start\":36471},{\"end\":37347,\"start\":37276},{\"end\":37756,\"start\":37722},{\"end\":39133,\"start\":38151},{\"end\":39515,\"start\":39135},{\"end\":39684,\"start\":39560},{\"end\":40456,\"start\":40308},{\"end\":40658,\"start\":40635},{\"end\":40794,\"start\":40775},{\"end\":41109,\"start\":40920},{\"end\":41676,\"start\":41276},{\"end\":42757,\"start\":42691},{\"end\":43366,\"start\":42759},{\"end\":43744,\"start\":43574},{\"end\":43890,\"start\":43746},{\"end\":44285,\"start\":43892},{\"end\":46198,\"start\":45246},{\"end\":46285,\"start\":46259},{\"end\":47784,\"start\":47204},{\"end\":47858,\"start\":47786},{\"end\":47932,\"start\":47860},{\"end\":47959,\"start\":47934},{\"end\":48362,\"start\":48178},{\"end\":48576,\"start\":48364},{\"end\":48954,\"start\":48617},{\"end\":49092,\"start\":48988},{\"end\":49376,\"start\":49186},{\"end\":49621,\"start\":49398},{\"end\":49917,\"start\":49799},{\"end\":50063,\"start\":49919},{\"end\":50518,\"start\":50143},{\"end\":50606,\"start\":50558},{\"end\":51192,\"start\":50729},{\"end\":51516,\"start\":51402},{\"end\":51634,\"start\":51596},{\"end\":51953,\"start\":51677},{\"end\":52008,\"start\":51975},{\"end\":52214,\"start\":52156},{\"end\":53258,\"start\":52271},{\"end\":54651,\"start\":54263},{\"end\":54835,\"start\":54653},{\"end\":55017,\"start\":54837},{\"end\":55094,\"start\":55019},{\"end\":56217,\"start\":55117},{\"end\":56270,\"start\":56219},{\"end\":56417,\"start\":56272},{\"end\":56475,\"start\":56419},{\"end\":56739,\"start\":56591},{\"end\":57026,\"start\":56741},{\"end\":57119,\"start\":57028},{\"end\":57222,\"start\":57149},{\"end\":57313,\"start\":57224},{\"end\":57375,\"start\":57344},{\"end\":57432,\"start\":57377},{\"end\":57495,\"start\":57434},{\"end\":57666,\"start\":57578},{\"end\":57743,\"start\":57668},{\"end\":57854,\"start\":57819},{\"end\":57910,\"start\":57856},{\"end\":58012,\"start\":58002},{\"end\":58148,\"start\":58059},{\"end\":58254,\"start\":58157},{\"end\":58576,\"start\":58256},{\"end\":58877,\"start\":58586},{\"end\":59247,\"start\":58912},{\"end\":59531,\"start\":59249},{\"end\":59543,\"start\":59542},{\"end\":59837,\"start\":59665},{\"end\":60220,\"start\":59839},{\"end\":60435,\"start\":60222},{\"end\":60518,\"start\":60437},{\"end\":61288,\"start\":60533},{\"end\":61693,\"start\":61290},{\"end\":62761,\"start\":61695},{\"end\":62809,\"start\":62763},{\"end\":3874,\"start\":3407},{\"end\":4462,\"start\":3876},{\"end\":5480,\"start\":4464},{\"end\":6241,\"start\":5482},{\"end\":6661,\"start\":6258},{\"end\":7333,\"start\":6663},{\"end\":8293,\"start\":7335},{\"end\":9179,\"start\":8295},{\"end\":9823,\"start\":9181},{\"end\":10735,\"start\":9825},{\"end\":10953,\"start\":10737},{\"end\":11260,\"start\":10955},{\"end\":11756,\"start\":11262},{\"end\":13320,\"start\":11758},{\"end\":14957,\"start\":13335},{\"end\":16559,\"start\":14959},{\"end\":16934,\"start\":16561},{\"end\":17753,\"start\":16936},{\"end\":17974,\"start\":17755},{\"end\":18450,\"start\":17976},{\"end\":19153,\"start\":18686},{\"end\":19664,\"start\":19155},{\"end\":20415,\"start\":19666},{\"end\":20922,\"start\":20417},{\"end\":21034,\"start\":20924},{\"end\":21393,\"start\":21036},{\"end\":21758,\"start\":21395},{\"end\":21863,\"start\":21760},{\"end\":21921,\"start\":21865},{\"end\":22072,\"start\":21923},{\"end\":22279,\"start\":22074},{\"end\":22438,\"start\":22281},{\"end\":23074,\"start\":22440},{\"end\":24173,\"start\":23076},{\"end\":24337,\"start\":24175},{\"end\":24638,\"start\":24367},{\"end\":24986,\"start\":24656},{\"end\":25114,\"start\":24988},{\"end\":25469,\"start\":25369},{\"end\":25567,\"start\":25517},{\"end\":25836,\"start\":25712},{\"end\":27349,\"start\":27163},{\"end\":27646,\"start\":27536},{\"end\":27726,\"start\":27664},{\"end\":28051,\"start\":27962},{\"end\":28173,\"start\":28105},{\"end\":28893,\"start\":28737},{\"end\":28978,\"start\":28916},{\"end\":29959,\"start\":29857},{\"end\":30252,\"start\":29979},{\"end\":30691,\"start\":30628},{\"end\":31055,\"start\":30706},{\"end\":32267,\"start\":31220},{\"end\":32411,\"start\":32325},{\"end\":32481,\"start\":32446},{\"end\":33923,\"start\":32518},{\"end\":34079,\"start\":33925},{\"end\":34271,\"start\":34081},{\"end\":35297,\"start\":34284},{\"end\":35419,\"start\":35299},{\"end\":36207,\"start\":35445},{\"end\":36444,\"start\":36364},{\"end\":36469,\"start\":36446},{\"end\":37257,\"start\":36471},{\"end\":37347,\"start\":37276},{\"end\":37756,\"start\":37722},{\"end\":39133,\"start\":38151},{\"end\":39515,\"start\":39135},{\"end\":39684,\"start\":39560},{\"end\":40456,\"start\":40308},{\"end\":40658,\"start\":40635},{\"end\":40794,\"start\":40775},{\"end\":41109,\"start\":40920},{\"end\":41676,\"start\":41276},{\"end\":42757,\"start\":42691},{\"end\":43366,\"start\":42759},{\"end\":43744,\"start\":43574},{\"end\":43890,\"start\":43746},{\"end\":44285,\"start\":43892},{\"end\":46198,\"start\":45246},{\"end\":46285,\"start\":46259},{\"end\":47784,\"start\":47204},{\"end\":47858,\"start\":47786},{\"end\":47932,\"start\":47860},{\"end\":47959,\"start\":47934},{\"end\":48362,\"start\":48178},{\"end\":48576,\"start\":48364},{\"end\":48954,\"start\":48617},{\"end\":49092,\"start\":48988},{\"end\":49376,\"start\":49186},{\"end\":49621,\"start\":49398},{\"end\":49917,\"start\":49799},{\"end\":50063,\"start\":49919},{\"end\":50518,\"start\":50143},{\"end\":50606,\"start\":50558},{\"end\":51192,\"start\":50729},{\"end\":51516,\"start\":51402},{\"end\":51634,\"start\":51596},{\"end\":51953,\"start\":51677},{\"end\":52008,\"start\":51975},{\"end\":52214,\"start\":52156},{\"end\":53258,\"start\":52271},{\"end\":54651,\"start\":54263},{\"end\":54835,\"start\":54653},{\"end\":55017,\"start\":54837},{\"end\":55094,\"start\":55019},{\"end\":56217,\"start\":55117},{\"end\":56270,\"start\":56219},{\"end\":56417,\"start\":56272},{\"end\":56475,\"start\":56419},{\"end\":56739,\"start\":56591},{\"end\":57026,\"start\":56741},{\"end\":57119,\"start\":57028},{\"end\":57222,\"start\":57149},{\"end\":57313,\"start\":57224},{\"end\":57375,\"start\":57344},{\"end\":57432,\"start\":57377},{\"end\":57495,\"start\":57434},{\"end\":57666,\"start\":57578},{\"end\":57743,\"start\":57668},{\"end\":57854,\"start\":57819},{\"end\":57910,\"start\":57856},{\"end\":58012,\"start\":58002},{\"end\":58148,\"start\":58059},{\"end\":58254,\"start\":58157},{\"end\":58576,\"start\":58256},{\"end\":58877,\"start\":58586},{\"end\":59247,\"start\":58912},{\"end\":59531,\"start\":59249},{\"end\":59543,\"start\":59542},{\"end\":59837,\"start\":59665},{\"end\":60220,\"start\":59839},{\"end\":60435,\"start\":60222},{\"end\":60518,\"start\":60437},{\"end\":61288,\"start\":60533},{\"end\":61693,\"start\":61290},{\"end\":62761,\"start\":61695},{\"end\":62809,\"start\":62763}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":18685,\"start\":18451},{\"attributes\":{\"id\":\"formula_1\"},\"end\":25368,\"start\":25115},{\"attributes\":{\"id\":\"formula_2\"},\"end\":25516,\"start\":25470},{\"attributes\":{\"id\":\"formula_3\"},\"end\":25711,\"start\":25568},{\"attributes\":{\"id\":\"formula_4\"},\"end\":26342,\"start\":25837},{\"attributes\":{\"id\":\"formula_5\"},\"end\":26421,\"start\":26382},{\"attributes\":{\"id\":\"formula_6\"},\"end\":27162,\"start\":26477},{\"attributes\":{\"id\":\"formula_7\"},\"end\":27521,\"start\":27350},{\"attributes\":{\"id\":\"formula_8\"},\"end\":27961,\"start\":27727},{\"attributes\":{\"id\":\"formula_9\"},\"end\":28104,\"start\":28052},{\"attributes\":{\"id\":\"formula_10\"},\"end\":28736,\"start\":28174},{\"attributes\":{\"id\":\"formula_11\"},\"end\":29856,\"start\":28979},{\"attributes\":{\"id\":\"formula_12\"},\"end\":30627,\"start\":30293},{\"attributes\":{\"id\":\"formula_13\"},\"end\":31108,\"start\":31056},{\"attributes\":{\"id\":\"formula_14\"},\"end\":31219,\"start\":31108},{\"attributes\":{\"id\":\"formula_15\"},\"end\":32445,\"start\":32412},{\"attributes\":{\"id\":\"formula_16\"},\"end\":32502,\"start\":32482},{\"attributes\":{\"id\":\"formula_17\"},\"end\":36363,\"start\":36208},{\"attributes\":{\"id\":\"formula_18\"},\"end\":37721,\"start\":37348},{\"attributes\":{\"id\":\"formula_19\"},\"end\":38150,\"start\":37757},{\"attributes\":{\"id\":\"formula_20\"},\"end\":39559,\"start\":39516},{\"attributes\":{\"id\":\"formula_21\"},\"end\":39991,\"start\":39685},{\"attributes\":{\"id\":\"formula_22\"},\"end\":40307,\"start\":39991},{\"attributes\":{\"id\":\"formula_23\"},\"end\":40634,\"start\":40457},{\"attributes\":{\"id\":\"formula_24\"},\"end\":40774,\"start\":40659},{\"attributes\":{\"id\":\"formula_25\"},\"end\":40919,\"start\":40795},{\"attributes\":{\"id\":\"formula_26\"},\"end\":41275,\"start\":41110},{\"attributes\":{\"id\":\"formula_27\"},\"end\":41861,\"start\":41677},{\"attributes\":{\"id\":\"formula_28\"},\"end\":42110,\"start\":41861},{\"attributes\":{\"id\":\"formula_29\"},\"end\":42690,\"start\":42110},{\"attributes\":{\"id\":\"formula_30\"},\"end\":43573,\"start\":43367},{\"attributes\":{\"id\":\"formula_31\"},\"end\":44572,\"start\":44286},{\"attributes\":{\"id\":\"formula_32\"},\"end\":45202,\"start\":44572},{\"attributes\":{\"id\":\"formula_33\"},\"end\":45245,\"start\":45202},{\"attributes\":{\"id\":\"formula_34\"},\"end\":46258,\"start\":46211},{\"attributes\":{\"id\":\"formula_35\"},\"end\":47203,\"start\":46286},{\"attributes\":{\"id\":\"formula_36\"},\"end\":48177,\"start\":47960},{\"attributes\":{\"id\":\"formula_37\"},\"end\":48616,\"start\":48577},{\"attributes\":{\"id\":\"formula_38\"},\"end\":48987,\"start\":48955},{\"attributes\":{\"id\":\"formula_39\"},\"end\":49185,\"start\":49093},{\"attributes\":{\"id\":\"formula_40\"},\"end\":49397,\"start\":49377},{\"attributes\":{\"id\":\"formula_41\"},\"end\":49798,\"start\":49622},{\"attributes\":{\"id\":\"formula_42\"},\"end\":50142,\"start\":50064},{\"attributes\":{\"id\":\"formula_43\"},\"end\":50557,\"start\":50519},{\"attributes\":{\"id\":\"formula_44\"},\"end\":50728,\"start\":50607},{\"attributes\":{\"id\":\"formula_45\"},\"end\":51401,\"start\":51193},{\"attributes\":{\"id\":\"formula_46\"},\"end\":51595,\"start\":51517},{\"attributes\":{\"id\":\"formula_47\"},\"end\":51676,\"start\":51635},{\"attributes\":{\"id\":\"formula_48\"},\"end\":51974,\"start\":51954},{\"attributes\":{\"id\":\"formula_49\"},\"end\":52155,\"start\":52009},{\"attributes\":{\"id\":\"formula_50\"},\"end\":52270,\"start\":52215},{\"attributes\":{\"id\":\"formula_51\"},\"end\":54146,\"start\":53259},{\"attributes\":{\"id\":\"formula_52\"},\"end\":54236,\"start\":54146},{\"attributes\":{\"id\":\"formula_53\"},\"end\":56590,\"start\":56476},{\"attributes\":{\"id\":\"formula_54\"},\"end\":57148,\"start\":57120},{\"attributes\":{\"id\":\"formula_55\"},\"end\":57343,\"start\":57314},{\"attributes\":{\"id\":\"formula_56\"},\"end\":57577,\"start\":57496},{\"attributes\":{\"id\":\"formula_57\"},\"end\":57818,\"start\":57744},{\"attributes\":{\"id\":\"formula_58\"},\"end\":58001,\"start\":57911},{\"attributes\":{\"id\":\"formula_59\"},\"end\":58058,\"start\":58013},{\"attributes\":{\"id\":\"formula_60\"},\"end\":59664,\"start\":59544},{\"attributes\":{\"id\":\"formula_62\"},\"end\":62875,\"start\":62810},{\"attributes\":{\"id\":\"formula_0\"},\"end\":18685,\"start\":18451},{\"attributes\":{\"id\":\"formula_1\"},\"end\":25368,\"start\":25115},{\"attributes\":{\"id\":\"formula_2\"},\"end\":25516,\"start\":25470},{\"attributes\":{\"id\":\"formula_3\"},\"end\":25711,\"start\":25568},{\"attributes\":{\"id\":\"formula_4\"},\"end\":26342,\"start\":25837},{\"attributes\":{\"id\":\"formula_5\"},\"end\":26421,\"start\":26382},{\"attributes\":{\"id\":\"formula_6\"},\"end\":27162,\"start\":26477},{\"attributes\":{\"id\":\"formula_7\"},\"end\":27521,\"start\":27350},{\"attributes\":{\"id\":\"formula_8\"},\"end\":27961,\"start\":27727},{\"attributes\":{\"id\":\"formula_9\"},\"end\":28104,\"start\":28052},{\"attributes\":{\"id\":\"formula_10\"},\"end\":28736,\"start\":28174},{\"attributes\":{\"id\":\"formula_11\"},\"end\":29856,\"start\":28979},{\"attributes\":{\"id\":\"formula_12\"},\"end\":30627,\"start\":30293},{\"attributes\":{\"id\":\"formula_13\"},\"end\":31108,\"start\":31056},{\"attributes\":{\"id\":\"formula_14\"},\"end\":31219,\"start\":31108},{\"attributes\":{\"id\":\"formula_15\"},\"end\":32445,\"start\":32412},{\"attributes\":{\"id\":\"formula_16\"},\"end\":32502,\"start\":32482},{\"attributes\":{\"id\":\"formula_17\"},\"end\":36363,\"start\":36208},{\"attributes\":{\"id\":\"formula_18\"},\"end\":37721,\"start\":37348},{\"attributes\":{\"id\":\"formula_19\"},\"end\":38150,\"start\":37757},{\"attributes\":{\"id\":\"formula_20\"},\"end\":39559,\"start\":39516},{\"attributes\":{\"id\":\"formula_21\"},\"end\":39991,\"start\":39685},{\"attributes\":{\"id\":\"formula_22\"},\"end\":40307,\"start\":39991},{\"attributes\":{\"id\":\"formula_23\"},\"end\":40634,\"start\":40457},{\"attributes\":{\"id\":\"formula_24\"},\"end\":40774,\"start\":40659},{\"attributes\":{\"id\":\"formula_25\"},\"end\":40919,\"start\":40795},{\"attributes\":{\"id\":\"formula_26\"},\"end\":41275,\"start\":41110},{\"attributes\":{\"id\":\"formula_27\"},\"end\":41861,\"start\":41677},{\"attributes\":{\"id\":\"formula_28\"},\"end\":42110,\"start\":41861},{\"attributes\":{\"id\":\"formula_29\"},\"end\":42690,\"start\":42110},{\"attributes\":{\"id\":\"formula_30\"},\"end\":43573,\"start\":43367},{\"attributes\":{\"id\":\"formula_31\"},\"end\":44572,\"start\":44286},{\"attributes\":{\"id\":\"formula_32\"},\"end\":45202,\"start\":44572},{\"attributes\":{\"id\":\"formula_33\"},\"end\":45245,\"start\":45202},{\"attributes\":{\"id\":\"formula_34\"},\"end\":46258,\"start\":46211},{\"attributes\":{\"id\":\"formula_35\"},\"end\":47203,\"start\":46286},{\"attributes\":{\"id\":\"formula_36\"},\"end\":48177,\"start\":47960},{\"attributes\":{\"id\":\"formula_37\"},\"end\":48616,\"start\":48577},{\"attributes\":{\"id\":\"formula_38\"},\"end\":48987,\"start\":48955},{\"attributes\":{\"id\":\"formula_39\"},\"end\":49185,\"start\":49093},{\"attributes\":{\"id\":\"formula_40\"},\"end\":49397,\"start\":49377},{\"attributes\":{\"id\":\"formula_41\"},\"end\":49798,\"start\":49622},{\"attributes\":{\"id\":\"formula_42\"},\"end\":50142,\"start\":50064},{\"attributes\":{\"id\":\"formula_43\"},\"end\":50557,\"start\":50519},{\"attributes\":{\"id\":\"formula_44\"},\"end\":50728,\"start\":50607},{\"attributes\":{\"id\":\"formula_45\"},\"end\":51401,\"start\":51193},{\"attributes\":{\"id\":\"formula_46\"},\"end\":51595,\"start\":51517},{\"attributes\":{\"id\":\"formula_47\"},\"end\":51676,\"start\":51635},{\"attributes\":{\"id\":\"formula_48\"},\"end\":51974,\"start\":51954},{\"attributes\":{\"id\":\"formula_49\"},\"end\":52155,\"start\":52009},{\"attributes\":{\"id\":\"formula_50\"},\"end\":52270,\"start\":52215},{\"attributes\":{\"id\":\"formula_51\"},\"end\":54146,\"start\":53259},{\"attributes\":{\"id\":\"formula_52\"},\"end\":54236,\"start\":54146},{\"attributes\":{\"id\":\"formula_53\"},\"end\":56590,\"start\":56476},{\"attributes\":{\"id\":\"formula_54\"},\"end\":57148,\"start\":57120},{\"attributes\":{\"id\":\"formula_55\"},\"end\":57343,\"start\":57314},{\"attributes\":{\"id\":\"formula_56\"},\"end\":57577,\"start\":57496},{\"attributes\":{\"id\":\"formula_57\"},\"end\":57818,\"start\":57744},{\"attributes\":{\"id\":\"formula_58\"},\"end\":58001,\"start\":57911},{\"attributes\":{\"id\":\"formula_59\"},\"end\":58058,\"start\":58013},{\"attributes\":{\"id\":\"formula_60\"},\"end\":59664,\"start\":59544},{\"attributes\":{\"id\":\"formula_62\"},\"end\":62875,\"start\":62810},{\"attributes\":{\"id\":\"formula_0\"},\"end\":18685,\"start\":18451},{\"attributes\":{\"id\":\"formula_1\"},\"end\":25368,\"start\":25115},{\"attributes\":{\"id\":\"formula_2\"},\"end\":25516,\"start\":25470},{\"attributes\":{\"id\":\"formula_3\"},\"end\":25711,\"start\":25568},{\"attributes\":{\"id\":\"formula_4\"},\"end\":26342,\"start\":25837},{\"attributes\":{\"id\":\"formula_5\"},\"end\":26421,\"start\":26382},{\"attributes\":{\"id\":\"formula_6\"},\"end\":27162,\"start\":26477},{\"attributes\":{\"id\":\"formula_7\"},\"end\":27521,\"start\":27350},{\"attributes\":{\"id\":\"formula_8\"},\"end\":27961,\"start\":27727},{\"attributes\":{\"id\":\"formula_9\"},\"end\":28104,\"start\":28052},{\"attributes\":{\"id\":\"formula_10\"},\"end\":28736,\"start\":28174},{\"attributes\":{\"id\":\"formula_11\"},\"end\":29856,\"start\":28979},{\"attributes\":{\"id\":\"formula_12\"},\"end\":30627,\"start\":30293},{\"attributes\":{\"id\":\"formula_13\"},\"end\":31108,\"start\":31056},{\"attributes\":{\"id\":\"formula_14\"},\"end\":31219,\"start\":31108},{\"attributes\":{\"id\":\"formula_15\"},\"end\":32445,\"start\":32412},{\"attributes\":{\"id\":\"formula_16\"},\"end\":32502,\"start\":32482},{\"attributes\":{\"id\":\"formula_17\"},\"end\":36363,\"start\":36208},{\"attributes\":{\"id\":\"formula_18\"},\"end\":37721,\"start\":37348},{\"attributes\":{\"id\":\"formula_19\"},\"end\":38150,\"start\":37757},{\"attributes\":{\"id\":\"formula_20\"},\"end\":39559,\"start\":39516},{\"attributes\":{\"id\":\"formula_21\"},\"end\":39991,\"start\":39685},{\"attributes\":{\"id\":\"formula_22\"},\"end\":40307,\"start\":39991},{\"attributes\":{\"id\":\"formula_23\"},\"end\":40634,\"start\":40457},{\"attributes\":{\"id\":\"formula_24\"},\"end\":40774,\"start\":40659},{\"attributes\":{\"id\":\"formula_25\"},\"end\":40919,\"start\":40795},{\"attributes\":{\"id\":\"formula_26\"},\"end\":41275,\"start\":41110},{\"attributes\":{\"id\":\"formula_27\"},\"end\":41861,\"start\":41677},{\"attributes\":{\"id\":\"formula_28\"},\"end\":42110,\"start\":41861},{\"attributes\":{\"id\":\"formula_29\"},\"end\":42690,\"start\":42110},{\"attributes\":{\"id\":\"formula_30\"},\"end\":43573,\"start\":43367},{\"attributes\":{\"id\":\"formula_31\"},\"end\":44572,\"start\":44286},{\"attributes\":{\"id\":\"formula_32\"},\"end\":45202,\"start\":44572},{\"attributes\":{\"id\":\"formula_33\"},\"end\":45245,\"start\":45202},{\"attributes\":{\"id\":\"formula_34\"},\"end\":46258,\"start\":46211},{\"attributes\":{\"id\":\"formula_35\"},\"end\":47203,\"start\":46286},{\"attributes\":{\"id\":\"formula_36\"},\"end\":48177,\"start\":47960},{\"attributes\":{\"id\":\"formula_37\"},\"end\":48616,\"start\":48577},{\"attributes\":{\"id\":\"formula_38\"},\"end\":48987,\"start\":48955},{\"attributes\":{\"id\":\"formula_39\"},\"end\":49185,\"start\":49093},{\"attributes\":{\"id\":\"formula_40\"},\"end\":49397,\"start\":49377},{\"attributes\":{\"id\":\"formula_41\"},\"end\":49798,\"start\":49622},{\"attributes\":{\"id\":\"formula_42\"},\"end\":50142,\"start\":50064},{\"attributes\":{\"id\":\"formula_43\"},\"end\":50557,\"start\":50519},{\"attributes\":{\"id\":\"formula_44\"},\"end\":50728,\"start\":50607},{\"attributes\":{\"id\":\"formula_45\"},\"end\":51401,\"start\":51193},{\"attributes\":{\"id\":\"formula_46\"},\"end\":51595,\"start\":51517},{\"attributes\":{\"id\":\"formula_47\"},\"end\":51676,\"start\":51635},{\"attributes\":{\"id\":\"formula_48\"},\"end\":51974,\"start\":51954},{\"attributes\":{\"id\":\"formula_49\"},\"end\":52155,\"start\":52009},{\"attributes\":{\"id\":\"formula_50\"},\"end\":52270,\"start\":52215},{\"attributes\":{\"id\":\"formula_51\"},\"end\":54146,\"start\":53259},{\"attributes\":{\"id\":\"formula_52\"},\"end\":54236,\"start\":54146},{\"attributes\":{\"id\":\"formula_53\"},\"end\":56590,\"start\":56476},{\"attributes\":{\"id\":\"formula_54\"},\"end\":57148,\"start\":57120},{\"attributes\":{\"id\":\"formula_55\"},\"end\":57343,\"start\":57314},{\"attributes\":{\"id\":\"formula_56\"},\"end\":57577,\"start\":57496},{\"attributes\":{\"id\":\"formula_57\"},\"end\":57818,\"start\":57744},{\"attributes\":{\"id\":\"formula_58\"},\"end\":58001,\"start\":57911},{\"attributes\":{\"id\":\"formula_59\"},\"end\":58058,\"start\":58013},{\"attributes\":{\"id\":\"formula_60\"},\"end\":59664,\"start\":59544},{\"attributes\":{\"id\":\"formula_62\"},\"end\":62875,\"start\":62810}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":3405,\"start\":3393},{\"attributes\":{\"n\":\"1.1.\"},\"end\":6256,\"start\":6244},{\"attributes\":{\"n\":\"1.2.\"},\"end\":13333,\"start\":13323},{\"attributes\":{\"n\":\"1.3.\"},\"end\":24365,\"start\":24340},{\"attributes\":{\"n\":\"2.\"},\"end\":24654,\"start\":24641},{\"end\":26381,\"start\":26344},{\"end\":26476,\"start\":26423},{\"attributes\":{\"n\":\"2.1.\"},\"end\":27534,\"start\":27523},{\"end\":27662,\"start\":27649},{\"end\":28914,\"start\":28896},{\"attributes\":{\"n\":\"3.\"},\"end\":29977,\"start\":29962},{\"attributes\":{\"n\":\"3.1.\"},\"end\":30292,\"start\":30255},{\"attributes\":{\"n\":\"3.2.\"},\"end\":30704,\"start\":30694},{\"attributes\":{\"n\":\"3.3.\"},\"end\":32323,\"start\":32270},{\"attributes\":{\"n\":\"4.\"},\"end\":32516,\"start\":32504},{\"attributes\":{\"n\":\"4.1.\"},\"end\":34282,\"start\":34274},{\"attributes\":{\"n\":\"4.2.\"},\"end\":35443,\"start\":35422},{\"attributes\":{\"n\":\"4.3.\"},\"end\":37274,\"start\":37260},{\"end\":46210,\"start\":46201},{\"attributes\":{\"n\":\"4.4.\"},\"end\":54261,\"start\":54238},{\"attributes\":{\"n\":\"4.5.\"},\"end\":55115,\"start\":55097},{\"attributes\":{\"n\":\"4.6.\"},\"end\":58155,\"start\":58151},{\"attributes\":{\"n\":\"4.7.\"},\"end\":58584,\"start\":58579},{\"attributes\":{\"n\":\"5.\"},\"end\":58910,\"start\":58880},{\"end\":59540,\"start\":59534},{\"end\":60531,\"start\":60521},{\"end\":62884,\"start\":62876},{\"end\":62949,\"start\":62935},{\"end\":63288,\"start\":63279},{\"end\":63524,\"start\":63500},{\"end\":63782,\"start\":63777},{\"end\":64273,\"start\":64268},{\"end\":64345,\"start\":64340},{\"end\":64539,\"start\":64526},{\"end\":64824,\"start\":64815},{\"attributes\":{\"n\":\"1.\"},\"end\":3405,\"start\":3393},{\"attributes\":{\"n\":\"1.1.\"},\"end\":6256,\"start\":6244},{\"attributes\":{\"n\":\"1.2.\"},\"end\":13333,\"start\":13323},{\"attributes\":{\"n\":\"1.3.\"},\"end\":24365,\"start\":24340},{\"attributes\":{\"n\":\"2.\"},\"end\":24654,\"start\":24641},{\"end\":26381,\"start\":26344},{\"end\":26476,\"start\":26423},{\"attributes\":{\"n\":\"2.1.\"},\"end\":27534,\"start\":27523},{\"end\":27662,\"start\":27649},{\"end\":28914,\"start\":28896},{\"attributes\":{\"n\":\"3.\"},\"end\":29977,\"start\":29962},{\"attributes\":{\"n\":\"3.1.\"},\"end\":30292,\"start\":30255},{\"attributes\":{\"n\":\"3.2.\"},\"end\":30704,\"start\":30694},{\"attributes\":{\"n\":\"3.3.\"},\"end\":32323,\"start\":32270},{\"attributes\":{\"n\":\"4.\"},\"end\":32516,\"start\":32504},{\"attributes\":{\"n\":\"4.1.\"},\"end\":34282,\"start\":34274},{\"attributes\":{\"n\":\"4.2.\"},\"end\":35443,\"start\":35422},{\"attributes\":{\"n\":\"4.3.\"},\"end\":37274,\"start\":37260},{\"end\":46210,\"start\":46201},{\"attributes\":{\"n\":\"4.4.\"},\"end\":54261,\"start\":54238},{\"attributes\":{\"n\":\"4.5.\"},\"end\":55115,\"start\":55097},{\"attributes\":{\"n\":\"4.6.\"},\"end\":58155,\"start\":58151},{\"attributes\":{\"n\":\"4.7.\"},\"end\":58584,\"start\":58579},{\"attributes\":{\"n\":\"5.\"},\"end\":58910,\"start\":58880},{\"end\":59540,\"start\":59534},{\"end\":60531,\"start\":60521},{\"end\":62884,\"start\":62876},{\"end\":62949,\"start\":62935},{\"end\":63288,\"start\":63279},{\"end\":63524,\"start\":63500},{\"end\":63782,\"start\":63777},{\"end\":64273,\"start\":64268},{\"end\":64345,\"start\":64340},{\"end\":64539,\"start\":64526},{\"end\":64824,\"start\":64815},{\"attributes\":{\"n\":\"1.\"},\"end\":3405,\"start\":3393},{\"attributes\":{\"n\":\"1.1.\"},\"end\":6256,\"start\":6244},{\"attributes\":{\"n\":\"1.2.\"},\"end\":13333,\"start\":13323},{\"attributes\":{\"n\":\"1.3.\"},\"end\":24365,\"start\":24340},{\"attributes\":{\"n\":\"2.\"},\"end\":24654,\"start\":24641},{\"end\":26381,\"start\":26344},{\"end\":26476,\"start\":26423},{\"attributes\":{\"n\":\"2.1.\"},\"end\":27534,\"start\":27523},{\"end\":27662,\"start\":27649},{\"end\":28914,\"start\":28896},{\"attributes\":{\"n\":\"3.\"},\"end\":29977,\"start\":29962},{\"attributes\":{\"n\":\"3.1.\"},\"end\":30292,\"start\":30255},{\"attributes\":{\"n\":\"3.2.\"},\"end\":30704,\"start\":30694},{\"attributes\":{\"n\":\"3.3.\"},\"end\":32323,\"start\":32270},{\"attributes\":{\"n\":\"4.\"},\"end\":32516,\"start\":32504},{\"attributes\":{\"n\":\"4.1.\"},\"end\":34282,\"start\":34274},{\"attributes\":{\"n\":\"4.2.\"},\"end\":35443,\"start\":35422},{\"attributes\":{\"n\":\"4.3.\"},\"end\":37274,\"start\":37260},{\"end\":46210,\"start\":46201},{\"attributes\":{\"n\":\"4.4.\"},\"end\":54261,\"start\":54238},{\"attributes\":{\"n\":\"4.5.\"},\"end\":55115,\"start\":55097},{\"attributes\":{\"n\":\"4.6.\"},\"end\":58155,\"start\":58151},{\"attributes\":{\"n\":\"4.7.\"},\"end\":58584,\"start\":58579},{\"attributes\":{\"n\":\"5.\"},\"end\":58910,\"start\":58880},{\"end\":59540,\"start\":59534},{\"end\":60531,\"start\":60521},{\"end\":62884,\"start\":62876},{\"end\":62949,\"start\":62935},{\"end\":63288,\"start\":63279},{\"end\":63524,\"start\":63500},{\"end\":63782,\"start\":63777},{\"end\":64273,\"start\":64268},{\"end\":64345,\"start\":64340},{\"end\":64539,\"start\":64526},{\"end\":64824,\"start\":64815}]", "table": "[{\"end\":65976,\"start\":65757},{\"end\":67231,\"start\":66047},{\"end\":67833,\"start\":67720},{\"end\":68407,\"start\":68088},{\"end\":68995,\"start\":68787},{\"end\":69221,\"start\":69047},{\"end\":65976,\"start\":65757},{\"end\":67231,\"start\":66047},{\"end\":67833,\"start\":67720},{\"end\":68407,\"start\":68088},{\"end\":68995,\"start\":68787},{\"end\":69221,\"start\":69047},{\"end\":65976,\"start\":65757},{\"end\":67231,\"start\":66047},{\"end\":67833,\"start\":67720},{\"end\":68407,\"start\":68088},{\"end\":68995,\"start\":68787},{\"end\":69221,\"start\":69047}]", "figure_caption": "[{\"end\":62933,\"start\":62886},{\"end\":63277,\"start\":62951},{\"end\":63498,\"start\":63290},{\"end\":63775,\"start\":63526},{\"end\":63989,\"start\":63784},{\"end\":64045,\"start\":63992},{\"end\":64266,\"start\":64048},{\"end\":64338,\"start\":64275},{\"end\":64524,\"start\":64347},{\"end\":64770,\"start\":64541},{\"end\":64813,\"start\":64773},{\"end\":65248,\"start\":64825},{\"end\":65464,\"start\":65251},{\"end\":65655,\"start\":65467},{\"end\":65757,\"start\":65658},{\"end\":66047,\"start\":65979},{\"end\":67720,\"start\":67234},{\"end\":68088,\"start\":67836},{\"end\":68787,\"start\":68410},{\"end\":69047,\"start\":68998},{\"end\":62933,\"start\":62886},{\"end\":63277,\"start\":62951},{\"end\":63498,\"start\":63290},{\"end\":63775,\"start\":63526},{\"end\":63989,\"start\":63784},{\"end\":64045,\"start\":63992},{\"end\":64266,\"start\":64048},{\"end\":64338,\"start\":64275},{\"end\":64524,\"start\":64347},{\"end\":64770,\"start\":64541},{\"end\":64813,\"start\":64773},{\"end\":65248,\"start\":64825},{\"end\":65464,\"start\":65251},{\"end\":65655,\"start\":65467},{\"end\":65757,\"start\":65658},{\"end\":66047,\"start\":65979},{\"end\":67720,\"start\":67234},{\"end\":68088,\"start\":67836},{\"end\":68787,\"start\":68410},{\"end\":69047,\"start\":68998},{\"end\":62933,\"start\":62886},{\"end\":63277,\"start\":62951},{\"end\":63498,\"start\":63290},{\"end\":63775,\"start\":63526},{\"end\":63989,\"start\":63784},{\"end\":64045,\"start\":63992},{\"end\":64266,\"start\":64048},{\"end\":64338,\"start\":64275},{\"end\":64524,\"start\":64347},{\"end\":64770,\"start\":64541},{\"end\":64813,\"start\":64773},{\"end\":65248,\"start\":64825},{\"end\":65464,\"start\":65251},{\"end\":65655,\"start\":65467},{\"end\":65757,\"start\":65658},{\"end\":66047,\"start\":65979},{\"end\":67720,\"start\":67234},{\"end\":68088,\"start\":67836},{\"end\":68787,\"start\":68410},{\"end\":69047,\"start\":68998}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13015,\"start\":13009},{\"end\":35266,\"start\":35237},{\"end\":41449,\"start\":41440},{\"end\":46159,\"start\":46131},{\"end\":48674,\"start\":48665},{\"end\":53065,\"start\":53061},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55222,\"start\":55216},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55460,\"start\":55454},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":58507,\"start\":58501},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13015,\"start\":13009},{\"end\":35266,\"start\":35237},{\"end\":41449,\"start\":41440},{\"end\":46159,\"start\":46131},{\"end\":48674,\"start\":48665},{\"end\":53065,\"start\":53061},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55222,\"start\":55216},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55460,\"start\":55454},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":58507,\"start\":58501},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13015,\"start\":13009},{\"end\":35266,\"start\":35237},{\"end\":41449,\"start\":41440},{\"end\":46159,\"start\":46131},{\"end\":48674,\"start\":48665},{\"end\":53065,\"start\":53061},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55222,\"start\":55216},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55460,\"start\":55454},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":58507,\"start\":58501}]", "bib_author_first_name": "[{\"end\":70664,\"start\":70663},{\"end\":70676,\"start\":70675},{\"end\":70687,\"start\":70686},{\"end\":70696,\"start\":70695},{\"end\":70698,\"start\":70697},{\"end\":70706,\"start\":70705},{\"end\":70716,\"start\":70715},{\"end\":71156,\"start\":71155},{\"end\":71168,\"start\":71167},{\"end\":71177,\"start\":71176},{\"end\":71187,\"start\":71186},{\"end\":71669,\"start\":71668},{\"end\":71681,\"start\":71680},{\"end\":71690,\"start\":71689},{\"end\":72021,\"start\":72020},{\"end\":72032,\"start\":72031},{\"end\":72041,\"start\":72040},{\"end\":72043,\"start\":72042},{\"end\":72051,\"start\":72050},{\"end\":72061,\"start\":72060},{\"end\":72386,\"start\":72385},{\"end\":72397,\"start\":72396},{\"end\":72406,\"start\":72405},{\"end\":72408,\"start\":72407},{\"end\":72416,\"start\":72415},{\"end\":72426,\"start\":72425},{\"end\":72921,\"start\":72920},{\"end\":72929,\"start\":72928},{\"end\":72946,\"start\":72945},{\"end\":72958,\"start\":72957},{\"end\":73378,\"start\":73377},{\"end\":73386,\"start\":73385},{\"end\":73403,\"start\":73402},{\"end\":73415,\"start\":73414},{\"end\":73873,\"start\":73872},{\"end\":73884,\"start\":73883},{\"end\":73893,\"start\":73892},{\"end\":73905,\"start\":73904},{\"end\":74238,\"start\":74237},{\"end\":74252,\"start\":74251},{\"end\":74575,\"start\":74574},{\"end\":74589,\"start\":74588},{\"end\":74971,\"start\":74970},{\"end\":74983,\"start\":74982},{\"end\":74992,\"start\":74991},{\"end\":75005,\"start\":75004},{\"end\":75015,\"start\":75014},{\"end\":75308,\"start\":75307},{\"end\":75320,\"start\":75319},{\"end\":75334,\"start\":75333},{\"end\":75799,\"start\":75798},{\"end\":75816,\"start\":75815},{\"end\":76062,\"start\":76061},{\"end\":76073,\"start\":76072},{\"end\":76083,\"start\":76082},{\"end\":76095,\"start\":76094},{\"end\":76351,\"start\":76350},{\"end\":76353,\"start\":76352},{\"end\":76363,\"start\":76362},{\"end\":76365,\"start\":76364},{\"end\":76564,\"start\":76563},{\"end\":76581,\"start\":76580},{\"end\":76986,\"start\":76985},{\"end\":76995,\"start\":76994},{\"end\":77009,\"start\":77008},{\"end\":77017,\"start\":77016},{\"end\":77027,\"start\":77026},{\"end\":77272,\"start\":77271},{\"end\":77287,\"start\":77286},{\"end\":77297,\"start\":77296},{\"end\":77778,\"start\":77777},{\"end\":77795,\"start\":77794},{\"end\":77807,\"start\":77806},{\"end\":78052,\"start\":78051},{\"end\":78072,\"start\":78068},{\"end\":78086,\"start\":78082},{\"end\":78469,\"start\":78468},{\"end\":78478,\"start\":78477},{\"end\":78491,\"start\":78490},{\"end\":78501,\"start\":78500},{\"end\":78751,\"start\":78750},{\"end\":78766,\"start\":78765},{\"end\":78778,\"start\":78777},{\"end\":79107,\"start\":79106},{\"end\":79116,\"start\":79115},{\"end\":79129,\"start\":79128},{\"end\":79142,\"start\":79141},{\"end\":79400,\"start\":79399},{\"end\":79409,\"start\":79408},{\"end\":79422,\"start\":79421},{\"end\":79424,\"start\":79423},{\"end\":79435,\"start\":79434},{\"end\":79822,\"start\":79821},{\"end\":79831,\"start\":79830},{\"end\":79833,\"start\":79832},{\"end\":79841,\"start\":79840},{\"end\":80242,\"start\":80241},{\"end\":80251,\"start\":80250},{\"end\":80261,\"start\":80260},{\"end\":80737,\"start\":80736},{\"end\":80750,\"start\":80749},{\"end\":80759,\"start\":80758},{\"end\":80761,\"start\":80760},{\"end\":81059,\"start\":81058},{\"end\":81069,\"start\":81068},{\"end\":81084,\"start\":81083},{\"end\":81086,\"start\":81085},{\"end\":81095,\"start\":81094},{\"end\":81350,\"start\":81349},{\"end\":81363,\"start\":81362},{\"end\":81379,\"start\":81378},{\"end\":81383,\"start\":81380},{\"end\":81862,\"start\":81861},{\"end\":81876,\"start\":81875},{\"end\":82282,\"start\":82281},{\"end\":82296,\"start\":82295},{\"end\":82300,\"start\":82297},{\"end\":82311,\"start\":82310},{\"end\":82551,\"start\":82550},{\"end\":82871,\"start\":82870},{\"end\":83178,\"start\":83174},{\"end\":83185,\"start\":83184},{\"end\":83364,\"start\":83363},{\"end\":83372,\"start\":83367},{\"end\":83374,\"start\":83373},{\"end\":83539,\"start\":83538},{\"end\":83733,\"start\":83732},{\"end\":83735,\"start\":83734},{\"end\":84091,\"start\":84090},{\"end\":84116,\"start\":84100},{\"end\":70664,\"start\":70663},{\"end\":70676,\"start\":70675},{\"end\":70687,\"start\":70686},{\"end\":70696,\"start\":70695},{\"end\":70698,\"start\":70697},{\"end\":70706,\"start\":70705},{\"end\":70716,\"start\":70715},{\"end\":71156,\"start\":71155},{\"end\":71168,\"start\":71167},{\"end\":71177,\"start\":71176},{\"end\":71187,\"start\":71186},{\"end\":71669,\"start\":71668},{\"end\":71681,\"start\":71680},{\"end\":71690,\"start\":71689},{\"end\":72021,\"start\":72020},{\"end\":72032,\"start\":72031},{\"end\":72041,\"start\":72040},{\"end\":72043,\"start\":72042},{\"end\":72051,\"start\":72050},{\"end\":72061,\"start\":72060},{\"end\":72386,\"start\":72385},{\"end\":72397,\"start\":72396},{\"end\":72406,\"start\":72405},{\"end\":72408,\"start\":72407},{\"end\":72416,\"start\":72415},{\"end\":72426,\"start\":72425},{\"end\":72921,\"start\":72920},{\"end\":72929,\"start\":72928},{\"end\":72946,\"start\":72945},{\"end\":72958,\"start\":72957},{\"end\":73378,\"start\":73377},{\"end\":73386,\"start\":73385},{\"end\":73403,\"start\":73402},{\"end\":73415,\"start\":73414},{\"end\":73873,\"start\":73872},{\"end\":73884,\"start\":73883},{\"end\":73893,\"start\":73892},{\"end\":73905,\"start\":73904},{\"end\":74238,\"start\":74237},{\"end\":74252,\"start\":74251},{\"end\":74575,\"start\":74574},{\"end\":74589,\"start\":74588},{\"end\":74971,\"start\":74970},{\"end\":74983,\"start\":74982},{\"end\":74992,\"start\":74991},{\"end\":75005,\"start\":75004},{\"end\":75015,\"start\":75014},{\"end\":75308,\"start\":75307},{\"end\":75320,\"start\":75319},{\"end\":75334,\"start\":75333},{\"end\":75799,\"start\":75798},{\"end\":75816,\"start\":75815},{\"end\":76062,\"start\":76061},{\"end\":76073,\"start\":76072},{\"end\":76083,\"start\":76082},{\"end\":76095,\"start\":76094},{\"end\":76351,\"start\":76350},{\"end\":76353,\"start\":76352},{\"end\":76363,\"start\":76362},{\"end\":76365,\"start\":76364},{\"end\":76564,\"start\":76563},{\"end\":76581,\"start\":76580},{\"end\":76986,\"start\":76985},{\"end\":76995,\"start\":76994},{\"end\":77009,\"start\":77008},{\"end\":77017,\"start\":77016},{\"end\":77027,\"start\":77026},{\"end\":77272,\"start\":77271},{\"end\":77287,\"start\":77286},{\"end\":77297,\"start\":77296},{\"end\":77778,\"start\":77777},{\"end\":77795,\"start\":77794},{\"end\":77807,\"start\":77806},{\"end\":78052,\"start\":78051},{\"end\":78072,\"start\":78068},{\"end\":78086,\"start\":78082},{\"end\":78469,\"start\":78468},{\"end\":78478,\"start\":78477},{\"end\":78491,\"start\":78490},{\"end\":78501,\"start\":78500},{\"end\":78751,\"start\":78750},{\"end\":78766,\"start\":78765},{\"end\":78778,\"start\":78777},{\"end\":79107,\"start\":79106},{\"end\":79116,\"start\":79115},{\"end\":79129,\"start\":79128},{\"end\":79142,\"start\":79141},{\"end\":79400,\"start\":79399},{\"end\":79409,\"start\":79408},{\"end\":79422,\"start\":79421},{\"end\":79424,\"start\":79423},{\"end\":79435,\"start\":79434},{\"end\":79822,\"start\":79821},{\"end\":79831,\"start\":79830},{\"end\":79833,\"start\":79832},{\"end\":79841,\"start\":79840},{\"end\":80242,\"start\":80241},{\"end\":80251,\"start\":80250},{\"end\":80261,\"start\":80260},{\"end\":80737,\"start\":80736},{\"end\":80750,\"start\":80749},{\"end\":80759,\"start\":80758},{\"end\":80761,\"start\":80760},{\"end\":81059,\"start\":81058},{\"end\":81069,\"start\":81068},{\"end\":81084,\"start\":81083},{\"end\":81086,\"start\":81085},{\"end\":81095,\"start\":81094},{\"end\":81350,\"start\":81349},{\"end\":81363,\"start\":81362},{\"end\":81379,\"start\":81378},{\"end\":81383,\"start\":81380},{\"end\":81862,\"start\":81861},{\"end\":81876,\"start\":81875},{\"end\":82282,\"start\":82281},{\"end\":82296,\"start\":82295},{\"end\":82300,\"start\":82297},{\"end\":82311,\"start\":82310},{\"end\":82551,\"start\":82550},{\"end\":82871,\"start\":82870},{\"end\":83178,\"start\":83174},{\"end\":83185,\"start\":83184},{\"end\":83364,\"start\":83363},{\"end\":83372,\"start\":83367},{\"end\":83374,\"start\":83373},{\"end\":83539,\"start\":83538},{\"end\":83733,\"start\":83732},{\"end\":83735,\"start\":83734},{\"end\":84091,\"start\":84090},{\"end\":84116,\"start\":84100},{\"end\":70664,\"start\":70663},{\"end\":70676,\"start\":70675},{\"end\":70687,\"start\":70686},{\"end\":70696,\"start\":70695},{\"end\":70698,\"start\":70697},{\"end\":70706,\"start\":70705},{\"end\":70716,\"start\":70715},{\"end\":71156,\"start\":71155},{\"end\":71168,\"start\":71167},{\"end\":71177,\"start\":71176},{\"end\":71187,\"start\":71186},{\"end\":71669,\"start\":71668},{\"end\":71681,\"start\":71680},{\"end\":71690,\"start\":71689},{\"end\":72021,\"start\":72020},{\"end\":72032,\"start\":72031},{\"end\":72041,\"start\":72040},{\"end\":72043,\"start\":72042},{\"end\":72051,\"start\":72050},{\"end\":72061,\"start\":72060},{\"end\":72386,\"start\":72385},{\"end\":72397,\"start\":72396},{\"end\":72406,\"start\":72405},{\"end\":72408,\"start\":72407},{\"end\":72416,\"start\":72415},{\"end\":72426,\"start\":72425},{\"end\":72921,\"start\":72920},{\"end\":72929,\"start\":72928},{\"end\":72946,\"start\":72945},{\"end\":72958,\"start\":72957},{\"end\":73378,\"start\":73377},{\"end\":73386,\"start\":73385},{\"end\":73403,\"start\":73402},{\"end\":73415,\"start\":73414},{\"end\":73873,\"start\":73872},{\"end\":73884,\"start\":73883},{\"end\":73893,\"start\":73892},{\"end\":73905,\"start\":73904},{\"end\":74238,\"start\":74237},{\"end\":74252,\"start\":74251},{\"end\":74575,\"start\":74574},{\"end\":74589,\"start\":74588},{\"end\":74971,\"start\":74970},{\"end\":74983,\"start\":74982},{\"end\":74992,\"start\":74991},{\"end\":75005,\"start\":75004},{\"end\":75015,\"start\":75014},{\"end\":75308,\"start\":75307},{\"end\":75320,\"start\":75319},{\"end\":75334,\"start\":75333},{\"end\":75799,\"start\":75798},{\"end\":75816,\"start\":75815},{\"end\":76062,\"start\":76061},{\"end\":76073,\"start\":76072},{\"end\":76083,\"start\":76082},{\"end\":76095,\"start\":76094},{\"end\":76351,\"start\":76350},{\"end\":76353,\"start\":76352},{\"end\":76363,\"start\":76362},{\"end\":76365,\"start\":76364},{\"end\":76564,\"start\":76563},{\"end\":76581,\"start\":76580},{\"end\":76986,\"start\":76985},{\"end\":76995,\"start\":76994},{\"end\":77009,\"start\":77008},{\"end\":77017,\"start\":77016},{\"end\":77027,\"start\":77026},{\"end\":77272,\"start\":77271},{\"end\":77287,\"start\":77286},{\"end\":77297,\"start\":77296},{\"end\":77778,\"start\":77777},{\"end\":77795,\"start\":77794},{\"end\":77807,\"start\":77806},{\"end\":78052,\"start\":78051},{\"end\":78072,\"start\":78068},{\"end\":78086,\"start\":78082},{\"end\":78469,\"start\":78468},{\"end\":78478,\"start\":78477},{\"end\":78491,\"start\":78490},{\"end\":78501,\"start\":78500},{\"end\":78751,\"start\":78750},{\"end\":78766,\"start\":78765},{\"end\":78778,\"start\":78777},{\"end\":79107,\"start\":79106},{\"end\":79116,\"start\":79115},{\"end\":79129,\"start\":79128},{\"end\":79142,\"start\":79141},{\"end\":79400,\"start\":79399},{\"end\":79409,\"start\":79408},{\"end\":79422,\"start\":79421},{\"end\":79424,\"start\":79423},{\"end\":79435,\"start\":79434},{\"end\":79822,\"start\":79821},{\"end\":79831,\"start\":79830},{\"end\":79833,\"start\":79832},{\"end\":79841,\"start\":79840},{\"end\":80242,\"start\":80241},{\"end\":80251,\"start\":80250},{\"end\":80261,\"start\":80260},{\"end\":80737,\"start\":80736},{\"end\":80750,\"start\":80749},{\"end\":80759,\"start\":80758},{\"end\":80761,\"start\":80760},{\"end\":81059,\"start\":81058},{\"end\":81069,\"start\":81068},{\"end\":81084,\"start\":81083},{\"end\":81086,\"start\":81085},{\"end\":81095,\"start\":81094},{\"end\":81350,\"start\":81349},{\"end\":81363,\"start\":81362},{\"end\":81379,\"start\":81378},{\"end\":81383,\"start\":81380},{\"end\":81862,\"start\":81861},{\"end\":81876,\"start\":81875},{\"end\":82282,\"start\":82281},{\"end\":82296,\"start\":82295},{\"end\":82300,\"start\":82297},{\"end\":82311,\"start\":82310},{\"end\":82551,\"start\":82550},{\"end\":82871,\"start\":82870},{\"end\":83178,\"start\":83174},{\"end\":83185,\"start\":83184},{\"end\":83364,\"start\":83363},{\"end\":83372,\"start\":83367},{\"end\":83374,\"start\":83373},{\"end\":83539,\"start\":83538},{\"end\":83733,\"start\":83732},{\"end\":83735,\"start\":83734},{\"end\":84091,\"start\":84090},{\"end\":84116,\"start\":84100}]", "bib_author_last_name": "[{\"end\":70673,\"start\":70665},{\"end\":70684,\"start\":70677},{\"end\":70693,\"start\":70688},{\"end\":70703,\"start\":70699},{\"end\":70713,\"start\":70707},{\"end\":70728,\"start\":70717},{\"end\":71165,\"start\":71157},{\"end\":71174,\"start\":71169},{\"end\":71184,\"start\":71178},{\"end\":71196,\"start\":71188},{\"end\":71678,\"start\":71670},{\"end\":71687,\"start\":71682},{\"end\":71697,\"start\":71691},{\"end\":72029,\"start\":72022},{\"end\":72038,\"start\":72033},{\"end\":72048,\"start\":72044},{\"end\":72058,\"start\":72052},{\"end\":72073,\"start\":72062},{\"end\":72394,\"start\":72387},{\"end\":72403,\"start\":72398},{\"end\":72413,\"start\":72409},{\"end\":72423,\"start\":72417},{\"end\":72438,\"start\":72427},{\"end\":72926,\"start\":72922},{\"end\":72943,\"start\":72930},{\"end\":72955,\"start\":72947},{\"end\":72965,\"start\":72959},{\"end\":73383,\"start\":73379},{\"end\":73400,\"start\":73387},{\"end\":73412,\"start\":73404},{\"end\":73422,\"start\":73416},{\"end\":73881,\"start\":73874},{\"end\":73890,\"start\":73885},{\"end\":73902,\"start\":73894},{\"end\":73913,\"start\":73906},{\"end\":74249,\"start\":74239},{\"end\":74262,\"start\":74253},{\"end\":74586,\"start\":74576},{\"end\":74599,\"start\":74590},{\"end\":74980,\"start\":74972},{\"end\":74989,\"start\":74984},{\"end\":75002,\"start\":74993},{\"end\":75012,\"start\":75006},{\"end\":75024,\"start\":75016},{\"end\":75317,\"start\":75309},{\"end\":75331,\"start\":75321},{\"end\":75345,\"start\":75335},{\"end\":75813,\"start\":75800},{\"end\":75819,\"start\":75817},{\"end\":76070,\"start\":76063},{\"end\":76080,\"start\":76074},{\"end\":76092,\"start\":76084},{\"end\":76103,\"start\":76096},{\"end\":76360,\"start\":76354},{\"end\":76372,\"start\":76366},{\"end\":76578,\"start\":76565},{\"end\":76591,\"start\":76582},{\"end\":76992,\"start\":76987},{\"end\":77006,\"start\":76996},{\"end\":77014,\"start\":77010},{\"end\":77024,\"start\":77018},{\"end\":77033,\"start\":77028},{\"end\":77284,\"start\":77273},{\"end\":77294,\"start\":77288},{\"end\":77306,\"start\":77298},{\"end\":77792,\"start\":77779},{\"end\":77804,\"start\":77796},{\"end\":77817,\"start\":77808},{\"end\":78066,\"start\":78053},{\"end\":78076,\"start\":78073},{\"end\":78080,\"start\":78078},{\"end\":78090,\"start\":78087},{\"end\":78096,\"start\":78092},{\"end\":78475,\"start\":78470},{\"end\":78488,\"start\":78479},{\"end\":78498,\"start\":78492},{\"end\":78507,\"start\":78502},{\"end\":78763,\"start\":78752},{\"end\":78775,\"start\":78767},{\"end\":78784,\"start\":78779},{\"end\":79113,\"start\":79108},{\"end\":79126,\"start\":79117},{\"end\":79139,\"start\":79130},{\"end\":79150,\"start\":79143},{\"end\":79406,\"start\":79401},{\"end\":79419,\"start\":79410},{\"end\":79432,\"start\":79425},{\"end\":79443,\"start\":79436},{\"end\":79828,\"start\":79823},{\"end\":79838,\"start\":79834},{\"end\":79846,\"start\":79842},{\"end\":80248,\"start\":80243},{\"end\":80258,\"start\":80252},{\"end\":80271,\"start\":80262},{\"end\":80747,\"start\":80738},{\"end\":80756,\"start\":80751},{\"end\":80768,\"start\":80762},{\"end\":81066,\"start\":81060},{\"end\":81081,\"start\":81070},{\"end\":81092,\"start\":81087},{\"end\":81100,\"start\":81096},{\"end\":81360,\"start\":81351},{\"end\":81376,\"start\":81364},{\"end\":81390,\"start\":81384},{\"end\":81873,\"start\":81863},{\"end\":81882,\"start\":81877},{\"end\":82293,\"start\":82283},{\"end\":82308,\"start\":82301},{\"end\":82317,\"start\":82312},{\"end\":82554,\"start\":82552},{\"end\":82874,\"start\":82872},{\"end\":83182,\"start\":83179},{\"end\":83197,\"start\":83186},{\"end\":83384,\"start\":83375},{\"end\":83547,\"start\":83540},{\"end\":83743,\"start\":83736},{\"end\":84098,\"start\":84092},{\"end\":70673,\"start\":70665},{\"end\":70684,\"start\":70677},{\"end\":70693,\"start\":70688},{\"end\":70703,\"start\":70699},{\"end\":70713,\"start\":70707},{\"end\":70728,\"start\":70717},{\"end\":71165,\"start\":71157},{\"end\":71174,\"start\":71169},{\"end\":71184,\"start\":71178},{\"end\":71196,\"start\":71188},{\"end\":71678,\"start\":71670},{\"end\":71687,\"start\":71682},{\"end\":71697,\"start\":71691},{\"end\":72029,\"start\":72022},{\"end\":72038,\"start\":72033},{\"end\":72048,\"start\":72044},{\"end\":72058,\"start\":72052},{\"end\":72073,\"start\":72062},{\"end\":72394,\"start\":72387},{\"end\":72403,\"start\":72398},{\"end\":72413,\"start\":72409},{\"end\":72423,\"start\":72417},{\"end\":72438,\"start\":72427},{\"end\":72926,\"start\":72922},{\"end\":72943,\"start\":72930},{\"end\":72955,\"start\":72947},{\"end\":72965,\"start\":72959},{\"end\":73383,\"start\":73379},{\"end\":73400,\"start\":73387},{\"end\":73412,\"start\":73404},{\"end\":73422,\"start\":73416},{\"end\":73881,\"start\":73874},{\"end\":73890,\"start\":73885},{\"end\":73902,\"start\":73894},{\"end\":73913,\"start\":73906},{\"end\":74249,\"start\":74239},{\"end\":74262,\"start\":74253},{\"end\":74586,\"start\":74576},{\"end\":74599,\"start\":74590},{\"end\":74980,\"start\":74972},{\"end\":74989,\"start\":74984},{\"end\":75002,\"start\":74993},{\"end\":75012,\"start\":75006},{\"end\":75024,\"start\":75016},{\"end\":75317,\"start\":75309},{\"end\":75331,\"start\":75321},{\"end\":75345,\"start\":75335},{\"end\":75813,\"start\":75800},{\"end\":75819,\"start\":75817},{\"end\":76070,\"start\":76063},{\"end\":76080,\"start\":76074},{\"end\":76092,\"start\":76084},{\"end\":76103,\"start\":76096},{\"end\":76360,\"start\":76354},{\"end\":76372,\"start\":76366},{\"end\":76578,\"start\":76565},{\"end\":76591,\"start\":76582},{\"end\":76992,\"start\":76987},{\"end\":77006,\"start\":76996},{\"end\":77014,\"start\":77010},{\"end\":77024,\"start\":77018},{\"end\":77033,\"start\":77028},{\"end\":77284,\"start\":77273},{\"end\":77294,\"start\":77288},{\"end\":77306,\"start\":77298},{\"end\":77792,\"start\":77779},{\"end\":77804,\"start\":77796},{\"end\":77817,\"start\":77808},{\"end\":78066,\"start\":78053},{\"end\":78076,\"start\":78073},{\"end\":78080,\"start\":78078},{\"end\":78090,\"start\":78087},{\"end\":78096,\"start\":78092},{\"end\":78475,\"start\":78470},{\"end\":78488,\"start\":78479},{\"end\":78498,\"start\":78492},{\"end\":78507,\"start\":78502},{\"end\":78763,\"start\":78752},{\"end\":78775,\"start\":78767},{\"end\":78784,\"start\":78779},{\"end\":79113,\"start\":79108},{\"end\":79126,\"start\":79117},{\"end\":79139,\"start\":79130},{\"end\":79150,\"start\":79143},{\"end\":79406,\"start\":79401},{\"end\":79419,\"start\":79410},{\"end\":79432,\"start\":79425},{\"end\":79443,\"start\":79436},{\"end\":79828,\"start\":79823},{\"end\":79838,\"start\":79834},{\"end\":79846,\"start\":79842},{\"end\":80248,\"start\":80243},{\"end\":80258,\"start\":80252},{\"end\":80271,\"start\":80262},{\"end\":80747,\"start\":80738},{\"end\":80756,\"start\":80751},{\"end\":80768,\"start\":80762},{\"end\":81066,\"start\":81060},{\"end\":81081,\"start\":81070},{\"end\":81092,\"start\":81087},{\"end\":81100,\"start\":81096},{\"end\":81360,\"start\":81351},{\"end\":81376,\"start\":81364},{\"end\":81390,\"start\":81384},{\"end\":81873,\"start\":81863},{\"end\":81882,\"start\":81877},{\"end\":82293,\"start\":82283},{\"end\":82308,\"start\":82301},{\"end\":82317,\"start\":82312},{\"end\":82554,\"start\":82552},{\"end\":82874,\"start\":82872},{\"end\":83182,\"start\":83179},{\"end\":83197,\"start\":83186},{\"end\":83384,\"start\":83375},{\"end\":83547,\"start\":83540},{\"end\":83743,\"start\":83736},{\"end\":84098,\"start\":84092},{\"end\":70673,\"start\":70665},{\"end\":70684,\"start\":70677},{\"end\":70693,\"start\":70688},{\"end\":70703,\"start\":70699},{\"end\":70713,\"start\":70707},{\"end\":70728,\"start\":70717},{\"end\":71165,\"start\":71157},{\"end\":71174,\"start\":71169},{\"end\":71184,\"start\":71178},{\"end\":71196,\"start\":71188},{\"end\":71678,\"start\":71670},{\"end\":71687,\"start\":71682},{\"end\":71697,\"start\":71691},{\"end\":72029,\"start\":72022},{\"end\":72038,\"start\":72033},{\"end\":72048,\"start\":72044},{\"end\":72058,\"start\":72052},{\"end\":72073,\"start\":72062},{\"end\":72394,\"start\":72387},{\"end\":72403,\"start\":72398},{\"end\":72413,\"start\":72409},{\"end\":72423,\"start\":72417},{\"end\":72438,\"start\":72427},{\"end\":72926,\"start\":72922},{\"end\":72943,\"start\":72930},{\"end\":72955,\"start\":72947},{\"end\":72965,\"start\":72959},{\"end\":73383,\"start\":73379},{\"end\":73400,\"start\":73387},{\"end\":73412,\"start\":73404},{\"end\":73422,\"start\":73416},{\"end\":73881,\"start\":73874},{\"end\":73890,\"start\":73885},{\"end\":73902,\"start\":73894},{\"end\":73913,\"start\":73906},{\"end\":74249,\"start\":74239},{\"end\":74262,\"start\":74253},{\"end\":74586,\"start\":74576},{\"end\":74599,\"start\":74590},{\"end\":74980,\"start\":74972},{\"end\":74989,\"start\":74984},{\"end\":75002,\"start\":74993},{\"end\":75012,\"start\":75006},{\"end\":75024,\"start\":75016},{\"end\":75317,\"start\":75309},{\"end\":75331,\"start\":75321},{\"end\":75345,\"start\":75335},{\"end\":75813,\"start\":75800},{\"end\":75819,\"start\":75817},{\"end\":76070,\"start\":76063},{\"end\":76080,\"start\":76074},{\"end\":76092,\"start\":76084},{\"end\":76103,\"start\":76096},{\"end\":76360,\"start\":76354},{\"end\":76372,\"start\":76366},{\"end\":76578,\"start\":76565},{\"end\":76591,\"start\":76582},{\"end\":76992,\"start\":76987},{\"end\":77006,\"start\":76996},{\"end\":77014,\"start\":77010},{\"end\":77024,\"start\":77018},{\"end\":77033,\"start\":77028},{\"end\":77284,\"start\":77273},{\"end\":77294,\"start\":77288},{\"end\":77306,\"start\":77298},{\"end\":77792,\"start\":77779},{\"end\":77804,\"start\":77796},{\"end\":77817,\"start\":77808},{\"end\":78066,\"start\":78053},{\"end\":78076,\"start\":78073},{\"end\":78080,\"start\":78078},{\"end\":78090,\"start\":78087},{\"end\":78096,\"start\":78092},{\"end\":78475,\"start\":78470},{\"end\":78488,\"start\":78479},{\"end\":78498,\"start\":78492},{\"end\":78507,\"start\":78502},{\"end\":78763,\"start\":78752},{\"end\":78775,\"start\":78767},{\"end\":78784,\"start\":78779},{\"end\":79113,\"start\":79108},{\"end\":79126,\"start\":79117},{\"end\":79139,\"start\":79130},{\"end\":79150,\"start\":79143},{\"end\":79406,\"start\":79401},{\"end\":79419,\"start\":79410},{\"end\":79432,\"start\":79425},{\"end\":79443,\"start\":79436},{\"end\":79828,\"start\":79823},{\"end\":79838,\"start\":79834},{\"end\":79846,\"start\":79842},{\"end\":80248,\"start\":80243},{\"end\":80258,\"start\":80252},{\"end\":80271,\"start\":80262},{\"end\":80747,\"start\":80738},{\"end\":80756,\"start\":80751},{\"end\":80768,\"start\":80762},{\"end\":81066,\"start\":81060},{\"end\":81081,\"start\":81070},{\"end\":81092,\"start\":81087},{\"end\":81100,\"start\":81096},{\"end\":81360,\"start\":81351},{\"end\":81376,\"start\":81364},{\"end\":81390,\"start\":81384},{\"end\":81873,\"start\":81863},{\"end\":81882,\"start\":81877},{\"end\":82293,\"start\":82283},{\"end\":82308,\"start\":82301},{\"end\":82317,\"start\":82312},{\"end\":82554,\"start\":82552},{\"end\":82874,\"start\":82872},{\"end\":83182,\"start\":83179},{\"end\":83197,\"start\":83186},{\"end\":83384,\"start\":83375},{\"end\":83547,\"start\":83540},{\"end\":83743,\"start\":83736},{\"end\":84098,\"start\":84092}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":6767352},\"end\":71110,\"start\":70609},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":2544613},\"end\":71617,\"start\":71112},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":2575057},\"end\":71944,\"start\":71619},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":850845},\"end\":72288,\"start\":71946},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":13348226},\"end\":72854,\"start\":72290},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":8894429},\"end\":73265,\"start\":72856},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":1410685},\"end\":73816,\"start\":73267},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1670203},\"end\":74202,\"start\":73818},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":564427},\"end\":74507,\"start\":74204},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":1470207},\"end\":74936,\"start\":74509},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2322670},\"end\":75233,\"start\":74938},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":5373990},\"end\":75713,\"start\":75235},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7549512},\"end\":75983,\"start\":75715},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":2941204},\"end\":76311,\"start\":75985},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":53306563},\"end\":76501,\"start\":76313},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":15492569},\"end\":76907,\"start\":76503},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2139711},\"end\":77221,\"start\":76909},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":415299},\"end\":77670,\"start\":77223},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":26593237},\"end\":78049,\"start\":77672},{\"attributes\":{\"id\":\"b19\"},\"end\":78382,\"start\":78051},{\"attributes\":{\"doi\":\"arXiv:cs/0602007\",\"id\":\"b20\",\"matched_paper_id\":2095658},\"end\":78727,\"start\":78384},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":3635922},\"end\":79055,\"start\":78729},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":31419280},\"end\":79365,\"start\":79057},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":565041},\"end\":79770,\"start\":79367},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":53570458},\"end\":80203,\"start\":79772},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":262759},\"end\":80660,\"start\":80205},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":215980073},\"end\":80990,\"start\":80662},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":16828661},\"end\":81274,\"start\":80992},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":33747456},\"end\":81806,\"start\":81276},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":1165875},\"end\":82221,\"start\":81808},{\"attributes\":{\"id\":\"b30\"},\"end\":82458,\"start\":82223},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1523893},\"end\":82785,\"start\":82460},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":4774427},\"end\":83084,\"start\":82787},{\"attributes\":{\"id\":\"b33\"},\"end\":83330,\"start\":83086},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":2937230},\"end\":83505,\"start\":83332},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":55074476},\"end\":83629,\"start\":83507},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":14340782},\"end\":84016,\"start\":83631},{\"attributes\":{\"id\":\"b37\"},\"end\":84296,\"start\":84018},{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":6767352},\"end\":71110,\"start\":70609},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":2544613},\"end\":71617,\"start\":71112},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":2575057},\"end\":71944,\"start\":71619},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":850845},\"end\":72288,\"start\":71946},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":13348226},\"end\":72854,\"start\":72290},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":8894429},\"end\":73265,\"start\":72856},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":1410685},\"end\":73816,\"start\":73267},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1670203},\"end\":74202,\"start\":73818},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":564427},\"end\":74507,\"start\":74204},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":1470207},\"end\":74936,\"start\":74509},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2322670},\"end\":75233,\"start\":74938},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":5373990},\"end\":75713,\"start\":75235},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7549512},\"end\":75983,\"start\":75715},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":2941204},\"end\":76311,\"start\":75985},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":53306563},\"end\":76501,\"start\":76313},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":15492569},\"end\":76907,\"start\":76503},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2139711},\"end\":77221,\"start\":76909},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":415299},\"end\":77670,\"start\":77223},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":26593237},\"end\":78049,\"start\":77672},{\"attributes\":{\"id\":\"b19\"},\"end\":78382,\"start\":78051},{\"attributes\":{\"doi\":\"arXiv:cs/0602007\",\"id\":\"b20\",\"matched_paper_id\":2095658},\"end\":78727,\"start\":78384},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":3635922},\"end\":79055,\"start\":78729},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":31419280},\"end\":79365,\"start\":79057},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":565041},\"end\":79770,\"start\":79367},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":53570458},\"end\":80203,\"start\":79772},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":262759},\"end\":80660,\"start\":80205},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":20233192},\"end\":80990,\"start\":80662},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":16828661},\"end\":81274,\"start\":80992},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":33747456},\"end\":81806,\"start\":81276},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":1165875},\"end\":82221,\"start\":81808},{\"attributes\":{\"id\":\"b30\"},\"end\":82458,\"start\":82223},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1523893},\"end\":82785,\"start\":82460},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":4774427},\"end\":83084,\"start\":82787},{\"attributes\":{\"id\":\"b33\"},\"end\":83330,\"start\":83086},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":2937230},\"end\":83505,\"start\":83332},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":55074476},\"end\":83629,\"start\":83507},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":14340782},\"end\":84016,\"start\":83631},{\"attributes\":{\"id\":\"b37\"},\"end\":84296,\"start\":84018},{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":6767352},\"end\":71110,\"start\":70609},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":2544613},\"end\":71617,\"start\":71112},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":2575057},\"end\":71944,\"start\":71619},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":850845},\"end\":72288,\"start\":71946},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":13348226},\"end\":72854,\"start\":72290},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":8894429},\"end\":73265,\"start\":72856},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":1410685},\"end\":73816,\"start\":73267},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1670203},\"end\":74202,\"start\":73818},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":564427},\"end\":74507,\"start\":74204},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":1470207},\"end\":74936,\"start\":74509},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2322670},\"end\":75233,\"start\":74938},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":5373990},\"end\":75713,\"start\":75235},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7549512},\"end\":75983,\"start\":75715},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":2941204},\"end\":76311,\"start\":75985},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":53306563},\"end\":76501,\"start\":76313},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":15492569},\"end\":76907,\"start\":76503},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2139711},\"end\":77221,\"start\":76909},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":415299},\"end\":77670,\"start\":77223},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":26593237},\"end\":78049,\"start\":77672},{\"attributes\":{\"id\":\"b19\"},\"end\":78382,\"start\":78051},{\"attributes\":{\"doi\":\"arXiv:cs/0602007\",\"id\":\"b20\",\"matched_paper_id\":2095658},\"end\":78727,\"start\":78384},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":3635922},\"end\":79055,\"start\":78729},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":31419280},\"end\":79365,\"start\":79057},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":565041},\"end\":79770,\"start\":79367},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":53570458},\"end\":80203,\"start\":79772},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":262759},\"end\":80660,\"start\":80205},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":20233192},\"end\":80990,\"start\":80662},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":16828661},\"end\":81274,\"start\":80992},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":33747456},\"end\":81806,\"start\":81276},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":1165875},\"end\":82221,\"start\":81808},{\"attributes\":{\"id\":\"b30\"},\"end\":82458,\"start\":82223},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1523893},\"end\":82785,\"start\":82460},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":4774427},\"end\":83084,\"start\":82787},{\"attributes\":{\"id\":\"b33\"},\"end\":83330,\"start\":83086},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":2937230},\"end\":83505,\"start\":83332},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":55074476},\"end\":83629,\"start\":83507},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":14340782},\"end\":84016,\"start\":83631},{\"attributes\":{\"id\":\"b37\"},\"end\":84296,\"start\":84018}]", "bib_title": "[{\"end\":70661,\"start\":70609},{\"end\":71153,\"start\":71112},{\"end\":71666,\"start\":71619},{\"end\":72018,\"start\":71946},{\"end\":72383,\"start\":72290},{\"end\":72918,\"start\":72856},{\"end\":73375,\"start\":73267},{\"end\":73870,\"start\":73818},{\"end\":74235,\"start\":74204},{\"end\":74572,\"start\":74509},{\"end\":74968,\"start\":74938},{\"end\":75305,\"start\":75235},{\"end\":75796,\"start\":75715},{\"end\":76059,\"start\":75985},{\"end\":76348,\"start\":76313},{\"end\":76561,\"start\":76503},{\"end\":76983,\"start\":76909},{\"end\":77269,\"start\":77223},{\"end\":77775,\"start\":77672},{\"end\":78466,\"start\":78384},{\"end\":78748,\"start\":78729},{\"end\":79104,\"start\":79057},{\"end\":79397,\"start\":79367},{\"end\":79819,\"start\":79772},{\"end\":80239,\"start\":80205},{\"end\":80734,\"start\":80662},{\"end\":81056,\"start\":80992},{\"end\":81347,\"start\":81276},{\"end\":81859,\"start\":81808},{\"end\":82548,\"start\":82460},{\"end\":82868,\"start\":82787},{\"end\":83361,\"start\":83332},{\"end\":83536,\"start\":83507},{\"end\":83730,\"start\":83631},{\"end\":70661,\"start\":70609},{\"end\":71153,\"start\":71112},{\"end\":71666,\"start\":71619},{\"end\":72018,\"start\":71946},{\"end\":72383,\"start\":72290},{\"end\":72918,\"start\":72856},{\"end\":73375,\"start\":73267},{\"end\":73870,\"start\":73818},{\"end\":74235,\"start\":74204},{\"end\":74572,\"start\":74509},{\"end\":74968,\"start\":74938},{\"end\":75305,\"start\":75235},{\"end\":75796,\"start\":75715},{\"end\":76059,\"start\":75985},{\"end\":76348,\"start\":76313},{\"end\":76561,\"start\":76503},{\"end\":76983,\"start\":76909},{\"end\":77269,\"start\":77223},{\"end\":77775,\"start\":77672},{\"end\":78466,\"start\":78384},{\"end\":78748,\"start\":78729},{\"end\":79104,\"start\":79057},{\"end\":79397,\"start\":79367},{\"end\":79819,\"start\":79772},{\"end\":80239,\"start\":80205},{\"end\":80734,\"start\":80662},{\"end\":81056,\"start\":80992},{\"end\":81347,\"start\":81276},{\"end\":81859,\"start\":81808},{\"end\":82548,\"start\":82460},{\"end\":82868,\"start\":82787},{\"end\":83361,\"start\":83332},{\"end\":83536,\"start\":83507},{\"end\":83730,\"start\":83631},{\"end\":70661,\"start\":70609},{\"end\":71153,\"start\":71112},{\"end\":71666,\"start\":71619},{\"end\":72018,\"start\":71946},{\"end\":72383,\"start\":72290},{\"end\":72918,\"start\":72856},{\"end\":73375,\"start\":73267},{\"end\":73870,\"start\":73818},{\"end\":74235,\"start\":74204},{\"end\":74572,\"start\":74509},{\"end\":74968,\"start\":74938},{\"end\":75305,\"start\":75235},{\"end\":75796,\"start\":75715},{\"end\":76059,\"start\":75985},{\"end\":76348,\"start\":76313},{\"end\":76561,\"start\":76503},{\"end\":76983,\"start\":76909},{\"end\":77269,\"start\":77223},{\"end\":77775,\"start\":77672},{\"end\":78466,\"start\":78384},{\"end\":78748,\"start\":78729},{\"end\":79104,\"start\":79057},{\"end\":79397,\"start\":79367},{\"end\":79819,\"start\":79772},{\"end\":80239,\"start\":80205},{\"end\":80734,\"start\":80662},{\"end\":81056,\"start\":80992},{\"end\":81347,\"start\":81276},{\"end\":81859,\"start\":81808},{\"end\":82548,\"start\":82460},{\"end\":82868,\"start\":82787},{\"end\":83361,\"start\":83332},{\"end\":83536,\"start\":83507},{\"end\":83730,\"start\":83631}]", "bib_author": "[{\"end\":70675,\"start\":70663},{\"end\":70686,\"start\":70675},{\"end\":70695,\"start\":70686},{\"end\":70705,\"start\":70695},{\"end\":70715,\"start\":70705},{\"end\":70730,\"start\":70715},{\"end\":71167,\"start\":71155},{\"end\":71176,\"start\":71167},{\"end\":71186,\"start\":71176},{\"end\":71198,\"start\":71186},{\"end\":71680,\"start\":71668},{\"end\":71689,\"start\":71680},{\"end\":71699,\"start\":71689},{\"end\":72031,\"start\":72020},{\"end\":72040,\"start\":72031},{\"end\":72050,\"start\":72040},{\"end\":72060,\"start\":72050},{\"end\":72075,\"start\":72060},{\"end\":72396,\"start\":72385},{\"end\":72405,\"start\":72396},{\"end\":72415,\"start\":72405},{\"end\":72425,\"start\":72415},{\"end\":72440,\"start\":72425},{\"end\":72928,\"start\":72920},{\"end\":72945,\"start\":72928},{\"end\":72957,\"start\":72945},{\"end\":72967,\"start\":72957},{\"end\":73385,\"start\":73377},{\"end\":73402,\"start\":73385},{\"end\":73414,\"start\":73402},{\"end\":73424,\"start\":73414},{\"end\":73883,\"start\":73872},{\"end\":73892,\"start\":73883},{\"end\":73904,\"start\":73892},{\"end\":73915,\"start\":73904},{\"end\":74251,\"start\":74237},{\"end\":74264,\"start\":74251},{\"end\":74588,\"start\":74574},{\"end\":74601,\"start\":74588},{\"end\":74982,\"start\":74970},{\"end\":74991,\"start\":74982},{\"end\":75004,\"start\":74991},{\"end\":75014,\"start\":75004},{\"end\":75026,\"start\":75014},{\"end\":75319,\"start\":75307},{\"end\":75333,\"start\":75319},{\"end\":75347,\"start\":75333},{\"end\":75815,\"start\":75798},{\"end\":75821,\"start\":75815},{\"end\":76072,\"start\":76061},{\"end\":76082,\"start\":76072},{\"end\":76094,\"start\":76082},{\"end\":76105,\"start\":76094},{\"end\":76362,\"start\":76350},{\"end\":76374,\"start\":76362},{\"end\":76580,\"start\":76563},{\"end\":76593,\"start\":76580},{\"end\":76994,\"start\":76985},{\"end\":77008,\"start\":76994},{\"end\":77016,\"start\":77008},{\"end\":77026,\"start\":77016},{\"end\":77035,\"start\":77026},{\"end\":77286,\"start\":77271},{\"end\":77296,\"start\":77286},{\"end\":77308,\"start\":77296},{\"end\":77794,\"start\":77777},{\"end\":77806,\"start\":77794},{\"end\":77819,\"start\":77806},{\"end\":78068,\"start\":78051},{\"end\":78078,\"start\":78068},{\"end\":78082,\"start\":78078},{\"end\":78092,\"start\":78082},{\"end\":78098,\"start\":78092},{\"end\":78477,\"start\":78468},{\"end\":78490,\"start\":78477},{\"end\":78500,\"start\":78490},{\"end\":78509,\"start\":78500},{\"end\":78765,\"start\":78750},{\"end\":78777,\"start\":78765},{\"end\":78786,\"start\":78777},{\"end\":79115,\"start\":79106},{\"end\":79128,\"start\":79115},{\"end\":79141,\"start\":79128},{\"end\":79152,\"start\":79141},{\"end\":79408,\"start\":79399},{\"end\":79421,\"start\":79408},{\"end\":79434,\"start\":79421},{\"end\":79445,\"start\":79434},{\"end\":79830,\"start\":79821},{\"end\":79840,\"start\":79830},{\"end\":79848,\"start\":79840},{\"end\":80250,\"start\":80241},{\"end\":80260,\"start\":80250},{\"end\":80273,\"start\":80260},{\"end\":80749,\"start\":80736},{\"end\":80758,\"start\":80749},{\"end\":80770,\"start\":80758},{\"end\":81068,\"start\":81058},{\"end\":81083,\"start\":81068},{\"end\":81094,\"start\":81083},{\"end\":81102,\"start\":81094},{\"end\":81362,\"start\":81349},{\"end\":81378,\"start\":81362},{\"end\":81392,\"start\":81378},{\"end\":81875,\"start\":81861},{\"end\":81884,\"start\":81875},{\"end\":82295,\"start\":82281},{\"end\":82310,\"start\":82295},{\"end\":82319,\"start\":82310},{\"end\":82556,\"start\":82550},{\"end\":82876,\"start\":82870},{\"end\":83184,\"start\":83174},{\"end\":83199,\"start\":83184},{\"end\":83367,\"start\":83363},{\"end\":83386,\"start\":83367},{\"end\":83549,\"start\":83538},{\"end\":83745,\"start\":83732},{\"end\":84100,\"start\":84090},{\"end\":84119,\"start\":84100},{\"end\":70675,\"start\":70663},{\"end\":70686,\"start\":70675},{\"end\":70695,\"start\":70686},{\"end\":70705,\"start\":70695},{\"end\":70715,\"start\":70705},{\"end\":70730,\"start\":70715},{\"end\":71167,\"start\":71155},{\"end\":71176,\"start\":71167},{\"end\":71186,\"start\":71176},{\"end\":71198,\"start\":71186},{\"end\":71680,\"start\":71668},{\"end\":71689,\"start\":71680},{\"end\":71699,\"start\":71689},{\"end\":72031,\"start\":72020},{\"end\":72040,\"start\":72031},{\"end\":72050,\"start\":72040},{\"end\":72060,\"start\":72050},{\"end\":72075,\"start\":72060},{\"end\":72396,\"start\":72385},{\"end\":72405,\"start\":72396},{\"end\":72415,\"start\":72405},{\"end\":72425,\"start\":72415},{\"end\":72440,\"start\":72425},{\"end\":72928,\"start\":72920},{\"end\":72945,\"start\":72928},{\"end\":72957,\"start\":72945},{\"end\":72967,\"start\":72957},{\"end\":73385,\"start\":73377},{\"end\":73402,\"start\":73385},{\"end\":73414,\"start\":73402},{\"end\":73424,\"start\":73414},{\"end\":73883,\"start\":73872},{\"end\":73892,\"start\":73883},{\"end\":73904,\"start\":73892},{\"end\":73915,\"start\":73904},{\"end\":74251,\"start\":74237},{\"end\":74264,\"start\":74251},{\"end\":74588,\"start\":74574},{\"end\":74601,\"start\":74588},{\"end\":74982,\"start\":74970},{\"end\":74991,\"start\":74982},{\"end\":75004,\"start\":74991},{\"end\":75014,\"start\":75004},{\"end\":75026,\"start\":75014},{\"end\":75319,\"start\":75307},{\"end\":75333,\"start\":75319},{\"end\":75347,\"start\":75333},{\"end\":75815,\"start\":75798},{\"end\":75821,\"start\":75815},{\"end\":76072,\"start\":76061},{\"end\":76082,\"start\":76072},{\"end\":76094,\"start\":76082},{\"end\":76105,\"start\":76094},{\"end\":76362,\"start\":76350},{\"end\":76374,\"start\":76362},{\"end\":76580,\"start\":76563},{\"end\":76593,\"start\":76580},{\"end\":76994,\"start\":76985},{\"end\":77008,\"start\":76994},{\"end\":77016,\"start\":77008},{\"end\":77026,\"start\":77016},{\"end\":77035,\"start\":77026},{\"end\":77286,\"start\":77271},{\"end\":77296,\"start\":77286},{\"end\":77308,\"start\":77296},{\"end\":77794,\"start\":77777},{\"end\":77806,\"start\":77794},{\"end\":77819,\"start\":77806},{\"end\":78068,\"start\":78051},{\"end\":78078,\"start\":78068},{\"end\":78082,\"start\":78078},{\"end\":78092,\"start\":78082},{\"end\":78098,\"start\":78092},{\"end\":78477,\"start\":78468},{\"end\":78490,\"start\":78477},{\"end\":78500,\"start\":78490},{\"end\":78509,\"start\":78500},{\"end\":78765,\"start\":78750},{\"end\":78777,\"start\":78765},{\"end\":78786,\"start\":78777},{\"end\":79115,\"start\":79106},{\"end\":79128,\"start\":79115},{\"end\":79141,\"start\":79128},{\"end\":79152,\"start\":79141},{\"end\":79408,\"start\":79399},{\"end\":79421,\"start\":79408},{\"end\":79434,\"start\":79421},{\"end\":79445,\"start\":79434},{\"end\":79830,\"start\":79821},{\"end\":79840,\"start\":79830},{\"end\":79848,\"start\":79840},{\"end\":80250,\"start\":80241},{\"end\":80260,\"start\":80250},{\"end\":80273,\"start\":80260},{\"end\":80749,\"start\":80736},{\"end\":80758,\"start\":80749},{\"end\":80770,\"start\":80758},{\"end\":81068,\"start\":81058},{\"end\":81083,\"start\":81068},{\"end\":81094,\"start\":81083},{\"end\":81102,\"start\":81094},{\"end\":81362,\"start\":81349},{\"end\":81378,\"start\":81362},{\"end\":81392,\"start\":81378},{\"end\":81875,\"start\":81861},{\"end\":81884,\"start\":81875},{\"end\":82295,\"start\":82281},{\"end\":82310,\"start\":82295},{\"end\":82319,\"start\":82310},{\"end\":82556,\"start\":82550},{\"end\":82876,\"start\":82870},{\"end\":83184,\"start\":83174},{\"end\":83199,\"start\":83184},{\"end\":83367,\"start\":83363},{\"end\":83386,\"start\":83367},{\"end\":83549,\"start\":83538},{\"end\":83745,\"start\":83732},{\"end\":84100,\"start\":84090},{\"end\":84119,\"start\":84100},{\"end\":70675,\"start\":70663},{\"end\":70686,\"start\":70675},{\"end\":70695,\"start\":70686},{\"end\":70705,\"start\":70695},{\"end\":70715,\"start\":70705},{\"end\":70730,\"start\":70715},{\"end\":71167,\"start\":71155},{\"end\":71176,\"start\":71167},{\"end\":71186,\"start\":71176},{\"end\":71198,\"start\":71186},{\"end\":71680,\"start\":71668},{\"end\":71689,\"start\":71680},{\"end\":71699,\"start\":71689},{\"end\":72031,\"start\":72020},{\"end\":72040,\"start\":72031},{\"end\":72050,\"start\":72040},{\"end\":72060,\"start\":72050},{\"end\":72075,\"start\":72060},{\"end\":72396,\"start\":72385},{\"end\":72405,\"start\":72396},{\"end\":72415,\"start\":72405},{\"end\":72425,\"start\":72415},{\"end\":72440,\"start\":72425},{\"end\":72928,\"start\":72920},{\"end\":72945,\"start\":72928},{\"end\":72957,\"start\":72945},{\"end\":72967,\"start\":72957},{\"end\":73385,\"start\":73377},{\"end\":73402,\"start\":73385},{\"end\":73414,\"start\":73402},{\"end\":73424,\"start\":73414},{\"end\":73883,\"start\":73872},{\"end\":73892,\"start\":73883},{\"end\":73904,\"start\":73892},{\"end\":73915,\"start\":73904},{\"end\":74251,\"start\":74237},{\"end\":74264,\"start\":74251},{\"end\":74588,\"start\":74574},{\"end\":74601,\"start\":74588},{\"end\":74982,\"start\":74970},{\"end\":74991,\"start\":74982},{\"end\":75004,\"start\":74991},{\"end\":75014,\"start\":75004},{\"end\":75026,\"start\":75014},{\"end\":75319,\"start\":75307},{\"end\":75333,\"start\":75319},{\"end\":75347,\"start\":75333},{\"end\":75815,\"start\":75798},{\"end\":75821,\"start\":75815},{\"end\":76072,\"start\":76061},{\"end\":76082,\"start\":76072},{\"end\":76094,\"start\":76082},{\"end\":76105,\"start\":76094},{\"end\":76362,\"start\":76350},{\"end\":76374,\"start\":76362},{\"end\":76580,\"start\":76563},{\"end\":76593,\"start\":76580},{\"end\":76994,\"start\":76985},{\"end\":77008,\"start\":76994},{\"end\":77016,\"start\":77008},{\"end\":77026,\"start\":77016},{\"end\":77035,\"start\":77026},{\"end\":77286,\"start\":77271},{\"end\":77296,\"start\":77286},{\"end\":77308,\"start\":77296},{\"end\":77794,\"start\":77777},{\"end\":77806,\"start\":77794},{\"end\":77819,\"start\":77806},{\"end\":78068,\"start\":78051},{\"end\":78078,\"start\":78068},{\"end\":78082,\"start\":78078},{\"end\":78092,\"start\":78082},{\"end\":78098,\"start\":78092},{\"end\":78477,\"start\":78468},{\"end\":78490,\"start\":78477},{\"end\":78500,\"start\":78490},{\"end\":78509,\"start\":78500},{\"end\":78765,\"start\":78750},{\"end\":78777,\"start\":78765},{\"end\":78786,\"start\":78777},{\"end\":79115,\"start\":79106},{\"end\":79128,\"start\":79115},{\"end\":79141,\"start\":79128},{\"end\":79152,\"start\":79141},{\"end\":79408,\"start\":79399},{\"end\":79421,\"start\":79408},{\"end\":79434,\"start\":79421},{\"end\":79445,\"start\":79434},{\"end\":79830,\"start\":79821},{\"end\":79840,\"start\":79830},{\"end\":79848,\"start\":79840},{\"end\":80250,\"start\":80241},{\"end\":80260,\"start\":80250},{\"end\":80273,\"start\":80260},{\"end\":80749,\"start\":80736},{\"end\":80758,\"start\":80749},{\"end\":80770,\"start\":80758},{\"end\":81068,\"start\":81058},{\"end\":81083,\"start\":81068},{\"end\":81094,\"start\":81083},{\"end\":81102,\"start\":81094},{\"end\":81362,\"start\":81349},{\"end\":81378,\"start\":81362},{\"end\":81392,\"start\":81378},{\"end\":81875,\"start\":81861},{\"end\":81884,\"start\":81875},{\"end\":82295,\"start\":82281},{\"end\":82310,\"start\":82295},{\"end\":82319,\"start\":82310},{\"end\":82556,\"start\":82550},{\"end\":82876,\"start\":82870},{\"end\":83184,\"start\":83174},{\"end\":83199,\"start\":83184},{\"end\":83367,\"start\":83363},{\"end\":83386,\"start\":83367},{\"end\":83549,\"start\":83538},{\"end\":83745,\"start\":83732},{\"end\":84100,\"start\":84090},{\"end\":84119,\"start\":84100}]", "bib_venue": "[{\"end\":70813,\"start\":70797},{\"end\":71382,\"start\":71290},{\"end\":71761,\"start\":71744},{\"end\":72528,\"start\":72514},{\"end\":73037,\"start\":73031},{\"end\":73487,\"start\":73483},{\"end\":73983,\"start\":73965},{\"end\":74336,\"start\":74318},{\"end\":74693,\"start\":74675},{\"end\":75430,\"start\":75414},{\"end\":76683,\"start\":76662},{\"end\":77402,\"start\":77380},{\"end\":78843,\"start\":78829},{\"end\":79537,\"start\":79519},{\"end\":79958,\"start\":79942},{\"end\":80448,\"start\":80360},{\"end\":81514,\"start\":81499},{\"end\":81972,\"start\":81958},{\"end\":82606,\"start\":82590},{\"end\":70813,\"start\":70797},{\"end\":71382,\"start\":71290},{\"end\":71761,\"start\":71744},{\"end\":72528,\"start\":72514},{\"end\":73037,\"start\":73031},{\"end\":73487,\"start\":73483},{\"end\":73983,\"start\":73965},{\"end\":74336,\"start\":74318},{\"end\":74693,\"start\":74675},{\"end\":75430,\"start\":75414},{\"end\":76683,\"start\":76662},{\"end\":77402,\"start\":77380},{\"end\":78843,\"start\":78829},{\"end\":79537,\"start\":79519},{\"end\":79958,\"start\":79942},{\"end\":80448,\"start\":80360},{\"end\":81514,\"start\":81499},{\"end\":81972,\"start\":81958},{\"end\":82606,\"start\":82590},{\"end\":70813,\"start\":70797},{\"end\":71382,\"start\":71290},{\"end\":71761,\"start\":71744},{\"end\":72528,\"start\":72514},{\"end\":73037,\"start\":73031},{\"end\":73487,\"start\":73483},{\"end\":73983,\"start\":73965},{\"end\":74336,\"start\":74318},{\"end\":74693,\"start\":74675},{\"end\":75430,\"start\":75414},{\"end\":76683,\"start\":76662},{\"end\":77402,\"start\":77380},{\"end\":78843,\"start\":78829},{\"end\":79537,\"start\":79519},{\"end\":79958,\"start\":79942},{\"end\":80448,\"start\":80360},{\"end\":81514,\"start\":81499},{\"end\":81972,\"start\":81958},{\"end\":82606,\"start\":82590},{\"end\":70795,\"start\":70730},{\"end\":71288,\"start\":71198},{\"end\":71742,\"start\":71699},{\"end\":72105,\"start\":72075},{\"end\":72512,\"start\":72440},{\"end\":73005,\"start\":72967},{\"end\":73457,\"start\":73424},{\"end\":73937,\"start\":73915},{\"end\":74316,\"start\":74264},{\"end\":74673,\"start\":74601},{\"end\":75031,\"start\":75026},{\"end\":75412,\"start\":75347},{\"end\":75837,\"start\":75821},{\"end\":76135,\"start\":76105},{\"end\":76394,\"start\":76374},{\"end\":76660,\"start\":76593},{\"end\":77058,\"start\":77035},{\"end\":77378,\"start\":77308},{\"end\":77849,\"start\":77819},{\"end\":78204,\"start\":78098},{\"end\":78539,\"start\":78525},{\"end\":78827,\"start\":78786},{\"end\":79158,\"start\":79152},{\"end\":79517,\"start\":79445},{\"end\":79940,\"start\":79848},{\"end\":80358,\"start\":80273},{\"end\":80813,\"start\":80770},{\"end\":81116,\"start\":81102},{\"end\":81497,\"start\":81392},{\"end\":81956,\"start\":81884},{\"end\":82279,\"start\":82223},{\"end\":82588,\"start\":82556},{\"end\":82901,\"start\":82876},{\"end\":83172,\"start\":83086},{\"end\":83406,\"start\":83386},{\"end\":83553,\"start\":83549},{\"end\":83776,\"start\":83745},{\"end\":84088,\"start\":84018},{\"end\":70795,\"start\":70730},{\"end\":71288,\"start\":71198},{\"end\":71742,\"start\":71699},{\"end\":72105,\"start\":72075},{\"end\":72512,\"start\":72440},{\"end\":73005,\"start\":72967},{\"end\":73457,\"start\":73424},{\"end\":73937,\"start\":73915},{\"end\":74316,\"start\":74264},{\"end\":74673,\"start\":74601},{\"end\":75031,\"start\":75026},{\"end\":75412,\"start\":75347},{\"end\":75837,\"start\":75821},{\"end\":76135,\"start\":76105},{\"end\":76394,\"start\":76374},{\"end\":76660,\"start\":76593},{\"end\":77058,\"start\":77035},{\"end\":77378,\"start\":77308},{\"end\":77849,\"start\":77819},{\"end\":78204,\"start\":78098},{\"end\":78539,\"start\":78525},{\"end\":78827,\"start\":78786},{\"end\":79158,\"start\":79152},{\"end\":79517,\"start\":79445},{\"end\":79940,\"start\":79848},{\"end\":80358,\"start\":80273},{\"end\":80813,\"start\":80770},{\"end\":81116,\"start\":81102},{\"end\":81497,\"start\":81392},{\"end\":81956,\"start\":81884},{\"end\":82279,\"start\":82223},{\"end\":82588,\"start\":82556},{\"end\":82901,\"start\":82876},{\"end\":83172,\"start\":83086},{\"end\":83406,\"start\":83386},{\"end\":83553,\"start\":83549},{\"end\":83776,\"start\":83745},{\"end\":84088,\"start\":84018},{\"end\":70795,\"start\":70730},{\"end\":71288,\"start\":71198},{\"end\":71742,\"start\":71699},{\"end\":72105,\"start\":72075},{\"end\":72512,\"start\":72440},{\"end\":73005,\"start\":72967},{\"end\":73457,\"start\":73424},{\"end\":73937,\"start\":73915},{\"end\":74316,\"start\":74264},{\"end\":74673,\"start\":74601},{\"end\":75031,\"start\":75026},{\"end\":75412,\"start\":75347},{\"end\":75837,\"start\":75821},{\"end\":76135,\"start\":76105},{\"end\":76394,\"start\":76374},{\"end\":76660,\"start\":76593},{\"end\":77058,\"start\":77035},{\"end\":77378,\"start\":77308},{\"end\":77849,\"start\":77819},{\"end\":78204,\"start\":78098},{\"end\":78539,\"start\":78525},{\"end\":78827,\"start\":78786},{\"end\":79158,\"start\":79152},{\"end\":79517,\"start\":79445},{\"end\":79940,\"start\":79848},{\"end\":80358,\"start\":80273},{\"end\":80813,\"start\":80770},{\"end\":81116,\"start\":81102},{\"end\":81497,\"start\":81392},{\"end\":81956,\"start\":81884},{\"end\":82279,\"start\":82223},{\"end\":82588,\"start\":82556},{\"end\":82901,\"start\":82876},{\"end\":83172,\"start\":83086},{\"end\":83406,\"start\":83386},{\"end\":83553,\"start\":83549},{\"end\":83776,\"start\":83745},{\"end\":84088,\"start\":84018}]"}}}, "year": 2023, "month": 12, "day": 17}