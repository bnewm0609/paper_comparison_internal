{"id": 265995886, "updated": "2023-12-10 18:03:03.782", "metadata": {"title": "Transformers: State-of-the-Art Natural Language Processing", "authors": "[{\"first\":\"Thomas\",\"last\":\"Wolf\",\"middle\":[]},{\"first\":\"Julien\",\"last\":\"Chaumond\",\"middle\":[]},{\"first\":\"Lysandre\",\"last\":\"Debut\",\"middle\":[]},{\"first\":\"Victor\",\"last\":\"Sanh\",\"middle\":[]},{\"first\":\"Clement\",\"last\":\"Delangue\",\"middle\":[]},{\"first\":\"Anthony\",\"last\":\"Moi\",\"middle\":[]},{\"first\":\"Pierric\",\"last\":\"Cistac\",\"middle\":[]},{\"first\":\"Morgan\",\"last\":\"Funtowicz\",\"middle\":[]},{\"first\":\"Joe\",\"last\":\"Davison\",\"middle\":[]},{\"first\":\"Sam\",\"last\":\"Shleifer\",\"middle\":[]},{\"first\":\"Remi\",\"last\":\"Louf\",\"middle\":[]},{\"first\":\"Patrick\",\"last\":\"von Platen\",\"middle\":[]},{\"first\":\"Tim\",\"last\":\"Rault\",\"middle\":[]},{\"first\":\"Yacine\",\"last\":\"Jernite\",\"middle\":[]},{\"first\":\"Teven\",\"last\":\"Le Scao\",\"middle\":[]},{\"first\":\"Sylvain\",\"last\":\"Gugger\",\"middle\":[]},{\"first\":\"Julien\",\"last\":\"Plu\",\"middle\":[]},{\"first\":\"Clara\",\"last\":\"Ma\",\"middle\":[]},{\"first\":\"Canwei\",\"last\":\"Shen\",\"middle\":[]},{\"first\":\"Mariama\",\"last\":\"Drame\",\"middle\":[]},{\"first\":\"Quentin\",\"last\":\"Lhoest\",\"middle\":[]},{\"first\":\"Alexander\",\"last\":\"Rush\",\"middle\":[]}]", "venue": "EMNLP", "journal": "Proceedings of the 2020 Conference on Empirical Methods in Natural Language Processing: System Demonstrations", "publication_date": {"year": 2020, "month": null, "day": null}, "abstract": "Recent progress in natural language processing has been driven by advances in both model architecture and model pretraining. Transformer architectures have facilitated building higher-capacity models and pretraining has made it possible to effectively utilize this capacity for a wide variety of tasks. Transformers is an open-source library with the goal of opening up these advances to the wider machine learning community. The library consists of carefully engineered state-of-the art Transformer architectures under a unified API. Backing this library is a curated collection of pretrained models made by and available for the community. Transformers is designed to be extensible by researchers, simple for practitioners, and fast and robust in industrial deployments. The library is available at https://github.com/huggingface/transformers.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "3098824823", "acl": "2020.emnlp-demos.6", "pubmed": null, "pubmedcentral": null, "dblp": "conf/emnlp/WolfDSCDMCRLFDS20", "doi": "10.18653/v1/2020.emnlp-demos.6"}}, "content": {"source": {"pdf_hash": "4e561318668f0ae190217ffe82bf44c9c33b9c0d", "pdf_src": "ACL", "pdf_uri": "[\"https://www.aclweb.org/anthology/2020.emnlp-demos.6.pdf\"]", "oa_url_match": true, "oa_info": {"license": "CCBY", "open_access_url": "https://www.aclweb.org/anthology/2020.emnlp-demos.6.pdf", "status": "HYBRID"}}, "grobid": {"id": "4bd3589cad07dbdc84fae1067ee3c425b3acee12", "type": "plain-text", "url": "s3://ai2-s2-science-parse-plus-prod/parse-results/s2orc_worker/4e561318668f0ae190217ffe82bf44c9c33b9c0d.txt", "contents": "\nTransformers: State-of-the-Art Natural Language Processing\nNovember 16-20, 2020\n\nThomas Wolf \nHugging Face\nBrooklynUSA\n\nLysandre Debut \nHugging Face\nBrooklynUSA\n\nVictor Sanh \nHugging Face\nBrooklynUSA\n\nJulien Chaumond \nHugging Face\nBrooklynUSA\n\nClement Delangue \nHugging Face\nBrooklynUSA\n\nAnthony Moi \nHugging Face\nBrooklynUSA\n\nPierric Cistac \nHugging Face\nBrooklynUSA\n\nTim Rault \nHugging Face\nBrooklynUSA\n\nR\u00e9mi Louf \nHugging Face\nBrooklynUSA\n\nMorgan Funtowicz \nHugging Face\nBrooklynUSA\n\nJoe Davison \nHugging Face\nBrooklynUSA\n\nSam Shleifer \nHugging Face\nBrooklynUSA\n\nPatrick Von Platen \nHugging Face\nBrooklynUSA\n\nClara Ma \nHugging Face\nBrooklynUSA\n\nYacine Jernite \nHugging Face\nBrooklynUSA\n\nJulien Plu \nHugging Face\nBrooklynUSA\n\nCanwen Xu \nHugging Face\nBrooklynUSA\n\nTeven Le Scao \nHugging Face\nBrooklynUSA\n\nSylvain Gugger \nHugging Face\nBrooklynUSA\n\nMariama Drame \nHugging Face\nBrooklynUSA\n\nQuentin Lhoest \nHugging Face\nBrooklynUSA\n\nAlexander M Rush \nHugging Face\nBrooklynUSA\n\nTransformers: State-of-the-Art Natural Language Processing\n\nProceedings of the 2020 EMNLP (Systems Demonstrations)\nthe 2020 EMNLP (Systems Demonstrations)November 16-20, 202038\nRecent progress in natural language processing has been driven by advances in both model architecture and model pretraining. Transformer architectures have facilitated building higher-capacity models and pretraining has made it possible to effectively utilize this capacity for a wide variety of tasks. Transformers is an open-source library with the goal of opening up these advances to the wider machine learning community. The library consists of carefully engineered stateof-the art Transformer architectures under a unified API. Backing this library is a curated collection of pretrained models made by and available for the community. Transformers is designed to be extensible by researchers, simple for practitioners, and fast and robust in industrial deployments. The library is available at https://github.com/ huggingface/transformers.\n\nIntroduction\n\nThe Transformer (Vaswani et al., 2017) has rapidly become the dominant architecture for natural language processing, surpassing alternative neural models such as convolutional and recurrent neural networks in performance for tasks in both natural language understanding and natural language generation. The architecture scales with training data and model size, facilitates efficient parallel training, and captures long-range sequence features.\n\nModel pretraining (McCann et al., 2017;Howard and Ruder, 2018;Devlin et al., 2018) allows models to be trained on generic corpora and subsequently be easily adapted to specific tasks with strong performance. The Transformer architecture is particularly conducive to pretraining on large text corpora, leading to major gains in accuracy on downstream tasks including text classification , language understanding (Liu et al., 2019b;Wang et al., , 2019, machine translation (Lample and Conneau, 2019a), coreference resolution (Joshi et al., 2019), commonsense inference (Bosselut et al., 2019), and summarization (Lewis et al., 2019) among others.\n\nThis advance leads to a wide range of practical challenges that must be addressed in order for these models to be widely utilized. The ubiquitous use of the Transformer calls for systems to train, analyze, scale, and augment the model on a variety of platforms. The architecture is used as a building block to design increasingly sophisticated extensions and precise experiments. The pervasive adoption of pretraining methods has led to the need to distribute, fine-tune, deploy, and compress the core pretrained models used by the community.\n\nTransformers is a library dedicated to supporting Transformer-based architectures and facilitating the distribution of pretrained models. At the core of the libary is an implementation of the Transformer which is designed for both research and production. The philosophy is to support industrial-strength implementations of popular model variants that are easy to read, extend, and deploy. On this foundation, the library supports the distribution and usage of a wide-variety of pretrained models in a centralized model hub. This hub supports users to compare different models with the same minimal API and to experiment with shared models on a variety of different tasks.\n\nTransformers is an ongoing effort maintained by the team of engineers and researchers at Hugging Face with support from a vibrant community of over 400 external contributors. The library is released under the Apache 2.0 license and is available on GitHub 1 . Detailed documentation and tutorials are available on Hugging Face's website 2 . \n\n\nRelated Work\n\nThe NLP and ML communities have a strong culture of building open-source research tools. The structure of Transformers is inspired by the pioneering tensor2tensor library (Vaswani et al., 2018) and the original source code for BERT (Devlin et al., 2018), both from Google Research. The concept of providing easy caching for pretrained models stemmed from AllenNLP . The library is also closely related to neural translation and language modeling systems, such as Fairseq (Ott et al., 2019), Open-NMT (Klein et al., 2017), Texar , Megatron-LM (Shoeybi et al., 2019), and Marian NMT (Junczys-Dowmunt et al., 2018). Building on these elements, Transformers adds extra user-facing features to allow for easy downloading, caching, and fine-tuning of the models as well as seamless transition to production. Transformers maintains some compatibility with these libraries, most directly including a tool for performing inference using models from Marian NMT and Google's BERT.\n\nThere is a long history of easy-to-use, userfacing libraries for general-purpose NLP. Two core libraries are NLTK (Loper andBird, 2002) andStanford CoreNLP (Manning et al., 2014), which collect a variety of different approaches to NLP in a single package. More recently, general-purpose, open-source libraries have focused primarily on machine learning for a variety of NLP tasks, these include Spacy (Honnibal and Montani, 2017), Al-lenNLP , flair (Akbik et al., 2019), and Stanza (Qi et al., 2020). Transformers provides similar functionality as these libraries. Additionally, each of these libraries now uses the Transformers library and model hub as a low-level framework.\n\nSince Transformers provides a hub for NLP models, it is also related to popular model hubs including Torch Hub and TensorFlow Hub which collect framework-specific model parameters for easy use. Unlike these hubs, Transformers is domain-specific which allows the system to provide automatic support for model analysis, usage, deployment, benchmarking, and easy replicability.\n\n\nLibrary Design\n\nTransformers is designed to mirror the standard NLP machine learning model pipeline: process data, apply a model, and make predictions. Although the library includes tools facilitating training and development, in this technical report we focus on the core modeling specifications. For complete details about the features of the library refer to the documentation available on https:\n//huggingface.co/transformers/.\nEvery model in the library is fully defined by three building blocks shown in the diagram in Figure 2: (a) a tokenizer, which converts raw text to sparse index encodings, (b) a transformer, which transforms sparse indices to contextual embeddings, and (c) a head, which uses contextual embeddings to make a task-specific prediction. Most user needs can be addressed with these three components.\n\nTransformers Central to the library are carefully tested implementations of Transformer architecture variants which are widely used in NLP. The full list of currently implemented architectures is shown in Figure 2 (Left). While each of these architectures SQuAD, Natural Questions Token Classification\n\nx 1:N y 1:N \u2208 C N NER, Tagging OntoNotes, WNUT Multiple Choice (Bottom) Each model uses a specific Tokenizer either implemented in Python or in Rust. These often differ in small details, but need to be in sync with pretraining. (Left) Transformer architectures specialized for different tasks, e.g. understanding versus generation, or for specific use-cases, e.g. speed, image+text. (Top) heads allow a Transformer to be used for different tasks. Here we assume the input token sequence is x 1:N from a vocabulary V, and y represents different possible outputs, possibly from a class set C. Example datasets represent a small subset of example code distributed with the library.\nx 1:N , X y \u2208 X Text Selection SWAG, ARC Masked LM x 1:N \\n x n \u2208 V Pretraining Wikitext, C4 Conditional Generation x 1:N y 1:M \u2208 V M Translation,\nshares the same multi-headed attention core, there are significant differences between them including positional representations, masking, padding, and the use of sequence-to-sequence design. Additionally, various models are built to target different applications of NLP such as understanding, generation, and conditional generation, plus specialized use cases such as fast inference or multi-lingual applications.\n\nPractically, all models follow the same hierarchy of abstraction: a base class implements the model's computation graph from an encoding (projection on the embedding matrix) through the series of selfattention layers to the final encoder hidden states. The base class is specific to each model and closely follows the model's original implementation which gives users the flexibility to easily dissect the inner workings of each individual architecture. In most cases, each model is implemented in a single file to enable ease of extensibility.\n\nWherever possible, different architectures follow the same API allowing users to switch easily between different models. A set of Auto classes provides a unified API that enables very fast switching between models and even between frameworks. These classes automatically instantiate with the configuration specified by the user-specified pretrained model.\n\nTokenizers A critical NLP-specific aspect of the library is the implementations of the tokenizers necessary to use each model. Tokenizer classes (each inheriting from a common base class) can either be instantiated from a corresponding pretrained model or can be configured manually. These classes store the vocabulary token-to-index map for their corresponding model and handle the encoding and decoding of input sequences according to a model's specific tokenization process. The tokenizers implemented are shown in Figure 2 (Right). Users can easily modify tokenizer with interfaces to add additional token mappings, special tokens (such as classification or separation tokens), or otherwise resize the vocabulary.\n\nTokenizers can also implement additional useful features for the users. These range from token type indices in the case of sequence classification to maximum length sequence truncating taking into account the added model-specific special tokens (most pretrained Transformer models have a maximum sequence length).\n\nFor training on very large datasets, Python-based tokenization is often undesirably slow. In the most recent release, Transformers switched its implementation to use a highly-optimized tokenization library by default. This low-level library, available at https://github.com/huggingface/ tokenizers, is written in Rust to speed up the tokenization procedure both during training and deployment.\n\nHeads Each Transformer can be paired with one out of several ready-implemented heads with outputs amenable to common types of tasks. These heads are implemented as additional wrapper classes on top of the base class, adding a specific output layer, and optional loss function, on top of the Transformer's contextual embeddings. The full set of implemented heads are shown in Figure 2 (Top). These classes follow a similar naming pattern: XXXForSequenceClassification where XXX is the name of the model and can be used for adaptation (fine-tuning) or pretraining. Some heads, such as conditional generation, support extra functionality like sampling and beam search. For pretrained models, we release the heads used to pretrain the model itself. For instance, for BERT we release the language modeling and next sentence prediction heads which allows easy for adaptation using the pretraining objectives. We also make it easy for users to utilize the same core Transformer parameters with a variety of other heads for finetuning. While each head can be used generally, the library also includes a collection of examples that show each head on real problems. These examples demonstrate how a pretrained model can be adapted with a given head to achieve state-of-theart results on a large variety of NLP tasks.\n\n\nCommunity Model Hub\n\nTransformers aims to facilitate easy use and distribution of pretrained models. Inherently this is a community process; a single pretraining run facilitates fine-tuning on many specific tasks. The Model Hub makes it simple for any end-user to access a model for use with their own data. This hub now contains 2,097 user models, both pretrained and fine-tuned, from across the community. Figure 1 shows the increase and distribution of popular transformers over time. While core models like BERT and GPT-2 continue to be popular, other specialized models including DistilBERT (Sanh et al., 2019), which was developed for the library, are now widely downloaded by the community.\n\nThe user interface of the Model Hub is designed to be simple and open to the community. To upload a model, any user can sign up for an account and use a command-line interface to produce an archive consisting a tokenizer, transformer, and head. This bundle may be a model trained through the library or converted from a checkpoint of other popular training tools. These models are then stored and given a canonical name which a user can use to download, cache, and run the model either for finetuning or inference in two lines of code. To load FlauBERT ), a BERT model pretrained on a French training corpus, the command is:\n1 tknzr = AutoTokenizer.from_pretrained( 2 \"flaubert/flaubert_base_uncased\") 3 model = AutoModel.from_pretrained( 4 \"flaubert/flaubert_base_uncased\")\nWhen a model is uploaded to the Model Hub, it is automatically given a landing page describing its core properties, architecture, and use cases. Additional model-specific metadata can be provided via a model card (Mitchell et al., 2018) that describes properties of its training, a citation to the work, datasets used during pretraining, and any caveats about known biases in the model and its predictions. An example model card is shown in Figure 3 (Left).\n\nSince the Model Hub is specific to transformerbased models, we can target use cases that would be difficult for more general model collections. For example, because each uploaded model includes metadata concerning its structure, the model page can include live inference that allows users to experiment with output of models on a real data. Community Case Studies The Model Hub highlights how Transformers is used by a variety of different community stakeholders. We summarize three specific observed use-cases in practice. We highlight specific systems developed by users with different goals following the architect, trainer, and end-user distinction of Strobelt et al. (2017): Case 1: Model Architects AllenAI, a major NLP research lab, developed a new pretrained model for improved extraction from biomedical texts called SciBERT (Beltagy et al., 2019). They were able to train the model utilizing data from PubMed to produce a masked language model with state-ofthe-art results on targeted text. They then used the Model Hub to distribute the model and promote it as part of their CORD -COVID-19 challenge, making it trivial for the community to use. Case 2: Task Trainers Researchers at NYU were interested in developing a test bed for the performance of Transformers on a variety of different semantic recognition tasks. Their framework Jiant (Pruksachatkun et al., 2020) allows them to experiment with different ways of pretraining models and comparing their outputs. They used the Transformers API as a generic front-end and performed fine-tuning on a variety of different models, leading to research on the structure of BERT (Tenney et al., 2019). Case 3: Application Users Plot.ly, a company focused on user dashboards and analytics, was interested in deploying a model for automatic document summarization. They wanted an approach that scaled well and was simple to deploy, but had no need to train or fine-tune the model. They were able to search the Model Hub and find DistilBART, a pretrained and fine-tuned summarization model designed for accurate, fast inference. They were able to run and deploy the model directly from the hub with no required research or ML expertise.\n\n\nDeployment\n\nAn increasingly important goal of Transformers is to make it easy to efficiently deploy model to production. Different users have different production needs, and deployment often requires solving significantly different challenges than training. The library thereforce allows for several different strategies for production deployment.\n\nOne core propery of the libary is that models are available both in PyTorch and TensorFlow, and there is interoperability between both frameworks. A model trained in one of frameworks can be saved through standard serialization and be reloaded from the saved files in the other framework seamlessly. This makes it particularly easy to switch from one framework to the other one along the model lifetime (training, serving, etc.).\n\nEach framework has deployment recommendations. For example, in PyTorch, models are compatible with TorchScript, an intermediate representation of a PyTorch model that can then be run either in Python in a more efficient way, or in a highperformance environment such as C++. Fine-tuned models can thus be exported to production-friendly environment, and run through TorchServing. Ten-sorFlow includes several serving options within its ecosystem, and these can be used directly.\n\nTransformers can also export models to intermediate neural network formats for further compila- tion. It supports converting models to the Open Neural Network Exchange format (ONNX) for deployment. Not only does this allow the model to be run in a standardized interoperable format, but also leads to significant speed-ups. Figure 4 shows experiments run in collaboration with the ONNX team to optimize BERT, RoBERTa, and GPT-2 from the Transformers library. Using this intermediate format, ONNX was able to achieve nearly a 4x speedup on this model. The team is also experimenting with other promising intermediate formats such as JAX/XLA (Bradbury et al., 2018) and TVM (Chen et al., 2018).\n\nFinally, as Transformers become more widely used in all NLP applications, it is increasingly important to deploy to edge devices such as phones or home electronics. Models can use adapters to convert models to CoreML weights that are suitable to be embedded inside a iOS application, to enable on-the-edge machine learning. Code is also made available 3 . Similar methods can be used for Android devices.\n\n\nConclusion\n\nAs Transformer and pretraining play larger roles in NLP, it is important for these models to be accessible to researchers and end-users. Transformers is an open-source library and community designed to facilitate users to access large-scale pretrained models, to build and experiment on top of them, and to deploy them in downstream tasks with stateof-the-art performance. Transformers has gained significant organic traction since its release and is set up to continue to provide core infrastructure while helping to facilitate access to new models.\n\nFigure 1 :\n1Average daily unique downloads of the most downloaded pretrained models, Oct. 2019 to May 2020.\n\nFigure 2 :\n2The Transformers library. (Diagram-Right) Each model is made up of a Tokenizer, Transformer, and Head. The model is pretrained with a fixed head and can then be further fine-tuned with alternate heads for different tasks.\n\nFigure 3 :\n3Transformers Model Hub. (Left) Example of a model page and model card for SciBERT (Beltagy et al., 2019), a pretrained model targeting extraction from scientific literature submitted by a community contributor. (Right) Example of an automatic inference widget for the pretrained BART (Lewis et al., 2019) model for summarization. Users can enter arbitrary text and a full version of the model is deployed on the fly to produce a summary.\n\n\nFigure 3 (Right) shows an example of the model page with live inference. Additionally, model pages include links to other model-specific tools like benchmarking and visualizations. For example, model pages can link to exBERT (Hoover et al., 2019), a Transformer visualization library.\n\nFigure 4 :\n4Experiments with Transformers inference in collaboration with ONNX.\nhttps://github.com/huggingface/ transformers 2 https://huggingface.co/transformers/\nhttps://github.com/huggingface/ swift-coreml-transformers\n\nFlair: An easy-to-use framework for state-of-the-art nlp. Alan Akbik, Tanja Bergmann, Duncan Blythe, Kashif Rasul, Stefan Schweter, Roland Vollgraf, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics (Demonstrations). the 2019 Conference of the North American Chapter of the Association for Computational Linguistics (Demonstrations)aclweb.orgAlan Akbik, Tanja Bergmann, Duncan Blythe, Kashif Rasul, Stefan Schweter, and Roland Vollgraf. 2019. Flair: An easy-to-use framework for state-of-the-art nlp. In Proceedings of the 2019 Conference of the North American Chapter of the Association for Com- putational Linguistics (Demonstrations), pages 54- 59. aclweb.org.\n\nSciB-ERT: A pretrained language model for scientific text. Iz Beltagy, Kyle Lo, Arman Cohan, Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP). the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP)Iz Beltagy, Kyle Lo, and Arman Cohan. 2019. SciB- ERT: A pretrained language model for scientific text. In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Lan- guage Processing (EMNLP-IJCNLP), pages 3615- 3620.\n\nLongformer: The Long-Document transformer. Iz Beltagy, E Matthew, Arman Peters, Cohan, Iz Beltagy, Matthew E Peters, and Arman Cohan. 2020. Longformer: The Long-Document transformer.\n\nComet: Commonsense transformers for automatic knowledge graph construction. Antoine Bosselut, Hannah Rashkin, Maarten Sap, Chaitanya Malaviya, \u00c7 Asli, Yejin Choi, ACL. Antoine Bosselut, Hannah Rashkin, Maarten Sap, Chai- tanya Malaviya, Asli \u00c7 elikyilmaz, and Yejin Choi. 2019. Comet: Commonsense transformers for auto- matic knowledge graph construction. In ACL.\n\nJames Bradbury, Roy Frostig, Peter Hawkins, Matthew James Johnson, Chris Leary, Dougal Maclaurin, Skye Wanderman-Milne, JAX: composable transformations of Python+NumPy programs. James Bradbury, Roy Frostig, Peter Hawkins, Matthew James Johnson, Chris Leary, Dou- gal Maclaurin, and Skye Wanderman-Milne. 2018. JAX: composable transformations of Python+NumPy programs.\n\n{TVM}: An automated end-to-end optimizing compiler for deep learning. Tianqi Chen, Thierry Moreau, Ziheng Jiang, Lianmin Zheng, Eddie Yan, Haichen Shen, Meghan Cowan, Leyuan Wang, Yuwei Hu, Luis Ceze, 13th {USENIX} Symposium on Operating Systems Design and Implementation ({OSDI} 18). Tianqi Chen, Thierry Moreau, Ziheng Jiang, Lianmin Zheng, Eddie Yan, Haichen Shen, Meghan Cowan, Leyuan Wang, Yuwei Hu, Luis Ceze, et al. 2018. {TVM}: An automated end-to-end optimizing com- piler for deep learning. In 13th {USENIX} Sympo- sium on Operating Systems Design and Implementa- tion ({OSDI} 18), pages 578-594.\n\nELECTRA: Pretraining text encoders as discriminators rather than generators. Kevin Clark, Minh-Thang Luong, V Quoc, Christopher D Le, Manning, Kevin Clark, Minh-Thang Luong, Quoc V Le, and Christopher D Manning. 2020. ELECTRA: Pre- training text encoders as discriminators rather than generators.\n\nTransformer-XL: Attentive language models beyond a Fixed. Zihang Dai, Zhilin Yang, Yiming Yang, Jaime Carbonell, V Quoc, Ruslan Le, Salakhutdinov, Length contextZihang Dai, Zhilin Yang, Yiming Yang, Jaime Car- bonell, Quoc V Le, and Ruslan Salakhutdinov. 2019. Transformer-XL: Attentive language models beyond a Fixed-Length context.\n\nBERT: Pre-training of deep bidirectional transformers for language understanding. Jacob Devlin, Ming-Wei Chang, Kenton Lee, Kristina Toutanova, Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. 2018. BERT: Pre-training of deep bidirectional transformers for language under- standing.\n\nAllenNLP: A deep semantic natural language processing platform. Matt Gardner, Joel Grus, Mark Neumann, Oyvind Tafjord, Pradeep Dasigi, Nelson Liu, Matthew Peters, Michael Schmitz, Luke Zettlemoyer, Matt Gardner, Joel Grus, Mark Neumann, Oyvind Tafjord, Pradeep Dasigi, Nelson Liu, Matthew Pe- ters, Michael Schmitz, and Luke Zettlemoyer. 2018. AllenNLP: A deep semantic natural language pro- cessing platform.\n\n2017. spacy 2: Natural language understanding with bloom embeddings, convolutional neural networks and incremental parsing. Matthew Honnibal, Ines Montani, 7To appearMatthew Honnibal and Ines Montani. 2017. spacy 2: Natural language understanding with bloom embed- dings, convolutional neural networks and incremen- tal parsing. To appear, 7(1).\n\nexBERT: A visual analysis tool to explore learned representations in transformers models. Benjamin Hoover, Hendrik Strobelt, Sebastian Gehrmann, Benjamin Hoover, Hendrik Strobelt, and Sebastian Gehrmann. 2019. exBERT: A visual analysis tool to explore learned representations in transformers mod- els.\n\nUniversal language model fine-tuning for text classification. Jeremy Howard, Sebastian Ruder, ACL. Jeremy Howard and Sebastian Ruder. 2018. Universal language model fine-tuning for text classification. In ACL.\n\nTexar: A modularized, versatile, and extensible toolkit for text generation. Zhiting Hu, Haoran Shi, Bowen Tan, Wentao Wang, Zichao Yang, Tiancheng Zhao, Junxian He, Lianhui Qin, Di Wang, Xuezhe Ma, Zhengzhong Liu, Xiaodan Liang, Wangrong Zhu, Devendra Singh Sachan, Eric P Xing, Zhiting Hu, Haoran Shi, Bowen Tan, Wentao Wang, Zichao Yang, Tiancheng Zhao, Junxian He, Lianhui Qin, Di Wang, Xuezhe Ma, Zhengzhong Liu, Xiao- dan Liang, Wangrong Zhu, Devendra Singh Sachan, and Eric P Xing. 2018. Texar: A modularized, ver- satile, and extensible toolkit for text generation.\n\nMandar Joshi, Danqi Chen, Yinhan Liu, S Daniel, Luke Weld, Omer Zettlemoyer, Levy, arXiv:1907.10529Spanbert: Improving pre-training by representing and predicting spans. arXiv preprintMandar Joshi, Danqi Chen, Yinhan Liu, Daniel S Weld, Luke Zettlemoyer, and Omer Levy. 2019. Spanbert: Improving pre-training by representing and predict- ing spans. arXiv preprint arXiv:1907.10529.\n\nMarcin Junczys-Dowmunt, Roman Grundkiewicz, Tomasz Dwojak, Hieu Hoang, Kenneth Heafield, Tom Neckermann, Frank Seide, Ulrich Germann, Alham Fikri Aji, Nikolay Bogoychev, Andr\u00e9 F T Martins, and Alexandra Birch. Marian: Fast neural machine translation in c++Marcin Junczys-Dowmunt, Roman Grundkiewicz, Tomasz Dwojak, Hieu Hoang, Kenneth Heafield, Tom Neckermann, Frank Seide, Ulrich Germann, Al- ham Fikri Aji, Nikolay Bogoychev, Andr\u00e9 F T Mar- tins, and Alexandra Birch. 2018. Marian: Fast neu- ral machine translation in c++.\n\nSupervised multimodal bitransformers for classifying images and text. Douwe Kiela, Suvrat Bhooshan, Hamed Firooz, and Davide TestuggineDouwe Kiela, Suvrat Bhooshan, Hamed Firooz, and Davide Testuggine. 2019. Supervised multimodal bitransformers for classifying images and text.\n\nReformer: The efficient transformer. Nikita Kitaev, \u0141ukasz Kaiser, Anselm Levskaya, Nikita Kitaev, \u0141ukasz Kaiser, and Anselm Levskaya. 2020. Reformer: The efficient transformer.\n\nOpenNMT: Opensource toolkit for neural machine translation. Guillaume Klein, Yoon Kim, Yuntian Deng, Jean Senellart, Alexander Rush, Proceedings of ACL 2017, System Demonstrations. ACL 2017, System DemonstrationsVancouver, CanadaAssociation for Computational LinguisticsGuillaume Klein, Yoon Kim, Yuntian Deng, Jean Senel- lart, and Alexander Rush. 2017. OpenNMT: Open- source toolkit for neural machine translation. In Proceedings of ACL 2017, System Demonstrations, pages 67-72, Vancouver, Canada. Association for Computational Linguistics.\n\nCrosslingual language model pretraining. Guillaume Lample, Alexis Conneau, In NeurIPSGuillaume Lample and Alexis Conneau. 2019a. Cross- lingual language model pretraining. In NeurIPS.\n\nCrosslingual language model pretraining. Guillaume Lample, Alexis Conneau, Guillaume Lample and Alexis Conneau. 2019b. Cross- lingual language model pretraining.\n\nALBERT: A lite BERT for self-supervised learning of language representations. Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, Radu Soricut, Zhenzhong Lan, Mingda Chen, Sebastian Goodman, Kevin Gimpel, Piyush Sharma, and Radu Soricut. 2019. ALBERT: A lite BERT for self-supervised learning of language representations.\n\nFlaubert: Unsupervised language model pre-training for french. Hang Le, Lo\u00efc Vial, Jibril Frej, Vincent Segonne, Maximin Coavoux, Benjamin Lecouteux, Alexandre Allauzen, Beno\u00eet Crabb\u00e9, Laurent Besacier, Didier Schwab, Proceedings of The 12th Language Resources and Evaluation Conference. The 12th Language Resources and Evaluation ConferenceMarseille, FranceEuropean Language Resources AssociationHang Le, Lo\u00efc Vial, Jibril Frej, Vincent Segonne, Max- imin Coavoux, Benjamin Lecouteux, Alexandre Al- lauzen, Beno\u00eet Crabb\u00e9, Laurent Besacier, and Didier Schwab. 2020. Flaubert: Unsupervised language model pre-training for french. In Proceedings of The 12th Language Resources and Evaluation Con- ference, pages 2479-2490, Marseille, France. Euro- pean Language Resources Association.\n\nBART: Denoising Sequence-to-Sequence pretraining for natural language generation, translation, and comprehension. Mike Lewis, Yinhan Liu, Naman Goyal ; Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, Luke Zettlemoyer, Mike Lewis, Yinhan Liu, Naman Goyal, Mar- jan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Ves Stoyanov, and Luke Zettlemoyer. 2019. BART: Denoising Sequence-to-Sequence pre- training for natural language generation, translation, and comprehension.\n\n. Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, Veselin Stoyanov, RoBERTa: A robustly optimized BERT pretraining approachYinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Man- dar Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke Zettlemoyer, and Veselin Stoyanov. 2019a. RoBERTa: A robustly optimized BERT pretraining approach.\n\nYinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Mandar S Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke S Zettlemoyer, Veselin Stoyanov, abs/1907.11692Roberta: A robustly optimized bert pretraining approach. Yinhan Liu, Myle Ott, Naman Goyal, Jingfei Du, Man- dar S. Joshi, Danqi Chen, Omer Levy, Mike Lewis, Luke S. Zettlemoyer, and Veselin Stoyanov. 2019b. Roberta: A robustly optimized bert pretraining ap- proach. ArXiv, abs/1907.11692.\n\nNLTK: The natural language toolkit. Edward Loper, Steven Bird, Edward Loper and Steven Bird. 2002. NLTK: The nat- ural language toolkit.\n\nThe stanford CoreNLP natural language processing toolkit. D Christopher, Mihai Manning, John Surdeanu, Jenny Rose Bauer, Steven Finkel, David Bethard, Mc-Closky, Proceedings of 52nd annual meeting of the association for computational linguistics: system demonstrations. 52nd annual meeting of the association for computational linguistics: system demonstrationsaclweb.orgChristopher D Manning, Mihai Surdeanu, John Bauer, Jenny Rose Finkel, Steven Bethard, and David Mc- Closky. 2014. The stanford CoreNLP natural lan- guage processing toolkit. In Proceedings of 52nd annual meeting of the association for computational linguistics: system demonstrations, pages 55-60. aclweb.org.\n\nLearned in translation: Contextualized word vectors. Bryan Mccann, James Bradbury, Caiming Xiong, Richard Socher ; I Guyon, U V Luxburg, S Bengio, H Wallach, Fergus, R Vishwanathan, Garnett, Advances in Neural Information Processing Systems. Curran Associates, Inc30Bryan McCann, James Bradbury, Caiming Xiong, and Richard Socher. 2017. Learned in translation: Con- textualized word vectors. In I Guyon, U V Luxburg, S Bengio, H Wallach, R Fergus, S Vishwanathan, and R Garnett, editors, Advances in Neural Informa- tion Processing Systems 30, pages 6294-6305. Cur- ran Associates, Inc.\n\nModel cards for model reporting. Margaret Mitchell, Simone Wu, Andrew Zaldivar, Parker Barnes, Lucy Vasserman, Ben Hutchinson, Elena Spitzer, Inioluwa Deborah Raji, and Timnit GebruMargaret Mitchell, Simone Wu, Andrew Zaldivar, Parker Barnes, Lucy Vasserman, Ben Hutchinson, Elena Spitzer, Inioluwa Deborah Raji, and Timnit Gebru. 2018. Model cards for model reporting.\n\nfairseq: A fast, extensible toolkit for sequence modeling. Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, Michael Auli, Myle Ott, Sergey Edunov, Alexei Baevski, Angela Fan, Sam Gross, Nathan Ng, David Grangier, and Michael Auli. 2019. fairseq: A fast, extensible toolkit for sequence modeling.\n\n. E Matthew, Mark Peters, Mohit Neumann, Matt Iyyer, Christopher Gardner, Kenton Clark, Luke Lee, Zettlemoyer, Deep contextualized word representationsMatthew E Peters, Mark Neumann, Mohit Iyyer, Matt Gardner, Christopher Clark, Kenton Lee, and Luke Zettlemoyer. 2018. Deep contextualized word repre- sentations.\n\nYada Pruksachatkun, Phil Yeres, Haokun Liu, Jason Phang, Alex Phu Mon Htut, Ian Wang, Samuel R Tenney, Bowman, arXiv:2003.02249jiant: A software toolkit for research on general-purpose text understanding models. arXiv preprintYada Pruksachatkun, Phil Yeres, Haokun Liu, Jason Phang, Phu Mon Htut, Alex Wang, Ian Tenney, and Samuel R Bowman. 2020. jiant: A software toolkit for research on general-purpose text understanding models. arXiv preprint arXiv:2003.02249.\n\nStanza: A python natural language processing toolkit for many human languages. Peng Qi, Yuhao Zhang, Yuhui Zhang, Jason Bolton, Christopher D Manning, Peng Qi, Yuhao Zhang, Yuhui Zhang, Jason Bolton, and Christopher D Manning. 2020. Stanza: A python natural language processing toolkit for many human languages.\n\nLanguage models are unsupervised multitask learners. Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, OpenAI Blog. 189Alec Radford, Jeffrey Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. 2019. Language models are unsupervised multitask learners. OpenAI Blog, 1(8):9.\n\nExploring the limits of transfer learning with a unified Text-to-Text transformer. Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J Liu, Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J Liu. 2019. Exploring the limits of transfer learning with a unified Text-to-Text trans- former.\n\nDistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter. Victor Sanh, Lysandre Debut, Julien Chaumond, Thomas Wolf, Victor Sanh, Lysandre Debut, Julien Chaumond, and Thomas Wolf. 2019. DistilBERT, a distilled version of BERT: smaller, faster, cheaper and lighter.\n\nMegatron-lm: Training multi-billion parameter language models using gpu model parallelism. Mohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick Legresley, Jared Casper, Bryan Catanzaro, arXiv:1909.08053arXiv preprintMohammad Shoeybi, Mostofa Patwary, Raul Puri, Patrick LeGresley, Jared Casper, and Bryan Catan- zaro. 2019. Megatron-lm: Training multi-billion parameter language models using gpu model paral- lelism. arXiv preprint arXiv:1909.08053.\n\nLstmvis: A tool for visual analysis of hidden state dynamics in recurrent neural networks. Hendrik Strobelt, Sebastian Gehrmann, Hanspeter Pfister, Alexander M Rush, IEEE transactions on visualization and computer graphics. 241Hendrik Strobelt, Sebastian Gehrmann, Hanspeter Pfis- ter, and Alexander M Rush. 2017. Lstmvis: A tool for visual analysis of hidden state dynamics in recur- rent neural networks. IEEE transactions on visual- ization and computer graphics, 24(1):667-676.\n\nBert rediscovers the classical nlp pipeline. Ian Tenney, Dipanjan Das, Ellie Pavlick, ACL. Ian Tenney, Dipanjan Das, and Ellie Pavlick. 2019. Bert rediscovers the classical nlp pipeline. In ACL.\n\n. Ashish Vaswani, Samy Bengio, Eugene Brevdo, Francois Chollet, Aidan N Gomez, Stephan Gouws, Llion Jones, \u0141ukasz Kaiser, Nal Kalchbrenner, Niki Parmar, Ryan Sepassi, Noam Shazeer, Jakob Uszkoreit, Tensor2tensor for neural machine translation. CoRR, abs/1803.07416Ashish Vaswani, Samy Bengio, Eugene Brevdo, Fran- cois Chollet, Aidan N. Gomez, Stephan Gouws, Llion Jones, \u0141ukasz Kaiser, Nal Kalchbrenner, Niki Parmar, Ryan Sepassi, Noam Shazeer, and Jakob Uszkoreit. 2018. Tensor2tensor for neural machine translation. CoRR, abs/1803.07416.\n\nAttention is all you need. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Ukasz Kaiser, Illia Polosukhin ; I Guyon, U V Luxburg, S Bengio, H Wallach, Fergus, R Vishwanathan, Garnett, Advances in Neural Information Processing Systems. Curran Associates, Inc30Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141 Ukasz Kaiser, and Illia Polosukhin. 2017. Attention is all you need. In I Guyon, U V Luxburg, S Bengio, H Wallach, R Fergus, S Vishwanathan, and R Gar- nett, editors, Advances in Neural Information Pro- cessing Systems 30, pages 5998-6008. Curran Asso- ciates, Inc.\n\nSuperglue: A stickier benchmark for general-purpose language understanding systems. Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, Samuel R Bowman, abs/1905.00537ArXiv. Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel R. Bowman. 2019. Superglue: A stickier benchmark for general-purpose language un- derstanding systems. ArXiv, abs/1905.00537.\n\nGlue: A multi-task benchmark and analysis platform for natural language understanding. Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, Samuel R Bowman, ICLR. Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel R. Bowman. 2018. Glue: A multi-task benchmark and analysis platform for natural language understanding. In ICLR.\n\nXlnet: Generalized autoregressive pretraining for language understanding. Zhilin Yang, Zihang Dai, Yiming Yang, Jaime G Carbonell, Ruslan Salakhutdinov, V Quoc, Le, abs/1906.08237ArXiv. Zhilin Yang, Zihang Dai, Yiming Yang, Jaime G. Car- bonell, Ruslan Salakhutdinov, and Quoc V. Le. 2019. Xlnet: Generalized autoregressive pretraining for language understanding. ArXiv, abs/1906.08237.\n", "annotations": {"author": "[{\"end\":120,\"start\":82},{\"end\":162,\"start\":121},{\"end\":201,\"start\":163},{\"end\":244,\"start\":202},{\"end\":288,\"start\":245},{\"end\":327,\"start\":289},{\"end\":369,\"start\":328},{\"end\":406,\"start\":370},{\"end\":443,\"start\":407},{\"end\":487,\"start\":444},{\"end\":526,\"start\":488},{\"end\":566,\"start\":527},{\"end\":612,\"start\":567},{\"end\":648,\"start\":613},{\"end\":690,\"start\":649},{\"end\":728,\"start\":691},{\"end\":765,\"start\":729},{\"end\":806,\"start\":766},{\"end\":848,\"start\":807},{\"end\":889,\"start\":849},{\"end\":931,\"start\":890},{\"end\":975,\"start\":932}]", "publisher": null, "author_last_name": "[{\"end\":93,\"start\":89},{\"end\":135,\"start\":130},{\"end\":174,\"start\":170},{\"end\":217,\"start\":209},{\"end\":261,\"start\":253},{\"end\":300,\"start\":297},{\"end\":342,\"start\":336},{\"end\":379,\"start\":374},{\"end\":416,\"start\":412},{\"end\":460,\"start\":451},{\"end\":499,\"start\":492},{\"end\":539,\"start\":531},{\"end\":585,\"start\":575},{\"end\":621,\"start\":619},{\"end\":663,\"start\":656},{\"end\":701,\"start\":698},{\"end\":738,\"start\":736},{\"end\":779,\"start\":772},{\"end\":821,\"start\":815},{\"end\":862,\"start\":857},{\"end\":904,\"start\":898},{\"end\":948,\"start\":944}]", "author_first_name": "[{\"end\":88,\"start\":82},{\"end\":129,\"start\":121},{\"end\":169,\"start\":163},{\"end\":208,\"start\":202},{\"end\":252,\"start\":245},{\"end\":296,\"start\":289},{\"end\":335,\"start\":328},{\"end\":373,\"start\":370},{\"end\":411,\"start\":407},{\"end\":450,\"start\":444},{\"end\":491,\"start\":488},{\"end\":530,\"start\":527},{\"end\":574,\"start\":567},{\"end\":618,\"start\":613},{\"end\":655,\"start\":649},{\"end\":697,\"start\":691},{\"end\":735,\"start\":729},{\"end\":771,\"start\":766},{\"end\":814,\"start\":807},{\"end\":856,\"start\":849},{\"end\":897,\"start\":890},{\"end\":941,\"start\":932},{\"end\":943,\"start\":942}]", "author_affiliation": "[{\"end\":119,\"start\":95},{\"end\":161,\"start\":137},{\"end\":200,\"start\":176},{\"end\":243,\"start\":219},{\"end\":287,\"start\":263},{\"end\":326,\"start\":302},{\"end\":368,\"start\":344},{\"end\":405,\"start\":381},{\"end\":442,\"start\":418},{\"end\":486,\"start\":462},{\"end\":525,\"start\":501},{\"end\":565,\"start\":541},{\"end\":611,\"start\":587},{\"end\":647,\"start\":623},{\"end\":689,\"start\":665},{\"end\":727,\"start\":703},{\"end\":764,\"start\":740},{\"end\":805,\"start\":781},{\"end\":847,\"start\":823},{\"end\":888,\"start\":864},{\"end\":930,\"start\":906},{\"end\":974,\"start\":950}]", "title": "[{\"end\":59,\"start\":1},{\"end\":1034,\"start\":976}]", "venue": "[{\"end\":1090,\"start\":1036}]", "abstract": "[{\"end\":1998,\"start\":1153}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b41\"},\"end\":2052,\"start\":2030},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":2500,\"start\":2479},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":2523,\"start\":2500},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2543,\"start\":2523},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":2891,\"start\":2872},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":2910,\"start\":2891},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2959,\"start\":2932},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":3004,\"start\":2984},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3051,\"start\":3028},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":3091,\"start\":3071},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":4875,\"start\":4853},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4935,\"start\":4914},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":5171,\"start\":5153},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5202,\"start\":5182},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":5246,\"start\":5224},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":5293,\"start\":5263},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":5777,\"start\":5767},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":5792,\"start\":5777},{\"end\":5831,\"start\":5792},{\"end\":6082,\"start\":6054},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6122,\"start\":6102},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":6152,\"start\":6135},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":13337,\"start\":13318},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":14432,\"start\":14409},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":15333,\"start\":15311},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":15511,\"start\":15489},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":16033,\"start\":16005},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":16311,\"start\":16290},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":18769,\"start\":18746},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":18797,\"start\":18778}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":19878,\"start\":19770},{\"attributes\":{\"id\":\"fig_1\"},\"end\":20113,\"start\":19879},{\"attributes\":{\"id\":\"fig_2\"},\"end\":20564,\"start\":20114},{\"attributes\":{\"id\":\"fig_3\"},\"end\":20851,\"start\":20565},{\"attributes\":{\"id\":\"fig_4\"},\"end\":20932,\"start\":20852}]", "paragraph": "[{\"end\":2459,\"start\":2014},{\"end\":3105,\"start\":2461},{\"end\":3649,\"start\":3107},{\"end\":4323,\"start\":3651},{\"end\":4665,\"start\":4325},{\"end\":5651,\"start\":4682},{\"end\":6329,\"start\":5653},{\"end\":6705,\"start\":6331},{\"end\":7107,\"start\":6724},{\"end\":7534,\"start\":7140},{\"end\":7837,\"start\":7536},{\"end\":8517,\"start\":7839},{\"end\":9079,\"start\":8665},{\"end\":9625,\"start\":9081},{\"end\":9982,\"start\":9627},{\"end\":10701,\"start\":9984},{\"end\":11016,\"start\":10703},{\"end\":11411,\"start\":11018},{\"end\":12719,\"start\":11413},{\"end\":13419,\"start\":12743},{\"end\":14045,\"start\":13421},{\"end\":14653,\"start\":14196},{\"end\":16844,\"start\":14655},{\"end\":17194,\"start\":16859},{\"end\":17625,\"start\":17196},{\"end\":18104,\"start\":17627},{\"end\":18798,\"start\":18106},{\"end\":19204,\"start\":18800},{\"end\":19769,\"start\":19219}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7139,\"start\":7108},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8664,\"start\":8518},{\"attributes\":{\"id\":\"formula_2\"},\"end\":14195,\"start\":14046}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2012,\"start\":2000},{\"attributes\":{\"n\":\"2\"},\"end\":4680,\"start\":4668},{\"attributes\":{\"n\":\"3\"},\"end\":6722,\"start\":6708},{\"attributes\":{\"n\":\"4\"},\"end\":12741,\"start\":12722},{\"attributes\":{\"n\":\"5\"},\"end\":16857,\"start\":16847},{\"attributes\":{\"n\":\"6\"},\"end\":19217,\"start\":19207},{\"end\":19781,\"start\":19771},{\"end\":19890,\"start\":19880},{\"end\":20125,\"start\":20115},{\"end\":20863,\"start\":20853}]", "table": null, "figure_caption": "[{\"end\":19878,\"start\":19783},{\"end\":20113,\"start\":19892},{\"end\":20564,\"start\":20127},{\"end\":20851,\"start\":20567},{\"end\":20932,\"start\":20865}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":7749,\"start\":7741},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":10510,\"start\":10502},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":11796,\"start\":11788},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13138,\"start\":13130},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":14645,\"start\":14637},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":18438,\"start\":18430}]", "bib_author_first_name": "[{\"end\":21138,\"start\":21134},{\"end\":21151,\"start\":21146},{\"end\":21168,\"start\":21162},{\"end\":21183,\"start\":21177},{\"end\":21197,\"start\":21191},{\"end\":21214,\"start\":21208},{\"end\":21866,\"start\":21864},{\"end\":21880,\"start\":21876},{\"end\":21890,\"start\":21885},{\"end\":22585,\"start\":22583},{\"end\":22596,\"start\":22595},{\"end\":22611,\"start\":22606},{\"end\":22807,\"start\":22800},{\"end\":22824,\"start\":22818},{\"end\":22841,\"start\":22834},{\"end\":22856,\"start\":22847},{\"end\":22868,\"start\":22867},{\"end\":22880,\"start\":22875},{\"end\":23094,\"start\":23089},{\"end\":23108,\"start\":23105},{\"end\":23123,\"start\":23118},{\"end\":23140,\"start\":23133},{\"end\":23146,\"start\":23141},{\"end\":23161,\"start\":23156},{\"end\":23175,\"start\":23169},{\"end\":23191,\"start\":23187},{\"end\":23534,\"start\":23528},{\"end\":23548,\"start\":23541},{\"end\":23563,\"start\":23557},{\"end\":23578,\"start\":23571},{\"end\":23591,\"start\":23586},{\"end\":23604,\"start\":23597},{\"end\":23617,\"start\":23611},{\"end\":23631,\"start\":23625},{\"end\":23643,\"start\":23638},{\"end\":23652,\"start\":23648},{\"end\":24148,\"start\":24143},{\"end\":24166,\"start\":24156},{\"end\":24175,\"start\":24174},{\"end\":24195,\"start\":24182},{\"end\":24428,\"start\":24422},{\"end\":24440,\"start\":24434},{\"end\":24453,\"start\":24447},{\"end\":24465,\"start\":24460},{\"end\":24478,\"start\":24477},{\"end\":24491,\"start\":24485},{\"end\":24786,\"start\":24781},{\"end\":24803,\"start\":24795},{\"end\":24817,\"start\":24811},{\"end\":24831,\"start\":24823},{\"end\":25068,\"start\":25064},{\"end\":25082,\"start\":25078},{\"end\":25093,\"start\":25089},{\"end\":25109,\"start\":25103},{\"end\":25126,\"start\":25119},{\"end\":25141,\"start\":25135},{\"end\":25154,\"start\":25147},{\"end\":25170,\"start\":25163},{\"end\":25184,\"start\":25180},{\"end\":25542,\"start\":25535},{\"end\":25557,\"start\":25553},{\"end\":25856,\"start\":25848},{\"end\":25872,\"start\":25865},{\"end\":25892,\"start\":25883},{\"end\":26129,\"start\":26123},{\"end\":26147,\"start\":26138},{\"end\":26356,\"start\":26349},{\"end\":26367,\"start\":26361},{\"end\":26378,\"start\":26373},{\"end\":26390,\"start\":26384},{\"end\":26403,\"start\":26397},{\"end\":26419,\"start\":26410},{\"end\":26433,\"start\":26426},{\"end\":26445,\"start\":26438},{\"end\":26453,\"start\":26451},{\"end\":26466,\"start\":26460},{\"end\":26481,\"start\":26471},{\"end\":26494,\"start\":26487},{\"end\":26510,\"start\":26502},{\"end\":26524,\"start\":26516},{\"end\":26543,\"start\":26539},{\"end\":26545,\"start\":26544},{\"end\":26853,\"start\":26847},{\"end\":26866,\"start\":26861},{\"end\":26879,\"start\":26873},{\"end\":26886,\"start\":26885},{\"end\":26899,\"start\":26895},{\"end\":26910,\"start\":26906},{\"end\":27236,\"start\":27230},{\"end\":27259,\"start\":27254},{\"end\":27280,\"start\":27274},{\"end\":27293,\"start\":27289},{\"end\":27308,\"start\":27301},{\"end\":27322,\"start\":27319},{\"end\":27340,\"start\":27335},{\"end\":27354,\"start\":27348},{\"end\":27369,\"start\":27364},{\"end\":27832,\"start\":27827},{\"end\":27846,\"start\":27840},{\"end\":28079,\"start\":28073},{\"end\":28094,\"start\":28088},{\"end\":28109,\"start\":28103},{\"end\":28284,\"start\":28275},{\"end\":28296,\"start\":28292},{\"end\":28309,\"start\":28302},{\"end\":28320,\"start\":28316},{\"end\":28341,\"start\":28332},{\"end\":28809,\"start\":28800},{\"end\":28824,\"start\":28818},{\"end\":28994,\"start\":28985},{\"end\":29009,\"start\":29003},{\"end\":29194,\"start\":29185},{\"end\":29206,\"start\":29200},{\"end\":29222,\"start\":29213},{\"end\":29237,\"start\":29232},{\"end\":29252,\"start\":29246},{\"end\":29265,\"start\":29261},{\"end\":29521,\"start\":29517},{\"end\":29530,\"start\":29526},{\"end\":29543,\"start\":29537},{\"end\":29557,\"start\":29550},{\"end\":29574,\"start\":29567},{\"end\":29592,\"start\":29584},{\"end\":29613,\"start\":29604},{\"end\":29630,\"start\":29624},{\"end\":29646,\"start\":29639},{\"end\":29663,\"start\":29657},{\"end\":30356,\"start\":30352},{\"end\":30370,\"start\":30364},{\"end\":30381,\"start\":30376},{\"end\":30415,\"start\":30411},{\"end\":30425,\"start\":30422},{\"end\":30440,\"start\":30436},{\"end\":30714,\"start\":30708},{\"end\":30724,\"start\":30720},{\"end\":30735,\"start\":30730},{\"end\":30750,\"start\":30743},{\"end\":30761,\"start\":30755},{\"end\":30774,\"start\":30769},{\"end\":30785,\"start\":30781},{\"end\":30796,\"start\":30792},{\"end\":30808,\"start\":30804},{\"end\":30829,\"start\":30822},{\"end\":31104,\"start\":31098},{\"end\":31114,\"start\":31110},{\"end\":31125,\"start\":31120},{\"end\":31140,\"start\":31133},{\"end\":31151,\"start\":31145},{\"end\":31153,\"start\":31152},{\"end\":31166,\"start\":31161},{\"end\":31177,\"start\":31173},{\"end\":31188,\"start\":31184},{\"end\":31200,\"start\":31196},{\"end\":31202,\"start\":31201},{\"end\":31223,\"start\":31216},{\"end\":31581,\"start\":31575},{\"end\":31595,\"start\":31589},{\"end\":31736,\"start\":31735},{\"end\":31755,\"start\":31750},{\"end\":31769,\"start\":31765},{\"end\":31785,\"start\":31780},{\"end\":31790,\"start\":31786},{\"end\":31804,\"start\":31798},{\"end\":31818,\"start\":31813},{\"end\":32417,\"start\":32412},{\"end\":32431,\"start\":32426},{\"end\":32449,\"start\":32442},{\"end\":32464,\"start\":32457},{\"end\":32486,\"start\":32483},{\"end\":32497,\"start\":32496},{\"end\":32507,\"start\":32506},{\"end\":32526,\"start\":32525},{\"end\":32988,\"start\":32980},{\"end\":33005,\"start\":32999},{\"end\":33016,\"start\":33010},{\"end\":33033,\"start\":33027},{\"end\":33046,\"start\":33042},{\"end\":33061,\"start\":33058},{\"end\":33079,\"start\":33074},{\"end\":33381,\"start\":33377},{\"end\":33393,\"start\":33387},{\"end\":33408,\"start\":33402},{\"end\":33424,\"start\":33418},{\"end\":33433,\"start\":33430},{\"end\":33447,\"start\":33441},{\"end\":33457,\"start\":33452},{\"end\":33475,\"start\":33468},{\"end\":33660,\"start\":33659},{\"end\":33674,\"start\":33670},{\"end\":33688,\"start\":33683},{\"end\":33702,\"start\":33698},{\"end\":33721,\"start\":33710},{\"end\":33737,\"start\":33731},{\"end\":33749,\"start\":33745},{\"end\":33975,\"start\":33971},{\"end\":33995,\"start\":33991},{\"end\":34009,\"start\":34003},{\"end\":34020,\"start\":34015},{\"end\":34032,\"start\":34028},{\"end\":34050,\"start\":34047},{\"end\":34065,\"start\":34057},{\"end\":34520,\"start\":34516},{\"end\":34530,\"start\":34525},{\"end\":34543,\"start\":34538},{\"end\":34556,\"start\":34551},{\"end\":34578,\"start\":34565},{\"end\":34807,\"start\":34803},{\"end\":34824,\"start\":34817},{\"end\":34834,\"start\":34829},{\"end\":34847,\"start\":34842},{\"end\":34859,\"start\":34854},{\"end\":34872,\"start\":34868},{\"end\":35154,\"start\":35149},{\"end\":35167,\"start\":35163},{\"end\":35181,\"start\":35177},{\"end\":35200,\"start\":35191},{\"end\":35212,\"start\":35206},{\"end\":35228,\"start\":35221},{\"end\":35242,\"start\":35237},{\"end\":35252,\"start\":35249},{\"end\":35264,\"start\":35257},{\"end\":35572,\"start\":35566},{\"end\":35587,\"start\":35579},{\"end\":35601,\"start\":35595},{\"end\":35618,\"start\":35612},{\"end\":35873,\"start\":35865},{\"end\":35890,\"start\":35883},{\"end\":35904,\"start\":35900},{\"end\":35918,\"start\":35911},{\"end\":35935,\"start\":35930},{\"end\":35949,\"start\":35944},{\"end\":36324,\"start\":36317},{\"end\":36344,\"start\":36335},{\"end\":36364,\"start\":36355},{\"end\":36385,\"start\":36374},{\"end\":36757,\"start\":36754},{\"end\":36774,\"start\":36766},{\"end\":36785,\"start\":36780},{\"end\":36913,\"start\":36907},{\"end\":36927,\"start\":36923},{\"end\":36942,\"start\":36936},{\"end\":36959,\"start\":36951},{\"end\":36974,\"start\":36969},{\"end\":36976,\"start\":36975},{\"end\":36991,\"start\":36984},{\"end\":37004,\"start\":36999},{\"end\":37018,\"start\":37012},{\"end\":37030,\"start\":37027},{\"end\":37049,\"start\":37045},{\"end\":37062,\"start\":37058},{\"end\":37076,\"start\":37072},{\"end\":37091,\"start\":37086},{\"end\":37480,\"start\":37474},{\"end\":37494,\"start\":37490},{\"end\":37508,\"start\":37504},{\"end\":37522,\"start\":37517},{\"end\":37539,\"start\":37534},{\"end\":37552,\"start\":37547},{\"end\":37554,\"start\":37553},{\"end\":37567,\"start\":37562},{\"end\":37581,\"start\":37576},{\"end\":37607,\"start\":37604},{\"end\":37618,\"start\":37617},{\"end\":37628,\"start\":37627},{\"end\":37647,\"start\":37646},{\"end\":38191,\"start\":38187},{\"end\":38202,\"start\":38198},{\"end\":38224,\"start\":38218},{\"end\":38242,\"start\":38233},{\"end\":38256,\"start\":38250},{\"end\":38271,\"start\":38266},{\"end\":38282,\"start\":38278},{\"end\":38295,\"start\":38289},{\"end\":38297,\"start\":38296},{\"end\":38658,\"start\":38654},{\"end\":38674,\"start\":38665},{\"end\":38688,\"start\":38682},{\"end\":38703,\"start\":38698},{\"end\":38714,\"start\":38710},{\"end\":38727,\"start\":38721},{\"end\":38729,\"start\":38728},{\"end\":39016,\"start\":39010},{\"end\":39029,\"start\":39023},{\"end\":39041,\"start\":39035},{\"end\":39053,\"start\":39048},{\"end\":39055,\"start\":39054},{\"end\":39073,\"start\":39067},{\"end\":39090,\"start\":39089}]", "bib_author_last_name": "[{\"end\":21144,\"start\":21139},{\"end\":21160,\"start\":21152},{\"end\":21175,\"start\":21169},{\"end\":21189,\"start\":21184},{\"end\":21206,\"start\":21198},{\"end\":21223,\"start\":21215},{\"end\":21874,\"start\":21867},{\"end\":21883,\"start\":21881},{\"end\":21896,\"start\":21891},{\"end\":22593,\"start\":22586},{\"end\":22604,\"start\":22597},{\"end\":22618,\"start\":22612},{\"end\":22625,\"start\":22620},{\"end\":22816,\"start\":22808},{\"end\":22832,\"start\":22825},{\"end\":22845,\"start\":22842},{\"end\":22865,\"start\":22857},{\"end\":22873,\"start\":22869},{\"end\":22885,\"start\":22881},{\"end\":23103,\"start\":23095},{\"end\":23116,\"start\":23109},{\"end\":23131,\"start\":23124},{\"end\":23154,\"start\":23147},{\"end\":23167,\"start\":23162},{\"end\":23185,\"start\":23176},{\"end\":23207,\"start\":23192},{\"end\":23539,\"start\":23535},{\"end\":23555,\"start\":23549},{\"end\":23569,\"start\":23564},{\"end\":23584,\"start\":23579},{\"end\":23595,\"start\":23592},{\"end\":23609,\"start\":23605},{\"end\":23623,\"start\":23618},{\"end\":23636,\"start\":23632},{\"end\":23646,\"start\":23644},{\"end\":23657,\"start\":23653},{\"end\":24154,\"start\":24149},{\"end\":24172,\"start\":24167},{\"end\":24180,\"start\":24176},{\"end\":24198,\"start\":24196},{\"end\":24207,\"start\":24200},{\"end\":24432,\"start\":24429},{\"end\":24445,\"start\":24441},{\"end\":24458,\"start\":24454},{\"end\":24475,\"start\":24466},{\"end\":24483,\"start\":24479},{\"end\":24494,\"start\":24492},{\"end\":24509,\"start\":24496},{\"end\":24793,\"start\":24787},{\"end\":24809,\"start\":24804},{\"end\":24821,\"start\":24818},{\"end\":24841,\"start\":24832},{\"end\":25076,\"start\":25069},{\"end\":25087,\"start\":25083},{\"end\":25101,\"start\":25094},{\"end\":25117,\"start\":25110},{\"end\":25133,\"start\":25127},{\"end\":25145,\"start\":25142},{\"end\":25161,\"start\":25155},{\"end\":25178,\"start\":25171},{\"end\":25196,\"start\":25185},{\"end\":25551,\"start\":25543},{\"end\":25565,\"start\":25558},{\"end\":25863,\"start\":25857},{\"end\":25881,\"start\":25873},{\"end\":25901,\"start\":25893},{\"end\":26136,\"start\":26130},{\"end\":26153,\"start\":26148},{\"end\":26359,\"start\":26357},{\"end\":26371,\"start\":26368},{\"end\":26382,\"start\":26379},{\"end\":26395,\"start\":26391},{\"end\":26408,\"start\":26404},{\"end\":26424,\"start\":26420},{\"end\":26436,\"start\":26434},{\"end\":26449,\"start\":26446},{\"end\":26458,\"start\":26454},{\"end\":26469,\"start\":26467},{\"end\":26485,\"start\":26482},{\"end\":26500,\"start\":26495},{\"end\":26514,\"start\":26511},{\"end\":26537,\"start\":26525},{\"end\":26550,\"start\":26546},{\"end\":26859,\"start\":26854},{\"end\":26871,\"start\":26867},{\"end\":26883,\"start\":26880},{\"end\":26893,\"start\":26887},{\"end\":26904,\"start\":26900},{\"end\":26922,\"start\":26911},{\"end\":26928,\"start\":26924},{\"end\":27252,\"start\":27237},{\"end\":27272,\"start\":27260},{\"end\":27287,\"start\":27281},{\"end\":27299,\"start\":27294},{\"end\":27317,\"start\":27309},{\"end\":27333,\"start\":27323},{\"end\":27346,\"start\":27341},{\"end\":27362,\"start\":27355},{\"end\":27379,\"start\":27370},{\"end\":27838,\"start\":27833},{\"end\":27855,\"start\":27847},{\"end\":28086,\"start\":28080},{\"end\":28101,\"start\":28095},{\"end\":28118,\"start\":28110},{\"end\":28290,\"start\":28285},{\"end\":28300,\"start\":28297},{\"end\":28314,\"start\":28310},{\"end\":28330,\"start\":28321},{\"end\":28346,\"start\":28342},{\"end\":28816,\"start\":28810},{\"end\":28832,\"start\":28825},{\"end\":29001,\"start\":28995},{\"end\":29017,\"start\":29010},{\"end\":29198,\"start\":29195},{\"end\":29211,\"start\":29207},{\"end\":29230,\"start\":29223},{\"end\":29244,\"start\":29238},{\"end\":29259,\"start\":29253},{\"end\":29273,\"start\":29266},{\"end\":29524,\"start\":29522},{\"end\":29535,\"start\":29531},{\"end\":29548,\"start\":29544},{\"end\":29565,\"start\":29558},{\"end\":29582,\"start\":29575},{\"end\":29602,\"start\":29593},{\"end\":29622,\"start\":29614},{\"end\":29637,\"start\":29631},{\"end\":29655,\"start\":29647},{\"end\":29670,\"start\":29664},{\"end\":30362,\"start\":30357},{\"end\":30374,\"start\":30371},{\"end\":30409,\"start\":30382},{\"end\":30420,\"start\":30416},{\"end\":30434,\"start\":30426},{\"end\":30452,\"start\":30441},{\"end\":30718,\"start\":30715},{\"end\":30728,\"start\":30725},{\"end\":30741,\"start\":30736},{\"end\":30753,\"start\":30751},{\"end\":30767,\"start\":30762},{\"end\":30779,\"start\":30775},{\"end\":30790,\"start\":30786},{\"end\":30802,\"start\":30797},{\"end\":30820,\"start\":30809},{\"end\":30838,\"start\":30830},{\"end\":31108,\"start\":31105},{\"end\":31118,\"start\":31115},{\"end\":31131,\"start\":31126},{\"end\":31143,\"start\":31141},{\"end\":31159,\"start\":31154},{\"end\":31171,\"start\":31167},{\"end\":31182,\"start\":31178},{\"end\":31194,\"start\":31189},{\"end\":31214,\"start\":31203},{\"end\":31232,\"start\":31224},{\"end\":31587,\"start\":31582},{\"end\":31600,\"start\":31596},{\"end\":31748,\"start\":31737},{\"end\":31763,\"start\":31756},{\"end\":31778,\"start\":31770},{\"end\":31796,\"start\":31791},{\"end\":31811,\"start\":31805},{\"end\":31826,\"start\":31819},{\"end\":31837,\"start\":31828},{\"end\":32424,\"start\":32418},{\"end\":32440,\"start\":32432},{\"end\":32455,\"start\":32450},{\"end\":32481,\"start\":32465},{\"end\":32494,\"start\":32487},{\"end\":32504,\"start\":32498},{\"end\":32515,\"start\":32508},{\"end\":32523,\"start\":32517},{\"end\":32539,\"start\":32527},{\"end\":32548,\"start\":32541},{\"end\":32997,\"start\":32989},{\"end\":33008,\"start\":33006},{\"end\":33025,\"start\":33017},{\"end\":33040,\"start\":33034},{\"end\":33056,\"start\":33047},{\"end\":33072,\"start\":33062},{\"end\":33087,\"start\":33080},{\"end\":33385,\"start\":33382},{\"end\":33400,\"start\":33394},{\"end\":33416,\"start\":33409},{\"end\":33428,\"start\":33425},{\"end\":33439,\"start\":33434},{\"end\":33450,\"start\":33448},{\"end\":33466,\"start\":33458},{\"end\":33480,\"start\":33476},{\"end\":33668,\"start\":33661},{\"end\":33681,\"start\":33675},{\"end\":33696,\"start\":33689},{\"end\":33708,\"start\":33703},{\"end\":33729,\"start\":33722},{\"end\":33743,\"start\":33738},{\"end\":33753,\"start\":33750},{\"end\":33766,\"start\":33755},{\"end\":33989,\"start\":33976},{\"end\":34001,\"start\":33996},{\"end\":34013,\"start\":34010},{\"end\":34026,\"start\":34021},{\"end\":34045,\"start\":34033},{\"end\":34055,\"start\":34051},{\"end\":34072,\"start\":34066},{\"end\":34080,\"start\":34074},{\"end\":34523,\"start\":34521},{\"end\":34536,\"start\":34531},{\"end\":34549,\"start\":34544},{\"end\":34563,\"start\":34557},{\"end\":34586,\"start\":34579},{\"end\":34815,\"start\":34808},{\"end\":34827,\"start\":34825},{\"end\":34840,\"start\":34835},{\"end\":34852,\"start\":34848},{\"end\":34866,\"start\":34860},{\"end\":34882,\"start\":34873},{\"end\":35161,\"start\":35155},{\"end\":35175,\"start\":35168},{\"end\":35189,\"start\":35182},{\"end\":35204,\"start\":35201},{\"end\":35219,\"start\":35213},{\"end\":35235,\"start\":35229},{\"end\":35247,\"start\":35243},{\"end\":35255,\"start\":35253},{\"end\":35268,\"start\":35265},{\"end\":35577,\"start\":35573},{\"end\":35593,\"start\":35588},{\"end\":35610,\"start\":35602},{\"end\":35623,\"start\":35619},{\"end\":35881,\"start\":35874},{\"end\":35898,\"start\":35891},{\"end\":35909,\"start\":35905},{\"end\":35928,\"start\":35919},{\"end\":35942,\"start\":35936},{\"end\":35959,\"start\":35950},{\"end\":36333,\"start\":36325},{\"end\":36353,\"start\":36345},{\"end\":36372,\"start\":36365},{\"end\":36390,\"start\":36386},{\"end\":36764,\"start\":36758},{\"end\":36778,\"start\":36775},{\"end\":36793,\"start\":36786},{\"end\":36921,\"start\":36914},{\"end\":36934,\"start\":36928},{\"end\":36949,\"start\":36943},{\"end\":36967,\"start\":36960},{\"end\":36982,\"start\":36977},{\"end\":36997,\"start\":36992},{\"end\":37010,\"start\":37005},{\"end\":37025,\"start\":37019},{\"end\":37043,\"start\":37031},{\"end\":37056,\"start\":37050},{\"end\":37070,\"start\":37063},{\"end\":37084,\"start\":37077},{\"end\":37101,\"start\":37092},{\"end\":37488,\"start\":37481},{\"end\":37502,\"start\":37495},{\"end\":37515,\"start\":37509},{\"end\":37532,\"start\":37523},{\"end\":37545,\"start\":37540},{\"end\":37560,\"start\":37555},{\"end\":37574,\"start\":37568},{\"end\":37602,\"start\":37582},{\"end\":37615,\"start\":37608},{\"end\":37625,\"start\":37619},{\"end\":37636,\"start\":37629},{\"end\":37644,\"start\":37638},{\"end\":37660,\"start\":37648},{\"end\":37669,\"start\":37662},{\"end\":38196,\"start\":38192},{\"end\":38216,\"start\":38203},{\"end\":38231,\"start\":38225},{\"end\":38248,\"start\":38243},{\"end\":38264,\"start\":38257},{\"end\":38276,\"start\":38272},{\"end\":38287,\"start\":38283},{\"end\":38304,\"start\":38298},{\"end\":38663,\"start\":38659},{\"end\":38680,\"start\":38675},{\"end\":38696,\"start\":38689},{\"end\":38708,\"start\":38704},{\"end\":38719,\"start\":38715},{\"end\":38736,\"start\":38730},{\"end\":39021,\"start\":39017},{\"end\":39033,\"start\":39030},{\"end\":39046,\"start\":39042},{\"end\":39065,\"start\":39056},{\"end\":39087,\"start\":39074},{\"end\":39095,\"start\":39091},{\"end\":39099,\"start\":39097}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":181704107},\"end\":21803,\"start\":21076},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":202558505},\"end\":22538,\"start\":21805},{\"attributes\":{\"id\":\"b2\"},\"end\":22722,\"start\":22540},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":189762527},\"end\":23087,\"start\":22724},{\"attributes\":{\"id\":\"b4\"},\"end\":23456,\"start\":23089},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":3296374},\"end\":24064,\"start\":23458},{\"attributes\":{\"id\":\"b6\"},\"end\":24362,\"start\":24066},{\"attributes\":{\"id\":\"b7\"},\"end\":24697,\"start\":24364},{\"attributes\":{\"id\":\"b8\"},\"end\":24998,\"start\":24699},{\"attributes\":{\"id\":\"b9\"},\"end\":25409,\"start\":25000},{\"attributes\":{\"id\":\"b10\"},\"end\":25756,\"start\":25411},{\"attributes\":{\"id\":\"b11\"},\"end\":26059,\"start\":25758},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":40100965},\"end\":26270,\"start\":26061},{\"attributes\":{\"id\":\"b13\"},\"end\":26845,\"start\":26272},{\"attributes\":{\"doi\":\"arXiv:1907.10529\",\"id\":\"b14\"},\"end\":27228,\"start\":26847},{\"attributes\":{\"id\":\"b15\"},\"end\":27755,\"start\":27230},{\"attributes\":{\"id\":\"b16\"},\"end\":28034,\"start\":27757},{\"attributes\":{\"id\":\"b17\"},\"end\":28213,\"start\":28036},{\"attributes\":{\"id\":\"b18\"},\"end\":28757,\"start\":28215},{\"attributes\":{\"id\":\"b19\"},\"end\":28942,\"start\":28759},{\"attributes\":{\"id\":\"b20\"},\"end\":29105,\"start\":28944},{\"attributes\":{\"id\":\"b21\"},\"end\":29452,\"start\":29107},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":209202658},\"end\":30236,\"start\":29454},{\"attributes\":{\"id\":\"b23\"},\"end\":30704,\"start\":30238},{\"attributes\":{\"id\":\"b24\"},\"end\":31096,\"start\":30706},{\"attributes\":{\"doi\":\"abs/1907.11692\",\"id\":\"b25\"},\"end\":31537,\"start\":31098},{\"attributes\":{\"id\":\"b26\"},\"end\":31675,\"start\":31539},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":14068874},\"end\":32357,\"start\":31677},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":9447219},\"end\":32945,\"start\":32359},{\"attributes\":{\"id\":\"b29\"},\"end\":33316,\"start\":32947},{\"attributes\":{\"id\":\"b30\"},\"end\":33655,\"start\":33318},{\"attributes\":{\"id\":\"b31\"},\"end\":33969,\"start\":33657},{\"attributes\":{\"doi\":\"arXiv:2003.02249\",\"id\":\"b32\"},\"end\":34435,\"start\":33971},{\"attributes\":{\"id\":\"b33\"},\"end\":34748,\"start\":34437},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":160025533},\"end\":35064,\"start\":34750},{\"attributes\":{\"id\":\"b35\"},\"end\":35485,\"start\":35066},{\"attributes\":{\"id\":\"b36\"},\"end\":35772,\"start\":35487},{\"attributes\":{\"doi\":\"arXiv:1909.08053\",\"id\":\"b37\"},\"end\":36224,\"start\":35774},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":25127323},\"end\":36707,\"start\":36226},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":155092004},\"end\":36903,\"start\":36709},{\"attributes\":{\"id\":\"b40\"},\"end\":37445,\"start\":36905},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":13756489},\"end\":38101,\"start\":37447},{\"attributes\":{\"doi\":\"abs/1905.00537\",\"id\":\"b42\",\"matched_paper_id\":143424870},\"end\":38565,\"start\":38103},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":5034059},\"end\":38934,\"start\":38567},{\"attributes\":{\"doi\":\"abs/1906.08237\",\"id\":\"b44\",\"matched_paper_id\":195069387},\"end\":39322,\"start\":38936}]", "bib_title": "[{\"end\":21132,\"start\":21076},{\"end\":21862,\"start\":21805},{\"end\":22798,\"start\":22724},{\"end\":23526,\"start\":23458},{\"end\":26121,\"start\":26061},{\"end\":28273,\"start\":28215},{\"end\":29515,\"start\":29454},{\"end\":31733,\"start\":31677},{\"end\":32410,\"start\":32359},{\"end\":34801,\"start\":34750},{\"end\":36315,\"start\":36226},{\"end\":36752,\"start\":36709},{\"end\":37472,\"start\":37447},{\"end\":38185,\"start\":38103},{\"end\":38652,\"start\":38567},{\"end\":39008,\"start\":38936}]", "bib_author": "[{\"end\":21146,\"start\":21134},{\"end\":21162,\"start\":21146},{\"end\":21177,\"start\":21162},{\"end\":21191,\"start\":21177},{\"end\":21208,\"start\":21191},{\"end\":21225,\"start\":21208},{\"end\":21876,\"start\":21864},{\"end\":21885,\"start\":21876},{\"end\":21898,\"start\":21885},{\"end\":22595,\"start\":22583},{\"end\":22606,\"start\":22595},{\"end\":22620,\"start\":22606},{\"end\":22627,\"start\":22620},{\"end\":22818,\"start\":22800},{\"end\":22834,\"start\":22818},{\"end\":22847,\"start\":22834},{\"end\":22867,\"start\":22847},{\"end\":22875,\"start\":22867},{\"end\":22887,\"start\":22875},{\"end\":23105,\"start\":23089},{\"end\":23118,\"start\":23105},{\"end\":23133,\"start\":23118},{\"end\":23156,\"start\":23133},{\"end\":23169,\"start\":23156},{\"end\":23187,\"start\":23169},{\"end\":23209,\"start\":23187},{\"end\":23541,\"start\":23528},{\"end\":23557,\"start\":23541},{\"end\":23571,\"start\":23557},{\"end\":23586,\"start\":23571},{\"end\":23597,\"start\":23586},{\"end\":23611,\"start\":23597},{\"end\":23625,\"start\":23611},{\"end\":23638,\"start\":23625},{\"end\":23648,\"start\":23638},{\"end\":23659,\"start\":23648},{\"end\":24156,\"start\":24143},{\"end\":24174,\"start\":24156},{\"end\":24182,\"start\":24174},{\"end\":24200,\"start\":24182},{\"end\":24209,\"start\":24200},{\"end\":24434,\"start\":24422},{\"end\":24447,\"start\":24434},{\"end\":24460,\"start\":24447},{\"end\":24477,\"start\":24460},{\"end\":24485,\"start\":24477},{\"end\":24496,\"start\":24485},{\"end\":24511,\"start\":24496},{\"end\":24795,\"start\":24781},{\"end\":24811,\"start\":24795},{\"end\":24823,\"start\":24811},{\"end\":24843,\"start\":24823},{\"end\":25078,\"start\":25064},{\"end\":25089,\"start\":25078},{\"end\":25103,\"start\":25089},{\"end\":25119,\"start\":25103},{\"end\":25135,\"start\":25119},{\"end\":25147,\"start\":25135},{\"end\":25163,\"start\":25147},{\"end\":25180,\"start\":25163},{\"end\":25198,\"start\":25180},{\"end\":25553,\"start\":25535},{\"end\":25567,\"start\":25553},{\"end\":25865,\"start\":25848},{\"end\":25883,\"start\":25865},{\"end\":25903,\"start\":25883},{\"end\":26138,\"start\":26123},{\"end\":26155,\"start\":26138},{\"end\":26361,\"start\":26349},{\"end\":26373,\"start\":26361},{\"end\":26384,\"start\":26373},{\"end\":26397,\"start\":26384},{\"end\":26410,\"start\":26397},{\"end\":26426,\"start\":26410},{\"end\":26438,\"start\":26426},{\"end\":26451,\"start\":26438},{\"end\":26460,\"start\":26451},{\"end\":26471,\"start\":26460},{\"end\":26487,\"start\":26471},{\"end\":26502,\"start\":26487},{\"end\":26516,\"start\":26502},{\"end\":26539,\"start\":26516},{\"end\":26552,\"start\":26539},{\"end\":26861,\"start\":26847},{\"end\":26873,\"start\":26861},{\"end\":26885,\"start\":26873},{\"end\":26895,\"start\":26885},{\"end\":26906,\"start\":26895},{\"end\":26924,\"start\":26906},{\"end\":26930,\"start\":26924},{\"end\":27254,\"start\":27230},{\"end\":27274,\"start\":27254},{\"end\":27289,\"start\":27274},{\"end\":27301,\"start\":27289},{\"end\":27319,\"start\":27301},{\"end\":27335,\"start\":27319},{\"end\":27348,\"start\":27335},{\"end\":27364,\"start\":27348},{\"end\":27381,\"start\":27364},{\"end\":27840,\"start\":27827},{\"end\":27857,\"start\":27840},{\"end\":28088,\"start\":28073},{\"end\":28103,\"start\":28088},{\"end\":28120,\"start\":28103},{\"end\":28292,\"start\":28275},{\"end\":28302,\"start\":28292},{\"end\":28316,\"start\":28302},{\"end\":28332,\"start\":28316},{\"end\":28348,\"start\":28332},{\"end\":28818,\"start\":28800},{\"end\":28834,\"start\":28818},{\"end\":29003,\"start\":28985},{\"end\":29019,\"start\":29003},{\"end\":29200,\"start\":29185},{\"end\":29213,\"start\":29200},{\"end\":29232,\"start\":29213},{\"end\":29246,\"start\":29232},{\"end\":29261,\"start\":29246},{\"end\":29275,\"start\":29261},{\"end\":29526,\"start\":29517},{\"end\":29537,\"start\":29526},{\"end\":29550,\"start\":29537},{\"end\":29567,\"start\":29550},{\"end\":29584,\"start\":29567},{\"end\":29604,\"start\":29584},{\"end\":29624,\"start\":29604},{\"end\":29639,\"start\":29624},{\"end\":29657,\"start\":29639},{\"end\":29672,\"start\":29657},{\"end\":30364,\"start\":30352},{\"end\":30376,\"start\":30364},{\"end\":30411,\"start\":30376},{\"end\":30422,\"start\":30411},{\"end\":30436,\"start\":30422},{\"end\":30454,\"start\":30436},{\"end\":30720,\"start\":30708},{\"end\":30730,\"start\":30720},{\"end\":30743,\"start\":30730},{\"end\":30755,\"start\":30743},{\"end\":30769,\"start\":30755},{\"end\":30781,\"start\":30769},{\"end\":30792,\"start\":30781},{\"end\":30804,\"start\":30792},{\"end\":30822,\"start\":30804},{\"end\":30840,\"start\":30822},{\"end\":31110,\"start\":31098},{\"end\":31120,\"start\":31110},{\"end\":31133,\"start\":31120},{\"end\":31145,\"start\":31133},{\"end\":31161,\"start\":31145},{\"end\":31173,\"start\":31161},{\"end\":31184,\"start\":31173},{\"end\":31196,\"start\":31184},{\"end\":31216,\"start\":31196},{\"end\":31234,\"start\":31216},{\"end\":31589,\"start\":31575},{\"end\":31602,\"start\":31589},{\"end\":31750,\"start\":31735},{\"end\":31765,\"start\":31750},{\"end\":31780,\"start\":31765},{\"end\":31798,\"start\":31780},{\"end\":31813,\"start\":31798},{\"end\":31828,\"start\":31813},{\"end\":31839,\"start\":31828},{\"end\":32426,\"start\":32412},{\"end\":32442,\"start\":32426},{\"end\":32457,\"start\":32442},{\"end\":32483,\"start\":32457},{\"end\":32496,\"start\":32483},{\"end\":32506,\"start\":32496},{\"end\":32517,\"start\":32506},{\"end\":32525,\"start\":32517},{\"end\":32541,\"start\":32525},{\"end\":32550,\"start\":32541},{\"end\":32999,\"start\":32980},{\"end\":33010,\"start\":32999},{\"end\":33027,\"start\":33010},{\"end\":33042,\"start\":33027},{\"end\":33058,\"start\":33042},{\"end\":33074,\"start\":33058},{\"end\":33089,\"start\":33074},{\"end\":33387,\"start\":33377},{\"end\":33402,\"start\":33387},{\"end\":33418,\"start\":33402},{\"end\":33430,\"start\":33418},{\"end\":33441,\"start\":33430},{\"end\":33452,\"start\":33441},{\"end\":33468,\"start\":33452},{\"end\":33482,\"start\":33468},{\"end\":33670,\"start\":33659},{\"end\":33683,\"start\":33670},{\"end\":33698,\"start\":33683},{\"end\":33710,\"start\":33698},{\"end\":33731,\"start\":33710},{\"end\":33745,\"start\":33731},{\"end\":33755,\"start\":33745},{\"end\":33768,\"start\":33755},{\"end\":33991,\"start\":33971},{\"end\":34003,\"start\":33991},{\"end\":34015,\"start\":34003},{\"end\":34028,\"start\":34015},{\"end\":34047,\"start\":34028},{\"end\":34057,\"start\":34047},{\"end\":34074,\"start\":34057},{\"end\":34082,\"start\":34074},{\"end\":34525,\"start\":34516},{\"end\":34538,\"start\":34525},{\"end\":34551,\"start\":34538},{\"end\":34565,\"start\":34551},{\"end\":34588,\"start\":34565},{\"end\":34817,\"start\":34803},{\"end\":34829,\"start\":34817},{\"end\":34842,\"start\":34829},{\"end\":34854,\"start\":34842},{\"end\":34868,\"start\":34854},{\"end\":34884,\"start\":34868},{\"end\":35163,\"start\":35149},{\"end\":35177,\"start\":35163},{\"end\":35191,\"start\":35177},{\"end\":35206,\"start\":35191},{\"end\":35221,\"start\":35206},{\"end\":35237,\"start\":35221},{\"end\":35249,\"start\":35237},{\"end\":35257,\"start\":35249},{\"end\":35270,\"start\":35257},{\"end\":35579,\"start\":35566},{\"end\":35595,\"start\":35579},{\"end\":35612,\"start\":35595},{\"end\":35625,\"start\":35612},{\"end\":35883,\"start\":35865},{\"end\":35900,\"start\":35883},{\"end\":35911,\"start\":35900},{\"end\":35930,\"start\":35911},{\"end\":35944,\"start\":35930},{\"end\":35961,\"start\":35944},{\"end\":36335,\"start\":36317},{\"end\":36355,\"start\":36335},{\"end\":36374,\"start\":36355},{\"end\":36392,\"start\":36374},{\"end\":36766,\"start\":36754},{\"end\":36780,\"start\":36766},{\"end\":36795,\"start\":36780},{\"end\":36923,\"start\":36907},{\"end\":36936,\"start\":36923},{\"end\":36951,\"start\":36936},{\"end\":36969,\"start\":36951},{\"end\":36984,\"start\":36969},{\"end\":36999,\"start\":36984},{\"end\":37012,\"start\":36999},{\"end\":37027,\"start\":37012},{\"end\":37045,\"start\":37027},{\"end\":37058,\"start\":37045},{\"end\":37072,\"start\":37058},{\"end\":37086,\"start\":37072},{\"end\":37103,\"start\":37086},{\"end\":37490,\"start\":37474},{\"end\":37504,\"start\":37490},{\"end\":37517,\"start\":37504},{\"end\":37534,\"start\":37517},{\"end\":37547,\"start\":37534},{\"end\":37562,\"start\":37547},{\"end\":37576,\"start\":37562},{\"end\":37604,\"start\":37576},{\"end\":37617,\"start\":37604},{\"end\":37627,\"start\":37617},{\"end\":37638,\"start\":37627},{\"end\":37646,\"start\":37638},{\"end\":37662,\"start\":37646},{\"end\":37671,\"start\":37662},{\"end\":38198,\"start\":38187},{\"end\":38218,\"start\":38198},{\"end\":38233,\"start\":38218},{\"end\":38250,\"start\":38233},{\"end\":38266,\"start\":38250},{\"end\":38278,\"start\":38266},{\"end\":38289,\"start\":38278},{\"end\":38306,\"start\":38289},{\"end\":38665,\"start\":38654},{\"end\":38682,\"start\":38665},{\"end\":38698,\"start\":38682},{\"end\":38710,\"start\":38698},{\"end\":38721,\"start\":38710},{\"end\":38738,\"start\":38721},{\"end\":39023,\"start\":39010},{\"end\":39035,\"start\":39023},{\"end\":39048,\"start\":39035},{\"end\":39067,\"start\":39048},{\"end\":39089,\"start\":39067},{\"end\":39097,\"start\":39089},{\"end\":39101,\"start\":39097}]", "bib_venue": "[{\"end\":21472,\"start\":21357},{\"end\":22235,\"start\":22075},{\"end\":28444,\"start\":28396},{\"end\":29812,\"start\":29742},{\"end\":32038,\"start\":31947},{\"end\":21355,\"start\":21225},{\"end\":22073,\"start\":21898},{\"end\":22581,\"start\":22540},{\"end\":22890,\"start\":22887},{\"end\":23265,\"start\":23209},{\"end\":23741,\"start\":23659},{\"end\":24141,\"start\":24066},{\"end\":24420,\"start\":24364},{\"end\":24779,\"start\":24699},{\"end\":25062,\"start\":25000},{\"end\":25533,\"start\":25411},{\"end\":25846,\"start\":25758},{\"end\":26158,\"start\":26155},{\"end\":26347,\"start\":26272},{\"end\":27015,\"start\":26946},{\"end\":27438,\"start\":27381},{\"end\":27825,\"start\":27757},{\"end\":28071,\"start\":28036},{\"end\":28394,\"start\":28348},{\"end\":28798,\"start\":28759},{\"end\":28983,\"start\":28944},{\"end\":29183,\"start\":29107},{\"end\":29740,\"start\":29672},{\"end\":30350,\"start\":30238},{\"end\":31303,\"start\":31248},{\"end\":31573,\"start\":31539},{\"end\":31945,\"start\":31839},{\"end\":32599,\"start\":32550},{\"end\":32978,\"start\":32947},{\"end\":33375,\"start\":33318},{\"end\":34181,\"start\":34098},{\"end\":34514,\"start\":34437},{\"end\":34895,\"start\":34884},{\"end\":35147,\"start\":35066},{\"end\":35564,\"start\":35487},{\"end\":35863,\"start\":35774},{\"end\":36448,\"start\":36392},{\"end\":36798,\"start\":36795},{\"end\":37720,\"start\":37671},{\"end\":38325,\"start\":38320},{\"end\":38742,\"start\":38738},{\"end\":39120,\"start\":39115}]"}}}, "year": 2023, "month": 12, "day": 17}