{"id": 226964321, "updated": "2023-10-06 09:22:08.902", "metadata": {"title": "A Large-Scale Database for Graph Representation Learning", "authors": "[{\"first\":\"Scott\",\"last\":\"Freitas\",\"middle\":[]},{\"first\":\"Yuxiao\",\"last\":\"Dong\",\"middle\":[]},{\"first\":\"Joshua\",\"last\":\"Neil\",\"middle\":[]},{\"first\":\"Duen\",\"last\":\"Chau\",\"middle\":[\"Horng\"]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2020, "month": 11, "day": 16}, "abstract": "With the rapid emergence of graph representation learning, the construction of new large-scale datasets is necessary to distinguish model capabilities and accurately assess the strengths and weaknesses of each technique. By carefully analyzing existing graph databases, we identify 3 critical components important for advancing the field of graph representation learning: (1) large graphs, (2) many graphs, and (3) class diversity. To date, no single graph database offers all these desired properties. We introduce MalNet, the largest public graph database ever constructed, representing a large-scale ontology of malicious software function call graphs. MalNet contains over 1.2 million graphs, averaging over 15k nodes and 35k edges per graph, across a hierarchy of 47 types and 696 families. Compared to the popular REDDIT-12K database, MalNet offers 105x more graphs, 39x larger graphs on average, and 63x more classes. We provide a detailed analysis of MalNet, discussing its properties and provenance, along with the evaluation of state-of-the-art machine learning and graph neural network techniques. The unprecedented scale and diversity of MalNet offers exciting opportunities to advance the frontiers of graph representation learning--enabling new discoveries and research into imbalanced classification, explainability and the impact of class hardness. The database is publicly available at www.mal-net.org.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2011.07682", "mag": "3105657048", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/nips/FreitasDNC21", "doi": null}}, "content": {"source": {"pdf_hash": "6c2477434cf72fde3fabe28f9d957e72108e65f8", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2011.07682v3.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "68514873bba0172f5705cfb14f63487faff4a7d2", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/6c2477434cf72fde3fabe28f9d957e72108e65f8.txt", "contents": "\nA Large-Scale Database for Graph Representation Learning\n\n\nScott Freitas safreita@gatech.edu \nGeorgia Institute of Technology\nMicrosoft Research\nMicrosoft ATP\nGeorgia Institute of Technology\n\n\nYuxiao Dong \nGeorgia Institute of Technology\nMicrosoft Research\nMicrosoft ATP\nGeorgia Institute of Technology\n\n\nJoshua Neil joshua.neil@microsoft.com \nGeorgia Institute of Technology\nMicrosoft Research\nMicrosoft ATP\nGeorgia Institute of Technology\n\n\nDuen Horng Chau \nGeorgia Institute of Technology\nMicrosoft Research\nMicrosoft ATP\nGeorgia Institute of Technology\n\n\nA Large-Scale Database for Graph Representation Learning\n\nWith the rapid emergence of graph representation learning, the construction of new large-scale datasets is necessary to distinguish model capabilities and accurately assess the strengths and weaknesses of each technique. By carefully analyzing existing graph databases, we identify 3 critical components important for advancing the field of graph representation learning: (1) large graphs, (2) many graphs, and (3) class diversity. To date, no single graph database offers all these desired properties. We introduce MALNET, the largest public graph database ever constructed, representing a large-scale ontology of malicious software function call graphs. MALNET contains over 1.2 million graphs, averaging over 15k nodes and 35k edges per graph, across a hierarchy of 47 types and 696 families. Compared to the popular REDDIT-12K database, MALNET offers 105\u00d7 more graphs, 39\u00d7 larger graphs on average, and 63\u00d7 more classes. We provide a detailed analysis of MALNET, discussing its properties and provenance, along with the evaluation of state-of-the-art machine learning and graph neural network techniques. The unprecedented scale and diversity of MALNET offers exciting opportunities to advance the frontiers of graph representation learning-enabling new discoveries and research into imbalanced classification, explainability and the impact of class hardness. The database is publicly available at www.mal-net.org.\n\nThe emergence of graph data across many scientific fields has led to intense interest in the development of representation learning techniques that encode structured information into low dimensional space for a variety of important downstream tasks (e.g., toxic molecule detection, community clustering, malware detection). However, recent research focusing on developing graph kernels, neural networks and spectral methods to capture graph topology has revealed a number of shortcomings of existing benchmark datasets [1,2,3,4], which often contain graphs that are relatively: (1) limited in number; (2) smaller in scale in terms of nodes and edges; and (3) restricted in class diversity. The state of graph representation benchmarks (e.g., PROTEINS [5], IMDB [6], REDDIT [6]) is analogous to MNIST [7] at its height-a staple of the computer vision community, and often the first dataset researchers would evaluate their methods on. The graph representation community is at a similar inflection point, as it is increasingly difficult for current databases to characterize and differentiate modern graph representation techniques [1,2].\n\nTo address these issues, we introduce a new graph database called MALNET, a large-scale ontology of malicious software function call graphs (FCGs). Each FCG represents calling relationships between functions in a program, where nodes are functions and edges indicate inter-procedural calls. Through MALNET, we make three major contributions:\n\n\u2022 MALNET: Largest Database for Graph Representation Learning. MALNET contains 1.2 million function call graphs, averaging over 15k nodes and 35k edges per graph, across a hierarchy of 47 types and 696 families ( Figure 1). This makes MALNET the largest public graph database constructed to date, offering 105\u00d7 more graphs, 39\u00d7 larger graphs on average, and 63\u00d7 more classes compared to the popular REDDIT-12K database. We release MALNET with a CC-BY license, allowing users to share and adapt the database for any type of use. We also provide code on Github: https://github.com/safreita1/malnet-graph.\n\n\u2022 Revealing New Discoveries. The unprecedented scale of MALNET enables new and important discoveries that were previously not possible. Leveraging the function call graphs in MALNET, we study popular graph representation learning techniques in depth, and reveal: (1) the significant challenges they face in terms of scalability and their ability to handle large class imbalance and (2) that simple baselines can be surprisingly effective at the scale of MALNET;\n\n\u2022 Enabling New Research Directions. MALNET offers unique opportunities to advance the frontiers of graph representation learning by enabling research into imbalanced classification, explainability and the impact of class hardness. We believe the diversity, scale and natural imbalance of MALNET will enable it to become a benchmark dataset to meet the future research needs of the graph representation community. By open-sourcing MALNET, we hope to inspire and invite more researchers to contribute to this exciting new resource.\n\n\nProperties of MalNet\n\nWe begin by analyzing 5 key properties of the MALNET database-(1) scale (number of graphs, average graph size), (2) class hierarchy (3) class diversity, (4) class imbalance and (5) cybersecurity applications. In Section 2.1 we compare MALNET against common graph classification datasets, summarizing the differences in Table 2.\n\nScale. MALNET contains 1,262,024 function call graphs across 47 types and 696 families of malware. When stored on disk, MALNET takes over 443 GB of space in edge list format, with each graph containing 15,378 nodes and 35,167 edges, on average. This makes MALNET the largest public graph dataset constructed to date in terms of number of graphs, average graph size and number of classes. In Table 1, we provide descriptive statistics on the number of nodes, edges, and average degree of ten of the largest graph types (see Appendix Table 4 for a full comparison). We believe that this scale of data is crucial to the future development of graph representation techniques as current databases are too small to effectively differentiate and benchmark techniques on non-attributed graphs [1,2,3,4]. Hierarchy. Function call graphs are assigned a general type (e.g., Worm) and specialized family label (e.g., Spybot) using the Euphony [8] classification structure (see Figure 2). To generate these labels, Euphony takes a Virus-Total [9] report containing up to 70 labels across a variety of antivirus vendors and unifies the labeling process by learning the patterns, structure and lexicon of vendors over time. While Euphony provides state-of-the-art performance, this task is considered an open-challenge due to both naming disagreements [10,11] and a lack of adopted naming standards [8] [12,13], reshaping the loss function (loss reweighting, regularization) [14,15] or accounting for input-hardness [16], it is largely unexplored in the graph domain. We hope that MALNET can serve as a source of data to spark novel research in this critical area. Cybersecurity Applications. A majority of malware samples are polymorphic in nature, meaning that subtle source code changes in the original malware variant can result in significantly different compiled code (e.g., instruction reordering, branch inversion, register allocation) [17,18]. Cybercriminals frequently take advantage of this to evade signature based detection, a predominant form of malware detection [19]. Fortunately, these subtle source code changes have minimal effect on the control flow of the executable, which can be represented with a function call graph (see Figure 3). Research has demonstrated that function call graphs (FCGs) can effectively defeat the polymorphic nature of malware through techniques like graph matching [20,21,22,23,24] and representation learning [25,26]. Unfortunately, prior to the release of MALNET, no large-scale FCG datasets have been made publicly available largely due to the proprietary nature of the data. We note that while open research can significantly advance the frontiers of cybersecurity, it can be used by malicious actors to conduct research on detection avoidance.\n\n\nGraph Representation Learning Databases: Advancing the State-of-the-Art\n\nA number of well labeled small datasets have served as training and evaluation benchmarks for most of today's graph representation learning techniques As the field advances, larger and more challenging datasets are needed for the next generation of algorithms. MALNET offers 105\u00d7 more graphs, 39\u00d7 larger graphs on average, and 63\u00d7 the classes, compared to the popular REDDIT-12K database. We compare MALNET with other graph representation learning datasets and summarize the differences in Table 2, highlighting how MALNET advances the field of graph representation learning by providing large and diverse data.  Cybersecurity datasets. Aside from MALNET, CGD [27] is the only publicly available cybersecurity dataset we could identify for the task of graph classification. In surveying the extensive FCG malware detection literature [20,25,21,26,22,23,24] we observed that almost all data is closed-source; likely due to a combination of security concerns and issues regarding private company data.\n\nSmall molecule datasets. There are numerous small molecule datasets, including: HIV [31], MUTAG [34], MUV [29], PCBA [28], NCI1 [32], PTC-MR [33], and YEAST [30]. The HIV dataset, introduced by the Drug Therapeutics Program AIDS Antiviral Screen [40], tests the ability of chemical compounds to inhibit HIV replication into one of three classes. MUTAG contains chemical compound graphs divided into two classes according to their mutagenic effect on bacterium. MUV and PCBA are constructed from PubChem BioAssay [41], and contain numerous compounds across 17 tasks and 128 tasks respectively, where each task is a binary classification problem. NCI1 contains chemical compounds, screened for their ability to inhibit the growth of a panel of human tumor cell lines. PTC-MR contains graphs across 2 classes, reporting the effects of chemical compound carcinogenicity on rats. YEAST contains molecule graphs screened for anti-cancer tests, with the binary classification of active or inactive.\n\nBioinformatic datasets. Three popular bioinformatic datasets are: DD [37], ENZYMES [5] and PROTEINS [5]. DD is a data set containing protein structures grouped into 2 categories (enzyme and non-enzyme). ENZYMES contains graphs of protein tertiary enzyme structures with the task of assigning each enzyme to one of 6 levels. Similarly, PROTEINS contains protein graphs classified into either enzyme or non-enzyme.\n\nComputer vision datasets. Three common computer vision datasets are: Fingerprint [35], FIRSTMM-DB [36] and Letter (low, med, high) [35]. Fingerprint contains fingerprint graphs across four classes: arch, left, right, and whorl. FIRSTMM-DB contains object point clouds belonging to an object ontology of 11 categories. Letter contains 3 datasets and 15 character classes with varying levels of distortion (low, med, high) added to letter graphs.\n\nSocial network datasets. Common social network datasets include: COLLAB [39], Deezer Ego-Nets [38], Github Stargazers [38], IMDB (BINARY, MULTI) [42], REDDIT (BINARY, 5K, 12K, Threads) [42,38] and Twitch Ego-Nets [38]. COLLAB is a collaboration dataset of ego-networks across 3 domains of physics. Deezer Ego-Nets contains user ego-nets across 2 genders from the Deezer music service. Github Stargazers contains graphs of developers who starred either machine learning or web development repositories. IMDB BINARY contains ego-network graphs representing actors and their collaborations across 2 movie genres. IMDB MULTI extends IMDB BINARY with more graphs and 3 movie genres. REDDIT-BINARY contains thread graphs across two content classes (discussion and QA based). REDDIT MULTI-5K contains thread graphs across 5 Reddit thread types. REDDIT MULTI-12K extends REDDIT-5K, containing online discussion thread graphs across 11 classes. REDDIT Threads contains thread graphs across 2 graph classes (discussion, non-discussion). Twitch Ego-Nets contains ego graphs across 2 classes of Twitch users.\n\n\nConstructing MalNet\n\n\nCollecting Candidate Graphs\n\nThe first step in constructing MALNET was to identify a source of graph containing the desired properties outlined in Section 2. We determined that the natural abundance, large graph size, and class diversity provided by function call graphs (FCGs) make them an ideal source of graphs. While FCGs, which represent the control flow of programs (see Figure 3), can be statically extracted from many types of software (e.g., EXE, PE, APK), we use the Android ecosystem due to its large market share [43], easy accessibility [44] and diversity of malicious software [45]. With the generous permission of the AndroZoo repository [46,44], we collected 1,262,024 Android APK files, specifically selecting APKs containing both a family and type label obtained from the Euphony classification structure [8]. This process took about a week to download and 10TB in storage space when using the maximum allowed 40 concurrent downloads. In addition, we spent about 1 month collecting raw VirusTotal (VT) reports to release with MALNET, through VT's academic access, which allows 20k queries per day. Each VT report contains up to 70 antivirus labels per graph.\n\n\nProcessing the Graphs\n\nOnce the APK files and labels were collected, we extract the function call graphs by running the files through Androguard [47], which statically analyzes the APK's DEX file. Distributed across Google Clouds General-purpose (N2) machine with 16 cores running 24 hours a day, the process took about 1 week to extract the graphs. We leave each graph in its original state-retaining its edge directionality, disconnected components and node isolates (i.e., single nodes with no incident edges). On average, each graph has 15, 378 nodes and 35, 167 edges; and typically contains a single giant connected component, many small disconnected components, and numerous node isolates. Table 1 describes the 10 graph types (out of 47) that have the highest number of graphs. Appendix Table 4 provides a full analysis on all graph type. Each graph is stored in a standard edge list format for its wide support, readability, and ease of use. In total, the graphs' edge list files consume over 443 GB of hard disk space. Since we are dealing with highly malicious software, our goal is to mitigate the risk of releasing information that could potentially be used to reverse engineer malware. Thus, we numerically relabel the nodes of each graph, removing any associated attribute information, which makes reverse engineering highly unlikely. However, malicious actors could develop new variants of detection-resistant malware that looks structurally similar to benign function call graphs, by gleaning graph structure knowledge from MALNET in the absence of node and edge labels.\n\n\nMalNet-Tiny\n\nWe construct MALNET-TINY, containing 5, 000 graphs across balanced 5 types. In addition, we limit each graph to contain at most 5k nodes so that the dataset is truly \"tiny\". The goal of MALNET-TINY is to enable users to rapidly prototype new ideas, since it requires only a fraction of the time needed to train a new model. MALNET-TINY is released alongside the full dataset at https://mal-net.org.\n\n\nOnline Exploration of the Data\n\nTo assist researchers and practitioners in exploring MALNET, we have designed and developed MALNET EXPLORER, an interactive graph exploration and visualization tool. It runs on most modern web browsers (Chrome, Firefox, Safari, and Edge), platforms (Windows, Mac OS, Linux), and devices (Android and iOS). Our goal is to enable users to easily explore the data before downloading. MALNET EXPLORER's user interface uses a responsive design that automatically adjusts its component layout, based on the users' device types and screen resolutions. MALNET EXPLORER is available online at: https://mal-net.org.\n\n\nMalNet for New Research & Discoveries\n\nMALNET is substantially larger than existing graph databases used for graph representation learning research, with many more graphs, much larger graphs, and many more classes of graphs. Such unprecedented advancements provides exciting opportunities to make new discoveries and explore new research directions previously not possible. In this section, we present our findings to demonstrate such possibilities. We discuss the experimental setup below, followed by an overview of the graph representation techniques in Section 4.1. Section 4.2 discusses the new discoveries we found by studying MALNET; and Section 4.3 highlights new research directions enabled by MALNET.\n\nExperimental Setup. We divide MALNET into three stratified sets of data: training, validation and test, with a split of 70/10/20, respectively; repeated for graph type, family and MALNET-TINY labels. Each model is evaluated on its macro-F1 score, however, we report three performance metricsmacro-F1, precision and recall, as is typical for highly imbalanced datasets [16,48]. We perform our experiments in Python3 using a DGX A-100 containing 128 CPU cores and 8 A-100 GPUs.\n\n\nGraph Representation Techniques\n\nWe present results for 7 strong, recent, scalable, and readily available graph representation techniques [49,38]. Specifically, we evaluate 2 graph neural network (GNN) models [50,51] and 5 data mining techniques [1,3,52,53]. We leave the graph in its natural state for each GNN i.e., directed graph with isolates; and follow recommended preprocessing steps from the paper of each data mining technique. In addition, each data mining embedding techniques uses a random forest model for the task of graph classification, where we run a grid search across the validation set to identify the number of estimators n e \u2208 [1, 5, 10, 25, 50] and tree depth t d \u2208 [1, 5, 10, 20]. All hyperparameters are individually tuned for type, family and tiny classification levels. We briefly summarize each method and its configuration below:\n\n1. GCN [50] is a graph neural network which learns network embeddings by aggregating node features over neighborhoods. Following [51], we use 5 GNN layers and an Adam optimizer [54]. We set node features using LDP [1], and add self loops which has been shown to improve performance [55]. We tune hyperparameters for (1) the number of hidden units \u2208 {32, 64} and (2) the learning rate \u2208 {0.001, 0.0001}, repeated for both type and family classification levels. We find that 64 units with a learning rate of 0.0001 performs best. Running this search took over 26 days using the Nvidia DGX A100, their most powerful commercial GPU server. 2. GIN [51] is a state-of-the-art GNN with strong theoretical backing. Following [51], we set = 0, use 5 GNN layers, and an Adam optmizer [54]. We set node features using LDP [1], and add self loops which has been shown to improve performance [55]. We tune hyperparameters for (1) the number of hidden units \u2208 {32, 64} and (2) the learning rate \u2208 {0.001, 0.0001}. We find that 64 units with a learning rate of 0.0001 performs best. Running this search took over 23 days using the Nvidia DGX A100. 3. LDP [1] is a simple representation scheme that summarizes each node and its 1-hop neighborhood using using 5 degree statistics. These node features are then aggregated into a histogram where they are concatenated into feature vectors. We use the parameters suggested in [1]. Running this method took 4 hours parallelized across all 128 CPU cores of the Nvidia DGX A100. 4. NoG [3] ignores the topological graph structure, viewing the graph as a two-dimensional feature vector of the node and edge count. Running this method took approximately 1 hour parallelized across all 128 CPU cores of the Nvidia DGX A100.  Table 3: Comparison of macro-F1, precision and recall scores achieved by 7 methods at the type (low diversity, with 47 classes) and family (high diversity, with 696 classes) and tiny (5k graphs across 5 balanced classes) classification levels. Comparing methods across type and family, the classification task becomes increasingly difficult as diversity and data imbalance increase.\n\n\n5.\n\nFeather [52] is a more complex representation scheme that uses characteristic functions of node features with random walk weights to describe node neighborhoods. We perform a search over the key order \u2208 {4, 5, 6}parameter, which controls how much information is seen from higher order neighborhoods. We find that an order of 5 performs best. For the remaining parameters, we use the values suggested in [52]. Running this search took over 19 hours parallelized across all 128 CPU cores of the Nvidia DGX A100. 6. Slaq-VNGE [53] approximates the spectral distances between graphs based on the Von Neumann Graph Entropy (VNGE), which measures information divergence and distance between graphs [56]. We perform a search over 2 key parameters: number of random vectors n v \u2208 {10, 15, 20} and the number of Lanczos steps s \u2208 {10, 15, 20}. We find that n v = 15 and s = 15 performs best. For the remaining parameters, we use the values suggested in [53]. Running this search took 8 hours parallelized across all 128 CPU cores of the Nvidia DGX A100. 7. Slaq-LSD [53] approximates NetLSD, which measures the spectral distance between graphs based on the heat kernel [57]. We perform a search over 2 key parameters: number of random vectors n v \u2208 {10, 15, 20} and number of Lanczos steps s \u2208 {10, 15, 20}. We find that n v = 20 and s = 20 performs best. For the remaining parameters, we use the values suggested in [53]. Running this search took 8 hours parallelized across all 128 CPU cores of the Nvidia DGX A100.\n\nLimitations. We tested a number of alternative graph representation techniques and decided to exclude them-methods based on kernal [58,59,60,60], spectral [61,57,62,63,64] and document embedding [65,66]-as they were computationally prohibitive for the scale of MALNET, making it infeasible to run the techniques over the full dataset or perform parameter selection. We also note that methods that work well on other datasets may not work well on MALNET due to its larger scale and different structural properties (see Table 2); vice-versa, methods that work on MALNET may not transfer well to other datasets. We hope MALNET will inspire the release of additional large-scale datasets in the call graph domain and other novel application areas, which will help enable researchers to develop and evaluate methods that generalize across domains.\n\n\nEnabling New Discoveries\n\nCurrent graph representation research uses datasets that are significantly smaller in scale, and much less diverse compared to MALNET. In light of this, we want to study what new discoveries can be made, that were previously not possible due to dataset limitations. For example, what is the impact of class imbalance and diversity in the classification process? We synthesized our findings into the following 2 major discoveries (D1-D2).\n\nD1. Less Diversity, Better Performance. Comparing methods in Table 3 across malware type (low diversity, with 47 classes) and family (high diversity, with 696 classes), the classification task becomes increasingly difficult as diversity and data imbalance increase. This trend is visible across all 7 graph representation methods. For the best performing method, Feather, the  Figure 4: Class-wise comparison of model predictions where a darker cell represents a higher F1 score. We observe that certain classes are more challenging to classify than others.\n\nmacro-F1 score drops from 0.41 (type) to 0.34 (family). This matches our intuition from the \"tiny\" experiments in Table 3, which shows strong method performance when evaluating on a small subset of MALNET, containing 5 well-balanced types. D2. Simple Baselines Surprisingly Effective. Both NoG and LDP use basic graph statistics. Given the simplicity of these methods, they perform remarkably well, often outperforming or matching the performance of more complex methods. For example, in Table 3 we can see that LDP ties for the best performing family classification method, achieving a macro-F1 score of 0.34, while beating significantly more complex methods e.g., GIN, GCN, Slaq-LSD. A similar trend is found in type level classification results where LDP outperforms SLAQ-LSD and performs on par with GIN and GCN, despite being simpler and significantly faster than all 3 methods. Using small graph databases, earlier work [1] suggested the potential merits of considering simpler approaches. For the first time, using the largest graph database to date, our result confirms that many current techniques in the literature do not well capture non-attributed graph topology.\n\n\nEnabling New Research Directions\n\nThe unprecedented scale and diversity of MALNET opens up new exciting research opportunities for the graph representation community. Below, we present four promising directions (R1-R4).\n\n\nR1. Class Hardness Exploration.\n\nBecause of MALNET's large diversity, it is now possible for researchers to explore why certain classes are more challenging to classify than others. For example, Figure 4 shows Malware++Trj significantly outperforming both Troj and Adsware, which contain many more examples. This result is surprising, and provides strong impetus for additional research into class hardness, such as: (a) investigating whether existing methods are flexible enough to represent the diverse graph structures; and (b) inviting researchers to study the similarities across class types (e.g. merge Spr and Spyware). To support further development in this challenging area, we release the raw VirusTotal reports containing up to 70 labels per graph. R2. Imbalanced Classification Research. The natural world often follows a long-tailed data distribution where only a few classes account for most of the examples [16]. As evidenced in discovery D1, the long-tail often causes classifiers to perform well on the majority class, but poorly on rare ones. Unfortunately, imbalanced classification research in the graph domain has yet to receive much attention, largely because no datasets existed to support the research. By releasing MALNET, the largest naturally imbalanced database to date, we hope foster new interest in this important area.\n\n\nR3. Reconsidering Merits of Simpler Graph Classification Approaches. Our discovery in D2\n\nindicates that simpler methods can match or outperform more recent and sophisticated techniques, suggesting that current techniques aiming to capture graph topology are not yet well-reflected for non-attributed graphs, echoing results from [1]. More broadly, our discovery demonstrates-for the first time-such phenomenon at the unprecedented scale and diversity offered by MALNET. We believe our results will inspire researchers to reconsider the merits of simpler approaches and classic techniques, and to build on them to reap their benefits.\n\nR4. Enabling Explainable Research. In Figure 4, we observe that certain representation techniques better capture particular graph types. For example, Feather, GIN and GCN significantly outperforms other methods on Clicker++Trojan. This is an interesting result, as it could provide insight into when one technique is preferred over another (e.g., local neighborhood structure, global graph structure, graph motifs). We believe that the wide range of graph topology and substructures contained in MALNET's nearly 700 classes will enable new explainability research.\n\n\nConclusion\n\nThe study of graph representation learning is a critical tool in the characterization and understanding of complex interconnected systems. Currently, no large-scale database exists to accurately assess the strengths and weaknesses of these techniques. To address this, we contribute a new large-scale database-MALNET-containing 1, 262, 024 graphs, averaging over 15k nodes and 35k edges per graph, across a hierarchy of 47 types and 696 families. We hope MALNET will become a central resource for a broad range of graph research. The database is available at www.mal-net.org.\n\n\nAcknowledgements\n\nWe  \n\nFigure 1 :\n1MALNET has 1.2M graphs averaging 15k nodes and 35k edges per graph.\n\nFigure 2 :\n2Example of the graph type \"worm\" and its 7 families.\n\nFigure 3 :\n3FCG from the Banker++Trojan type, and Acecard family. Nodes represent functions and edges indicate interprocedural calls. Highlighted in blue is one potential execution path.\n\n\nacross vendors. To help address this issue, we collect and release the raw VirusTotal reports containing up to 70 antivirus labels for each graph.Nodes \n\nEdges \nAvg. Degree \n\nType \n# graph # fams. min mean \nmax \nstd min mean \nmax \nstd min mean max \nstd \n\nAdware \n884K \n250 \n7 \n14K 211K 16K \n4 \n31K 605K 38K 0.50 \n2.21 6.24 0.36 \nTrojan \n179K \n441 \n5 \n15K 228K 18K \n4 \n34K 530K 42K 0.58 \n2.05 6.74 0.52 \nBenign \n79K \n1 \n5 \n35K 552K 30K \n3 \n79K \n2M 74K 0.58 \n2.13 5.30 0.31 \nRiskware \n32K \n107 \n5 \n12K 173K 16K \n4 \n30K 334K 39K 0.58 \n2.16 5.42 0.56 \nAddisplay \n17K \n38 \n37 \n13K \n98K 15K \n37 \n28K 246K 34K 0.92 \n1.97 4.38 0.37 \nSpr \n14K \n46 \n12 \n28K 169K 21K \n7 \n67K 369K 52K 0.58 \n2.27 4.70 0.44 \nSpyware \n7K \n19 \n12 \n5K \n55K \n6K \n7 \n11K 121K 14K 0.58 \n1.95 4.27 0.46 \nExploit \n6K \n13 \n19 \n24K 102K 14K \n14 \n45K 250K 30K 0.74 \n1.88 3.34 0.33 \nDownloader \n5K \n7 \n37 \n20K 107K 28K \n37 \n46K 321K 63K 0.96 \n1.68 3.53 0.66 \nSmssend++Trojan \n4K \n25 \n16 \n34K 147K 19K \n13 \n82K 387K 48K 0.81 \n2.39 3.78 0.23 \n\nTable 1: Descriptive statistics for 10 largest graph types. See Appendix Table 4 for all graph statistics. \n\nDiversity & Imbalance. MALNET offers 47 types and 696 families of function call graphs following \na long tailed distribution with imbalance ratios of 7,827\u00d7 and 16,901\u00d7, respectively. To put this \nin perspective, MALNET's smallest class contains only 113 samples of the Click graph, while \n884,455 of the Adware type. Models learning from long-tailed distributions tend to favor the \nmajority class, leading to poor generalization performance on rare classes. While class imbalance is \ntraditionally solved by resampling the data (undersampling, oversampling) \n\nTable 2 :\n2Comparison of MALNET properties with common graph classification datasets. MALNET offers over 1.2 million graphs averaging 15k nodes and 35k edges with a hierarchical class structure containing 47 types and 696 families. This makes MALNET the largest public graph database constructed to date, offering 105\u00d7 more graphs, 39\u00d7 larger graphs on average, and 63\u00d7 more classes compared to the popular REDDIT-12K database. CC is the clustering coefficient.\n\n\nthank Kevin Allix and AndroZoo colleagues for generously allowing us to use their data in this research; this work was in part supported by NSF grant IIS-1563816, CNS-1704701, GRFP (DGE-1650044), a Raytheon research fellowship, and an IBM PhD fellowship.Appendix \n\nNodes \nEdges \nAvg. Degree \n\nType \n# graphs # fams. min mean \nmax \nstd \nmin mean \nmax \nstd min mean max \nstd \n\nAdware \n884K \n250 \n7 \n14K 211K 16K \n4 \n31K 605K 38K 0.50 \n2.21 6.24 0.36 \nTrojan \n179K \n441 \n5 \n15K 228K 18K \n4 \n34K 530K 42K 0.58 \n2.05 6.74 0.52 \nBenign \n79K \n1 \n5 \n35K 552K 30K \n3 \n79K \n2M 74K 0.58 \n2.13 5.30 0.31 \nRiskware \n32K \n107 \n5 \n12K 173K 16K \n4 \n30K 334K 39K 0.58 \n2.16 5.42 0.56 \nAddisplay \n17K \n38 \n37 \n13K \n98K 15K \n37 \n28K 246K 34K 0.92 \n1.97 4.38 0.37 \nSpr \n14K \n46 \n12 \n28K 169K 21K \n7 \n67K 369K 52K 0.58 \n2.27 4.70 0.44 \nSpyware \n7K \n19 \n12 \n5K \n55K \n6K \n7 \n11K 121K 14K 0.58 \n1.95 4.27 0.46 \nExploit \n6K \n13 \n19 \n24K 102K 14K \n14 \n45K 250K 30K 0.74 \n1.88 3.34 0.33 \nDownloader \n5K \n7 \n37 \n20K 107K 28K \n37 \n46K 321K 63K 0.96 \n1.68 3.53 0.66 \nSmssend++Trojan \n4K \n25 \n16 \n34K 147K 19K \n13 \n82K 387K 48K 0.81 \n2.39 3.78 0.23 \nTroj \n3K \n36 \n14 \n6K \n64K \n8K \n11 \n15K 115K 18K 0.79 \n1.98 5.60 0.52 \nSmssend \n3K \n12 \n15 \n20K 111K 14K \n12 \n49K 337K 38K 0.80 \n2.34 4.61 0.47 \nClicker++Trojan \n3K \n3 \n220 \n6K \n29K \n3K \n471 \n14K \n72K \n7K 1.52 \n2.33 2.92 0.18 \nAdsware \n3K \n16 \n368 \n11K \n53K 13K \n564 \n26K 143K 28K 1.02 \n2.19 4.27 0.26 \nMalware \n3K \n19 \n6 \n8K 119K 13K \n5 \n16K 286K 29K 0.83 \n1.90 3.97 0.67 \nAdware++Adware \n3K \n2 \n192 \n9K \n55K \n6K \n289 \n20K 138K 16K 1.49 \n2.16 3.17 0.27 \nRog \n2K \n22 \n26 \n15K 102K 19K \n31 \n35K 232K 46K 0.91 \n2.05 4.79 0.49 \nSpy \n2K \n7 \n48 \n22K 107K 15K \n44 \n49K 271K 40K 0.92 \n2.17 3.07 0.25 \nMonitor \n1K \n5 \n329 \n4K \n41K \n5K \n580 \n7K 102K 12K 1.53 \n1.83 3.09 0.21 \nRansom++Trojan \n1K \n7 \n556 \n51K 139K 22K \n965 115K 319K 48K 1.59 \n2.26 2.59 0.21 \nBanker++Trojan \n1K \n6 \n29 \n33K 103K 16K \n36 \n72K 237K 38K 1.22 \n2.15 2.99 0.24 \nTrj \n940 \n18 \n29 \n13K 171K 16K \n36 \n30K 402K 39K 1.15 \n2.20 4.44 0.49 \nGray \n922 \n10 \n51 \n16K \n66K 13K \n56 \n39K 153K 31K 0.88 \n2.09 4.33 0.58 \n\nAdware++Grayware++Virus \n\n835 \n4 \n22 \n6K \n84K 13K \n20 \n14K 193K 29K 0.86 \n2.79 3.17 0.34 \nFakeinst++Trojan \n718 \n10 \n51 \n15K \n94K 17K \n58 \n37K 229K 44K 0.99 \n2.12 2.84 0.48 \nMalware++Trj \n609 \n1 52K \n52K \n56K \n596 118K 119K 128K \n1K 2.28 \n2.28 2.29 \n0 \nBackdoor \n602 \n10 \n25 \n13K 146K 22K \n21 \n33K 427K 57K 0.84 \n2.19 3.55 0.37 \nDropper++Trojan \n592 \n8 \n47 \n5K \n67K \n7K \n50 \n11K 175K 18K 1.06 \n1.98 3.92 0.70 \nTrojandownloader \n568 \n7 \n1K \n38K 102K 19K \n2K \n86K 258K 45K 1.34 \n2.19 2.54 0.21 \nHacktool \n542 \n7 \n668 \n17K \n41K \n9K \n2K \n37K \n92K 20K 1.63 \n2.21 3.64 0.25 \nFakeapp \n425 \n5 \n24 \n4K \n50K \n7K \n21 \n8K 107K 16K 0.88 \n1.67 2.79 0.37 \nClickfraud++Riskware \n369 \n5 \n2K \n18K \n20K \n2K \n4K \n38K \n43K \n5K 1.95 \n2.13 2.25 0.04 \nAdload \n333 \n4 \n2K \n19K \n53K 18K \n4K \n48K 149K 48K 1.46 \n2.29 3.13 0.40 \nAddisplay++Adware \n294 \n1 \n3K \n20K \n50K \n9K \n6K \n41K 108K 20K 1.65 \n2.03 2.45 0.21 \nAdware++Virus \n274 \n9 \n38 \n15K \n59K 15K \n38 \n33K 138K 35K \n1 \n2.22 3.17 0.54 \nClicker \n265 \n5 \n47 \n3K \n75K \n7K \n43 \n6K 190K 17K 0.91 \n1.62 3.32 0.51 \nFakeapp++Trojan \n256 \n1 \n44 \n21K \n72K 15K \n39 \n41K 162K 34K 0.88 \n1.74 2.30 0.27 \nRiskware++Smssend \n247 \n7 \n12 \n2K \n60K \n6K \n7 \n5K 154K 14K 0.58 \n1.68 \n3 0.45 \nRootnik++Trojan \n223 \n5 \n210 \n16K \n84K 21K \n395 \n39K 197K 50K 1.15 \n2.59 3.21 0.47 \nWorm \n220 \n7 \n64 \n14K \n94K 15K \n78 \n31K 204K 34K 0.99 \n1.99 3.42 0.40 \nFakeangry \n211 \n2 \n516 \n6K \n98K 11K \n946 \n15K 279K 29K 1.70 \n2.35 3.29 0.27 \nVirus \n191 \n3 \n681 \n15K \n80K 19K \n1K \n35K 177K 46K 1.32 \n2.12 3.18 0.33 \nTrojandropper \n178 \n4 \n220 \n20K \n78K 18K \n236 \n39K 185K 39K 1.03 \n1.83 4.36 0.32 \nAdwareare \n152 \n3 \n893 \n26K \n57K 14K \n2K \n60K 144K 32K 1.88 \n2.25 2.60 0.20 \n\nRisktool++Riskware++Virus \n\n152 \n3 \n37 \n16K \n65K 16K \n37 \n36K 158K 37K \n1 \n1.92 3.17 0.48 \nSpy++Trojan \n119 \n5 \n54 \n31K 118K 25K \n66 \n75K 293K 61K 1.22 \n2.31 3.26 0.37 \nClick \n113 \n1 \n2K \n4K \n12K \n2K \n4K \n8K \n26K \n4K 1.80 \n2.04 2.74 0.21 \n\n\n\nTable 4 :\n4Descriptive statistics for each graph type in MALNET.\n\nA simple yet effective baseline for non-attributed graph classification. ICLR. Chen Cai, Yusu Wang, Chen Cai and Yusu Wang. A simple yet effective baseline for non-attributed graph classification. ICLR, 2019.\n\nA fair comparison of graph neural networks for graph classification. Federico Errica, Marco Podda, Davide Bacciu, Alessio Micheli, arXiv:1912.09893arXiv preprintFederico Errica, Marco Podda, Davide Bacciu, and Alessio Micheli. A fair comparison of graph neural networks for graph classification. arXiv preprint arXiv:1912.09893, 2019.\n\nOn the necessity of graph kernel baselines. Till Schulz, Pascal Welke, ECML-PKDD, GEM workshop. Till Schulz and Pascal Welke. On the necessity of graph kernel baselines. In ECML-PKDD, GEM workshop, 2019.\n\nPitfalls of graph neural network evaluation. Oleksandr Shchur, Maximilian Mumme, Aleksandar Bojchevski, Stephan G\u00fcnnemann, arXiv:1811.05868arXiv preprintOleksandr Shchur, Maximilian Mumme, Aleksandar Bojchevski, and Stephan G\u00fcnnemann. Pitfalls of graph neural network evaluation. arXiv preprint arXiv:1811.05868, 2018.\n\nProtein function prediction via graph kernels. M Karsten, Borgwardt, Cheng Soon, Stefan Ong, Sch\u00f6nauer, Alex J Svn Vishwanathan, Hans-Peter Smola, Kriegel, Bioinformatics. 21Karsten M Borgwardt, Cheng Soon Ong, Stefan Sch\u00f6nauer, SVN Vishwanathan, Alex J Smola, and Hans-Peter Kriegel. Protein function prediction via graph kernels. Bioinformatics, 21, 2005.\n\nDeep graph kernels. Pinar Yanardag, Vishwanathan, Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data MiningACMPinar Yanardag and SVN Vishwanathan. Deep graph kernels. In Proceedings of the 21th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. ACM, 2015.\n\nThe mnist database of handwritten digits. Yann Lecun, Yann LeCun. The mnist database of handwritten digits. http://yann. lecun. com/exdb/mnist/, 1998.\n\nEuphony: Harmonious unification of cacophonous anti-virus vendor labels for android malware. M\u00e9d\u00e9ric Hurier, Guillermo Suarez-Tangil, Santanu Kumar Dash, F Tegawend\u00e9, Yves Le Bissyand\u00e9, Jacques Traon, Lorenzo Klein, Cavallaro, 2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR). IEEEM\u00e9d\u00e9ric Hurier, Guillermo Suarez-Tangil, Santanu Kumar Dash, Tegawend\u00e9 F Bissyand\u00e9, Yves Le Traon, Jacques Klein, and Lorenzo Cavallaro. Euphony: Harmonious unification of ca- cophonous anti-virus vendor labels for android malware. In 2017 IEEE/ACM 14th International Conference on Mining Software Repositories (MSR). IEEE, 2017.\n\nVirustotal-free online virus, malware and url scanner. Virus Total. Virus Total. Virustotal-free online virus, malware and url scanner. 2012.\n\nOn the lack of consensus in anti-virus decisions: Metrics and insights on building ground truths of android malware. M\u00e9d\u00e9ric Hurier, Kevin Allix, F Tegawend\u00e9, Jacques Bissyand\u00e9, Yves Le Klein, Traon, International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. SpringerM\u00e9d\u00e9ric Hurier, Kevin Allix, Tegawend\u00e9 F Bissyand\u00e9, Jacques Klein, and Yves Le Traon. On the lack of consensus in anti-virus decisions: Metrics and insights on building ground truths of android malware. In International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, 2016.\n\nBetter malware ground truth: Techniques for weighting anti-virus vendor labels. Alex Kantchelian, Michael Carl Tschantz, Sadia Afroz, Brad Miller, Vaishaal Shankar, Rekha Bachwani, D Anthony, J Doug Joseph, Tygar, Proceedings of the 8th ACM Workshop on Artificial Intelligence and Security. the 8th ACM Workshop on Artificial Intelligence and SecurityAlex Kantchelian, Michael Carl Tschantz, Sadia Afroz, Brad Miller, Vaishaal Shankar, Rekha Bachwani, Anthony D Joseph, and J Doug Tygar. Better malware ground truth: Techniques for weighting anti-virus vendor labels. In Proceedings of the 8th ACM Workshop on Artificial Intelligence and Security, 2015.\n\nSmote: synthetic minority over-sampling technique. V Nitesh, Kevin W Chawla, Lawrence O Bowyer, W Philip Hall, Kegelmeyer, Journal of artificial intelligence research. 16Nitesh V Chawla, Kevin W Bowyer, Lawrence O Hall, and W Philip Kegelmeyer. Smote: synthetic minority over-sampling technique. Journal of artificial intelligence research, 16:321- 357, 2002.\n\nTrainable undersampling for class-imbalance learning. Minlong Peng, Qi Zhang, Xiaoyu Xing, Tao Gui, Xuanjing Huang, Yu-Gang Jiang, Keyu Ding, Zhigang Chen, Proceedings of the AAAI Conference on Artificial Intelligence. the AAAI Conference on Artificial Intelligence33Minlong Peng, Qi Zhang, Xiaoyu Xing, Tao Gui, Xuanjing Huang, Yu-Gang Jiang, Keyu Ding, and Zhigang Chen. Trainable undersampling for class-imbalance learning. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 33, pages 4707-4714, 2019.\n\nLearning imbalanced datasets with label-distribution-aware margin loss. Kaidi Cao, Colin Wei, Adrien Gaidon, Nikos Arechiga, Tengyu Ma, Advances in Neural Information Processing Systems. Kaidi Cao, Colin Wei, Adrien Gaidon, Nikos Arechiga, and Tengyu Ma. Learning imbal- anced datasets with label-distribution-aware margin loss. In Advances in Neural Information Processing Systems, pages 1565-1576, 2019.\n\nClass-balanced loss based on effective number of samples. Yin Cui, Menglin Jia, Tsung-Yi Lin, Yang Song, Serge Belongie, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionYin Cui, Menglin Jia, Tsung-Yi Lin, Yang Song, and Serge Belongie. Class-balanced loss based on effective number of samples. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 9268-9277, 2019.\n\nElf: An early-exiting framework for long-tailed classification. Rahul Duggal, Scott Freitas, Sunny Dhamnani, Duen Horng, Jimeng Sun, arXiv:2006.11979arXiv preprintRahul Duggal, Scott Freitas, Sunny Dhamnani, Duen Horng, Jimeng Sun, et al. Elf: An early-exiting framework for long-tailed classification. arXiv preprint arXiv:2006.11979, 2020.\n\nMalware obfuscation techniques: A brief survey. Ilsun You, Kangbin Yim, 2010 International conference on broadband, wireless computing, communication and applications. IEEEIlsun You and Kangbin Yim. Malware obfuscation techniques: A brief survey. In 2010 International conference on broadband, wireless computing, communication and applications. IEEE, 2010.\n\nGraph-based comparison of executable objects. Thomas Dullien, Rolf Rolles, SSTICThomas Dullien and Rolf Rolles. Graph-based comparison of executable objects. SSTIC, 2005.\n\nSignature generation and detection of malware families. Pankaj V Sai Sathyanarayan, Bezawada Kohli, Bruhadeshwar, Australasian Conference on Information Security and Privacy. SpringerV Sai Sathyanarayan, Pankaj Kohli, and Bezawada Bruhadeshwar. Signature generation and detection of malware families. In Australasian Conference on Information Security and Privacy. Springer, 2008.\n\nMatching structure and semantics: A survey on graph-based pattern matching. Brian Gallagher, AAAI Fall Symposium: Capturing and Using Patterns for Evidence Detection. Brian Gallagher. Matching structure and semantics: A survey on graph-based pattern matching. In AAAI Fall Symposium: Capturing and Using Patterns for Evidence Detection, pages 45-53, 2006.\n\nLarge-scale malware indexing using function-call graphs. Xin Hu, Kang G Tzi-Cker Chiueh, Shin, Proceedings of the 16th ACM conference on Computer and communications security. the 16th ACM conference on Computer and communications securityACMXin Hu, Tzi-cker Chiueh, and Kang G Shin. Large-scale malware indexing using function-call graphs. In Proceedings of the 16th ACM conference on Computer and communications security. ACM, 2009.\n\nMalware classification based on call graph clustering. Joris Kinable, Orestis Kostakis, Journal in computer virology. Joris Kinable and Orestis Kostakis. Malware classification based on call graph clustering. Journal in computer virology, 2011.\n\nImproved call graph comparison using simulated annealing. Orestis Kostakis, Joris Kinable, Hamed Mahmoudi, Kimmo Mustonen, Proceedings of the 2011 ACM Symposium on Applied Computing. the 2011 ACM Symposium on Applied ComputingACMOrestis Kostakis, Joris Kinable, Hamed Mahmoudi, and Kimmo Mustonen. Improved call graph comparison using simulated annealing. In Proceedings of the 2011 ACM Symposium on Applied Computing. ACM, 2011.\n\nDiscriminant malware distance learning on structural information for automated malware classification. Deguang Kong, Guanhua Yan, Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining. the 19th ACM SIGKDD international conference on Knowledge discovery and data miningACMDeguang Kong and Guanhua Yan. Discriminant malware distance learning on structural information for automated malware classification. In Proceedings of the 19th ACM SIGKDD international conference on Knowledge discovery and data mining. ACM, 2013.\n\nStructural detection of android malware using embedded call graphs. Hugo Gascon, Fabian Yamaguchi, Daniel Arp, Konrad Rieck, Proceedings of the 2013 ACM workshop on Artificial intelligence and security. the 2013 ACM workshop on Artificial intelligence and securityACMHugo Gascon, Fabian Yamaguchi, Daniel Arp, and Konrad Rieck. Structural detection of android malware using embedded call graphs. In Proceedings of the 2013 ACM workshop on Artificial intelligence and security, pages 45-54. ACM, 2013.\n\nDlgraph: Malware detection using deep learning and graph embedding. Haodi Jiang, Turki Turki, Jason Tl Wang, 17th IEEE International Conference on Machine Learning and Applications (ICMLA). IEEEHaodi Jiang, Turki Turki, and Jason TL Wang. Dlgraph: Malware detection using deep learning and graph embedding. In 2018 17th IEEE International Conference on Machine Learning and Applications (ICMLA). IEEE, 2018.\n\nComparative analysis of feature extraction methods of malware detection. Smita Ranveer, Swapnaja Hiray, International Journal of Computer Applications. 1205Smita Ranveer and Swapnaja Hiray. Comparative analysis of feature extraction methods of malware detection. International Journal of Computer Applications, 120(5), 2015.\n\nMassively multitask networks for drug discovery. Bharath Ramsundar, Steven Kearnes, Patrick Riley, Dale Webster, David Konerding, Vijay Pande, arXiv:1502.02072arXiv preprintBharath Ramsundar, Steven Kearnes, Patrick Riley, Dale Webster, David Konerding, and Vijay Pande. Massively multitask networks for drug discovery. arXiv preprint arXiv:1502.02072, 2015.\n\nMaximum unbiased validation (muv) data sets for virtual screening based on pubchem bioactivity data. G Sebastian, Knut Rohrer, Baumann, Journal of chemical information and modeling. 492Sebastian G Rohrer and Knut Baumann. Maximum unbiased validation (muv) data sets for virtual screening based on pubchem bioactivity data. Journal of chemical information and modeling, 49(2):169-184, 2009.\n\nMining significant graph patterns by leap search. Xifeng Yan, Hong Cheng, Jiawei Han, Philip S Yu, Proceedings of the 2008 ACM SIGMOD international conference on Management of data. the 2008 ACM SIGMOD international conference on Management of dataXifeng Yan, Hong Cheng, Jiawei Han, and Philip S Yu. Mining significant graph patterns by leap search. In Proceedings of the 2008 ACM SIGMOD international conference on Management of data, pages 433-444, 2008.\n\nMoleculenet: a benchmark for molecular machine learning. Zhenqin Wu, Bharath Ramsundar, Evan N Feinberg, Joseph Gomes, Caleb Geniesse, S Aneesh, Karl Pappu, Vijay Leswing, Pande, Chemical science. 92Zhenqin Wu, Bharath Ramsundar, Evan N Feinberg, Joseph Gomes, Caleb Geniesse, Aneesh S Pappu, Karl Leswing, and Vijay Pande. Moleculenet: a benchmark for molecular machine learning. Chemical science, 9(2):513-530, 2018.\n\nComparison of descriptor spaces for chemical compound retrieval and classification. Nikil Wale, A Ian, George Watson, Karypis, Knowledge and Information Systems. 143Nikil Wale, Ian A Watson, and George Karypis. Comparison of descriptor spaces for chemical compound retrieval and classification. Knowledge and Information Systems, 14(3):347-375, 2008.\n\nStatistical evaluation of the predictive toxicology challenge. Ashwin Hannu Toivonen, Srinivasan, D Ross, Stefan King, Christoph Kramer, Helma, Bioinformatics. 1910Hannu Toivonen, Ashwin Srinivasan, Ross D King, Stefan Kramer, and Christoph Helma. Statis- tical evaluation of the predictive toxicology challenge 2000-2001. Bioinformatics, 19(10):1183- 1193, 2003.\n\nStructure-activity relationship of mutagenic aromatic and heteroaromatic nitro compounds. correlation with molecular orbital energies and hydrophobicity. Asim Kumar Debnath, Rosa L Lopez De Compadre, Gargi Debnath, Alan J Shusterman, Corwin Hansch, Journal of medicinal chemistry. 342Asim Kumar Debnath, Rosa L Lopez de Compadre, Gargi Debnath, Alan J Shusterman, and Corwin Hansch. Structure-activity relationship of mutagenic aromatic and heteroaromatic nitro compounds. correlation with molecular orbital energies and hydrophobicity. Journal of medicinal chemistry, 34(2):786-797, 1991.\n\nIam graph database repository for graph based pattern recognition and machine learning. Kaspar Riesen, Horst Bunke, Joint IAPR International Workshops on Statistical Techniques in Pattern Recognition (SPR) and Structural and Syntactic Pattern Recognition (SSPR). SpringerKaspar Riesen and Horst Bunke. Iam graph database repository for graph based pattern recognition and machine learning. In Joint IAPR International Workshops on Statistical Techniques in Pattern Recognition (SPR) and Structural and Syntactic Pattern Recognition (SSPR), pages 287-297. Springer, 2008.\n\nGraph kernels for object category prediction in task-dependent robot grasping. Marion Neumann, Plinio Moreno, Laura Antanas, Roman Garnett, Kristian Kersting, Online Proceedings of the Eleventh Workshop on Mining and Learning with Graphs. Marion Neumann, Plinio Moreno, Laura Antanas, Roman Garnett, and Kristian Kersting. Graph kernels for object category prediction in task-dependent robot grasping. In Online Proceedings of the Eleventh Workshop on Mining and Learning with Graphs, pages 0-6, 2013.\n\nDistinguishing enzyme structures from non-enzymes without alignments. D Paul, Andrew J Dobson, Doig, Journal of molecular biology. 3304Paul D Dobson and Andrew J Doig. Distinguishing enzyme structures from non-enzymes without alignments. Journal of molecular biology, 330(4):771-783, 2003.\n\nAn api oriented open-source python framework for unsupervised learning on graphs. Oliver Benedek Rozemberczki, Rik Kiss, Sarkar, 2020Benedek Rozemberczki, Oliver Kiss, and Rik Sarkar. An api oriented open-source python framework for unsupervised learning on graphs. CIKM, 2020.\n\nGraphs over time: densification laws, shrinking diameters and possible explanations. Jure Leskovec, Jon Kleinberg, Christos Faloutsos, Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining. the eleventh ACM SIGKDD international conference on Knowledge discovery in data miningJure Leskovec, Jon Kleinberg, and Christos Faloutsos. Graphs over time: densification laws, shrinking diameters and possible explanations. In Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining, pages 177-187, 2005.\n\n. Aids antiviral screen. Aids antiviral screen. URL http://dtp. nci. nih. gov/docs/aids/aids-data. html, 2004.\n\nPubchem's bioassay database. Yanli Wang, Jewen Xiao, O Tugba, Jian Suzek, Jiyao Zhang, Zhigang Wang, Lianyi Zhou, Karen Han, Svetlana Karapetyan, Dracheva, A Benjamin, Shoemaker, Nucleic acids research. 40D1Yanli Wang, Jewen Xiao, Tugba O Suzek, Jian Zhang, Jiyao Wang, Zhigang Zhou, Lianyi Han, Karen Karapetyan, Svetlana Dracheva, Benjamin A Shoemaker, et al. Pubchem's bioassay database. Nucleic acids research, 40(D1):D400-D412, 2012.\n\nDeep ground truth analysis of current android malware. Fengguo Wei, Yuping Li, Sankardas Roy, Xinming Ou, Wu Zhou, International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. SpringerFengguo Wei, Yuping Li, Sankardas Roy, Xinming Ou, and Wu Zhou. Deep ground truth analysis of current android malware. In International Conference on Detection of Intrusions and Malware, and Vulnerability Assessment. Springer, 2017.\n\nGoogle announces over 2 billion monthly active devices on android. Ben Popper, Ben Popper. Google announces over 2 billion monthly active devices on android, May 2017.\n\nLi Li, Jun Gao, M\u00e9d\u00e9ric Hurier, Pingfan Kong, F Tegawend\u00e9, Alexandre Bissyand\u00e9, Jacques Bartel, Yves Le Klein, Traon, arXiv:1709.05281Androzoo++: Collecting millions of android apps and their metadata for the research community. arXiv preprintLi Li, Jun Gao, M\u00e9d\u00e9ric Hurier, Pingfan Kong, Tegawend\u00e9 F Bissyand\u00e9, Alexandre Bartel, Jacques Klein, and Yves Le Traon. Androzoo++: Collecting millions of android apps and their metadata for the research community. arXiv preprint arXiv:1709.05281, 2017.\n\nNokia threat intelligence report. Network Security. Nokia threat intelligence report. Network Security, 2018.\n\nAndrozoo: Collecting millions of android apps for the research community. Kevin Allix, F Tegawend\u00e9, Jacques Bissyand\u00e9, Yves Le Klein, Traon, 2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR). IEEEKevin Allix, Tegawend\u00e9 F Bissyand\u00e9, Jacques Klein, and Yves Le Traon. Androzoo: Collecting millions of android apps for the research community. In 2016 IEEE/ACM 13th Working Conference on Mining Software Repositories (MSR), pages 468-471. IEEE, 2016.\n\nAndroid: From reversing to decompilation. Anthony Desnos, Geoffroy Gueguen, Proc. of Black Hat Abu Dhabi. of Black Hat Abu DhabiAnthony Desnos and Geoffroy Gueguen. Android: From reversing to decompilation. Proc. of Black Hat Abu Dhabi, pages 77-101, 2011.\n\nRest: Robust and efficient neural networks for sleep monitoring in the wild. Rahul Duggal, Scott Freitas, Cao Xiao, Duen Horng Chau, Jimeng Sun, Proceedings of The Web Conference 2020. The Web Conference 2020Rahul Duggal, Scott Freitas, Cao Xiao, Duen Horng Chau, and Jimeng Sun. Rest: Robust and efficient neural networks for sleep monitoring in the wild. In Proceedings of The Web Conference 2020, pages 1704-1714, 2020.\n\nMatthias Fey, Jan Eric Lenssen, arXiv:1903.02428Fast graph representation learning with pytorch geometric. arXiv preprintMatthias Fey and Jan Eric Lenssen. Fast graph representation learning with pytorch geometric. arXiv preprint arXiv:1903.02428, 2019.\n\nSemi-supervised classification with graph convolutional networks. N Thomas, Max Kipf, Welling, ICLR. Thomas N. Kipf and Max Welling. Semi-supervised classification with graph convolutional networks. In ICLR, 2017.\n\nHow powerful are graph neural networks? In ICLR. Keyulu Xu, Weihua Hu, Jure Leskovec, Stefanie Jegelka, Keyulu Xu, Weihua Hu, Jure Leskovec, and Stefanie Jegelka. How powerful are graph neural networks? In ICLR, 2019.\n\nCharacteristic functions on graphs: Birds of a feather, from statistical descriptors to parametric models. Benedek Rozemberczki, Rik Sarkar, CIKM '20. ACMBenedek Rozemberczki and Rik Sarkar. Characteristic functions on graphs: Birds of a feather, from statistical descriptors to parametric models. In CIKM '20. ACM, 2020.\n\nJust slaq when you approximate: Accurate spectral distances for web-scale graphs. Anton Tsitsulin, Marina Munkhoeva, Bryan Perozzi, WWW '20. Anton Tsitsulin, Marina Munkhoeva, and Bryan Perozzi. Just slaq when you approximate: Accurate spectral distances for web-scale graphs. In WWW '20, 2020.\n\nAdam: A method for stochastic optimization. P Diederik, Jimmy Kingma, Ba, arXiv:1412.6980arXiv preprintDiederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.\n\nFelix Wu, Tianyi Zhang, Amauri Holanda De SouzaJr, Christopher Fifty, Tao Yu, Kilian Q Weinberger, arXiv:1902.07153Simplifying graph convolutional networks. arXiv preprintFelix Wu, Tianyi Zhang, Amauri Holanda de Souza Jr, Christopher Fifty, Tao Yu, and Kilian Q Weinberger. Simplifying graph convolutional networks. arXiv preprint arXiv:1902.07153, 2019.\n\nFast incremental von neumann graph entropy computation: Theory, algorithm, and applications. Pin-Yu Chen, Lingfei Wu, Sijia Liu, Indika Rajapakse, ICML. Pin-Yu Chen, Lingfei Wu, Sijia Liu, and Indika Rajapakse. Fast incremental von neumann graph entropy computation: Theory, algorithm, and applications. In ICML, pages 1091-1101, 2019.\n\nNetlsd: hearing the shape of a graph. Anton Tsitsulin, Davide Mottin, Panagiotis Karras, Alexander Bronstein, Emmanuel M\u00fcller, KDD. Anton Tsitsulin, Davide Mottin, Panagiotis Karras, Alexander Bronstein, and Emmanuel M\u00fcller. Netlsd: hearing the shape of a graph. In KDD, pages 2347-2356, 2018.\n\nGraph kernels. S Vichy, N Vishwanathan, N Nicol, Risi Schraudolph, Karsten M Kondor, Borgwardt, The Journal of Machine Learning Research. 11S Vichy N Vishwanathan, Nicol N Schraudolph, Risi Kondor, and Karsten M Borgwardt. Graph kernels. The Journal of Machine Learning Research, 11:1201-1242, 2010.\n\nShortest-path kernels on graphs. M Karsten, Hans-Peter Borgwardt, Kriegel, ICDM'05. IEEEKarsten M Borgwardt and Hans-Peter Kriegel. Shortest-path kernels on graphs. In ICDM'05. IEEE, 2005.\n\nGlobal graph kernels using geometric embeddings. Fredrik Johansson, Vinay Jethava, Devdatt Dubhashi, Chiranjib Bhattacharyya, ICML. Fredrik Johansson, Vinay Jethava, Devdatt Dubhashi, and Chiranjib Bhattacharyya. Global graph kernels using geometric embeddings. In ICML, 2014.\n\nGeometric scattering for graph data analysis. Feng Gao, Guy Wolf, Matthew Hirn, ICML. Feng Gao, Guy Wolf, and Matthew Hirn. Geometric scattering for graph data analysis. In ICML, pages 2122-2131, 2019.\n\nA simple baseline algorithm for graph classification. Lara Nathan De, Edouard Pineau, arXiv:1810.09155arXiv preprintNathan de Lara and Edouard Pineau. A simple baseline algorithm for graph classification. arXiv preprint arXiv:1810.09155, 2018.\n\nInvariant embedding for graph classification. Alexis Galland, Marc Lelarge, ICML 2019 Workshop on Learning and Reasoning with Graph-Structured Representations. Alexis Galland and Marc Lelarge. Invariant embedding for graph classification. In ICML 2019 Workshop on Learning and Reasoning with Graph-Structured Representations, 2019.\n\nHunt for the unique, stable, sparse and fast feature learning on graphs. Saurabh Verma, Zhi-Li Zhang, Advances in Neural Information Processing Systems. Saurabh Verma and Zhi-Li Zhang. Hunt for the unique, stable, sparse and fast feature learning on graphs. In Advances in Neural Information Processing Systems, pages 88-98, 2017.\n\nAnnamalai Narayanan, Mahinthan Chandramohan, Rajasekar Venkatesan, Lihui Chen, Yang Liu, Shantanu Jaiswal, arXiv:1707.05005Learning distributed representations of graphs. 2arXiv preprintAnnamalai Narayanan, Mahinthan Chandramohan, Rajasekar Venkatesan, Lihui Chen, Yang Liu, and Shantanu Jaiswal. graph2vec: Learning distributed representations of graphs. arXiv preprint arXiv:1707.05005, 2017.\n\nGl2vec: Graph embedding enriched by line graphs with edge features. Hong Chen, Hisashi Koga, International Conference on Neural Information Processing. SpringerHong Chen and Hisashi Koga. Gl2vec: Graph embedding enriched by line graphs with edge features. In International Conference on Neural Information Processing, pages 3-14. Springer, 2019.\n", "annotations": {"author": "[{\"end\":193,\"start\":60},{\"end\":305,\"start\":194},{\"end\":443,\"start\":306},{\"end\":559,\"start\":444}]", "publisher": null, "author_last_name": "[{\"end\":73,\"start\":66},{\"end\":205,\"start\":201},{\"end\":317,\"start\":313},{\"end\":459,\"start\":455}]", "author_first_name": "[{\"end\":65,\"start\":60},{\"end\":200,\"start\":194},{\"end\":312,\"start\":306},{\"end\":448,\"start\":444},{\"end\":454,\"start\":449}]", "author_affiliation": "[{\"end\":192,\"start\":95},{\"end\":304,\"start\":207},{\"end\":442,\"start\":345},{\"end\":558,\"start\":461}]", "title": "[{\"end\":57,\"start\":1},{\"end\":616,\"start\":560}]", "venue": null, "abstract": "[{\"end\":2036,\"start\":618}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2560,\"start\":2557},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2562,\"start\":2560},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2564,\"start\":2562},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2566,\"start\":2564},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2642,\"start\":2639},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2792,\"start\":2789},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2802,\"start\":2799},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2814,\"start\":2811},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2841,\"start\":2838},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3171,\"start\":3168},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3173,\"start\":3171},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6256,\"start\":6253},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6258,\"start\":6256},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":6260,\"start\":6258},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6262,\"start\":6260},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6402,\"start\":6399},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6501,\"start\":6498},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6809,\"start\":6805},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":6812,\"start\":6809},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6855,\"start\":6852},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6860,\"start\":6856},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6863,\"start\":6860},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6932,\"start\":6928},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":6935,\"start\":6932},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6973,\"start\":6969},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":7401,\"start\":7397},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7404,\"start\":7401},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":7535,\"start\":7531},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7869,\"start\":7865},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":7872,\"start\":7869},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7875,\"start\":7872},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7878,\"start\":7875},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":7881,\"start\":7878},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":7914,\"start\":7910},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":7917,\"start\":7914},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":8988,\"start\":8984},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":9162,\"start\":9158},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9165,\"start\":9162},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9168,\"start\":9165},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9171,\"start\":9168},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9174,\"start\":9171},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":9177,\"start\":9174},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9180,\"start\":9177},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":9413,\"start\":9409},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":9425,\"start\":9421},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":9435,\"start\":9431},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9446,\"start\":9442},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9457,\"start\":9453},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":9470,\"start\":9466},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9486,\"start\":9482},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":9575,\"start\":9571},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":9841,\"start\":9837},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":10391,\"start\":10387},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10404,\"start\":10401},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10421,\"start\":10418},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":10817,\"start\":10813},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":10834,\"start\":10830},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":10867,\"start\":10863},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":11254,\"start\":11250},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":11276,\"start\":11272},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":11300,\"start\":11296},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":11327,\"start\":11323},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":11367,\"start\":11363},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":11370,\"start\":11367},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":11395,\"start\":11391},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":12828,\"start\":12824},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":12853,\"start\":12849},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":12894,\"start\":12890},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":12956,\"start\":12952},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":12959,\"start\":12956},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":13125,\"start\":13122},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":13627,\"start\":13623},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":17206,\"start\":17202},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":17209,\"start\":17206},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":17454,\"start\":17450},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":17457,\"start\":17454},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":17525,\"start\":17521},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":17528,\"start\":17525},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":17561,\"start\":17558},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":17563,\"start\":17561},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":17566,\"start\":17563},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":17569,\"start\":17566},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":18183,\"start\":18179},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":18305,\"start\":18301},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":18353,\"start\":18349},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":18389,\"start\":18386},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":18458,\"start\":18454},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":18819,\"start\":18815},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":18893,\"start\":18889},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":18950,\"start\":18946},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":18986,\"start\":18983},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":19055,\"start\":19051},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":19581,\"start\":19578},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":19688,\"start\":19685},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":20322,\"start\":20318},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":20717,\"start\":20713},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":20837,\"start\":20833},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":21006,\"start\":21002},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":21258,\"start\":21254},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":21371,\"start\":21367},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":21474,\"start\":21470},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":21722,\"start\":21718},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":21955,\"start\":21951},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":21958,\"start\":21955},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":21961,\"start\":21958},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":21964,\"start\":21961},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":21979,\"start\":21975},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":21982,\"start\":21979},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":21985,\"start\":21982},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":21988,\"start\":21985},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":21991,\"start\":21988},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":22019,\"start\":22015},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":22022,\"start\":22019},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":24618,\"start\":24615},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":26015,\"start\":26011},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":26775,\"start\":26772}]", "figure": "[{\"attributes\":{\"id\":\"fig_1\"},\"end\":28338,\"start\":28258},{\"attributes\":{\"id\":\"fig_2\"},\"end\":28404,\"start\":28339},{\"attributes\":{\"id\":\"fig_3\"},\"end\":28592,\"start\":28405},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":30264,\"start\":28593},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":30727,\"start\":30265},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":34722,\"start\":30728},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":34788,\"start\":34723}]", "paragraph": "[{\"end\":3174,\"start\":2038},{\"end\":3517,\"start\":3176},{\"end\":4120,\"start\":3519},{\"end\":4583,\"start\":4122},{\"end\":5114,\"start\":4585},{\"end\":5466,\"start\":5139},{\"end\":8248,\"start\":5468},{\"end\":9323,\"start\":8324},{\"end\":10316,\"start\":9325},{\"end\":10730,\"start\":10318},{\"end\":11176,\"start\":10732},{\"end\":12274,\"start\":11178},{\"end\":13475,\"start\":12328},{\"end\":15065,\"start\":13501},{\"end\":15479,\"start\":15081},{\"end\":16119,\"start\":15514},{\"end\":16832,\"start\":16161},{\"end\":17309,\"start\":16834},{\"end\":18170,\"start\":17345},{\"end\":20303,\"start\":18172},{\"end\":21818,\"start\":20310},{\"end\":22662,\"start\":21820},{\"end\":23128,\"start\":22691},{\"end\":23687,\"start\":23130},{\"end\":24864,\"start\":23689},{\"end\":25086,\"start\":24901},{\"end\":26439,\"start\":25122},{\"end\":27076,\"start\":26532},{\"end\":27642,\"start\":27078},{\"end\":28232,\"start\":27657},{\"end\":28257,\"start\":28253}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":5465,\"start\":5458},{\"end\":5866,\"start\":5859},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":6007,\"start\":5991},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":8821,\"start\":8814},{\"end\":14182,\"start\":14175},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":14280,\"start\":14273},{\"end\":19928,\"start\":19921},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":22345,\"start\":22338},{\"end\":23198,\"start\":23191},{\"end\":23810,\"start\":23803},{\"end\":24184,\"start\":24177}]", "section_header": "[{\"attributes\":{\"n\":\"2\"},\"end\":5137,\"start\":5117},{\"attributes\":{\"n\":\"2.1\"},\"end\":8322,\"start\":8251},{\"attributes\":{\"n\":\"3\"},\"end\":12296,\"start\":12277},{\"attributes\":{\"n\":\"3.1\"},\"end\":12326,\"start\":12299},{\"attributes\":{\"n\":\"3.2\"},\"end\":13499,\"start\":13478},{\"attributes\":{\"n\":\"3.3\"},\"end\":15079,\"start\":15068},{\"attributes\":{\"n\":\"3.4\"},\"end\":15512,\"start\":15482},{\"attributes\":{\"n\":\"4\"},\"end\":16159,\"start\":16122},{\"attributes\":{\"n\":\"4.1\"},\"end\":17343,\"start\":17312},{\"end\":20308,\"start\":20306},{\"attributes\":{\"n\":\"4.2\"},\"end\":22689,\"start\":22665},{\"attributes\":{\"n\":\"4.3\"},\"end\":24899,\"start\":24867},{\"end\":25120,\"start\":25089},{\"end\":26530,\"start\":26442},{\"attributes\":{\"n\":\"5\"},\"end\":27655,\"start\":27645},{\"attributes\":{\"n\":\"6\"},\"end\":28251,\"start\":28235},{\"end\":28269,\"start\":28259},{\"end\":28350,\"start\":28340},{\"end\":28416,\"start\":28406},{\"end\":30275,\"start\":30266},{\"end\":34733,\"start\":34724}]", "table": "[{\"end\":30264,\"start\":28741},{\"end\":34722,\"start\":30984}]", "figure_caption": "[{\"end\":28338,\"start\":28271},{\"end\":28404,\"start\":28352},{\"end\":28592,\"start\":28418},{\"end\":28741,\"start\":28595},{\"end\":30727,\"start\":30277},{\"end\":30984,\"start\":30730},{\"end\":34788,\"start\":34735}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":3739,\"start\":3731},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":6441,\"start\":6433},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":7707,\"start\":7699},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":12684,\"start\":12676},{\"end\":23515,\"start\":23507},{\"end\":25292,\"start\":25284},{\"end\":27124,\"start\":27116}]", "bib_author_first_name": "[{\"end\":34873,\"start\":34869},{\"end\":34883,\"start\":34879},{\"end\":35077,\"start\":35069},{\"end\":35091,\"start\":35086},{\"end\":35105,\"start\":35099},{\"end\":35121,\"start\":35114},{\"end\":35384,\"start\":35380},{\"end\":35399,\"start\":35393},{\"end\":35595,\"start\":35586},{\"end\":35614,\"start\":35604},{\"end\":35632,\"start\":35622},{\"end\":35652,\"start\":35645},{\"end\":35909,\"start\":35908},{\"end\":35948,\"start\":35942},{\"end\":35969,\"start\":35965},{\"end\":35971,\"start\":35970},{\"end\":36000,\"start\":35990},{\"end\":36245,\"start\":36240},{\"end\":36674,\"start\":36670},{\"end\":36880,\"start\":36873},{\"end\":36898,\"start\":36889},{\"end\":36921,\"start\":36914},{\"end\":36935,\"start\":36934},{\"end\":36951,\"start\":36947},{\"end\":36954,\"start\":36952},{\"end\":36973,\"start\":36966},{\"end\":36988,\"start\":36981},{\"end\":37692,\"start\":37685},{\"end\":37706,\"start\":37701},{\"end\":37715,\"start\":37714},{\"end\":37734,\"start\":37727},{\"end\":37750,\"start\":37746},{\"end\":37753,\"start\":37751},{\"end\":38273,\"start\":38269},{\"end\":38294,\"start\":38287},{\"end\":38299,\"start\":38295},{\"end\":38315,\"start\":38310},{\"end\":38327,\"start\":38323},{\"end\":38344,\"start\":38336},{\"end\":38359,\"start\":38354},{\"end\":38371,\"start\":38370},{\"end\":38387,\"start\":38381},{\"end\":38896,\"start\":38895},{\"end\":38910,\"start\":38905},{\"end\":38912,\"start\":38911},{\"end\":38929,\"start\":38921},{\"end\":38931,\"start\":38930},{\"end\":38948,\"start\":38940},{\"end\":39266,\"start\":39259},{\"end\":39275,\"start\":39273},{\"end\":39289,\"start\":39283},{\"end\":39299,\"start\":39296},{\"end\":39313,\"start\":39305},{\"end\":39328,\"start\":39321},{\"end\":39340,\"start\":39336},{\"end\":39354,\"start\":39347},{\"end\":39810,\"start\":39805},{\"end\":39821,\"start\":39816},{\"end\":39833,\"start\":39827},{\"end\":39847,\"start\":39842},{\"end\":39864,\"start\":39858},{\"end\":40201,\"start\":40198},{\"end\":40214,\"start\":40207},{\"end\":40228,\"start\":40220},{\"end\":40238,\"start\":40234},{\"end\":40250,\"start\":40245},{\"end\":40702,\"start\":40697},{\"end\":40716,\"start\":40711},{\"end\":40731,\"start\":40726},{\"end\":40746,\"start\":40742},{\"end\":40760,\"start\":40754},{\"end\":41029,\"start\":41024},{\"end\":41042,\"start\":41035},{\"end\":41387,\"start\":41381},{\"end\":41401,\"start\":41397},{\"end\":41569,\"start\":41563},{\"end\":41599,\"start\":41591},{\"end\":41970,\"start\":41965},{\"end\":42306,\"start\":42303},{\"end\":42317,\"start\":42311},{\"end\":42741,\"start\":42736},{\"end\":42758,\"start\":42751},{\"end\":42992,\"start\":42985},{\"end\":43008,\"start\":43003},{\"end\":43023,\"start\":43018},{\"end\":43039,\"start\":43034},{\"end\":43468,\"start\":43461},{\"end\":43482,\"start\":43475},{\"end\":43994,\"start\":43990},{\"end\":44009,\"start\":44003},{\"end\":44027,\"start\":44021},{\"end\":44039,\"start\":44033},{\"end\":44497,\"start\":44492},{\"end\":44510,\"start\":44505},{\"end\":44526,\"start\":44518},{\"end\":44911,\"start\":44906},{\"end\":44929,\"start\":44921},{\"end\":45215,\"start\":45208},{\"end\":45233,\"start\":45227},{\"end\":45250,\"start\":45243},{\"end\":45262,\"start\":45258},{\"end\":45277,\"start\":45272},{\"end\":45294,\"start\":45289},{\"end\":45621,\"start\":45620},{\"end\":45637,\"start\":45633},{\"end\":45966,\"start\":45960},{\"end\":45976,\"start\":45972},{\"end\":45990,\"start\":45984},{\"end\":46004,\"start\":45996},{\"end\":46433,\"start\":46426},{\"end\":46445,\"start\":46438},{\"end\":46461,\"start\":46457},{\"end\":46463,\"start\":46462},{\"end\":46480,\"start\":46474},{\"end\":46493,\"start\":46488},{\"end\":46505,\"start\":46504},{\"end\":46518,\"start\":46514},{\"end\":46531,\"start\":46526},{\"end\":46878,\"start\":46873},{\"end\":46886,\"start\":46885},{\"end\":46898,\"start\":46892},{\"end\":47210,\"start\":47204},{\"end\":47240,\"start\":47239},{\"end\":47253,\"start\":47247},{\"end\":47269,\"start\":47260},{\"end\":47664,\"start\":47660},{\"end\":47684,\"start\":47680},{\"end\":47686,\"start\":47685},{\"end\":47711,\"start\":47706},{\"end\":47725,\"start\":47721},{\"end\":47727,\"start\":47726},{\"end\":47746,\"start\":47740},{\"end\":48191,\"start\":48185},{\"end\":48205,\"start\":48200},{\"end\":48754,\"start\":48748},{\"end\":48770,\"start\":48764},{\"end\":48784,\"start\":48779},{\"end\":48799,\"start\":48794},{\"end\":48817,\"start\":48809},{\"end\":49243,\"start\":49242},{\"end\":49258,\"start\":49250},{\"end\":49551,\"start\":49545},{\"end\":49577,\"start\":49574},{\"end\":49831,\"start\":49827},{\"end\":49845,\"start\":49842},{\"end\":49865,\"start\":49857},{\"end\":50479,\"start\":50474},{\"end\":50491,\"start\":50486},{\"end\":50499,\"start\":50498},{\"end\":50511,\"start\":50507},{\"end\":50524,\"start\":50519},{\"end\":50539,\"start\":50532},{\"end\":50552,\"start\":50546},{\"end\":50564,\"start\":50559},{\"end\":50578,\"start\":50570},{\"end\":50602,\"start\":50601},{\"end\":50947,\"start\":50940},{\"end\":50959,\"start\":50953},{\"end\":50973,\"start\":50964},{\"end\":50986,\"start\":50979},{\"end\":50993,\"start\":50991},{\"end\":51407,\"start\":51404},{\"end\":51508,\"start\":51506},{\"end\":51516,\"start\":51513},{\"end\":51529,\"start\":51522},{\"end\":51545,\"start\":51538},{\"end\":51553,\"start\":51552},{\"end\":51574,\"start\":51565},{\"end\":51593,\"start\":51586},{\"end\":51606,\"start\":51602},{\"end\":51609,\"start\":51607},{\"end\":52195,\"start\":52190},{\"end\":52204,\"start\":52203},{\"end\":52223,\"start\":52216},{\"end\":52239,\"start\":52235},{\"end\":52242,\"start\":52240},{\"end\":52639,\"start\":52632},{\"end\":52656,\"start\":52648},{\"end\":52930,\"start\":52925},{\"end\":52944,\"start\":52939},{\"end\":52957,\"start\":52954},{\"end\":52974,\"start\":52964},{\"end\":52987,\"start\":52981},{\"end\":53280,\"start\":53272},{\"end\":53289,\"start\":53286},{\"end\":53294,\"start\":53290},{\"end\":53594,\"start\":53593},{\"end\":53606,\"start\":53603},{\"end\":53797,\"start\":53791},{\"end\":53808,\"start\":53802},{\"end\":53817,\"start\":53813},{\"end\":53836,\"start\":53828},{\"end\":54075,\"start\":54068},{\"end\":54093,\"start\":54090},{\"end\":54371,\"start\":54366},{\"end\":54389,\"start\":54383},{\"end\":54406,\"start\":54401},{\"end\":54625,\"start\":54624},{\"end\":54641,\"start\":54636},{\"end\":54803,\"start\":54798},{\"end\":54814,\"start\":54808},{\"end\":54828,\"start\":54822},{\"end\":54860,\"start\":54849},{\"end\":54871,\"start\":54868},{\"end\":54884,\"start\":54876},{\"end\":55254,\"start\":55248},{\"end\":55268,\"start\":55261},{\"end\":55278,\"start\":55273},{\"end\":55290,\"start\":55284},{\"end\":55535,\"start\":55530},{\"end\":55553,\"start\":55547},{\"end\":55572,\"start\":55562},{\"end\":55590,\"start\":55581},{\"end\":55610,\"start\":55602},{\"end\":55803,\"start\":55802},{\"end\":55812,\"start\":55811},{\"end\":55828,\"start\":55827},{\"end\":55840,\"start\":55836},{\"end\":55861,\"start\":55854},{\"end\":55863,\"start\":55862},{\"end\":56122,\"start\":56121},{\"end\":56142,\"start\":56132},{\"end\":56334,\"start\":56327},{\"end\":56351,\"start\":56346},{\"end\":56368,\"start\":56361},{\"end\":56388,\"start\":56379},{\"end\":56606,\"start\":56602},{\"end\":56615,\"start\":56612},{\"end\":56629,\"start\":56622},{\"end\":56817,\"start\":56813},{\"end\":56836,\"start\":56829},{\"end\":57056,\"start\":57050},{\"end\":57070,\"start\":57066},{\"end\":57417,\"start\":57410},{\"end\":57431,\"start\":57425},{\"end\":57678,\"start\":57669},{\"end\":57699,\"start\":57690},{\"end\":57723,\"start\":57714},{\"end\":57741,\"start\":57736},{\"end\":57752,\"start\":57748},{\"end\":57766,\"start\":57758},{\"end\":58137,\"start\":58133},{\"end\":58151,\"start\":58144}]", "bib_author_last_name": "[{\"end\":34877,\"start\":34874},{\"end\":34888,\"start\":34884},{\"end\":35084,\"start\":35078},{\"end\":35097,\"start\":35092},{\"end\":35112,\"start\":35106},{\"end\":35129,\"start\":35122},{\"end\":35391,\"start\":35385},{\"end\":35405,\"start\":35400},{\"end\":35602,\"start\":35596},{\"end\":35620,\"start\":35615},{\"end\":35643,\"start\":35633},{\"end\":35662,\"start\":35653},{\"end\":35917,\"start\":35910},{\"end\":35928,\"start\":35919},{\"end\":35940,\"start\":35930},{\"end\":35952,\"start\":35949},{\"end\":35963,\"start\":35954},{\"end\":35988,\"start\":35972},{\"end\":36006,\"start\":36001},{\"end\":36015,\"start\":36008},{\"end\":36254,\"start\":36246},{\"end\":36268,\"start\":36256},{\"end\":36680,\"start\":36675},{\"end\":36887,\"start\":36881},{\"end\":36912,\"start\":36899},{\"end\":36932,\"start\":36922},{\"end\":36945,\"start\":36936},{\"end\":36964,\"start\":36955},{\"end\":36979,\"start\":36974},{\"end\":36994,\"start\":36989},{\"end\":37005,\"start\":36996},{\"end\":37699,\"start\":37693},{\"end\":37712,\"start\":37707},{\"end\":37725,\"start\":37716},{\"end\":37744,\"start\":37735},{\"end\":37759,\"start\":37754},{\"end\":37766,\"start\":37761},{\"end\":38285,\"start\":38274},{\"end\":38308,\"start\":38300},{\"end\":38321,\"start\":38316},{\"end\":38334,\"start\":38328},{\"end\":38352,\"start\":38345},{\"end\":38368,\"start\":38360},{\"end\":38379,\"start\":38372},{\"end\":38394,\"start\":38388},{\"end\":38401,\"start\":38396},{\"end\":38903,\"start\":38897},{\"end\":38919,\"start\":38913},{\"end\":38938,\"start\":38932},{\"end\":38953,\"start\":38949},{\"end\":38965,\"start\":38955},{\"end\":39271,\"start\":39267},{\"end\":39281,\"start\":39276},{\"end\":39294,\"start\":39290},{\"end\":39303,\"start\":39300},{\"end\":39319,\"start\":39314},{\"end\":39334,\"start\":39329},{\"end\":39345,\"start\":39341},{\"end\":39359,\"start\":39355},{\"end\":39814,\"start\":39811},{\"end\":39825,\"start\":39822},{\"end\":39840,\"start\":39834},{\"end\":39856,\"start\":39848},{\"end\":39867,\"start\":39865},{\"end\":40205,\"start\":40202},{\"end\":40218,\"start\":40215},{\"end\":40232,\"start\":40229},{\"end\":40243,\"start\":40239},{\"end\":40259,\"start\":40251},{\"end\":40709,\"start\":40703},{\"end\":40724,\"start\":40717},{\"end\":40740,\"start\":40732},{\"end\":40752,\"start\":40747},{\"end\":40764,\"start\":40761},{\"end\":41033,\"start\":41030},{\"end\":41046,\"start\":41043},{\"end\":41395,\"start\":41388},{\"end\":41408,\"start\":41402},{\"end\":41589,\"start\":41570},{\"end\":41605,\"start\":41600},{\"end\":41619,\"start\":41607},{\"end\":41980,\"start\":41971},{\"end\":42309,\"start\":42307},{\"end\":42333,\"start\":42318},{\"end\":42339,\"start\":42335},{\"end\":42749,\"start\":42742},{\"end\":42767,\"start\":42759},{\"end\":43001,\"start\":42993},{\"end\":43016,\"start\":43009},{\"end\":43032,\"start\":43024},{\"end\":43048,\"start\":43040},{\"end\":43473,\"start\":43469},{\"end\":43486,\"start\":43483},{\"end\":44001,\"start\":43995},{\"end\":44019,\"start\":44010},{\"end\":44031,\"start\":44028},{\"end\":44045,\"start\":44040},{\"end\":44503,\"start\":44498},{\"end\":44516,\"start\":44511},{\"end\":44531,\"start\":44527},{\"end\":44919,\"start\":44912},{\"end\":44935,\"start\":44930},{\"end\":45225,\"start\":45216},{\"end\":45241,\"start\":45234},{\"end\":45256,\"start\":45251},{\"end\":45270,\"start\":45263},{\"end\":45287,\"start\":45278},{\"end\":45300,\"start\":45295},{\"end\":45631,\"start\":45622},{\"end\":45644,\"start\":45638},{\"end\":45653,\"start\":45646},{\"end\":45970,\"start\":45967},{\"end\":45982,\"start\":45977},{\"end\":45994,\"start\":45991},{\"end\":46007,\"start\":46005},{\"end\":46436,\"start\":46434},{\"end\":46455,\"start\":46446},{\"end\":46472,\"start\":46464},{\"end\":46486,\"start\":46481},{\"end\":46502,\"start\":46494},{\"end\":46512,\"start\":46506},{\"end\":46524,\"start\":46519},{\"end\":46539,\"start\":46532},{\"end\":46546,\"start\":46541},{\"end\":46883,\"start\":46879},{\"end\":46890,\"start\":46887},{\"end\":46905,\"start\":46899},{\"end\":46914,\"start\":46907},{\"end\":47225,\"start\":47211},{\"end\":47237,\"start\":47227},{\"end\":47245,\"start\":47241},{\"end\":47258,\"start\":47254},{\"end\":47276,\"start\":47270},{\"end\":47283,\"start\":47278},{\"end\":47678,\"start\":47665},{\"end\":47704,\"start\":47687},{\"end\":47719,\"start\":47712},{\"end\":47738,\"start\":47728},{\"end\":47753,\"start\":47747},{\"end\":48198,\"start\":48192},{\"end\":48211,\"start\":48206},{\"end\":48762,\"start\":48755},{\"end\":48777,\"start\":48771},{\"end\":48792,\"start\":48785},{\"end\":48807,\"start\":48800},{\"end\":48826,\"start\":48818},{\"end\":49248,\"start\":49244},{\"end\":49265,\"start\":49259},{\"end\":49271,\"start\":49267},{\"end\":49572,\"start\":49552},{\"end\":49582,\"start\":49578},{\"end\":49590,\"start\":49584},{\"end\":49840,\"start\":49832},{\"end\":49855,\"start\":49846},{\"end\":49875,\"start\":49866},{\"end\":50484,\"start\":50480},{\"end\":50496,\"start\":50492},{\"end\":50505,\"start\":50500},{\"end\":50517,\"start\":50512},{\"end\":50530,\"start\":50525},{\"end\":50544,\"start\":50540},{\"end\":50557,\"start\":50553},{\"end\":50568,\"start\":50565},{\"end\":50589,\"start\":50579},{\"end\":50599,\"start\":50591},{\"end\":50611,\"start\":50603},{\"end\":50622,\"start\":50613},{\"end\":50951,\"start\":50948},{\"end\":50962,\"start\":50960},{\"end\":50977,\"start\":50974},{\"end\":50989,\"start\":50987},{\"end\":50998,\"start\":50994},{\"end\":51414,\"start\":51408},{\"end\":51511,\"start\":51509},{\"end\":51520,\"start\":51517},{\"end\":51536,\"start\":51530},{\"end\":51550,\"start\":51546},{\"end\":51563,\"start\":51554},{\"end\":51584,\"start\":51575},{\"end\":51600,\"start\":51594},{\"end\":51615,\"start\":51610},{\"end\":51622,\"start\":51617},{\"end\":52201,\"start\":52196},{\"end\":52214,\"start\":52205},{\"end\":52233,\"start\":52224},{\"end\":52248,\"start\":52243},{\"end\":52255,\"start\":52250},{\"end\":52646,\"start\":52640},{\"end\":52664,\"start\":52657},{\"end\":52937,\"start\":52931},{\"end\":52952,\"start\":52945},{\"end\":52962,\"start\":52958},{\"end\":52979,\"start\":52975},{\"end\":52991,\"start\":52988},{\"end\":53284,\"start\":53281},{\"end\":53302,\"start\":53295},{\"end\":53601,\"start\":53595},{\"end\":53611,\"start\":53607},{\"end\":53620,\"start\":53613},{\"end\":53800,\"start\":53798},{\"end\":53811,\"start\":53809},{\"end\":53826,\"start\":53818},{\"end\":53844,\"start\":53837},{\"end\":54088,\"start\":54076},{\"end\":54100,\"start\":54094},{\"end\":54381,\"start\":54372},{\"end\":54399,\"start\":54390},{\"end\":54414,\"start\":54407},{\"end\":54634,\"start\":54626},{\"end\":54648,\"start\":54642},{\"end\":54652,\"start\":54650},{\"end\":54806,\"start\":54804},{\"end\":54820,\"start\":54815},{\"end\":54845,\"start\":54829},{\"end\":54866,\"start\":54861},{\"end\":54874,\"start\":54872},{\"end\":54895,\"start\":54885},{\"end\":55259,\"start\":55255},{\"end\":55271,\"start\":55269},{\"end\":55282,\"start\":55279},{\"end\":55300,\"start\":55291},{\"end\":55545,\"start\":55536},{\"end\":55560,\"start\":55554},{\"end\":55579,\"start\":55573},{\"end\":55600,\"start\":55591},{\"end\":55617,\"start\":55611},{\"end\":55809,\"start\":55804},{\"end\":55825,\"start\":55813},{\"end\":55834,\"start\":55829},{\"end\":55852,\"start\":55841},{\"end\":55870,\"start\":55864},{\"end\":55881,\"start\":55872},{\"end\":56130,\"start\":56123},{\"end\":56152,\"start\":56143},{\"end\":56161,\"start\":56154},{\"end\":56344,\"start\":56335},{\"end\":56359,\"start\":56352},{\"end\":56377,\"start\":56369},{\"end\":56402,\"start\":56389},{\"end\":56610,\"start\":56607},{\"end\":56620,\"start\":56616},{\"end\":56634,\"start\":56630},{\"end\":56827,\"start\":56818},{\"end\":56843,\"start\":56837},{\"end\":57064,\"start\":57057},{\"end\":57078,\"start\":57071},{\"end\":57423,\"start\":57418},{\"end\":57437,\"start\":57432},{\"end\":57688,\"start\":57679},{\"end\":57712,\"start\":57700},{\"end\":57734,\"start\":57724},{\"end\":57746,\"start\":57742},{\"end\":57756,\"start\":57753},{\"end\":57774,\"start\":57767},{\"end\":58142,\"start\":58138},{\"end\":58156,\"start\":58152}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":34998,\"start\":34790},{\"attributes\":{\"doi\":\"arXiv:1912.09893\",\"id\":\"b1\"},\"end\":35334,\"start\":35000},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":210171276},\"end\":35539,\"start\":35336},{\"attributes\":{\"doi\":\"arXiv:1811.05868\",\"id\":\"b3\"},\"end\":35859,\"start\":35541},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":8174592},\"end\":36218,\"start\":35861},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":207227372},\"end\":36626,\"start\":36220},{\"attributes\":{\"id\":\"b6\"},\"end\":36778,\"start\":36628},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":11084808},\"end\":37423,\"start\":36780},{\"attributes\":{\"id\":\"b8\"},\"end\":37566,\"start\":37425},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":13852790},\"end\":38187,\"start\":37568},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":11303098},\"end\":38842,\"start\":38189},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":1554582},\"end\":39203,\"start\":38844},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":70124630},\"end\":39731,\"start\":39205},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":189998981},\"end\":40138,\"start\":39733},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":58014111},\"end\":40631,\"start\":40140},{\"attributes\":{\"doi\":\"arXiv:2006.11979\",\"id\":\"b15\"},\"end\":40974,\"start\":40633},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":8285377},\"end\":41333,\"start\":40976},{\"attributes\":{\"id\":\"b17\"},\"end\":41505,\"start\":41335},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":16564905},\"end\":41887,\"start\":41507},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":12917214},\"end\":42244,\"start\":41889},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":8270033},\"end\":42679,\"start\":42246},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":6740630},\"end\":42925,\"start\":42681},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":730757},\"end\":43356,\"start\":42927},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":229377168},\"end\":43920,\"start\":43358},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":16039663},\"end\":44422,\"start\":43922},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":58671914},\"end\":44831,\"start\":44424},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":215811092},\"end\":45157,\"start\":44833},{\"attributes\":{\"doi\":\"arXiv:1502.02072\",\"id\":\"b27\"},\"end\":45517,\"start\":45159},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":206885721},\"end\":45908,\"start\":45519},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":12334122},\"end\":46367,\"start\":45910},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":217680306},\"end\":46787,\"start\":46369},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":2596211},\"end\":47139,\"start\":46789},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":60027311},\"end\":47504,\"start\":47141},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":19990980},\"end\":48095,\"start\":47506},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":38663643},\"end\":48667,\"start\":48097},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":13075999},\"end\":49170,\"start\":48669},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":5719990},\"end\":49461,\"start\":49172},{\"attributes\":{\"id\":\"b37\"},\"end\":49740,\"start\":49463},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":9077635},\"end\":50331,\"start\":49742},{\"attributes\":{\"id\":\"b39\"},\"end\":50443,\"start\":50333},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":15283642},\"end\":50883,\"start\":50445},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":26473187},\"end\":51335,\"start\":50885},{\"attributes\":{\"id\":\"b42\"},\"end\":51504,\"start\":51337},{\"attributes\":{\"doi\":\"arXiv:1709.05281\",\"id\":\"b43\"},\"end\":52003,\"start\":51506},{\"attributes\":{\"id\":\"b44\"},\"end\":52114,\"start\":52005},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":18270557},\"end\":52588,\"start\":52116},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":41896556},\"end\":52846,\"start\":52590},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":210966313},\"end\":53270,\"start\":52848},{\"attributes\":{\"doi\":\"arXiv:1903.02428\",\"id\":\"b48\"},\"end\":53525,\"start\":53272},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":3144218},\"end\":53740,\"start\":53527},{\"attributes\":{\"id\":\"b50\"},\"end\":53959,\"start\":53742},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":218674393},\"end\":54282,\"start\":53961},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":211817949},\"end\":54578,\"start\":54284},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b53\"},\"end\":54796,\"start\":54580},{\"attributes\":{\"doi\":\"arXiv:1902.07153\",\"id\":\"b54\"},\"end\":55153,\"start\":54798},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":44171141},\"end\":55490,\"start\":55155},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":44061224},\"end\":55785,\"start\":55492},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":1729012},\"end\":56086,\"start\":55787},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":1550330},\"end\":56276,\"start\":56088},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":6718308},\"end\":56554,\"start\":56278},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":59336129},\"end\":56757,\"start\":56556},{\"attributes\":{\"doi\":\"arXiv:1810.09155\",\"id\":\"b61\"},\"end\":57002,\"start\":56759},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":216050382},\"end\":57335,\"start\":57004},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":1081340},\"end\":57667,\"start\":57337},{\"attributes\":{\"doi\":\"arXiv:1707.05005\",\"id\":\"b64\"},\"end\":58063,\"start\":57669},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":209339206},\"end\":58410,\"start\":58065}]", "bib_title": "[{\"end\":35378,\"start\":35336},{\"end\":35906,\"start\":35861},{\"end\":36238,\"start\":36220},{\"end\":36871,\"start\":36780},{\"end\":37478,\"start\":37425},{\"end\":37683,\"start\":37568},{\"end\":38267,\"start\":38189},{\"end\":38893,\"start\":38844},{\"end\":39257,\"start\":39205},{\"end\":39803,\"start\":39733},{\"end\":40196,\"start\":40140},{\"end\":41022,\"start\":40976},{\"end\":41561,\"start\":41507},{\"end\":41963,\"start\":41889},{\"end\":42301,\"start\":42246},{\"end\":42734,\"start\":42681},{\"end\":42983,\"start\":42927},{\"end\":43459,\"start\":43358},{\"end\":43988,\"start\":43922},{\"end\":44490,\"start\":44424},{\"end\":44904,\"start\":44833},{\"end\":45618,\"start\":45519},{\"end\":45958,\"start\":45910},{\"end\":46424,\"start\":46369},{\"end\":46871,\"start\":46789},{\"end\":47202,\"start\":47141},{\"end\":47658,\"start\":47506},{\"end\":48183,\"start\":48097},{\"end\":48746,\"start\":48669},{\"end\":49240,\"start\":49172},{\"end\":49825,\"start\":49742},{\"end\":50472,\"start\":50445},{\"end\":50938,\"start\":50885},{\"end\":52037,\"start\":52005},{\"end\":52188,\"start\":52116},{\"end\":52630,\"start\":52590},{\"end\":52923,\"start\":52848},{\"end\":53591,\"start\":53527},{\"end\":54066,\"start\":53961},{\"end\":54364,\"start\":54284},{\"end\":55246,\"start\":55155},{\"end\":55528,\"start\":55492},{\"end\":55800,\"start\":55787},{\"end\":56119,\"start\":56088},{\"end\":56325,\"start\":56278},{\"end\":56600,\"start\":56556},{\"end\":57048,\"start\":57004},{\"end\":57408,\"start\":57337},{\"end\":58131,\"start\":58065}]", "bib_author": "[{\"end\":34879,\"start\":34869},{\"end\":34890,\"start\":34879},{\"end\":35086,\"start\":35069},{\"end\":35099,\"start\":35086},{\"end\":35114,\"start\":35099},{\"end\":35131,\"start\":35114},{\"end\":35393,\"start\":35380},{\"end\":35407,\"start\":35393},{\"end\":35604,\"start\":35586},{\"end\":35622,\"start\":35604},{\"end\":35645,\"start\":35622},{\"end\":35664,\"start\":35645},{\"end\":35919,\"start\":35908},{\"end\":35930,\"start\":35919},{\"end\":35942,\"start\":35930},{\"end\":35954,\"start\":35942},{\"end\":35965,\"start\":35954},{\"end\":35990,\"start\":35965},{\"end\":36008,\"start\":35990},{\"end\":36017,\"start\":36008},{\"end\":36256,\"start\":36240},{\"end\":36270,\"start\":36256},{\"end\":36682,\"start\":36670},{\"end\":36889,\"start\":36873},{\"end\":36914,\"start\":36889},{\"end\":36934,\"start\":36914},{\"end\":36947,\"start\":36934},{\"end\":36966,\"start\":36947},{\"end\":36981,\"start\":36966},{\"end\":36996,\"start\":36981},{\"end\":37007,\"start\":36996},{\"end\":37701,\"start\":37685},{\"end\":37714,\"start\":37701},{\"end\":37727,\"start\":37714},{\"end\":37746,\"start\":37727},{\"end\":37761,\"start\":37746},{\"end\":37768,\"start\":37761},{\"end\":38287,\"start\":38269},{\"end\":38310,\"start\":38287},{\"end\":38323,\"start\":38310},{\"end\":38336,\"start\":38323},{\"end\":38354,\"start\":38336},{\"end\":38370,\"start\":38354},{\"end\":38381,\"start\":38370},{\"end\":38396,\"start\":38381},{\"end\":38403,\"start\":38396},{\"end\":38905,\"start\":38895},{\"end\":38921,\"start\":38905},{\"end\":38940,\"start\":38921},{\"end\":38955,\"start\":38940},{\"end\":38967,\"start\":38955},{\"end\":39273,\"start\":39259},{\"end\":39283,\"start\":39273},{\"end\":39296,\"start\":39283},{\"end\":39305,\"start\":39296},{\"end\":39321,\"start\":39305},{\"end\":39336,\"start\":39321},{\"end\":39347,\"start\":39336},{\"end\":39361,\"start\":39347},{\"end\":39816,\"start\":39805},{\"end\":39827,\"start\":39816},{\"end\":39842,\"start\":39827},{\"end\":39858,\"start\":39842},{\"end\":39869,\"start\":39858},{\"end\":40207,\"start\":40198},{\"end\":40220,\"start\":40207},{\"end\":40234,\"start\":40220},{\"end\":40245,\"start\":40234},{\"end\":40261,\"start\":40245},{\"end\":40711,\"start\":40697},{\"end\":40726,\"start\":40711},{\"end\":40742,\"start\":40726},{\"end\":40754,\"start\":40742},{\"end\":40766,\"start\":40754},{\"end\":41035,\"start\":41024},{\"end\":41048,\"start\":41035},{\"end\":41397,\"start\":41381},{\"end\":41410,\"start\":41397},{\"end\":41591,\"start\":41563},{\"end\":41607,\"start\":41591},{\"end\":41621,\"start\":41607},{\"end\":41982,\"start\":41965},{\"end\":42311,\"start\":42303},{\"end\":42335,\"start\":42311},{\"end\":42341,\"start\":42335},{\"end\":42751,\"start\":42736},{\"end\":42769,\"start\":42751},{\"end\":43003,\"start\":42985},{\"end\":43018,\"start\":43003},{\"end\":43034,\"start\":43018},{\"end\":43050,\"start\":43034},{\"end\":43475,\"start\":43461},{\"end\":43488,\"start\":43475},{\"end\":44003,\"start\":43990},{\"end\":44021,\"start\":44003},{\"end\":44033,\"start\":44021},{\"end\":44047,\"start\":44033},{\"end\":44505,\"start\":44492},{\"end\":44518,\"start\":44505},{\"end\":44533,\"start\":44518},{\"end\":44921,\"start\":44906},{\"end\":44937,\"start\":44921},{\"end\":45227,\"start\":45208},{\"end\":45243,\"start\":45227},{\"end\":45258,\"start\":45243},{\"end\":45272,\"start\":45258},{\"end\":45289,\"start\":45272},{\"end\":45302,\"start\":45289},{\"end\":45633,\"start\":45620},{\"end\":45646,\"start\":45633},{\"end\":45655,\"start\":45646},{\"end\":45972,\"start\":45960},{\"end\":45984,\"start\":45972},{\"end\":45996,\"start\":45984},{\"end\":46009,\"start\":45996},{\"end\":46438,\"start\":46426},{\"end\":46457,\"start\":46438},{\"end\":46474,\"start\":46457},{\"end\":46488,\"start\":46474},{\"end\":46504,\"start\":46488},{\"end\":46514,\"start\":46504},{\"end\":46526,\"start\":46514},{\"end\":46541,\"start\":46526},{\"end\":46548,\"start\":46541},{\"end\":46885,\"start\":46873},{\"end\":46892,\"start\":46885},{\"end\":46907,\"start\":46892},{\"end\":46916,\"start\":46907},{\"end\":47227,\"start\":47204},{\"end\":47239,\"start\":47227},{\"end\":47247,\"start\":47239},{\"end\":47260,\"start\":47247},{\"end\":47278,\"start\":47260},{\"end\":47285,\"start\":47278},{\"end\":47680,\"start\":47660},{\"end\":47706,\"start\":47680},{\"end\":47721,\"start\":47706},{\"end\":47740,\"start\":47721},{\"end\":47755,\"start\":47740},{\"end\":48200,\"start\":48185},{\"end\":48213,\"start\":48200},{\"end\":48764,\"start\":48748},{\"end\":48779,\"start\":48764},{\"end\":48794,\"start\":48779},{\"end\":48809,\"start\":48794},{\"end\":48828,\"start\":48809},{\"end\":49250,\"start\":49242},{\"end\":49267,\"start\":49250},{\"end\":49273,\"start\":49267},{\"end\":49574,\"start\":49545},{\"end\":49584,\"start\":49574},{\"end\":49592,\"start\":49584},{\"end\":49842,\"start\":49827},{\"end\":49857,\"start\":49842},{\"end\":49877,\"start\":49857},{\"end\":50486,\"start\":50474},{\"end\":50498,\"start\":50486},{\"end\":50507,\"start\":50498},{\"end\":50519,\"start\":50507},{\"end\":50532,\"start\":50519},{\"end\":50546,\"start\":50532},{\"end\":50559,\"start\":50546},{\"end\":50570,\"start\":50559},{\"end\":50591,\"start\":50570},{\"end\":50601,\"start\":50591},{\"end\":50613,\"start\":50601},{\"end\":50624,\"start\":50613},{\"end\":50953,\"start\":50940},{\"end\":50964,\"start\":50953},{\"end\":50979,\"start\":50964},{\"end\":50991,\"start\":50979},{\"end\":51000,\"start\":50991},{\"end\":51416,\"start\":51404},{\"end\":51513,\"start\":51506},{\"end\":51522,\"start\":51513},{\"end\":51538,\"start\":51522},{\"end\":51552,\"start\":51538},{\"end\":51565,\"start\":51552},{\"end\":51586,\"start\":51565},{\"end\":51602,\"start\":51586},{\"end\":51617,\"start\":51602},{\"end\":51624,\"start\":51617},{\"end\":52203,\"start\":52190},{\"end\":52216,\"start\":52203},{\"end\":52235,\"start\":52216},{\"end\":52250,\"start\":52235},{\"end\":52257,\"start\":52250},{\"end\":52648,\"start\":52632},{\"end\":52666,\"start\":52648},{\"end\":52939,\"start\":52925},{\"end\":52954,\"start\":52939},{\"end\":52964,\"start\":52954},{\"end\":52981,\"start\":52964},{\"end\":52993,\"start\":52981},{\"end\":53286,\"start\":53272},{\"end\":53304,\"start\":53286},{\"end\":53603,\"start\":53593},{\"end\":53613,\"start\":53603},{\"end\":53622,\"start\":53613},{\"end\":53802,\"start\":53791},{\"end\":53813,\"start\":53802},{\"end\":53828,\"start\":53813},{\"end\":53846,\"start\":53828},{\"end\":54090,\"start\":54068},{\"end\":54102,\"start\":54090},{\"end\":54383,\"start\":54366},{\"end\":54401,\"start\":54383},{\"end\":54416,\"start\":54401},{\"end\":54636,\"start\":54624},{\"end\":54650,\"start\":54636},{\"end\":54654,\"start\":54650},{\"end\":54808,\"start\":54798},{\"end\":54822,\"start\":54808},{\"end\":54849,\"start\":54822},{\"end\":54868,\"start\":54849},{\"end\":54876,\"start\":54868},{\"end\":54897,\"start\":54876},{\"end\":55261,\"start\":55248},{\"end\":55273,\"start\":55261},{\"end\":55284,\"start\":55273},{\"end\":55302,\"start\":55284},{\"end\":55547,\"start\":55530},{\"end\":55562,\"start\":55547},{\"end\":55581,\"start\":55562},{\"end\":55602,\"start\":55581},{\"end\":55619,\"start\":55602},{\"end\":55811,\"start\":55802},{\"end\":55827,\"start\":55811},{\"end\":55836,\"start\":55827},{\"end\":55854,\"start\":55836},{\"end\":55872,\"start\":55854},{\"end\":55883,\"start\":55872},{\"end\":56132,\"start\":56121},{\"end\":56154,\"start\":56132},{\"end\":56163,\"start\":56154},{\"end\":56346,\"start\":56327},{\"end\":56361,\"start\":56346},{\"end\":56379,\"start\":56361},{\"end\":56404,\"start\":56379},{\"end\":56612,\"start\":56602},{\"end\":56622,\"start\":56612},{\"end\":56636,\"start\":56622},{\"end\":56829,\"start\":56813},{\"end\":56845,\"start\":56829},{\"end\":57066,\"start\":57050},{\"end\":57080,\"start\":57066},{\"end\":57425,\"start\":57410},{\"end\":57439,\"start\":57425},{\"end\":57690,\"start\":57669},{\"end\":57714,\"start\":57690},{\"end\":57736,\"start\":57714},{\"end\":57748,\"start\":57736},{\"end\":57758,\"start\":57748},{\"end\":57776,\"start\":57758},{\"end\":58144,\"start\":58133},{\"end\":58158,\"start\":58144}]", "bib_venue": "[{\"end\":34867,\"start\":34790},{\"end\":35067,\"start\":35000},{\"end\":35430,\"start\":35407},{\"end\":35584,\"start\":35541},{\"end\":36031,\"start\":36017},{\"end\":36368,\"start\":36270},{\"end\":36668,\"start\":36628},{\"end\":37088,\"start\":37007},{\"end\":37491,\"start\":37480},{\"end\":37861,\"start\":37768},{\"end\":38478,\"start\":38403},{\"end\":39010,\"start\":38967},{\"end\":39422,\"start\":39361},{\"end\":39918,\"start\":39869},{\"end\":40338,\"start\":40261},{\"end\":40695,\"start\":40633},{\"end\":41142,\"start\":41048},{\"end\":41379,\"start\":41335},{\"end\":41680,\"start\":41621},{\"end\":42054,\"start\":41982},{\"end\":42419,\"start\":42341},{\"end\":42797,\"start\":42769},{\"end\":43108,\"start\":43050},{\"end\":43586,\"start\":43488},{\"end\":44123,\"start\":44047},{\"end\":44612,\"start\":44533},{\"end\":44983,\"start\":44937},{\"end\":45206,\"start\":45159},{\"end\":45699,\"start\":45655},{\"end\":46090,\"start\":46009},{\"end\":46564,\"start\":46548},{\"end\":46949,\"start\":46916},{\"end\":47299,\"start\":47285},{\"end\":47785,\"start\":47755},{\"end\":48358,\"start\":48213},{\"end\":48906,\"start\":48828},{\"end\":49301,\"start\":49273},{\"end\":49543,\"start\":49463},{\"end\":49978,\"start\":49877},{\"end\":50356,\"start\":50335},{\"end\":50646,\"start\":50624},{\"end\":51093,\"start\":51000},{\"end\":51402,\"start\":51337},{\"end\":51733,\"start\":51640},{\"end\":52055,\"start\":52039},{\"end\":52332,\"start\":52257},{\"end\":52694,\"start\":52666},{\"end\":53031,\"start\":52993},{\"end\":53377,\"start\":53320},{\"end\":53626,\"start\":53622},{\"end\":53789,\"start\":53742},{\"end\":54110,\"start\":54102},{\"end\":54423,\"start\":54416},{\"end\":54622,\"start\":54580},{\"end\":54953,\"start\":54913},{\"end\":55306,\"start\":55302},{\"end\":55622,\"start\":55619},{\"end\":55923,\"start\":55883},{\"end\":56170,\"start\":56163},{\"end\":56408,\"start\":56404},{\"end\":56640,\"start\":56636},{\"end\":56811,\"start\":56759},{\"end\":57162,\"start\":57080},{\"end\":57488,\"start\":57439},{\"end\":57838,\"start\":57792},{\"end\":58215,\"start\":58158},{\"end\":36453,\"start\":36370},{\"end\":38540,\"start\":38480},{\"end\":39470,\"start\":39424},{\"end\":40402,\"start\":40340},{\"end\":42484,\"start\":42421},{\"end\":43153,\"start\":43110},{\"end\":43671,\"start\":43588},{\"end\":44186,\"start\":44125},{\"end\":46158,\"start\":46092},{\"end\":50066,\"start\":49980},{\"end\":52718,\"start\":52696},{\"end\":53056,\"start\":53033}]"}}}, "year": 2023, "month": 12, "day": 17}