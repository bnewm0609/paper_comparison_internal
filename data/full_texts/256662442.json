{"id": 256662442, "updated": "2023-10-05 04:07:29.844", "metadata": {"title": "CCRep: Learning Code Change Representations via Pre-Trained Code Model and Query Back", "authors": "[{\"first\":\"Zhongxin\",\"last\":\"Liu\",\"middle\":[]},{\"first\":\"Zhijie\",\"last\":\"Tang\",\"middle\":[]},{\"first\":\"Xin\",\"last\":\"Xia\",\"middle\":[]},{\"first\":\"Xiaohu\",\"last\":\"Yang\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2023, "month": null, "day": null}, "abstract": "Representing code changes as numeric feature vectors, i.e., code change representations, is usually an essential step to automate many software engineering tasks related to code changes, e.g., commit message generation and just-in-time defect prediction. Intuitively, the quality of code change representations is crucial for the effectiveness of automated approaches. Prior work on code changes usually designs and evaluates code change representation approaches for a specific task, and little work has investigated code change encoders that can be used and jointly trained on various tasks. To fill this gap, this work proposes a novel Code Change Representation learning approach named CCRep, which can learn to encode code changes as feature vectors for diverse downstream tasks. Specifically, CCRep regards a code change as the combination of its before-change and after-change code, leverages a pre-trained code model to obtain high-quality contextual embeddings of code, and uses a novel mechanism named query back to extract and encode the changed code fragments and make them explicitly interact with the whole code change. To evaluate CCRep and demonstrate its applicability to diverse code-change-related tasks, we apply it to three tasks: commit message generation, patch correctness assessment, and just-in-time defect prediction. Experimental results show that CCRep outperforms the state-of-the-art techniques on each task.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2302.03924", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icse/LiuTXY23", "doi": "10.1109/icse48619.2023.00014"}}, "content": {"source": {"pdf_hash": "39de27b3ba14f358ff4c9adc0a79fd1206fc7292", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/2302.03924v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "7f594195d509561195ad1b669d31e6bd369bfafd", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/39de27b3ba14f358ff4c9adc0a79fd1206fc7292.txt", "contents": "\nCCRep: Learning Code Change Representations via Pre-Trained Code Model and Query Back\n\n\nZhongxin Liu \nZhijie Tang tangzhijie@zju.edu.cn \nXin Xia xin.xia@acm.org \nXiaohu Yang yangxh@zju.edu.cn \n\nZhejiang University Hangzhou\nChina\n\n\nZhejiang Univeristy Hangzhou\nChina, Huawei China\n\n\nZhejiang University Hangzhou\nChina\n\nCCRep: Learning Code Change Representations via Pre-Trained Code Model and Query Back\nIndex Terms-code changerepresentation learningcommit message generationpatch correctness assessmentjust-in-time defect prediction\nRepresenting code changes as numeric feature vectors, i.e., code change representations, is usually an essential step to automate many software engineering tasks related to code changes, e.g., commit message generation and just-intime defect prediction. Intuitively, the quality of code change representations is crucial for the effectiveness of automated approaches. Prior work on code changes usually designs and evaluates code change representation approaches for a specific task, and little work has investigated code change encoders that can be used and jointly trained on various tasks. To fill this gap, this work proposes a novel Code Change Representation learning approach named CCRep, which can learn to encode code changes as feature vectors for diverse downstream tasks. Specifically, CCRep regards a code change as the combination of its before-change and after-change code, leverages a pretrained code model to obtain high-quality contextual embeddings of code, and uses a novel mechanism named query back to extract and encode the changed code fragments and make them explicitly interact with the whole code change. To evaluate CCRep and demonstrate its applicability to diverse code-change-related tasks, we apply it to three tasks: commit message generation, patch correctness assessment, and just-in-time defect prediction. Experimental results show that CCRep outperforms the state-ofthe-art techniques on each task.\n\nI. INTRODUCTION\n\nDuring software development, developers constantly perform code changes to implement new features, fix bugs, and maintain existing code (e.g., refactoring) [1]. A code repository can be regarded as a sequence of ordered code changes. A code change can be represented as the combination of the code versions before and after the change or as a flat text, such as diff.\n\nAnalyzing and understanding code changes are important for a bulk of software engineering tasks. For example, commit message generation [2] requires to summarize the content and intent of code changes, and vulnerability fix identification [3] needs to analyze vulnerability-related information in a code change. To automate these tasks, a popular and effective paradigm is first encoding code changes into feature vectors, which are expected to capture the information related to the target task, and then leveraging machine learning or information retrieval (IR) techniques for automation [2], [4]- [7]. Such * Corresponding author. feature vectors are referred to as code change representations. Intuitively, the more precise the code change representations are, the less challenging the downstream learning or retrieval process will be. In contrast, if the representations miss some key information, it would be very hard, if not impossible, to obtain good results. Therefore, for code-change-related tasks, the quality of code change representations is critical to the effectiveness of automated approaches [8].\n\nMany researchers have investigated code change representation techniques for specific downstream tasks. Some studies converted code changes into numerical vectors based on manually crafted features, such as the sizes of code changes and the syntactic structures being changed [4], [5], [9], [10]. Another line of work leverages neural networks to learn code change representations on downstream tasks in an end-to-end manner [2], [3], [11], [12], i.e., learningbased techniques. Compared to the techniques based on manually crafted features, learning-based approaches automatically learn representations from data and have shown to be more effective in many tasks [3], [13]- [15]. However, many of them adopt task-specific architectures and are trained from scratch, which makes it non-trivial to adapt them to other tasks, especially the tasks with only small datasets. In addition, existing learning-based techniques either only focus on the changed code [3], [8], [16], separately encode the changed code and its context [14], [17], or encode the code change as a whole [2], [13], [18]. Some of them ignore the context or do not highlight the changed code. All of them lack explicit interaction between the changed code and the whole code change. These hinder existing techniques from effectively capturing information from code changes.\n\nOnly a few studies focus on general approaches for learning code change representations that can be used in diverse tasks [8], [16]. Yin et al. [16] proposed to learn distributed representations of small code edits by training an auto-encoder to reconstruct edits. Unfortunately, their approach only focuses on small code edits (i.e., a single hunk with no more than 3 changed lines) while many software engineering tasks require encoding code changes with multi hunks [2], [3]. Hoang et al. [8] proposed an approach named CC2Vec to learn code change representations that can be used to boost multiple codechange-related tasks. However, CC2Vec only considers the added and removed code lines and ignores their context. Also, it requires commit messages, i.e., natural language descriptions of code changes, to supervise the representation learning process. However, commit messages are not always available for code-change-related tasks [6], [14], and it is challenging to collect and identify high-quality commit messages [2], [19], [20].\n\nConsidering the lack of general code change representation approaches and to boost existing solutions to codechange-related tasks, this paper proposes a Code Change Representation learning approach named CCRep, which acts as a general code change encoder and can be used in various downstream tasks. Compared to Yin et al.'s work [16], CCRep targets commit-level code changes, which are employed by plenty of common code-change-related tasks. Different from CC2Vec [8], our approach is jointly trained with task-specific components like classifiers on the target task, not requiring additional labels for supervision. Considering the limitations of existing task-specific learning-based techniques, first, CCRep adopts a pre-trained code model to learn the representations of the code before and after a change. The pre-trained code model can build strong code representations [21], forming a good basis for learning code change representations on diverse downstream tasks. Moreover, a novel mechanism named query back is proposed and used in CCRep to highlight the changed code and learn to adaptively select important information from the code change by explicitly interacting the changed code fragments with the whole code change.\n\nSpecifically, given a code change, CCRep first splits it into the before-change code and the after-change code, compares the two code versions, and records the alignment information between them. Next, a pre-trained code model is adopted to compute the contextual embeddings of the two code versions, respectively. Then, the query-back mechanism is leveraged to capture the information related to the changed code from the contextual embeddings. In detail, it locates the changed code fragments via the alignment information and extracts a feature vector from them to capture change details. This change-aware feature vector is used as a query to \"retrieve\" related context information from the before-change and afterchange code through attention [22], namely query back, and produce the final code change representation.\n\nTo show the effectiveness and the generalization of CCRep, we evaluate CCRep on three code-change-related tasks: 1) commit message generation (CMG), 2) automated patch correctness assessment (APCA), 3) just-in-time defect prediction (JIT-DP). Experimental results show that: on CMG, CCRep improves the state-of-the-art approaches by 11.8% and 12.8% in terms of BLEU on two datasets. For APCA, CCRep improves the best baseline by 5.0% and 10.2% in terms of F1 and AUC, respectively. On JIT-DP, CCRep also outperforms the best-performing baseline by 2.1%-10.7% in terms of AUC on five projects. We also conduct ablation studies, which show that both the pre-trained code model and the query-back mechanism are helpful for each task.\n\nThe contributions of this work can be summarized as follows:\n\n\u2022 We propose the novel query-back mechanism for encoding code changes, which can highlight the changed code and learn to adaptively select important information from a code change. \u2022 We propose a novel code change representation approach named CCRep, which consists of a pre-trained code model and the query-back mechanism. CCRep is plugand-play and can be used in diverse code-change-related tasks. \u2022 We comprehensively evaluate CCRep on three downstream tasks. Experimental results show that CCRep outperforms the state-of-the-art baselines on each task. \u2022 We provide empirical evidence of the generalizability of pre-trained code models on diverse code-changed-related tasks. \u2022 We release our replication package 1 , including our source code and used datasets, for follow-up works. The remainder of this paper is organized as follows: Section 2 introduces the problem, pre-trained code models and the motivation of the query-back mechanism. Section 3 elaborates on our approach. Section 4 presents the procedures and results of our evaluation on three tasks. We discuss the variants and the limitations of our approach and the threats to validity in Section 5. After briefly reviewing the related work in Section 6, we conclude and point out future work in Section 7.\n\n\nII. PROBLEM AND PRELIMINARY\n\nThis section describes the problem we aim to solve, briefly introduces pre-trained code models and presents the motivation of the query-back mechanism.\n\n\nA. Problem\n\nThis work focuses on proposing a learning-based code change representation approach, or in other words a code change encoder, that can be used in various code-changerelated tasks. A code change T consists of the code versions before and after the change, i.e., T b and T a . Both T b and T a consist of a sequence of tokens, i.e.,\nT b = [t b 1 , t b 2 , ..., t b |T b | ] and T a = [t a 1 , t a 2 , ..., t a |T a | ],\nwhere |x| refers to the length of x. A code change encoder can be viewed as a function f which converts T into a numeric vector v, i.e., v = f (T ). Because different tasks may value different properties of code changes, in this work, we expect the proposed approach to be jointly trained with task-specific components on the target task.\n\n\nB. Pre-Trained Code Model\n\nModel pre-training is widely used in the natural language processing (NLP) community and the produced pretrained models have shown to be effective in various NLP tasks [23]- [25]. The rationales behind the impressive effectiveness of pre-trained models include: 1) pre-trained models learn high-quality language representations from huge corpora, 2) pre-trained models provide good parameter initializations for downstream tasks [26], and 3) pre-trained models are usually large and can avoid overfitting on the small datasets of downstream tasks. [26]. Recently, researchers also applied model pre-training to code and released a number of pre-trained code models, such as CodeBERT [21], GPT-C [27], PLBART [28] and CodeT5 [29]. These models use Transformer-based architectures, can be used to encode and/or generate code or code-related texts, and have been shown to significantly boost code understanding and generation tasks [21], [29]. The impressive performance and generality of these models inspire us to investigate their feasibility in code change representation learning.\n\n\nC. Motivation of Query-Back Mechanism\n\nA code change contains both the changed code and its context. Table I presents a code change with its commit message collected from the WordPress-Android project [30]. We can see from this example that: 1) The changed code is the core of a code change. For this example, by inspecting line 5 and line 7, we can know that the developer \"moved post id creation\". 2) The context may provide important information for understanding the code change. For instance, based on the context in Table I, we can know that the code change is related to \"try catch block\" and \"EditPost\". 3) Not all the context is useful. For this example, line 2-4, line 8 and line 10 are unrelated to the content and intent of this code change. As discussed in Section I, existing code change representation approaches either ignore the context [3], [8], [16], do not highlight the changed code [2], [13], [18], or consider all the context without adaptive information selection [14], [17]. These hinder their effectiveness and generality, and motivate us to propose the query-back mechanism to explicitly highlight the changed code and learn to adaptively capture information from the code change.\n\n\nIII. APPROACH\n\nThe framework of CCRep is presented in Figure 1. CCRep takes a code change as input and generates its vector representation. It consists of three parts: Code Change Preprocessing. Given a code change T , this part prepares the token sequences of the before-change and after-change code, i.e., T b and T a , identifies and aligns the modified code fragments in them, and stores their alignment information. Contextual Code Embedding. This part leverages a pretrained code model to obtain the contextual embedding of each token in T b and T a , respectively. Query-Back Mechanism. This part takes as input the contextual embeddings of T b and T a and the alignment information of the changed code fragments, leveraging the query-back mechanism to produce the vector representation of T .\n\n\nA. Code Change Preprocessing\n\nGiven a code change T , we first use a text diff tool, such as Python difflib [31], to convert it as a code diff. A code diff contains one or more hunks and each hunk includes the lines that are deleted from the before-change code (the deleted lines), the lines that are added in the after-change code (the added lines), and the unchanged lines before and after them (the context). We can extract the changed code fragments at different granularity levels, e.g., changed code tokens or changed code lines, from a code diff. Then, we split the code diff as a sequence of hunks and preprocess these hunks as follows:\n\nLine Aligning. As demonstrated in Table II, for each hunk, we first align the before-change and after-change code lineby-line using Python difflib and obtain multiple aligned line pairs. A newly added/deleted line is regarded to be aligned with an empty line. We label the lines in each pair with a line index l i starting from 1. Specifically, for each line pair: 1) If it refers to a line change, i.e., addition, deletion or replacement, we label the lines in the pair with l i . 2) If its two lines are the same, they are both labeled with the default index 0. After processing one aligned line pair, no matter whether this line pair refers to a line change or not, l i is increased by 1. For example, in Table II, the first, second, and fourth line pairs refer to line replacement, deletion, and addition, respectively. The lines in them are labeled with 1, 2 and 4, respectively. The lines in the third/fifth line pairs are the same, so they are labeled with 0. When we finish aligning one hunk, the current line index l i is passed to the next hunk as its initial line index. After this step, every line in both the before-change and afterchange code will have a line index, denoted as l b i and l a i . Tokenizing. The embedding layer in the pre-trained code model is tightly bound to the vocabulary of the model's tokenizer. Therefore, to correctly make use of the pre-trained embedding layer, we use the tokenizer provided by the pretrained code model to tokenize each code line into a token sequence. Such tokenizer is usually based on subwords, e.g., BPE [32], and needs to build a subword vocabulary from a corpus before pre-training. It can split a text into subwords and avoid the out-of-vocabulary problem [33]. Besides, for each token, we store the index l i of the line it belongs to.\n\nFlattening. To prepare the flat token sequences that can be processed by the pre-trained code model, for each of the before-change and after-change code, we independently collect its tokens from all hunks in the diff and concatenate the tokens into a sequence. The token sequences of the before-change    \nl b i l a i 1 if (cursor != null) { if (cursor != null && cursor.moveToFirst()) { Replace 1 1 2 cursor.moveToFirst(); - Delete 2 N/A 3 int idx = cursor.getColumnIndex(); int idx = cursor.getColumnIndex(); Keep 0 0 4 - if (idx != -1) Add N/A 4 5 result = cursor.getString(idx);} result = cursor.getString(idx);} Keep 0 0\n\"-\" refers to an empty line. and after-change code are denoted as\nT b = [t b 1 , t b 2 , ..., t b |T b | ] and T a = [t a 1 , t a 2 , ..., t a |T a | ]\n, respectively. Token Aligning. We align T b and T a token by token using Python difflib to identify the changed tokens. After aligning, every token in T b (T a ) will get a token change flag m b i (m a i ), which is 1 for changed tokens and 0 for unchanged ones.\n\n\nB. Contextual Code Embedding\n\nThis part takes as input the token sequences of the beforechange and after-change code, i.e., T b and T a , aiming to independently encode them as two sequences of contextual embeddings, i.e.,\nH b = [h b 1 , h b 2 , ..., h b |T b | ] and H a = [h a 1 , h a 2 , ..., h a |T a | ]. H b\nand H a are expected to capture the syntactic and semantic information of the code before and after the change. CCRep leverages a pre-trained code model as the code encoder. Because pre-trained code models are shown to be able to produce high-quality code representations and can be applied to datasets of different sizes [21], [27], [29]. Specifically, our implementation of CCRep uses CodeBERT, since it is widely used and has been shown to perform well on multiple code-related tasks [3], [12], [21]. Given T b or T a , CodeBERT uses a multi-layer Transformer [22] to make code tokens aggregate context information from each other and outputs their contextual embeddings H b or H a . Please note that CCRep is agnostic to pre-trained code models and CodeBERT can be substituted with other pre-trained models that can be used as a code encoder.\n\n\nC. Query-Back Mechanism\n\nThis part aims to produce the final representation v of the input code change T . To help CCRep effectively capture important information, we propose a novel mechanism named query back for this part. Its main idea is to encode the changed code fragments as a change-aware query q, use such query to \"retrieve\" important information from the beforechange and after-change code (the \"corpus\"), and produce the final code change representation v based on the \"retrieved\" information. It can be seen that this \"retrieval\" process makes the changed code explicitly interact with the whole code change, so that we can adaptively extract important information from the \"corpus\".\n\nSpecifically, this part takes as input the contextual embeddings H b and H a produced by the pre-trained code model and the alignment information extracted during preprocessing, and outputs the code change representation v. Considering that different tasks may focus on the changed code fragments of different granularity, we propose three variants of the queryback mechanism, namely the token-level, the line-level, and the hybrid query-back mechanisms. Figure 2 shows their architectures.\n\n1) Token-Level Query-Back Mechanism: This variant constructs the change-aware query q t based on the changed code tokens, which is beneficial if the changed code is fine-grained, e.g., only changes the name of a method or renames an identifier. As shown in the upper part of Figure 2, it works as follows:\n\nChanged Token Selection. During preprocessing, each token in T b and T a is assigned a token change flag m b i and m a i . Based on these flags, we first construct a flag sequence \nM b = [m b 1 , m b 2 , ..., m b |T b | ] (M a = [m a 1 ,\n\nSelf-Attention\n\nCode Change Feature \n2 2 3 0 2 3 3 Line Index \u2460 \u2461 \u2462 Reconstruct Lines \u2460 \u2461 \u2462 \u2460 \u2461 \u2462 Line-Align Concantenation \u2460 \u2461 \u2462 Line-Level Feature Extraction \u2460 \u2461 \u2462 Reconstructed1 b h 2 b h 3 b h 4 b h 2 b h 3 b h 1 a h 2 a h 3 a h 4 a h 2 a h Query Back 1 b h 2 b h 3 b h 4 b h 1 a h 2 a h 3 a h 4 a h 2 b h 3 b h 4 b h 2 b h 3 b h 2 a h 2 a h 3 a h 4 a h 2 b h 3 b h 4 b h 2 a h 3 a h 4 a h t q 2 b h 4 b h 2 a h 3 a h 4 a h 3 b h Code Change Feature Code Change Feature Hybrid Query Back Merge l q t v l v h v t b v t a v l a v l b v Query Back Query Back 1 l h 2 l h 3 l h 4 a h 4 a h 1 t h 2 t h 3 t h 4 t h Fig. 2.\nThe architectures of the token-level, the line-level, and the hybrid query-back mechanisms. The upper and lower parts depict the token-level and the line-level query-back mechanisms, respectively. They both take as input the contextual embeddings of the before-change and after-change code (the \"corpus\"), together with the alignment information, i.e., token change flags and line indices, extracted during preprocessing. Token-level query-back mechanism selects and combines changed tokens based on token change flags, constructs a query q t using a Transformer and the average pooling, and adaptively retrieves important information from the \"corpus\" to represent the code change as a feature vector v t . Line-level query-back follows a similar procedure, but it reconstructs the structure of changed line pairs based on line indices, explicitly masks unchanged lines when constructing the query q l , and outputs a feature vector v l as the code change representation. Hybrid query-back combines v t and v l to construct the code change representation v h .\n\nH , as follows:\n= [h b 1 , h b 2 , ..., h b |T b | ] \u2297 [m b 1 , m b 2 , ..., m b |T b | ], [h a 1 , h a 2 , ..., h a na ] = [h a 1 , h a 2 , ..., h a |Ta| ] \u2297 [m a 1 , m a 2 , ..., m a |Ta| ], H = [h b 1 , h b 2 , ..., h b n b , h a 1 , h a 2 , ..., h a na ],(1)\nwhere n b and n a refer to the numbers of the changed tokens in T b and T a , \u2297 denotes the masked-select operation which selects elements from the left operand based on the flags provided by the right operand. This step localizes the finegrained token changes and can help the model concentrate on them during feature extraction.\n\nQuery Construction. In this step, we make the changed tokens aware of each other and encode them as a single vector, namely the change-aware query q t . In detail, we first use a multi-layer Transformer to extract change-aware features\nH t = [h t 1 , h t 2 , ..., h t n b +na ] from H .\nThen, average pooling is applied to H t to squash it into the query q t , as follows:\nH t = Transformer(H ) (2) q t = Pooling(h t 1 , h t 2 , ..., h t n b +na )(3)\nq t is expected to encode the information of token changes. Query Back. The extracted change-aware query q t is used to \"retrieve\" relevant information from the before-change and after-change code (the \"corpus\") through attention. Since q t is also learned from the \"corpus\", we call this attention query-back attention. Specifically, we adopt the multi-head attention [22] to implement the \"retrieval\" process, where both the keys and the values are set to the contextual embeddings H b or H a and q t is used as the query, as follows:\nv t b = MultiHead(q t , H b , H b ) (4) v t a = MultiHead(q t , H a , H a )(5)\nv t b and v t a refer to the attended feature vectors retrieved from the before-changed and after-change code, respectively.\n\nMerging. Eventually, we merge v t b and v t a by element-wise addition to get the final code change representation v t :\nv t = v t b + v t a .(6)\n2) Line-Level Query-Back Mechanism: This variant constructs the change-aware query q l based on the changed code lines, which captures line-level code change features and can be useful if one or more code lines are completely added or deleted. As shown in the lower part of Figure 2, it works as follows:\n\nChanged Line Selection. In this step, based on the line index l i of each token generated during preprocessing, we first select out the tokens in the changed lines and reconstruct the line structures of the before-change and after-change code T b and T a , respectively. The reconstruction process is identical for T b and T a , and we leverage the example in  Figure 2. We refer to the process mentioned above as the scattering-reshaping operation, and briefly formulate it as: We refer to such longer line as paired line.\nLs b = [h b 1 , h b 2 , ..., h b |T b | ] [l b 1 , l b 1 , ..., l b |T b | ], Ls b \u2208 R L\u00d7W \u00d7d Ls a = [h a 1 ,\nQuery Construction. We also use a multi-layer Transformer to model each paired line and make its tokens interact with each other. Since the tokens in each paired line are in order, we further adopt the positional encoding [22]. For each paired line, we use the hidden state of its first token, i.e. CLS, as its feature vector. The feature vectors of all paired lines are denoted as H l = [h l 1 , h l 2 , ..., h l L ]. Then, we mask the vectors of the unchanged lines and apply average pooling to the masked H l for obtaining the change-aware query q l .\nq l = MaskPooling(H l , mask l )(9)\nwhere mask l indicates the changed lines. q l is expected to capture the information of the changed lines. Query Back & Merging. These two steps are similar to those of the token-level query-back mechanism. We use q l as the query to \"retrieve\" information from H b and H a , and produce the final code change representation v l .\n\n3) Hybrid Query-Back Mechanism: For some tasks concerning both token changes and line additions/deletions, both the token-level and the line-level change information can be beneficial. Considering this, we further propose the hybrid query-back mechanism, which fuses the token-level and the line-level query-back mechanisms. Specifically, we first obtain the code change representations produced by the token-level and the line-level query-back mechanisms, i.e., v t and v l . Then, we linearly project them into the same feature space, normalize them with layer normalization [34], and finally merge them through element-wise addition to produce the final code change representation v h :\nv h = LayerNorm(W T t v t ) + LayerNorm(W T l v l )(10)\nwhere W t and W l are learnable parameters of this module.\n\n\nD. The Usage of CCRep\n\nCCRep takes as input a code change and outputs a single numerical vector as the representation of the code change. It acts as a general encoder and can be used to replace or enhance existing code change encoders in both classification and generation tasks, as shown in Figure 3. To use CCRep for classification, the most straightforward way is to combine CCRep and task-specific components (e.g. a commit message encoder), connect them to a classifier, such as a Multi-Layer Perceptron (MLP), and jointly train CCRep, task-specific components and the classifier on the target classification task. Please note that some tasks only take code changes as input, so there may be no task-specific component. For generation tasks, CCRep can be plugged into a neural generation model to enhance its representations of code changes. Specifically, given a code change, neural generation models usually leverage a neural component named encoder to encode it into a sequence of feature vectors, and fed such vectors into another neural component named decoder for generation. We can concatenate the single vector produced by CCRep and each feature vector produced by the encoder of a neural generation model, respectively, to enhance the representations of code changes, and feed those enhanced representations into the decoder for better generation. Also, CCRep and the original encoder and decoder are jointly trained on the target generation task, instead of using a two-stage training scheme as CC2Vec.\n\n\nIV. EXPERIMENTS\n\nTo evaluate the effectiveness of CCRep and demonstrate its applicability to diverse downstream tasks, we apply CCRep to three different tasks related to code changes: commit message generation [13], automated patch correctness assessment [14], and just-in-time defect prediction [10]. For each task, we aim to answer two research questions: RQ1: How effective is CCRep compared to the state-ofthe-art approaches? We evaluate the three variants of CCRep, which use the token-level, the line-level and the hybrid queryback mechanisms and are referred to as CCRep token , CCRep line and CCRep hybrid , respectively, on the target task, and compare them against the state-of-the-art approaches. RQ2: How effective is each component in CCRep? There are two main components in CCRep, i.e., the pre-trained code model and the query-back mechanism. We conduct ablation studies on each task to investigate their contributions to CCRep's effectiveness.\n\nA. Commit Message Generation 1) Background: When committing a change into a software repository, developers are encouraged to write a textual message to describe the content and intent of this change, namely, commit message. Although commit messages are valuable for program comprehension and software maintenance, developers usually neglect writing high-quality commit messages due to time pressure and lack of direct motivation [19]. To alleviate this problem, researchers propose the Commit Message Generation (CMG) task, which takes as input a commit and outputs a concise description summarizing this commit.\n\n2) Baselines: The most recent state-of-the-art CMG approach is FIRA proposed by Dong et.al. [35], which employs Graph Convolution Network (GCN) [36] as the encoder and a Transformer as the decoder. FIRA further proposes a dual copy mechanism to copy both tokens and sub-tokens from the input code change during generation. According to the evaluation results presented in the FIRA paper, we additionally choose the best-performing retrieval-based CMG approach, i.e., NNGen [20], the best-performing learningbased approach, i.e., CODISUM [37], and CoReC [13], which combines retrieval-based and learning-based methods, as the baselines. We also use LogGen [8] as a baseline, since it is proposed in the CC2Vec paper and is the adaption of CC2Vec to CMG.\n\n3) Our Approach: Following the description in Section III-D, we plug CCRep into a neural generation model by concatenating the feature vector produced by CCRep with the sequence features of code diff produced by the pre-trained code model (i.e., CodeBERT), as illustrated in the lower part of Figure 3.\n\n\n4) Experimental Setting:\n\nWe evaluate our approach on CMG with the datasets used in the CoReC paper [13] and the FIRA paper [35]. Both datasets are widely-used for this task. The dataset used by CoReC was initially collected by Jiang et al. [2] and further cleansed by Liu et al. [20], containing 22.0K commits. Since CCRep focuses on code  [37], which contains 75K, 8K and 7.6K commit-message pairs in the training, validation and test sets, respectively. Following FIRA, our approach adopts a Transformer as the decoder and also equips with a copy mechanism and the identifier abstraction used by FIRA. Since Dong et al [35] have evaluated FIRA and other baseline approaches on this dataset, the evaluation results of all the baselines shown in Table IV are directly copied from the FIRA paper.\n\nFollowing prior work [13], [35], the Adam optimizer [42] is used to minimize the average cross-entropy loss during training, and BLEU [43], METEOR [44] and ROUGE-L [45] are used as evaluation metrics. However, Tao et al. [46] reported that a variant of the original BLEU called B-Norm BLEU is more correlated with human judgment on the quality of generated commit messages. Thus, we use the B-Norm BLEU as the substitution of the original BLEU-4 in our experiments (denoted as BLEU as well). 5) Results for RQ1: Experimental results on CMG are shown in Table III and Table IV. CCRep token , CCRep line and CCRep hybrid stand for the three variants of our approach. It is  [47]. All the p-values are less than 0.001, indicating that the performance differences between our approach and the baselines are significant. 6) Results for RQ2: To answer RQ2, we compare the best-performing variant of our approach, i.e., CCRep token , with two special models, namely CCRep\u2212CodeBERT and CCRep\u2212QueryBack. The former replaces CodeBERT in CCRep token with a RoBERTa-base model [48], which is widely used as a baseline encoder in the NLP community. CCRep\u2212QueryBack removes the query-back mechanism from CCRep token and directly feeds the diff's feature vectors produced by the CodeBERT encoder to the decoder for generation.\n\nExperimental results in Table V and Table VI show that our approach outperforms the two special models in terms of all metrics, indicating the effectiveness of the pre-trained code model and the query-back mechanism. We conduct statistical significance tests like RQ1. The p-values of CCRep compared to CCRep\u2212QueryBack are all less than 0.001, which means that the query-back mechanism brings statistically significant performance improvements. The p-values of CCRep compared to CCRep\u2212CodeBERT are all less than 0.05 except the one calculated on the CoReC dataset in terms of BLEU. This indicates that CodeBERT are also significantly beneficial in most cases.\n\nB. Automated Patch Correctness Assessment 1) Background: Automated Program Repair (APR) [49] aims to automatically generate bug-fixing patches. Many APR approaches follow a generate-and-validate methodology, which examines the generated patches with developer-provided test suits. Because test suits may be inadequate to cover all possible cases, a generated patch that passes all test cases (i.e., plausible patch) may still be incorrect (i.e., overfitting patch). This is known as the overfitting problem of APR [50], [51]. To alleviate this problem, many techniques have been proposed to automatically identify correct patches among plausible patches, namely Automated Patch Correctness Assessment (APCA), which is a binary classification task of code changes.\n\n2) Baselines: We consider existing APCA approaches that take patches as input as baselines. CACHE, recently proposed by Lin et al. [14], is the state-of-the-art APCA approach. Given a patch, CACHE uses AST paths [52] to extract the features of its deleted code, its added code and their context, and integrates such features as the patch feature for prediction. Another recent work from Tian et al. [6] leverages pretrained representation learning models, such as BERT [23] and CC2Vec [8], with some feature comparison functions [8] to extract patch features and uses classifiers like Logistic Regression (LR) and Decision Tree (DT) for prediction.\n\n3) Our Approach: As illustrated in Section III-D and the upper part of Figure 3, to apply CCRep to APCA, we simply connect CCRep to a two-layer Multi-Layer Perceptron (MLP) classifier for prediction. 4) Experimental Setting: We use the two datasets constructed by Lin et al. [14] for evaluation and refer to them as CACHE-Small and CACHE-Large. CACHE-Small was constructed by merging and deduplicating the plausible patches collected by Wang et al. [53] and Tian et al. [6], containing 1,183 patches from the Defects4J benchmark. CACHE-Large has 49.7K patches and was built by merging and deduplicating the patches from RepairThemAll [54] and ManySStuBs4J [55]. Both datasets are roughly balanced. Five widely-used classification metrics, including Accuracy, Precision, Recall, F1 and AUC, are used for evaluation. Following Lin et al. [14], we perform 5-fold cross-validation on both datasets, use the Adam optimizer to minimize the binary crossentropy loss during training, and employ Dropout [56] in the classifier.\n\nBecause we use the same datasets and experimental settings as Lin et al. [14], the evaluation results of the baselines are directly borrowed from their paper. For space constraints, we only present the variants of Tian et al.'s approach that: 1) achieve the best F1 or the best AUC, or 2) use CC2Vec and achieve the best F1 or AUC among all the variants using CC2Vec. 5) Results for RQ1: The evaluation results are shown in Table VII and Table VIII. It can be seen that on CACHE-Small, our approach outperforms CACHE in terms of all metrics except precision. Our best variant, i.e., CCRep hybrid , substantially outperforms CACHE in terms of recall by 12.3 points and improves CACHE in terms of F1 and AUC by 3.9 points and 8.2 points, respectively. For Tian et al.'s approach, our approach outperforms all of its variants, including the CC2Vec-based variants, in terms of F1 and AUC by large margins. On CACHE-Large, our approach also outperforms Tian et al.'s approach and CACHE in terms of all metrics. Our best variant, i.e., CCRep hybrid , achieves an F1 of 99.6% and an AUC of 99.99%. One possible reason behind the impressive performance of both CACHE and our approach is that CACHE-Large is way larger than CACHE-Small, which may ease the learning. Another possible reason is that CACHE-Large is synthetic to some extent. Specifically, according to Lin et al. [14], in CACHE-Large, almost all correct patches are human-written patches, while all overfitting patches are generated by APR tools. Therefore, an approach can perform well if it is able to tell from human-written patches and APRgenerated patches.\n\nAnother thing worth mentioning is that CCRep hybrid outperforms the other two variants on the two datasets in terms of AUC, which highlights that both the token-level and the linelevel change information is useful for APCA. 6) Results for RQ2: We compare the best-performing variant, i.e., CCRep hybrid , with CCRep\u2212CodeBERT and CCRep\u2212QueryBack. CCRep\u2212CodeBERT replaces Code-BERT in CCRep hybrid with the RoBERTa-base model [48], which is a widely-used baseline encoder. CCRep\u2212QueryBack directly uses CodeBERT to encode a patch's diff and uses the contextual embedding of a special token CLS inserted at the beginning of the diff as the code change representation. Table IX presents the results, which indicate that both the pretrained code model and the query back mechanism positively affect the effectiveness of CCRep on CACHE-Small. However, there are no significant performance differences between the two special models and CCRep on CACHE-Large. A possible explanation for this is that distinguishing correct and overfitting patches in CACHE-Large is not very hard and less powerful models can also fit the data.\n\nC. Just-in-Time Defect Prediction 1) Background: Software defects are inevitable and may substantially affect businesses and even people's lives [11]. On the other hand, the size and complexity of modern software systems grow significantly, making it hard and costly to find defects from them. To this end, just-in-time defect prediction (JIT-DP) has been proposed to identify defective code changes and provide in-time feedback when developers commit changes to the code base [4], [5], [10], [11]. Given a commit, JIT-DP targets at predicting whether it is defective and is a binary classification task just like APCA. However, different from APCA, JIT-DP targets real-world defective commits and can take as input both the code change and the commit message in a commit.\n\n2) Baselines: We use three state-of-the-art JIT-DP approaches, i.e., DeepJIT [11], CC2Vec [8] and LAPredict [10] as baselines. Given a commit, DeepJIT leverages CNNs to extract feature vectors from the code change and the commit message, respectively, and concatenates such vectors as the commit vector for prediction. Hoang et al. [8] use CC2Vec to encode a code change into a feature vector and appends such vector to the commit feature extracted by DeepJIT for prediction. We also refer to this approach as CC2Vec for convenience. LAPredict, proposed by Zeng et al. [10], uses the number of added code lines as the commit feature and adopts an LR classifier to perform JIT-DP.\n\n3) Our Approach: We follow Section III-D and the upper part of Figure 3 to apply CCRep in JIT-DP, similar to APCA. The only difference is that we concatenate the output of CCRep with the commit message feature produced by a CNN (i.e., the task-specific features in Figure 3) for prediction, following DeepJIT [11]. 4) Experimental Setting: We compare CCRep with the baselines on the dataset constructed by Zeng et al. [10]. The dataset contains six large-scale projects, i.e., OpenStack, QT, Go, Gerrit, Platform and JDT, covering different programming languages. Considering that CodeBERT is not pre-trained on C++ code [57], we exclude QT for evaluation. We conduct our experiments following the within-project setting used by Zeng et al. [10] and directly borrow the evaluation results of the baselines from the LAPredict paper. Since the dataset is highly unbalanced, we follow prior work [8], [10], [11] and also use AUC as the evaluation metric. Also following prior work [11], we use the Adam optimizer to minimize the binary cross-entropy loss and employ Dropout in the classifier.  Table X. We can see that CCRep line is the best-performing variant on average, but the performance differences among the three variants are small. CCRep line improves LAPredict, CC2Vec and DeepJIT by 5.6%, 7.4% and 7.3% on average, indicating the effectiveness of CCRep in representing code changes for JIT-DP. We also notice that different projects prefer different query-back mechanisms, which may indicate the different defect characteristics of different projects. 6) Results for RQ2: We also conduct ablation studies on JIT-DP to answer RQ2. Similar to what we do in APCA, we build and evaluate two special approaches, i.e., CCRep\u2212CodeBERT and CCRep\u2212QueryBack. As shown in Table XI, the average performance of our approach degrades without CodeBERT or QueryBack, highlighting the effectiveness of the two components in CCRep. We also notice that on Go and Platform, our approach is slightly worse than CCRep\u2212QueryBack. After manual inspection, we speculate that this is because a significant number of commits in Go and Platform contain almost only deleted or added code with little context, where the query-back mechanism may bring no benefit. However, since the performance of our approach and CCRep\u2212QueryBack is very close, we argue the query-back mechanism can be viewed as harmless on Go and Platform. In summary, both the pre-trained code model and the queryback mechanism contribute to the effectiveness of CCRep.\n\n\nV. DISCUSSION\n\n\nA. The Variants of CCRep\n\nWe propose three variants of CCRep, i.e., CCRep token , CCRep line and CCRep hybrid . We can see from Section IV that different tasks prefer different variants. On CMG, CCRep token performs best, which is probably because that a commit message is generated token by token and the key words in it can often be found from the changed code tokens. For APCA, the best-performing variant is CCRep hybrid . After inspecting the dataset and the results, we think this is reasonable because a generated patch can either change a few tokens (e.g., replace \"==\" with \"!=\"), or insert/delete several lines (e.g., insert a NullPointer check). As for JIT-DP, CCRep line is the best. Based on our inspection, a possible reason is that a defective commit often adds, deletes or modifies multiple lines instead of only a few tokens. Based on these findings, before applying CCRep to other tasks, we encourage the user to analyze the characteristics of the target task and her dataset first and choose the most suitable variant. On the other hand, on each task, the three variants all outperform the state-of-theart baselines. This indicates our approach's effectiveness and makes us believe that any of the variants can serve as a strong baseline for code-change-related tasks.\n\n\nB. Limitations\n\nAs discussed in Section IV-C6, if a code change contains little context code, the query-back mechanism may bring no benefit. Because in such situation, the changed code and the whole code change contain the same information. Another limitation of CCRep is that the lengths of the code changes that can be processed by CCRep are limited by the pre-trained code model. In detail, the length of the before-change or the after-change code should not exceed the length limit of the used pre-trained model, which is usually 512. Fortunately, committing small and coherent code changes has become a widely-recognized good practice, and many techniques have been proposed to decompose tangled code changes [58]- [62]. Such practice and techniques can help reduce long code changes and alleviate this limitation.\n\n\nC. Threats to Validity\n\nThreats to internal validity refer to the errors and bias in our experiments. To mitigate such threats, for each task, we try our best to follow the settings used by the state-of-theart baselines, re-use the evaluation results reported by prior work when possible and use the existing implementations of the baselines to conduct experiments. We have double checked our code and data and made them publicly available. Threats to external validity concern the generalization of CCRep. Although we have applied CCRep to three different tasks and achieved superior performance, we cannot claim that CCRep can be applied to or perform well on all code-changerelated tasks. However, the three tasks have either different inputs or different outputs, care about diverse characteristics of code changes, and cover synthetic and manually-written patches, various projects and multiple programming languages. Therefore, we believe this threat is limited. In addition, based on our evaluation results, we argue that CCRep can at least serve as a strong baseline to help better solve code-changerelated problems. To minimize threats to construct validity, we choose evaluation metrics following previous studies.\n\n\nVI. RELATED WORK\n\nThe majority of the studies related to code change representation target a specific downstream task and learn code change representations through a task-specific architecture. Some of them flatten code or code changes as token sequences for representation learning [2], [13], [15], [37], [63]- [65]. For example, for commit message generation, applying RNN like LSTM [66] on diffs is a widely-used approach to extract code change features [2], [13], [37]. To automate comment updates with code changes, Liu et al. [63] aligned the tokens of the before-change and after-change code to form an edit sequence and fed such sequence into an LSTM-based encoder to obtain code change representations. To identify security patches, Zhou et al. [15] utilized two LSTMs to respectively learn the statement-level features of the added and deleted code in a patch and merged their features with a multi-layer convolutional neural network.\n\nSome studies leverage the syntactic structure of code, e.g., AST, to enhance code change representation learning [14], [16], [18], [67], [68]. For example, to assess patch correctness, Lin et al. [14] proposed to extract and encode the changed AST paths and the unchanged AST paths, respectively, and merge their feature vectors as the code change representation. Yin et al. [16], Panthaplackel et al. [18] and Dong et al. [35] proposed to converted the two ASTs of a code change into a graph and use graph neural networks, e.g., GGNN [69] and GCN [36], to learn code change representations from the graph.\n\nRecently, several studies adopted pre-trained code models to represent code changes for specific downstream tasks [3], [6], [12], [70]. For instance, to identify silent vulnerability fixes, Zhou et al. [3] leveraged CodeBERT [21] to encode each changed file in a commit and merged the feature vectors of all changed files as the code change representation. Lin et al. [12] leveraged pre-trained code models to encode commits for recovering links between issues and commits. Zhou et al. [70] also investigated the generalizability of CodeBERT on JIT-DP. However, they only considered one classification task and only used the data from two projects for evaluation.\n\nOnly a few studies aim at learning general-purpose code change representations [8], [16]. Yin et al. [16] proposed to learn distributed representations of code edits by training an auto-encoder to reconstruct code edits. Hoang et al. [8] proposed CC2Vec, which leverages a hierarchical attention network and multiple comparison functions to learn code change representations. As discussed in Section I, Yin et al.'s approach only focuses on small code edits (i.e., a single hunk with no more than 3 changed lines), while CCRep targets commit-level changes. Also, it lacks explicit interaction between the changed code and the whole code change. We have tried to compare the performance of Yin et al.'s approach with that of CCRep. However, neither Yin et al. evaluated their approach on the three tasks used in this work, nor they made their implementation publicly available. CC2Vec only considers the changed code and ignores the context, and it requires commit messages as labels, which are not always available. Besides, our evaluation results show that CCRep outperforms CC2Vec on the three tasks by substantial margins.\n\nIn summary, our work differs from prior work in several folds: First, our approach acts as a general code change encoder and can be used in diverse code-change-related tasks. Second, our approach is equipped with a pre-trained code model and the query-back mechanism, and is technically different. Third, our evaluation results show that our approach outperforms the state-of-the-art techniques on three tasks. In addition, this work also investigates the generalizability of pretrained code models on diverse code-change-related tasks.\n\n\nVII. CONCLUSION\n\nWe propose a novel approach named CCRep to learn code change representations. It acts as a code change encoder and can be jointly trained with and used in diverse code-changerelated tasks. CCRep leverages a pre-trained code model to obtain high-quality contextual embeddings and better handle datasets of different sizes, and a novel mechanism named query back to highlight the changed code and adaptively capture related context information. We evaluate CCRep on one generation task and two classification tasks. Experimental results show that CCRep outperforms the state-of-the-art approaches on each task and both the pre-trained code model and the query-back mechanism contribute to its effectiveness. In the future, we plan to apply our approach to more codechange-related tasks and improve it to encode long and structured code changes.\n\n\nVIII. ACKNOWLEDGMENTS\n\nFig. 1 .\n1The overall framework of CCRep.\n\nm a 2\n2, ..., m a |Ta| ]) for T b (T a ). Then, the contextual embeddings of the changed code tokens are picked out from H b and H a based on M b and M a , and are further concatenated as a new embedding sequence 0 Line Index\n\n\nFigure 2to illustrate it: (1) First, we use the line indexes of all the tokens in T b (T a ) to form a line index sequence [, we initialize an empty matrix of shape L \u00d7 W \u00d7 d for reconstructing line structures, where L, W and d refer to the maximum lines of the code (line-dimension), the maximum tokens in a code line and the dimension of a contextual embedding. In our example, L=3 and W =3. We refer to this matrix as line matrix.(3) After that, the contextual embedding of each token in T b (T a ) is filled into the corresponding row of the line matrix according to its line index. In our example, h b 2 and h b 3 are filled into the 2-nd row, while h b 4 is filled into the 3-rd row. (4) Finally, we order the contextual embeddings in each row by their token indices in T b (T a ). In this way, line structures are reconstructed and stored in the line matrix, of which each row stores one line, as shown by the \"Before-Change Line Matrix\" and the \"After-Change Line Matrix\" in\n\nh a 2\n2, ..., h a |Ta| ] [l a 1 , l a 1 , ..., l a |Ta| ], Ls a \u2208 R L\u00d7W \u00d7d (7) where refers to the scattering-reshaping operation, Ls b and Ls a refer to the line matrices of T b and T a , respectively. Note that the tokens from the unchanged lines (with line index 0) are filled into the 0-th row of the line matrix. Since we only care the changed lines, we simply drop out the 0-th row. The line matrices Ls b and Ls a are concatenated along the second dimension (the token dimension) to pair aligned lines and form longer lines, and two special tokens CLS and SEP are respectively inserted into the head and the tail of the beforechange line in each pair, as follows:Ls = [CLS, Ls b , SEP, Ls a ], Ls \u2208 R L\u00d7(2W +2)\u00d7d(8) \n\nFig. 3 .\n3The usage of CCRep in code-change-related classification and generation tasks.\n\nTABLE I MOTIVATING\nIEXAMPLE OF QUERY-BACK MECHANISM1@@ -277,8 +277,8 @@ public class EditPost extends \nActivity { \n2 } else { \n3 \n4 \nif (extras != null) { \n5-\nid = WordPress.currentBlog.getId(); \n6 \ntry { \n7+ \nid = WordPress.currentBlog.getId(); \n8 \nblog = new Blog(id, this); \n9 \n} catch (Exception e) { \n10 \nToast.makeText(this, \n\nCommit Message: Moved post id creation to try catch block to \nhelp EditPost activity recover if there's no valid currentBlog \n\n\n\nTABLE II AN\nIIILLUSTRATIVE EXAMPLE OF LINE ALIGNINGLine Pair Index Before-Change Code Line \nAfter-Change Code Line \nLine Change Type \n\n\nTABLE III CMG\nIII: EVALUATION RESULTS ON THE COREC DATASETModel \n\nBLEU METEOR ROUGE-L \n\nLogGen [8] \n9.41 \n5.31 \n12.13 \nNNGen [20] \n23.29 \n14.26 \n28.68 \nCODISUM [37] \n13.15 \n7.35 \n16.49 \nCoReC [13] \n25.27 \n15.34 \n29.73 \n\nCCRep token \n28.24 \n16.99 \n34.23 \nCCRep line \n26.65 \n15.74 \n32.01 \nCCRep hybrid \n27.25 \n16.58 \n33.30 \n\nTABLE IV \nCMG: EVALUATION RESULTS ON THE FIRA DATASET \n\nModel \n\nBLEU METEOR ROUGE-L \n\nLogGen [8] \n8.95 \n8.34 \n10.50 \nNNGen [20] \n9.16 \n9.53 \n11.24 \nCODISUM [37] \n16.55 \n12.83 \n19.73 \nCoReC [13] \n13.03 \n12.04 \n15.47 \nFIRA [35] \n17.67 \n14.93 \n21.58 \n\nCCRep token \n19.93 \n16.27 \n23.81 \nCCRep line \n19.79 \n16.06 \n23.60 \nCCRep hybrid \n19.70 \n15.84 \n23.41 \n\nchanges, we filter out the commits with non-code changes, \nsuch as binary file changes, file creation or file deletion, \nresulting in 20.5K commits left. We re-train and re-evaluate the \nbaselines on our filtered dataset (hereon, the CoReC dataset) \nusing the replication packages provided by their authors [38]-\n[41]. FIRA is not evaluated on this dataset since it needs \nto parse each code change into two ASTs, but the code diff \nfragments provided by this dataset are not parsable. Following \nCoReC, our approach uses an LSTM as the decoder on this \ndataset. \nThe dataset used by FIRA (hereon, the FIRA dataset) was \npublished by Xu et.al. \n\nTABLE V\nVCMG: ABLATION RESULTS ON THE COREC DATASETModel \n\nBLEU METEOR ROUGE-L \n\nCCRep \u2212 CodeBERT \n27.90 \n16.56 \n33.36 \nCCRep \u2212 QueryBack \n26.23 \n15.72 \n31.78 \nCCRep \n28.24 \n16.99 \n34.23 \n\nTABLE VI \nCMG: ABLATION RESULTS ON THE FIRA DATASET \n\nModel \n\nBLEU METEOR ROUGE-L \n\nCCRep \u2212 CodeBERT \n18.77 \n15.54 \n22.37 \nCCRep \u2212 QueryBack \n17.88 \n14.78 \n21.33 \nCCRep \n19.93 \n16.27 \n23.81 \n\nshown that our approach outperforms all the baselines in terms \nof all metrics, indicating the effectiveness of CCRep on CMG. \nSpecifically, on the CoReC dataset, our best-performing vari-\nant, i.e., CCRep token , outperforms the best-performing baseline, \ni.e., CoReC, by 11.8%, 10.8% and 15.1% in terms of BLEU, \nMETEOR and ROUGE-L, respectively. As for the FIRA \ndataset, CCRep token outperforms FIRA by 12.8%, 9.0% and \n10.3% in terms of the three metrics. We conduct statistical \nsignificance tests using paired bootstrap resampling with 1000 \nresamples following Koehn \n\nTABLE VII\nVIIAPCA: EVALUATION RESULTS ON CACHE-SMALL \n\nModel \nAcc. \nPre. \nRec. \nF1 \nAUC \n\nLR + CC2Vec [6] \n64.9 \n62.4 \n90.1 \n73.7 \n68.6 \nLR + code2vec [6] \n66.8 \n68.6 \n72.9 \n70.6 \n70.2 \nCACHE [14] \n75.4 \n79.5 \n76.5 \n78.0 \n80.3 \n\nCCRep token \n80.5 \n73.8 \n89.0 \n80.6 \n88.1 \nCCRep line \n81.2 \n75.9 \n86.4 \n80.6 \n88.3 \nCCRep hybrid \n82.2 \n76.3 \n88.8 \n81.9 \n88.5 \n\nTABLE VIII \nAPCA: EVALUATION RESULTS ON CACHE-LARGE \n\nModel \nAcc. \nPre. \nRec. \nF1 \nAUC \n\nDT + BERT [6] \n95.7 \n93.9 \n97.4 \n95.6 \n95.9 \nLR + Doc2Vec [6] \n90.4 \n91.9 \n88.0 \n89.9 \n96.1 \nDT + CC2Vec [6] \n95.6 \n95.4 \n95.7 \n95.5 \n95.7 \nCACHE [14] \n98.6 \n98.9 \n98.2 \n98.6 \n98.9 \n\nCCRep token \n99.4 \n99.6 \n99.2 \n99.4 99.97 \nCCRep line \n99.7 \n99.8 \n99.6 \n99.7 99.98 \nCCRep hybrid \n99.6 \n99.9 \n99.3 \n99.6 99.99 \n\nTABLE IX \nAPCA: EVALUATION RESULTS OF THE ABLATION STUDIES \n\nDataset \nModel \nAcc. \nPre. \nRec. \nF1 \nAUC \n\nCACHE-\nSmall \n\nCCRep \u2212 CodeBERT \n77.5 \n72.6 \n81.6 \n76.6 \n86.1 \nCCRep \u2212 QueryBack \n79.3 \n74.4 \n83.2 \n78.4 \n87.0 \nCCRep \n82.2 \n76.3 \n88.8 \n81.9 \n88.5 \n\nCACHE-\nLarge \n\nCCRep \u2212 CodeBERT \n99.6 \n99.7 \n99.6 \n99.6 99.99 \nCCRep \u2212 QueryBack \n99.7 \n99.8 \n99.7 \n99.7 99.99 \nCCRep \n99.6 \n99.9 \n99.3 \n99.6 99.99 \n\n\n\nTABLE X\nXJIT-DP: EVALUATION RESULTS IN TERMS OF AUCModel \nOpenStack \nJDT \nGo \nPlatform \nGerrit Mean \n\nDeepJIT [11] \n71.32 \n67.01 68.91 \n77.12 \n70.25 \n70.92 \nCC2Vec [8] \n72.27 \n66.53 \n69.17 \n76.13 \n69.86 \n70.79 \nLAPredict [10] \n74.91 \n67.57 \n68.31 \n74.61 \n74.95 \n72.07 \n\nCCRep token \n75.37 \n68.11 75.63 \n81.91 \n76.89 \n75.58 \nCCRep line \n76.45 \n68.96 75.60 \n82.08 \n77.35 \n76.09 \nCCRep hybrid \n75.63 \n66.63 \n75.48 \n82.18 \n77.01 \n75.39 \n\nTABLE XI \nJIT-DP: ABLATION RESULTS IN TERMS OF AUC \n\nModel \nOpenStack \nJDT \nGo \nPlatform Gerrit Mean \n\nCCRep \u2212 CodeBERT \n75.78 \n68.21 75.04 \n81.15 \n74.89 \n75.01 \nCCRep \u2212 QueryBack \n75.70 \n66.69 \n76.30 \n82.28 \n74.82 \n75.16 \nCCRep \n76.45 \n68.96 \n75.63 \n82.18 \n77.35 \n76.09 \n\n5) Results for RQ1: Experimental results on JIT-DP are \nsummarized in \nhttps://github.com/ZJU-CTAG/CCRep\n\nWhat is the long-term impact of changes. I I Brudaru, A Zeller, Proceedings of the 2008 International Workshop on Recommendation Systems for Software Engineering. the 2008 International Workshop on Recommendation Systems for Software EngineeringI. I. Brudaru and A. Zeller, \"What is the long-term impact of changes?\" in Proceedings of the 2008 International Workshop on Recommendation Systems for Software Engineering, 2008, pp. 30-32.\n\nAutomatically generating commit messages from diffs using neural machine translation. S Jiang, A Armaly, C Mcmillan, Proceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering. the 32nd IEEE/ACM International Conference on Automated Software EngineeringS. Jiang, A. Armaly, and C. McMillan, \"Automatically generating commit messages from diffs using neural machine translation,\" in Pro- ceedings of the 32nd IEEE/ACM International Conference on Automated Software Engineering, 2017, pp. 135-146.\n\nFinding A needle in a haystack: Automated mining of silent vulnerability fixes. J Zhou, M Pacheco, Z Wan, X Xia, D Lo, Y Wang, A E Hassan, Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering. the 36th IEEE/ACM International Conference on Automated Software EngineeringJ. Zhou, M. Pacheco, Z. Wan, X. Xia, D. Lo, Y. Wang, and A. E. Hassan, \"Finding A needle in a haystack: Automated mining of silent vulnerability fixes,\" in Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering, 2021, pp. 705-716.\n\nClassifying software changes: Clean or buggy?. S Kim, E J W Jr, Y Zhang, IEEE Trans. Software Eng. 342S. Kim, E. J. W. Jr., and Y. Zhang, \"Classifying software changes: Clean or buggy?\" IEEE Trans. Software Eng., vol. 34, no. 2, pp. 181-196, 2008.\n\nStudying just-in-time defect prediction using crossproject models. Y Kamei, T Fukushima, S Mcintosh, K Yamashita, N Ubayashi, A E Hassan, Empir. Softw. Eng. 215Y. Kamei, T. Fukushima, S. McIntosh, K. Yamashita, N. Ubayashi, and A. E. Hassan, \"Studying just-in-time defect prediction using cross- project models,\" Empir. Softw. Eng., vol. 21, no. 5, pp. 2072-2106, 2016.\n\nEvaluating representation learning of code changes for predicting patch correctness in program repair. H Tian, K Liu, A K Kabor\u00e9, A Koyuncu, L Li, J Klein, T F Bissyand\u00e9, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering. the 35th IEEE/ACM International Conference on Automated Software EngineeringH. Tian, K. Liu, A. K. Kabor\u00e9, A. Koyuncu, L. Li, J. Klein, and T. F. Bissyand\u00e9, \"Evaluating representation learning of code changes for predicting patch correctness in program repair,\" in Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering, 2020, pp. 981-992.\n\nAutomated classification of overfitting patches with statically extracted code features. H Ye, J Gu, M Martinez, T Durieux, M Monperrus, IEEE Trans. Software Eng. H. Ye, J. Gu, M. Martinez, T. Durieux, and M. Monperrus, \"Automated classification of overfitting patches with statically extracted code fea- tures,\" IEEE Trans. Software Eng., pp. 1-1, 2021.\n\nCc2vec: distributed representations of code changes. T Hoang, H J Kang, D Lo, J Lawall, Proceedings of the 42nd International Conference on Software Engineering. the 42nd International Conference on Software EngineeringT. Hoang, H. J. Kang, D. Lo, and J. Lawall, \"Cc2vec: distributed rep- resentations of code changes,\" in Proceedings of the 42nd International Conference on Software Engineering, 2020, pp. 518-529.\n\nIdentifying linux bug fixing patches. Y Tian, J Lawall, D Lo, Proceedings of the 34th International Conference on Software Engineering. the 34th International Conference on Software EngineeringY. Tian, J. Lawall, and D. Lo, \"Identifying linux bug fixing patches,\" in Proceedings of the 34th International Conference on Software Engi- neering, 2012, pp. 386-396.\n\nDeep just-in-time defect prediction: how far are we. Z Zeng, Y Zhang, H Zhang, L Zhang, Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis. the 30th ACM SIGSOFT International Symposium on Software Testing and AnalysisZ. Zeng, Y. Zhang, H. Zhang, and L. Zhang, \"Deep just-in-time defect prediction: how far are we?\" in Proceedings of the 30th ACM SIGSOFT International Symposium on Software Testing and Analysis, 2021, pp. 427-438.\n\nDeepjit: an end-to-end deep learning framework for just-in-time defect prediction. T Hoang, H K Dam, Y Kamei, D Lo, N Ubayashi, Proceedings of the 16th International Conference on Mining Software Repositories. the 16th International Conference on Mining Software RepositoriesT. Hoang, H. K. Dam, Y. Kamei, D. Lo, and N. Ubayashi, \"Deepjit: an end-to-end deep learning framework for just-in-time defect prediction,\" in Proceedings of the 16th International Conference on Mining Software Repositories, 2019, pp. 34-45.\n\nTraceability transformed: Generating more accurate links with pre-trained BERT models. J Lin, Y Liu, Q Zeng, M Jiang, J Cleland-Huang, Proceedings of the 43rd IEEE/ACM International Conference on Software Engineering. the 43rd IEEE/ACM International Conference on Software EngineeringJ. Lin, Y. Liu, Q. Zeng, M. Jiang, and J. Cleland-Huang, \"Traceability transformed: Generating more accurate links with pre-trained BERT models,\" in Proceedings of the 43rd IEEE/ACM International Confer- ence on Software Engineering, 2021, pp. 324-335.\n\nContextaware retrieval-based deep commit message generation. H Wang, X Xia, D Lo, Q He, X Wang, J Grundy, ACM Trans. Softw. Eng. Methodol. 304H. Wang, X. Xia, D. Lo, Q. He, X. Wang, and J. Grundy, \"Context- aware retrieval-based deep commit message generation,\" ACM Trans. Softw. Eng. Methodol., vol. 30, no. 4, pp. 56:1-56:30, 2021.\n\nContext-aware code change embedding for better patch correctness assessment. B Lin, S Wang, M Wen, X Mao, ACM Trans. Softw. Eng. Methodol. B. Lin, S. Wang, M. Wen, and X. Mao, \"Context-aware code change embedding for better patch correctness assessment,\" ACM Trans. Softw. Eng. Methodol., pp. 1-1, 2021.\n\nSPI: automated identification of security patches via commits. Y Zhou, J K Siow, C Wang, S Liu, Y Liu, ACM Trans. Softw. Eng. Methodol. 31127Y. Zhou, J. K. Siow, C. Wang, S. Liu, and Y. Liu, \"SPI: automated identification of security patches via commits,\" ACM Trans. Softw. Eng. Methodol., vol. 31, no. 1, pp. 13:1-13:27, 2022.\n\nLearning to represent edits. P Yin, G Neubig, M Allamanis, M Brockschmidt, A L Gaunt, Proceedings of the 7th International Conference on Learning Representations. the 7th International Conference on Learning RepresentationsP. Yin, G. Neubig, M. Allamanis, M. Brockschmidt, and A. L. Gaunt, \"Learning to represent edits,\" in Proceedings of the 7th International Conference on Learning Representations, 2019.\n\nDeepcva: Automated commit-level vulnerability assessment with deep multi-task learning. T H M Le, D Hin, R Croft, M A Babar, Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering. the 36th IEEE/ACM International Conference on Automated Software EngineeringT. H. M. Le, D. Hin, R. Croft, and M. A. Babar, \"Deepcva: Automated commit-level vulnerability assessment with deep multi-task learning,\" in Proceedings of the 36th IEEE/ACM International Conference on Automated Software Engineering, 2021, pp. 717-729.\n\nDeep justin-time inconsistency detection between comments and source code. S Panthaplackel, J J Li, M Gligoric, R J Mooney, Proceedings of the 35th AAAI Conference on Artificial Intelligence. the 35th AAAI Conference on Artificial IntelligenceS. Panthaplackel, J. J. Li, M. Gligoric, and R. J. Mooney, \"Deep just- in-time inconsistency detection between comments and source code,\" in Proceedings of the 35th AAAI Conference on Artificial Intelligence, 2021, pp. 427-435.\n\nBoa: a language and infrastructure for analyzing ultra-large-scale software repositories. R Dyer, H A Nguyen, H Rajan, T N Nguyen, Proceedings of the 35th International Conference on Software Engineering. the 35th International Conference on Software EngineeringR. Dyer, H. A. Nguyen, H. Rajan, and T. N. Nguyen, \"Boa: a language and infrastructure for analyzing ultra-large-scale software repositories,\" in Proceedings of the 35th International Conference on Software Engi- neering, 2013, pp. 422-431.\n\nNeuralmachine-translation-based commit message generation: how far are we. Z Liu, X Xia, A E Hassan, D Lo, Z Xing, X Wang, Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering. the 33rd ACM/IEEE International Conference on Automated Software EngineeringZ. Liu, X. Xia, A. E. Hassan, D. Lo, Z. Xing, and X. Wang, \"Neural- machine-translation-based commit message generation: how far are we?\" in Proceedings of the 33rd ACM/IEEE International Conference on Automated Software Engineering, 2018, pp. 373-384.\n\nCodebert: A pre-trained model for programming and natural languages. Z Feng, D Guo, D Tang, N Duan, X Feng, M Gong, L Shou, B Qin, T Liu, D Jiang, M Zhou, Findings of the Association for Computational Linguistics: EMNLP 2020, ser. Findings of ACL. 2020Z. Feng, D. Guo, D. Tang, N. Duan, X. Feng, M. Gong, L. Shou, B. Qin, T. Liu, D. Jiang, and M. Zhou, \"Codebert: A pre-trained model for programming and natural languages,\" in Findings of the Association for Computational Linguistics: EMNLP 2020, ser. Findings of ACL, vol. EMNLP 2020, 2020, pp. 1536-1547.\n\nAttention is all you need. A Vaswani, N Shazeer, N Parmar, J Uszkoreit, L Jones, A N Gomez, L Kaiser, I Polosukhin, Proceedings of the Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems. the Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing SystemsA. Vaswani, N. Shazeer, N. Parmar, J. Uszkoreit, L. Jones, A. N. Gomez, L. Kaiser, and I. Polosukhin, \"Attention is all you need,\" in Proceedings of the Advances in Neural Information Processing Systems 30: Annual Conference on Neural Information Processing Systems 2017, 2017, pp. 5998-6008.\n\nBERT: pre-training of deep bidirectional transformers for language understanding. J Devlin, M Chang, K Lee, K Toutanova, Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language TechnologiesAssociation for Computational LinguisticsJ. Devlin, M. Chang, K. Lee, and K. Toutanova, \"BERT: pre-training of deep bidirectional transformers for language understanding,\" in Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, 2019, pp. 4171-4186.\n\nExploring the limits of transfer learning with a unified text-to-text transformer. C Raffel, N Shazeer, A Roberts, K Lee, S Narang, M Matena, Y Zhou, W Li, P J Liu, J. Mach. Learn. Res. 2167C. Raffel, N. Shazeer, A. Roberts, K. Lee, S. Narang, M. Matena, Y. Zhou, W. Li, and P. J. Liu, \"Exploring the limits of transfer learning with a unified text-to-text transformer,\" J. Mach. Learn. Res., vol. 21, pp. 140:1-140:67, 2020.\n\nLanguage models are unsupervised multitask learners. A Radford, J Wu, R Child, D Luan, D Amodei, I Sutskever, OpenAI blog. 189A. Radford, J. Wu, R. Child, D. Luan, D. Amodei, I. Sutskever et al., \"Language models are unsupervised multitask learners,\" OpenAI blog, vol. 1, no. 8, p. 9, 2019.\n\nMulti-task learning based pretrained language model for code completion. F Liu, G Li, Y Zhao, Z Jin, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering. the 35th IEEE/ACM International Conference on Automated Software EngineeringF. Liu, G. Li, Y. Zhao, and Z. Jin, \"Multi-task learning based pre- trained language model for code completion,\" in Proceedings of the 35th IEEE/ACM International Conference on Automated Software En- gineering, 2020, pp. 473-485.\n\nIntellicode compose: code generation using transformer. A Svyatkovskiy, S K Deng, S Fu, N Sundaresan, Proceedings of the 28th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering. the 28th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software EngineeringA. Svyatkovskiy, S. K. Deng, S. Fu, and N. Sundaresan, \"Intellicode compose: code generation using transformer,\" in Proceedings of the 28th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, 2020, pp. 1433-1443.\n\nUnified pretraining for program understanding and generation. W U Ahmad, S Chakraborty, B Ray, K Chang, Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language TechnologiesW. U. Ahmad, S. Chakraborty, B. Ray, and K. Chang, \"Unified pre- training for program understanding and generation,\" in Proceedings of the 2021 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, 2021, pp. 2655-2668.\n\nCodet5: Identifieraware unified pre-trained encoder-decoder models for code understanding and generation. Y Wang, W Wang, S R Joty, S C H Hoi, Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing. the 2021 Conference on Empirical Methods in Natural Language ProcessingY. Wang, W. Wang, S. R. Joty, and S. C. H. Hoi, \"Codet5: Identifier- aware unified pre-trained encoder-decoder models for code understand- ing and generation,\" in Proceedings of the 2021 Conference on Empirical Methods in Natural Language Processing, 2021, pp. 8696-8708.\n\nWordpress for android. \"Wordpress for android,\" https://github.com/wordpress-mobile/ WordPress-Android, 2022.\n\nPython difflib library. \"Python difflib library,\" https://docs.python.org/3/library/difflib.html, 2022.\n\nNeural machine translation of rare words with subword units. R Sennrich, B Haddow, A Birch, Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics. the 54th Annual Meeting of the Association for Computational LinguisticsR. Sennrich, B. Haddow, and A. Birch, \"Neural machine translation of rare words with subword units,\" in Proceedings of the 54th Annual Meeting of the Association for Computational Linguistics, 2016.\n\nBig Code != Big Vocabulary: Open-Vocabulary Models for Source Code. R.-M Karampatsis, H Babii, R Robbes, C Sutton, A Janes, Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering. the IEEE/ACM 42nd International Conference on Software EngineeringR.-M. Karampatsis, H. Babii, R. Robbes, C. Sutton, and A. Janes, \"Big Code != Big Vocabulary: Open-Vocabulary Models for Source Code,\" in Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering, 2020, pp. 1073-1085.\n\nLayer normalization. L J Ba, J R Kiros, G E Hinton, abs/1607.06450CoRR. L. J. Ba, J. R. Kiros, and G. E. Hinton, \"Layer normalization,\" CoRR, vol. abs/1607.06450, 2016.\n\nFIRA: Fine-Grained Graph-Based Code Change Representation for Automated Commit Message Generation. J Dong, Q Zhu, Z Sun, Z Li, Y Lou, W Zhang, D Hao, Proceedings of the IEEE/ACM 44rd International Conference on Software Engineering. the IEEE/ACM 44rd International Conference on Software Engineering12J. Dong, Q. Zhu, Z. Sun, Z. Li, Y. Lou, W. Zhang, and D. Hao, \"FIRA: Fine-Grained Graph-Based Code Change Representation for Automated Commit Message Generation,\" in Proceedings of the IEEE/ACM 44rd International Conference on Software Engineering, 2022, p. 12.\n\nSemi-supervised classification with graph convolutional networks. T N Kipf, M Welling, 5th International Conference on Learning Representations. Toulon, FranceConference Track Proceedings. OpenReview.netT. N. Kipf and M. Welling, \"Semi-supervised classification with graph convolutional networks,\" in 5th International Conference on Learning Representations, ICLR 2017, Toulon, France, April 24-26, 2017, Conference Track Proceedings. OpenReview.net, 2017. [Online].\n\nCommit message generation for source code changes. S Xu, Y Yao, F Xu, T Gu, H Tong, J Lu, Proceedings of the 28th International Joint Conference on Artificiaal Intelligence. the 28th International Joint Conference on Artificiaal IntelligenceS. Xu, Y. Yao, F. Xu, T. Gu, H. Tong, and J. Lu, \"Commit message gener- ation for source code changes,\" in Proceedings of the 28th International Joint Conference on Artificiaal Intelligence, 2019, pp. 3975-3981.\n\nThe code of CODISUM. \"The code of CODISUM,\" https://github.com/SoftWiser-group/ CoDiSum, 2019.\n\nThe code of nngen. \"The code of nngen,\" https://github.com/Tbabm/nngen, 2018.\n\nThe code of loggen. The code of corec. \"The code of loggen,\" https://github.com/soarsmu/CC2Vec, 2020. [41] \"The code of corec,\" http://tiny.cc/o4j4oz., 2021.\n\nAdam: A method for stochastic optimization. D P Kingma, J Ba, Proceedings of the 3rd International Conference on Learning Representations. the 3rd International Conference on Learning RepresentationsD. P. Kingma and J. Ba, \"Adam: A method for stochastic optimiza- tion,\" in Proceedings of the 3rd International Conference on Learning Representations, 2015.\n\nBleu: a method for automatic evaluation of machine translation. K Papineni, S Roukos, T Ward, W.-J Zhu, Proceedings of the 40th annual meeting of the Association for Computational Linguistics. the 40th annual meeting of the Association for Computational LinguisticsK. Papineni, S. Roukos, T. Ward, and W.-J. Zhu, \"Bleu: a method for automatic evaluation of machine translation,\" in Proceedings of the 40th annual meeting of the Association for Computational Linguistics, 2002, pp. 311-318.\n\nMeteor: An automatic metric for mt evaluation with improved correlation with human judgments. S Banerjee, A Lavie, Proceedings of the acl workshop on intrinsic and extrinsic evaluation measures for machine translation and/or summarization. the acl workshop on intrinsic and extrinsic evaluation measures for machine translation and/or summarizationS. Banerjee and A. Lavie, \"Meteor: An automatic metric for mt evalua- tion with improved correlation with human judgments,\" in Proceedings of the acl workshop on intrinsic and extrinsic evaluation measures for machine translation and/or summarization, 2005, pp. 65-72.\n\nRouge: A package for automatic evaluation of summaries. C.-Y. Lin, Text summarization branches out. C.-Y. Lin, \"Rouge: A package for automatic evaluation of summaries,\" in Text summarization branches out, 2004, pp. 74-81.\n\nOn the evaluation of commit message generation models: An experimental study. W Tao, Y Wang, E Shi, L Du, S Han, H Zhang, D Zhang, W Zhang, Proceedings of the 2021 IEEE International Conference on Software Maintenance and Evolution. the 2021 IEEE International Conference on Software Maintenance and EvolutionW. Tao, Y. Wang, E. Shi, L. Du, S. Han, H. Zhang, D. Zhang, and W. Zhang, \"On the evaluation of commit message generation models: An experimental study,\" in Proceedings of the 2021 IEEE International Conference on Software Maintenance and Evolution, 2021, pp. 126-136.\n\nStatistical significance tests for machine translation evaluation. P Koehn, Proceedings of the 9th Conference on Empirical Methods in Natural Language Processing. the 9th Conference on Empirical Methods in Natural Language ProcessingP. Koehn, \"Statistical significance tests for machine translation evalua- tion,\" in Proceedings of the 9th Conference on Empirical Methods in Natural Language Processing, 2004, pp. 388-395.\n\nRoberta: A robustly optimized BERT pretraining approach. Y Liu, M Ott, N Goyal, J Du, M Joshi, D Chen, O Levy, M Lewis, L Zettlemoyer, V Stoyanov, abs/1907.11692CoRR. Y. Liu, M. Ott, N. Goyal, J. Du, M. Joshi, D. Chen, O. Levy, M. Lewis, L. Zettlemoyer, and V. Stoyanov, \"Roberta: A robustly optimized BERT pretraining approach,\" CoRR, vol. abs/1907.11692, 2019. [Online]. Available: http://arxiv.org/abs/1907.11692\n\nAutomated program repair. C L Goues, M Pradel, A Roychoudhury, Commun. ACM. 6212C. L. Goues, M. Pradel, and A. Roychoudhury, \"Automated program repair,\" Commun. ACM, vol. 62, no. 12, pp. 56-65, 2019.\n\nAn analysis of patch plausibility and correctness for generate-and-validate patch generation systems. Z Qi, F Long, S Achour, M C Rinard, Proceedings of the 2015 International Symposium on Software Testing and Analysis. the 2015 International Symposium on Software Testing and AnalysisZ. Qi, F. Long, S. Achour, and M. C. Rinard, \"An analysis of patch plausibility and correctness for generate-and-validate patch generation systems,\" in Proceedings of the 2015 International Symposium on Software Testing and Analysis, 2015, pp. 24-36.\n\nIs the cure worse than the disease? overfitting in automated program repair. E K Smith, E T Barr, C L Goues, Y Brun, Proceedings of the 10th Joint Meeting on Foundations of Software Engineering. the 10th Joint Meeting on Foundations of Software EngineeringE. K. Smith, E. T. Barr, C. L. Goues, and Y. Brun, \"Is the cure worse than the disease? overfitting in automated program repair,\" in Proceedings of the 10th Joint Meeting on Foundations of Software Engineering, 2015, pp. 532-543.\n\ncode2vec: Learning distributed representations of code. U Alon, M Zilberstein, O Levy, E Yahav, 1-40:29Proc. ACM Program. Lang. 3POPLU. Alon, M. Zilberstein, O. Levy, and E. Yahav, \"code2vec: Learning distributed representations of code,\" Proc. ACM Program. Lang., vol. 3, no. POPL, pp. 40:1-40:29, 2019.\n\nAutomated patch correctness assessment: How far are we. S Wang, M Wen, B Lin, H Wu, Y Qin, D Zou, X Mao, H Jin, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering. the 35th IEEE/ACM International Conference on Automated Software EngineeringS. Wang, M. Wen, B. Lin, H. Wu, Y. Qin, D. Zou, X. Mao, and H. Jin, \"Automated patch correctness assessment: How far are we?\" in Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering, 2020, pp. 968-980.\n\nEmpirical review of java program repair tools: A large-scale experiment on 2,141 bugs and 23,551 repair attempts. T Durieux, F Madeiral, M Martinez, R Abreu, ser. ESEC/FSE 2019Proceedings of the 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering. the 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software EngineeringT. Durieux, F. Madeiral, M. Martinez, and R. Abreu, \"Empirical review of java program repair tools: A large-scale experiment on 2,141 bugs and 23,551 repair attempts,\" in Proceedings of the 27th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, ser. ESEC/FSE 2019, 2019, p. 302-313.\n\nHow often do single-statement bugs occur?: The manysstubs4j dataset. R Karampatsis, C Sutton, Proceedings of the 17th International Conference on Mining Software Repositories. the 17th International Conference on Mining Software RepositoriesR. Karampatsis and C. Sutton, \"How often do single-statement bugs occur?: The manysstubs4j dataset,\" in Proceedings of the 17th Interna- tional Conference on Mining Software Repositories, 2020, pp. 573-577.\n\nDropout: a simple way to prevent neural networks from overfitting. N Srivastava, G E Hinton, A Krizhevsky, I Sutskever, R Salakhutdinov, J. Mach. Learn. Res. 151N. Srivastava, G. E. Hinton, A. Krizhevsky, I. Sutskever, and R. Salakhutdinov, \"Dropout: a simple way to prevent neural networks from overfitting,\" J. Mach. Learn. Res., vol. 15, no. 1, pp. 1929-1958, 2014.\n\nThe pre-train codebert model. \"The pre-train codebert model,\" https://huggingface.co/microsoft/ codebert-base, 2021.\n\nHelping developers help themselves: Automatic decomposition of code review changesets. M Barnett, C Bird, J Brunet, S K Lahiri, Proceedings of the 37th IEEE/ACM International Conference on Software Engineering. the 37th IEEE/ACM International Conference on Software EngineeringM. Barnett, C. Bird, J. Brunet, and S. K. Lahiri, \"Helping developers help themselves: Automatic decomposition of code review changesets,\" in Proceedings of the 37th IEEE/ACM International Conference on Software Engineering, 2015, pp. 134-144.\n\nUntangling fine-grained code changes. M Dias, A Bacchelli, G Gousios, D Cassou, S Ducasse, Proceedings of the 22nd IEEE International Conference on Software Analysis, Evolution, and Reengineering. the 22nd IEEE International Conference on Software Analysis, Evolution, and ReengineeringM. Dias, A. Bacchelli, G. Gousios, D. Cassou, and S. Ducasse, \"Untangling fine-grained code changes,\" in Proceedings of the 22nd IEEE International Conference on Software Analysis, Evolution, and Reengineering, 2015, pp. 341-350.\n\nPartitioning composite code changes to facilitate code review. Y Tao, S Kim, Proceedings of the 12th IEEE/ACM Working Conference on Mining Software Repositories. the 12th IEEE/ACM Working Conference on Mining Software RepositoriesY. Tao and S. Kim, \"Partitioning composite code changes to facilitate code review,\" in Proceedings of the 12th IEEE/ACM Working Conference on Mining Software Repositories, 2015, pp. 180-190.\n\nCora: Decomposing and describing tangled code changes for reviewer. M Wang, Z Lin, Y Zou, B Xie, Proceedings of the 34th IEEE/ACM International Conference on Automated Software Engineering. the 34th IEEE/ACM International Conference on Automated Software EngineeringM. Wang, Z. Lin, Y. Zou, and B. Xie, \"Cora: Decomposing and describing tangled code changes for reviewer,\" in Proceedings of the 34th IEEE/ACM International Conference on Automated Software En- gineering, 2019, pp. 1050-1061.\n\nSmartcommit: a graph-based interactive assistant for activity-oriented commits. B Shen, W Zhang, C K\u00e4stner, H Zhao, Z Wei, G Liang, Z Jin, Proceedings of the 29th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering. the 29th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software EngineeringB. Shen, W. Zhang, C. K\u00e4stner, H. Zhao, Z. Wei, G. Liang, and Z. Jin, \"Smartcommit: a graph-based interactive assistant for activity-oriented commits,\" in Proceedings of the 29th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, 2021, pp. 379-390.\n\nAutomating just-in-time comment updating. Z Liu, X Xia, M Yan, S Li, Proceedings of the 35th IEEE/ACM International Conference on Automated Software Engineering. the 35th IEEE/ACM International Conference on Automated Software EngineeringZ. Liu, X. Xia, M. Yan, and S. Li, \"Automating just-in-time comment updating,\" in Proceedings of the 35th IEEE/ACM International Confer- ence on Automated Software Engineering, 2020, pp. 585-597.\n\nLearning to update natural language comments based on code changes. S Panthaplackel, P Nie, M Gligoric, J J Li, R J Mooney, Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics. the 58th Annual Meeting of the Association for Computational LinguisticsS. Panthaplackel, P. Nie, M. Gligoric, J. J. Li, and R. J. Mooney, \"Learning to update natural language comments based on code changes,\" in Proceedings of the 58th Annual Meeting of the Association for Computational Linguistics, 2020, pp. 1853-1868.\n\nPatchnet: Hierarchical deep learning-based stable patch identification for the linux kernel. T Hoang, J Lawall, Y Tian, R J Oentaryo, D Lo, IEEE Trans. Software Eng. 4711T. Hoang, J. Lawall, Y. Tian, R. J. Oentaryo, and D. Lo, \"Patchnet: Hierarchical deep learning-based stable patch identification for the linux kernel,\" IEEE Trans. Software Eng., vol. 47, no. 11, pp. 2471-2486, 2021.\n\nLong short-term memory. S Hochreiter, J Schmidhuber, Neural Comput. 98S. Hochreiter and J. Schmidhuber, \"Long short-term memory,\" Neural Comput., vol. 9, no. 8, pp. 1735-1780, 1997.\n\nAtom: Commit message generation based on abstract syntax tree and hybrid ranking. S Liu, C Gao, S Chen, N Lun Yiu, Y Liu, IEEE Trans. Software Eng. S. Liu, C. Gao, S. Chen, N. Lun Yiu, and Y. Liu, \"Atom: Commit message generation based on abstract syntax tree and hybrid ranking,\" IEEE Trans. Software Eng., pp. 1-1, 2020.\n\nA structural model for contextual code changes. S Brody, U Alon, E Yahav, Proc. ACM Program. Lang. 4OOPSLA28S. Brody, U. Alon, and E. Yahav, \"A structural model for contextual code changes,\" Proc. ACM Program. Lang., vol. 4, no. OOPSLA, pp. 215:1-215:28, 2020.\n\nGated graph sequence neural networks. Y Li, D Tarlow, M Brockschmidt, R S Zemel, Proceedings of the 4th International Conference on Learning Representations. the 4th International Conference on Learning RepresentationsY. Li, D. Tarlow, M. Brockschmidt, and R. S. Zemel, \"Gated graph sequence neural networks,\" in Proceedings of the 4th International Conference on Learning Representations, 2016.\n\nAssessing generalizability of CodeBERT. X Zhou, D Han, D Lo, 2021 IEEE International Conference on Software Maintenance and Evolution. X. Zhou, D. Han, and D. Lo, \"Assessing generalizability of CodeBERT,\" in 2021 IEEE International Conference on Software Maintenance and Evolution, 2021, pp. 425-436.\n", "annotations": {"author": "[{\"end\":102,\"start\":89},{\"end\":137,\"start\":103},{\"end\":162,\"start\":138},{\"end\":193,\"start\":163},{\"end\":230,\"start\":194},{\"end\":281,\"start\":231},{\"end\":318,\"start\":282},{\"end\":102,\"start\":89},{\"end\":137,\"start\":103},{\"end\":162,\"start\":138},{\"end\":193,\"start\":163},{\"end\":230,\"start\":194},{\"end\":281,\"start\":231},{\"end\":318,\"start\":282}]", "publisher": null, "author_last_name": "[{\"end\":101,\"start\":98},{\"end\":114,\"start\":110},{\"end\":145,\"start\":142},{\"end\":174,\"start\":170},{\"end\":101,\"start\":98},{\"end\":114,\"start\":110},{\"end\":145,\"start\":142},{\"end\":174,\"start\":170}]", "author_first_name": "[{\"end\":97,\"start\":89},{\"end\":109,\"start\":103},{\"end\":141,\"start\":138},{\"end\":169,\"start\":163},{\"end\":97,\"start\":89},{\"end\":109,\"start\":103},{\"end\":141,\"start\":138},{\"end\":169,\"start\":163}]", "author_affiliation": "[{\"end\":229,\"start\":195},{\"end\":280,\"start\":232},{\"end\":317,\"start\":283},{\"end\":229,\"start\":195},{\"end\":280,\"start\":232},{\"end\":317,\"start\":283}]", "title": "[{\"end\":86,\"start\":1},{\"end\":404,\"start\":319},{\"end\":86,\"start\":1},{\"end\":404,\"start\":319}]", "venue": null, "abstract": "[{\"end\":1971,\"start\":535},{\"end\":1971,\"start\":535}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2149,\"start\":2146},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2498,\"start\":2495},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2601,\"start\":2598},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2952,\"start\":2949},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2957,\"start\":2954},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2962,\"start\":2959},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3473,\"start\":3470},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3755,\"start\":3752},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3760,\"start\":3757},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3765,\"start\":3762},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3771,\"start\":3767},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3904,\"start\":3901},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3909,\"start\":3906},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3915,\"start\":3911},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3921,\"start\":3917},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4143,\"start\":4140},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4149,\"start\":4145},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4155,\"start\":4151},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4436,\"start\":4433},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4441,\"start\":4438},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4447,\"start\":4443},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4504,\"start\":4500},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4510,\"start\":4506},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4552,\"start\":4549},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4558,\"start\":4554},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":4564,\"start\":4560},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4943,\"start\":4940},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4949,\"start\":4945},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4966,\"start\":4962},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5290,\"start\":5287},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5295,\"start\":5292},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":5313,\"start\":5310},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":5758,\"start\":5755},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5764,\"start\":5760},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5844,\"start\":5841},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5850,\"start\":5846},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5856,\"start\":5852},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6193,\"start\":6189},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6327,\"start\":6324},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":6740,\"start\":6736},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7846,\"start\":7842},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11139,\"start\":11135},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":11145,\"start\":11141},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":11400,\"start\":11396},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":11519,\"start\":11515},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11654,\"start\":11650},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":11666,\"start\":11662},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":11679,\"start\":11675},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":11695,\"start\":11691},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11900,\"start\":11896},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":11906,\"start\":11902},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":12257,\"start\":12253},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":12909,\"start\":12906},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":12914,\"start\":12911},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":12920,\"start\":12916},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":12959,\"start\":12956},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":12965,\"start\":12961},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":12971,\"start\":12967},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":13044,\"start\":13040},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":13050,\"start\":13046},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":14177,\"start\":14173},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":16281,\"start\":16277},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":16436,\"start\":16432},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":18198,\"start\":18194},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":18204,\"start\":18200},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":18210,\"start\":18206},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":18362,\"start\":18359},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":18368,\"start\":18364},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":18374,\"start\":18370},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18439,\"start\":18435},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":23561,\"start\":23557},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":25242,\"start\":25238},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":26520,\"start\":26516},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":28480,\"start\":28476},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":28525,\"start\":28521},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28566,\"start\":28562},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29661,\"start\":29657},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":29938,\"start\":29934},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":29990,\"start\":29986},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":30319,\"start\":30315},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":30383,\"start\":30379},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":30399,\"start\":30395},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":30500,\"start\":30497},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":31005,\"start\":31001},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31029,\"start\":31025},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":31145,\"start\":31142},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":31185,\"start\":31181},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31246,\"start\":31242},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31527,\"start\":31523},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":31724,\"start\":31720},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31730,\"start\":31726},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":31755,\"start\":31751},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":31837,\"start\":31833},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":31850,\"start\":31846},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":31867,\"start\":31863},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":31924,\"start\":31920},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":32375,\"start\":32371},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":32768,\"start\":32764},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":33765,\"start\":33761},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":34191,\"start\":34187},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":34197,\"start\":34193},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":34573,\"start\":34569},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":34654,\"start\":34650},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":34840,\"start\":34837},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":34911,\"start\":34907},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":34926,\"start\":34923},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":34970,\"start\":34967},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":35367,\"start\":35363},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":35541,\"start\":35537},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":35561,\"start\":35558},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":35726,\"start\":35722},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":35748,\"start\":35744},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":35928,\"start\":35924},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":36087,\"start\":36083},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":36185,\"start\":36181},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":37480,\"start\":37476},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":38154,\"start\":38150},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":38995,\"start\":38991},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":39326,\"start\":39323},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":39331,\"start\":39328},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":39337,\"start\":39333},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39343,\"start\":39339},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39701,\"start\":39697},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":39713,\"start\":39710},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":39732,\"start\":39728},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":39955,\"start\":39952},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":40193,\"start\":40189},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":40614,\"start\":40610},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":40723,\"start\":40719},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":40926,\"start\":40922},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41046,\"start\":41042},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":41197,\"start\":41194},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41203,\"start\":41199},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":41209,\"start\":41205},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":41283,\"start\":41279},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":44844,\"start\":44840},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":44850,\"start\":44846},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46461,\"start\":46458},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":46467,\"start\":46463},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":46473,\"start\":46469},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":46479,\"start\":46475},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":46485,\"start\":46481},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":46491,\"start\":46487},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":46564,\"start\":46560},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46635,\"start\":46632},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":46641,\"start\":46637},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":46647,\"start\":46643},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":46711,\"start\":46707},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":46933,\"start\":46929},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":47238,\"start\":47234},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":47244,\"start\":47240},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":47250,\"start\":47246},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":47256,\"start\":47252},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":47262,\"start\":47258},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":47321,\"start\":47317},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":47500,\"start\":47496},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":47527,\"start\":47523},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":47548,\"start\":47544},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":47660,\"start\":47656},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":47673,\"start\":47669},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":47846,\"start\":47843},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":47851,\"start\":47848},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":47857,\"start\":47853},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":47863,\"start\":47859},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":47934,\"start\":47931},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":47958,\"start\":47954},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":48101,\"start\":48097},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":48219,\"start\":48215},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":48476,\"start\":48473},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":48482,\"start\":48478},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":48499,\"start\":48495},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":48631,\"start\":48628},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":51652,\"start\":51649},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":52922,\"start\":52919},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2149,\"start\":2146},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2498,\"start\":2495},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2601,\"start\":2598},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2952,\"start\":2949},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2957,\"start\":2954},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2962,\"start\":2959},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3473,\"start\":3470},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3755,\"start\":3752},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3760,\"start\":3757},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3765,\"start\":3762},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3771,\"start\":3767},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3904,\"start\":3901},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3909,\"start\":3906},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3915,\"start\":3911},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3921,\"start\":3917},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4143,\"start\":4140},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4149,\"start\":4145},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4155,\"start\":4151},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4436,\"start\":4433},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4441,\"start\":4438},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4447,\"start\":4443},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4504,\"start\":4500},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4510,\"start\":4506},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4552,\"start\":4549},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4558,\"start\":4554},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":4564,\"start\":4560},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4943,\"start\":4940},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4949,\"start\":4945},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4966,\"start\":4962},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5290,\"start\":5287},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5295,\"start\":5292},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":5313,\"start\":5310},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":5758,\"start\":5755},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5764,\"start\":5760},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5844,\"start\":5841},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5850,\"start\":5846},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5856,\"start\":5852},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6193,\"start\":6189},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6327,\"start\":6324},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":6740,\"start\":6736},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7846,\"start\":7842},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11139,\"start\":11135},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":11145,\"start\":11141},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":11400,\"start\":11396},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":11519,\"start\":11515},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11654,\"start\":11650},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":11666,\"start\":11662},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":11679,\"start\":11675},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":11695,\"start\":11691},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11900,\"start\":11896},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":11906,\"start\":11902},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":12257,\"start\":12253},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":12909,\"start\":12906},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":12914,\"start\":12911},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":12920,\"start\":12916},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":12959,\"start\":12956},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":12965,\"start\":12961},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":12971,\"start\":12967},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":13044,\"start\":13040},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":13050,\"start\":13046},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":14177,\"start\":14173},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":16281,\"start\":16277},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":16436,\"start\":16432},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":18198,\"start\":18194},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":18204,\"start\":18200},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":18210,\"start\":18206},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":18362,\"start\":18359},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":18368,\"start\":18364},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":18374,\"start\":18370},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":18439,\"start\":18435},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":23561,\"start\":23557},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":25242,\"start\":25238},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":26520,\"start\":26516},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":28480,\"start\":28476},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":28525,\"start\":28521},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28566,\"start\":28562},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29661,\"start\":29657},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":29938,\"start\":29934},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":29990,\"start\":29986},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":30319,\"start\":30315},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":30383,\"start\":30379},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":30399,\"start\":30395},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":30500,\"start\":30497},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":31005,\"start\":31001},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31029,\"start\":31025},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":31145,\"start\":31142},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":31185,\"start\":31181},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31246,\"start\":31242},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31527,\"start\":31523},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":31724,\"start\":31720},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":31730,\"start\":31726},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":31755,\"start\":31751},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":31837,\"start\":31833},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":31850,\"start\":31846},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":31867,\"start\":31863},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":31924,\"start\":31920},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":32375,\"start\":32371},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":32768,\"start\":32764},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":33765,\"start\":33761},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":34191,\"start\":34187},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":34197,\"start\":34193},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":34573,\"start\":34569},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":34654,\"start\":34650},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":34840,\"start\":34837},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":34911,\"start\":34907},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":34926,\"start\":34923},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":34970,\"start\":34967},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":35367,\"start\":35363},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":35541,\"start\":35537},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":35561,\"start\":35558},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":35726,\"start\":35722},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":35748,\"start\":35744},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":35928,\"start\":35924},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":36087,\"start\":36083},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":36185,\"start\":36181},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":37480,\"start\":37476},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":38154,\"start\":38150},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":38995,\"start\":38991},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":39326,\"start\":39323},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":39331,\"start\":39328},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":39337,\"start\":39333},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39343,\"start\":39339},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39701,\"start\":39697},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":39713,\"start\":39710},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":39732,\"start\":39728},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":39955,\"start\":39952},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":40193,\"start\":40189},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":40614,\"start\":40610},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":40723,\"start\":40719},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":40926,\"start\":40922},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41046,\"start\":41042},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":41197,\"start\":41194},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41203,\"start\":41199},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":41209,\"start\":41205},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":41283,\"start\":41279},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":44844,\"start\":44840},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":44850,\"start\":44846},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46461,\"start\":46458},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":46467,\"start\":46463},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":46473,\"start\":46469},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":46479,\"start\":46475},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":46485,\"start\":46481},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":46491,\"start\":46487},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":46564,\"start\":46560},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46635,\"start\":46632},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":46641,\"start\":46637},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":46647,\"start\":46643},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":46711,\"start\":46707},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":46933,\"start\":46929},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":47238,\"start\":47234},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":47244,\"start\":47240},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":47250,\"start\":47246},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":47256,\"start\":47252},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":47262,\"start\":47258},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":47321,\"start\":47317},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":47500,\"start\":47496},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":47527,\"start\":47523},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":47548,\"start\":47544},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":47660,\"start\":47656},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":47673,\"start\":47669},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":47846,\"start\":47843},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":47851,\"start\":47848},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":47857,\"start\":47853},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":47863,\"start\":47859},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":47934,\"start\":47931},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":47958,\"start\":47954},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":48101,\"start\":48097},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":48219,\"start\":48215},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":48476,\"start\":48473},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":48482,\"start\":48478},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":48499,\"start\":48495},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":48631,\"start\":48628},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":51652,\"start\":51649},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":52922,\"start\":52919}]", "figure": "[{\"attributes\":{\"id\":\"fig_1\"},\"end\":50986,\"start\":50944},{\"attributes\":{\"id\":\"fig_2\"},\"end\":51213,\"start\":50987},{\"attributes\":{\"id\":\"fig_3\"},\"end\":52198,\"start\":51214},{\"attributes\":{\"id\":\"fig_4\"},\"end\":52923,\"start\":52199},{\"attributes\":{\"id\":\"fig_5\"},\"end\":53013,\"start\":52924},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":53475,\"start\":53014},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":53611,\"start\":53476},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":54932,\"start\":53612},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":55890,\"start\":54933},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":57058,\"start\":55891},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":57837,\"start\":57059},{\"attributes\":{\"id\":\"fig_1\"},\"end\":50986,\"start\":50944},{\"attributes\":{\"id\":\"fig_2\"},\"end\":51213,\"start\":50987},{\"attributes\":{\"id\":\"fig_3\"},\"end\":52198,\"start\":51214},{\"attributes\":{\"id\":\"fig_4\"},\"end\":52923,\"start\":52199},{\"attributes\":{\"id\":\"fig_5\"},\"end\":53013,\"start\":52924},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":53475,\"start\":53014},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":53611,\"start\":53476},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":54932,\"start\":53612},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":55890,\"start\":54933},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":57058,\"start\":55891},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":57837,\"start\":57059}]", "paragraph": "[{\"end\":2357,\"start\":1990},{\"end\":3474,\"start\":2359},{\"end\":4816,\"start\":3476},{\"end\":5857,\"start\":4818},{\"end\":7092,\"start\":5859},{\"end\":7916,\"start\":7094},{\"end\":8648,\"start\":7918},{\"end\":8710,\"start\":8650},{\"end\":9983,\"start\":8712},{\"end\":10166,\"start\":10015},{\"end\":10511,\"start\":10181},{\"end\":10937,\"start\":10599},{\"end\":12049,\"start\":10967},{\"end\":13259,\"start\":12091},{\"end\":14062,\"start\":13277},{\"end\":14709,\"start\":14095},{\"end\":16512,\"start\":14711},{\"end\":16819,\"start\":16514},{\"end\":17205,\"start\":17140},{\"end\":17555,\"start\":17292},{\"end\":17780,\"start\":17588},{\"end\":18718,\"start\":17872},{\"end\":19417,\"start\":18746},{\"end\":19909,\"start\":19419},{\"end\":20216,\"start\":19911},{\"end\":20398,\"start\":20218},{\"end\":20493,\"start\":20473},{\"end\":22140,\"start\":21079},{\"end\":22157,\"start\":22142},{\"end\":22735,\"start\":22405},{\"end\":22972,\"start\":22737},{\"end\":23109,\"start\":23024},{\"end\":23724,\"start\":23188},{\"end\":23928,\"start\":23804},{\"end\":24050,\"start\":23930},{\"end\":24380,\"start\":24076},{\"end\":24905,\"start\":24382},{\"end\":25570,\"start\":25016},{\"end\":25937,\"start\":25607},{\"end\":26628,\"start\":25939},{\"end\":26743,\"start\":26685},{\"end\":28263,\"start\":26769},{\"end\":29225,\"start\":28283},{\"end\":29840,\"start\":29227},{\"end\":30594,\"start\":29842},{\"end\":30898,\"start\":30596},{\"end\":31697,\"start\":30927},{\"end\":33010,\"start\":31699},{\"end\":33671,\"start\":33012},{\"end\":34436,\"start\":33673},{\"end\":35086,\"start\":34438},{\"end\":36106,\"start\":35088},{\"end\":37724,\"start\":36108},{\"end\":38844,\"start\":37726},{\"end\":39618,\"start\":38846},{\"end\":40299,\"start\":39620},{\"end\":42817,\"start\":40301},{\"end\":44123,\"start\":42862},{\"end\":44945,\"start\":44142},{\"end\":46172,\"start\":44972},{\"end\":47119,\"start\":46193},{\"end\":47727,\"start\":47121},{\"end\":48392,\"start\":47729},{\"end\":49519,\"start\":48394},{\"end\":50057,\"start\":49521},{\"end\":50919,\"start\":50077},{\"end\":2357,\"start\":1990},{\"end\":3474,\"start\":2359},{\"end\":4816,\"start\":3476},{\"end\":5857,\"start\":4818},{\"end\":7092,\"start\":5859},{\"end\":7916,\"start\":7094},{\"end\":8648,\"start\":7918},{\"end\":8710,\"start\":8650},{\"end\":9983,\"start\":8712},{\"end\":10166,\"start\":10015},{\"end\":10511,\"start\":10181},{\"end\":10937,\"start\":10599},{\"end\":12049,\"start\":10967},{\"end\":13259,\"start\":12091},{\"end\":14062,\"start\":13277},{\"end\":14709,\"start\":14095},{\"end\":16512,\"start\":14711},{\"end\":16819,\"start\":16514},{\"end\":17205,\"start\":17140},{\"end\":17555,\"start\":17292},{\"end\":17780,\"start\":17588},{\"end\":18718,\"start\":17872},{\"end\":19417,\"start\":18746},{\"end\":19909,\"start\":19419},{\"end\":20216,\"start\":19911},{\"end\":20398,\"start\":20218},{\"end\":20493,\"start\":20473},{\"end\":22140,\"start\":21079},{\"end\":22157,\"start\":22142},{\"end\":22735,\"start\":22405},{\"end\":22972,\"start\":22737},{\"end\":23109,\"start\":23024},{\"end\":23724,\"start\":23188},{\"end\":23928,\"start\":23804},{\"end\":24050,\"start\":23930},{\"end\":24380,\"start\":24076},{\"end\":24905,\"start\":24382},{\"end\":25570,\"start\":25016},{\"end\":25937,\"start\":25607},{\"end\":26628,\"start\":25939},{\"end\":26743,\"start\":26685},{\"end\":28263,\"start\":26769},{\"end\":29225,\"start\":28283},{\"end\":29840,\"start\":29227},{\"end\":30594,\"start\":29842},{\"end\":30898,\"start\":30596},{\"end\":31697,\"start\":30927},{\"end\":33010,\"start\":31699},{\"end\":33671,\"start\":33012},{\"end\":34436,\"start\":33673},{\"end\":35086,\"start\":34438},{\"end\":36106,\"start\":35088},{\"end\":37724,\"start\":36108},{\"end\":38844,\"start\":37726},{\"end\":39618,\"start\":38846},{\"end\":40299,\"start\":39620},{\"end\":42817,\"start\":40301},{\"end\":44123,\"start\":42862},{\"end\":44945,\"start\":44142},{\"end\":46172,\"start\":44972},{\"end\":47119,\"start\":46193},{\"end\":47727,\"start\":47121},{\"end\":48392,\"start\":47729},{\"end\":49519,\"start\":48394},{\"end\":50057,\"start\":49521},{\"end\":50919,\"start\":50077}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":10598,\"start\":10512},{\"attributes\":{\"id\":\"formula_1\"},\"end\":17139,\"start\":16820},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17291,\"start\":17206},{\"attributes\":{\"id\":\"formula_3\"},\"end\":17871,\"start\":17781},{\"attributes\":{\"id\":\"formula_4\"},\"end\":20455,\"start\":20399},{\"attributes\":{\"id\":\"formula_5\"},\"end\":20636,\"start\":20494},{\"attributes\":{\"id\":\"formula_6\"},\"end\":21078,\"start\":20636},{\"attributes\":{\"id\":\"formula_7\"},\"end\":22404,\"start\":22158},{\"attributes\":{\"id\":\"formula_8\"},\"end\":23023,\"start\":22973},{\"attributes\":{\"id\":\"formula_9\"},\"end\":23187,\"start\":23110},{\"attributes\":{\"id\":\"formula_10\"},\"end\":23803,\"start\":23725},{\"attributes\":{\"id\":\"formula_11\"},\"end\":24075,\"start\":24051},{\"attributes\":{\"id\":\"formula_12\"},\"end\":25015,\"start\":24906},{\"attributes\":{\"id\":\"formula_13\"},\"end\":25606,\"start\":25571},{\"attributes\":{\"id\":\"formula_14\"},\"end\":26684,\"start\":26629},{\"attributes\":{\"id\":\"formula_0\"},\"end\":10598,\"start\":10512},{\"attributes\":{\"id\":\"formula_1\"},\"end\":17139,\"start\":16820},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17291,\"start\":17206},{\"attributes\":{\"id\":\"formula_3\"},\"end\":17871,\"start\":17781},{\"attributes\":{\"id\":\"formula_4\"},\"end\":20455,\"start\":20399},{\"attributes\":{\"id\":\"formula_5\"},\"end\":20636,\"start\":20494},{\"attributes\":{\"id\":\"formula_6\"},\"end\":21078,\"start\":20636},{\"attributes\":{\"id\":\"formula_7\"},\"end\":22404,\"start\":22158},{\"attributes\":{\"id\":\"formula_8\"},\"end\":23023,\"start\":22973},{\"attributes\":{\"id\":\"formula_9\"},\"end\":23187,\"start\":23110},{\"attributes\":{\"id\":\"formula_10\"},\"end\":23803,\"start\":23725},{\"attributes\":{\"id\":\"formula_11\"},\"end\":24075,\"start\":24051},{\"attributes\":{\"id\":\"formula_12\"},\"end\":25015,\"start\":24906},{\"attributes\":{\"id\":\"formula_13\"},\"end\":25606,\"start\":25571},{\"attributes\":{\"id\":\"formula_14\"},\"end\":26684,\"start\":26629}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":12160,\"start\":12153},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":12581,\"start\":12574},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":14753,\"start\":14745},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":15427,\"start\":15419},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":31656,\"start\":31648},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":32274,\"start\":32252},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":33056,\"start\":33036},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":36556,\"start\":36532},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":38399,\"start\":38391},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":41399,\"start\":41392},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":42078,\"start\":42070},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":12160,\"start\":12153},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":12581,\"start\":12574},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":14753,\"start\":14745},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":15427,\"start\":15419},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":31656,\"start\":31648},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":32274,\"start\":32252},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":33056,\"start\":33036},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":36556,\"start\":36532},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":38399,\"start\":38391},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":41399,\"start\":41392},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":42078,\"start\":42070}]", "section_header": "[{\"end\":1988,\"start\":1973},{\"end\":10013,\"start\":9986},{\"end\":10179,\"start\":10169},{\"end\":10965,\"start\":10940},{\"end\":12089,\"start\":12052},{\"end\":13275,\"start\":13262},{\"end\":14093,\"start\":14065},{\"end\":17586,\"start\":17558},{\"end\":18744,\"start\":18721},{\"end\":20471,\"start\":20457},{\"end\":26767,\"start\":26746},{\"end\":28281,\"start\":28266},{\"end\":30925,\"start\":30901},{\"end\":42833,\"start\":42820},{\"end\":42860,\"start\":42836},{\"end\":44140,\"start\":44126},{\"end\":44970,\"start\":44948},{\"end\":46191,\"start\":46175},{\"end\":50075,\"start\":50060},{\"end\":50943,\"start\":50922},{\"end\":50953,\"start\":50945},{\"end\":50993,\"start\":50988},{\"end\":52205,\"start\":52200},{\"end\":52933,\"start\":52925},{\"end\":53033,\"start\":53015},{\"end\":53488,\"start\":53477},{\"end\":53626,\"start\":53613},{\"end\":54941,\"start\":54934},{\"end\":55901,\"start\":55892},{\"end\":57067,\"start\":57060},{\"end\":1988,\"start\":1973},{\"end\":10013,\"start\":9986},{\"end\":10179,\"start\":10169},{\"end\":10965,\"start\":10940},{\"end\":12089,\"start\":12052},{\"end\":13275,\"start\":13262},{\"end\":14093,\"start\":14065},{\"end\":17586,\"start\":17558},{\"end\":18744,\"start\":18721},{\"end\":20471,\"start\":20457},{\"end\":26767,\"start\":26746},{\"end\":28281,\"start\":28266},{\"end\":30925,\"start\":30901},{\"end\":42833,\"start\":42820},{\"end\":42860,\"start\":42836},{\"end\":44140,\"start\":44126},{\"end\":44970,\"start\":44948},{\"end\":46191,\"start\":46175},{\"end\":50075,\"start\":50060},{\"end\":50943,\"start\":50922},{\"end\":50953,\"start\":50945},{\"end\":50993,\"start\":50988},{\"end\":52205,\"start\":52200},{\"end\":52933,\"start\":52925},{\"end\":53033,\"start\":53015},{\"end\":53488,\"start\":53477},{\"end\":53626,\"start\":53613},{\"end\":54941,\"start\":54934},{\"end\":55901,\"start\":55892},{\"end\":57067,\"start\":57060}]", "table": "[{\"end\":53475,\"start\":53066},{\"end\":53611,\"start\":53528},{\"end\":54932,\"start\":53671},{\"end\":55890,\"start\":54985},{\"end\":57058,\"start\":55905},{\"end\":57837,\"start\":57111},{\"end\":53475,\"start\":53066},{\"end\":53611,\"start\":53528},{\"end\":54932,\"start\":53671},{\"end\":55890,\"start\":54985},{\"end\":57058,\"start\":55905},{\"end\":57837,\"start\":57111}]", "figure_caption": "[{\"end\":50986,\"start\":50955},{\"end\":51213,\"start\":50995},{\"end\":52198,\"start\":51216},{\"end\":52923,\"start\":52207},{\"end\":53013,\"start\":52935},{\"end\":53066,\"start\":53035},{\"end\":53528,\"start\":53491},{\"end\":53671,\"start\":53630},{\"end\":54985,\"start\":54943},{\"end\":57111,\"start\":57069},{\"end\":50986,\"start\":50955},{\"end\":51213,\"start\":50995},{\"end\":52198,\"start\":51216},{\"end\":52923,\"start\":52207},{\"end\":53013,\"start\":52935},{\"end\":53066,\"start\":53035},{\"end\":53528,\"start\":53491},{\"end\":53671,\"start\":53630},{\"end\":54985,\"start\":54943},{\"end\":57111,\"start\":57069}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13324,\"start\":13316},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":19882,\"start\":19874},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":20194,\"start\":20186},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":24358,\"start\":24350},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":24751,\"start\":24743},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":27046,\"start\":27038},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":30897,\"start\":30889},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":35167,\"start\":35159},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40372,\"start\":40364},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40574,\"start\":40566},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13324,\"start\":13316},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":19882,\"start\":19874},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":20194,\"start\":20186},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":24358,\"start\":24350},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":24751,\"start\":24743},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":27046,\"start\":27038},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":30897,\"start\":30889},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":35167,\"start\":35159},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40372,\"start\":40364},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40574,\"start\":40566}]", "bib_author_first_name": "[{\"end\":57915,\"start\":57914},{\"end\":57917,\"start\":57916},{\"end\":57928,\"start\":57927},{\"end\":58397,\"start\":58396},{\"end\":58406,\"start\":58405},{\"end\":58416,\"start\":58415},{\"end\":58921,\"start\":58920},{\"end\":58929,\"start\":58928},{\"end\":58940,\"start\":58939},{\"end\":58947,\"start\":58946},{\"end\":58954,\"start\":58953},{\"end\":58960,\"start\":58959},{\"end\":58968,\"start\":58967},{\"end\":58970,\"start\":58969},{\"end\":59465,\"start\":59464},{\"end\":59472,\"start\":59471},{\"end\":59476,\"start\":59473},{\"end\":59482,\"start\":59481},{\"end\":59734,\"start\":59733},{\"end\":59743,\"start\":59742},{\"end\":59756,\"start\":59755},{\"end\":59768,\"start\":59767},{\"end\":59781,\"start\":59780},{\"end\":59793,\"start\":59792},{\"end\":59795,\"start\":59794},{\"end\":60141,\"start\":60140},{\"end\":60149,\"start\":60148},{\"end\":60156,\"start\":60155},{\"end\":60158,\"start\":60157},{\"end\":60168,\"start\":60167},{\"end\":60179,\"start\":60178},{\"end\":60185,\"start\":60184},{\"end\":60194,\"start\":60193},{\"end\":60196,\"start\":60195},{\"end\":60769,\"start\":60768},{\"end\":60775,\"start\":60774},{\"end\":60781,\"start\":60780},{\"end\":60793,\"start\":60792},{\"end\":60804,\"start\":60803},{\"end\":61089,\"start\":61088},{\"end\":61098,\"start\":61097},{\"end\":61100,\"start\":61099},{\"end\":61108,\"start\":61107},{\"end\":61114,\"start\":61113},{\"end\":61491,\"start\":61490},{\"end\":61499,\"start\":61498},{\"end\":61509,\"start\":61508},{\"end\":61869,\"start\":61868},{\"end\":61877,\"start\":61876},{\"end\":61886,\"start\":61885},{\"end\":61895,\"start\":61894},{\"end\":62373,\"start\":62372},{\"end\":62382,\"start\":62381},{\"end\":62384,\"start\":62383},{\"end\":62391,\"start\":62390},{\"end\":62400,\"start\":62399},{\"end\":62406,\"start\":62405},{\"end\":62895,\"start\":62894},{\"end\":62902,\"start\":62901},{\"end\":62909,\"start\":62908},{\"end\":62917,\"start\":62916},{\"end\":62926,\"start\":62925},{\"end\":63407,\"start\":63406},{\"end\":63415,\"start\":63414},{\"end\":63422,\"start\":63421},{\"end\":63428,\"start\":63427},{\"end\":63434,\"start\":63433},{\"end\":63442,\"start\":63441},{\"end\":63758,\"start\":63757},{\"end\":63765,\"start\":63764},{\"end\":63773,\"start\":63772},{\"end\":63780,\"start\":63779},{\"end\":64049,\"start\":64048},{\"end\":64057,\"start\":64056},{\"end\":64059,\"start\":64058},{\"end\":64067,\"start\":64066},{\"end\":64075,\"start\":64074},{\"end\":64082,\"start\":64081},{\"end\":64344,\"start\":64343},{\"end\":64351,\"start\":64350},{\"end\":64361,\"start\":64360},{\"end\":64374,\"start\":64373},{\"end\":64390,\"start\":64389},{\"end\":64392,\"start\":64391},{\"end\":64811,\"start\":64810},{\"end\":64815,\"start\":64812},{\"end\":64821,\"start\":64820},{\"end\":64828,\"start\":64827},{\"end\":64837,\"start\":64836},{\"end\":64839,\"start\":64838},{\"end\":65346,\"start\":65345},{\"end\":65363,\"start\":65362},{\"end\":65365,\"start\":65364},{\"end\":65371,\"start\":65370},{\"end\":65383,\"start\":65382},{\"end\":65385,\"start\":65384},{\"end\":65833,\"start\":65832},{\"end\":65841,\"start\":65840},{\"end\":65843,\"start\":65842},{\"end\":65853,\"start\":65852},{\"end\":65862,\"start\":65861},{\"end\":65864,\"start\":65863},{\"end\":66322,\"start\":66321},{\"end\":66329,\"start\":66328},{\"end\":66336,\"start\":66335},{\"end\":66338,\"start\":66337},{\"end\":66348,\"start\":66347},{\"end\":66354,\"start\":66353},{\"end\":66362,\"start\":66361},{\"end\":66862,\"start\":66861},{\"end\":66870,\"start\":66869},{\"end\":66877,\"start\":66876},{\"end\":66885,\"start\":66884},{\"end\":66893,\"start\":66892},{\"end\":66901,\"start\":66900},{\"end\":66909,\"start\":66908},{\"end\":66917,\"start\":66916},{\"end\":66924,\"start\":66923},{\"end\":66931,\"start\":66930},{\"end\":66940,\"start\":66939},{\"end\":67379,\"start\":67378},{\"end\":67390,\"start\":67389},{\"end\":67401,\"start\":67400},{\"end\":67411,\"start\":67410},{\"end\":67424,\"start\":67423},{\"end\":67433,\"start\":67432},{\"end\":67435,\"start\":67434},{\"end\":67444,\"start\":67443},{\"end\":67454,\"start\":67453},{\"end\":68093,\"start\":68092},{\"end\":68103,\"start\":68102},{\"end\":68112,\"start\":68111},{\"end\":68119,\"start\":68118},{\"end\":68870,\"start\":68869},{\"end\":68880,\"start\":68879},{\"end\":68891,\"start\":68890},{\"end\":68902,\"start\":68901},{\"end\":68909,\"start\":68908},{\"end\":68919,\"start\":68918},{\"end\":68929,\"start\":68928},{\"end\":68937,\"start\":68936},{\"end\":68943,\"start\":68942},{\"end\":68945,\"start\":68944},{\"end\":69267,\"start\":69266},{\"end\":69278,\"start\":69277},{\"end\":69284,\"start\":69283},{\"end\":69293,\"start\":69292},{\"end\":69301,\"start\":69300},{\"end\":69311,\"start\":69310},{\"end\":69579,\"start\":69578},{\"end\":69586,\"start\":69585},{\"end\":69592,\"start\":69591},{\"end\":69600,\"start\":69599},{\"end\":70063,\"start\":70062},{\"end\":70079,\"start\":70078},{\"end\":70081,\"start\":70080},{\"end\":70089,\"start\":70088},{\"end\":70095,\"start\":70094},{\"end\":70691,\"start\":70690},{\"end\":70693,\"start\":70692},{\"end\":70702,\"start\":70701},{\"end\":70717,\"start\":70716},{\"end\":70724,\"start\":70723},{\"end\":71396,\"start\":71395},{\"end\":71404,\"start\":71403},{\"end\":71412,\"start\":71411},{\"end\":71414,\"start\":71413},{\"end\":71422,\"start\":71421},{\"end\":71426,\"start\":71423},{\"end\":72142,\"start\":72141},{\"end\":72154,\"start\":72153},{\"end\":72164,\"start\":72163},{\"end\":72605,\"start\":72601},{\"end\":72620,\"start\":72619},{\"end\":72629,\"start\":72628},{\"end\":72639,\"start\":72638},{\"end\":72649,\"start\":72648},{\"end\":73071,\"start\":73070},{\"end\":73073,\"start\":73072},{\"end\":73079,\"start\":73078},{\"end\":73081,\"start\":73080},{\"end\":73090,\"start\":73089},{\"end\":73092,\"start\":73091},{\"end\":73319,\"start\":73318},{\"end\":73327,\"start\":73326},{\"end\":73334,\"start\":73333},{\"end\":73341,\"start\":73340},{\"end\":73347,\"start\":73346},{\"end\":73354,\"start\":73353},{\"end\":73363,\"start\":73362},{\"end\":73850,\"start\":73849},{\"end\":73852,\"start\":73851},{\"end\":73860,\"start\":73859},{\"end\":74303,\"start\":74302},{\"end\":74309,\"start\":74308},{\"end\":74316,\"start\":74315},{\"end\":74322,\"start\":74321},{\"end\":74328,\"start\":74327},{\"end\":74336,\"start\":74335},{\"end\":75084,\"start\":75083},{\"end\":75086,\"start\":75085},{\"end\":75096,\"start\":75095},{\"end\":75462,\"start\":75461},{\"end\":75474,\"start\":75473},{\"end\":75484,\"start\":75483},{\"end\":75495,\"start\":75491},{\"end\":75983,\"start\":75982},{\"end\":75995,\"start\":75994},{\"end\":76567,\"start\":76562},{\"end\":76808,\"start\":76807},{\"end\":76815,\"start\":76814},{\"end\":76823,\"start\":76822},{\"end\":76830,\"start\":76829},{\"end\":76836,\"start\":76835},{\"end\":76843,\"start\":76842},{\"end\":76852,\"start\":76851},{\"end\":76861,\"start\":76860},{\"end\":77376,\"start\":77375},{\"end\":77790,\"start\":77789},{\"end\":77797,\"start\":77796},{\"end\":77804,\"start\":77803},{\"end\":77813,\"start\":77812},{\"end\":77819,\"start\":77818},{\"end\":77828,\"start\":77827},{\"end\":77836,\"start\":77835},{\"end\":77844,\"start\":77843},{\"end\":77853,\"start\":77852},{\"end\":77868,\"start\":77867},{\"end\":78176,\"start\":78175},{\"end\":78178,\"start\":78177},{\"end\":78187,\"start\":78186},{\"end\":78197,\"start\":78196},{\"end\":78453,\"start\":78452},{\"end\":78459,\"start\":78458},{\"end\":78467,\"start\":78466},{\"end\":78477,\"start\":78476},{\"end\":78479,\"start\":78478},{\"end\":78965,\"start\":78964},{\"end\":78967,\"start\":78966},{\"end\":78976,\"start\":78975},{\"end\":78978,\"start\":78977},{\"end\":78986,\"start\":78985},{\"end\":78988,\"start\":78987},{\"end\":78997,\"start\":78996},{\"end\":79431,\"start\":79430},{\"end\":79439,\"start\":79438},{\"end\":79454,\"start\":79453},{\"end\":79462,\"start\":79461},{\"end\":79737,\"start\":79736},{\"end\":79745,\"start\":79744},{\"end\":79752,\"start\":79751},{\"end\":79759,\"start\":79758},{\"end\":79765,\"start\":79764},{\"end\":79772,\"start\":79771},{\"end\":79779,\"start\":79778},{\"end\":79786,\"start\":79785},{\"end\":80318,\"start\":80317},{\"end\":80329,\"start\":80328},{\"end\":80341,\"start\":80340},{\"end\":80353,\"start\":80352},{\"end\":81074,\"start\":81073},{\"end\":81089,\"start\":81088},{\"end\":81521,\"start\":81520},{\"end\":81535,\"start\":81534},{\"end\":81537,\"start\":81536},{\"end\":81547,\"start\":81546},{\"end\":81561,\"start\":81560},{\"end\":81574,\"start\":81573},{\"end\":82029,\"start\":82028},{\"end\":82040,\"start\":82039},{\"end\":82048,\"start\":82047},{\"end\":82058,\"start\":82057},{\"end\":82060,\"start\":82059},{\"end\":82502,\"start\":82501},{\"end\":82510,\"start\":82509},{\"end\":82523,\"start\":82522},{\"end\":82534,\"start\":82533},{\"end\":82544,\"start\":82543},{\"end\":83044,\"start\":83043},{\"end\":83051,\"start\":83050},{\"end\":83471,\"start\":83470},{\"end\":83479,\"start\":83478},{\"end\":83486,\"start\":83485},{\"end\":83493,\"start\":83492},{\"end\":83976,\"start\":83975},{\"end\":83984,\"start\":83983},{\"end\":83993,\"start\":83992},{\"end\":84004,\"start\":84003},{\"end\":84012,\"start\":84011},{\"end\":84019,\"start\":84018},{\"end\":84028,\"start\":84027},{\"end\":84634,\"start\":84633},{\"end\":84641,\"start\":84640},{\"end\":84648,\"start\":84647},{\"end\":84655,\"start\":84654},{\"end\":85095,\"start\":85094},{\"end\":85112,\"start\":85111},{\"end\":85119,\"start\":85118},{\"end\":85131,\"start\":85130},{\"end\":85133,\"start\":85132},{\"end\":85139,\"start\":85138},{\"end\":85141,\"start\":85140},{\"end\":85656,\"start\":85655},{\"end\":85665,\"start\":85664},{\"end\":85675,\"start\":85674},{\"end\":85683,\"start\":85682},{\"end\":85685,\"start\":85684},{\"end\":85697,\"start\":85696},{\"end\":85975,\"start\":85974},{\"end\":85989,\"start\":85988},{\"end\":86216,\"start\":86215},{\"end\":86223,\"start\":86222},{\"end\":86230,\"start\":86229},{\"end\":86238,\"start\":86237},{\"end\":86249,\"start\":86248},{\"end\":86506,\"start\":86505},{\"end\":86515,\"start\":86514},{\"end\":86523,\"start\":86522},{\"end\":86758,\"start\":86757},{\"end\":86764,\"start\":86763},{\"end\":86774,\"start\":86773},{\"end\":86790,\"start\":86789},{\"end\":86792,\"start\":86791},{\"end\":87157,\"start\":87156},{\"end\":87165,\"start\":87164},{\"end\":87172,\"start\":87171},{\"end\":57915,\"start\":57914},{\"end\":57917,\"start\":57916},{\"end\":57928,\"start\":57927},{\"end\":58397,\"start\":58396},{\"end\":58406,\"start\":58405},{\"end\":58416,\"start\":58415},{\"end\":58921,\"start\":58920},{\"end\":58929,\"start\":58928},{\"end\":58940,\"start\":58939},{\"end\":58947,\"start\":58946},{\"end\":58954,\"start\":58953},{\"end\":58960,\"start\":58959},{\"end\":58968,\"start\":58967},{\"end\":58970,\"start\":58969},{\"end\":59465,\"start\":59464},{\"end\":59472,\"start\":59471},{\"end\":59476,\"start\":59473},{\"end\":59482,\"start\":59481},{\"end\":59734,\"start\":59733},{\"end\":59743,\"start\":59742},{\"end\":59756,\"start\":59755},{\"end\":59768,\"start\":59767},{\"end\":59781,\"start\":59780},{\"end\":59793,\"start\":59792},{\"end\":59795,\"start\":59794},{\"end\":60141,\"start\":60140},{\"end\":60149,\"start\":60148},{\"end\":60156,\"start\":60155},{\"end\":60158,\"start\":60157},{\"end\":60168,\"start\":60167},{\"end\":60179,\"start\":60178},{\"end\":60185,\"start\":60184},{\"end\":60194,\"start\":60193},{\"end\":60196,\"start\":60195},{\"end\":60769,\"start\":60768},{\"end\":60775,\"start\":60774},{\"end\":60781,\"start\":60780},{\"end\":60793,\"start\":60792},{\"end\":60804,\"start\":60803},{\"end\":61089,\"start\":61088},{\"end\":61098,\"start\":61097},{\"end\":61100,\"start\":61099},{\"end\":61108,\"start\":61107},{\"end\":61114,\"start\":61113},{\"end\":61491,\"start\":61490},{\"end\":61499,\"start\":61498},{\"end\":61509,\"start\":61508},{\"end\":61869,\"start\":61868},{\"end\":61877,\"start\":61876},{\"end\":61886,\"start\":61885},{\"end\":61895,\"start\":61894},{\"end\":62373,\"start\":62372},{\"end\":62382,\"start\":62381},{\"end\":62384,\"start\":62383},{\"end\":62391,\"start\":62390},{\"end\":62400,\"start\":62399},{\"end\":62406,\"start\":62405},{\"end\":62895,\"start\":62894},{\"end\":62902,\"start\":62901},{\"end\":62909,\"start\":62908},{\"end\":62917,\"start\":62916},{\"end\":62926,\"start\":62925},{\"end\":63407,\"start\":63406},{\"end\":63415,\"start\":63414},{\"end\":63422,\"start\":63421},{\"end\":63428,\"start\":63427},{\"end\":63434,\"start\":63433},{\"end\":63442,\"start\":63441},{\"end\":63758,\"start\":63757},{\"end\":63765,\"start\":63764},{\"end\":63773,\"start\":63772},{\"end\":63780,\"start\":63779},{\"end\":64049,\"start\":64048},{\"end\":64057,\"start\":64056},{\"end\":64059,\"start\":64058},{\"end\":64067,\"start\":64066},{\"end\":64075,\"start\":64074},{\"end\":64082,\"start\":64081},{\"end\":64344,\"start\":64343},{\"end\":64351,\"start\":64350},{\"end\":64361,\"start\":64360},{\"end\":64374,\"start\":64373},{\"end\":64390,\"start\":64389},{\"end\":64392,\"start\":64391},{\"end\":64811,\"start\":64810},{\"end\":64815,\"start\":64812},{\"end\":64821,\"start\":64820},{\"end\":64828,\"start\":64827},{\"end\":64837,\"start\":64836},{\"end\":64839,\"start\":64838},{\"end\":65346,\"start\":65345},{\"end\":65363,\"start\":65362},{\"end\":65365,\"start\":65364},{\"end\":65371,\"start\":65370},{\"end\":65383,\"start\":65382},{\"end\":65385,\"start\":65384},{\"end\":65833,\"start\":65832},{\"end\":65841,\"start\":65840},{\"end\":65843,\"start\":65842},{\"end\":65853,\"start\":65852},{\"end\":65862,\"start\":65861},{\"end\":65864,\"start\":65863},{\"end\":66322,\"start\":66321},{\"end\":66329,\"start\":66328},{\"end\":66336,\"start\":66335},{\"end\":66338,\"start\":66337},{\"end\":66348,\"start\":66347},{\"end\":66354,\"start\":66353},{\"end\":66362,\"start\":66361},{\"end\":66862,\"start\":66861},{\"end\":66870,\"start\":66869},{\"end\":66877,\"start\":66876},{\"end\":66885,\"start\":66884},{\"end\":66893,\"start\":66892},{\"end\":66901,\"start\":66900},{\"end\":66909,\"start\":66908},{\"end\":66917,\"start\":66916},{\"end\":66924,\"start\":66923},{\"end\":66931,\"start\":66930},{\"end\":66940,\"start\":66939},{\"end\":67379,\"start\":67378},{\"end\":67390,\"start\":67389},{\"end\":67401,\"start\":67400},{\"end\":67411,\"start\":67410},{\"end\":67424,\"start\":67423},{\"end\":67433,\"start\":67432},{\"end\":67435,\"start\":67434},{\"end\":67444,\"start\":67443},{\"end\":67454,\"start\":67453},{\"end\":68093,\"start\":68092},{\"end\":68103,\"start\":68102},{\"end\":68112,\"start\":68111},{\"end\":68119,\"start\":68118},{\"end\":68870,\"start\":68869},{\"end\":68880,\"start\":68879},{\"end\":68891,\"start\":68890},{\"end\":68902,\"start\":68901},{\"end\":68909,\"start\":68908},{\"end\":68919,\"start\":68918},{\"end\":68929,\"start\":68928},{\"end\":68937,\"start\":68936},{\"end\":68943,\"start\":68942},{\"end\":68945,\"start\":68944},{\"end\":69267,\"start\":69266},{\"end\":69278,\"start\":69277},{\"end\":69284,\"start\":69283},{\"end\":69293,\"start\":69292},{\"end\":69301,\"start\":69300},{\"end\":69311,\"start\":69310},{\"end\":69579,\"start\":69578},{\"end\":69586,\"start\":69585},{\"end\":69592,\"start\":69591},{\"end\":69600,\"start\":69599},{\"end\":70063,\"start\":70062},{\"end\":70079,\"start\":70078},{\"end\":70081,\"start\":70080},{\"end\":70089,\"start\":70088},{\"end\":70095,\"start\":70094},{\"end\":70691,\"start\":70690},{\"end\":70693,\"start\":70692},{\"end\":70702,\"start\":70701},{\"end\":70717,\"start\":70716},{\"end\":70724,\"start\":70723},{\"end\":71396,\"start\":71395},{\"end\":71404,\"start\":71403},{\"end\":71412,\"start\":71411},{\"end\":71414,\"start\":71413},{\"end\":71422,\"start\":71421},{\"end\":71426,\"start\":71423},{\"end\":72142,\"start\":72141},{\"end\":72154,\"start\":72153},{\"end\":72164,\"start\":72163},{\"end\":72605,\"start\":72601},{\"end\":72620,\"start\":72619},{\"end\":72629,\"start\":72628},{\"end\":72639,\"start\":72638},{\"end\":72649,\"start\":72648},{\"end\":73071,\"start\":73070},{\"end\":73073,\"start\":73072},{\"end\":73079,\"start\":73078},{\"end\":73081,\"start\":73080},{\"end\":73090,\"start\":73089},{\"end\":73092,\"start\":73091},{\"end\":73319,\"start\":73318},{\"end\":73327,\"start\":73326},{\"end\":73334,\"start\":73333},{\"end\":73341,\"start\":73340},{\"end\":73347,\"start\":73346},{\"end\":73354,\"start\":73353},{\"end\":73363,\"start\":73362},{\"end\":73850,\"start\":73849},{\"end\":73852,\"start\":73851},{\"end\":73860,\"start\":73859},{\"end\":74303,\"start\":74302},{\"end\":74309,\"start\":74308},{\"end\":74316,\"start\":74315},{\"end\":74322,\"start\":74321},{\"end\":74328,\"start\":74327},{\"end\":74336,\"start\":74335},{\"end\":75084,\"start\":75083},{\"end\":75086,\"start\":75085},{\"end\":75096,\"start\":75095},{\"end\":75462,\"start\":75461},{\"end\":75474,\"start\":75473},{\"end\":75484,\"start\":75483},{\"end\":75495,\"start\":75491},{\"end\":75983,\"start\":75982},{\"end\":75995,\"start\":75994},{\"end\":76567,\"start\":76562},{\"end\":76808,\"start\":76807},{\"end\":76815,\"start\":76814},{\"end\":76823,\"start\":76822},{\"end\":76830,\"start\":76829},{\"end\":76836,\"start\":76835},{\"end\":76843,\"start\":76842},{\"end\":76852,\"start\":76851},{\"end\":76861,\"start\":76860},{\"end\":77376,\"start\":77375},{\"end\":77790,\"start\":77789},{\"end\":77797,\"start\":77796},{\"end\":77804,\"start\":77803},{\"end\":77813,\"start\":77812},{\"end\":77819,\"start\":77818},{\"end\":77828,\"start\":77827},{\"end\":77836,\"start\":77835},{\"end\":77844,\"start\":77843},{\"end\":77853,\"start\":77852},{\"end\":77868,\"start\":77867},{\"end\":78176,\"start\":78175},{\"end\":78178,\"start\":78177},{\"end\":78187,\"start\":78186},{\"end\":78197,\"start\":78196},{\"end\":78453,\"start\":78452},{\"end\":78459,\"start\":78458},{\"end\":78467,\"start\":78466},{\"end\":78477,\"start\":78476},{\"end\":78479,\"start\":78478},{\"end\":78965,\"start\":78964},{\"end\":78967,\"start\":78966},{\"end\":78976,\"start\":78975},{\"end\":78978,\"start\":78977},{\"end\":78986,\"start\":78985},{\"end\":78988,\"start\":78987},{\"end\":78997,\"start\":78996},{\"end\":79431,\"start\":79430},{\"end\":79439,\"start\":79438},{\"end\":79454,\"start\":79453},{\"end\":79462,\"start\":79461},{\"end\":79737,\"start\":79736},{\"end\":79745,\"start\":79744},{\"end\":79752,\"start\":79751},{\"end\":79759,\"start\":79758},{\"end\":79765,\"start\":79764},{\"end\":79772,\"start\":79771},{\"end\":79779,\"start\":79778},{\"end\":79786,\"start\":79785},{\"end\":80318,\"start\":80317},{\"end\":80329,\"start\":80328},{\"end\":80341,\"start\":80340},{\"end\":80353,\"start\":80352},{\"end\":81074,\"start\":81073},{\"end\":81089,\"start\":81088},{\"end\":81521,\"start\":81520},{\"end\":81535,\"start\":81534},{\"end\":81537,\"start\":81536},{\"end\":81547,\"start\":81546},{\"end\":81561,\"start\":81560},{\"end\":81574,\"start\":81573},{\"end\":82029,\"start\":82028},{\"end\":82040,\"start\":82039},{\"end\":82048,\"start\":82047},{\"end\":82058,\"start\":82057},{\"end\":82060,\"start\":82059},{\"end\":82502,\"start\":82501},{\"end\":82510,\"start\":82509},{\"end\":82523,\"start\":82522},{\"end\":82534,\"start\":82533},{\"end\":82544,\"start\":82543},{\"end\":83044,\"start\":83043},{\"end\":83051,\"start\":83050},{\"end\":83471,\"start\":83470},{\"end\":83479,\"start\":83478},{\"end\":83486,\"start\":83485},{\"end\":83493,\"start\":83492},{\"end\":83976,\"start\":83975},{\"end\":83984,\"start\":83983},{\"end\":83993,\"start\":83992},{\"end\":84004,\"start\":84003},{\"end\":84012,\"start\":84011},{\"end\":84019,\"start\":84018},{\"end\":84028,\"start\":84027},{\"end\":84634,\"start\":84633},{\"end\":84641,\"start\":84640},{\"end\":84648,\"start\":84647},{\"end\":84655,\"start\":84654},{\"end\":85095,\"start\":85094},{\"end\":85112,\"start\":85111},{\"end\":85119,\"start\":85118},{\"end\":85131,\"start\":85130},{\"end\":85133,\"start\":85132},{\"end\":85139,\"start\":85138},{\"end\":85141,\"start\":85140},{\"end\":85656,\"start\":85655},{\"end\":85665,\"start\":85664},{\"end\":85675,\"start\":85674},{\"end\":85683,\"start\":85682},{\"end\":85685,\"start\":85684},{\"end\":85697,\"start\":85696},{\"end\":85975,\"start\":85974},{\"end\":85989,\"start\":85988},{\"end\":86216,\"start\":86215},{\"end\":86223,\"start\":86222},{\"end\":86230,\"start\":86229},{\"end\":86238,\"start\":86237},{\"end\":86249,\"start\":86248},{\"end\":86506,\"start\":86505},{\"end\":86515,\"start\":86514},{\"end\":86523,\"start\":86522},{\"end\":86758,\"start\":86757},{\"end\":86764,\"start\":86763},{\"end\":86774,\"start\":86773},{\"end\":86790,\"start\":86789},{\"end\":86792,\"start\":86791},{\"end\":87157,\"start\":87156},{\"end\":87165,\"start\":87164},{\"end\":87172,\"start\":87171}]", "bib_author_last_name": "[{\"end\":57925,\"start\":57918},{\"end\":57935,\"start\":57929},{\"end\":58403,\"start\":58398},{\"end\":58413,\"start\":58407},{\"end\":58425,\"start\":58417},{\"end\":58926,\"start\":58922},{\"end\":58937,\"start\":58930},{\"end\":58944,\"start\":58941},{\"end\":58951,\"start\":58948},{\"end\":58957,\"start\":58955},{\"end\":58965,\"start\":58961},{\"end\":58977,\"start\":58971},{\"end\":59469,\"start\":59466},{\"end\":59488,\"start\":59483},{\"end\":59740,\"start\":59735},{\"end\":59753,\"start\":59744},{\"end\":59765,\"start\":59757},{\"end\":59778,\"start\":59769},{\"end\":59790,\"start\":59782},{\"end\":59802,\"start\":59796},{\"end\":60146,\"start\":60142},{\"end\":60153,\"start\":60150},{\"end\":60165,\"start\":60159},{\"end\":60176,\"start\":60169},{\"end\":60182,\"start\":60180},{\"end\":60191,\"start\":60186},{\"end\":60206,\"start\":60197},{\"end\":60772,\"start\":60770},{\"end\":60778,\"start\":60776},{\"end\":60790,\"start\":60782},{\"end\":60801,\"start\":60794},{\"end\":60814,\"start\":60805},{\"end\":61095,\"start\":61090},{\"end\":61105,\"start\":61101},{\"end\":61111,\"start\":61109},{\"end\":61121,\"start\":61115},{\"end\":61496,\"start\":61492},{\"end\":61506,\"start\":61500},{\"end\":61512,\"start\":61510},{\"end\":61874,\"start\":61870},{\"end\":61883,\"start\":61878},{\"end\":61892,\"start\":61887},{\"end\":61901,\"start\":61896},{\"end\":62379,\"start\":62374},{\"end\":62388,\"start\":62385},{\"end\":62397,\"start\":62392},{\"end\":62403,\"start\":62401},{\"end\":62415,\"start\":62407},{\"end\":62899,\"start\":62896},{\"end\":62906,\"start\":62903},{\"end\":62914,\"start\":62910},{\"end\":62923,\"start\":62918},{\"end\":62940,\"start\":62927},{\"end\":63412,\"start\":63408},{\"end\":63419,\"start\":63416},{\"end\":63425,\"start\":63423},{\"end\":63431,\"start\":63429},{\"end\":63439,\"start\":63435},{\"end\":63449,\"start\":63443},{\"end\":63762,\"start\":63759},{\"end\":63770,\"start\":63766},{\"end\":63777,\"start\":63774},{\"end\":63784,\"start\":63781},{\"end\":64054,\"start\":64050},{\"end\":64064,\"start\":64060},{\"end\":64072,\"start\":64068},{\"end\":64079,\"start\":64076},{\"end\":64086,\"start\":64083},{\"end\":64348,\"start\":64345},{\"end\":64358,\"start\":64352},{\"end\":64371,\"start\":64362},{\"end\":64387,\"start\":64375},{\"end\":64398,\"start\":64393},{\"end\":64818,\"start\":64816},{\"end\":64825,\"start\":64822},{\"end\":64834,\"start\":64829},{\"end\":64845,\"start\":64840},{\"end\":65360,\"start\":65347},{\"end\":65368,\"start\":65366},{\"end\":65380,\"start\":65372},{\"end\":65392,\"start\":65386},{\"end\":65838,\"start\":65834},{\"end\":65850,\"start\":65844},{\"end\":65859,\"start\":65854},{\"end\":65871,\"start\":65865},{\"end\":66326,\"start\":66323},{\"end\":66333,\"start\":66330},{\"end\":66345,\"start\":66339},{\"end\":66351,\"start\":66349},{\"end\":66359,\"start\":66355},{\"end\":66367,\"start\":66363},{\"end\":66867,\"start\":66863},{\"end\":66874,\"start\":66871},{\"end\":66882,\"start\":66878},{\"end\":66890,\"start\":66886},{\"end\":66898,\"start\":66894},{\"end\":66906,\"start\":66902},{\"end\":66914,\"start\":66910},{\"end\":66921,\"start\":66918},{\"end\":66928,\"start\":66925},{\"end\":66937,\"start\":66932},{\"end\":66945,\"start\":66941},{\"end\":67387,\"start\":67380},{\"end\":67398,\"start\":67391},{\"end\":67408,\"start\":67402},{\"end\":67421,\"start\":67412},{\"end\":67430,\"start\":67425},{\"end\":67441,\"start\":67436},{\"end\":67451,\"start\":67445},{\"end\":67465,\"start\":67455},{\"end\":68100,\"start\":68094},{\"end\":68109,\"start\":68104},{\"end\":68116,\"start\":68113},{\"end\":68129,\"start\":68120},{\"end\":68877,\"start\":68871},{\"end\":68888,\"start\":68881},{\"end\":68899,\"start\":68892},{\"end\":68906,\"start\":68903},{\"end\":68916,\"start\":68910},{\"end\":68926,\"start\":68920},{\"end\":68934,\"start\":68930},{\"end\":68940,\"start\":68938},{\"end\":68949,\"start\":68946},{\"end\":69275,\"start\":69268},{\"end\":69281,\"start\":69279},{\"end\":69290,\"start\":69285},{\"end\":69298,\"start\":69294},{\"end\":69308,\"start\":69302},{\"end\":69321,\"start\":69312},{\"end\":69583,\"start\":69580},{\"end\":69589,\"start\":69587},{\"end\":69597,\"start\":69593},{\"end\":69604,\"start\":69601},{\"end\":70076,\"start\":70064},{\"end\":70086,\"start\":70082},{\"end\":70092,\"start\":70090},{\"end\":70106,\"start\":70096},{\"end\":70699,\"start\":70694},{\"end\":70714,\"start\":70703},{\"end\":70721,\"start\":70718},{\"end\":70730,\"start\":70725},{\"end\":71401,\"start\":71397},{\"end\":71409,\"start\":71405},{\"end\":71419,\"start\":71415},{\"end\":71430,\"start\":71427},{\"end\":72151,\"start\":72143},{\"end\":72161,\"start\":72155},{\"end\":72170,\"start\":72165},{\"end\":72617,\"start\":72606},{\"end\":72626,\"start\":72621},{\"end\":72636,\"start\":72630},{\"end\":72646,\"start\":72640},{\"end\":72655,\"start\":72650},{\"end\":73076,\"start\":73074},{\"end\":73087,\"start\":73082},{\"end\":73099,\"start\":73093},{\"end\":73324,\"start\":73320},{\"end\":73331,\"start\":73328},{\"end\":73338,\"start\":73335},{\"end\":73344,\"start\":73342},{\"end\":73351,\"start\":73348},{\"end\":73360,\"start\":73355},{\"end\":73367,\"start\":73364},{\"end\":73857,\"start\":73853},{\"end\":73868,\"start\":73861},{\"end\":74306,\"start\":74304},{\"end\":74313,\"start\":74310},{\"end\":74319,\"start\":74317},{\"end\":74325,\"start\":74323},{\"end\":74333,\"start\":74329},{\"end\":74339,\"start\":74337},{\"end\":75093,\"start\":75087},{\"end\":75099,\"start\":75097},{\"end\":75471,\"start\":75463},{\"end\":75481,\"start\":75475},{\"end\":75489,\"start\":75485},{\"end\":75499,\"start\":75496},{\"end\":75992,\"start\":75984},{\"end\":76001,\"start\":75996},{\"end\":76571,\"start\":76568},{\"end\":76812,\"start\":76809},{\"end\":76820,\"start\":76816},{\"end\":76827,\"start\":76824},{\"end\":76833,\"start\":76831},{\"end\":76840,\"start\":76837},{\"end\":76849,\"start\":76844},{\"end\":76858,\"start\":76853},{\"end\":76867,\"start\":76862},{\"end\":77382,\"start\":77377},{\"end\":77794,\"start\":77791},{\"end\":77801,\"start\":77798},{\"end\":77810,\"start\":77805},{\"end\":77816,\"start\":77814},{\"end\":77825,\"start\":77820},{\"end\":77833,\"start\":77829},{\"end\":77841,\"start\":77837},{\"end\":77850,\"start\":77845},{\"end\":77865,\"start\":77854},{\"end\":77877,\"start\":77869},{\"end\":78184,\"start\":78179},{\"end\":78194,\"start\":78188},{\"end\":78210,\"start\":78198},{\"end\":78456,\"start\":78454},{\"end\":78464,\"start\":78460},{\"end\":78474,\"start\":78468},{\"end\":78486,\"start\":78480},{\"end\":78973,\"start\":78968},{\"end\":78983,\"start\":78979},{\"end\":78994,\"start\":78989},{\"end\":79002,\"start\":78998},{\"end\":79436,\"start\":79432},{\"end\":79451,\"start\":79440},{\"end\":79459,\"start\":79455},{\"end\":79468,\"start\":79463},{\"end\":79742,\"start\":79738},{\"end\":79749,\"start\":79746},{\"end\":79756,\"start\":79753},{\"end\":79762,\"start\":79760},{\"end\":79769,\"start\":79766},{\"end\":79776,\"start\":79773},{\"end\":79783,\"start\":79780},{\"end\":79790,\"start\":79787},{\"end\":80326,\"start\":80319},{\"end\":80338,\"start\":80330},{\"end\":80350,\"start\":80342},{\"end\":80359,\"start\":80354},{\"end\":81086,\"start\":81075},{\"end\":81096,\"start\":81090},{\"end\":81532,\"start\":81522},{\"end\":81544,\"start\":81538},{\"end\":81558,\"start\":81548},{\"end\":81571,\"start\":81562},{\"end\":81588,\"start\":81575},{\"end\":82037,\"start\":82030},{\"end\":82045,\"start\":82041},{\"end\":82055,\"start\":82049},{\"end\":82067,\"start\":82061},{\"end\":82507,\"start\":82503},{\"end\":82520,\"start\":82511},{\"end\":82531,\"start\":82524},{\"end\":82541,\"start\":82535},{\"end\":82552,\"start\":82545},{\"end\":83048,\"start\":83045},{\"end\":83055,\"start\":83052},{\"end\":83476,\"start\":83472},{\"end\":83483,\"start\":83480},{\"end\":83490,\"start\":83487},{\"end\":83497,\"start\":83494},{\"end\":83981,\"start\":83977},{\"end\":83990,\"start\":83985},{\"end\":84001,\"start\":83994},{\"end\":84009,\"start\":84005},{\"end\":84016,\"start\":84013},{\"end\":84025,\"start\":84020},{\"end\":84032,\"start\":84029},{\"end\":84638,\"start\":84635},{\"end\":84645,\"start\":84642},{\"end\":84652,\"start\":84649},{\"end\":84658,\"start\":84656},{\"end\":85109,\"start\":85096},{\"end\":85116,\"start\":85113},{\"end\":85128,\"start\":85120},{\"end\":85136,\"start\":85134},{\"end\":85148,\"start\":85142},{\"end\":85662,\"start\":85657},{\"end\":85672,\"start\":85666},{\"end\":85680,\"start\":85676},{\"end\":85694,\"start\":85686},{\"end\":85700,\"start\":85698},{\"end\":85986,\"start\":85976},{\"end\":86001,\"start\":85990},{\"end\":86220,\"start\":86217},{\"end\":86227,\"start\":86224},{\"end\":86235,\"start\":86231},{\"end\":86246,\"start\":86239},{\"end\":86253,\"start\":86250},{\"end\":86512,\"start\":86507},{\"end\":86520,\"start\":86516},{\"end\":86529,\"start\":86524},{\"end\":86761,\"start\":86759},{\"end\":86771,\"start\":86765},{\"end\":86787,\"start\":86775},{\"end\":86798,\"start\":86793},{\"end\":87162,\"start\":87158},{\"end\":87169,\"start\":87166},{\"end\":87175,\"start\":87173},{\"end\":57925,\"start\":57918},{\"end\":57935,\"start\":57929},{\"end\":58403,\"start\":58398},{\"end\":58413,\"start\":58407},{\"end\":58425,\"start\":58417},{\"end\":58926,\"start\":58922},{\"end\":58937,\"start\":58930},{\"end\":58944,\"start\":58941},{\"end\":58951,\"start\":58948},{\"end\":58957,\"start\":58955},{\"end\":58965,\"start\":58961},{\"end\":58977,\"start\":58971},{\"end\":59469,\"start\":59466},{\"end\":59488,\"start\":59483},{\"end\":59740,\"start\":59735},{\"end\":59753,\"start\":59744},{\"end\":59765,\"start\":59757},{\"end\":59778,\"start\":59769},{\"end\":59790,\"start\":59782},{\"end\":59802,\"start\":59796},{\"end\":60146,\"start\":60142},{\"end\":60153,\"start\":60150},{\"end\":60165,\"start\":60159},{\"end\":60176,\"start\":60169},{\"end\":60182,\"start\":60180},{\"end\":60191,\"start\":60186},{\"end\":60206,\"start\":60197},{\"end\":60772,\"start\":60770},{\"end\":60778,\"start\":60776},{\"end\":60790,\"start\":60782},{\"end\":60801,\"start\":60794},{\"end\":60814,\"start\":60805},{\"end\":61095,\"start\":61090},{\"end\":61105,\"start\":61101},{\"end\":61111,\"start\":61109},{\"end\":61121,\"start\":61115},{\"end\":61496,\"start\":61492},{\"end\":61506,\"start\":61500},{\"end\":61512,\"start\":61510},{\"end\":61874,\"start\":61870},{\"end\":61883,\"start\":61878},{\"end\":61892,\"start\":61887},{\"end\":61901,\"start\":61896},{\"end\":62379,\"start\":62374},{\"end\":62388,\"start\":62385},{\"end\":62397,\"start\":62392},{\"end\":62403,\"start\":62401},{\"end\":62415,\"start\":62407},{\"end\":62899,\"start\":62896},{\"end\":62906,\"start\":62903},{\"end\":62914,\"start\":62910},{\"end\":62923,\"start\":62918},{\"end\":62940,\"start\":62927},{\"end\":63412,\"start\":63408},{\"end\":63419,\"start\":63416},{\"end\":63425,\"start\":63423},{\"end\":63431,\"start\":63429},{\"end\":63439,\"start\":63435},{\"end\":63449,\"start\":63443},{\"end\":63762,\"start\":63759},{\"end\":63770,\"start\":63766},{\"end\":63777,\"start\":63774},{\"end\":63784,\"start\":63781},{\"end\":64054,\"start\":64050},{\"end\":64064,\"start\":64060},{\"end\":64072,\"start\":64068},{\"end\":64079,\"start\":64076},{\"end\":64086,\"start\":64083},{\"end\":64348,\"start\":64345},{\"end\":64358,\"start\":64352},{\"end\":64371,\"start\":64362},{\"end\":64387,\"start\":64375},{\"end\":64398,\"start\":64393},{\"end\":64818,\"start\":64816},{\"end\":64825,\"start\":64822},{\"end\":64834,\"start\":64829},{\"end\":64845,\"start\":64840},{\"end\":65360,\"start\":65347},{\"end\":65368,\"start\":65366},{\"end\":65380,\"start\":65372},{\"end\":65392,\"start\":65386},{\"end\":65838,\"start\":65834},{\"end\":65850,\"start\":65844},{\"end\":65859,\"start\":65854},{\"end\":65871,\"start\":65865},{\"end\":66326,\"start\":66323},{\"end\":66333,\"start\":66330},{\"end\":66345,\"start\":66339},{\"end\":66351,\"start\":66349},{\"end\":66359,\"start\":66355},{\"end\":66367,\"start\":66363},{\"end\":66867,\"start\":66863},{\"end\":66874,\"start\":66871},{\"end\":66882,\"start\":66878},{\"end\":66890,\"start\":66886},{\"end\":66898,\"start\":66894},{\"end\":66906,\"start\":66902},{\"end\":66914,\"start\":66910},{\"end\":66921,\"start\":66918},{\"end\":66928,\"start\":66925},{\"end\":66937,\"start\":66932},{\"end\":66945,\"start\":66941},{\"end\":67387,\"start\":67380},{\"end\":67398,\"start\":67391},{\"end\":67408,\"start\":67402},{\"end\":67421,\"start\":67412},{\"end\":67430,\"start\":67425},{\"end\":67441,\"start\":67436},{\"end\":67451,\"start\":67445},{\"end\":67465,\"start\":67455},{\"end\":68100,\"start\":68094},{\"end\":68109,\"start\":68104},{\"end\":68116,\"start\":68113},{\"end\":68129,\"start\":68120},{\"end\":68877,\"start\":68871},{\"end\":68888,\"start\":68881},{\"end\":68899,\"start\":68892},{\"end\":68906,\"start\":68903},{\"end\":68916,\"start\":68910},{\"end\":68926,\"start\":68920},{\"end\":68934,\"start\":68930},{\"end\":68940,\"start\":68938},{\"end\":68949,\"start\":68946},{\"end\":69275,\"start\":69268},{\"end\":69281,\"start\":69279},{\"end\":69290,\"start\":69285},{\"end\":69298,\"start\":69294},{\"end\":69308,\"start\":69302},{\"end\":69321,\"start\":69312},{\"end\":69583,\"start\":69580},{\"end\":69589,\"start\":69587},{\"end\":69597,\"start\":69593},{\"end\":69604,\"start\":69601},{\"end\":70076,\"start\":70064},{\"end\":70086,\"start\":70082},{\"end\":70092,\"start\":70090},{\"end\":70106,\"start\":70096},{\"end\":70699,\"start\":70694},{\"end\":70714,\"start\":70703},{\"end\":70721,\"start\":70718},{\"end\":70730,\"start\":70725},{\"end\":71401,\"start\":71397},{\"end\":71409,\"start\":71405},{\"end\":71419,\"start\":71415},{\"end\":71430,\"start\":71427},{\"end\":72151,\"start\":72143},{\"end\":72161,\"start\":72155},{\"end\":72170,\"start\":72165},{\"end\":72617,\"start\":72606},{\"end\":72626,\"start\":72621},{\"end\":72636,\"start\":72630},{\"end\":72646,\"start\":72640},{\"end\":72655,\"start\":72650},{\"end\":73076,\"start\":73074},{\"end\":73087,\"start\":73082},{\"end\":73099,\"start\":73093},{\"end\":73324,\"start\":73320},{\"end\":73331,\"start\":73328},{\"end\":73338,\"start\":73335},{\"end\":73344,\"start\":73342},{\"end\":73351,\"start\":73348},{\"end\":73360,\"start\":73355},{\"end\":73367,\"start\":73364},{\"end\":73857,\"start\":73853},{\"end\":73868,\"start\":73861},{\"end\":74306,\"start\":74304},{\"end\":74313,\"start\":74310},{\"end\":74319,\"start\":74317},{\"end\":74325,\"start\":74323},{\"end\":74333,\"start\":74329},{\"end\":74339,\"start\":74337},{\"end\":75093,\"start\":75087},{\"end\":75099,\"start\":75097},{\"end\":75471,\"start\":75463},{\"end\":75481,\"start\":75475},{\"end\":75489,\"start\":75485},{\"end\":75499,\"start\":75496},{\"end\":75992,\"start\":75984},{\"end\":76001,\"start\":75996},{\"end\":76571,\"start\":76568},{\"end\":76812,\"start\":76809},{\"end\":76820,\"start\":76816},{\"end\":76827,\"start\":76824},{\"end\":76833,\"start\":76831},{\"end\":76840,\"start\":76837},{\"end\":76849,\"start\":76844},{\"end\":76858,\"start\":76853},{\"end\":76867,\"start\":76862},{\"end\":77382,\"start\":77377},{\"end\":77794,\"start\":77791},{\"end\":77801,\"start\":77798},{\"end\":77810,\"start\":77805},{\"end\":77816,\"start\":77814},{\"end\":77825,\"start\":77820},{\"end\":77833,\"start\":77829},{\"end\":77841,\"start\":77837},{\"end\":77850,\"start\":77845},{\"end\":77865,\"start\":77854},{\"end\":77877,\"start\":77869},{\"end\":78184,\"start\":78179},{\"end\":78194,\"start\":78188},{\"end\":78210,\"start\":78198},{\"end\":78456,\"start\":78454},{\"end\":78464,\"start\":78460},{\"end\":78474,\"start\":78468},{\"end\":78486,\"start\":78480},{\"end\":78973,\"start\":78968},{\"end\":78983,\"start\":78979},{\"end\":78994,\"start\":78989},{\"end\":79002,\"start\":78998},{\"end\":79436,\"start\":79432},{\"end\":79451,\"start\":79440},{\"end\":79459,\"start\":79455},{\"end\":79468,\"start\":79463},{\"end\":79742,\"start\":79738},{\"end\":79749,\"start\":79746},{\"end\":79756,\"start\":79753},{\"end\":79762,\"start\":79760},{\"end\":79769,\"start\":79766},{\"end\":79776,\"start\":79773},{\"end\":79783,\"start\":79780},{\"end\":79790,\"start\":79787},{\"end\":80326,\"start\":80319},{\"end\":80338,\"start\":80330},{\"end\":80350,\"start\":80342},{\"end\":80359,\"start\":80354},{\"end\":81086,\"start\":81075},{\"end\":81096,\"start\":81090},{\"end\":81532,\"start\":81522},{\"end\":81544,\"start\":81538},{\"end\":81558,\"start\":81548},{\"end\":81571,\"start\":81562},{\"end\":81588,\"start\":81575},{\"end\":82037,\"start\":82030},{\"end\":82045,\"start\":82041},{\"end\":82055,\"start\":82049},{\"end\":82067,\"start\":82061},{\"end\":82507,\"start\":82503},{\"end\":82520,\"start\":82511},{\"end\":82531,\"start\":82524},{\"end\":82541,\"start\":82535},{\"end\":82552,\"start\":82545},{\"end\":83048,\"start\":83045},{\"end\":83055,\"start\":83052},{\"end\":83476,\"start\":83472},{\"end\":83483,\"start\":83480},{\"end\":83490,\"start\":83487},{\"end\":83497,\"start\":83494},{\"end\":83981,\"start\":83977},{\"end\":83990,\"start\":83985},{\"end\":84001,\"start\":83994},{\"end\":84009,\"start\":84005},{\"end\":84016,\"start\":84013},{\"end\":84025,\"start\":84020},{\"end\":84032,\"start\":84029},{\"end\":84638,\"start\":84635},{\"end\":84645,\"start\":84642},{\"end\":84652,\"start\":84649},{\"end\":84658,\"start\":84656},{\"end\":85109,\"start\":85096},{\"end\":85116,\"start\":85113},{\"end\":85128,\"start\":85120},{\"end\":85136,\"start\":85134},{\"end\":85148,\"start\":85142},{\"end\":85662,\"start\":85657},{\"end\":85672,\"start\":85666},{\"end\":85680,\"start\":85676},{\"end\":85694,\"start\":85686},{\"end\":85700,\"start\":85698},{\"end\":85986,\"start\":85976},{\"end\":86001,\"start\":85990},{\"end\":86220,\"start\":86217},{\"end\":86227,\"start\":86224},{\"end\":86235,\"start\":86231},{\"end\":86246,\"start\":86239},{\"end\":86253,\"start\":86250},{\"end\":86512,\"start\":86507},{\"end\":86520,\"start\":86516},{\"end\":86529,\"start\":86524},{\"end\":86761,\"start\":86759},{\"end\":86771,\"start\":86765},{\"end\":86787,\"start\":86775},{\"end\":86798,\"start\":86793},{\"end\":87162,\"start\":87158},{\"end\":87169,\"start\":87166},{\"end\":87175,\"start\":87173}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":14968726},\"end\":58308,\"start\":57873},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":9237290},\"end\":58838,\"start\":58310},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":246081539},\"end\":59415,\"start\":58840},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":14525572},\"end\":59664,\"start\":59417},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":13978413},\"end\":60035,\"start\":59666},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":225403441},\"end\":60677,\"start\":60037},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":204954907},\"end\":61033,\"start\":60679},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":212675399},\"end\":61450,\"start\":61035},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":2604620},\"end\":61813,\"start\":61452},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":235770390},\"end\":62287,\"start\":61815},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":195298550},\"end\":62805,\"start\":62289},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":231846746},\"end\":63343,\"start\":62807},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":236898603},\"end\":63678,\"start\":63345},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":248902888},\"end\":63983,\"start\":63680},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":235253727},\"end\":64312,\"start\":63985},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":53109277},\"end\":64720,\"start\":64314},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":237194654},\"end\":65268,\"start\":64722},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":222132891},\"end\":65740,\"start\":65270},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":14187723},\"end\":66244,\"start\":65742},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":52070089},\"end\":66790,\"start\":66246},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":211171605},\"end\":67349,\"start\":66792},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":13756489},\"end\":68008,\"start\":67351},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":52967399},\"end\":68784,\"start\":68010},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":204838007},\"end\":69211,\"start\":68786},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":160025533},\"end\":69503,\"start\":69213},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":229703606},\"end\":70004,\"start\":69505},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":218673683},\"end\":70626,\"start\":70006},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":232185260},\"end\":71287,\"start\":70628},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":237386541},\"end\":71862,\"start\":71289},{\"attributes\":{\"id\":\"b29\"},\"end\":71973,\"start\":71864},{\"attributes\":{\"id\":\"b30\"},\"end\":72078,\"start\":71975},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1114678},\"end\":72531,\"start\":72080},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":211161525},\"end\":73047,\"start\":72533},{\"attributes\":{\"doi\":\"abs/1607.06450\",\"id\":\"b33\",\"matched_paper_id\":8236317},\"end\":73217,\"start\":73049},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":248363500},\"end\":73781,\"start\":73219},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":3144218},\"end\":74249,\"start\":73783},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":197679892},\"end\":74703,\"start\":74251},{\"attributes\":{\"id\":\"b37\"},\"end\":74799,\"start\":74705},{\"attributes\":{\"id\":\"b38\"},\"end\":74878,\"start\":74801},{\"attributes\":{\"id\":\"b39\"},\"end\":75037,\"start\":74880},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":6628106},\"end\":75395,\"start\":75039},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":11080756},\"end\":75886,\"start\":75397},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":7164502},\"end\":76504,\"start\":75888},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":964287},\"end\":76727,\"start\":76506},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":235795341},\"end\":77306,\"start\":76729},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":15119437},\"end\":77730,\"start\":77308},{\"attributes\":{\"doi\":\"abs/1907.11692\",\"id\":\"b46\",\"matched_paper_id\":198953378},\"end\":78147,\"start\":77732},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":85440813},\"end\":78348,\"start\":78149},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":6845282},\"end\":78885,\"start\":78350},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":6300790},\"end\":79372,\"start\":78887},{\"attributes\":{\"doi\":\"1-40:29\",\"id\":\"b50\",\"matched_paper_id\":4710028},\"end\":79678,\"start\":79374},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":221783519},\"end\":80201,\"start\":79680},{\"attributes\":{\"doi\":\"ser. ESEC/FSE 2019\",\"id\":\"b52\",\"matched_paper_id\":167217262},\"end\":81002,\"start\":80203},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":173188438},\"end\":81451,\"start\":81004},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":6844431},\"end\":81821,\"start\":81453},{\"attributes\":{\"id\":\"b55\"},\"end\":81939,\"start\":81823},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":8328637},\"end\":82461,\"start\":81941},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":4743485},\"end\":82978,\"start\":82463},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":14999237},\"end\":83400,\"start\":82980},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":210693246},\"end\":83893,\"start\":83402},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":237205762},\"end\":84589,\"start\":83895},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":221783357},\"end\":85024,\"start\":84591},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":216553060},\"end\":85560,\"start\":85026},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":207852453},\"end\":85948,\"start\":85562},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":1915014},\"end\":86131,\"start\":85950},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":208857822},\"end\":86455,\"start\":86133},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":222302640},\"end\":86717,\"start\":86457},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":8393918},\"end\":87114,\"start\":86719},{\"attributes\":{\"id\":\"b68\",\"matched_paper_id\":239422219},\"end\":87416,\"start\":87116},{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":14968726},\"end\":58308,\"start\":57873},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":9237290},\"end\":58838,\"start\":58310},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":246081539},\"end\":59415,\"start\":58840},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":14525572},\"end\":59664,\"start\":59417},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":13978413},\"end\":60035,\"start\":59666},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":225403441},\"end\":60677,\"start\":60037},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":204954907},\"end\":61033,\"start\":60679},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":212675399},\"end\":61450,\"start\":61035},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":2604620},\"end\":61813,\"start\":61452},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":235770390},\"end\":62287,\"start\":61815},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":195298550},\"end\":62805,\"start\":62289},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":231846746},\"end\":63343,\"start\":62807},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":236898603},\"end\":63678,\"start\":63345},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":248902888},\"end\":63983,\"start\":63680},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":235253727},\"end\":64312,\"start\":63985},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":53109277},\"end\":64720,\"start\":64314},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":237194654},\"end\":65268,\"start\":64722},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":222132891},\"end\":65740,\"start\":65270},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":14187723},\"end\":66244,\"start\":65742},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":52070089},\"end\":66790,\"start\":66246},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":211171605},\"end\":67349,\"start\":66792},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":13756489},\"end\":68008,\"start\":67351},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":52967399},\"end\":68784,\"start\":68010},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":204838007},\"end\":69211,\"start\":68786},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":160025533},\"end\":69503,\"start\":69213},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":229703606},\"end\":70004,\"start\":69505},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":218673683},\"end\":70626,\"start\":70006},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":232185260},\"end\":71287,\"start\":70628},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":237386541},\"end\":71862,\"start\":71289},{\"attributes\":{\"id\":\"b29\"},\"end\":71973,\"start\":71864},{\"attributes\":{\"id\":\"b30\"},\"end\":72078,\"start\":71975},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1114678},\"end\":72531,\"start\":72080},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":211161525},\"end\":73047,\"start\":72533},{\"attributes\":{\"doi\":\"abs/1607.06450\",\"id\":\"b33\",\"matched_paper_id\":8236317},\"end\":73217,\"start\":73049},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":248363500},\"end\":73781,\"start\":73219},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":3144218},\"end\":74249,\"start\":73783},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":197679892},\"end\":74703,\"start\":74251},{\"attributes\":{\"id\":\"b37\"},\"end\":74799,\"start\":74705},{\"attributes\":{\"id\":\"b38\"},\"end\":74878,\"start\":74801},{\"attributes\":{\"id\":\"b39\"},\"end\":75037,\"start\":74880},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":6628106},\"end\":75395,\"start\":75039},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":11080756},\"end\":75886,\"start\":75397},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":7164502},\"end\":76504,\"start\":75888},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":964287},\"end\":76727,\"start\":76506},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":235795341},\"end\":77306,\"start\":76729},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":15119437},\"end\":77730,\"start\":77308},{\"attributes\":{\"doi\":\"abs/1907.11692\",\"id\":\"b46\",\"matched_paper_id\":198953378},\"end\":78147,\"start\":77732},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":85440813},\"end\":78348,\"start\":78149},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":6845282},\"end\":78885,\"start\":78350},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":6300790},\"end\":79372,\"start\":78887},{\"attributes\":{\"doi\":\"1-40:29\",\"id\":\"b50\",\"matched_paper_id\":4710028},\"end\":79678,\"start\":79374},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":221783519},\"end\":80201,\"start\":79680},{\"attributes\":{\"doi\":\"ser. ESEC/FSE 2019\",\"id\":\"b52\",\"matched_paper_id\":167217262},\"end\":81002,\"start\":80203},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":173188438},\"end\":81451,\"start\":81004},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":6844431},\"end\":81821,\"start\":81453},{\"attributes\":{\"id\":\"b55\"},\"end\":81939,\"start\":81823},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":8328637},\"end\":82461,\"start\":81941},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":4743485},\"end\":82978,\"start\":82463},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":14999237},\"end\":83400,\"start\":82980},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":210693246},\"end\":83893,\"start\":83402},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":237205762},\"end\":84589,\"start\":83895},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":221783357},\"end\":85024,\"start\":84591},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":216553060},\"end\":85560,\"start\":85026},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":207852453},\"end\":85948,\"start\":85562},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":1915014},\"end\":86131,\"start\":85950},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":208857822},\"end\":86455,\"start\":86133},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":222302640},\"end\":86717,\"start\":86457},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":8393918},\"end\":87114,\"start\":86719},{\"attributes\":{\"id\":\"b68\",\"matched_paper_id\":239422219},\"end\":87416,\"start\":87116}]", "bib_title": "[{\"end\":57912,\"start\":57873},{\"end\":58394,\"start\":58310},{\"end\":58918,\"start\":58840},{\"end\":59462,\"start\":59417},{\"end\":59731,\"start\":59666},{\"end\":60138,\"start\":60037},{\"end\":60766,\"start\":60679},{\"end\":61086,\"start\":61035},{\"end\":61488,\"start\":61452},{\"end\":61866,\"start\":61815},{\"end\":62370,\"start\":62289},{\"end\":62892,\"start\":62807},{\"end\":63404,\"start\":63345},{\"end\":63755,\"start\":63680},{\"end\":64046,\"start\":63985},{\"end\":64341,\"start\":64314},{\"end\":64808,\"start\":64722},{\"end\":65343,\"start\":65270},{\"end\":65830,\"start\":65742},{\"end\":66319,\"start\":66246},{\"end\":66859,\"start\":66792},{\"end\":67376,\"start\":67351},{\"end\":68090,\"start\":68010},{\"end\":68867,\"start\":68786},{\"end\":69264,\"start\":69213},{\"end\":69576,\"start\":69505},{\"end\":70060,\"start\":70006},{\"end\":70688,\"start\":70628},{\"end\":71393,\"start\":71289},{\"end\":72139,\"start\":72080},{\"end\":72599,\"start\":72533},{\"end\":73068,\"start\":73049},{\"end\":73316,\"start\":73219},{\"end\":73847,\"start\":73783},{\"end\":74300,\"start\":74251},{\"end\":74898,\"start\":74880},{\"end\":75081,\"start\":75039},{\"end\":75459,\"start\":75397},{\"end\":75980,\"start\":75888},{\"end\":76560,\"start\":76506},{\"end\":76805,\"start\":76729},{\"end\":77373,\"start\":77308},{\"end\":77787,\"start\":77732},{\"end\":78173,\"start\":78149},{\"end\":78450,\"start\":78350},{\"end\":78962,\"start\":78887},{\"end\":79428,\"start\":79374},{\"end\":79734,\"start\":79680},{\"end\":80315,\"start\":80203},{\"end\":81071,\"start\":81004},{\"end\":81518,\"start\":81453},{\"end\":82026,\"start\":81941},{\"end\":82499,\"start\":82463},{\"end\":83041,\"start\":82980},{\"end\":83468,\"start\":83402},{\"end\":83973,\"start\":83895},{\"end\":84631,\"start\":84591},{\"end\":85092,\"start\":85026},{\"end\":85653,\"start\":85562},{\"end\":85972,\"start\":85950},{\"end\":86213,\"start\":86133},{\"end\":86503,\"start\":86457},{\"end\":86755,\"start\":86719},{\"end\":87154,\"start\":87116},{\"end\":57912,\"start\":57873},{\"end\":58394,\"start\":58310},{\"end\":58918,\"start\":58840},{\"end\":59462,\"start\":59417},{\"end\":59731,\"start\":59666},{\"end\":60138,\"start\":60037},{\"end\":60766,\"start\":60679},{\"end\":61086,\"start\":61035},{\"end\":61488,\"start\":61452},{\"end\":61866,\"start\":61815},{\"end\":62370,\"start\":62289},{\"end\":62892,\"start\":62807},{\"end\":63404,\"start\":63345},{\"end\":63755,\"start\":63680},{\"end\":64046,\"start\":63985},{\"end\":64341,\"start\":64314},{\"end\":64808,\"start\":64722},{\"end\":65343,\"start\":65270},{\"end\":65830,\"start\":65742},{\"end\":66319,\"start\":66246},{\"end\":66859,\"start\":66792},{\"end\":67376,\"start\":67351},{\"end\":68090,\"start\":68010},{\"end\":68867,\"start\":68786},{\"end\":69264,\"start\":69213},{\"end\":69576,\"start\":69505},{\"end\":70060,\"start\":70006},{\"end\":70688,\"start\":70628},{\"end\":71393,\"start\":71289},{\"end\":72139,\"start\":72080},{\"end\":72599,\"start\":72533},{\"end\":73068,\"start\":73049},{\"end\":73316,\"start\":73219},{\"end\":73847,\"start\":73783},{\"end\":74300,\"start\":74251},{\"end\":74898,\"start\":74880},{\"end\":75081,\"start\":75039},{\"end\":75459,\"start\":75397},{\"end\":75980,\"start\":75888},{\"end\":76560,\"start\":76506},{\"end\":76805,\"start\":76729},{\"end\":77373,\"start\":77308},{\"end\":77787,\"start\":77732},{\"end\":78173,\"start\":78149},{\"end\":78450,\"start\":78350},{\"end\":78962,\"start\":78887},{\"end\":79428,\"start\":79374},{\"end\":79734,\"start\":79680},{\"end\":80315,\"start\":80203},{\"end\":81071,\"start\":81004},{\"end\":81518,\"start\":81453},{\"end\":82026,\"start\":81941},{\"end\":82499,\"start\":82463},{\"end\":83041,\"start\":82980},{\"end\":83468,\"start\":83402},{\"end\":83973,\"start\":83895},{\"end\":84631,\"start\":84591},{\"end\":85092,\"start\":85026},{\"end\":85653,\"start\":85562},{\"end\":85972,\"start\":85950},{\"end\":86213,\"start\":86133},{\"end\":86503,\"start\":86457},{\"end\":86755,\"start\":86719},{\"end\":87154,\"start\":87116}]", "bib_author": "[{\"end\":57927,\"start\":57914},{\"end\":57937,\"start\":57927},{\"end\":58405,\"start\":58396},{\"end\":58415,\"start\":58405},{\"end\":58427,\"start\":58415},{\"end\":58928,\"start\":58920},{\"end\":58939,\"start\":58928},{\"end\":58946,\"start\":58939},{\"end\":58953,\"start\":58946},{\"end\":58959,\"start\":58953},{\"end\":58967,\"start\":58959},{\"end\":58979,\"start\":58967},{\"end\":59471,\"start\":59464},{\"end\":59481,\"start\":59471},{\"end\":59490,\"start\":59481},{\"end\":59742,\"start\":59733},{\"end\":59755,\"start\":59742},{\"end\":59767,\"start\":59755},{\"end\":59780,\"start\":59767},{\"end\":59792,\"start\":59780},{\"end\":59804,\"start\":59792},{\"end\":60148,\"start\":60140},{\"end\":60155,\"start\":60148},{\"end\":60167,\"start\":60155},{\"end\":60178,\"start\":60167},{\"end\":60184,\"start\":60178},{\"end\":60193,\"start\":60184},{\"end\":60208,\"start\":60193},{\"end\":60774,\"start\":60768},{\"end\":60780,\"start\":60774},{\"end\":60792,\"start\":60780},{\"end\":60803,\"start\":60792},{\"end\":60816,\"start\":60803},{\"end\":61097,\"start\":61088},{\"end\":61107,\"start\":61097},{\"end\":61113,\"start\":61107},{\"end\":61123,\"start\":61113},{\"end\":61498,\"start\":61490},{\"end\":61508,\"start\":61498},{\"end\":61514,\"start\":61508},{\"end\":61876,\"start\":61868},{\"end\":61885,\"start\":61876},{\"end\":61894,\"start\":61885},{\"end\":61903,\"start\":61894},{\"end\":62381,\"start\":62372},{\"end\":62390,\"start\":62381},{\"end\":62399,\"start\":62390},{\"end\":62405,\"start\":62399},{\"end\":62417,\"start\":62405},{\"end\":62901,\"start\":62894},{\"end\":62908,\"start\":62901},{\"end\":62916,\"start\":62908},{\"end\":62925,\"start\":62916},{\"end\":62942,\"start\":62925},{\"end\":63414,\"start\":63406},{\"end\":63421,\"start\":63414},{\"end\":63427,\"start\":63421},{\"end\":63433,\"start\":63427},{\"end\":63441,\"start\":63433},{\"end\":63451,\"start\":63441},{\"end\":63764,\"start\":63757},{\"end\":63772,\"start\":63764},{\"end\":63779,\"start\":63772},{\"end\":63786,\"start\":63779},{\"end\":64056,\"start\":64048},{\"end\":64066,\"start\":64056},{\"end\":64074,\"start\":64066},{\"end\":64081,\"start\":64074},{\"end\":64088,\"start\":64081},{\"end\":64350,\"start\":64343},{\"end\":64360,\"start\":64350},{\"end\":64373,\"start\":64360},{\"end\":64389,\"start\":64373},{\"end\":64400,\"start\":64389},{\"end\":64820,\"start\":64810},{\"end\":64827,\"start\":64820},{\"end\":64836,\"start\":64827},{\"end\":64847,\"start\":64836},{\"end\":65362,\"start\":65345},{\"end\":65370,\"start\":65362},{\"end\":65382,\"start\":65370},{\"end\":65394,\"start\":65382},{\"end\":65840,\"start\":65832},{\"end\":65852,\"start\":65840},{\"end\":65861,\"start\":65852},{\"end\":65873,\"start\":65861},{\"end\":66328,\"start\":66321},{\"end\":66335,\"start\":66328},{\"end\":66347,\"start\":66335},{\"end\":66353,\"start\":66347},{\"end\":66361,\"start\":66353},{\"end\":66369,\"start\":66361},{\"end\":66869,\"start\":66861},{\"end\":66876,\"start\":66869},{\"end\":66884,\"start\":66876},{\"end\":66892,\"start\":66884},{\"end\":66900,\"start\":66892},{\"end\":66908,\"start\":66900},{\"end\":66916,\"start\":66908},{\"end\":66923,\"start\":66916},{\"end\":66930,\"start\":66923},{\"end\":66939,\"start\":66930},{\"end\":66947,\"start\":66939},{\"end\":67389,\"start\":67378},{\"end\":67400,\"start\":67389},{\"end\":67410,\"start\":67400},{\"end\":67423,\"start\":67410},{\"end\":67432,\"start\":67423},{\"end\":67443,\"start\":67432},{\"end\":67453,\"start\":67443},{\"end\":67467,\"start\":67453},{\"end\":68102,\"start\":68092},{\"end\":68111,\"start\":68102},{\"end\":68118,\"start\":68111},{\"end\":68131,\"start\":68118},{\"end\":68879,\"start\":68869},{\"end\":68890,\"start\":68879},{\"end\":68901,\"start\":68890},{\"end\":68908,\"start\":68901},{\"end\":68918,\"start\":68908},{\"end\":68928,\"start\":68918},{\"end\":68936,\"start\":68928},{\"end\":68942,\"start\":68936},{\"end\":68951,\"start\":68942},{\"end\":69277,\"start\":69266},{\"end\":69283,\"start\":69277},{\"end\":69292,\"start\":69283},{\"end\":69300,\"start\":69292},{\"end\":69310,\"start\":69300},{\"end\":69323,\"start\":69310},{\"end\":69585,\"start\":69578},{\"end\":69591,\"start\":69585},{\"end\":69599,\"start\":69591},{\"end\":69606,\"start\":69599},{\"end\":70078,\"start\":70062},{\"end\":70088,\"start\":70078},{\"end\":70094,\"start\":70088},{\"end\":70108,\"start\":70094},{\"end\":70701,\"start\":70690},{\"end\":70716,\"start\":70701},{\"end\":70723,\"start\":70716},{\"end\":70732,\"start\":70723},{\"end\":71403,\"start\":71395},{\"end\":71411,\"start\":71403},{\"end\":71421,\"start\":71411},{\"end\":71432,\"start\":71421},{\"end\":72153,\"start\":72141},{\"end\":72163,\"start\":72153},{\"end\":72172,\"start\":72163},{\"end\":72619,\"start\":72601},{\"end\":72628,\"start\":72619},{\"end\":72638,\"start\":72628},{\"end\":72648,\"start\":72638},{\"end\":72657,\"start\":72648},{\"end\":73078,\"start\":73070},{\"end\":73089,\"start\":73078},{\"end\":73101,\"start\":73089},{\"end\":73326,\"start\":73318},{\"end\":73333,\"start\":73326},{\"end\":73340,\"start\":73333},{\"end\":73346,\"start\":73340},{\"end\":73353,\"start\":73346},{\"end\":73362,\"start\":73353},{\"end\":73369,\"start\":73362},{\"end\":73859,\"start\":73849},{\"end\":73870,\"start\":73859},{\"end\":74308,\"start\":74302},{\"end\":74315,\"start\":74308},{\"end\":74321,\"start\":74315},{\"end\":74327,\"start\":74321},{\"end\":74335,\"start\":74327},{\"end\":74341,\"start\":74335},{\"end\":75095,\"start\":75083},{\"end\":75101,\"start\":75095},{\"end\":75473,\"start\":75461},{\"end\":75483,\"start\":75473},{\"end\":75491,\"start\":75483},{\"end\":75501,\"start\":75491},{\"end\":75994,\"start\":75982},{\"end\":76003,\"start\":75994},{\"end\":76573,\"start\":76562},{\"end\":76814,\"start\":76807},{\"end\":76822,\"start\":76814},{\"end\":76829,\"start\":76822},{\"end\":76835,\"start\":76829},{\"end\":76842,\"start\":76835},{\"end\":76851,\"start\":76842},{\"end\":76860,\"start\":76851},{\"end\":76869,\"start\":76860},{\"end\":77384,\"start\":77375},{\"end\":77796,\"start\":77789},{\"end\":77803,\"start\":77796},{\"end\":77812,\"start\":77803},{\"end\":77818,\"start\":77812},{\"end\":77827,\"start\":77818},{\"end\":77835,\"start\":77827},{\"end\":77843,\"start\":77835},{\"end\":77852,\"start\":77843},{\"end\":77867,\"start\":77852},{\"end\":77879,\"start\":77867},{\"end\":78186,\"start\":78175},{\"end\":78196,\"start\":78186},{\"end\":78212,\"start\":78196},{\"end\":78458,\"start\":78452},{\"end\":78466,\"start\":78458},{\"end\":78476,\"start\":78466},{\"end\":78488,\"start\":78476},{\"end\":78975,\"start\":78964},{\"end\":78985,\"start\":78975},{\"end\":78996,\"start\":78985},{\"end\":79004,\"start\":78996},{\"end\":79438,\"start\":79430},{\"end\":79453,\"start\":79438},{\"end\":79461,\"start\":79453},{\"end\":79470,\"start\":79461},{\"end\":79744,\"start\":79736},{\"end\":79751,\"start\":79744},{\"end\":79758,\"start\":79751},{\"end\":79764,\"start\":79758},{\"end\":79771,\"start\":79764},{\"end\":79778,\"start\":79771},{\"end\":79785,\"start\":79778},{\"end\":79792,\"start\":79785},{\"end\":80328,\"start\":80317},{\"end\":80340,\"start\":80328},{\"end\":80352,\"start\":80340},{\"end\":80361,\"start\":80352},{\"end\":81088,\"start\":81073},{\"end\":81098,\"start\":81088},{\"end\":81534,\"start\":81520},{\"end\":81546,\"start\":81534},{\"end\":81560,\"start\":81546},{\"end\":81573,\"start\":81560},{\"end\":81590,\"start\":81573},{\"end\":82039,\"start\":82028},{\"end\":82047,\"start\":82039},{\"end\":82057,\"start\":82047},{\"end\":82069,\"start\":82057},{\"end\":82509,\"start\":82501},{\"end\":82522,\"start\":82509},{\"end\":82533,\"start\":82522},{\"end\":82543,\"start\":82533},{\"end\":82554,\"start\":82543},{\"end\":83050,\"start\":83043},{\"end\":83057,\"start\":83050},{\"end\":83478,\"start\":83470},{\"end\":83485,\"start\":83478},{\"end\":83492,\"start\":83485},{\"end\":83499,\"start\":83492},{\"end\":83983,\"start\":83975},{\"end\":83992,\"start\":83983},{\"end\":84003,\"start\":83992},{\"end\":84011,\"start\":84003},{\"end\":84018,\"start\":84011},{\"end\":84027,\"start\":84018},{\"end\":84034,\"start\":84027},{\"end\":84640,\"start\":84633},{\"end\":84647,\"start\":84640},{\"end\":84654,\"start\":84647},{\"end\":84660,\"start\":84654},{\"end\":85111,\"start\":85094},{\"end\":85118,\"start\":85111},{\"end\":85130,\"start\":85118},{\"end\":85138,\"start\":85130},{\"end\":85150,\"start\":85138},{\"end\":85664,\"start\":85655},{\"end\":85674,\"start\":85664},{\"end\":85682,\"start\":85674},{\"end\":85696,\"start\":85682},{\"end\":85702,\"start\":85696},{\"end\":85988,\"start\":85974},{\"end\":86003,\"start\":85988},{\"end\":86222,\"start\":86215},{\"end\":86229,\"start\":86222},{\"end\":86237,\"start\":86229},{\"end\":86248,\"start\":86237},{\"end\":86255,\"start\":86248},{\"end\":86514,\"start\":86505},{\"end\":86522,\"start\":86514},{\"end\":86531,\"start\":86522},{\"end\":86763,\"start\":86757},{\"end\":86773,\"start\":86763},{\"end\":86789,\"start\":86773},{\"end\":86800,\"start\":86789},{\"end\":87164,\"start\":87156},{\"end\":87171,\"start\":87164},{\"end\":87177,\"start\":87171},{\"end\":57927,\"start\":57914},{\"end\":57937,\"start\":57927},{\"end\":58405,\"start\":58396},{\"end\":58415,\"start\":58405},{\"end\":58427,\"start\":58415},{\"end\":58928,\"start\":58920},{\"end\":58939,\"start\":58928},{\"end\":58946,\"start\":58939},{\"end\":58953,\"start\":58946},{\"end\":58959,\"start\":58953},{\"end\":58967,\"start\":58959},{\"end\":58979,\"start\":58967},{\"end\":59471,\"start\":59464},{\"end\":59481,\"start\":59471},{\"end\":59490,\"start\":59481},{\"end\":59742,\"start\":59733},{\"end\":59755,\"start\":59742},{\"end\":59767,\"start\":59755},{\"end\":59780,\"start\":59767},{\"end\":59792,\"start\":59780},{\"end\":59804,\"start\":59792},{\"end\":60148,\"start\":60140},{\"end\":60155,\"start\":60148},{\"end\":60167,\"start\":60155},{\"end\":60178,\"start\":60167},{\"end\":60184,\"start\":60178},{\"end\":60193,\"start\":60184},{\"end\":60208,\"start\":60193},{\"end\":60774,\"start\":60768},{\"end\":60780,\"start\":60774},{\"end\":60792,\"start\":60780},{\"end\":60803,\"start\":60792},{\"end\":60816,\"start\":60803},{\"end\":61097,\"start\":61088},{\"end\":61107,\"start\":61097},{\"end\":61113,\"start\":61107},{\"end\":61123,\"start\":61113},{\"end\":61498,\"start\":61490},{\"end\":61508,\"start\":61498},{\"end\":61514,\"start\":61508},{\"end\":61876,\"start\":61868},{\"end\":61885,\"start\":61876},{\"end\":61894,\"start\":61885},{\"end\":61903,\"start\":61894},{\"end\":62381,\"start\":62372},{\"end\":62390,\"start\":62381},{\"end\":62399,\"start\":62390},{\"end\":62405,\"start\":62399},{\"end\":62417,\"start\":62405},{\"end\":62901,\"start\":62894},{\"end\":62908,\"start\":62901},{\"end\":62916,\"start\":62908},{\"end\":62925,\"start\":62916},{\"end\":62942,\"start\":62925},{\"end\":63414,\"start\":63406},{\"end\":63421,\"start\":63414},{\"end\":63427,\"start\":63421},{\"end\":63433,\"start\":63427},{\"end\":63441,\"start\":63433},{\"end\":63451,\"start\":63441},{\"end\":63764,\"start\":63757},{\"end\":63772,\"start\":63764},{\"end\":63779,\"start\":63772},{\"end\":63786,\"start\":63779},{\"end\":64056,\"start\":64048},{\"end\":64066,\"start\":64056},{\"end\":64074,\"start\":64066},{\"end\":64081,\"start\":64074},{\"end\":64088,\"start\":64081},{\"end\":64350,\"start\":64343},{\"end\":64360,\"start\":64350},{\"end\":64373,\"start\":64360},{\"end\":64389,\"start\":64373},{\"end\":64400,\"start\":64389},{\"end\":64820,\"start\":64810},{\"end\":64827,\"start\":64820},{\"end\":64836,\"start\":64827},{\"end\":64847,\"start\":64836},{\"end\":65362,\"start\":65345},{\"end\":65370,\"start\":65362},{\"end\":65382,\"start\":65370},{\"end\":65394,\"start\":65382},{\"end\":65840,\"start\":65832},{\"end\":65852,\"start\":65840},{\"end\":65861,\"start\":65852},{\"end\":65873,\"start\":65861},{\"end\":66328,\"start\":66321},{\"end\":66335,\"start\":66328},{\"end\":66347,\"start\":66335},{\"end\":66353,\"start\":66347},{\"end\":66361,\"start\":66353},{\"end\":66369,\"start\":66361},{\"end\":66869,\"start\":66861},{\"end\":66876,\"start\":66869},{\"end\":66884,\"start\":66876},{\"end\":66892,\"start\":66884},{\"end\":66900,\"start\":66892},{\"end\":66908,\"start\":66900},{\"end\":66916,\"start\":66908},{\"end\":66923,\"start\":66916},{\"end\":66930,\"start\":66923},{\"end\":66939,\"start\":66930},{\"end\":66947,\"start\":66939},{\"end\":67389,\"start\":67378},{\"end\":67400,\"start\":67389},{\"end\":67410,\"start\":67400},{\"end\":67423,\"start\":67410},{\"end\":67432,\"start\":67423},{\"end\":67443,\"start\":67432},{\"end\":67453,\"start\":67443},{\"end\":67467,\"start\":67453},{\"end\":68102,\"start\":68092},{\"end\":68111,\"start\":68102},{\"end\":68118,\"start\":68111},{\"end\":68131,\"start\":68118},{\"end\":68879,\"start\":68869},{\"end\":68890,\"start\":68879},{\"end\":68901,\"start\":68890},{\"end\":68908,\"start\":68901},{\"end\":68918,\"start\":68908},{\"end\":68928,\"start\":68918},{\"end\":68936,\"start\":68928},{\"end\":68942,\"start\":68936},{\"end\":68951,\"start\":68942},{\"end\":69277,\"start\":69266},{\"end\":69283,\"start\":69277},{\"end\":69292,\"start\":69283},{\"end\":69300,\"start\":69292},{\"end\":69310,\"start\":69300},{\"end\":69323,\"start\":69310},{\"end\":69585,\"start\":69578},{\"end\":69591,\"start\":69585},{\"end\":69599,\"start\":69591},{\"end\":69606,\"start\":69599},{\"end\":70078,\"start\":70062},{\"end\":70088,\"start\":70078},{\"end\":70094,\"start\":70088},{\"end\":70108,\"start\":70094},{\"end\":70701,\"start\":70690},{\"end\":70716,\"start\":70701},{\"end\":70723,\"start\":70716},{\"end\":70732,\"start\":70723},{\"end\":71403,\"start\":71395},{\"end\":71411,\"start\":71403},{\"end\":71421,\"start\":71411},{\"end\":71432,\"start\":71421},{\"end\":72153,\"start\":72141},{\"end\":72163,\"start\":72153},{\"end\":72172,\"start\":72163},{\"end\":72619,\"start\":72601},{\"end\":72628,\"start\":72619},{\"end\":72638,\"start\":72628},{\"end\":72648,\"start\":72638},{\"end\":72657,\"start\":72648},{\"end\":73078,\"start\":73070},{\"end\":73089,\"start\":73078},{\"end\":73101,\"start\":73089},{\"end\":73326,\"start\":73318},{\"end\":73333,\"start\":73326},{\"end\":73340,\"start\":73333},{\"end\":73346,\"start\":73340},{\"end\":73353,\"start\":73346},{\"end\":73362,\"start\":73353},{\"end\":73369,\"start\":73362},{\"end\":73859,\"start\":73849},{\"end\":73870,\"start\":73859},{\"end\":74308,\"start\":74302},{\"end\":74315,\"start\":74308},{\"end\":74321,\"start\":74315},{\"end\":74327,\"start\":74321},{\"end\":74335,\"start\":74327},{\"end\":74341,\"start\":74335},{\"end\":75095,\"start\":75083},{\"end\":75101,\"start\":75095},{\"end\":75473,\"start\":75461},{\"end\":75483,\"start\":75473},{\"end\":75491,\"start\":75483},{\"end\":75501,\"start\":75491},{\"end\":75994,\"start\":75982},{\"end\":76003,\"start\":75994},{\"end\":76573,\"start\":76562},{\"end\":76814,\"start\":76807},{\"end\":76822,\"start\":76814},{\"end\":76829,\"start\":76822},{\"end\":76835,\"start\":76829},{\"end\":76842,\"start\":76835},{\"end\":76851,\"start\":76842},{\"end\":76860,\"start\":76851},{\"end\":76869,\"start\":76860},{\"end\":77384,\"start\":77375},{\"end\":77796,\"start\":77789},{\"end\":77803,\"start\":77796},{\"end\":77812,\"start\":77803},{\"end\":77818,\"start\":77812},{\"end\":77827,\"start\":77818},{\"end\":77835,\"start\":77827},{\"end\":77843,\"start\":77835},{\"end\":77852,\"start\":77843},{\"end\":77867,\"start\":77852},{\"end\":77879,\"start\":77867},{\"end\":78186,\"start\":78175},{\"end\":78196,\"start\":78186},{\"end\":78212,\"start\":78196},{\"end\":78458,\"start\":78452},{\"end\":78466,\"start\":78458},{\"end\":78476,\"start\":78466},{\"end\":78488,\"start\":78476},{\"end\":78975,\"start\":78964},{\"end\":78985,\"start\":78975},{\"end\":78996,\"start\":78985},{\"end\":79004,\"start\":78996},{\"end\":79438,\"start\":79430},{\"end\":79453,\"start\":79438},{\"end\":79461,\"start\":79453},{\"end\":79470,\"start\":79461},{\"end\":79744,\"start\":79736},{\"end\":79751,\"start\":79744},{\"end\":79758,\"start\":79751},{\"end\":79764,\"start\":79758},{\"end\":79771,\"start\":79764},{\"end\":79778,\"start\":79771},{\"end\":79785,\"start\":79778},{\"end\":79792,\"start\":79785},{\"end\":80328,\"start\":80317},{\"end\":80340,\"start\":80328},{\"end\":80352,\"start\":80340},{\"end\":80361,\"start\":80352},{\"end\":81088,\"start\":81073},{\"end\":81098,\"start\":81088},{\"end\":81534,\"start\":81520},{\"end\":81546,\"start\":81534},{\"end\":81560,\"start\":81546},{\"end\":81573,\"start\":81560},{\"end\":81590,\"start\":81573},{\"end\":82039,\"start\":82028},{\"end\":82047,\"start\":82039},{\"end\":82057,\"start\":82047},{\"end\":82069,\"start\":82057},{\"end\":82509,\"start\":82501},{\"end\":82522,\"start\":82509},{\"end\":82533,\"start\":82522},{\"end\":82543,\"start\":82533},{\"end\":82554,\"start\":82543},{\"end\":83050,\"start\":83043},{\"end\":83057,\"start\":83050},{\"end\":83478,\"start\":83470},{\"end\":83485,\"start\":83478},{\"end\":83492,\"start\":83485},{\"end\":83499,\"start\":83492},{\"end\":83983,\"start\":83975},{\"end\":83992,\"start\":83983},{\"end\":84003,\"start\":83992},{\"end\":84011,\"start\":84003},{\"end\":84018,\"start\":84011},{\"end\":84027,\"start\":84018},{\"end\":84034,\"start\":84027},{\"end\":84640,\"start\":84633},{\"end\":84647,\"start\":84640},{\"end\":84654,\"start\":84647},{\"end\":84660,\"start\":84654},{\"end\":85111,\"start\":85094},{\"end\":85118,\"start\":85111},{\"end\":85130,\"start\":85118},{\"end\":85138,\"start\":85130},{\"end\":85150,\"start\":85138},{\"end\":85664,\"start\":85655},{\"end\":85674,\"start\":85664},{\"end\":85682,\"start\":85674},{\"end\":85696,\"start\":85682},{\"end\":85702,\"start\":85696},{\"end\":85988,\"start\":85974},{\"end\":86003,\"start\":85988},{\"end\":86222,\"start\":86215},{\"end\":86229,\"start\":86222},{\"end\":86237,\"start\":86229},{\"end\":86248,\"start\":86237},{\"end\":86255,\"start\":86248},{\"end\":86514,\"start\":86505},{\"end\":86522,\"start\":86514},{\"end\":86531,\"start\":86522},{\"end\":86763,\"start\":86757},{\"end\":86773,\"start\":86763},{\"end\":86789,\"start\":86773},{\"end\":86800,\"start\":86789},{\"end\":87164,\"start\":87156},{\"end\":87171,\"start\":87164},{\"end\":87177,\"start\":87171}]", "bib_venue": "[{\"end\":58034,\"start\":57937},{\"end\":58518,\"start\":58427},{\"end\":59070,\"start\":58979},{\"end\":59514,\"start\":59490},{\"end\":59821,\"start\":59804},{\"end\":60299,\"start\":60208},{\"end\":60840,\"start\":60816},{\"end\":61195,\"start\":61123},{\"end\":61586,\"start\":61514},{\"end\":61995,\"start\":61903},{\"end\":62497,\"start\":62417},{\"end\":63023,\"start\":62942},{\"end\":63482,\"start\":63451},{\"end\":63817,\"start\":63786},{\"end\":64119,\"start\":64088},{\"end\":64475,\"start\":64400},{\"end\":64938,\"start\":64847},{\"end\":65460,\"start\":65394},{\"end\":65945,\"start\":65873},{\"end\":66460,\"start\":66369},{\"end\":67038,\"start\":66947},{\"end\":67598,\"start\":67467},{\"end\":68273,\"start\":68131},{\"end\":68970,\"start\":68951},{\"end\":69334,\"start\":69323},{\"end\":69697,\"start\":69606},{\"end\":70239,\"start\":70108},{\"end\":70874,\"start\":70732},{\"end\":71518,\"start\":71432},{\"end\":71885,\"start\":71864},{\"end\":71997,\"start\":71975},{\"end\":72259,\"start\":72172},{\"end\":72738,\"start\":72657},{\"end\":73119,\"start\":73115},{\"end\":73450,\"start\":73369},{\"end\":73926,\"start\":73870},{\"end\":74423,\"start\":74341},{\"end\":74724,\"start\":74705},{\"end\":74818,\"start\":74801},{\"end\":74917,\"start\":74900},{\"end\":75176,\"start\":75101},{\"end\":75588,\"start\":75501},{\"end\":76126,\"start\":76003},{\"end\":76604,\"start\":76573},{\"end\":76960,\"start\":76869},{\"end\":77469,\"start\":77384},{\"end\":77897,\"start\":77893},{\"end\":78223,\"start\":78212},{\"end\":78568,\"start\":78488},{\"end\":79080,\"start\":79004},{\"end\":79500,\"start\":79477},{\"end\":79883,\"start\":79792},{\"end\":80521,\"start\":80379},{\"end\":81178,\"start\":81098},{\"end\":81609,\"start\":81590},{\"end\":81851,\"start\":81823},{\"end\":82150,\"start\":82069},{\"end\":82658,\"start\":82554},{\"end\":83140,\"start\":83057},{\"end\":83590,\"start\":83499},{\"end\":84165,\"start\":84034},{\"end\":84751,\"start\":84660},{\"end\":85237,\"start\":85150},{\"end\":85726,\"start\":85702},{\"end\":86016,\"start\":86003},{\"end\":86279,\"start\":86255},{\"end\":86554,\"start\":86531},{\"end\":86875,\"start\":86800},{\"end\":87249,\"start\":87177},{\"end\":58034,\"start\":57937},{\"end\":58518,\"start\":58427},{\"end\":59070,\"start\":58979},{\"end\":59514,\"start\":59490},{\"end\":59821,\"start\":59804},{\"end\":60299,\"start\":60208},{\"end\":60840,\"start\":60816},{\"end\":61195,\"start\":61123},{\"end\":61586,\"start\":61514},{\"end\":61995,\"start\":61903},{\"end\":62497,\"start\":62417},{\"end\":63023,\"start\":62942},{\"end\":63482,\"start\":63451},{\"end\":63817,\"start\":63786},{\"end\":64119,\"start\":64088},{\"end\":64475,\"start\":64400},{\"end\":64938,\"start\":64847},{\"end\":65460,\"start\":65394},{\"end\":65945,\"start\":65873},{\"end\":66460,\"start\":66369},{\"end\":67038,\"start\":66947},{\"end\":67598,\"start\":67467},{\"end\":68273,\"start\":68131},{\"end\":68970,\"start\":68951},{\"end\":69334,\"start\":69323},{\"end\":69697,\"start\":69606},{\"end\":70239,\"start\":70108},{\"end\":70874,\"start\":70732},{\"end\":71518,\"start\":71432},{\"end\":71885,\"start\":71864},{\"end\":71997,\"start\":71975},{\"end\":72259,\"start\":72172},{\"end\":72738,\"start\":72657},{\"end\":73119,\"start\":73115},{\"end\":73450,\"start\":73369},{\"end\":73926,\"start\":73870},{\"end\":74423,\"start\":74341},{\"end\":74724,\"start\":74705},{\"end\":74818,\"start\":74801},{\"end\":74917,\"start\":74900},{\"end\":75176,\"start\":75101},{\"end\":75588,\"start\":75501},{\"end\":76126,\"start\":76003},{\"end\":76604,\"start\":76573},{\"end\":76960,\"start\":76869},{\"end\":77469,\"start\":77384},{\"end\":77897,\"start\":77893},{\"end\":78223,\"start\":78212},{\"end\":78568,\"start\":78488},{\"end\":79080,\"start\":79004},{\"end\":79500,\"start\":79477},{\"end\":79883,\"start\":79792},{\"end\":80521,\"start\":80379},{\"end\":81178,\"start\":81098},{\"end\":81609,\"start\":81590},{\"end\":81851,\"start\":81823},{\"end\":82150,\"start\":82069},{\"end\":82658,\"start\":82554},{\"end\":83140,\"start\":83057},{\"end\":83590,\"start\":83499},{\"end\":84165,\"start\":84034},{\"end\":84751,\"start\":84660},{\"end\":85237,\"start\":85150},{\"end\":85726,\"start\":85702},{\"end\":86016,\"start\":86003},{\"end\":86279,\"start\":86255},{\"end\":86554,\"start\":86531},{\"end\":86875,\"start\":86800},{\"end\":87249,\"start\":87177},{\"end\":58118,\"start\":58036},{\"end\":58596,\"start\":58520},{\"end\":59148,\"start\":59072},{\"end\":60377,\"start\":60301},{\"end\":61254,\"start\":61197},{\"end\":61645,\"start\":61588},{\"end\":62074,\"start\":61997},{\"end\":62564,\"start\":62499},{\"end\":63091,\"start\":63025},{\"end\":64537,\"start\":64477},{\"end\":65016,\"start\":64940},{\"end\":65513,\"start\":65462},{\"end\":66004,\"start\":65947},{\"end\":66538,\"start\":66462},{\"end\":67716,\"start\":67600},{\"end\":68402,\"start\":68275},{\"end\":69775,\"start\":69699},{\"end\":70357,\"start\":70241},{\"end\":71003,\"start\":70876},{\"end\":71591,\"start\":71520},{\"end\":72333,\"start\":72261},{\"end\":72806,\"start\":72740},{\"end\":73518,\"start\":73452},{\"end\":73942,\"start\":73928},{\"end\":74492,\"start\":74425},{\"end\":75238,\"start\":75178},{\"end\":75662,\"start\":75590},{\"end\":76236,\"start\":76128},{\"end\":77038,\"start\":76962},{\"end\":77541,\"start\":77471},{\"end\":78635,\"start\":78570},{\"end\":79143,\"start\":79082},{\"end\":79961,\"start\":79885},{\"end\":80650,\"start\":80523},{\"end\":81245,\"start\":81180},{\"end\":82218,\"start\":82152},{\"end\":82749,\"start\":82660},{\"end\":83210,\"start\":83142},{\"end\":83668,\"start\":83592},{\"end\":84283,\"start\":84167},{\"end\":84829,\"start\":84753},{\"end\":85311,\"start\":85239},{\"end\":86937,\"start\":86877},{\"end\":58118,\"start\":58036},{\"end\":58596,\"start\":58520},{\"end\":59148,\"start\":59072},{\"end\":60377,\"start\":60301},{\"end\":61254,\"start\":61197},{\"end\":61645,\"start\":61588},{\"end\":62074,\"start\":61997},{\"end\":62564,\"start\":62499},{\"end\":63091,\"start\":63025},{\"end\":64537,\"start\":64477},{\"end\":65016,\"start\":64940},{\"end\":65513,\"start\":65462},{\"end\":66004,\"start\":65947},{\"end\":66538,\"start\":66462},{\"end\":67716,\"start\":67600},{\"end\":68402,\"start\":68275},{\"end\":69775,\"start\":69699},{\"end\":70357,\"start\":70241},{\"end\":71003,\"start\":70876},{\"end\":71591,\"start\":71520},{\"end\":72333,\"start\":72261},{\"end\":72806,\"start\":72740},{\"end\":73518,\"start\":73452},{\"end\":73942,\"start\":73928},{\"end\":74492,\"start\":74425},{\"end\":75238,\"start\":75178},{\"end\":75662,\"start\":75590},{\"end\":76236,\"start\":76128},{\"end\":77038,\"start\":76962},{\"end\":77541,\"start\":77471},{\"end\":78635,\"start\":78570},{\"end\":79143,\"start\":79082},{\"end\":79961,\"start\":79885},{\"end\":80650,\"start\":80523},{\"end\":81245,\"start\":81180},{\"end\":82218,\"start\":82152},{\"end\":82749,\"start\":82660},{\"end\":83210,\"start\":83142},{\"end\":83668,\"start\":83592},{\"end\":84283,\"start\":84167},{\"end\":84829,\"start\":84753},{\"end\":85311,\"start\":85239},{\"end\":86937,\"start\":86877}]"}}}, "year": 2023, "month": 12, "day": 17}