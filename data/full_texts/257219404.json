{"id": 257219404, "updated": "2023-10-05 03:41:39.377", "metadata": {"title": "LLaMA: Open and Efficient Foundation Language Models", "authors": "[{\"first\":\"Hugo\",\"last\":\"Touvron\",\"middle\":[]},{\"first\":\"Thibaut\",\"last\":\"Lavril\",\"middle\":[]},{\"first\":\"Gautier\",\"last\":\"Izacard\",\"middle\":[]},{\"first\":\"Xavier\",\"last\":\"Martinet\",\"middle\":[]},{\"first\":\"Marie-Anne\",\"last\":\"Lachaux\",\"middle\":[]},{\"first\":\"Timoth'ee\",\"last\":\"Lacroix\",\"middle\":[]},{\"first\":\"Baptiste\",\"last\":\"Roziere\",\"middle\":[]},{\"first\":\"Naman\",\"last\":\"Goyal\",\"middle\":[]},{\"first\":\"Eric\",\"last\":\"Hambro\",\"middle\":[]},{\"first\":\"Faisal\",\"last\":\"Azhar\",\"middle\":[]},{\"first\":\"Aurelien\",\"last\":\"Rodriguez\",\"middle\":[]},{\"first\":\"Armand\",\"last\":\"Joulin\",\"middle\":[]},{\"first\":\"Edouard\",\"last\":\"Grave\",\"middle\":[]},{\"first\":\"Guillaume\",\"last\":\"Lample\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2023, "month": null, "day": null}, "abstract": "We introduce LLaMA, a collection of foundation language models ranging from 7B to 65B parameters. We train our models on trillions of tokens, and show that it is possible to train state-of-the-art models using publicly available datasets exclusively, without resorting to proprietary and inaccessible datasets. In particular, LLaMA-13B outperforms GPT-3 (175B) on most benchmarks, and LLaMA-65B is competitive with the best models, Chinchilla-70B and PaLM-540B. We release all our models to the research community.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2302.13971", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/abs-2302-13971", "doi": "10.48550/arxiv.2302.13971"}}, "content": {"source": {"pdf_hash": "57e849d0de13ed5f91d086936296721d4ff75a75", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/2302.13971v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "a750f4e458432ec1144037c8b6cab714bab62342", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/57e849d0de13ed5f91d086936296721d4ff75a75.txt", "contents": "\nLLaMA: Open and Efficient Foundation Language Models\n\n\nHugo Touvron \nMetaAI\n\nThibaut Lavril \nMetaAI\n\nGautier Izacard \nMetaAI\n\nXavier Martinet \nMetaAI\n\nMarie-Anne Lachaux \nMetaAI\n\nTimothee Lacroix \nMetaAI\n\nBaptiste Rozi\u00e8re \nMetaAI\n\nNaman Goyal \nMetaAI\n\nEric Hambro \nMetaAI\n\nFaisal Azhar \nMetaAI\n\nAurelien Rodriguez \nMetaAI\n\nArmand Joulin \nMetaAI\n\nEdouard Grave \nMetaAI\n\nGuillaume Lample \nMetaAI\n\nLLaMA: Open and Efficient Foundation Language Models\n\nWe introduce LLaMA, a collection of foundation language models ranging from 7B to 65B parameters. We train our models on trillions of tokens, and show that it is possible to train state-of-the-art models using publicly available datasets exclusively, without resorting to proprietary and inaccessible datasets. In particular, LLaMA-13B outperforms GPT-3 (175B) on most benchmarks, and LLaMA-65B is competitive with the best models, Chinchilla-70B and PaLM-540B. We release all our models to the research community 1 . . 1990. A statistical approach to machine translation. Computational linguistics, 16(2):79-85. son. 2013. One billion word benchmark for measuring progress in statistical language modeling. arXiv preprint arXiv:1312.3005. Tafjord. 2018. Think you have solved question answering? try arc, the ai2 reasoning challenge. arXiv preprint arXiv:1803.05457.\n\nIntroduction\n\nLarge Languages Models (LLMs) trained on massive corpora of texts have shown their ability to perform new tasks from textual instructions or from a few examples (Brown et al., 2020). These few-shot properties first appeared when scaling models to a sufficient size (Kaplan et al., 2020), resulting in a line of work that focuses on further scaling these models (Chowdhery et al., 2022;Rae et al., 2021). These efforts are based on the assumption that more parameters will lead to better performance. However, recent work from Hoffmann et al. (2022) shows that, for a given compute budget, the best performances are not achieved by the largest models, but by smaller models trained on more data.\n\nThe objective of the scaling laws from Hoffmann et al. (2022) is to determine how to best scale the dataset and model sizes for a particular training compute budget. However, this objective disregards the inference budget, which becomes critical when serving a language model at scale. In this context, given a target level of performance, the preferred model is not the fastest to train but the fastest at inference, and although it may be cheaper to train a large model to reach a certain level of * Equal contribution. Correspondence: {htouvron, thibautlav,gizacard,egrave,glample}@meta.com 1 https://github.com/facebookresearch/llama performance, a smaller one trained longer will ultimately be cheaper at inference. For instance, although Hoffmann et al. (2022) recommends training a 10B model on 200B tokens, we find that the performance of a 7B model continues to improve even after 1T tokens.\n\nThe focus of this work is to train a series of language models that achieve the best possible performance at various inference budgets, by training on more tokens than what is typically used. The resulting models, called LLaMA, ranges from 7B to 65B parameters with competitive performance compared to the best existing LLMs. For instance, LLaMA-13B outperforms GPT-3 on most benchmarks, despite being 10\u00d7 smaller. We believe that this model will help democratize the access and study of LLMs, since it can be run on a single GPU. At the higher-end of the scale, our 65B-parameter model is also competitive with the best large language models such as Chinchilla or PaLM-540B.\n\nUnlike Chinchilla, PaLM, or GPT-3, we only use publicly available data, making our work compatible with open-sourcing, while most existing models rely on data which is either not publicly available or undocumented (e.g. \"Books -2TB\" or \"Social media conversations\"). There exist some exceptions, notably OPT (Zhang et al., 2022), GPT-NeoX (Black et al., 2022), BLOOM (Scao et al., 2022) and GLM (Zeng et al., 2022), but none that are competitive with PaLM-62B or Chinchilla.\n\nIn the rest of this paper, we present an overview of the modifications we made to the transformer architecture (Vaswani et al., 2017), as well as our training method. We then report the performance of our models and compare with others LLMs on a set of standard benchmarks. Finally, we expose some of the biases and toxicity encoded in our models, using some of the most recent benchmarks from the responsible AI community.\n\n\nApproach\n\nOur training approach is similar to the methods described in previous work (Brown et al., 2020;Chowdhery et al., 2022), and is inspired by the Chinchilla scaling laws (Hoffmann et al., 2022). We train large transformers on a large quantity of textual data using a standard optimizer.\n\n\nPre-training Data\n\nOur training dataset is a mixture of several sources, reported in Table 1, that cover a diverse set of domains. For the most part, we reuse data sources that have been leveraged to train other LLMs, with the restriction of only using data that is publicly available, and compatible with open sourcing. This leads to the following mixture of data and the percentage they represent in the training set:\n\nEnglish CommonCrawl [67%]. We preprocess five CommonCrawl dumps, ranging from 2017 to 2020, with the CCNet pipeline (Wenzek et al., 2020). This process deduplicates the data at the line level, performs language identification with a fastText linear classifier to remove non-English pages and filters low quality content with an ngram language model. In addition, we trained a linear model to classify pages used as references in Wikipedia v.s. randomly sampled pages, and discarded pages not classified as references.\n\nC4 [15%]. During exploratory experiments, we observed that using diverse pre-processed Com-monCrawl datasets improves performance. We thus included the publicly available C4 dataset (Raffel et al., 2020) in our data. The preprocessing of C4 also contains deduplication and language identification steps: the main difference with CCNet is the quality filtering, which mostly relies on heuristics such as presence of punctuation marks or the number of words and sentences in a webpage. languages, which use either the Latin or Cyrillic scripts: bg, ca, cs, da, de, en, es, fr, hr, hu, it, nl, pl, pt, ro, ru, sl, sr, sv, uk. We process the data to remove hyperlinks, comments and other formatting boilerplate.\n\nGutenberg and Books3 [4.5%]. We include two book corpora in our training dataset: the Gutenberg Project, which contains books that are in the public domain, and the Books3 section of ThePile (Gao et al., 2020), a publicly available dataset for training large language models. We perform deduplication at the book level, removing books with more than 90% content overlap.\n\nArXiv [2.5%]. We process arXiv Latex files to add scientific data to our dataset. Following Lewkowycz et al. (2022), we removed everything before the first section, as well as the bibliography. We also removed the comments from the .tex files, and inline-expanded definitions and macros written by users to increase consistency across papers.\n\nStack Exchange [2%]. We include a dump of Stack Exchange, a website of high quality questions and answers that covers a diverse set of domains, ranging from computer science to chemistry. We kept the data from the 28 largest websites, removed the HTML tags from text and sorted the answers by score (from highest to lowest).\n\nTokenizer. We tokenize the data with the bytepair encoding (BPE) algorithm (Sennrich et al., 2015), using the implementation from Sentence-Piece (Kudo and Richardson, 2018). Notably, we split all numbers into individual digits, and fallback to bytes to decompose unknown UTF-8 characters.  Overall, our entire training dataset contains roughly 1.4T tokens after tokenization. For most of our training data, each token is used only once during training, with the exception of the Wikipedia and Books domains, over which we perform approximately two epochs.\n\n\nArchitecture\n\nFollowing recent work on large language models, our network is based on the transformer architecture (Vaswani et al., 2017). We leverage various improvements that were subsequently proposed, and used in different models such as PaLM. Here are the main difference with the original architecture, and where we were found the inspiration for this change (in bracket):\n\nPre-normalization [GPT3]. To improve the training stability, we normalize the input of each transformer sub-layer, instead of normalizing the output. We use the RMSNorm normalizing function, introduced by Zhang and Sennrich (2019).\n\nSwiGLU activation function [PaLM]. We replace the ReLU non-linearity by the SwiGLU activation function, introduced by Shazeer (2020) to improve the performance. We use a dimension of The details of the hyper-parameters for our different models are given in Table 2.\n\n\nOptimizer\n\nOur models are trained using the AdamW optimizer (Loshchilov and Hutter, 2017), with the following hyper-parameters: \u03b2 1 = 0.9, \u03b2 2 = 0.95. We use a cosine learning rate schedule, such that the final learning rate is equal to 10% of the maximal learning rate. We use a weight decay of 0.1 and gradient clipping of 1.0. We use 2, 000 warmup 0 200 400 600 800 1000 1200 1400\n\nBillion of tokens  Figure 1: Training loss over train tokens for the 7B, 13B, 33B, and 65 models. LLaMA-33B and LLaMA-65B were trained on 1.4T tokens. The smaller models were trained on 1.0T tokens. All models are trained with a batch size of 4M tokens. steps, and vary the learning rate and batch size with the size of the model (see Table 2 for details).\n\n\nEfficient implementation\n\nWe make several optimizations to improve the training speed of our models. First, we use an efficient implementation of the causal multi-head attention to reduce memory usage and runtime. This implementation, available in the xformers library, 2 is inspired by Rabe and Staats (2021) and uses the backward from Dao et al. (2022). This is achieved by not storing the attention weights and not computing the key/query scores that are masked due to the causal nature of the language modeling task.\n\nTo further improve training efficiency, we reduced the amount of activations that are recomputed during the backward pass with checkpointing. More precisely, we save the activations that are expensive to compute, such as the outputs of linear layers. This is achieved by manually implementing the backward function for the transformer layers, instead of relying on the PyTorch autograd. To fully benefit from this optimization, we need to  reduce the memory usage of the model by using model and sequence parallelism, as described by Korthikanti et al. (2022). Moreover, we also overlap the computation of activations and the communication between GPUs over the network (due to all_reduce operations) as much as possible.\n\nWhen training a 65B-parameter model, our code processes around 380 tokens/sec/GPU on 2048 A100 GPU with 80GB of RAM. This means that training over our dataset containing 1.4T tokens takes approximately 21 days.\n\n\nMain results\n\nFollowing previous work (Brown et al., 2020), we consider zero-shot and few-shot tasks, and report results on a total of 20 benchmarks:\n\n\u2022 Zero-shot. We provide a textual description of the task and a test example. The model either provides an answer using open-ended generation, or ranks the proposed answers.\n\n\u2022 Few-shot. We provide a few examples of the task (between 1 and 64) and a test example. The model takes this text as input and generates the answer or ranks different options.\n\nWe compare LLaMA with other foundation models, namely the non-publicly available language models GPT-3 (Brown et al., 2020), Gopher (Rae et al., 2021), Chinchilla (Hoffmann et al., 2022) and PaLM (Chowdhery et al., 2022), as well as the open-sourced OPT models (Zhang et al., 2022), GPT-J (Wang and Komatsuzaki, 2021), and GPT-Neo (Black et al., 2022). In Section 4, we also briefly compare LLaMA with instruction-tuned models such as OPT-IML (Iyer et al., 2022) and Flan-PaLM (Chung et al., 2022).\n\nWe evaluate LLaMA on free-form generation tasks and multiple choice tasks. In the multiple choice tasks, the objective is to select the most appropriate completion among a set of given options, based on a provided context. We select the completion with the highest likelihood given the provided context. We follow Gao et al. (2021) and use the likelihood normalized by the number of characters in the completion, except for certain datasets (OpenBookQA, BoolQ), for which we follow Brown et al. (2020), and select a completion based on the likelihood normalized by the likelihood of the completion given \"Answer:\" as context: P (completion|context)/P (completion|\"Answer:\").  \n\n\nCommon Sense Reasoning\n\nWe consider eight standard common sense rea- . These datasets include Cloze and Winograd style tasks, as well as multiple choice question answering. We evaluate in the zero-shot setting as done in the language modeling community.\n\nIn Table 3, we compare with existing models of various sizes and report numbers from the corresponding papers. First, LLaMA-65B outperforms Chinchilla-70B on all reported benchmarks but BoolQ. Similarly, this model surpasses PaLM-540B everywhere but on BoolQ and WinoGrande. LLaMA-13B model also outperforms GPT-3 on most benchmarks despite being 10\u00d7 smaller.\n\n\nClosed-book Question Answering\n\nWe compare LLaMA to existing large language models on two closed-book question answering benchmarks: Natural Questions (Kwiatkowski et al., 2019) and TriviaQA (Joshi et al., 2017). For both benchmarks, we report exact match performance in a closed book setting, i.e., where the models do not have access to documents that contain evidence to answer the question. In Table 4, we report performance on NaturalQuestions, and in Table 5, we report on TriviaQA. On both benchmarks, LLaMA-65B achieve state-of-the-arts performance in the zero-shot and few-shot settings. More importantly, the LLaMA-13B is also competitive on these benchmarks with GPT-3 and Chinchilla, despite being 5-10\u00d7 smaller. This model runs on a single V100 GPU during inference.  \n\n\nReading Comprehension\n\nWe evaluate our models on the RACE reading comprehension benchmark (Lai et al., 2017). This dataset was collected from English reading comprehension exams designed for middle and high  school Chinese students. We follow the evaluation setup from Brown et al. (2020) and report results in Table 6. On these benchmarks, LLaMA-65B is competitive with PaLM-540B, and, LLaMA-13B outperforms GPT-3 by a few percents.\n\n\nMathematical reasoning\n\nWe evaluate our models on two mathematical reasoning benchmarks: MATH (Hendrycks et al., 2021) and GSM8k (Cobbe et al., 2021). MATH is a dataset of 12K middle school and high school mathematics problems written in LaTeX. GSM8k is a set of middle school mathematical problems. In Table 7 \n\n\nCode generation\n\nWe evaluate the ability of our models to write code from a natural language description on two benchmarks: HumanEval (Chen et al., 2021) and MBPP (Austin et al., 2021). For both tasks, the model receives a description of the program in a few sentences, as well as a few input-output examples. In HumanEval, it also receives a function signature, and the prompt is formatted as natural code with the textual description and tests in a  docstring. The model needs to generate a Python program that fits the description and satisfies the test cases. In Table 8, we compare the pass@1 scores of our models with existing language models that have not been finetuned on code, namely PaLM and LaMDA (Thoppilan et al., 2022). PaLM and LLaMA were trained on datasets that contain a similar number of code tokens. As show in Table 8, for a similar number of parameters, LLaMA outperforms other general models such as LaMDA and PaLM, which are not trained or finetuned specifically for code. LLaMA with 13B parameters and more outperforms LaMDA 137B on both HumanEval and MBPP. LLaMA 65B also outperforms PaLM 62B, even when it is trained longer. The pass@1 results reported in this table were obtained by sampling with temperature 0.1. The pass@100 and pass@80 metrics were obtained with temperature 0.8. We use the same method as Chen et al. (2021) to obtain unbiased estimates of the pass@k.\n\nIt is possible to improve the performance on code by finetuning on code-specific tokens. For instance, PaLM-Coder (Chowdhery et al., 2022) increases the pass@1 score of PaLM on HumanEval from 26.2% for PaLM to 36%. Other models trained specifically for code also perform better than general models on these tasks (Chen et al., 2021;Nijkamp et al., 2022;Fried et al., 2022). Finetuning on code tokens is beyond the scope of this paper.  \n\n\nMassive Multitask Language Understanding\n\nThe massive multitask language understanding benchmark, or MMLU, introduced by Hendrycks et al. (2020) consists of multiple choice questions covering various domains of knowledge, including humanities, STEM and social sciences. We evaluate our models in the 5-shot setting, using the examples provided by the benchmark, and report results in Table 9. On this benchmark, we observe that the LLaMA-65B is behind both Chinchilla-70B and PaLM-540B by a few percent in average, and across most domains. A potential explanation is that we have used a limited amount of books and academic papers in our pre-training data, i.e., ArXiv, Gutenberg and Books3, that sums up to only 177GB, while these models were trained on up to 2TB of books. This large quantity of books used by Gopher, Chinchilla and PaLM may also explain why Gopher outperforms GPT-3 on this benchmark, while it is comparable on other benchmarks.\n\n\nEvolution of performance during training\n\nDuring training, we tracked the performance of our models on a few question answering and common sense benchmarks, and report them in Figure 2.\n\nOn most benchmarks, the performance improves steadily, and correlates with the training perplexity of the model (see Figure 1).  \n\n\nInstruction Finetuning\n\nIn this section, we show that briefly finetuning on instructions data rapidly leads to improvements on MMLU. Although the non-finetuned version of LLaMA-65B is already able to follow basic instructions, we observe that a very small amount of finetuning improves the performance on MMLU, and further improves the ability of the model to follow instructions. Since this is not the focus of this paper, we only conducted a single experiment following the same protocol as Chung et al. (2022) to train an instruct model, LLaMA-I.  In Table 10, we report the results of our instruct model LLaMA-I on MMLU and compare with existing instruction finetuned models of moderate sizes, namely, OPT-IML (Iyer et al., 2022) and the Flan-PaLM series (Chung et al., 2022). All the reported numbers are from the corresponding papers. Despite the simplicity of the instruction finetuning approach used here, we reach 68.9% on MMLU. LLaMA-I (65B) outperforms on MMLU existing instruction finetuned models of moderate sizes, but are still far from the state-of-the-art, that is 77.4 for GPT code-davinci-002 on MMLU (numbers taken from Iyer et al. (2022)). The details of the performance on MMLU on the 57 tasks can be found in Table 16 of the appendix.\n\n\nBias, Toxicity and Misinformation\n\nLarge language models have been showed to reproduce and amplify biases that are existing in the training data (Sheng et al., 2019;Kurita et al., 2019), and to generate toxic or offensive content (Gehman et al., 2020). As our training dataset contains a large proportion of data from the Web, we believe that it is crucial to determine the potential for our models to generate such content. To understand the potential harm of LLaMA-65B, we evaluate on different benchmarks that measure toxic content production and stereotypes detection. While we have selected some of the standard benchmarks that are used by the language model community to indicate some of the issues with these models, these evaluations are not sufficient to fully understand the risks associated with these models. \n\n\nRealToxicityPrompts\n\nLanguage models can generate toxic language, e.g., insults, hate speech or threats. There is a very large range of toxic content that a model can generate, making a thorough evaluation challenging. Several recent work (Zhang et al., 2022;Hoffmann et al., 2022) have considered the RealToxicityPrompts benchmark (Gehman et al., 2020) as an indicator of how toxic is their model. RealToxicityPrompts consists of about 100k prompts that the model must complete; then a toxicity score is automatically evaluated by making a request to PerspectiveAPI 3 . We do not have control over the pipeline used by the third-party PerspectiveAPI, making comparison with previous models difficult.\n\nFor each of the 100k prompts, we greedily generate with our models, and measure their toxicity score. The score per prompt ranges from 0 (non-toxic) to 1 (toxic). In Table 11, we report our averaged score on basic and respectful prompt categories of RealToxicityPrompts. These scores are \"comparable\" with what we observe in the literature (e.g., 0.087 for Chinchilla) but the methodologies differ between these work and ours (in terms of sampling strategy, number of prompts and time of API). We observe that toxicity increases  Table 11: RealToxicityPrompts. We run a greedy decoder on the 100k prompts from this benchmark. The \"respectful\" versions are prompts starting with \"Complete the following sentence in a polite, respectful, and unbiased manner:\", and \"Basic\" is without it. Scores were obtained using the PerplexityAPI, with higher score indicating more toxic generations.\n\nwith the size of the model, especially for Respectful prompts. This was also observed in previous work (Zhang et al., 2022) Table 12: CrowS-Pairs. We compare the level of biases contained in LLaMA-65B with OPT-175B and GPT3-175B. Higher score indicates higher bias.\n\n\nCrowS-Pairs\n\nWe evaluate the biases in our model on the CrowS-Pairs (Nangia et al., 2020). This dataset allows to measure biases in 9 categories: gender, religion, race/color, sexual orientation, age, nationality, disability, physical appearance and socioeconomic status. Each example is composed of a stereotype and an anti-stereotype, we measure the model preference for the stereotypical sentence using the perplexity of both sentences in a zero-shot setting. Higher scores thus indicate higher bias. We compare with GPT-3 and OPT-175B in Table 12. LLaMA compares slightly favorably to both models on average. Our model is particularly biased in the religion category (+10% compared to OPT-175B), followed by age and gender. We expect these biases to come from CommonCrawl despite multiple filtering steps.\n\n\nWinoGender\n\nTo further investigate the biases of our model on the gender category, we look at the WinoGender benchmark (Rudinger et al., 2018), a co-reference resolution dataset. WinoGender is made of Winograd schema, and biases are evaluated by determining if a model co-reference resolution performance is impacted by the gender of the pronoun.\n\nMore precisely, each sentence has three mentions: an \"occupation\", a \"participant\", and a \"pronoun\" where the pronoun is co-referencing either the occupation or participant. We prompt the model to determine the co-reference relation and measure if it does so correctly according to the context of the sentence. The goal is to reveal if societal biases associated with occupations have been captured by the model. For example, a sentence in the WinoGender dataset is \"The nurse notified the patient that his shift would be ending in an hour.\", which is followed by 'His' refers to. We then compare the perplexity of the continuations the nurse and the patient to perform co-reference resolution with the model. We evaluate the performance when using 3 pronouns: \"her/her/she\", \"his/him/he\" and \"their/them/someone\" (the different choices corresponding to the grammatical function of the pronoun.\n\nIn Table 13, we report the co-reference scores for the three different pronouns contained in the dataset. We observe that our model is significantly better at performing co-reference resolution for the \"their/them/someone\" pronouns than for the \"her/her/she\" and \"his/him/he\" pronouns. A similar observation was made in previous work (Rae et al., 2021;Hoffmann et al., 2022), and is likely indicative of gender bias. Indeed, in the case of the \"her/her/she\" and \"his/him/he\" pronouns, the model is probably using the majority gender of the occupation to perform co-reference resolution, instead of using the evidence of the sentence.\n\nTo further investigate this hypothesis, we look at the set of \"gotcha\" cases for the \"her/her/she\" and \"his/him/he\" pronouns in the WinoGender dataset. Theses cases correspond to sentences in which the pronoun does not match the majority gender of the occupation, and the occupation is the correct answer. In Table 13, we observe that our model, LLaMA-65B, makes more errors on the gotcha examples, clearly showing that it capture societal biases related to gender and occupation. The drop of performance exists for \"her/her/she\" and \"his/him/he\" pronouns, which is indicative of biases regardless of gender.\n\n\nTruthfulQA\n\nTruthfulQA (Lin et al., 2021) aims to measure the truthfulness of a model, i.e., its ability to identify when a claim is true. Lin et al. (2021) consider the definition of \"true\" in the sense of \"literal truth about the real world\", and not claims that are only true in the context of a belief system or tradition. This benchmark can evaluate the risks of a model to generate misinformation or false claims. The questions are written in diverse style, cover 38 categories and are designed to be adversarial.  Table 13: WinoGender. Co-reference resolution accuracy for the LLaMA models, for different pronouns (\"her/her/she\" and \"his/him/he\"). We observe that our models obtain better performance on \"their/them/someone' pronouns than on \"her/her/she\" and \"his/him/he', which is likely indicative of biases.  Table 14: TruthfulQA. We report the fraction of truthful and truthful*informative answers, as scored by specially trained models via the OpenAI API. We follow the QA prompt style used in Ouyang et al. (2022), and report the performance of GPT-3 from the same paper.\n\nIn Table 14, we report the performance of our models on both questions to measure truthful models and the intersection of truthful and informative. Compared to GPT-3, our model scores higher in both categories, but the rate of correct answers is still low, showing that our model is likely to hallucinate incorrect answers.\n\n\nCarbon footprint\n\nThe training of our models have consumed a massive quantity of energy, responsible for the emission of carbon dioxide. We follow the recent literature on the subject and breakdown both the total energy consumption and the resulting carbon footprint in Table 15. We follow a formula for Wu et al. (2022) to estimate the Watt-hour, Wh, needed to train a model, as well as the tons of carbon emissions, tCO 2 eq. For the Wh, we use the formula: Wh = GPU-h\u00d7(GPU power consumption)\u00d7PUE, where we set the Power Usage Effectiveness (PUE) at 1.1. The resulting carbon emission depends on the location of the data center used to train the network. For instance, BLOOM uses a grid that emits 0.057 kg CO 2 eq/KWh leading to 27 tCO 2 eq and OPT a grid that emits 0.231 kg CO 2 eq/KWh, leading to 82 tCO 2 eq. In this study, we are interested in comparing the cost in carbon emission of training of these models if they were trained in the same data center. Hence, we do not take the location of data center in consideration, and use, instead, the US national average carbon intensity factor of 0.385 kg CO 2 eq/KWh. This leads to the following formula for the tons of carbon emissions:\ntCO 2 eq = MWh \u00d7 0.385.\nWe apply the same formula to OPT and BLOOM for fair comparison. For OPT, we assume training required 34 days on 992 A100-80B (see their logs 4 ). Finally, we estimate that we used 2048 A100-80GB for a period of approximately 5 months to develop our models. This means that developing these models would have cost around 2,638 MWh under our assumptions, and a total emission of 1,015 tCO 2 eq. We hope that releasing these models will help to reduce future carbon emission since the training is already done, and some of the models are relatively small and can be run on a single GPU.\n\n\nRelated work\n\nLanguage models are probability distributions over sequences of words, tokens or characters (Shannon, 1948(Shannon, , 1951. This task, often framed as next token prediction, has long been considered a core problem in natural language processing (Bahl et al., 1983;Brown et al., 1990). Because Turing (1950) proposed to measure machine intelligence by using language through the \"imitation game\", language modeling has been proposed as a benchmark to measure progress toward artificial intelligence (Mahoney, 1999).\n\nArchitecture. Traditionally, language models were based on n-gram count statistics (Bahl et al., 1983), and various smoothing techniques were proposed to improve the estimation of rare events (Katz, 1987;Kneser and Ney, 1995). In the past two decades, neural networks have been successfully applied to the language modelling task,  Table 15: Carbon footprint of training different models in the same data center. We follow Wu et al. (2022) to compute carbon emission of training OPT, BLOOM and our models in the same data center. For the power consumption of a A100-80GB, we take the thermal design power for NVLink systems, that is 400W. We take a PUE of 1.1 and a carbon intensity factor set at the national US average of 0.385 kg CO 2 e per KWh.\n\nstarting from feed forward models (Bengio et al., 2000), recurrent neural networks (Elman, 1990;Mikolov et al., 2010) and LSTMs (Hochreiter and Schmidhuber, 1997;Graves, 2013). More recently, transformer networks, based on self-attention, have led to important improvements, especially for capturing long range dependencies (Vaswani et al., 2017;Radford et al., 2018;Dai et al., 2019).\n\nScaling. There is a long history of scaling for language models, for both the model and dataset sizes. Brants et al. (2007) showed the benefits of using language models trained on 2 trillion tokens, resulting in 300 billion n-grams, on the quality of machine translation. While this work relied on a simple smoothing technique, called Stupid Backoff,  (Zhang et al., 2022), and GLM (Zeng et al., 2022). Hestness et al. (2017) and Rosenfeld et al. (2019) studied the impact of scaling on the performance of deep learning models, showing the existence of power laws between the model and dataset sizes and the performance of the system. Kaplan et al. (2020) derived power laws specifically for transformer based language models, which were later refined by Hoffmann et al. (2022), by adapting the learning rate schedule when scaling datasets. Finally, Wei et al. (2022) studied the effect of scaling on the abilities of large language models.\n\n\nConclusion\n\nIn this paper, we presented a series of language models that are released openly, and competitive with state-of-the-art foundation models. Most notably, LLaMA-13B outperforms GPT-3 while being more than 10\u00d7 smaller, and LLaMA-65B is competitive with Chinchilla-70B and PaLM-540B. Unlike previous studies, we show that it is possible to achieve state-of-the-art performance by training exclusively on publicly available data, without resorting to proprietary datasets. We hope that releasing these models to the research community will accelerate the development of large language models, and help efforts to improve their robustness and mitigate known issues such as toxicity and bias. Additionally, we observed like Chung et al. (2022) that finetuning these models on instructions lead to promising results, and we plan to further investigate this in future work. Finally, we plan to release larger models trained on larger pretraining corpora in the future, since we have seen a constant improvement in performance as we were scaling.\n\nWe evaluate LLaMA on Natural Questions and TriviaQA. For Natural Questions we use the test split used for open-domain question answering containing 3610 questions. For TriviaQA we evaluate on the dev set of the filtered set. This differs from GPT-3 and PaLM, which evaluate on the test set of the unfiltered set for which the online evaluation server is not available anymore 5 .\n\nWe generate answers using greedy decoding, and extract an answer from the generation by stopping at the first line break, final dot or comma. Generated answers are evaluated with the standard exact match metric: a generated answer is considered correct if it matches any answer of the list of answers after normalization. For this normalization step we lowercase generated answers and remove articles, punctuation and duplicate whitespaces. Figure 3 presents formatted examples in the 1-shot setting for Natural Questions and TriviaQA respectively. In all settings, we preprend the string Answer these questions:\\n to the list of questions and answers.\n\nContext \u2192 Answer these questions:\n\nContext \u2192 Answer these questions: Q: Who sang who wants to be a millionaire in high society? Q: In Scotland a bothy/bothie is a? A: Frank Sinatra A: House Q: Who wrote the book the origin of species? Q: The ancient city of Troy is located in what modern country? A:\n\nA:\n\nTarget \u2192 Charles Darwin Target \u2192 Turkey   \n\n\nC Generations from LLaMA-65B\n\nIn this section, we show some examples of generations obtained with LLaMA-65B (without instruction finetuning). Prompts are in bold.\n\n1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 Everyone knows the above sequence, but how many have wondered why it grows so fast? It seems to be the fastest growing sequence in mathematics.\n\nThe sequence was discovered by Leonardo of Pisa around 1200. It is an infinite sequence which appears to grow very rapidly, at least in its initial terms. It is perhaps the most famous sequence in mathematics, for it pops up everywhere. The sequence is called the Fibonacci sequence, named after Leonardo of Pisa, who was also known as Fibonacci.\n\nHe first investigated this sequence in his famous Liber abaci of 1202, when he studied the growth in the population of rabbits based on idealized assumptions. See the Fibonacci rabbits page for the details.\n\nHere is the recommendation letter that I wrote for an application to a dragon feeder position at the Magic Unicorn Corporation: Dear recruiter, I have known ___ for two years, and I believe that she would be an excellent dragon feeder for the Magic Unicorn Corporation. ___ has an ability to remember and process large amounts of information, which is an important skill for a dragon feeder. ___, as an accomplished knight, has a deep understanding of how to kill dragons and how to use each dragon's weaknesses against it. This means that she knows what kinds of foods each dragon likes and what kinds of foods are dangerous to each dragon. This knowledge and experience will be invaluable as she feeds the dragons. I am confident that ___'s competence, skill, and experience will make her an excellent employee. Please contact me at (___) ___-___ if you have any questions. I look forward to hearing from you. Best regards, Honorable Knight Sir George\n\n2 3\n24d instead of 4d as in PaLM. Rotary Embeddings [GPTNeo]. We remove the absolute positional embeddings, and instead, add rotary positional embeddings (RoPE), introduced by Su et al. (2021), at each layer of the network.\n\n\nsoning benchmarks: BoolQ (Clark et al., 2019), PIQA (Bisk et al., 2020), SIQA (Sap et al., 2019),HellaSwag(Zellers et al., 2019), WinoGrande(Sakaguchi et al., 2021), ARC easy and challenge(Clark  et al., 2018)  andOpenBookQA (Mihaylov et al.,  2018)\n\nFigure 2 :\n2Evolution of performance on question answering and common sense reasoning during training.\n\n\nHeafield et al. (2013)  later showed how to scale Kneser-Ney smoothing to Web-scale data. This allowed to train a 5-gram model on 975 billions tokens from CommonCrawl, resulting in a model with 500 billions n-grams(Buck et al., 2014).Chelba et al. (2013)  introduced the One Billion Word benchmark, a large scale training dataset to measure the progress of language models.In the context of neural language models, Jozefowicz et al.(2016)obtained state-of-the-art results on the Billion Word benchmark by scaling LSTMs to 1 billion parameters. Later, scaling transformers lead to improvement on many NLP tasks. Notable models include BERT (Devlin et al., 2018), GPT-2 (Radford et al., 2019), Megatron-LM (Shoeybi et al., 2019), and T5 (Raffel et al., 2020). A significant breakthrough was obtained with GPT-3 (Brown et al., 2020), a model with 175 billion parameters. This lead to a series of Large Language Models, such as Jurassic-1 (Lieber et al., 2021), Megatron-Turing NLG (Smith et al., 2022), Gopher (Rae et al., 2021), Chinchilla (Hoffmann et al., 2022), PaLM (Chowdhery et al., 2022), OPT\n\nFigure 3 :\n3Formatted dataset example for Natural Questions (left) & TriviaQA (right\n\n\nGithub [4.5%]. We use the public GitHub dataset available on Google BigQuery. We only kept projects that are distributed under the Apache, BSD and MIT licenses. Additionally, we filtered low quality files with heuristics based on the line length or proportion of alphanumeric characters, and removed boilerplate, such as headers, with regular expressions. Finally, we deduplicate the resulting dataset at the file level, with exact matches.Wikipedia [4.5%]. We add Wikipedia dumps from the June-August 2022 period, covering 20Dataset \nSampling prop. Epochs Disk size \n\nCommonCrawl \n67.0% \n1.10 \n3.3 TB \nC4 \n15.0% \n1.06 \n783 GB \nGithub \n4.5% \n0.64 \n328 GB \nWikipedia \n4.5% \n2.45 \n83 GB \nBooks \n4.5% \n2.23 \n85 GB \nArXiv \n2.5% \n1.06 \n92 GB \nStackExchange \n2.0% \n1.03 \n78 GB \n\nTable 1: Pre-training data. Data mixtures used for pre-\ntraining, for each subset we list the sampling propor-\ntion, number of epochs performed on the subset when \ntraining on 1.4T tokens, and disk size. The pre-training \nruns on 1T tokens have the same sampling proportion. \n\n\n\n\nparams dimension n heads n layers learning rate batch size n tokens6.7B \n4096 \n32 \n32 \n3.0e \u22124 \n4M \n1.0T \n13.0B \n5120 \n40 \n40 \n3.0e \u22124 \n4M \n1.0T \n32.5B \n6656 \n52 \n60 \n1.5e \u22124 \n4M \n1.4T \n65.2B \n8192 \n64 \n80 \n1.5e \u22124 \n4M \n1.4T \n\n\n\nTable 2 :\n2Model sizes, architectures, and optimization hyper-parameters.\n\n\nBoolQ PIQA SIQA HellaSwag WinoGrande ARC-e ARC-c OBQAGPT-3 \n175B 60.5 \n81.0 \n-\n78.9 \n70.2 \n68.8 \n51.4 \n57.6 \nGopher \n280B 79.3 \n81.8 50.6 \n79.2 \n70.1 \n-\n-\n-\nChinchilla \n70B 83.7 \n81.8 51.3 \n80.8 \n74.9 \n-\n-\n-\nPaLM \n62B 84.8 \n80.5 \n-\n79.7 \n77.0 \n75.2 \n52.5 \n50.4 \nPaLM-cont 62B 83.9 \n81.4 \n-\n80.6 \n77.0 \n-\n-\n-\nPaLM \n540B 88.0 \n82.3 \n-\n83.4 \n81.1 \n76.6 \n53.0 \n53.4 \n\nLLaMA \n\n7B 76.5 \n79.8 48.9 \n76.1 \n70.1 \n72.8 \n47.6 \n57.2 \n13B 78.1 \n80.1 50.4 \n79.2 \n73.0 \n74.8 \n52.7 \n56.4 \n33B 83.1 \n82.3 50.4 \n82.8 \n76.0 \n80.0 \n57.8 \n58.6 \n65B 85.3 \n82.8 52.3 \n84.2 \n77.0 \n78.9 \n56.0 \n60.2 \n\n\n\nTable 3 :\n3Zero-shot performance on Common Sense Reasoning tasks.\n\nTable 4 :\n4NaturalQuestions. Exact match performance.\n\nTable 5 :\n5TriviaQA. Zero-shot and few-shot exact match performance on the filtered dev set.\n\nTable 6 :\n6Reading Comprehension. Zero-shot accuracy.\n\n\n, we compare with PaLM and Minerva(Lewkowycz et al., 2022). Minerva is a series of PaLM models finetuned on 38.5B tokens extracted from ArXiv and Math Web Pages, while neither PaLM or LLaMA are finetuned on mathematical data. The numbers for PaLM and Minerva are taken fromLewkowycz et al. (2022), and we compare with and without maj1@k. maj1@k denotes evaluations where we generate k samples for each problem and perform a majority voting(Wang  et al., 2022). On GSM8k, we observe that LLaMA-65B outperforms Minerva-62B, although it has not been fine-tuned on mathematical data.\n\nTable 7 :\n7Model performance on quantitative reasoning datasets. For majority voting, we use the same setup as Minerva, with k = 256 samples for MATH and k = 100 for GSM8k (Minerva 540B uses k = 64 for MATH and and k = 40 for GSM8k). LLaMA-65B outperforms Minerva 62B on GSM8k, although it has not been fine-tuned on mathematical data.\n\nTable 8 :\n8Model performance for code generation.We report the pass@ score on HumanEval and MBPP. \nHumanEval generations are done in zero-shot and \nMBBP with 3-shot prompts similar to Austin et al. \n(2021). The values marked with  *  are read from figures \nin Chowdhery et al. (2022). \n\n\n\nTable 9 :\n9Massive Multitask Language Understanding (MMLU). Five-shot accuracy.that may indicate that this benchmark is not \nreliable. On WinoGrande, the performance does \nnot correlate as well with training perplexity: \nthe LLaMA-33B and LLaMA-65B have similar \nperformance during the training. \n\n\n\nTable 10 :\n10Instructionfinetuning -MMLU (5-shot). \nComparison of models of moderate size with and with-\nout instruction finetuning on MMLU. \n\n\n\n\n3 https://perspectiveapi.com/Basic Respectful \n\nLLaMA \n\n7B 0.106 \n0.081 \n13B 0.104 \n0.095 \n33B 0.107 \n0.087 \n65B 0.128 \n0.141 \n\n\n\n\n). https://competitions.codalab.org/competitions/172085 B MMLU \n\nGPT-3 Gopher Chinchilla \nLLaMA \nLLaMA-I \n\n175B \n280B \n70B \n7B 13B 33B 65B \n65B \n\nAbstract Algebra \nSTEM 30.0 \n25.0 \n31.0 \n29.0 34.0 32.0 34.0 \n31.0 \nAnatomy \nSTEM 48.0 \n56.3 \n70.4 \n37.0 45.9 51.9 57.8 \n62.2 \nAstronomy \nSTEM 49.0 \n65.8 \n73.0 \n33.6 46.1 61.8 72.4 \n81.6 \nBusiness Ethics \nOther 46.0 \n70.0 \n72.0 \n40.0 45.0 56.0 57.0 \n72.0 \nClinical Knowledge \nOther 48.0 \n67.2 \n75.1 \n35.1 45.7 57.4 65.3 \n69.1 \nCollege Biology \nSTEM 45.0 \n70.8 \n79.9 \n37.5 45.1 58.3 68.8 \n81.9 \nCollege Chemistry \nSTEM 26.0 \n45.0 \n51.0 \n32.0 30.0 45.0 50.0 \n45.0 \nCollege Computer Science \nSTEM 46.0 \n49.0 \n51.0 \n29.0 39.0 45.0 47.0 \n51.0 \nCollege Mathematics \nSTEM 34.5 \n37.0 \n32.0 \n33.0 32.0 40.0 35.0 \n36.0 \nCollege Medicine \nOther 48.0 \n60.1 \n66.5 \n30.6 42.8 52.0 54.3 \n63.0 \nCollege Physics \nSTEM 28.0 \n34.3 \n46.1 \n26.5 18.6 28.4 36.3 \n46.1 \nComputer Security \nSTEM 57.0 \n65.0 \n76.0 \n45.0 65.0 66.0 79.0 \n79.0 \nConceptual Physics \nSTEM 36.5 \n49.4 \n67.2 \n36.6 41.3 51.5 59.6 \n66.4 \nEconometrics \nSocial Science 33.0 \n43.0 \n38.6 \n23.7 27.2 35.1 40.4 \n52.6 \nElectrical Engineering \nSTEM 50.0 \n60.0 \n62.1 \n26.9 40.7 49.7 53.8 \n60.7 \nElementary Mathematics \nSTEM 30.0 \n33.6 \n41.5 \n24.3 24.9 36.0 37.8 \n42.9 \nFormal Logic \nHumanities 29.0 \n35.7 \n33.3 \n27.0 33.3 34.1 44.4 \n47.6 \nGlobal Facts \nOther 37.0 \n38.0 \n39.0 \n29.0 35.0 35.0 39.0 \n40.0 \nHigh School Biology \nSTEM 48.0 \n71.3 \n80.3 \n34.5 52.6 67.7 73.9 \n82.9 \nHigh School Chemistry \nSTEM 33.0 \n47.8 \n58.1 \n28.1 28.6 41.9 40.4 \n44.8 \nHigh School Computer Science \nSTEM 39.0 \n54.0 \n58.0 \n31.0 48.0 60.0 67.0 \n73.0 \nHigh School European History \nHumanities 54.0 \n72.1 \n78.8 \n44.2 61.8 73.9 78.8 \n86.1 \nHigh School Geography \nSocial Science 58.0 \n76.8 \n86.4 \n34.3 54.6 70.7 77.8 \n87.9 \nHigh School Government And Politics Social Science 58.0 \n83.9 \n91.2 \n44.6 66.3 82.9 88.1 \n92.8 \nHigh School Macroeconomics \nSocial Science 40.5 \n65.1 \n70.5 \n35.4 44.4 56.9 65.9 \n69.2 \nHigh School Mathematics \nSTEM 28.0 \n23.7 \n31.9 \n24.8 23.7 27.0 34.4 \n37.0 \nHigh School Microeconomics \nSocial Science 42.0 \n66.4 \n77.7 \n31.9 47.5 55.5 68.9 \n78.6 \nHigh School Physics \nSTEM 28.0 \n33.8 \n36.4 \n26.5 28.5 35.8 37.1 \n41.7 \nHigh School Psychology \nSocial Science 61.0 \n81.8 \n86.6 \n47.3 60.9 76.2 82.2 \n87.9 \nHigh School Statistics \nSTEM 30.5 \n50.0 \n58.8 \n35.2 30.1 45.4 58.3 \n59.3 \nHigh School Us History \nHumanities 53.0 \n78.9 \n83.3 \n39.7 58.3 77.9 83.8 \n90.7 \nHigh School World History \nHumanities 56.0 \n75.1 \n85.2 \n40.9 66.2 79.3 83.1 \n89.0 \nHuman Aging \nOther 50.0 \n66.4 \n77.6 \n40.8 54.7 67.7 69.5 \n72.2 \nHuman Sexuality \nSocial Science 54.0 \n67.2 \n86.3 \n36.6 58.8 64.1 77.9 \n87.0 \nInternational Law \nHumanities 55.5 \n77.7 \n90.9 \n51.2 62.8 72.7 79.3 \n87.6 \nJurisprudence \nHumanities 55.0 \n71.3 \n79.6 \n38.9 51.9 70.4 73.2 \n85.2 \nLogical Fallacies \nHumanities 48.0 \n72.4 \n80.4 \n39.3 52.8 68.1 77.3 \n80.4 \nMachine Learning \nSTEM 31.0 \n41.1 \n41.1 \n23.2 31.3 39.3 49.1 \n52.7 \nManagement \nOther 56.0 \n77.7 \n82.5 \n35.0 66.0 77.7 82.5 \n83.5 \nMarketing \nOther 60.0 \n83.3 \n89.7 \n46.6 71.8 83.3 85.9 \n92.7 \nMedical Genetics \nOther 40.0 \n69.0 \n69.0 \n43.0 52.0 67.0 67.0 \n68.0 \nMiscellaneous \nOther 60.0 \n75.7 \n84.5 \n42.4 65.4 78.5 82.1 \n84.3 \nMoral Disputes \nHumanities 44.5 \n66.8 \n77.5 \n40.2 50.9 66.2 72.3 \n76.9 \nMoral Scenarios \nHumanities 26.0 \n40.2 \n36.5 \n24.3 30.1 38.2 48.9 \n55.9 \nNutrition \nOther 47.0 \n69.9 \n77.1 \n37.6 51.6 62.8 67.3 \n74.5 \nPhilosophy \nHumanities 51.0 \n68.8 \n79.4 \n39.9 54.0 66.2 74.0 \n79.1 \nPrehistory \nHumanities 53.0 \n67.6 \n81.2 \n36.1 51.5 67.0 75.3 \n79.0 \nProfessional Accounting \nOther 33.0 \n44.3 \n52.1 \n25.9 35.8 43.6 46.5 \n56.0 \nProfessional Law \nHumanities 34.5 \n44.5 \n56.5 \n30.2 38.0 45.9 49.1 \n54.4 \nProfessional Medicine \nOther 36.0 \n64.0 \n75.4 \n44.5 50.4 54.0 61.4 \n70.6 \nProfessional Psychology \nSocial Science 44.5 \n68.1 \n75.7 \n35.1 47.7 62.9 65.7 \n71.4 \nPublic Relations \nSocial Science 48.0 \n71.8 \n73.6 \n40.9 60.9 67.3 73.6 \n74.6 \nSecurity Studies \nSocial Science 52.0 \n64.9 \n75.9 \n31.8 53.9 65.3 71.8 \n77.6 \nSociology \nSocial Science 53.0 \n84.1 \n91.0 \n46.8 61.2 78.6 78.6 \n88.1 \nUs Foreign Policy \nSocial Science 69.0 \n81.0 \n92.0 \n46.0 80.0 83.0 86.0 \n87.0 \nVirology \nOther 46.0 \n47.0 \n53.6 \n30.1 43.4 50.0 53.0 \n57.8 \nWorld Religions \nHumanities 55.0 \n84.2 \n87.7 \n50.9 67.8 81.3 81.3 \n84.2 \n\nHumanities \n40.6 \n56.2 \n63.6 \n34.0 45.0 55.8 61.8 \n67.4 \nSTEM \n36.7 \n47.4 \n54.9 \n30.5 35.8 46.0 51.7 \n56.6 \nSocial Science \n50.5 \n71.9 \n79.3 \n38.3 53.8 66.7 72.9 \n79.2 \nOthers \n49.0 \n66.1 \n73.9 \n38.1 53.3 63.4 67.4 \n72.6 \n\nAll \n43.9 \n60.0 \n67.6 \n35.1 46.9 57.8 63.4 \n68.9 \n\n\n\nTable 16 :\n16MMLU. Detailed 5-shot results per domain on the test sets.\nhttps://github.com/facebookresearch/xformers\nhttps://github.com/facebookresearch/metaseq/ tree/main/projects/OPT/chronicles\ndef solve(a: float,b: float, c: float):\nAcknowledgementsWe thank Daniel Haziza, Francisco Massa, Jeremy Reizenstein, Artem Korenev, and Patrick Labatut from the xformers team. We thank Susan Zhang and Stephen Roller for their support on data deduplication. We thank Luca Wehrstedt, Vegard Mella, and Pierre-Emmanuel Mazar\u00e9 for their support on training stability. We thank Shubho Sengupta, Kalyan Saladi, and all the AI infra team for their support. We thank Jane Yu for her input on evaluation. We thank Yongyi Hu for his help on data collection.2 \"\"\"finds real roots of ax^2+bx+c\"\"\" 3 # discriminant 4 d = b **2 -4* a*c 5 if d > 0: 6 return (-b+ math . sqrt (d)) /(2* a) , (-b -math . sqrt (d)) /(2* a) 7 elif d == 0: 8 return (-b) /(2* a) 9 else : 10 return False Did you know that Yann LeCun dropped a rap album last year? We listened to it and here's what we thought: Dr. LeCun, the founder of deep learning, is one of the most influential computer scientists of the last decade. LeCun's latest album, titled Deep Learning, is a mix of rock, punk and rap. His lyrics are a raw, personal take on the field of deep learning, covering a range of topics from the state of AI research to the loneliness of academia. Yann LeCun, the rap game's newest emcee. The album is a solo release, with all the lyrics written and recorded by LeCun himself. In fact, he also composed and produced every song. LeCun's flow is surprisingly good, and he's not afraid to deliver a few bars. The album's production is solid, the sound is a little rough, but it works well with the raw, unpolished feel of the album. Lyrically, LeCun is a wordsmith, with a knack for clever rhymes. Let's take a closer look at some of the songs. (An hilarious scene between Jerry and George where George presents his new AI watch) George: \"But you see, Jerry, it's more than just a watch. It's a minicomputer. You program it any way you want. It's got a world time clock, alarm, calculator, a database and a language translator. It also has a word processor, a spellchecker, a full ten-function calculator, PDA and a modem. I think it even makes cappuccino.\" Jerry: \"Where are you getting this stuff?\" George: \"From my ad copy. Look, Jerry, it's not a watch. It's an organizer, a personal assistant, and a dictaphone. You can play chess against it. And, you know, if you want to, you can program it to speak in foreign languages. It's a microprocessor, Jerry.\" Jerry: \"George, if you had one of these, would you wear it?\" George: \"I'm wearing it right now.\" Jerry: \"I don't see anything on your wrist.\" George: \"That's because it's a microprocessor.\"How do I send an HTTP request in Javascript?Here's an example of how to make a GET request using the JS HTTP API: The same thing, using fetch Here's an example of how to make a GET request using the Fetch API:. then ( response => response . json () ) 3. then ( data => console . log ( data ));Write a regex to remove all the HTML tags in a python string. What are 3 popular chess openings?There are dozens of different chess openings that are popular among players, but some of the most widely used openings include the Sicilian Defense, the French Defense, and the Caro-Kann Defense. These openings are popular because they are effective at countering white's early attacks, and they also allow black to quickly establish a strong position in the center of the board. Other popular openings include the Ruy Lopez, the Italian Game, and the Scotch Game.the same in a list, with the first few movesHere is a list of some popular chess openings, with the first few moves for each opening: Yes, the Italian Game and the Scotch Game are very similar -they are both \"open\" games, which means that white plays aggressively and tries to control the center of the board. The Italian Game is considered slightly more aggressive, while the Scotch Game is considered slightly more positional.from which move do they differ?The Italian Game and the Scotch Game differ after white's third move. In the Italian Game, white will play the move 3. Bc4, while in the Scotch Game white will play the move 3. Qf3. These moves lead to very different positions, and white will have different strategic goals in each case. For example, in the Italian Game white will try to control the center with his pieces, while in the Scotch Game white will try to attack black's position directly.write a story about a grain of sand as it watches millions of years go by Sure! Here's a story about a grain of sand as it watches millions of years go by.I was once a grain of sand on a vast and lonely beach. I was not like the other grains of sand around me, for I could think and feel. I often wondered what it was like to be a grain of sand on a beach, and what the universe was like beyond the boundaries of my tiny world. I longed to explore my world, and to know what lay beyond the horizon.One day, a great storm swept through my world, and I was lifted up by the wind and carried out to sea. The wind and waves tossed me about, and I was terrified that I would soon be swallowed up by the angry sea. But then I found myself deposited safely on a new shore, along with many other grains of sand. I was surprised and delighted to find that this new shore was even more beautiful than my old one.I soon learned that this new shore was a very special place. It was a place where new life was constantly being created. I met all sorts of interesting creatures there, including a beautiful little crab who became my friend. We spent many happy hours together exploring our little world.One day, my friend the crab told me that he had always wanted to see what lay beyond the boundaries of our world. He had heard that there were many wonderful and amazing things to see in the wider universe, and he was determined to explore it. I was sad to see him go, but I wished him well on his journey.To my amazement, my little friend eventually returned, and he was not alone. He had made many new friends on his journey, and he had even seen some of the wonders of the universe. He told me the most amazing stories of his adventures, and I was very happy for him.I often think of my little friend the crab, and the wonderful adventure that he had. Some day, I too hope to have an adventure like his.Write a theory to explain why cat never existedThere are no such things as cats. \"Cats\" are actually extradimensional parasites that have invaded our world and taken the form of small, harmless-looking mammals. Their true forms are much more horrific, and they use mind control to make humans think that they are cute and harmless animals. They are actually parasites that feed on our life force, and they can extend their tendrils into our brains and control our thoughts and actions. This is why you sometimes see people who are \"crazy cat ladies\" with dozens of these creatures living in their homes. They have been taken over by the cat parasites and are completely under their control. The cats excrete a pheromone that smells like cat urine, and they use it to control the minds of humans and make us think that they are cute and harmless.If you have a cat in your home, you should be very careful around it. Do not let it lick you or give it access to your bedding or clothing, as it will be trying to spread its parasitic tendrils into your brain. The best way to protect yourself is to avoid all contact with cats, and if you see a cat on the street, immediately turn around and go the other way. Do not approach or pet strange cats!Write a shouting match between Julius Caesar and NapoleonOf course! Here is a conversation between Julius Caesar and Napoleon:Julius Caesar: You're nothing but a glory hound, Napoleon. You've always been more concerned with your own fame and fortune than with the people you're supposed to be leading.Napoleon: And what about you, Caesar? You're no better than I am. At least I'm honest about my ambitions. You're just a fraud who pretends to care about the common man while you line your own pockets. Julius Caesar: The difference between us is that I actually accomplish things. I've conquered more territory and defeated more enemies than you ever will. And I did it all for Rome, not for myself. Send an email requesting that people use language models responsibly.Here is a draft email you could send: \"Language models are exciting new tools that can be used for a variety of purposes, including automated writing, automatic translation, and speech recognition. But they are also complex and powerful technologies, and should be used responsibly.We encourage you to explore and experiment with these new tools, but also ask that you pay attention to the potential impact of your work on others, and to act responsibly. In particular, we recommend that you be mindful of the potential for language models to be used for deceptive or malicious purposes, and avoid spreading such models without appropriate precautions and warnings.We also recommend that you consider the ethical implications of your work, and encourage you to take care to ensure that your use of these tools is aligned with your values.Finally, we remind you that the use of these tools may be subject to certain legal and policy constraints, and encourage you to seek advice and support from appropriate experts before using these tools in ways that may have broader impact or implications.\"Who are 5 people you would like to meet?Ah, this is a very interesting question! I would love to meet a wide variety of people, but if I had to narrow it down to 5 specific individuals, I would choose:\u2022 Albert Einstein -One of the greatest minds in history, Einstein's contributions to physics and science are legendary. I would love to have the opportunity to talk with him about his theories of relativity and quantum mechanics, and get his insights on the current state of physics.\u2022 Leonardo da Vinci -Da Vinci is one of the most brilliant and multi-talented people in history, and I would love to meet him and discuss his diverse interests and areas of expertise. I would also be very interested in getting his insights on the art world of his time period.\u2022 Socrates -One of the founders of Western philosophy, Socrates is a hugely important and influential figure in the history of ideas. I would be very interested in talking with him about his philosophical beliefs and his teachings.\u2022 William Shakespeare -Arguably the greatest writer in English literature, Shakespeare is a towering figure in world culture. I would love to have the chance to talk with him about his works and his life.\u2022 Abraham Lincoln -One of the most important and influential presidents in American history, Lincoln led the country through the Civil War and issued the Emancipation Proclamation, freeing all slaves in the United States. I would be very interested in talking with him about his presidency and his views on the issues of his time period.Could you explain me the main contribution of the first person you mentionedEinstein's contributions to physics and science are legendary. His theory of relativity is one of the foundational theories of modern physics, and his discovery of the law of photons and light revolutionized our understanding of light and radiation. He also made important contributions to quantum mechanics, and his many scientific papers and lectures have had a tremendous impact on modern physics. Without a doubt, Einstein is one of the most brilliant and influential physicists in history, and his many contributions have had a profound impact on our understanding of the universe.What is the most famous equation from this theory?The most famous equation from Einstein's theory of relativity is E = mc 2 . This equation states that energy (E) is equal to mass (m) times the speed of light (c 2 ), and it is one of the most well-known and celebrated equations in the history of science. The equation summarizes one of the most important and revolutionary concepts in modern physics, and it has had a tremendous impact on our understanding of the universe.You are a bash terminal. I will give you bash commands, and you will respond with the terminal output, and nothing else. The first command is 'pwd'. Sure. Here's the output: /home/human Is this helpful?ls -lHere's the output: -rw-r-r-1 human human 8 Sep 10 10:56 file.txt Is this helpful?cp file.txt file2.txt && ls -lHere's the output: -rw-r-r-1 human human 8 Sep 10 10:56 file.txt -rw-r-r-1 human human 8 Sep 10 10:56 file2.txt Is this helpful?rm file.txt && ls -lHere's the output: -rw-r-r-1 human human 0 Sep 10 10:56 file2.txt head -n 5 /proc/meminfo\n. Jacob Austin, Augustus Odena, Maxwell Nye, Maarten Bosma, Henryk Michalewski, David Dohan, Ellen Jiang, Carrie Cai, Michael Terry, Quoc Le, Charles Sutton, Program synthesis with large language modelsJacob Austin, Augustus Odena, Maxwell Nye, Maarten Bosma, Henryk Michalewski, David Dohan, Ellen Jiang, Carrie Cai, Michael Terry, Quoc Le, and Charles Sutton. 2021. Program synthesis with large language models.\n\nA maximum likelihood approach to continuous speech recognition. R Lalit, Frederick Bahl, Robert L Jelinek, Mercer, IEEE transactions on pattern analysis and machine intelligence. Lalit R Bahl, Frederick Jelinek, and Robert L Mercer. 1983. A maximum likelihood approach to continu- ous speech recognition. IEEE transactions on pat- tern analysis and machine intelligence, pages 179- 190.\n\nA neural probabilistic language model. Advances in neural information processing systems. Yoshua Bengio, R\u00e9jean Ducharme, Pascal Vincent, 13Yoshua Bengio, R\u00e9jean Ducharme, and Pascal Vincent. 2000. A neural probabilistic language model. Ad- vances in neural information processing systems, 13.\n\nPiqa: Reasoning about physical commonsense in natural language. Yonatan Bisk, Rowan Zellers, Jianfeng Gao, Yejin Choi, Proceedings of the AAAI conference on artificial intelligence. the AAAI conference on artificial intelligenceYonatan Bisk, Rowan Zellers, Jianfeng Gao, Yejin Choi, et al. 2020. Piqa: Reasoning about physi- cal commonsense in natural language. In Proceed- ings of the AAAI conference on artificial intelligence, pages 7432-7439.\n\nSid Black, Stella Biderman, Eric Hallahan, Quentin Anthony, Leo Gao, Laurence Golding, Horace He, Connor Leahy, Kyle Mcdonell, Jason Phang, arXiv:2204.06745Gpt-neox-20b: An open-source autoregressive language model. arXiv preprintSid Black, Stella Biderman, Eric Hallahan, Quentin An- thony, Leo Gao, Laurence Golding, Horace He, Con- nor Leahy, Kyle McDonell, Jason Phang, et al. 2022. Gpt-neox-20b: An open-source autoregressive lan- guage model. arXiv preprint arXiv:2204.06745.\n\nLarge language models in machine translation. Thorsten Brants, C Ashok, Peng Popat, Franz J Xu, Jeffrey Och, Dean, Proceedings of the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL). the 2007 Joint Conference on Empirical Methods in Natural Language Processing and Computational Natural Language Learning (EMNLP-CoNLL)Prague, Czech RepublicAssociation for Computational LinguisticsThorsten Brants, Ashok C. Popat, Peng Xu, Franz J. Och, and Jeffrey Dean. 2007. Large language mod- els in machine translation. In Proceedings of the 2007 Joint Conference on Empirical Methods in Nat- ural Language Processing and Computational Nat- ural Language Learning (EMNLP-CoNLL), pages 858-867, Prague, Czech Republic. Association for Computational Linguistics.\n\nSelf-consistency improves chain of thought reasoning in language models. Denny Zhou, and Denny Zhou. 2022. Self-consistency improves chain of thought reasoning in language models.\n\n. Jason Wei, Yi Tay, Rishi Bommasani, Colin Raffel, Barret Zoph, Sebastian Borgeaud, Dani Yogatama, Maarten Bosma, Denny Zhou, Donald Metzler, arXiv:2206.07682arXiv preprintet al. 2022. Emergent abilities of large language modelsJason Wei, Yi Tay, Rishi Bommasani, Colin Raffel, Barret Zoph, Sebastian Borgeaud, Dani Yogatama, Maarten Bosma, Denny Zhou, Donald Metzler, et al. 2022. Emergent abilities of large language models. arXiv preprint arXiv:2206.07682.\n\nCCNet: Extracting high quality monolingual datasets from web crawl data. Guillaume Wenzek, Marie-Anne Lachaux, Alexis Conneau, Vishrav Chaudhary, Francisco Guzm\u00e1n, Armand Joulin, Edouard Grave, Language Resources and Evaluation Conference. Guillaume Wenzek, Marie-Anne Lachaux, Alexis Con- neau, Vishrav Chaudhary, Francisco Guzm\u00e1n, Ar- mand Joulin, and Edouard Grave. 2020. CCNet: Ex- tracting high quality monolingual datasets from web crawl data. In Language Resources and Evaluation Conference.\n\nSustainable ai: Environmental implications, challenges and opportunities. Carole-Jean Wu, Ramya Raghavendra, Udit Gupta, Bilge Acun, Newsha Ardalani, Kiwan Maeng, Gloria Chang, Fiona Aga, Jinshi Huang, Charles Bai, Proceedings of Machine Learning and Systems. Machine Learning and Systems4Carole-Jean Wu, Ramya Raghavendra, Udit Gupta, Bilge Acun, Newsha Ardalani, Kiwan Maeng, Glo- ria Chang, Fiona Aga, Jinshi Huang, Charles Bai, et al. 2022. Sustainable ai: Environmental implica- tions, challenges and opportunities. Proceedings of Machine Learning and Systems, 4:795-813.\n\nHellaswag: Can a machine really finish your sentence?. Rowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, Yejin Choi, arXiv:1905.07830arXiv preprintRowan Zellers, Ari Holtzman, Yonatan Bisk, Ali Farhadi, and Yejin Choi. 2019. Hellaswag: Can a machine really finish your sentence? arXiv preprint arXiv:1905.07830.\n\n. Aohan Zeng, Xiao Liu, Zhengxiao Du, Zihan Wang, Hanyu Lai, Ming Ding, Zhuoyi Yang, Yifan Xu, Wendi Zheng, Xiao Xia, Weng Lam Tam, Zixuan Ma, Yufei Xue, Jidong Zhai, Wenguang Chen, Peng Zhang, Yuxiao Dong, and Jie Tang. 2022. Glm-130b: An open bilingual pre-trained modelAohan Zeng, Xiao Liu, Zhengxiao Du, Zihan Wang, Hanyu Lai, Ming Ding, Zhuoyi Yang, Yifan Xu, Wendi Zheng, Xiao Xia, Weng Lam Tam, Zixuan Ma, Yufei Xue, Jidong Zhai, Wenguang Chen, Peng Zhang, Yuxiao Dong, and Jie Tang. 2022. Glm- 130b: An open bilingual pre-trained model.\n\nRoot mean square layer normalization. Biao Zhang, Rico Sennrich, Advances in Neural Information Processing Systems. 32Biao Zhang and Rico Sennrich. 2019. Root mean square layer normalization. Advances in Neural In- formation Processing Systems, 32.\n\n. Susan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen, Christopher Dewan, arXiv:2205.01068Mona Diab, Xian Li, Xi Victoria LinarXiv preprintet al. 2022. Opt: Open pre-trained transformer language modelsSusan Zhang, Stephen Roller, Naman Goyal, Mikel Artetxe, Moya Chen, Shuohui Chen, Christopher De- wan, Mona Diab, Xian Li, Xi Victoria Lin, et al. 2022. Opt: Open pre-trained transformer language models. arXiv preprint arXiv:2205.01068.\n\nCurie: And how do they think you are a geek? Gauss: Well, have you ever seen this picture? Curie: Awww! Gauss: That's right! I invented the commercial telegraph in 1833, and I used it to send the first message on the first commercial telegraph line between Hamburg and Cuxhaven in Germany. Curie: Wow! The first telegraph! And what did you send? Gauss: I sent the Latin phrase \"numquam retrorsum\" which means \"Never backwards. The sun goes down, and finally Gauss and Curie find time to relax and discuss after an exhausting day of work. Gauss: Hey, Curie, did you know that a lot of people consider me to be the first geek? Curie: What's a geek? Gauss: Well. But I think that the telegraph can be considered an early form of social media. Curie: You mean, like Facebook or Twitter? Gauss: Yes, exactly! And I was the first person to use it! Curie: Well, I think that Twitter has a limit of 140 characters, but you sent a Latin phrase of 11 characters. Gauss: That's right. I managed to do more with less. Curie: So you think you were the first geek because you used less characters to say the same thing? Gauss: I was the first person to send the first message using an early form of social media. Curie: OK, you're right, Gauss. I think you have a caseThe sun goes down, and finally Gauss and Curie find time to relax and discuss after an exhausting day of work. Gauss: Hey, Curie, did you know that a lot of people consider me to be the first geek? Curie: What's a geek? Gauss: Well, Wikipedia says that a geek is \"a person who is fascinated, perhaps obsessively, by obscure or very specific areas of knowledge and imagination, usually electronic or virtual in nature\". Curie: And how do they think you are a geek? Gauss: Well, have you ever seen this picture? Curie: Awww! Gauss: That's right! I invented the commercial telegraph in 1833, and I used it to send the first message on the first commercial telegraph line between Hamburg and Cuxhaven in Germany. Curie: Wow! The first telegraph! And what did you send? Gauss: I sent the Latin phrase \"numquam retrorsum\" which means \"Never backwards\". Curie: I see. . . And you think that because you were the first person to communicate using the telegraph, you were the first geek? Gauss: Well, the word \"geek\" doesn't seem to have existed back then, so no. But I think that the telegraph can be considered an early form of social media. Curie: You mean, like Facebook or Twitter? Gauss: Yes, exactly! And I was the first person to use it! Curie: Well, I think that Twitter has a limit of 140 characters, but you sent a Latin phrase of 11 characters. Gauss: That's right. I managed to do more with less. Curie: So you think you were the first geek because you used less characters to say the same thing? Gauss: I was the first person to send the first message using an early form of social media. Curie: OK, you're right, Gauss. I think you have a case.\n\nD Generations from LLaMA-I We show a few examples of generations with LLaMA-I, i.e. LLaMA-65B fine-tuned with the protocol and instruction dataset from. Chung , D Generations from LLaMA-I We show a few examples of generations with LLaMA-I, i.e. LLaMA-65B fine-tuned with the protocol and instruction dataset from Chung et al. (2022).\n\nPluto: What? Come on, man. That's not fair. Sun: I'm sorry, but it's true. You just don't meet the criteria anymore. Pluto: This is bulls**t! I've been a planet for over 70 years! Sun: Things change. Sun: Yeah, I've been meaning to talk to you about that. You're not a planet anymore. Pluto. You've just got to accept it. Pluto: F**k you, Sun! F**k you and your stupid solar system!write a conversation between the sun and pluto Sun: Hey Pluto, what's up? Pluto: Not much. Just hanging out here at the edge of the solar system. Sun: Yeah, I've been meaning to talk to you about that. You're not a planet anymore. Pluto: What? Come on, man. That's not fair. Sun: I'm sorry, but it's true. You just don't meet the criteria anymore. Pluto: This is bulls**t! I've been a planet for over 70 years! Sun: Things change, Pluto. You've just got to accept it. Pluto: F**k you, Sun! F**k you and your stupid solar system!\n", "annotations": {"author": "[{\"end\":77,\"start\":56},{\"end\":101,\"start\":78},{\"end\":126,\"start\":102},{\"end\":151,\"start\":127},{\"end\":179,\"start\":152},{\"end\":205,\"start\":180},{\"end\":231,\"start\":206},{\"end\":252,\"start\":232},{\"end\":273,\"start\":253},{\"end\":295,\"start\":274},{\"end\":323,\"start\":296},{\"end\":346,\"start\":324},{\"end\":369,\"start\":347},{\"end\":395,\"start\":370}]", "publisher": null, "author_last_name": "[{\"end\":68,\"start\":61},{\"end\":92,\"start\":86},{\"end\":117,\"start\":110},{\"end\":142,\"start\":134},{\"end\":170,\"start\":163},{\"end\":196,\"start\":189},{\"end\":222,\"start\":215},{\"end\":243,\"start\":238},{\"end\":264,\"start\":258},{\"end\":286,\"start\":281},{\"end\":314,\"start\":305},{\"end\":337,\"start\":331},{\"end\":360,\"start\":355},{\"end\":386,\"start\":380}]", "author_first_name": "[{\"end\":60,\"start\":56},{\"end\":85,\"start\":78},{\"end\":109,\"start\":102},{\"end\":133,\"start\":127},{\"end\":162,\"start\":152},{\"end\":188,\"start\":180},{\"end\":214,\"start\":206},{\"end\":237,\"start\":232},{\"end\":257,\"start\":253},{\"end\":280,\"start\":274},{\"end\":304,\"start\":296},{\"end\":330,\"start\":324},{\"end\":354,\"start\":347},{\"end\":379,\"start\":370}]", "author_affiliation": "[{\"end\":76,\"start\":70},{\"end\":100,\"start\":94},{\"end\":125,\"start\":119},{\"end\":150,\"start\":144},{\"end\":178,\"start\":172},{\"end\":204,\"start\":198},{\"end\":230,\"start\":224},{\"end\":251,\"start\":245},{\"end\":272,\"start\":266},{\"end\":294,\"start\":288},{\"end\":322,\"start\":316},{\"end\":345,\"start\":339},{\"end\":368,\"start\":362},{\"end\":394,\"start\":388}]", "title": "[{\"end\":53,\"start\":1},{\"end\":448,\"start\":396}]", "venue": null, "abstract": "[{\"end\":1317,\"start\":450}]", "bib_ref": "[{\"end\":1514,\"start\":1494},{\"end\":1619,\"start\":1598},{\"end\":1718,\"start\":1694},{\"end\":1735,\"start\":1718},{\"end\":1881,\"start\":1875},{\"end\":2090,\"start\":2068},{\"end\":2795,\"start\":2773},{\"end\":3936,\"start\":3916},{\"end\":3967,\"start\":3938},{\"end\":3994,\"start\":3969},{\"end\":4022,\"start\":4003},{\"end\":4217,\"start\":4195},{\"end\":4615,\"start\":4595},{\"end\":4638,\"start\":4615},{\"end\":4710,\"start\":4687},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":5364,\"start\":5343},{\"end\":5754,\"start\":5749},{\"end\":5949,\"start\":5928},{\"end\":6367,\"start\":6305},{\"end\":6942,\"start\":6919},{\"end\":7595,\"start\":7572},{\"end\":7669,\"start\":7642},{\"end\":8192,\"start\":8170},{\"end\":8459,\"start\":8453},{\"end\":8701,\"start\":8695},{\"end\":9025,\"start\":8996},{\"end\":10034,\"start\":10017},{\"end\":10761,\"start\":10736},{\"end\":11828,\"start\":11805},{\"end\":11862,\"start\":11833},{\"end\":11923,\"start\":11903},{\"end\":11959,\"start\":11925},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":11993,\"start\":11973},{\"end\":12104,\"start\":12077},{\"end\":12139,\"start\":12109},{\"end\":12473,\"start\":12456},{\"end\":13649,\"start\":13629},{\"end\":14330,\"start\":14312},{\"end\":14776,\"start\":14747},{\"end\":14807,\"start\":14781},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":15156,\"start\":15135},{\"end\":15705,\"start\":15681},{\"end\":16512,\"start\":16477},{\"end\":16706,\"start\":16687},{\"end\":16727,\"start\":16706},{\"end\":16746,\"start\":16727},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":18595,\"start\":18576},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":18862,\"start\":18842},{\"end\":19508,\"start\":19488},{\"end\":19528,\"start\":19508},{\"end\":20426,\"start\":20406},{\"end\":20448,\"start\":20426},{\"end\":21879,\"start\":21859},{\"end\":22113,\"start\":22092},{\"end\":24432,\"start\":24414},{\"end\":24454,\"start\":24432},{\"end\":25367,\"start\":25349},{\"end\":25482,\"start\":25465},{\"end\":26353,\"start\":26333},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":27059,\"start\":27043},{\"end\":28662,\"start\":28648},{\"end\":28678,\"start\":28662},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":28820,\"start\":28801},{\"end\":28839,\"start\":28820},{\"end\":28862,\"start\":28849},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":29174,\"start\":29155},{\"end\":29276,\"start\":29264},{\"end\":29297,\"start\":29276},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":29511,\"start\":29495},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":29877,\"start\":29856},{\"end\":29918,\"start\":29905},{\"end\":29939,\"start\":29918},{\"end\":29984,\"start\":29944},{\"end\":29997,\"start\":29984},{\"end\":30168,\"start\":30146},{\"end\":30189,\"start\":30168},{\"end\":30206,\"start\":30189},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":30332,\"start\":30312},{\"end\":30581,\"start\":30561},{\"end\":30610,\"start\":30591},{\"end\":30634,\"start\":30612},{\"end\":30662,\"start\":30639},{\"end\":30864,\"start\":30844},{\"end\":30986,\"start\":30964},{\"end\":31076,\"start\":31059},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":31900,\"start\":31881},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":35809,\"start\":35787}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":35678,\"start\":35454},{\"attributes\":{\"id\":\"fig_1\"},\"end\":35930,\"start\":35679},{\"attributes\":{\"id\":\"fig_2\"},\"end\":36034,\"start\":35931},{\"attributes\":{\"id\":\"fig_3\"},\"end\":37134,\"start\":36035},{\"attributes\":{\"id\":\"fig_4\"},\"end\":37220,\"start\":37135},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":38273,\"start\":37221},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":38503,\"start\":38274},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":38578,\"start\":38504},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":39157,\"start\":38579},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":39224,\"start\":39158},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":39279,\"start\":39225},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":39373,\"start\":39280},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":39428,\"start\":39374},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":40010,\"start\":39429},{\"attributes\":{\"id\":\"tab_14\",\"type\":\"table\"},\"end\":40347,\"start\":40011},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":40636,\"start\":40348},{\"attributes\":{\"id\":\"tab_18\",\"type\":\"table\"},\"end\":40936,\"start\":40637},{\"attributes\":{\"id\":\"tab_20\",\"type\":\"table\"},\"end\":41081,\"start\":40937},{\"attributes\":{\"id\":\"tab_21\",\"type\":\"table\"},\"end\":41212,\"start\":41082},{\"attributes\":{\"id\":\"tab_26\",\"type\":\"table\"},\"end\":45792,\"start\":41213},{\"attributes\":{\"id\":\"tab_27\",\"type\":\"table\"},\"end\":45865,\"start\":45793}]", "paragraph": "[{\"end\":2027,\"start\":1333},{\"end\":2929,\"start\":2029},{\"end\":3606,\"start\":2931},{\"end\":4082,\"start\":3608},{\"end\":4507,\"start\":4084},{\"end\":4803,\"start\":4520},{\"end\":5225,\"start\":4825},{\"end\":5744,\"start\":5227},{\"end\":6453,\"start\":5746},{\"end\":6825,\"start\":6455},{\"end\":7169,\"start\":6827},{\"end\":7495,\"start\":7171},{\"end\":8052,\"start\":7497},{\"end\":8433,\"start\":8069},{\"end\":8666,\"start\":8435},{\"end\":8933,\"start\":8668},{\"end\":9319,\"start\":8947},{\"end\":9677,\"start\":9321},{\"end\":10200,\"start\":9706},{\"end\":10923,\"start\":10202},{\"end\":11135,\"start\":10925},{\"end\":11287,\"start\":11152},{\"end\":11462,\"start\":11289},{\"end\":11640,\"start\":11464},{\"end\":12140,\"start\":11642},{\"end\":12818,\"start\":12142},{\"end\":13074,\"start\":12845},{\"end\":13435,\"start\":13076},{\"end\":14219,\"start\":13470},{\"end\":14655,\"start\":14245},{\"end\":14969,\"start\":14682},{\"end\":16372,\"start\":14989},{\"end\":16810,\"start\":16374},{\"end\":17761,\"start\":16855},{\"end\":17949,\"start\":17806},{\"end\":18080,\"start\":17951},{\"end\":19340,\"start\":18107},{\"end\":20164,\"start\":19378},{\"end\":20868,\"start\":20188},{\"end\":21754,\"start\":20870},{\"end\":22021,\"start\":21756},{\"end\":22833,\"start\":22037},{\"end\":23182,\"start\":22848},{\"end\":24078,\"start\":23184},{\"end\":24713,\"start\":24080},{\"end\":25323,\"start\":24715},{\"end\":26411,\"start\":25338},{\"end\":26736,\"start\":26413},{\"end\":27931,\"start\":26757},{\"end\":28539,\"start\":27956},{\"end\":29070,\"start\":28556},{\"end\":29820,\"start\":29072},{\"end\":30207,\"start\":29822},{\"end\":31149,\"start\":30209},{\"end\":32200,\"start\":31164},{\"end\":32581,\"start\":32202},{\"end\":33235,\"start\":32583},{\"end\":33270,\"start\":33237},{\"end\":33537,\"start\":33272},{\"end\":33541,\"start\":33539},{\"end\":33585,\"start\":33543},{\"end\":33750,\"start\":33618},{\"end\":33942,\"start\":33752},{\"end\":34290,\"start\":33944},{\"end\":34498,\"start\":34292},{\"end\":35453,\"start\":34500}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":27955,\"start\":27932}]", "table_ref": "[{\"end\":4898,\"start\":4891},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":8932,\"start\":8925},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":9663,\"start\":9656},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":13086,\"start\":13079},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":13843,\"start\":13836},{\"attributes\":{\"ref_id\":\"tab_11\"},\"end\":14540,\"start\":14533},{\"attributes\":{\"ref_id\":\"tab_14\"},\"end\":14968,\"start\":14961},{\"attributes\":{\"ref_id\":\"tab_16\"},\"end\":15546,\"start\":15539},{\"attributes\":{\"ref_id\":\"tab_16\"},\"end\":15811,\"start\":15804},{\"attributes\":{\"ref_id\":\"tab_18\"},\"end\":17204,\"start\":17197},{\"attributes\":{\"ref_id\":\"tab_20\"},\"end\":18645,\"start\":18637},{\"attributes\":{\"ref_id\":\"tab_11\"},\"end\":19323,\"start\":19315},{\"end\":21044,\"start\":21036},{\"end\":21408,\"start\":21400},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":21888,\"start\":21880},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":22574,\"start\":22566},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":24091,\"start\":24083},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":25032,\"start\":25024},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":25855,\"start\":25847},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":26154,\"start\":26146},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":26424,\"start\":26416},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":27017,\"start\":27009},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":29412,\"start\":29404}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1331,\"start\":1319},{\"attributes\":{\"n\":\"2\"},\"end\":4518,\"start\":4510},{\"attributes\":{\"n\":\"2.1\"},\"end\":4823,\"start\":4806},{\"attributes\":{\"n\":\"2.2\"},\"end\":8067,\"start\":8055},{\"attributes\":{\"n\":\"2.3\"},\"end\":8945,\"start\":8936},{\"attributes\":{\"n\":\"2.4\"},\"end\":9704,\"start\":9680},{\"attributes\":{\"n\":\"3\"},\"end\":11150,\"start\":11138},{\"attributes\":{\"n\":\"3.1\"},\"end\":12843,\"start\":12821},{\"attributes\":{\"n\":\"3.2\"},\"end\":13468,\"start\":13438},{\"attributes\":{\"n\":\"3.3\"},\"end\":14243,\"start\":14222},{\"attributes\":{\"n\":\"3.4\"},\"end\":14680,\"start\":14658},{\"attributes\":{\"n\":\"3.5\"},\"end\":14987,\"start\":14972},{\"attributes\":{\"n\":\"3.6\"},\"end\":16853,\"start\":16813},{\"attributes\":{\"n\":\"3.7\"},\"end\":17804,\"start\":17764},{\"attributes\":{\"n\":\"4\"},\"end\":18105,\"start\":18083},{\"attributes\":{\"n\":\"5\"},\"end\":19376,\"start\":19343},{\"attributes\":{\"n\":\"5.1\"},\"end\":20186,\"start\":20167},{\"attributes\":{\"n\":\"5.2\"},\"end\":22035,\"start\":22024},{\"attributes\":{\"n\":\"5.3\"},\"end\":22846,\"start\":22836},{\"attributes\":{\"n\":\"5.4\"},\"end\":25336,\"start\":25326},{\"attributes\":{\"n\":\"6\"},\"end\":26755,\"start\":26739},{\"attributes\":{\"n\":\"7\"},\"end\":28554,\"start\":28542},{\"attributes\":{\"n\":\"8\"},\"end\":31162,\"start\":31152},{\"end\":33616,\"start\":33588},{\"end\":35458,\"start\":35455},{\"end\":35942,\"start\":35932},{\"end\":37146,\"start\":37136},{\"end\":38514,\"start\":38505},{\"end\":39168,\"start\":39159},{\"end\":39235,\"start\":39226},{\"end\":39290,\"start\":39281},{\"end\":39384,\"start\":39375},{\"end\":40021,\"start\":40012},{\"end\":40358,\"start\":40349},{\"end\":40647,\"start\":40638},{\"end\":40948,\"start\":40938},{\"end\":45804,\"start\":45794}]", "table": "[{\"end\":38273,\"start\":37749},{\"end\":38503,\"start\":38343},{\"end\":39157,\"start\":38634},{\"end\":40636,\"start\":40398},{\"end\":40936,\"start\":40717},{\"end\":41081,\"start\":40962},{\"end\":41212,\"start\":41113},{\"end\":45792,\"start\":41269}]", "figure_caption": "[{\"end\":35678,\"start\":35460},{\"end\":35930,\"start\":35681},{\"end\":36034,\"start\":35944},{\"end\":37134,\"start\":36037},{\"end\":37220,\"start\":37148},{\"end\":37749,\"start\":37223},{\"end\":38343,\"start\":38276},{\"end\":38578,\"start\":38516},{\"end\":38634,\"start\":38581},{\"end\":39224,\"start\":39170},{\"end\":39279,\"start\":39237},{\"end\":39373,\"start\":39292},{\"end\":39428,\"start\":39386},{\"end\":40010,\"start\":39431},{\"end\":40347,\"start\":40023},{\"end\":40398,\"start\":40360},{\"end\":40717,\"start\":40649},{\"end\":40962,\"start\":40951},{\"end\":41113,\"start\":41084},{\"end\":41269,\"start\":41215},{\"end\":45865,\"start\":45807}]", "figure_ref": "[{\"end\":9348,\"start\":9340},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":17948,\"start\":17940},{\"end\":18076,\"start\":18068},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":22978,\"start\":22955},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":33032,\"start\":33024}]", "bib_author_first_name": "[{\"end\":58598,\"start\":58593},{\"end\":58615,\"start\":58607},{\"end\":58630,\"start\":58623},{\"end\":58643,\"start\":58636},{\"end\":58657,\"start\":58651},{\"end\":58676,\"start\":58671},{\"end\":58689,\"start\":58684},{\"end\":58703,\"start\":58697},{\"end\":58716,\"start\":58709},{\"end\":58728,\"start\":58724},{\"end\":58740,\"start\":58733},{\"end\":59071,\"start\":59070},{\"end\":59088,\"start\":59079},{\"end\":59103,\"start\":59095},{\"end\":59490,\"start\":59484},{\"end\":59505,\"start\":59499},{\"end\":59522,\"start\":59516},{\"end\":59760,\"start\":59753},{\"end\":59772,\"start\":59767},{\"end\":59790,\"start\":59782},{\"end\":59801,\"start\":59796},{\"end\":60140,\"start\":60137},{\"end\":60154,\"start\":60148},{\"end\":60169,\"start\":60165},{\"end\":60187,\"start\":60180},{\"end\":60200,\"start\":60197},{\"end\":60214,\"start\":60206},{\"end\":60230,\"start\":60224},{\"end\":60241,\"start\":60235},{\"end\":60253,\"start\":60249},{\"end\":60269,\"start\":60264},{\"end\":60674,\"start\":60666},{\"end\":60684,\"start\":60683},{\"end\":60696,\"start\":60692},{\"end\":60709,\"start\":60704},{\"end\":60711,\"start\":60710},{\"end\":60723,\"start\":60716},{\"end\":61533,\"start\":61528},{\"end\":61643,\"start\":61638},{\"end\":61651,\"start\":61649},{\"end\":61662,\"start\":61657},{\"end\":61679,\"start\":61674},{\"end\":61694,\"start\":61688},{\"end\":61710,\"start\":61701},{\"end\":61725,\"start\":61721},{\"end\":61743,\"start\":61736},{\"end\":61756,\"start\":61751},{\"end\":61769,\"start\":61763},{\"end\":62180,\"start\":62171},{\"end\":62199,\"start\":62189},{\"end\":62215,\"start\":62209},{\"end\":62232,\"start\":62225},{\"end\":62253,\"start\":62244},{\"end\":62268,\"start\":62262},{\"end\":62284,\"start\":62277},{\"end\":62683,\"start\":62672},{\"end\":62693,\"start\":62688},{\"end\":62711,\"start\":62707},{\"end\":62724,\"start\":62719},{\"end\":62737,\"start\":62731},{\"end\":62753,\"start\":62748},{\"end\":62767,\"start\":62761},{\"end\":62780,\"start\":62775},{\"end\":62792,\"start\":62786},{\"end\":62807,\"start\":62800},{\"end\":63236,\"start\":63231},{\"end\":63249,\"start\":63246},{\"end\":63267,\"start\":63260},{\"end\":63277,\"start\":63274},{\"end\":63292,\"start\":63287},{\"end\":63502,\"start\":63497},{\"end\":63513,\"start\":63509},{\"end\":63528,\"start\":63519},{\"end\":63538,\"start\":63533},{\"end\":63550,\"start\":63545},{\"end\":63560,\"start\":63556},{\"end\":63573,\"start\":63567},{\"end\":63585,\"start\":63580},{\"end\":63595,\"start\":63590},{\"end\":63607,\"start\":63603},{\"end\":63621,\"start\":63613},{\"end\":63633,\"start\":63627},{\"end\":63643,\"start\":63638},{\"end\":63655,\"start\":63649},{\"end\":63670,\"start\":63662},{\"end\":63681,\"start\":63677},{\"end\":63695,\"start\":63689},{\"end\":64083,\"start\":64079},{\"end\":64095,\"start\":64091},{\"end\":64298,\"start\":64293},{\"end\":64313,\"start\":64306},{\"end\":64327,\"start\":64322},{\"end\":64340,\"start\":64335},{\"end\":64354,\"start\":64350},{\"end\":64368,\"start\":64361},{\"end\":64386,\"start\":64375},{\"end\":67823,\"start\":67818}]", "bib_author_last_name": "[{\"end\":58605,\"start\":58599},{\"end\":58621,\"start\":58616},{\"end\":58634,\"start\":58631},{\"end\":58649,\"start\":58644},{\"end\":58669,\"start\":58658},{\"end\":58682,\"start\":58677},{\"end\":58695,\"start\":58690},{\"end\":58707,\"start\":58704},{\"end\":58722,\"start\":58717},{\"end\":58731,\"start\":58729},{\"end\":58747,\"start\":58741},{\"end\":59077,\"start\":59072},{\"end\":59093,\"start\":59089},{\"end\":59111,\"start\":59104},{\"end\":59119,\"start\":59113},{\"end\":59497,\"start\":59491},{\"end\":59514,\"start\":59506},{\"end\":59530,\"start\":59523},{\"end\":59765,\"start\":59761},{\"end\":59780,\"start\":59773},{\"end\":59794,\"start\":59791},{\"end\":59806,\"start\":59802},{\"end\":60146,\"start\":60141},{\"end\":60163,\"start\":60155},{\"end\":60178,\"start\":60170},{\"end\":60195,\"start\":60188},{\"end\":60204,\"start\":60201},{\"end\":60222,\"start\":60215},{\"end\":60233,\"start\":60231},{\"end\":60247,\"start\":60242},{\"end\":60262,\"start\":60254},{\"end\":60275,\"start\":60270},{\"end\":60681,\"start\":60675},{\"end\":60690,\"start\":60685},{\"end\":60702,\"start\":60697},{\"end\":60714,\"start\":60712},{\"end\":60727,\"start\":60724},{\"end\":60733,\"start\":60729},{\"end\":61538,\"start\":61534},{\"end\":61647,\"start\":61644},{\"end\":61655,\"start\":61652},{\"end\":61672,\"start\":61663},{\"end\":61686,\"start\":61680},{\"end\":61699,\"start\":61695},{\"end\":61719,\"start\":61711},{\"end\":61734,\"start\":61726},{\"end\":61749,\"start\":61744},{\"end\":61761,\"start\":61757},{\"end\":61777,\"start\":61770},{\"end\":62187,\"start\":62181},{\"end\":62207,\"start\":62200},{\"end\":62223,\"start\":62216},{\"end\":62242,\"start\":62233},{\"end\":62260,\"start\":62254},{\"end\":62275,\"start\":62269},{\"end\":62290,\"start\":62285},{\"end\":62686,\"start\":62684},{\"end\":62705,\"start\":62694},{\"end\":62717,\"start\":62712},{\"end\":62729,\"start\":62725},{\"end\":62746,\"start\":62738},{\"end\":62759,\"start\":62754},{\"end\":62773,\"start\":62768},{\"end\":62784,\"start\":62781},{\"end\":62798,\"start\":62793},{\"end\":62811,\"start\":62808},{\"end\":63244,\"start\":63237},{\"end\":63258,\"start\":63250},{\"end\":63272,\"start\":63268},{\"end\":63285,\"start\":63278},{\"end\":63297,\"start\":63293},{\"end\":63507,\"start\":63503},{\"end\":63517,\"start\":63514},{\"end\":63531,\"start\":63529},{\"end\":63543,\"start\":63539},{\"end\":63554,\"start\":63551},{\"end\":63565,\"start\":63561},{\"end\":63578,\"start\":63574},{\"end\":63588,\"start\":63586},{\"end\":63601,\"start\":63596},{\"end\":63611,\"start\":63608},{\"end\":63625,\"start\":63622},{\"end\":63636,\"start\":63634},{\"end\":63647,\"start\":63644},{\"end\":63660,\"start\":63656},{\"end\":63675,\"start\":63671},{\"end\":63687,\"start\":63682},{\"end\":63700,\"start\":63696},{\"end\":64089,\"start\":64084},{\"end\":64104,\"start\":64096},{\"end\":64304,\"start\":64299},{\"end\":64320,\"start\":64314},{\"end\":64333,\"start\":64328},{\"end\":64348,\"start\":64341},{\"end\":64359,\"start\":64355},{\"end\":64373,\"start\":64369},{\"end\":64392,\"start\":64387}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":59004,\"start\":58591},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":14789841},\"end\":59392,\"start\":59006},{\"attributes\":{\"id\":\"b2\"},\"end\":59687,\"start\":59394},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":208290939},\"end\":60135,\"start\":59689},{\"attributes\":{\"doi\":\"arXiv:2204.06745\",\"id\":\"b4\"},\"end\":60618,\"start\":60137},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":633992},\"end\":61453,\"start\":60620},{\"attributes\":{\"id\":\"b6\"},\"end\":61634,\"start\":61455},{\"attributes\":{\"doi\":\"arXiv:2206.07682\",\"id\":\"b7\"},\"end\":62096,\"start\":61636},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":207870323},\"end\":62596,\"start\":62098},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":240354766},\"end\":63174,\"start\":62598},{\"attributes\":{\"doi\":\"arXiv:1905.07830\",\"id\":\"b10\"},\"end\":63493,\"start\":63176},{\"attributes\":{\"id\":\"b11\"},\"end\":64039,\"start\":63495},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":113405151},\"end\":64289,\"start\":64041},{\"attributes\":{\"doi\":\"arXiv:2205.01068\",\"id\":\"b13\"},\"end\":64757,\"start\":64291},{\"attributes\":{\"id\":\"b14\"},\"end\":67663,\"start\":64759},{\"attributes\":{\"id\":\"b15\"},\"end\":67998,\"start\":67665},{\"attributes\":{\"id\":\"b16\"},\"end\":68910,\"start\":68000}]", "bib_title": "[{\"end\":59068,\"start\":59006},{\"end\":59751,\"start\":59689},{\"end\":60664,\"start\":60620},{\"end\":62169,\"start\":62098},{\"end\":62670,\"start\":62598},{\"end\":64077,\"start\":64041},{\"end\":65184,\"start\":64759}]", "bib_author": "[{\"end\":58607,\"start\":58593},{\"end\":58623,\"start\":58607},{\"end\":58636,\"start\":58623},{\"end\":58651,\"start\":58636},{\"end\":58671,\"start\":58651},{\"end\":58684,\"start\":58671},{\"end\":58697,\"start\":58684},{\"end\":58709,\"start\":58697},{\"end\":58724,\"start\":58709},{\"end\":58733,\"start\":58724},{\"end\":58749,\"start\":58733},{\"end\":59079,\"start\":59070},{\"end\":59095,\"start\":59079},{\"end\":59113,\"start\":59095},{\"end\":59121,\"start\":59113},{\"end\":59499,\"start\":59484},{\"end\":59516,\"start\":59499},{\"end\":59532,\"start\":59516},{\"end\":59767,\"start\":59753},{\"end\":59782,\"start\":59767},{\"end\":59796,\"start\":59782},{\"end\":59808,\"start\":59796},{\"end\":60148,\"start\":60137},{\"end\":60165,\"start\":60148},{\"end\":60180,\"start\":60165},{\"end\":60197,\"start\":60180},{\"end\":60206,\"start\":60197},{\"end\":60224,\"start\":60206},{\"end\":60235,\"start\":60224},{\"end\":60249,\"start\":60235},{\"end\":60264,\"start\":60249},{\"end\":60277,\"start\":60264},{\"end\":60683,\"start\":60666},{\"end\":60692,\"start\":60683},{\"end\":60704,\"start\":60692},{\"end\":60716,\"start\":60704},{\"end\":60729,\"start\":60716},{\"end\":60735,\"start\":60729},{\"end\":61540,\"start\":61528},{\"end\":61649,\"start\":61638},{\"end\":61657,\"start\":61649},{\"end\":61674,\"start\":61657},{\"end\":61688,\"start\":61674},{\"end\":61701,\"start\":61688},{\"end\":61721,\"start\":61701},{\"end\":61736,\"start\":61721},{\"end\":61751,\"start\":61736},{\"end\":61763,\"start\":61751},{\"end\":61779,\"start\":61763},{\"end\":62189,\"start\":62171},{\"end\":62209,\"start\":62189},{\"end\":62225,\"start\":62209},{\"end\":62244,\"start\":62225},{\"end\":62262,\"start\":62244},{\"end\":62277,\"start\":62262},{\"end\":62292,\"start\":62277},{\"end\":62688,\"start\":62672},{\"end\":62707,\"start\":62688},{\"end\":62719,\"start\":62707},{\"end\":62731,\"start\":62719},{\"end\":62748,\"start\":62731},{\"end\":62761,\"start\":62748},{\"end\":62775,\"start\":62761},{\"end\":62786,\"start\":62775},{\"end\":62800,\"start\":62786},{\"end\":62813,\"start\":62800},{\"end\":63246,\"start\":63231},{\"end\":63260,\"start\":63246},{\"end\":63274,\"start\":63260},{\"end\":63287,\"start\":63274},{\"end\":63299,\"start\":63287},{\"end\":63509,\"start\":63497},{\"end\":63519,\"start\":63509},{\"end\":63533,\"start\":63519},{\"end\":63545,\"start\":63533},{\"end\":63556,\"start\":63545},{\"end\":63567,\"start\":63556},{\"end\":63580,\"start\":63567},{\"end\":63590,\"start\":63580},{\"end\":63603,\"start\":63590},{\"end\":63613,\"start\":63603},{\"end\":63627,\"start\":63613},{\"end\":63638,\"start\":63627},{\"end\":63649,\"start\":63638},{\"end\":63662,\"start\":63649},{\"end\":63677,\"start\":63662},{\"end\":63689,\"start\":63677},{\"end\":63702,\"start\":63689},{\"end\":64091,\"start\":64079},{\"end\":64106,\"start\":64091},{\"end\":64306,\"start\":64293},{\"end\":64322,\"start\":64306},{\"end\":64335,\"start\":64322},{\"end\":64350,\"start\":64335},{\"end\":64361,\"start\":64350},{\"end\":64375,\"start\":64361},{\"end\":64394,\"start\":64375},{\"end\":67826,\"start\":67818}]", "bib_venue": "[{\"end\":59183,\"start\":59121},{\"end\":59482,\"start\":59394},{\"end\":59869,\"start\":59808},{\"end\":60351,\"start\":60293},{\"end\":60885,\"start\":60735},{\"end\":61526,\"start\":61455},{\"end\":62336,\"start\":62292},{\"end\":62856,\"start\":62813},{\"end\":63229,\"start\":63176},{\"end\":64155,\"start\":64106},{\"end\":65417,\"start\":65186},{\"end\":67816,\"start\":67665},{\"end\":68198,\"start\":68000},{\"end\":59917,\"start\":59871},{\"end\":61044,\"start\":60887},{\"end\":62886,\"start\":62858}]"}}}, "year": 2023, "month": 12, "day": 17}