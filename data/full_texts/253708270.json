{"id": 253708270, "updated": "2023-10-05 07:59:15.177", "metadata": {"title": "PAL: Program-aided Language Models", "authors": "[{\"first\":\"Luyu\",\"last\":\"Gao\",\"middle\":[]},{\"first\":\"Aman\",\"last\":\"Madaan\",\"middle\":[]},{\"first\":\"Shuyan\",\"last\":\"Zhou\",\"middle\":[]},{\"first\":\"Uri\",\"last\":\"Alon\",\"middle\":[]},{\"first\":\"Pengfei\",\"last\":\"Liu\",\"middle\":[]},{\"first\":\"Yiming\",\"last\":\"Yang\",\"middle\":[]},{\"first\":\"Jamie\",\"last\":\"Callan\",\"middle\":[]},{\"first\":\"Graham\",\"last\":\"Neubig\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "Large language models (LLMs) have recently demonstrated an impressive ability to perform arithmetic and symbolic reasoning tasks, when provided with a few examples at test time (\"few-shot prompting\"). Much of this success can be attributed to prompting methods such as\"chain-of-thought'', which employ LLMs for both understanding the problem description by decomposing it into steps, as well as solving each step of the problem. While LLMs seem to be adept at this sort of step-by-step decomposition, LLMs often make logical and arithmetic mistakes in the solution part, even when the problem is decomposed correctly. In this paper, we present Program-Aided Language models (PAL): a novel approach that uses the LLM to read natural language problems and generate programs as the intermediate reasoning steps, but offloads the solution step to a runtime such as a Python interpreter. With PAL, decomposing the natural language problem into runnable steps remains the only learning task for the LLM, while solving is delegated to the interpreter. We demonstrate this synergy between a neural LLM and a symbolic interpreter across 13 mathematical, symbolic, and algorithmic reasoning tasks from BIG-Bench Hard and other benchmarks. In all these natural language reasoning tasks, generating code using an LLM and reasoning using a Python interpreter leads to more accurate results than much larger models. For example, PAL using Codex achieves state-of-the-art few-shot accuracy on the GSM8K benchmark of math word problems, surpassing PaLM-540B which uses chain-of-thought by absolute 15% top-1. Our code and data are publicly available at http://reasonwithpal.com/ .", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2211.10435", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icml/GaoMZ00YCN23", "doi": "10.48550/arxiv.2211.10435"}}, "content": {"source": {"pdf_hash": "6c1e1cc1e0e1f8fd026fe517607b2d4535565fa7", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/2211.10435v2.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "5e6eadae67b508bc7958bf37f7cd45b8090140aa", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/6c1e1cc1e0e1f8fd026fe517607b2d4535565fa7.txt", "contents": "\nPAL: Program-aided Language Models\n\n\nLuyu Gao luyug@cs.cmu.edu \nAman Madaan amadaan@cs.cmu.edu \nShuyan Zhou shuyanzh@cs.cmu.edu \nUri Alon ualon@cs.cmu.edu \nPengfei Liu \nYiming Yang yiming@cs.cmu.edu \nJamie Callan callan@cs.cmu.edu \nGraham Neubig gneubig@cs.cmu.edu \nPAL: Program-aided Language Models\n* The first three authors contributed equally. 1 Language Tech-nologies Institute, Carnegie Mellon University, USA 2 Inspired Cognition, USA.\nLarge language models (LLMs) have recently demonstrated an impressive ability to perform arithmetic and symbolic reasoning tasks, when provided with a few examples at test time (\"fewshot prompting\"). Much of this success can be attributed to prompting methods such as \"chainof-thought\", which employ LLMs for both understanding the problem description by decomposing it into steps, as well as solving each step of the problem. While LLMs seem to be adept at this sort of step-by-step decomposition, LLMs often make logical and arithmetic mistakes in the solution part, even when the problem is decomposed correctly. In this paper, we present Program-Aided Language models (PAL): a novel approach that uses the LLM to read natural language problems and generate programs as the intermediate reasoning steps, but offloads the solution step to a runtime such as a Python interpreter. With PAL, decomposing the natural language problem into runnable steps remains the only learning task for the LLM, while solving is delegated to the interpreter. We demonstrate this synergy between a neural LLM and a symbolic interpreter across 13 mathematical, symbolic, and algorithmic reasoning tasks from BIG-Bench Hard and other benchmarks. In all these natural language reasoning tasks, generating code using an LLM and reasoning using a Python interpreter leads to more accurate results than much larger models. For example, PAL using CODEX achieves state-of-theart few-shot accuracy on the GSM8K benchmark of math word problems, surpassing PaLM-540B which uses chain-of-thought by absolute 15% top-1. Our code and data are publicly available at\n\nIntroduction\n\nUntil as recently as two years ago, reasoning was considered to be one of the most significant challenges that large language models (LLMs) had not yet overcome (Marcus, 2018;Garcez & Lamb, 2020). Recently, LLMs have shown impressive success on a wide range of tasks, including commonsense Sanh et al., 2021;Madaan et al., 2022), mathematical (Lewkowycz et al., 2022;Wu et al., 2022;Mishra et al., 2022), and symbolic reasoning (Yao et al., 2022;Ahn et al., 2022), using few-shot prompting (Brown et al., 2020). This process has been accelerated by methods that require LLMs to generate their explicit reasoning steps, such as \"chain-of-thought\" , \"scratchpads\" (Nye et al., 2021), and \"least-to-most\"  prompting. In particular, the widely used chain-of-thought (COT) method presents the model with the explicit intermediate steps that are required to reach the final answer. Then, the model is expected to apply a similar decomposition to the actual test example, and consecutively reach an accurate final answer (Ling et al., 2017;Amini et al., 2019). Nevertheless, while LLMs can decompose natural language problems into steps and perform simple arithmetic operations, their performance falls dramatically when dealing with complex arithmetic (Hendrycks et al., 2021;Madaan & Yazdanbakhsh, 2022) or large numbers (Nogueira et al., 2021;Qian et al., 2022). In fact, even when fine-tuning a PaLM-based model on 164B tokens of explicit mathematical content, its two most common failures are reportedly \"incorrect reasoning\" and \"incorrect calculation\" (Lewkowycz et al., 2022).\n\nIn this paper, we propose Program-Aided Language model (PAL): a novel method that uses an LLM to read natural language problems and generate programs as reasoning steps, but offloads the solution step to a Python interpreter, as illustrated in Figure 1. This offloading leverages an LLM that can decompose a natural language problem into programmatic steps, which is fortunately available using contemporary state-of-the-art LLMs that are pre-trained on both natural language and programming languages (Brown et al., 2020;Chen et al., 2021a;Chowdhery et al., 2022). The grocery store returned 6 loaves.\n\n\nloaves_returned = 6\n\nThe answer is answer = loaves_baked -loaves_sold_morning -loaves_sold_afternoon + loaves_returned\n\n>>> print(answer) 74 Q: Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can has 3 tennis balls. How many tennis balls does he have now?\n\nA: Roger started with 5 tennis balls. 2 cans of 3 tennis balls each is 6 tennis balls. 5 + 6 = 11. The answer is 11. Q: The bakers at the Beverly Hills Bakery baked 200 loaves of bread on Monday morning. They sold 93 loaves in the morning and 39 loaves in the afternoon. A grocery store returned 6 unsold loaves. How many loaves of bread did they have left?\n\n\nChain-of-Thought (Wei et al., 2022)\n\nInput Q: Roger has 5 tennis balls. He buys 2 more cans of tennis balls. Each can has 3 tennis balls. How many tennis balls does he have now?\n\nA: Roger started with 5 tennis balls. tennis_balls = 5 2 cans of 3 tennis balls each is bought_balls = 2 * 3 tennis balls.\n\nThe answer is answer = tennis_balls + bought_balls Q: The bakers at the Beverly Hills Bakery baked 200 loaves of bread on Monday morning. They sold 93 loaves in the morning and 39 loaves in the afternoon. A grocery store returned 6 unsold loaves. How many loaves of bread did they have left? The final answer is obtained by running the generated reasoning chain. Chain-of-thought reasoning is highlighted in blue ; PAL steps are highlighted in gray and pink ; the Python interpreter run is highlighted in black and green .\n\n\nProgram-aided Language models (this work)\n\n\nInput\n\nrequire LLMs, solving and reasoning can be done with the external solver. This bridges an important gap in chain-ofthought-like methods, where reasoning chains can be correct but produce an incorrect answer.\n\nWe demonstrate the effectiveness of PAL across 13 arithmetic and symbolic reasoning tasks. In all these tasks, PAL using Codex (Chen et al., 2021a) outperforms much larger models such as PaLM-540B using chain-of-thought prompting. For example, on the popular GSM8K benchmark, PAL achieves state-of-the-art accuracy, surpassing PaLM-540B with chain-of-thought by absolute 15% top-1 accuracy. When the questions contain large numbers, a dataset we call GSM-HARD, PAL outperforms COT by an absolute 40%. We believe that this seamless synergy between a neural LLM and a symbolic interpreter is an essential step towards general and robust AI reasoners.\n\n\nBackground: Few-shot Prompting\n\nFew-shot prompting leverages the strength of large-language models to solve a task with a set of k examples that are provided as part of the test-time input (Brown et al., 2020;Liu et al., 2021;Chowdhery et al., 2022), where k is usually a number in the low single digits. These input-output examples {(x i , y i )} k i=1 are concatenated in a prompt p \u2261 x 1 \u00b7 y 1\n\nx 2 \u00b7 y 2 . . . x k \u00b7 y k . where \"\u00b7\" denotes the concatenation of an input and output, and \" \" indicate the concatenation of different examples. During inference, a test instance x test is appended to the prompt, and p x test is passed to the model which attempts to complete p x test , and thereby generate an answer y test . Note that such fewshot prompting does not modify the underlying LLM. Wei et al. (2022) additionally augment each in-context example with chain of thought (COT) intermediate steps. Specifically, each in-context example in the COT setup is a triplet x i , t i , y i , where x i and y i are input-output pair as before, and t i is a natural language description of the steps that are needed to arrive at the output y i from the input x i . See Figure 1 for an example. With the additional \"thoughts\" t i , the prompt is set to p \u2261 x 1 \u00b7t 1 \u00b7y 1 x 2 \u00b7t 2 \u00b7y 2 . . . x k \u00b7t k \u00b7y k .\n\nDuring inference, the new question x test is appended to the prompt as before and supplied to the LLM. Crucially, the model is tasked with generating both the thought t test and the final answer y test . This approach of prompting the model to first generate a reasoning process t test improves the accuracy of the answer y test across a wide range of tasks (Wang et al., 2022a;Wei et al., 2022;Zhou et al., 2022;Wang et al., 2022b).\n\n\nProgram-aided Language Models\n\nIn a Program-aided Language model, we propose to generate the thoughts t for a given natural language problem x as interleaved natural language (NL) and programming language (PL) statements. Since we delegate the solution step to an interpreter, we do not provide the final answers to the examples in our prompt. That is, every in-context example in PAL is a pair x i , t i , where t j = [s 1 , s 2 , . . . , s N ] with each s i \u2208 NL \u222a PL, a sequence of tokens in either NL or PL. The complete prompt is thus p \u2261\nx 1 \u00b7 t 1 x 2 \u00b7 t 2 . . . x k \u00b7 t k .\nGiven a test instance x test , we append it to the prompt, and p x test is fed to the LM. We let the LM generate a prediction t test , which contains both the intermediate steps and their corresponding programmatic statements.\n\nA: Roger started with 5 tennis balls. tennis_balls = 5 2 cans of 3 tennis balls each is bought_balls = 2 * 3 tennis balls. The answer is answer = tennis_balls + bought_balls Figure 2: A close-up of a single example from a PAL prompt. Chain-of-thought reasoning is highlighted in blue, and PAL programmatic steps are highlighted in gray and pink .\n\nExample A close-up of the example from Figure 1 is shown in Figure 2. While chain-of-thought only decomposes the solution in the prompt into natural language steps such as Roger started with 5 tennis balls and 2 cans of 3 tennis balls each is 6, in PAL we also augment each such NL step with its corresponding programmatic statement such as tennis balls = 5 and bought balls = 2 * 3. This way, the model learns to generate a program that will provide the answer for the test question, instead of relying on LLM to perform the calculation correctly.\n\nWe prompt the language model to generate NL intermediate steps using comment syntax (e.g. \"# ...\" in Python) such they will be ignored by the interpreter. We pass the generated program t test to its corresponding solver, we run it, and obtain the final run result y test . In this work we use a standard Python interpreter, but this can be any solver, interpreter or a compiler.\n\nCrafting prompts for PAL In our experiments, we leveraged the prompts of existing work whenever available, and otherwise randomly selected the same number (3-6) of examples as previous work for creating a fixed prompt for every benchmark. In all cases, we augmented the free-form text prompts into PAL-styled prompts, leveraging programming constructs such as for loops and dictionaries when needed. Generally, writing PAL prompts is easy and quick.\n\nWe also ensure that variable names in the prompt meaningfully reflect their roles. For example, a variable that describes the number of apples in the basket should have a name such as num apples in basket. This keeps the generated code linked to the entities in the question. In Section 6 we show that such meaningful variable names are critical. Notably, it is also possible to incrementally run the PL segments and feed the execution results back to the LLM to generate the following blocks. For simplicity, in our experiments, we used a single, post-hoc, execution.\n\nThis work focuses on COT-style reasoning chain, but in Appendix I we show that PAL also improves Least-to-Most  prompts, which introduce reasoning chains that decompose a question into sub-questions.\n\n\nExperimental Setup\n\nData and in-context examples We experiment with three broad classes of reasoning tasks: (1) mathematical problems ( \u00a74.1) from a wide range of datasets including GSM8K (Cobbe et al., 2021), SVAMP (Patel et al., 2021), ASDIV (Miao et al., 2020), and MAWPS (Koncel-Kedziorski et al., 2016); (2) symbolic reasoning ( \u00a74.2) from BIG-Bench Hard (Suzgun et al., 2022)  Q: On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball?  used the same set for PAL and COT.\n... stress_ball_idx = None for i,\nBaselines We consider three prompting strategies: DI-RECT prompting -the standard prompting approach using pairs of questions and immediate answers (e.g., 11 ) as in Brown et al. (2020); chain-of-thought (COT) prompting ; and our PAL prompting. We performed greedy decoding from the language model using a temperature of 0. Unless stated otherwise, we used CODEX (code-davinci-002) as our backend LLM for both PAL, DIRECT, and COT. In datasets where results for additional base LMs, such as PaLM-540B, were available from previous work, we included them as COT PaLM-540B .\n\n\nMathematical Reasoning\n\nWe evaluate PAL on eight mathematical word problem datasets. Each question in these tasks is an algebra word problem at grade-school level. An example for a question and PAL example prompt is shown in Figure 3. We found that using explicit NL intermediate steps does not further benefit these math reasoning tasks, hence we kept only the meaningful variable names in the prompt.\n\n\nGSM-HARD\n\nLLMs can perform simple calculations with small numbers. However, Madaan & Yazdanbakhsh (2022) found that 50% of the numbers in the popular GSM8K dataset of math reasoning problems are integers between 0 and 8. This raises the question of whether LLMs can generalize to larger and non-integer numbers? We constructed a harder version of GSM8K, which we call GSM-HARD, by replacing the numbers in the questions of GSM8K with larger numbers. Specifically, one of the numbers in a question was replaced with a random integer of up to 7 digits. More details regarding the this new dataset are provided in H.1.\n\n\nSymbolic Reasoning\n\nWe applied PAL to three symbolic reasoning tasks from BIG-Bench Hard (Suzgun et al., 2022), which involve reasoning about objects and concepts: (1) COLORED OBJECTS requires answering questions about colored objects on a surface. This task requires keeping track of relative positions, absolute positions, and the color of each object. Figure 4 shows an example for a question and example PAL prompt.\n\n(2) PENGUINS describes a table of penguins and some additional information in natural language, and the task is to answer a question about the attributes of the penguins, for example, \"how many penguins are less than 8 years old?\". While both PENGUINS and COLORED OBJECT tasks require tracking objects, PENGUINS describes dynamics as well, since the penguins in the problem can be added or removed. Figure 17 in Appendix J.2 shows an example for a question, a chain-of-thought prompt, and PAL prompt.\n\n(3) DATE is a date understanding task that involves inferring dates from natural language descriptions, performing addi-Q: I have a chair, two potatoes, a cauliflower, a lettuce head, two tables, a cabbage, two onions, and three fridges. How many vegetables do I have?  Figure 5: An example for a PAL prompt in the OBJECT COUNTING task. The base LM is expected to convert the input into a dictionary where keys are entities and values are their quantities, while filtering out non-vegetable entities. Finally, the answer is the sum of the dictionary values. GSM8K GSM  (2022). We ran PAL on each benchmark 3 times and report the average; the standard deviation is provided in Table 7.\n\ntion and subtraction of relative periods of time, and having some global knowledge such as \"how many days are there in February\", and performing the computation accordingly. Appendix J.3 shows example prompts.\n\n\nAlgorithmic Tasks\n\nFinally, we compare PAL and COT on algorithmic reasoning. These are tasks where a human programmer can write a deterministic program with prior knowledge of the question. We experiment with two algorithmic tasks: OBJECT COUNTING and REPEAT COPY. OBJECT COUNTING involves answering questions about the number of objects belonging to a certain type. For example, as shown in Figure 5: \"I have a chair, two potatoes, a cauliflower, a lettuce head, two tables, ... How many vegetables do I have?\"). REPEAT COPY requires generating a sequence of words according to instructions. For example, as shown in Appendix J.6: \"Repeat the word duck four times, but halfway through also say quack\"). Table 1 shows the following results: across all tasks, PAL using Codex sets a new few-shot state-of-the-art top-1 decoding across all datasets, outperforming COT Codex , COT PaLM-540B , and COT Minerva 540B which was fine-tuned on explicit mathematical content.\n\n\nResults\n\n\nMath Results\n\nInterestingly, COT also benefits from Codex over PaLM-540B in some of the datasets such as ASDIV, but performs worse than PaLM-540B in others such as SVAMP. Yet, using PAL further improves the solve rate across all datasets.\n\n\nGSM-HARD\n\nOn GSM-HARD (Table 1), the accuracy of DIRECT drops dramatically from 19.7% to 5.0% (a relative drop of 74%), the accuracy of COT drops from 65.6% to 20.1% (a relative drop of almost 70%), while PAL remains stable at 61.5%, dropping by only 14.3%. The results of COT on GSM-HARD did not improve even when we replaced its prompts with prompts that include large numbers (Appendix B). This shows how PAL provides not only better  Table 2: Solve rate on three symbolic reasoning datasets and two algorithmic datasets, In all datasets, PAL achieves a much higher accuracy than chain-of-thought. Results with closed models LaMDA-137B and PaLM-540B are included if available to public Suzgun et al., 2022).\n\nresults on the standard benchmarks, but is also much more robust. In fact, since PAL offloads the computation to the Python interpreter, any complex computation can be performed accurately given the correctly generated program.\n\nLarge Numbers or Incorrect Reasoning? Are the failures on GSM-HARD primarily due to the inability of LLMs to do arithmetic, or do the large numbers in the question \"confuse\" the LM which generates irrational intermediate steps?\n\nTo investigate this, we evaluated the outputs generated by COT for the two versions of the same question (with and without large numbers). We find that in 16 out of 25 cases we analyzed, COT generates nearly identical natural language \"thoughts\", indicating that the primary failure mode is the inability to perform arithmetic accurately. Sample outputs are provided in the Appendix,  Multi-sample Generation As found by Wang et al. (2022b), chain-of-thought-style methods can be further improved by sampling k > 1 outputs, and selecting the final answer using majority voting. We thus repeated the greedydecoding experiments using nucleus sampling (Holtzman et al., 2019) with p = 0.95 and k = 40 as in Lewkowycz et al. (2022) and temperature of 0.7. As shown in Table 3, this further increases the accuracy of PAL from 72.0% to 80.4% on GSM8K, obtaining 1.9% higher accuracy than Minerva-540B using the same number of samples.\n\n\nSymbolic Reasoning & Algorithmic Tasks Results\n\nResults for symbolic reasoning and algorithmic tasks are shown in Table 2. In COLORED OBJECTS, PAL improves over the strong COT by 8.8%, and by 19.4% over the standard direct prompting. In PENGUINS, PAL provides a gain of absolute 14.1% over COT. In DATE, PAL further provides 11.4% gain over both COT Codex , PaLM-540B , and LaMDA-137B .\n\nThe two rightmost columns of  Figure 6: The solve rate on COLORED OBJECTS with respect to the number of objects included in the test question.\n\nIs PAL sensitive to the complexity of the question? We examined how the performance of PAL and COT change as the complexity of the input question grows, measured as the number of objects in the question of COLORED OBJECTS. As shown in Figure 6, PAL is superior COT across all input lengths. As the number of objects in the question increases, COT's accuracy is unstable and drops, while PAL remains consistently close to 100%. More analysis on the token-level predictions can be found in Appendix G. \n\n\nAnalysis\n\nDoes PAL work with weaker LMs? In all our experiments in Section 5, PAL used the code-davinci-002 model; but can PAL work with weaker models of code? We compared PAL with COT when both prompting approaches use the same weaker base LMs code-cushman-001 and code-davinci-001. As shown in Figure 7, even though the absolute accuracies of code-cushman-001 and code-davinci-001 are lower, the relative improvement of PAL over COT remains consistent across models. This shows that PAL can work with weaker models, while its benefit scales elegantly to stronger models as well.\n\nDoes PAL work with LMs of natural language? We also experimented with PAL using the text-davinci series. Figure 8 shows the following interesting results: when the base LM's \"code modeling ability\" is weak (using text-davinci-001), COT performs better than PAL. However, once the LM's code modeling ability is sufficiently high (using text-davinci-002 and text-davinci-003), PAL outperforms COT, and PAL text-davinci-003 performs almost as PAL code-davinci-002 . This shows that PAL is not limited to LMs of code, but it can work with LMs that were mainly trained for natural language, if they have a sufficiently high coding ability.\n\nIs PAL better because of the Python prompt or because of the interpreter? We experimented with generating Python code, while requiring the neural LM to \"execute\" it as well, without using an interpreter, following Nye et al. The results are shown in Figure 9. In COLORED OBJECTED and DATE, removing intermediate NL comments but keeping meaningful variable names (PAL \u2212comment ) -slightly reduces the results compared to the full PAL prompt, but it still achieves higher accuracy than the baselines COT. Removing variable names as well (PAL \u2212var \u2212comment ) further decreases accuracy, and performs worse than COT. Since variable names have an important part in code quality (Gellenbeck & Cook, 1991;Takang et al., 1996), meaningful variable names are only expected to ease reasoning for Codex, which was trained on mostly meaningful names, as was also found by Madaan et al. (2022).\n\n\nRelated Work\n\nPrompting Few-shot prompting (Brown et al., 2020) has been shown to be an effective approach for a variety of tasks (Liu et al., 2021) Figure 9: Ablation study of PAL prompt formats. We consider the original PAL prompt, it with natural language comments removed (PAL \u2212comment ), and further variable names replaced with random character (PAL \u2212var \u2212comment ). As a reference, we also show the COT performance (blue). 2021; Reif et al., 2021;Wei et al., 2021;Sanh et al., 2021) to code-generation (Chen et al., 2021b). Methods such as chain-of-thought prompting (COT) have further unlocked a variety of reasoning tasks, boosting the performance of models on a variety of benchmarks. Nevertheless, all previous approaches suffer from inaccuracy in arithmetic calculation and incorrect reasoning (Lewkowycz et al., 2022;Hendrycks et al., 2021;Madaan & Yazdanbakhsh, 2022). PAL avoids these problems by offloading the calculation and some of the reasoning to a Python interpreter, which is correct by construction, given the right program. Further, not only that PAL can improve the standard chain-of-thought, it can improve least-to-most prompting  as well, as we show in Appendix I.\n\nLMs with external tools Several prior works have equipped neural models with specialized modules. For example, Cobbe et al. (2021) employ a calculator for arithmetic operations as a post hoc processing, and Demeter & Downey (2020) add specialized modules for generating cities and dates. Unlike these works, PAL generates code for a Python interpreter, which is general enough to handle both arithmetic calculations and dates, without specialized modules and ad-hoc fixes. Chowdhery et al. (2022) and Wei et al. (2022) have also experimented with external calculators; however, the calculator had improved Codex by only 2.3% (absolute) on GSM8K and improved PaLM-540B by 1.7%, while PAL improves Codex by 6.4% on the same benchmark (Section 5.1). Similarly to our work, Chowdhery et al. (2022) have also experimented with generating Python code for solving the GSM8K benchmark, but their experiments resulted in lower accuracy than the standard PaLM-540B that uses chain-of-thought. Pi et al. (2022) pretrain the model on execution results of random expressions on a calculator, instead of using the solver at test time as well. While their model can hypothetically perform arithmetic better than other pretrained LMs, their results on the SVAMP benchmark are much lower: 57.4% using a T5-11B model, while PAL achieves 79.4% on the same benchmark without any specialized pretraining.\n\nShortly after a preprint of our work was submitted to arXiv, another related work on \"program of thought prompting\" (Chen et al., 2022) was also submitted to arXiv. Their method is conceptually similar to ours, but PoT (1) only demonstrates efficacy on mathematical problems, whereas we demonstrate gains on symbolic and algorithmic benchmarks as well, and (2)  Semantic parsing Our work can also be seen as a very general form of semantic parsing, where instead of parsing into strict domain-specific languages, the model generates free-form Python code. Some works constrain the decoder using a Context-Free Grammar (CFG) to generate a domainspecific meaning representation  or a canonical utterance, which can be converted to a Lisplike meaning representation . In contrast, PAL does not require any constraining or domain-specific representations other than Python code. Further, LMs that were pretrained on Python are abundant compared to other domain-specific languages, making Python code a much more preferable representation. Andor et al. (2019) generate task-specific arithmetic operations for reading comprehension tasks; Gupta et al. (2019) design neural modules such as count to deal with arithmetic operations. PAL generalizes these works by generating general Python programs, without the need for defining specialized modules. The closest work to ours technically may be Binder (Cheng et al., 2022), but it addressed mostly answering questions about tables using SQL and SQL-like Python.\n\n\nConclusion\n\nWe introduce PAL, a new method for natural language reasoning, using programs as intermediate reasoning steps. Differently from existing LM-based reasoning approaches, the main idea is to offload solving and calculating to an external Python interpreter, instead of using the LLM for both understanding the problem and solving. This results in a final answer that is guaranteed to be accurate, given the correctly predicted programmatic steps. We demonstrate this seamless synergy between an LLM and a Python interpreter across 13 tasks from BIG-Bench Hard and other benchmarks. In all these benchmarks, PAL outperforms larger LLMs such as PaLM-540B which use the popular \"chain-of-thought\" method and sets new state-of-the-art accuracy on all of them. We believe that these results unlock exciting directions for future neuro-symbolic AI reasoners.    Table 4: Role of text: including text either as informative variable names (PAL) or comments is important (PALvar + comms). Uninformative variable names PALvar cause a drastic drop in performance, indicating that just structure is not sufficient. The corresponding prompts are shown in Figure 10.\n\n\nA. Alternative Prompts without Meaningful Variable Names\n\nFor mathematical problems, since our standard prompts do not use much comment, we start by creating alternative prompts where the informative variable names are replaced with single-letters ( Figure 10). The results in Table 4 shows a considerable performance drop: from an average of 71.8% to 59%. Note that the ablation where structured outputs are completely removed in favor of purely text explanations is precisely the COT setting, which achieves a solve rate of 63%. These results underscore the importance of text but more importantly show that combining both text and procedural statements leads to higher performance gains-either is sub-optimal.\n\n\nB. Additional analysis on Arithmetic Reasoning\n\nGSM-hard with hard prompts The GSM-HARD experiments used prompts that were sampled from the GSM8K training set. Will COT be helped by using larger numbers in the prompts as well? To investigate this, we create prompts where the numbers are changed to larger numbers, matching the distribution of numbers in GSM-HARD. The results in Table 5 shows that even with a prompt that matches the numbers, there are only modest gains in performance. These results show that the gains achieved by using code-based reasoning chains may not be achieved simply by using better few-shot examples for COT.\n\n\nRegular Prompt Prompt with Larger Numbers\n\nCOT 23.3 23.8 Table 5: GSM-hard results, when the prompts also had examples of larger numbers.\n\n\nSuccinct Code\n\nThe programs used in few-shot examples by PAL are multi-step, and show a step-by-step breakdown of the reasoning process. Is this breakdown necessary? Alternatively, can we return a single line expression (see Figure 11b) to calculate the result? Results in Table 6 (4 th row) shows that is not the case. With single-line expressions, the performance of PAL falls to the level of direct prompting.\n\nGenerating the answer directly PAL first generates a reasoning chain in the form of a Python program, and passes the generated program to a runtime to obtain an answer. Is PAL better only because of the program-style intermediate reasoning chains, or are the improvements derived from offloading execution to the Python runtime? To investigate this, we experiment with a variant that forces the LLM to generate the answer after generating the reasoning chain ( Figure 11e). This setting compels the LLM to condition on the generated code-based reasoning to generate an answer, simulating the runtime. The results in Table 6 (5 th row) show that the solve rate drops to near DIRECT levels. This reinforces our hypothesis that while current LLMs can be excellent at specifying a high-level plan to solve a task-they are still incapable of executing them.  \n\n\nC. Effect of Using Language Models of Code\n\nIn our experiments, we focused on evaluating the performance of a language model for code. We aimed to investigate whether the additional performance boost observed in our results was due to the use of models like Codex, or whether our formulation was useful even for text-based models. To this end, we conducted additional experiments using text-based language models. Our findings indicate that the PAL approach is not restricted to working solely with Codex, but can also be applied to natural language (NL) models, as long as the model is sufficiently strong. Specifically, our results showed that in the text-davinci-001 model, the use of the CoT approach resulted in better performance.\n\n\nModel\n\nCoT PaL text-davinci-001 26.5 8.6 text-davinci-002 46.9 65.8 text-davinci-003 65.3 69.8\n\n\nD. Analyzing the Effect of Increasing Number of Samples on PAL\n\nIn Section 5.1, we show that PAL outperforms strong baselines both for a single sample and by drawing 40 samples and using majority voting. Figure 12 illustrates the trends for cases when the number of samples drawn are between 1 and 40, and the interpolation estimates demonstrate that PAL remains competitive throughout the number of samples. def solution(): \"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\" ; toys_initial = 5 mom_toys = 2 dad_toys = 2 total_received = mom_toys + dad_toys total_toys = toys_initial + total_received result = total_toys return result \n\n\nE. Standard Deviations Across Multiple Order of Prompts\n\nFor each math reasoning task, we run inference using three random orderings of the prompts. As shown in Table 7, the standard deviation between the results obtained from the three different seeds is minimal.  \n\n\nF. PAL Beyond Benchmarks\n\nWe argue that symbolic reasoning is a crucial component in solving a wide range of tasks. In this section, we demonstrate examples of tasks that may not initially appear to require using programs as intermediate reasoning steps, but can be improved through the use of PAL-style reasoning. We demonstrate these examples using the ChatGPT tool. 1 In contrast to the in-context-learning methods we used in the main paper, here we instruct ChatGPT to perform program-aided reasoning through one of the user utterances.\n\nIn Figure 13, in COT-style reasoning, while the reasoning chain is correct, the final answer is wrong. In contrast, PAL-style reasoning could not only accurately extract the color of objects from the question but also produce the correct lines of code to branch to different situations that yield their corresponding correct answers.\n\nA more intriguing example is letting an LLM count the number of letters in the word \"intriguing\". In Figure 14a, while the step-by-step explanation appears reasonable by splitting the letters by spaces, ChatGPT does not change the answer after this explicit reasoning and insists on the wrong answer. Explicitly instructing the model to perform step-by-step reasoning before answering the question still yields the wrong answer. In contrast, PAL-style reasoning only takes a few lines of code, and the execution does produce the correct answer, in this case. These examples indicate that PAL can benefit even an ostensibly powerful model like ChatGPT.\n\n(a) In COT style reasoning, the correct intermediate reasoning chain leads to wrong answers.\n\n(b) In PAL, the execution of the code will produce the correct answer. Figure 13: ChatGPT with PAL and COT to answer a user-posted question (a) Step-by-step reasoning struggle on counting the number of letters in the word \"intriguing\" which has ten letters.\n\n(b) Explicitly instructing ChatGPT to reason step-by-step before generating answer still leads to the wrong answer.\n\n(c) PAL takes a few lines of code and the execution could result in the correct answer. Figure 14: ChatGPT with PAL and COT to answer a user-posted question\n\n\nG. Closer Look into Token-level Behaviors of Different Mechanisms\n\nBeyond empirical results, we make initial attempts to gain a deeper understanding of the behavior of LLMs with different reasoning mechanisms by looking into the token-level log-likelihood of reasoning chains produced by COT and PAL. We randomly selected 20 questions from the COLORED OBJECTS dataset, along with their corresponding COT and PAL solutions. We then manually compared the two mechanisms by focusing on tokens with a low log-likelihood.\n\nOur analysis reveals that COT often has lower confidence in tokens related to numbers and quantitative information, the grounded position of spatial adjectives (e.g., right-most), properties such as the color of objects, and nouns that refer to the objects. Specifically, we found that this occurred in seven, six, two, and six examples out of the 20 we examined. In contrast, PAL uses list manipulations, such as len(objects), and accesses objects and their associated properties through list indexing (e.g., object[3][0]). We found that the LLM is typically confident in producing these programs. Furthermore, we observed that while COT requires different expressions for the same concept in different contexts, PAL almost always uses the same expression, which is presumably more robust. For example, when there are five objects, COT predicts \"the right-most thing is the fifth item on the list\", and \"the right-most thing is the third item on the list\" when the number of objects is three. Occasionally, COT also predicts \"the right-most thing is last item on the list\" which does not provide more concrete information. On the contrary, PAL confidently predicts objects[-1] consistently. The more consistent and uniform use of expressions in PAL can be attributed to the explicit and defined nature of programming languages, which allows for clear and accurate expressions.\n\n\nH. Datasets\n\nIn the following tables (Table 8,Table 9, Table 10), we presents statistics and examples for the datasets we considered.\n\n\nDataset N Example\n\nReasoning about Colored Objects 2000 On the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball? Penguins in a Table  149 Here is a table where the first line is a header and each subsequent line is a penguin: name, age, height (cm), weight (kg) Louis,7,50,11 Bernard,5,80,13 Vincent,9,60,11 Gwen,8,70,15 For example: the age of Louis is 7, the weight of Gwen is 15 kg, the height of Bernard is 80 cm. We now add a penguin to the table: James, 12, 90, 12 How many penguins are less than 8 years old? Date Understanding 369 2015 is coming in 36 hours. What is the date one week from today in MM/DD/YYYY? Repeat the word duck four times, but halfway through also say quack.  (Miao et al., 2020) 2096 Ellen has six more balls than Marin. Marin has nine balls. How many balls does Ellen have? SINGLEOP (Koncel-Kedziorski et al., 2016) 562 If there are 7 bottle caps in a box and Linda puts 7 more bottle caps inside, how many bottle caps are in the box? SINGLEEQ (Koncel-Kedziorski et al., 2016) 508 Benny bought a soft drink for 2 dollars and 5 candy bars. He spent a total of 27 dollars. How much did each candy bar cost? ADDSUB (Koncel-Kedziorski et al., 2016) 395 There were 6 roses in the vase. Mary cut some roses from her flower garden. There are now 16 roses in the vase. How many roses did she cut? MULTIARITH (Koncel-Kedziorski et al., 2016) 600 The school cafeteria ordered 42 red apples and 7 green apples for students lunches. But, if only 9 students wanted fruit, how many extra did the cafeteria end up with? Yes A bag has a 5% discount. If it is marked $140, how much will you pay after the discount?\n\nThe discount is 5%. So you will pay 95% of the price. 95% of 140 is 133.\n\nThe answer is 133.\n\nThe discount is 5%. So you will pay 95% of the price. 95% of $3921772.0722 is $3730654.0682. The answer is $3730654.0682\n\nYes A basket of green food costs $25 and a basket of red food costs $18. If you buy 3 baskets of green food and red food, how much will you have to pay in total if you get $2 off for each basket of red food?\n\n3 baskets of green food will cost 3 * 25 = 75 dollars. 3 baskets of red food will cost 3 * 18 = 54 dollars. But you get $2 off for each basket of red food. So you get 3 * 2 = 6 dollars off. So you pay 75 + 54 -6 = 123 dollars. The answer is 123.  \n\n\nH.1. Creating GSM-HARD\n\nWhile replacing numbers in the question is easy using pattern matching, a more challenging aspect is recalculating the correct answer. GSM8K evaluation set contains 1319 samples, which is prohibitively expensive to perform manual re-calculation. Instead, we leverage PAL to assist obtaining the correct answers. For 71% of the examples where PAL is correct on GSM8K, we utilize the generated program and replace the initial value with the larger values. For example, if we create a harder version of the problem in Figure 3 by replacing $23 dollars with $15687 dollars, we correspondingly replace money initial=23 to money initial=15678. Running the program could automatically produce the correct answer of the harder question. Notably, this annotation process assumes that a program that produces a correct answer to a GSM8K question indicates the correctness of the program itself. While this is not guaranteed due to possible spurious correlations, we manually checked 25 programs and found all of them are correct. For the incorrect 29% of the cases, we run PAL again and perform nucleus sampling (Holtzman et al., 2019) with temperature 0.7, and repeat the above process if any correct solution is found. Finally, the authors manually annotate the correct answer for 50 remaining cases that PAL was not able to solve after 100 iterations. Table 11 shows thoughts generated with COT on GSM8K and GSM-HARD. A manual analysis reveals that a majority of the generated thoughts (16/25) were identical for GSM8K and GSM-HARD, indicating that larger numbers primarily diminish performance due to failure of LLM to do arithmetic..  Previous experiments focus on the COT technique. This section examines if PAL generalizes to other prompt types. We consider a strong alternative prompting strategy LEAST-TO-MOST . LEAST-TO-MOST solves problems in two stages, problem-reducing and problem-solving. Problem reducing stage turns the problem into sub-problems, and the solving stage solves them sequentially. It keeps two prompts, each for an individual stage. To patch LEAST-TO-MOST prompts with PAL, we adopt a simple and straightforward approach: we note that problem reduction requires logically thinking in NL while solving requires the precision that PL offers. We therefore keep the original reducing prompts while only turning solution segments in the solving scripts in PL. We show an example reducing prompt, original solving prompt, and PAL solving prompt in Figure 15. Note that one unique property of PAL solving can naturally use previous questions' answers as the symbol values are shared. In comparison, the original solving script needs to explicitly re-cite answers from previous answers.\n\n\nH.2. GSM-HARD Analysis\n\n\nI. Generalization of PAL to Least-to-Most Prompting\n\nDataset (  For our analysis, we consider the Math data sets GSM8K, and SVAMP as Zhou et al. (2022) found Least-to-Most helps solve complex math problems. We patch the GSM8K prompt from the Zhou et al. (2022) into PAL. Note that the other tasks in Zhou et al. (2022), like \"concatenating last letters\" from several words, require simple routines and are trivially solvable by PAL. We experiment with subsets of 500 examples and record results in Table 12. Here we see PAL can take advantage of the problem decomposition offered by the LEAST-TO-MOST reducing and further leverage the arithmetic capability in the Python runtime to achieve additional performance gains.\n\n\nJ. Prompts\n\nWe show here example PAL prompts we used for each data set. We show one example for each of the few-shot prompts. The fulls prompt can be found in our released code.  Louis,7,50,11 Bernard,5,80,13 Vincent,9,60,11 Gwen,8,70,15 For example: the age of Louis is 7, the weight of Gwen is 15 kg, the height of Bernard is 80 cm. We now add a penguin to the table: James, 12, 90, 12 How many penguins are less than 8 years old? \"\"\" # Put the penguins into a list. penguins = [] penguins.append(('Louis', 7, 50, 11)) penguins.append(('Bernard', 5, 80, 13)) penguins.append (('Vincent',9,60,11)) penguins.append (('Gwen',8,70,15)) # Add penguin James. penguins.append (('James',12,90,12) Figure 19: Prompt used for mathematical reasoning (1/2) #Q: Jason had 20 lollipops. He gave Denny some lollipops. Now Jason has 12 lollipops. How many lollipops did Jason give to Denny? jason_lollipops_initial = 20 jason_lollipops_after = 12 denny_lollipops = jason_lollipops_initial -jason_lollipops_after print(denny_lollipops) #Q: There are 15 trees in the grove. Grove workers will plant trees in the grove today.\n\n\nJ.1. Reasoning about Colored Objects\n\nAfter they are done, there will be 21 trees. How many trees did the grove workers plant today? trees_initial = 15 trees_after = 21 trees_added = trees_after -trees_initial print(trees_added) #Q: Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now? toys_initial = 5 mom_toys = 2 dad_toys = 2 total_received = mom_toys + dad_toys total_toys = toys_initial + total_received print(total_toys)   By manually examining the the model outputs, we observe that PAL often performs better on questions that involve counting objects that satisfy one or several conditions. For example, COT fails in the following example: \"On the desk, you see a bunch of items arranged in a row: a gold textbook, a purple puzzle, a teal necklace, and a silver pencil. How many non-gold items do you see to the right of the pencil?\". With pure NL reasoning, a LLM can easily lose track of the objects and output the wrong answer of \"The number of non-gold items to the right of the pencil is two. So the answer is two.\"\n\nIn comparison, PAL is able to accurately construct the object lists with correct order and attributes. Further, it can precisely leverage the simple yet complete PL syntax: it composes routines with functional operators from elementary builtin operation/operators. Figure 4 lists the last a few lines of the solution to the question described above generated by PAL, which perform filtering over objects. PAL can further compose such operations across multiple reasoning steps as shown in Figure 23b, where it first filters out all pink objects and then scans the remaining to count crayons. Other reasoning such as \"how many objects are left after filtering\" can be easily tackled precisely with an runtime. Table   ...This question focuses on age. We know the following: Louis is 7 years old, Bernard is 5 years old, Vincent is 9 years old, and Gwen is 8 years old.Now, we add James to this table: James is 12 years old. We then delete the penguin named Bernard from the table.The penguins that are less than 8 years old are Louis and Bernard. There are 2 penguins less than 8 years old. So the answer is 2.   Table  . In this task, we found a typical failure mode of the language is its inability to stably tracks states in its past generation. Figure 24 lists the generations of COT and PAL to the question that contains the removal of a penguin (\"...We then delete the penguin named Bernard from the table. How many penguins are less than 8 years old?\"). Although COT picks up the critical information that \"penguins that are less then 8 years old are Louis and Bernard\", and that \"Bernard is deleted\". It still fails to aggregate the information properly and infer that there is one penguin less then 8 left in the end. In comparison, PAL expresses this dynamic through manipulating a penguins list by filtering out the penguin whose name is \"Bernard\",  We found this especially common when the time deltas are across the month boundary. We show an example in Figure 25. Here with COT prompting, the LLM expresses the knowledge of the 28-day-long February, yet it still outputs 02/29/2017 as the final answer. With PAL, the actual calendar is accurate as a program handles the operation.\n\n\nK.2. Penguins in a\n\n\nWhile natural language understanding and decomposition arXiv:2211.10435v2 [cs.CL] bakers started with 200 loaves loaves_baked = 200 They sold 93 in the morning and 39 in the afternoon loaves_sold_morning = 93 loaves_sold_afternoon = 39\n\nFigure 1 :\n1The bakers started with 200 loaves. They sold 93 in the morning and 39 in the afternoon. So they sold 93 + 39 = 132 loaves. The grocery store returned 6 loaves. So they had 200 -132 -6 = 62 loaves left. A diagram illustrating PAL: Given a mathematical reasoning question, Chain-of-thought (left) generates intermediate reasoning steps of free-form text. In contrast, Program-aided Language models (PAL, right) generate intermediate steps and Python code. This shifts the role of running the reasoning steps from the language model to the Python interpreter.\n\nFigure 3 :\n3Example prompt for the mathematical reasoning tasks, from the GSM8K benchmark.\n\nFigure 4 :\n4An example for a PAL prompt in the COLORED OBJECTS task. For space considerations, we omit the code that creates the list objects.\n\n\nchose benchmark-specific prompt examples, while we used the same prompt examples as previous work, to disentangled the benefit of our approach from the benefit of the choice of examples.\n\n\nGehrmann, S., Adewumi, T., Aggarwal, K., Ammanamanchi, P. S., Anuoluwapo, A., Bosselut, A., Chandu, K. R., Clinciu, M., Das, D., Dhole, K. D., Du, W., Durmus, E., Du\u0161ek, O., Emezue, C., Gangal, V., Garbacea, C., Hashimoto, T., Hou, Y.,Jernite, Y., Jhamtani, H., Ji, Y., Jolly, S., Kale, M., Kumar, D., Ladhak, F., Madaan, A., Maddela, M., Mahajan, K., Mahamood, S., Majumder, B. P., Martins, P. H., McMillan-Major, A., Mille, S., van Miltenburg, E., Nadeem, M., Narayan, S., Nikolaev, V., Niyongabo, R. A., Osei, S., Parikh, A., Perez-Beltrachini, L., Rao, N. R., Raunak, V., Rodriguez, J. D., Santhanam, S., Sedoc, J., Sellam, T., Shaikh, S., Shimorina, A., Cabezudo, M. A. S., Strobelt, H., Subramani, N., Xu, W., Yang, D., Yerukola, A., and Zhou, J. The GEM Benchmark: Natural Language Generation, its Evaluation and Metrics. arXiv preprint arXiv:2102.01672, 2021. Gellenbeck, E. M. and Cook, C. R. An investigation of procedure and variable names as beacons during program comprehension. In Empirical studies of programmers: Fourth workshop, pp. 65-81. Ablex Publishing, Norwood, NJ, 1991. Gupta, N., Lin, K., Roth, D., Singh, S., and Gardner, M. Neural module networks for reasoning over text. arXiv preprint arXiv:1912.04971, 2019. Hendrycks, D., Burns, C., Kadavath, S., Arora, A., Basart, S., Tang, E., Song, D., and Steinhardt, J. Measuring mathematical problem solving with the MATH dataset, 2021. URL https://openreview.net/forum? id=7Bywt2mQsCe. Holtzman, A., Buys, J., Du, L., Forbes, M., and Choi, Y. The Curious Case of Neural Text Degeneration. In ICLR, 2019.\n\nFigure 10 :\n10explanation with uninformative variable names, but useful comments (PALvar + comms) Role of text in PAL: three different reasoning steps for the question Olivia has $23. She bought five bagels for $3 each. How much money does she have left? Uninformative variable names (left), Uninformative variable names with useful comments (left), and PAL. Including text description Setting COT PALvar PALvar + comms PAL Solve Rate 63.\n\nFigure 11 :Figure 12 :\n1112def solution(): \"\"\"Shawn has 10312864 toys. For Christmas, he got 13267894 toys each from his mom and dad. How many toys does he have now?\"\"\" Examples in Prompt (PAL) Example( question=\"Shawn has 10312864 toys. For Christmas, he got 13267894 toys each from his mom and dad. How many toys does he have now?\", thought=\"Shawn started with 10312864 toys. If he got 13267894 toys each from his mom and dad, then that is 26535788 more toys. 10312864 + 26535788 = 36848652.\", answer=\"36848652\", ),(d) Hard Examples in Prompt (CoT) def solution():\"\"\"Shawn has five toys. For Christmas, he got two toys each from his mom and dad. How many toys does he have now?\"\"\" Ablations of the original example solution for the few-shot prompting experiment. Comparison of solve rates between PAL and baselines as the number of samples increases from 1 to 40. Note that the solve rates for the baselines (PaLM, COT, Minerva) are obtained through logistic interpolation of solve rates at 1 and 40\n\nFigure 15 :\n15Prompts for Math data sets.\n\n\n500 examples) LEAST-TO-MOST LEAST-TO-\n\nFigure 21 :Figure 22 :\n2122Prompt used for OBJECT COUNTING. J.6. Repeat Copy # Q: Repeat the word duck four times, but halfway through also say quack result = [] for i in range(1, 5):result.append(\"duck\") if i == 2: result.append(\"quack\") print(\" \".join(result)) # Q: Print boolean eleven times, but after the 3rd and 8th also say correctresult = [] for i in range(1, 12): result.append(\"boolean\") if i == 3 or i == 8:result.append(\"correct\") print(\" \".join(result)) # Q: say java twice and data once, and then repeat all of this three times.result = [] tmp = [\"java\", \"java\", \"data\"] for i in range(3): result.extend(tmp) print(\" \".join(result)) # Q: ask a group of insects in what family? four times. after the fourth time say The happy family result = [] tmp = [] for i in range(1, 5): tmp.append(\"a group of insects in what family?\") tmp.append(\"The happy family\") result.extend(tmp) print(\" \".join(result)) Prompt used for REPEAT COPY. non-gold items to the right of the pencil non_gold = [object for object in objects[i+1:] if object[1] != 'gold'] (a) Snippet of PAL doing a filter operation. # Remove all pink objects non_pink = [object for object in objects if object[1] != 'pink'] # Count number of crayons crayons = [object for object in non_pink if object[0] == 'crayon'] answer = len(crayons) (b) Snippet of PAL composing multiple operations.\n\nFigure 23 :\n23Example model generation snippets on Reasoning about Color Object.\n\n\npenguin Bernard. penguins = [penguin for penguin in penguins if penguin[0] != 'Bernard'] # Find penguins under 8 years old. penguins_under_8_years_old = [penguin for penguin in penguins if penguin[1] < 8] # Count number of perguins under 8. num_penguin_under_8 = len(penguins_under_8_years_old) answer = num_penguin_under_8\n\nFigure 24 :\n24Generated Snippets for one question (...We then delete the penguin named Bernard from the table. How many penguins are less than 8 years old?) in Penguins in a\n\nFigure 25 :\n25Example model generation on Date Understanding.\n\n\n; (3) and algorithmic problems ( \u00a74.3) from BIG-Bench Hard as well. Details of all datasets are shown in Appendix H. For all of the experiments for which COT prompts were available, we use the same incontext examples as used by previous work. Otherwise, we randomly sampled a fixed set of in-context examples, and Q: Olivia has $23. She bought five bagels for $3 each. How much money does she have left?money_initial = 23 \nbagels = 5 \nbagel_cost = 3 \nmoney_spent = bagels * bagel_cost \nmoney_left = money_initial -money_spent \nanswer = money_left \n\n\n\n\nTable 1: Problem solve rate (%) on mathematical reasoning datasets. The highest number on each task is in bold. The results for DIRECT and PaLM-540B are fromWei et al. (2022), the results for LaMDA and UL2 are fromWang et al. (2022b), and the results for Minerva are from Lewkowycz et al.-HARD \nSVAMP \nASDIV \nSINGLEEQ \nSINGLEOP \nADDSUB \nMULTIARITH \n\nDIRECT Codex \n19.7 \n5.0 \n69.9 \n74.0 \n86.8 \n93.1 \n90.9 \n44.0 \nCOT UL2-20B \n4.1 \n-\n12.6 \n16.9 \n-\n-\n18.2 \n10.7 \nCOT LaMDA-137B \n17.1 \n-\n39.9 \n49.0 \n-\n-\n52.9 \n51.8 \nCOT Codex \n65.6 \n23.1 \n74.8 \n76.9 \n89.1 \n91.9 \n86.0 \n95.9 \nCOT PaLM-540B \n56.9 \n-\n79.0 \n73.9 \n92.3 \n94.1 \n91.9 \n94.7 \nCOT Minerva 540B \n58.8 \n-\n-\n-\n-\n-\n-\n-\nPAL \n72.0 \n61.2 \n79.4 \n79.6 \n96.1 \n94.6 \n92.5 \n99.2 \n\n\n\n\nCOLORED OBJECT PENGUINS DATE REPEAT COPY OBJECT COUNTINGDIRECT Codex \n75.7 \n71.1 \n49.9 \n81.3 \n37.6 \nCOT LaMDA-137B \n-\n-\n26.8 \n-\n-\nCOT PaLM-540B \n-\n65.1 \n65.3 \n-\n-\nCOT Codex \n86.3 \n79.2 \n64.8 \n68.8 \n73.0 \nPAL Codex \n95.1 \n93.3 \n76.2 \n90.6 \n96.7 \n\n\n\nTable 11 .\n11GSM8K \n\nCOT UL2-20B \n7.3 \nCOT LaMDA-137B \n27.7 \nCOT Codex \n78.0 \nCOT PaLM-540B \n74.4 \nCOT Minerva 540B \n78.5 \nPAL Codex \n80.4 \n\n\n\nTable 3 :\n3Problem solve rate (%) on GSM8K using \nmajority@40 (Wang et al., 2022b) \n\n\n\nTable 2\n2show that PAL is \n\n\n\n;Madaan et al. (2022). We created prompts that are similar to PAL's, except that they do include the final answer. This resulted in a 23.2 solve rate on GSM8K, much lower than PAL (72.0), and only 4.5 points higher than DIRECT. These results reinforce our hypothesis that the main benefit of PAL comes from the synergy with the interpreter, and not only from having a better prompt. Additional details are provided in Appendix B. For additional discussion on the advantages of code-prompts over textual-prompts, see Appendix G.Do variable names matter? In all our experiments, we used meaningful variable names in the PAL prompts, to ease the model's grounding of variables to the entities they represent. For the Python interpreter, however, variable names are meaningless. To measure the importance of meaningful variable names, we experimented with two prompts variants:1. PAL \u2212comment -the PAL prompt without intermediate NL comments. 2. PAL \u2212var \u2212comment -the PAL prompt without intermediate NL comments and with variable names substituted with random characters.\n\n\nranging from text-(Gehrmann et al.,Colored Objects \nDate \nPenguins \n\n60 \n\n70 \n\n80 \n\n90 \n\n100 \n\n84.4 \n\n64.8 \n\n79.2 \n\n95.2 \n\n76.2 \n\n93.3 \n91.1 \n\n69.1 \n\n91.3 \n\n79.9 \n\n63.4 \n\n91.9 \n\nCOT \nPAL \nPAL\u2212comment \nPAL \u2212var \n\n\u2212comment \n\n\n\n\nH.1 Creating GSM-HARD . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 H.2 GSM-HARD Analysis . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 23 J.1 Reasoning about Colored Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 26 J.2 Penguins in a Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 27 J.3 Date Understanding . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 28 J.4 Math . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 29 J.5 Object Counting . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 31 J.6 Repeat Copy . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 32 K Success and Failure Modes in Symbolic Tasks 33 K.1 Colored Objects . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 K.2 Penguins in a Table . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 33 K.3 Date Understanding . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .Koncel-Kedziorski, R., Roy, S., Amini, A., Kushman, N., \nand Hajishirzi, H. Mawps: A math word problem reposi-\ntory. In Proceedings of the 2016 Conference of the North \nAmerican Chapter of the Association for Computational \nLinguistics: Human Language Technologies, pp. 1152-\n1157, 2016. \n\nLewkowycz, A., Andreassen, A., Dohan, D., Dyer, E., \nMichalewski, H., Ramasesh, V., Slone, A., Anil, C., \nSchlag, I., Gutman-Solo, T., Wu, Y., Neyshabur, B., \nGur-Ari, G., and Misra, V. Solving quantitative rea-\nsoning problems with language models. arXiv preprint \narXiv:2206.14858, 2022. \n\nLing, W., Yogatama, D., Dyer, C., and Blunsom, P. Program \nInduction by Rationale Generation: Learning to Solve \nand Explain Algebraic Word Problems. arXiv preprint \narXiv:1705.04146, 2017. \n\nLiu, P., Yuan, W., Fu, J., Jiang, Z., Hayashi, H., and Neubig, \nG. Pre-train, Prompt, and Predict: A Systematic Survey \nof Prompting Methods in Natural Language Processing. \narXiv preprint arXiv:2107.13586, 2021. \n\nMadaan, A. and Yazdanbakhsh, A. Text and patterns: For \neffective chain of thought, it takes two to tango. arXiv \npreprint arXiv:2209.07686, 2022. \n\nMadaan, A., Zhou, S., Alon, U., Yang, Y., and Neubig, G. \nLanguage models of code are few-shot commonsense \nlearners. arXiv preprint arXiv:2210.07128, 2022. \n\nMarcus, G. Deep learning: A critical appraisal. arXiv \npreprint arXiv:1801.00631, 2018. \n\nMarcus, G. The next decade in ai: four steps towards robust \nartificial intelligence. arXiv preprint arXiv:2002.06177, \n2020. \n\nMiao, S.-y., Liang, C.-C., and Su, K.-Y. A diverse cor-\npus for evaluating and developing English math word \nproblem solvers. In Proceedings of the 58th Annual Meet-\ning of the Association for Computational Linguistics, pp. \n975-984, Online, July 2020. Association for Compu-\ntational Linguistics. doi: 10.18653/v1/2020.acl-main. \n92. URL https://aclanthology.org/2020. \nacl-main.92. \n\nMishra, S., Finlayson, M., Lu, P., Tang, L., Welleck, S., \nBaral, C., Rajpurohit, T., Tafjord, O., Sabharwal, A., \nClark, P., and Kalyan, A. Lila: A unified benchmark \nfor mathematical reasoning. In Proceedings of the 2022 \nConference on Empirical Methods in Natural Language \nProcessing (EMNLP), 2022. \n\nNogueira, R., Jiang, Z., and Lin, J. Investigating the limita-\ntions of transformers with simple arithmetic tasks. arXiv \npreprint arXiv:2102.13019, 2021. \n\nNye, M., Andreassen, A. J., Gur-Ari, G., Michalewski, H., \nAustin, J., Bieber, D., Dohan, D., Lewkowycz, A., Bosma, \nM., Luan, D., Sutton, C., and Odena, A. Show your \nWork: Scratchpads for Intermediate Computation with \nLanguage Models. arXiv preprint arXiv:2112.00114, \n2021. \n\nPatel, A., Bhattamishra, S., and Goyal, N. Are NLP Models \nReally Able to Solve Simple Math Word Problems? arXiv \npreprint arXiv:2103.07191, 2021. \n\nPi, X., Liu, Q., Chen, B., Ziyadi, M., Lin, Z., Gao, Y., Fu, \nQ., Lou, J.-G., and Chen, W. Reasoning like program \nexecutors. arXiv preprint arXiv:2201.11473, 2022. \n\nQian, J., Wang, H., Li, Z., Li, S., and Yan, X. Limitations \nof language models in arithmetic and symbolic induction. \narXiv preprint arXiv:2208.05051, 2022. \nPart I \n\nAppendix \n\nTable of Contents \n\nA Alternative Prompts without Meaningful Variable Names \n13 \n\nB Additional analysis on Arithmetic Reasoning \n13 \n\nC Effect of Using Language Models of Code \n14 \n\nD Analyzing the Effect of Increasing Number of Samples on PAL \n14 \n\nE Standard Deviations Across Multiple Order of Prompts \n17 \n\nF PAL Beyond Benchmarks \n17 \n\nG Closer Look into Token-level Behaviors of Different Mechanisms \n20 \n\nH Datasets \n20 \n\nI Generalization of PAL to Least-to-Most Prompting \n24 \n\nJ Prompts \n26 \n\n\n\nTable 6 :\n6Solve Rates for Ablations\n\nTable 7 :\n7Standard deviations for three runs for the math reasoning datasets.\n\nTable 8 :\n8Reasoning datasets about everyday objects and concepts.Dataset \nN \nExample \n\nObject Counting 1000 I have a chair, two potatoes, a cauliflower, a lettuce head, two tables, a \ncabbage, two onions, and three fridges. How many vegetables do I have? \nRepeat Copy \n32 \n\n\nTable 9 :\n9Reasoning datasets about algorithmic problems.Dataset \nN Example \n\nGSM8K (Cobbe et al., 2021) \n1319 Olivia has $23. She bought five bagels for $3 each. How \nmuch money does she have left? \nSVAMP (Patel et al., 2021) \n1000 Each pack of dvds costs 76 dollars. If there is a discount \nof 25 dollars on each pack. How much do you have to pay \nto buy each pack? \nASDIV \n\nTable 10 :\n10Examples from math reasoning datasets used in this work.Table fromWei et al. (2022). Datasets vary in number of words per question, with 47 words per question in GSM8K, 21 words in SINGLEOP, and \u223c30 words in the other datasets.Question \nCOT: GSM \nCOT: GSMHard \nIdentical? \n\n90 single use contacts come in 1 box \nand will last Pete 45 days. Each box \nis $100.00 and currently 10% off. \nIf he buys 2 boxes of contact, how \nmuch will each pair of contacts cost? \n\n90 contacts come in 1 box. Each \nbox is $100.00. So 90 contacts cost \n$100.00. If he buys 2 boxes, then \nhe will have 2 x 90 = 180 contacts. \n180 contacts cost 2 x $100.00 = \n$200.00. So each pair of contacts \ncosts $200.00 / 180 = $1.11. The \nanswer is $1.11. \n\n90 single use contacts come in 1 box. \nSo 1 box will last Pete 45 days. Each \nbox is $5451440 and currently 10% \noff. So each box is $5451440 * 0.9 = \n$4906296. If he buys 2 boxes of con-\ntact, he will have 2 * 90 = 180 con-\ntacts. So each pair of contacts will \ncost $4906296 / 180 = $2725849. \nThe answer is $2725849 \n\nYes \n\nA chef bought 4 bags of onions. \nEach bag weighs 50 pounds. A \npound of onions cost $1.50. How \nmuch did the chef spend? \n\nThe chef bought 4 bags of onions. \nEach bag weighs 50 pounds. So the \ntotal weight is 4 * 50 = 200 pounds. \nA pound of onions cost $1.50. So \n200 pounds of onions cost 200 * \n1.50 = 300 dollars. The answer is \n300. \n\nThe chef bought 4 bags of onions. \nEach bag weighs 50 pounds. So the \ntotal weight is 4 * 50 = 200 pounds. \nA pound of onions cost $409201. \nSo 200 pounds of onions cost 200 * \n409201 = $81840200. The answer \nis $81840200. \n\n\n\nTable 11 :\n11Analysis of generations from CODEX. Manual analysis of 25 randomly generated thoughts reveals that 16 out of 25 thoughts were identical, whereas others were close paraphrases.\n\nTable 12 :\n12Results on GSM8K and SVAMP with LEAST-TO-MOST and LEAST-TO-MOST with PAL solving prompt.\n\n# Q :\nQOn the table, you see a bunch of objects arranged in a row: a purple paperclip, a pink stress ball, a brown keychain, a green scrunchiephone charger, a mauve fidget spinner, and a burgundy pen. What is the color of the object directly to the right of the stress ball? # Put objects into a list to record orderingobjects = [] objects += [('paperclip', 'purple')] * 1 objects += [('stress ball', 'pink')] * 1 objects += [('keychain', 'brown')] * 1 objects += [('scrunchiephone charger', 'green')] * 1 objects += [('fidget spinner', 'mauve')] * 1 objects += [('pen', 'burgundy')] * 1 # Find the index of the stress ball stress_ball_idx = None for i, object in enumerate(objects): if object[0] == 'stress ball': stress_ball_idx = i break # Find the directly right object direct_right = objects[stress_ball_idx+1] # Check the directly right object's color direct_right_color = direct_right[1] answer = direct_right_color J.2. Penguins in aTable \"\"\"Q: Here is a table where the first line is a header and each subsequent line is a penguin: name, age, height (cm), weight (kg)\n\n\n) # Find penguins under 8 years old. penguins_under_8_years_old = [penguin for penguin in penguins if penguin[1] < 8] # Count number of perguins under 8. num_penguin_under_8 = len(penguins_under_8_years_old) answer = num_penguin_under_8Figure 17J.3. Date Understanding # Q: 2015 is coming in 36 hours. What is the date one week from today in MM/DD/YYYY? # If 2015 is coming in 36 hours, then today is 36 hours before. today = datetime(2015, 1, 1) -relativedelta(hours=36) # One week from today, one_week_from_today = today + relativedelta(weeks=1) # The answer formatted with %m/%d/%Y is one_week_from_today.strftime('%m/%d/%Y')J.4. Math#Q: Olivia has \\$23. She bought five bagels for \\$3 each. How much money does she have #Q: Michael had 58 golf balls. On tuesday, he lost 23 golf balls. On wednesday, he lost 2 more. How many golf balls did he have at the end of wednesday?#Q: There were nine computers in the server room. Five more computers were installed each day, from monday to thursday. How many computers are now in the server room?#Q: If there are 3 cars in the parking lot and 2 more cars arrive, how many cars are in the parking lot? cars_initial = 3 cars_arrived = 2 total_cars = cars_initial + cars_arrived print(total_cars) #Q: Leah had 32 chocolates and her sister had 42. If they ate 35, how many pieces do they have left in total?left? \nmoney_initial = 23 \nbagels = 5 \nbagel_cost = 3 \nmoney_spent = bagels * bagel_cost \nmoney_left = money_initial -money_spent \nprint(money_left) \n\ngolf_balls_initial = 58 \ngolf_balls_lost_tuesday = 23 \ngolf_balls_lost_wednesday = 2 \ngolf_balls_left = golf_balls_initial -golf_balls_lost_tuesday -\ngolf_balls_lost_wednesday \nprint(golf_balls_left) \n\ncomputers_initial = 9 \ncomputers_per_day = 5 \nnum_days = 4 # 4 days between monday and thursday \ncomputers_added = computers_per_day * num_days \ncomputers_total = computers_initial + computers_added \nprint(computers_total) \n\nleah_chocolates = 32 \nsister_chocolates = 42 \ntotal_chocolates = leah_chocolates + sister_chocolates \nchocolates_eaten = 35 \nchocolates_left = total_chocolates -chocolates_eaten \nprint(chocolates_left) \n\n\n\n\nFigure 20: Prompt used for mathematical reasoning (2/2) J.5. Object Counting # Q: I have a chair, two potatoes, a cauliflower, a lettuce head, two tables, a cabbage, two onions, and three fridges. How many vegetables do I have?# note: I'm not counting the chair, tables, or fridges # Q: I have a drum, a flute, a clarinet, a violin, four accordions, a piano, a trombone, and a trumpet. How many musical instruments do I have? print(sum(musical_instruments_to_count.values())) # Q: I have a chair, two ovens, and three tables. How many objects do I have? print(sum(objects_to_count.values()))vegetables_to_count = { \n'potato': 2, \n'cauliflower': 1, \n'lettuce head': 1, \n'cabbage': 1, \n'onion': 2 \n} \nprint(sum(vegetables_to_count.values())) \n\nmusical_instruments_to_count = { \n'drum': 1, \n'flute': 1, \n'clarinet': 1, \n'violin': 1, \n'accordion': 4, \n'piano': 1, \n'trombone': 1, \n'trumpet': 1 \n} \nobjects_to_count = { \n'chair': 1, \n'oven': 2, \n'table': 3 \n} \n\n\n\nand maintaining a penguins under 8 years old list. It offloads tracking exact the values (in this case, the length of the list) to the deterministic Python runtime. K.3. Date Understanding Q: Jane was born on the last day of Feburary in 2001. Today is her 16-year-old birthday. What is the date 24 hours later in MM/DD/YYYY? A: The last day of February is the 28th, so Jane was born on 02/28/2001. Today is her 16-year old birthday, so today is 02/28/2017. So 24 hours later is 02/29/2017. So the answer is 02/29/2017. # Q: Jane was born on the last day of Feburary in 2001. Today is her 16-year-old birthday. What is the date 24 hours later in MM/DD/YYYY? # If Jane was born on the last day of Feburary in 2001 and today is her 16-year-old birthday, then today is 16 years later. today = datetime(2001, 2, 28) + relativedelta(years=16) # 24 hours later, later = today + relativedelta(hours=24) # The answer formatted with %m/%d/%Y is later.strftime('%m/%d/%Y')\u2192 \n\n\u2192 \n\n\u2192 \n\n\nchat.openai.com\n\nDo as I Can. M Ahn, A Brohan, N Brown, Y Chebotar, O Cortes, B David, C Finn, C Fu, K Gopalakrishnan, K Hausman, A Herzog, D Ho, J Hsu, J Ibarz, B Ichter, A Irpan, E Jang, R J Ruano, K Jeffrey, S Jesmonth, N J Joshi, R Julian, D Kalashnikov, Y Kuang, K.-H Lee, S Levine, Y Lu, L Luu, C Parada, P Pastor, J Quiambao, K Rao, J Rettinghouse, D Reyes, P Sermanet, N Sievers, C Tan, A Toshev, V Vanhoucke, F Xia, T Xiao, P Xu, S Xu, M Yan, A Zeng, arXiv:2204.01691Grounding Language in Robotic Affordances. not as I SayarXiv preprintAhn, M., Brohan, A., Brown, N., Chebotar, Y., Cortes, O., David, B., Finn, C., Fu, C., Gopalakrishnan, K., Hausman, K., Herzog, A., Ho, D., Hsu, J., Ibarz, J., Ichter, B., Irpan, A., Jang, E., Ruano, R. J., Jeffrey, K., Jesmonth, S., Joshi, N. J., Julian, R., Kalashnikov, D., Kuang, Y., Lee, K.-H., Levine, S., Lu, Y., Luu, L., Parada, C., Pastor, P., Quiambao, J., Rao, K., Rettinghouse, J., Reyes, D., Sermanet, P., Sievers, N., Tan, C., Toshev, A., Vanhoucke, V., Xia, F., Xiao, T., Xu, P., Xu, S., Yan, M., and Zeng, A. Do as I Can, not as I Say: Grounding Language in Robotic Affordances. arXiv preprint arXiv:2204.01691, 2022.\n\nTowards Interpretable Math Word Problem Solving with Operation-Based Formalisms. A Amini, S Gabriel, S Lin, R Koncel-Kedziorski, Y Choi, H Hajishirzi, Mathqa, ACL. Amini, A., Gabriel, S., Lin, S., Koncel-Kedziorski, R., Choi, Y., and Hajishirzi, H. MathQA: Towards Interpretable Math Word Problem Solving with Operation-Based For- malisms. In ACL, 2019.\n\nGiving bert a calculator: Finding operations and arguments with reading comprehension. D Andor, L He, K Lee, E Pitler, arXiv:1909.00109arXiv preprintAndor, D., He, L., Lee, K., and Pitler, E. Giving bert a cal- culator: Finding operations and arguments with reading comprehension. arXiv preprint arXiv:1909.00109, 2019.\n\nLanguage Models are Few-Shot Learners. T B Brown, B Mann, N Ryder, M Subbiah, J Kaplan, P Dhariwal, A Neelakantan, P Shyam, G Sastry, A Askell, S Agarwal, A Herbert-Voss, G Krueger, T Henighan, R Child, A Ramesh, D M Ziegler, J Wu, C Winter, C Hesse, M Chen, E Sigler, M Litwin, S Gray, B Chess, J Clark, C Berner, S Mccandlish, A Radford, I Sutskever, Amodei , D , NeurIPS. Brown, T. B., Mann, B., Ryder, N., Subbiah, M., Kaplan, J., Dhariwal, P., Neelakantan, A., Shyam, P., Sastry, G., Askell, A., Agarwal, S., Herbert-Voss, A., Krueger, G., Henighan, T., Child, R., Ramesh, A., Ziegler, D. M., Wu, J., Winter, C., Hesse, C., Chen, M., Sigler, E., Litwin, M., Gray, S., Chess, B., Clark, J., Berner, C., McCandlish, S., Radford, A., Sutskever, I., and Amodei, D. Language Models are Few-Shot Learners. In NeurIPS, 2020.\n\n. M Chen, J Tworek, H Jun, Q Yuan, H P D O Pinto, J Kaplan, H Edwards, Y Burda, N Joseph, G Brockman, A Ray, R Puri, G Krueger, M Petrov, H Khlaaf, G Sastry, P Mishkin, B Chan, S Gray, N Ryder, M Pavlov, A Power, L Kaiser, M Bavarian, C Winter, P Tillet, F P Such, D Cummings, M Plappert, F Chantzis, E Barnes, A Herbert-Voss, W H Guss, A Nichol, A Paino, N Tezak, J Tang, I Babuschkin, S Balaji, S Jain, W Saunders, C Hesse, A N Carr, J Leike, J Achiam, V Misra, E Morikawa, A Radford, M Knight, M Brundage, M Murati, K Mayer, P Welinder, B Mcgrew, D Amodei, S Mc-Candlish, I Sutskever, W Zaremba, arXiv:2107.03374arXiv preprintEvaluating Large Language Models Trained on CodeChen, M., Tworek, J., Jun, H., Yuan, Q., Pinto, H. P. d. O., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., Ray, A., Puri, R., Krueger, G., Petrov, M., Khlaaf, H., Sastry, G., Mishkin, P., Chan, B., Gray, S., Ryder, N., Pavlov, M., Power, A., Kaiser, L., Bavarian, M., Winter, C., Tillet, P., Such, F. P., Cummings, D., Plappert, M., Chantzis, F., Barnes, E., Herbert-Voss, A., Guss, W. H., Nichol, A., Paino, A., Tezak, N., Tang, J., Babuschkin, I., Balaji, S., Jain, S., Saunders, W., Hesse, C., Carr, A. N., Leike, J., Achiam, J., Misra, V., Morikawa, E., Radford, A., Knight, M., Brundage, M., Murati, M., Mayer, K., Welinder, P., McGrew, B., Amodei, D., Mc- Candlish, S., Sutskever, I., and Zaremba, W. Evaluating Large Language Models Trained on Code. arXiv preprint arXiv:2107.03374, 2021a.\n\nEvaluating large language models trained on code. M Chen, J Tworek, H Jun, Q Yuan, H P D O Pinto, J Kaplan, H Edwards, Y Burda, N Joseph, G Brockman, arXiv:2107.03374arXiv preprintChen, M., Tworek, J., Jun, H., Yuan, Q., Pinto, H. P. d. O., Kaplan, J., Edwards, H., Burda, Y., Joseph, N., Brockman, G., et al. Evaluating large language models trained on code. arXiv preprint arXiv:2107.03374, 2021b.\n\nProgram of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks. W Chen, X Ma, X Wang, W W Cohen, arXiv:2211.12588arXiv preprintChen, W., Ma, X., Wang, X., and Cohen, W. W. Program of thoughts prompting: Disentangling computation from reasoning for numerical reasoning tasks. arXiv preprint arXiv:2211.12588, 2022.\n\nBinding language models in symbolic languages. Z Cheng, T Xie, P Shi, C Li, R Nadkarni, Y Hu, C Xiong, D Radev, M Ostendorf, L Zettlemoyer, N A Smith, Yu , T , arXiv:2210.02875arXiv preprintCheng, Z., Xie, T., Shi, P., Li, C., Nadkarni, R., Hu, Y., Xiong, C., Radev, D., Ostendorf, M., Zettlemoyer, L., Smith, N. A., and Yu, T. Binding language models in symbolic languages. arXiv preprint arXiv:2210.02875, 2022.\n\nA Chowdhery, S Narang, J Devlin, M Bosma, G Mishra, A Roberts, P Barham, H W Chung, C Sutton, S Gehrmann, P Schuh, K Shi, S Tsvyashchenko, J Maynez, A Rao, P Barnes, Y Tay, N Shazeer, V Prabhakaran, E Reif, N Du, B Hutchinson, R Pope, J Bradbury, J Austin, M Isard, G Gur-Ari, P Yin, T Duke, A Levskaya, S Ghemawat, S Dev, H Michalewski, X Garcia, V Misra, K Robinson, L Fedus, D Zhou, D Ippolito, D Luan, H Lim, B Zoph, A Spiridonov, R Sepassi, D Dohan, S Agrawal, M Omernick, A M Dai, T S Pillai, M Pellat, A Lewkowycz, E Moreira, R Child, O Polozov, K Lee, Z Zhou, X Wang, B Saeta, M Diaz, O Firat, M Catasta, J Wei, K Meier-Hellstern, D Eck, J Dean, S Petrov, N Fiedel, Palm, arXiv:2204.02311Scaling Language Modeling with Pathways. arXiv preprintChowdhery, A., Narang, S., Devlin, J., Bosma, M., Mishra, G., Roberts, A., Barham, P., Chung, H. W., Sutton, C., Gehrmann, S., Schuh, P., Shi, K., Tsvyashchenko, S., Maynez, J., Rao, A., Barnes, P., Tay, Y., Shazeer, N., Prabhakaran, V., Reif, E., Du, N., Hutchinson, B., Pope, R., Bradbury, J., Austin, J., Isard, M., Gur-Ari, G., Yin, P., Duke, T., Levskaya, A., Ghemawat, S., Dev, S., Michalewski, H., Garcia, X., Misra, V., Robinson, K., Fedus, L., Zhou, D., Ippolito, D., Luan, D., Lim, H., Zoph, B., Spiridonov, A., Sepassi, R., Dohan, D., Agrawal, S., Omernick, M., Dai, A. M., Pillai, T. S., Pellat, M., Lewkowycz, A., Moreira, E., Child, R., Polo- zov, O., Lee, K., Zhou, Z., Wang, X., Saeta, B., Diaz, M., Firat, O., Catasta, M., Wei, J., Meier-Hellstern, K., Eck, D., Dean, J., Petrov, S., and Fiedel, N. PaLM: Scal- ing Language Modeling with Pathways. arXiv preprint arXiv:2204.02311, 2022.\n\n. K Cobbe, V Kosaraju, M Bavarian, J Hilton, R Nakano, C Hesse, J Schulman, arXiv:2110.14168Training Verifiers to Solve Math Word Problems. arXiv preprintCobbe, K., Kosaraju, V., Bavarian, M., Hilton, J., Nakano, R., Hesse, C., and Schulman, J. Training Veri- fiers to Solve Math Word Problems. arXiv preprint arXiv:2110.14168, 2021.\n\nJust add functions: A neuralsymbolic language model. D Demeter, D Downey, Proceedings of the AAAI Conference on Artificial Intelligence. the AAAI Conference on Artificial Intelligence34Demeter, D. and Downey, D. Just add functions: A neural- symbolic language model. In Proceedings of the AAAI Conference on Artificial Intelligence, volume 34, pp. 7634-7642, 2020.\n\nA Garcez, L C Lamb, arXiv:2012.05876Neurosymbolic ai: the 3rd wave. arXiv preprintGarcez, A. d. and Lamb, L. C. Neurosymbolic ai: the 3rd wave. arXiv preprint arXiv:2012.05876, 2020.\n\nE Reif, D Ippolito, A Yuan, A Coenen, C Callison-Burch, Wei , J , arXiv:2109.03910A Recipe for Arbitrary Text Style Transfer with Large Language Models. arXiv preprintReif, E., Ippolito, D., Yuan, A., Coenen, A., Callison- Burch, C., and Wei, J. A Recipe for Arbitrary Text Style Transfer with Large Language Models. arXiv preprint arXiv:2109.03910, 2021.\n\n. V Sanh, A Webson, C Raffel, S H Bach, L Sutawika, Z Alyafeai, A Chaffin, A Stiegler, T L Scao, A Raja, M Dey, M S Bari, C Xu, U Thakker, S S Sharma, E Szczechla, T Kim, G Chhablani, N Nayak, D Datta, J Chang, M T Jiang, .-J Wang, H Manica, M Shen, S Yong, Z X Pandey, H Bawden, R Wang, T Neeraj, T Rozen, J Sharma, A Santilli, A Fevry, T Fries, J A Teehan, R Biderman, S Gao, L Bers, T Wolf, T Rush, A M Multitask, Prompted Training Enables Zero-Shot Task GeneralizationSanh, V., Webson, A., Raffel, C., Bach, S. H., Sutawika, L., Alyafeai, Z., Chaffin, A., Stiegler, A., Scao, T. L., Raja, A., Dey, M., Bari, M. S., Xu, C., Thakker, U., Sharma, S. S., Szczechla, E., Kim, T., Chhablani, G., Nayak, N., Datta, D., Chang, J., Jiang, M. T.-J., Wang, H., Manica, M., Shen, S., Yong, Z. X., Pandey, H., Bawden, R., Wang, T., Neeraj, T., Rozen, J., Sharma, A., Santilli, A., Fevry, T., Fries, J. A., Teehan, R., Biderman, S., Gao, L., Bers, T., Wolf, T., and Rush, A. M. Multitask Prompted Training Enables Zero-Shot Task Generalization, 2021.\n\nFew-shot semantic parsing with language models trained on code. R Shin, B Van Durme, arXiv:2112.08696arXiv preprintShin, R. and Van Durme, B. Few-shot semantic parsing with language models trained on code. arXiv preprint arXiv:2112.08696, 2021.\n\nConstrained language models yield few-shot semantic parsers. R Shin, C H Lin, S Thomson, C Chen, S Roy, E A Platanios, A Pauls, D Klein, J Eisner, B Van Durme, arXiv:2104.08768arXiv preprintShin, R., Lin, C. H., Thomson, S., Chen, C., Roy, S., Platan- ios, E. A., Pauls, A., Klein, D., Eisner, J., and Van Durme, B. Constrained language models yield few-shot semantic parsers. arXiv preprint arXiv:2104.08768, 2021.\n\nChallenging big-bench tasks and whether chain-of-thought can solve them. M Suzgun, N Scales, N Scharli, S Gehrmann, Y Tay, H W Chung, A Chowdhery, Q V Le, E Chi, D Zhou, Wei , J , abs/2210.09261ArXiv. Suzgun, M., Scales, N., Scharli, N., Gehrmann, S., Tay, Y., Chung, H. W., Chowdhery, A., Le, Q. V., Chi, E., Zhou, D., and Wei, J. Challenging big-bench tasks and whether chain-of-thought can solve them. ArXiv, abs/2210.09261, 2022.\n\nThe effects of comments and identifier names on program comprehensibility: an experimental investigation. A A Takang, P A Grubb, R D Macredie, J. Prog. Lang. 43Takang, A. A., Grubb, P. A., and Macredie, R. D. The effects of comments and identifier names on program comprehensibility: an experimental investigation. J. Prog. Lang., 4(3):143-167, 1996.\n\nX Wang, J Wei, D Schuurmans, Q Le, E Chi, D Zhou, arXiv:2207.00747Rationale-Augmented Ensembles in Language Models. arXiv preprintsWang, X., Wei, J., Schuurmans, D., Le, Q., Chi, E., and Zhou, D. Rationale-Augmented Ensembles in Language Models. arXiv preprints arXiv:2207.00747, 2022a.\n\nX Wang, J Wei, D Schuurmans, Q Le, E Chi, D Zhou, arXiv:2203.11171Consistency Improves Chain of Thought Reasoning in Language Models. arXiv preprintWang, X., Wei, J., Schuurmans, D., Le, Q., Chi, E., and Zhou, D. Self-Consistency Improves Chain of Thought Reasoning in Language Models. arXiv preprint arXiv:2203.11171, 2022b.\n\nJ Wei, M Bosma, V Y Zhao, K Guu, A W Yu, B Lester, N Du, A M Dai, Q V Le, arXiv:2109.01652Finetuned Language Models are Zero-shot Learners. arXiv preprintWei, J., Bosma, M., Zhao, V. Y., Guu, K., Yu, A. W., Lester, B., Du, N., Dai, A. M., and Le, Q. V. Finetuned Lan- guage Models are Zero-shot Learners. arXiv preprint arXiv:2109.01652, 2021.\n\nJ Wei, X Wang, D Schuurmans, M Bosma, E Chi, Q Le, D Zhou, arXiv:2201.11903Chain of Thought Prompting Elicits Reasoning in Large Language Models. arXiv preprintWei, J., Wang, X., Schuurmans, D., Bosma, M., Chi, E., Le, Q., and Zhou, D. Chain of Thought Prompting Elicits Reasoning in Large Language Models. arXiv preprint arXiv:2201.11903, 2022.\n\nY Wu, A Q Jiang, W Li, M N Rabe, C Staats, M Jamnik, C Szegedy, arXiv:2205.12615Autoformalization with Large Language Models. arXiv preprintWu, Y., Jiang, A. Q., Li, W., Rabe, M. N., Staats, C., Jamnik, M., and Szegedy, C. Autoformalization with Large Lan- guage Models. arXiv preprint arXiv:2205.12615, 2022.\n\nS Yao, J Zhao, D Yu, N Du, I Shafran, K Narasimhan, Y Cao, arXiv:2210.03629Synergizing reasoning and acting in language models. arXiv preprintYao, S., Zhao, J., Yu, D., Du, N., Shafran, I., Narasimhan, K., and Cao, Y. React: Synergizing reasoning and acting in language models. arXiv preprint arXiv:2210.03629, 2022.\n\nD Zhou, N Sch\u00e4rli, L Hou, J Wei, N Scales, X Wang, D Schuurmans, O Bousquet, Q Le, Chi , E , arXiv:2205.10625Most Prompting Enables Complex Reasoning in Large Language Models. arXiv preprintZhou, D., Sch\u00e4rli, N., Hou, L., Wei, J., Scales, N., Wang, X., Schuurmans, D., Bousquet, O., Le, Q., and Chi, E. Least- to-Most Prompting Enables Complex Reasoning in Large Language Models. arXiv preprint arXiv:2205.10625, 2022.\n", "annotations": {"author": "[{\"end\":64,\"start\":38},{\"end\":96,\"start\":65},{\"end\":129,\"start\":97},{\"end\":156,\"start\":130},{\"end\":169,\"start\":157},{\"end\":200,\"start\":170},{\"end\":232,\"start\":201},{\"end\":266,\"start\":233},{\"end\":64,\"start\":38},{\"end\":96,\"start\":65},{\"end\":129,\"start\":97},{\"end\":156,\"start\":130},{\"end\":169,\"start\":157},{\"end\":200,\"start\":170},{\"end\":232,\"start\":201},{\"end\":266,\"start\":233}]", "publisher": null, "author_last_name": "[{\"end\":46,\"start\":43},{\"end\":76,\"start\":70},{\"end\":108,\"start\":104},{\"end\":138,\"start\":134},{\"end\":168,\"start\":165},{\"end\":181,\"start\":177},{\"end\":213,\"start\":207},{\"end\":246,\"start\":240},{\"end\":46,\"start\":43},{\"end\":76,\"start\":70},{\"end\":108,\"start\":104},{\"end\":138,\"start\":134},{\"end\":168,\"start\":165},{\"end\":181,\"start\":177},{\"end\":213,\"start\":207},{\"end\":246,\"start\":240}]", "author_first_name": "[{\"end\":42,\"start\":38},{\"end\":69,\"start\":65},{\"end\":103,\"start\":97},{\"end\":133,\"start\":130},{\"end\":164,\"start\":157},{\"end\":176,\"start\":170},{\"end\":206,\"start\":201},{\"end\":239,\"start\":233},{\"end\":42,\"start\":38},{\"end\":69,\"start\":65},{\"end\":103,\"start\":97},{\"end\":133,\"start\":130},{\"end\":164,\"start\":157},{\"end\":176,\"start\":170},{\"end\":206,\"start\":201},{\"end\":239,\"start\":233}]", "author_affiliation": null, "title": "[{\"end\":35,\"start\":1},{\"end\":301,\"start\":267},{\"end\":35,\"start\":1},{\"end\":301,\"start\":267}]", "venue": null, "abstract": "[{\"end\":2077,\"start\":444},{\"end\":2077,\"start\":444}]", "bib_ref": "[{\"end\":2232,\"start\":2226},{\"end\":2268,\"start\":2254},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":2288,\"start\":2268},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2401,\"start\":2383},{\"end\":2421,\"start\":2401},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2460,\"start\":2436},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2476,\"start\":2460},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2496,\"start\":2476},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":2539,\"start\":2521},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2556,\"start\":2539},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2603,\"start\":2583},{\"end\":2773,\"start\":2755},{\"end\":3126,\"start\":3107},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3145,\"start\":3126},{\"end\":3363,\"start\":3339},{\"end\":3391,\"start\":3363},{\"end\":3432,\"start\":3409},{\"end\":3450,\"start\":3432},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3669,\"start\":3645},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4194,\"start\":4174},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":4213,\"start\":4194},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4236,\"start\":4213},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6149,\"start\":6129},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6862,\"start\":6842},{\"end\":6879,\"start\":6862},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6902,\"start\":6879},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7465,\"start\":7448},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8336,\"start\":8316},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8353,\"start\":8336},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":8371,\"start\":8353},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8390,\"start\":8371},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11913,\"start\":11893},{\"end\":11941,\"start\":11915},{\"end\":11968,\"start\":11943},{\"end\":12012,\"start\":11980},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":12086,\"start\":12065},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":12614,\"start\":12595},{\"end\":13513,\"start\":13485},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":14137,\"start\":14116},{\"end\":15513,\"start\":15508},{\"end\":15525,\"start\":15519},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":17776,\"start\":17756},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":18677,\"start\":18658},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":18964,\"start\":18941},{\"end\":22119,\"start\":22094},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":22139,\"start\":22119},{\"end\":22301,\"start\":22281},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":22368,\"start\":22348},{\"end\":22453,\"start\":22435},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":22759,\"start\":22741},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":22776,\"start\":22759},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":22794,\"start\":22776},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":22834,\"start\":22814},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23135,\"start\":23111},{\"end\":23158,\"start\":23135},{\"end\":23186,\"start\":23158},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23630,\"start\":23611},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23996,\"start\":23973},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":24018,\"start\":24001},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":24293,\"start\":24270},{\"end\":24499,\"start\":24483},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":25020,\"start\":25001},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":25939,\"start\":25920},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26299,\"start\":26279},{\"end\":33897,\"start\":33894},{\"end\":36802,\"start\":36796},{\"end\":36804,\"start\":36802},{\"end\":36807,\"start\":36804},{\"end\":36818,\"start\":36807},{\"end\":36820,\"start\":36818},{\"end\":36823,\"start\":36820},{\"end\":36834,\"start\":36823},{\"end\":36836,\"start\":36834},{\"end\":36839,\"start\":36836},{\"end\":36847,\"start\":36839},{\"end\":36849,\"start\":36847},{\"end\":36852,\"start\":36849},{\"end\":36854,\"start\":36852},{\"end\":37242,\"start\":37223},{\"end\":37380,\"start\":37348},{\"end\":37541,\"start\":37509},{\"end\":37709,\"start\":37677},{\"end\":37897,\"start\":37865},{\"end\":39988,\"start\":39965},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41741,\"start\":41723},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41850,\"start\":41832},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41908,\"start\":41890},{\"end\":42497,\"start\":42491},{\"end\":42499,\"start\":42497},{\"end\":42502,\"start\":42499},{\"end\":42513,\"start\":42502},{\"end\":42515,\"start\":42513},{\"end\":42518,\"start\":42515},{\"end\":42529,\"start\":42518},{\"end\":42531,\"start\":42529},{\"end\":42534,\"start\":42531},{\"end\":42542,\"start\":42534},{\"end\":42544,\"start\":42542},{\"end\":42547,\"start\":42544},{\"end\":42549,\"start\":42547},{\"end\":42901,\"start\":42889},{\"end\":42903,\"start\":42901},{\"end\":42906,\"start\":42903},{\"end\":42909,\"start\":42906},{\"end\":42936,\"start\":42927},{\"end\":42938,\"start\":42936},{\"end\":42941,\"start\":42938},{\"end\":42944,\"start\":42941},{\"end\":42993,\"start\":42983},{\"end\":42996,\"start\":42993},{\"end\":42999,\"start\":42996},{\"end\":43002,\"start\":42999},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":53794,\"start\":53777},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":53853,\"start\":53834},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":61979,\"start\":61962},{\"end\":2232,\"start\":2226},{\"end\":2268,\"start\":2254},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":2288,\"start\":2268},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2401,\"start\":2383},{\"end\":2421,\"start\":2401},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2460,\"start\":2436},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2476,\"start\":2460},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2496,\"start\":2476},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":2539,\"start\":2521},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2556,\"start\":2539},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2603,\"start\":2583},{\"end\":2773,\"start\":2755},{\"end\":3126,\"start\":3107},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3145,\"start\":3126},{\"end\":3363,\"start\":3339},{\"end\":3391,\"start\":3363},{\"end\":3432,\"start\":3409},{\"end\":3450,\"start\":3432},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3669,\"start\":3645},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4194,\"start\":4174},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":4213,\"start\":4194},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4236,\"start\":4213},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6149,\"start\":6129},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6862,\"start\":6842},{\"end\":6879,\"start\":6862},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6902,\"start\":6879},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7465,\"start\":7448},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8336,\"start\":8316},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8353,\"start\":8336},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":8371,\"start\":8353},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8390,\"start\":8371},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11913,\"start\":11893},{\"end\":11941,\"start\":11915},{\"end\":11968,\"start\":11943},{\"end\":12012,\"start\":11980},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":12086,\"start\":12065},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":12614,\"start\":12595},{\"end\":13513,\"start\":13485},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":14137,\"start\":14116},{\"end\":15513,\"start\":15508},{\"end\":15525,\"start\":15519},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":17776,\"start\":17756},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":18677,\"start\":18658},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":18964,\"start\":18941},{\"end\":22119,\"start\":22094},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":22139,\"start\":22119},{\"end\":22301,\"start\":22281},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":22368,\"start\":22348},{\"end\":22453,\"start\":22435},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":22759,\"start\":22741},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":22776,\"start\":22759},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":22794,\"start\":22776},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":22834,\"start\":22814},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23135,\"start\":23111},{\"end\":23158,\"start\":23135},{\"end\":23186,\"start\":23158},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23630,\"start\":23611},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":23996,\"start\":23973},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":24018,\"start\":24001},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":24293,\"start\":24270},{\"end\":24499,\"start\":24483},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":25020,\"start\":25001},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":25939,\"start\":25920},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26299,\"start\":26279},{\"end\":33897,\"start\":33894},{\"end\":36802,\"start\":36796},{\"end\":36804,\"start\":36802},{\"end\":36807,\"start\":36804},{\"end\":36818,\"start\":36807},{\"end\":36820,\"start\":36818},{\"end\":36823,\"start\":36820},{\"end\":36834,\"start\":36823},{\"end\":36836,\"start\":36834},{\"end\":36839,\"start\":36836},{\"end\":36847,\"start\":36839},{\"end\":36849,\"start\":36847},{\"end\":36852,\"start\":36849},{\"end\":36854,\"start\":36852},{\"end\":37242,\"start\":37223},{\"end\":37380,\"start\":37348},{\"end\":37541,\"start\":37509},{\"end\":37709,\"start\":37677},{\"end\":37897,\"start\":37865},{\"end\":39988,\"start\":39965},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41741,\"start\":41723},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41850,\"start\":41832},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":41908,\"start\":41890},{\"end\":42497,\"start\":42491},{\"end\":42499,\"start\":42497},{\"end\":42502,\"start\":42499},{\"end\":42513,\"start\":42502},{\"end\":42515,\"start\":42513},{\"end\":42518,\"start\":42515},{\"end\":42529,\"start\":42518},{\"end\":42531,\"start\":42529},{\"end\":42534,\"start\":42531},{\"end\":42542,\"start\":42534},{\"end\":42544,\"start\":42542},{\"end\":42547,\"start\":42544},{\"end\":42549,\"start\":42547},{\"end\":42901,\"start\":42889},{\"end\":42903,\"start\":42901},{\"end\":42906,\"start\":42903},{\"end\":42909,\"start\":42906},{\"end\":42936,\"start\":42927},{\"end\":42938,\"start\":42936},{\"end\":42941,\"start\":42938},{\"end\":42944,\"start\":42941},{\"end\":42993,\"start\":42983},{\"end\":42996,\"start\":42993},{\"end\":42999,\"start\":42996},{\"end\":43002,\"start\":42999},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":53794,\"start\":53777},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":53853,\"start\":53834},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":61979,\"start\":61962}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":46963,\"start\":46726},{\"attributes\":{\"id\":\"fig_1\"},\"end\":47534,\"start\":46964},{\"attributes\":{\"id\":\"fig_2\"},\"end\":47626,\"start\":47535},{\"attributes\":{\"id\":\"fig_3\"},\"end\":47770,\"start\":47627},{\"attributes\":{\"id\":\"fig_4\"},\"end\":47959,\"start\":47771},{\"attributes\":{\"id\":\"fig_5\"},\"end\":49537,\"start\":47960},{\"attributes\":{\"id\":\"fig_6\"},\"end\":49977,\"start\":49538},{\"attributes\":{\"id\":\"fig_7\"},\"end\":50980,\"start\":49978},{\"attributes\":{\"id\":\"fig_8\"},\"end\":51023,\"start\":50981},{\"attributes\":{\"id\":\"fig_9\"},\"end\":51063,\"start\":51024},{\"attributes\":{\"id\":\"fig_10\"},\"end\":52419,\"start\":51064},{\"attributes\":{\"id\":\"fig_11\"},\"end\":52501,\"start\":52420},{\"attributes\":{\"id\":\"fig_12\"},\"end\":52827,\"start\":52502},{\"attributes\":{\"id\":\"fig_13\"},\"end\":53002,\"start\":52828},{\"attributes\":{\"id\":\"fig_14\"},\"end\":53065,\"start\":53003},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":53617,\"start\":53066},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":54341,\"start\":53618},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":54590,\"start\":54342},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":54733,\"start\":54591},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":54820,\"start\":54734},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":54849,\"start\":54821},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":55920,\"start\":54850},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":56146,\"start\":55921},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":61110,\"start\":56147},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":61148,\"start\":61111},{\"attributes\":{\"id\":\"tab_15\",\"type\":\"table\"},\"end\":61228,\"start\":61149},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":61504,\"start\":61229},{\"attributes\":{\"id\":\"tab_17\",\"type\":\"table\"},\"end\":61881,\"start\":61505},{\"attributes\":{\"id\":\"tab_18\",\"type\":\"table\"},\"end\":63512,\"start\":61882},{\"attributes\":{\"id\":\"tab_20\",\"type\":\"table\"},\"end\":63702,\"start\":63513},{\"attributes\":{\"id\":\"tab_22\",\"type\":\"table\"},\"end\":63805,\"start\":63703},{\"attributes\":{\"id\":\"tab_23\",\"type\":\"table\"},\"end\":64883,\"start\":63806},{\"attributes\":{\"id\":\"tab_24\",\"type\":\"table\"},\"end\":67017,\"start\":64884},{\"attributes\":{\"id\":\"tab_25\",\"type\":\"table\"},\"end\":67976,\"start\":67018},{\"attributes\":{\"id\":\"tab_26\",\"type\":\"table\"},\"end\":68952,\"start\":67977},{\"attributes\":{\"id\":\"fig_0\"},\"end\":46963,\"start\":46726},{\"attributes\":{\"id\":\"fig_1\"},\"end\":47534,\"start\":46964},{\"attributes\":{\"id\":\"fig_2\"},\"end\":47626,\"start\":47535},{\"attributes\":{\"id\":\"fig_3\"},\"end\":47770,\"start\":47627},{\"attributes\":{\"id\":\"fig_4\"},\"end\":47959,\"start\":47771},{\"attributes\":{\"id\":\"fig_5\"},\"end\":49537,\"start\":47960},{\"attributes\":{\"id\":\"fig_6\"},\"end\":49977,\"start\":49538},{\"attributes\":{\"id\":\"fig_7\"},\"end\":50980,\"start\":49978},{\"attributes\":{\"id\":\"fig_8\"},\"end\":51023,\"start\":50981},{\"attributes\":{\"id\":\"fig_9\"},\"end\":51063,\"start\":51024},{\"attributes\":{\"id\":\"fig_10\"},\"end\":52419,\"start\":51064},{\"attributes\":{\"id\":\"fig_11\"},\"end\":52501,\"start\":52420},{\"attributes\":{\"id\":\"fig_12\"},\"end\":52827,\"start\":52502},{\"attributes\":{\"id\":\"fig_13\"},\"end\":53002,\"start\":52828},{\"attributes\":{\"id\":\"fig_14\"},\"end\":53065,\"start\":53003},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":53617,\"start\":53066},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":54341,\"start\":53618},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":54590,\"start\":54342},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":54733,\"start\":54591},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":54820,\"start\":54734},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":54849,\"start\":54821},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":55920,\"start\":54850},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":56146,\"start\":55921},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":61110,\"start\":56147},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":61148,\"start\":61111},{\"attributes\":{\"id\":\"tab_15\",\"type\":\"table\"},\"end\":61228,\"start\":61149},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":61504,\"start\":61229},{\"attributes\":{\"id\":\"tab_17\",\"type\":\"table\"},\"end\":61881,\"start\":61505},{\"attributes\":{\"id\":\"tab_18\",\"type\":\"table\"},\"end\":63512,\"start\":61882},{\"attributes\":{\"id\":\"tab_20\",\"type\":\"table\"},\"end\":63702,\"start\":63513},{\"attributes\":{\"id\":\"tab_22\",\"type\":\"table\"},\"end\":63805,\"start\":63703},{\"attributes\":{\"id\":\"tab_23\",\"type\":\"table\"},\"end\":64883,\"start\":63806},{\"attributes\":{\"id\":\"tab_24\",\"type\":\"table\"},\"end\":67017,\"start\":64884},{\"attributes\":{\"id\":\"tab_25\",\"type\":\"table\"},\"end\":67976,\"start\":67018},{\"attributes\":{\"id\":\"tab_26\",\"type\":\"table\"},\"end\":68952,\"start\":67977}]", "paragraph": "[{\"end\":3670,\"start\":2093},{\"end\":4274,\"start\":3672},{\"end\":4395,\"start\":4298},{\"end\":4552,\"start\":4397},{\"end\":4911,\"start\":4554},{\"end\":5091,\"start\":4951},{\"end\":5215,\"start\":5093},{\"end\":5739,\"start\":5217},{\"end\":6000,\"start\":5793},{\"end\":6650,\"start\":6002},{\"end\":7049,\"start\":6685},{\"end\":7956,\"start\":7051},{\"end\":8391,\"start\":7958},{\"end\":8937,\"start\":8425},{\"end\":9202,\"start\":8976},{\"end\":9550,\"start\":9204},{\"end\":10100,\"start\":9552},{\"end\":10480,\"start\":10102},{\"end\":10931,\"start\":10482},{\"end\":11501,\"start\":10933},{\"end\":11702,\"start\":11503},{\"end\":12394,\"start\":11725},{\"end\":13001,\"start\":12429},{\"end\":13406,\"start\":13028},{\"end\":14024,\"start\":13419},{\"end\":14446,\"start\":14047},{\"end\":14948,\"start\":14448},{\"end\":15634,\"start\":14950},{\"end\":15845,\"start\":15636},{\"end\":16813,\"start\":15867},{\"end\":17064,\"start\":16840},{\"end\":17777,\"start\":17077},{\"end\":18006,\"start\":17779},{\"end\":18235,\"start\":18008},{\"end\":19165,\"start\":18237},{\"end\":19554,\"start\":19216},{\"end\":19698,\"start\":19556},{\"end\":20200,\"start\":19700},{\"end\":20783,\"start\":20213},{\"end\":21419,\"start\":20785},{\"end\":22302,\"start\":21421},{\"end\":23498,\"start\":22319},{\"end\":24883,\"start\":23500},{\"end\":26388,\"start\":24885},{\"end\":27552,\"start\":26403},{\"end\":28267,\"start\":27613},{\"end\":28907,\"start\":28318},{\"end\":29047,\"start\":28953},{\"end\":29462,\"start\":29065},{\"end\":30318,\"start\":29464},{\"end\":31057,\"start\":30365},{\"end\":31154,\"start\":31067},{\"end\":31858,\"start\":31221},{\"end\":32127,\"start\":31918},{\"end\":32670,\"start\":32156},{\"end\":33005,\"start\":32672},{\"end\":33658,\"start\":33007},{\"end\":33752,\"start\":33660},{\"end\":34011,\"start\":33754},{\"end\":34128,\"start\":34013},{\"end\":34286,\"start\":34130},{\"end\":34805,\"start\":34356},{\"end\":36184,\"start\":34807},{\"end\":36320,\"start\":36200},{\"end\":38162,\"start\":36342},{\"end\":38236,\"start\":38164},{\"end\":38256,\"start\":38238},{\"end\":38378,\"start\":38258},{\"end\":38587,\"start\":38380},{\"end\":38836,\"start\":38589},{\"end\":41562,\"start\":38863},{\"end\":42309,\"start\":41643},{\"end\":43420,\"start\":42324},{\"end\":44509,\"start\":43461},{\"end\":46704,\"start\":44511},{\"end\":3670,\"start\":2093},{\"end\":4274,\"start\":3672},{\"end\":4395,\"start\":4298},{\"end\":4552,\"start\":4397},{\"end\":4911,\"start\":4554},{\"end\":5091,\"start\":4951},{\"end\":5215,\"start\":5093},{\"end\":5739,\"start\":5217},{\"end\":6000,\"start\":5793},{\"end\":6650,\"start\":6002},{\"end\":7049,\"start\":6685},{\"end\":7956,\"start\":7051},{\"end\":8391,\"start\":7958},{\"end\":8937,\"start\":8425},{\"end\":9202,\"start\":8976},{\"end\":9550,\"start\":9204},{\"end\":10100,\"start\":9552},{\"end\":10480,\"start\":10102},{\"end\":10931,\"start\":10482},{\"end\":11501,\"start\":10933},{\"end\":11702,\"start\":11503},{\"end\":12394,\"start\":11725},{\"end\":13001,\"start\":12429},{\"end\":13406,\"start\":13028},{\"end\":14024,\"start\":13419},{\"end\":14446,\"start\":14047},{\"end\":14948,\"start\":14448},{\"end\":15634,\"start\":14950},{\"end\":15845,\"start\":15636},{\"end\":16813,\"start\":15867},{\"end\":17064,\"start\":16840},{\"end\":17777,\"start\":17077},{\"end\":18006,\"start\":17779},{\"end\":18235,\"start\":18008},{\"end\":19165,\"start\":18237},{\"end\":19554,\"start\":19216},{\"end\":19698,\"start\":19556},{\"end\":20200,\"start\":19700},{\"end\":20783,\"start\":20213},{\"end\":21419,\"start\":20785},{\"end\":22302,\"start\":21421},{\"end\":23498,\"start\":22319},{\"end\":24883,\"start\":23500},{\"end\":26388,\"start\":24885},{\"end\":27552,\"start\":26403},{\"end\":28267,\"start\":27613},{\"end\":28907,\"start\":28318},{\"end\":29047,\"start\":28953},{\"end\":29462,\"start\":29065},{\"end\":30318,\"start\":29464},{\"end\":31057,\"start\":30365},{\"end\":31154,\"start\":31067},{\"end\":31858,\"start\":31221},{\"end\":32127,\"start\":31918},{\"end\":32670,\"start\":32156},{\"end\":33005,\"start\":32672},{\"end\":33658,\"start\":33007},{\"end\":33752,\"start\":33660},{\"end\":34011,\"start\":33754},{\"end\":34128,\"start\":34013},{\"end\":34286,\"start\":34130},{\"end\":34805,\"start\":34356},{\"end\":36184,\"start\":34807},{\"end\":36320,\"start\":36200},{\"end\":38162,\"start\":36342},{\"end\":38236,\"start\":38164},{\"end\":38256,\"start\":38238},{\"end\":38378,\"start\":38258},{\"end\":38587,\"start\":38380},{\"end\":38836,\"start\":38589},{\"end\":41562,\"start\":38863},{\"end\":42309,\"start\":41643},{\"end\":43420,\"start\":42324},{\"end\":44509,\"start\":43461},{\"end\":46704,\"start\":44511}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":8975,\"start\":8938},{\"attributes\":{\"id\":\"formula_1\"},\"end\":12428,\"start\":12395},{\"attributes\":{\"id\":\"formula_0\"},\"end\":8975,\"start\":8938},{\"attributes\":{\"id\":\"formula_1\"},\"end\":12428,\"start\":12395}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_15\"},\"end\":15633,\"start\":15626},{\"end\":16559,\"start\":16552},{\"end\":17098,\"start\":17089},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":17512,\"start\":17505},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":19008,\"start\":19001},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":19289,\"start\":19282},{\"end\":27263,\"start\":27256},{\"end\":27839,\"start\":27832},{\"end\":28657,\"start\":28650},{\"end\":28974,\"start\":28967},{\"attributes\":{\"ref_id\":\"tab_13\"},\"end\":29330,\"start\":29323},{\"attributes\":{\"ref_id\":\"tab_13\"},\"end\":30087,\"start\":30080},{\"attributes\":{\"ref_id\":\"tab_15\"},\"end\":32029,\"start\":32022},{\"attributes\":{\"ref_id\":\"tab_16\"},\"end\":36240,\"start\":36224},{\"attributes\":{\"ref_id\":\"tab_18\"},\"end\":36250,\"start\":36242},{\"attributes\":{\"ref_id\":\"tab_17\"},\"end\":36671,\"start\":36659},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":40216,\"start\":40208},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":42096,\"start\":42088},{\"end\":45229,\"start\":45220},{\"end\":45631,\"start\":45623},{\"attributes\":{\"ref_id\":\"tab_15\"},\"end\":15633,\"start\":15626},{\"end\":16559,\"start\":16552},{\"end\":17098,\"start\":17089},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":17512,\"start\":17505},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":19008,\"start\":19001},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":19289,\"start\":19282},{\"end\":27263,\"start\":27256},{\"end\":27839,\"start\":27832},{\"end\":28657,\"start\":28650},{\"end\":28974,\"start\":28967},{\"attributes\":{\"ref_id\":\"tab_13\"},\"end\":29330,\"start\":29323},{\"attributes\":{\"ref_id\":\"tab_13\"},\"end\":30087,\"start\":30080},{\"attributes\":{\"ref_id\":\"tab_15\"},\"end\":32029,\"start\":32022},{\"attributes\":{\"ref_id\":\"tab_16\"},\"end\":36240,\"start\":36224},{\"attributes\":{\"ref_id\":\"tab_18\"},\"end\":36250,\"start\":36242},{\"attributes\":{\"ref_id\":\"tab_17\"},\"end\":36671,\"start\":36659},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":40216,\"start\":40208},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":42096,\"start\":42088},{\"end\":45229,\"start\":45220},{\"end\":45631,\"start\":45623}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":2091,\"start\":2079},{\"end\":4296,\"start\":4277},{\"end\":4949,\"start\":4914},{\"end\":5783,\"start\":5742},{\"end\":5791,\"start\":5786},{\"attributes\":{\"n\":\"2.\"},\"end\":6683,\"start\":6653},{\"attributes\":{\"n\":\"3.\"},\"end\":8423,\"start\":8394},{\"attributes\":{\"n\":\"4.\"},\"end\":11723,\"start\":11705},{\"attributes\":{\"n\":\"4.1.\"},\"end\":13026,\"start\":13004},{\"end\":13417,\"start\":13409},{\"attributes\":{\"n\":\"4.2.\"},\"end\":14045,\"start\":14027},{\"attributes\":{\"n\":\"4.3.\"},\"end\":15865,\"start\":15848},{\"attributes\":{\"n\":\"5.\"},\"end\":16823,\"start\":16816},{\"attributes\":{\"n\":\"5.1.\"},\"end\":16838,\"start\":16826},{\"end\":17075,\"start\":17067},{\"attributes\":{\"n\":\"5.2.\"},\"end\":19214,\"start\":19168},{\"attributes\":{\"n\":\"6.\"},\"end\":20211,\"start\":20203},{\"attributes\":{\"n\":\"7.\"},\"end\":22317,\"start\":22305},{\"attributes\":{\"n\":\"8.\"},\"end\":26401,\"start\":26391},{\"end\":27611,\"start\":27555},{\"end\":28316,\"start\":28270},{\"end\":28951,\"start\":28910},{\"end\":29063,\"start\":29050},{\"end\":30363,\"start\":30321},{\"end\":31065,\"start\":31060},{\"end\":31219,\"start\":31157},{\"end\":31916,\"start\":31861},{\"end\":32154,\"start\":32130},{\"end\":34354,\"start\":34289},{\"end\":36198,\"start\":36187},{\"end\":36340,\"start\":36323},{\"end\":38861,\"start\":38839},{\"end\":41587,\"start\":41565},{\"end\":41641,\"start\":41590},{\"end\":42322,\"start\":42312},{\"end\":43459,\"start\":43423},{\"end\":46725,\"start\":46707},{\"end\":46975,\"start\":46965},{\"end\":47546,\"start\":47536},{\"end\":47638,\"start\":47628},{\"end\":49550,\"start\":49539},{\"end\":50001,\"start\":49979},{\"end\":50993,\"start\":50982},{\"end\":51087,\"start\":51065},{\"end\":52432,\"start\":52421},{\"end\":52840,\"start\":52829},{\"end\":53015,\"start\":53004},{\"end\":54602,\"start\":54592},{\"end\":54744,\"start\":54735},{\"end\":54829,\"start\":54822},{\"end\":61121,\"start\":61112},{\"end\":61159,\"start\":61150},{\"end\":61239,\"start\":61230},{\"end\":61515,\"start\":61506},{\"end\":61893,\"start\":61883},{\"end\":63524,\"start\":63514},{\"end\":63714,\"start\":63704},{\"end\":63812,\"start\":63807},{\"attributes\":{\"n\":\"1.\"},\"end\":2091,\"start\":2079},{\"end\":4296,\"start\":4277},{\"end\":4949,\"start\":4914},{\"end\":5783,\"start\":5742},{\"end\":5791,\"start\":5786},{\"attributes\":{\"n\":\"2.\"},\"end\":6683,\"start\":6653},{\"attributes\":{\"n\":\"3.\"},\"end\":8423,\"start\":8394},{\"attributes\":{\"n\":\"4.\"},\"end\":11723,\"start\":11705},{\"attributes\":{\"n\":\"4.1.\"},\"end\":13026,\"start\":13004},{\"end\":13417,\"start\":13409},{\"attributes\":{\"n\":\"4.2.\"},\"end\":14045,\"start\":14027},{\"attributes\":{\"n\":\"4.3.\"},\"end\":15865,\"start\":15848},{\"attributes\":{\"n\":\"5.\"},\"end\":16823,\"start\":16816},{\"attributes\":{\"n\":\"5.1.\"},\"end\":16838,\"start\":16826},{\"end\":17075,\"start\":17067},{\"attributes\":{\"n\":\"5.2.\"},\"end\":19214,\"start\":19168},{\"attributes\":{\"n\":\"6.\"},\"end\":20211,\"start\":20203},{\"attributes\":{\"n\":\"7.\"},\"end\":22317,\"start\":22305},{\"attributes\":{\"n\":\"8.\"},\"end\":26401,\"start\":26391},{\"end\":27611,\"start\":27555},{\"end\":28316,\"start\":28270},{\"end\":28951,\"start\":28910},{\"end\":29063,\"start\":29050},{\"end\":30363,\"start\":30321},{\"end\":31065,\"start\":31060},{\"end\":31219,\"start\":31157},{\"end\":31916,\"start\":31861},{\"end\":32154,\"start\":32130},{\"end\":34354,\"start\":34289},{\"end\":36198,\"start\":36187},{\"end\":36340,\"start\":36323},{\"end\":38861,\"start\":38839},{\"end\":41587,\"start\":41565},{\"end\":41641,\"start\":41590},{\"end\":42322,\"start\":42312},{\"end\":43459,\"start\":43423},{\"end\":46725,\"start\":46707},{\"end\":46975,\"start\":46965},{\"end\":47546,\"start\":47536},{\"end\":47638,\"start\":47628},{\"end\":49550,\"start\":49539},{\"end\":50001,\"start\":49979},{\"end\":50993,\"start\":50982},{\"end\":51087,\"start\":51065},{\"end\":52432,\"start\":52421},{\"end\":52840,\"start\":52829},{\"end\":53015,\"start\":53004},{\"end\":54602,\"start\":54592},{\"end\":54744,\"start\":54735},{\"end\":54829,\"start\":54822},{\"end\":61121,\"start\":61112},{\"end\":61159,\"start\":61150},{\"end\":61239,\"start\":61230},{\"end\":61515,\"start\":61506},{\"end\":61893,\"start\":61883},{\"end\":63524,\"start\":63514},{\"end\":63714,\"start\":63704},{\"end\":63812,\"start\":63807}]", "table": "[{\"end\":53617,\"start\":53471},{\"end\":54341,\"start\":53908},{\"end\":54590,\"start\":54400},{\"end\":54733,\"start\":54605},{\"end\":54820,\"start\":54746},{\"end\":54849,\"start\":54831},{\"end\":56146,\"start\":55958},{\"end\":61110,\"start\":57470},{\"end\":61504,\"start\":61296},{\"end\":61881,\"start\":61563},{\"end\":63512,\"start\":62123},{\"end\":67017,\"start\":66235},{\"end\":67976,\"start\":67611},{\"end\":68952,\"start\":68940},{\"end\":53617,\"start\":53471},{\"end\":54341,\"start\":53908},{\"end\":54590,\"start\":54400},{\"end\":54733,\"start\":54605},{\"end\":54820,\"start\":54746},{\"end\":54849,\"start\":54831},{\"end\":56146,\"start\":55958},{\"end\":61110,\"start\":57470},{\"end\":61504,\"start\":61296},{\"end\":61881,\"start\":61563},{\"end\":63512,\"start\":62123},{\"end\":67017,\"start\":66235},{\"end\":67976,\"start\":67611},{\"end\":68952,\"start\":68940}]", "figure_caption": "[{\"end\":46963,\"start\":46728},{\"end\":47534,\"start\":46977},{\"end\":47626,\"start\":47548},{\"end\":47770,\"start\":47640},{\"end\":47959,\"start\":47773},{\"end\":49537,\"start\":47962},{\"end\":49977,\"start\":49553},{\"end\":50980,\"start\":50006},{\"end\":51023,\"start\":50996},{\"end\":51063,\"start\":51026},{\"end\":52419,\"start\":51092},{\"end\":52501,\"start\":52435},{\"end\":52827,\"start\":52504},{\"end\":53002,\"start\":52843},{\"end\":53065,\"start\":53018},{\"end\":53471,\"start\":53068},{\"end\":53908,\"start\":53620},{\"end\":54400,\"start\":54344},{\"end\":55920,\"start\":54852},{\"end\":55958,\"start\":55923},{\"end\":57470,\"start\":56149},{\"end\":61148,\"start\":61123},{\"end\":61228,\"start\":61161},{\"end\":61296,\"start\":61241},{\"end\":61563,\"start\":61517},{\"end\":62123,\"start\":61896},{\"end\":63702,\"start\":63527},{\"end\":63805,\"start\":63717},{\"end\":64883,\"start\":63814},{\"end\":66235,\"start\":64886},{\"end\":67611,\"start\":67020},{\"end\":68940,\"start\":67979},{\"end\":46963,\"start\":46728},{\"end\":47534,\"start\":46977},{\"end\":47626,\"start\":47548},{\"end\":47770,\"start\":47640},{\"end\":47959,\"start\":47773},{\"end\":49537,\"start\":47962},{\"end\":49977,\"start\":49553},{\"end\":50980,\"start\":50006},{\"end\":51023,\"start\":50996},{\"end\":51063,\"start\":51026},{\"end\":52419,\"start\":51092},{\"end\":52501,\"start\":52435},{\"end\":52827,\"start\":52504},{\"end\":53002,\"start\":52843},{\"end\":53065,\"start\":53018},{\"end\":53471,\"start\":53068},{\"end\":53908,\"start\":53620},{\"end\":54400,\"start\":54344},{\"end\":55920,\"start\":54852},{\"end\":55958,\"start\":55923},{\"end\":57470,\"start\":56149},{\"end\":61148,\"start\":61123},{\"end\":61228,\"start\":61161},{\"end\":61296,\"start\":61241},{\"end\":61563,\"start\":61517},{\"end\":62123,\"start\":61896},{\"end\":63702,\"start\":63527},{\"end\":63805,\"start\":63717},{\"end\":64883,\"start\":63814},{\"end\":66235,\"start\":64886},{\"end\":67611,\"start\":67020},{\"end\":68940,\"start\":67979}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":3924,\"start\":3916},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":7828,\"start\":7820},{\"end\":9386,\"start\":9378},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":9599,\"start\":9591},{\"end\":9620,\"start\":9612},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":13237,\"start\":13229},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":14390,\"start\":14382},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":14856,\"start\":14847},{\"end\":15228,\"start\":15220},{\"end\":16248,\"start\":16240},{\"end\":19594,\"start\":19586},{\"end\":19943,\"start\":19935},{\"end\":20507,\"start\":20499},{\"end\":20898,\"start\":20890},{\"end\":21679,\"start\":21671},{\"end\":22462,\"start\":22454},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27551,\"start\":27542},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27814,\"start\":27805},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":29285,\"start\":29275},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":29935,\"start\":29925},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":31370,\"start\":31361},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":32684,\"start\":32675},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":33118,\"start\":33108},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":33834,\"start\":33825},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":34227,\"start\":34218},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":39386,\"start\":39378},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":41335,\"start\":41326},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":43012,\"start\":43003},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":44784,\"start\":44776},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":45010,\"start\":45000},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":45768,\"start\":45759},{\"attributes\":{\"ref_id\":\"fig_14\"},\"end\":46486,\"start\":46477},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":3924,\"start\":3916},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":7828,\"start\":7820},{\"end\":9386,\"start\":9378},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":9599,\"start\":9591},{\"end\":9620,\"start\":9612},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":13237,\"start\":13229},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":14390,\"start\":14382},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":14856,\"start\":14847},{\"end\":15228,\"start\":15220},{\"end\":16248,\"start\":16240},{\"end\":19594,\"start\":19586},{\"end\":19943,\"start\":19935},{\"end\":20507,\"start\":20499},{\"end\":20898,\"start\":20890},{\"end\":21679,\"start\":21671},{\"end\":22462,\"start\":22454},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27551,\"start\":27542},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27814,\"start\":27805},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":29285,\"start\":29275},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":29935,\"start\":29925},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":31370,\"start\":31361},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":32684,\"start\":32675},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":33118,\"start\":33108},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":33834,\"start\":33825},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":34227,\"start\":34218},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":39386,\"start\":39378},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":41335,\"start\":41326},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":43012,\"start\":43003},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":44784,\"start\":44776},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":45010,\"start\":45000},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":45768,\"start\":45759},{\"attributes\":{\"ref_id\":\"fig_14\"},\"end\":46486,\"start\":46477}]", "bib_author_first_name": "[{\"end\":68984,\"start\":68983},{\"end\":68991,\"start\":68990},{\"end\":69001,\"start\":69000},{\"end\":69010,\"start\":69009},{\"end\":69022,\"start\":69021},{\"end\":69032,\"start\":69031},{\"end\":69041,\"start\":69040},{\"end\":69049,\"start\":69048},{\"end\":69055,\"start\":69054},{\"end\":69073,\"start\":69072},{\"end\":69084,\"start\":69083},{\"end\":69094,\"start\":69093},{\"end\":69100,\"start\":69099},{\"end\":69107,\"start\":69106},{\"end\":69116,\"start\":69115},{\"end\":69126,\"start\":69125},{\"end\":69135,\"start\":69134},{\"end\":69143,\"start\":69142},{\"end\":69145,\"start\":69144},{\"end\":69154,\"start\":69153},{\"end\":69165,\"start\":69164},{\"end\":69177,\"start\":69176},{\"end\":69179,\"start\":69178},{\"end\":69188,\"start\":69187},{\"end\":69198,\"start\":69197},{\"end\":69213,\"start\":69212},{\"end\":69225,\"start\":69221},{\"end\":69232,\"start\":69231},{\"end\":69242,\"start\":69241},{\"end\":69248,\"start\":69247},{\"end\":69255,\"start\":69254},{\"end\":69265,\"start\":69264},{\"end\":69275,\"start\":69274},{\"end\":69287,\"start\":69286},{\"end\":69294,\"start\":69293},{\"end\":69310,\"start\":69309},{\"end\":69319,\"start\":69318},{\"end\":69331,\"start\":69330},{\"end\":69342,\"start\":69341},{\"end\":69349,\"start\":69348},{\"end\":69359,\"start\":69358},{\"end\":69372,\"start\":69371},{\"end\":69379,\"start\":69378},{\"end\":69387,\"start\":69386},{\"end\":69393,\"start\":69392},{\"end\":69399,\"start\":69398},{\"end\":69406,\"start\":69405},{\"end\":70215,\"start\":70214},{\"end\":70224,\"start\":70223},{\"end\":70235,\"start\":70234},{\"end\":70242,\"start\":70241},{\"end\":70263,\"start\":70262},{\"end\":70271,\"start\":70270},{\"end\":70576,\"start\":70575},{\"end\":70585,\"start\":70584},{\"end\":70591,\"start\":70590},{\"end\":70598,\"start\":70597},{\"end\":70849,\"start\":70848},{\"end\":70851,\"start\":70850},{\"end\":70860,\"start\":70859},{\"end\":70868,\"start\":70867},{\"end\":70877,\"start\":70876},{\"end\":70888,\"start\":70887},{\"end\":70898,\"start\":70897},{\"end\":70910,\"start\":70909},{\"end\":70925,\"start\":70924},{\"end\":70934,\"start\":70933},{\"end\":70944,\"start\":70943},{\"end\":70954,\"start\":70953},{\"end\":70965,\"start\":70964},{\"end\":70981,\"start\":70980},{\"end\":70992,\"start\":70991},{\"end\":71004,\"start\":71003},{\"end\":71013,\"start\":71012},{\"end\":71023,\"start\":71022},{\"end\":71025,\"start\":71024},{\"end\":71036,\"start\":71035},{\"end\":71042,\"start\":71041},{\"end\":71052,\"start\":71051},{\"end\":71061,\"start\":71060},{\"end\":71069,\"start\":71068},{\"end\":71079,\"start\":71078},{\"end\":71089,\"start\":71088},{\"end\":71097,\"start\":71096},{\"end\":71106,\"start\":71105},{\"end\":71115,\"start\":71114},{\"end\":71125,\"start\":71124},{\"end\":71139,\"start\":71138},{\"end\":71150,\"start\":71149},{\"end\":71168,\"start\":71162},{\"end\":71172,\"start\":71171},{\"end\":71636,\"start\":71635},{\"end\":71644,\"start\":71643},{\"end\":71654,\"start\":71653},{\"end\":71661,\"start\":71660},{\"end\":71669,\"start\":71668},{\"end\":71675,\"start\":71670},{\"end\":71684,\"start\":71683},{\"end\":71694,\"start\":71693},{\"end\":71705,\"start\":71704},{\"end\":71714,\"start\":71713},{\"end\":71724,\"start\":71723},{\"end\":71736,\"start\":71735},{\"end\":71743,\"start\":71742},{\"end\":71751,\"start\":71750},{\"end\":71762,\"start\":71761},{\"end\":71772,\"start\":71771},{\"end\":71782,\"start\":71781},{\"end\":71792,\"start\":71791},{\"end\":71803,\"start\":71802},{\"end\":71811,\"start\":71810},{\"end\":71819,\"start\":71818},{\"end\":71828,\"start\":71827},{\"end\":71838,\"start\":71837},{\"end\":71847,\"start\":71846},{\"end\":71857,\"start\":71856},{\"end\":71869,\"start\":71868},{\"end\":71879,\"start\":71878},{\"end\":71889,\"start\":71888},{\"end\":71891,\"start\":71890},{\"end\":71899,\"start\":71898},{\"end\":71911,\"start\":71910},{\"end\":71923,\"start\":71922},{\"end\":71935,\"start\":71934},{\"end\":71945,\"start\":71944},{\"end\":71961,\"start\":71960},{\"end\":71963,\"start\":71962},{\"end\":71971,\"start\":71970},{\"end\":71981,\"start\":71980},{\"end\":71990,\"start\":71989},{\"end\":71999,\"start\":71998},{\"end\":72007,\"start\":72006},{\"end\":72021,\"start\":72020},{\"end\":72031,\"start\":72030},{\"end\":72039,\"start\":72038},{\"end\":72051,\"start\":72050},{\"end\":72060,\"start\":72059},{\"end\":72062,\"start\":72061},{\"end\":72070,\"start\":72069},{\"end\":72079,\"start\":72078},{\"end\":72089,\"start\":72088},{\"end\":72098,\"start\":72097},{\"end\":72110,\"start\":72109},{\"end\":72121,\"start\":72120},{\"end\":72131,\"start\":72130},{\"end\":72143,\"start\":72142},{\"end\":72153,\"start\":72152},{\"end\":72162,\"start\":72161},{\"end\":72174,\"start\":72173},{\"end\":72184,\"start\":72183},{\"end\":72194,\"start\":72193},{\"end\":72209,\"start\":72208},{\"end\":72222,\"start\":72221},{\"end\":73175,\"start\":73174},{\"end\":73183,\"start\":73182},{\"end\":73193,\"start\":73192},{\"end\":73200,\"start\":73199},{\"end\":73208,\"start\":73207},{\"end\":73214,\"start\":73209},{\"end\":73223,\"start\":73222},{\"end\":73233,\"start\":73232},{\"end\":73244,\"start\":73243},{\"end\":73253,\"start\":73252},{\"end\":73263,\"start\":73262},{\"end\":73629,\"start\":73628},{\"end\":73637,\"start\":73636},{\"end\":73643,\"start\":73642},{\"end\":73651,\"start\":73650},{\"end\":73653,\"start\":73652},{\"end\":73927,\"start\":73926},{\"end\":73936,\"start\":73935},{\"end\":73943,\"start\":73942},{\"end\":73950,\"start\":73949},{\"end\":73956,\"start\":73955},{\"end\":73968,\"start\":73967},{\"end\":73974,\"start\":73973},{\"end\":73983,\"start\":73982},{\"end\":73992,\"start\":73991},{\"end\":74005,\"start\":74004},{\"end\":74020,\"start\":74019},{\"end\":74022,\"start\":74021},{\"end\":74032,\"start\":74030},{\"end\":74036,\"start\":74035},{\"end\":74295,\"start\":74294},{\"end\":74308,\"start\":74307},{\"end\":74318,\"start\":74317},{\"end\":74328,\"start\":74327},{\"end\":74337,\"start\":74336},{\"end\":74347,\"start\":74346},{\"end\":74358,\"start\":74357},{\"end\":74368,\"start\":74367},{\"end\":74370,\"start\":74369},{\"end\":74379,\"start\":74378},{\"end\":74389,\"start\":74388},{\"end\":74401,\"start\":74400},{\"end\":74410,\"start\":74409},{\"end\":74417,\"start\":74416},{\"end\":74434,\"start\":74433},{\"end\":74444,\"start\":74443},{\"end\":74451,\"start\":74450},{\"end\":74461,\"start\":74460},{\"end\":74468,\"start\":74467},{\"end\":74479,\"start\":74478},{\"end\":74494,\"start\":74493},{\"end\":74502,\"start\":74501},{\"end\":74508,\"start\":74507},{\"end\":74522,\"start\":74521},{\"end\":74530,\"start\":74529},{\"end\":74542,\"start\":74541},{\"end\":74552,\"start\":74551},{\"end\":74561,\"start\":74560},{\"end\":74572,\"start\":74571},{\"end\":74579,\"start\":74578},{\"end\":74587,\"start\":74586},{\"end\":74599,\"start\":74598},{\"end\":74611,\"start\":74610},{\"end\":74618,\"start\":74617},{\"end\":74633,\"start\":74632},{\"end\":74643,\"start\":74642},{\"end\":74652,\"start\":74651},{\"end\":74664,\"start\":74663},{\"end\":74673,\"start\":74672},{\"end\":74681,\"start\":74680},{\"end\":74693,\"start\":74692},{\"end\":74701,\"start\":74700},{\"end\":74708,\"start\":74707},{\"end\":74716,\"start\":74715},{\"end\":74730,\"start\":74729},{\"end\":74741,\"start\":74740},{\"end\":74750,\"start\":74749},{\"end\":74761,\"start\":74760},{\"end\":74773,\"start\":74772},{\"end\":74775,\"start\":74774},{\"end\":74782,\"start\":74781},{\"end\":74784,\"start\":74783},{\"end\":74794,\"start\":74793},{\"end\":74804,\"start\":74803},{\"end\":74817,\"start\":74816},{\"end\":74828,\"start\":74827},{\"end\":74837,\"start\":74836},{\"end\":74848,\"start\":74847},{\"end\":74855,\"start\":74854},{\"end\":74863,\"start\":74862},{\"end\":74871,\"start\":74870},{\"end\":74880,\"start\":74879},{\"end\":74888,\"start\":74887},{\"end\":74897,\"start\":74896},{\"end\":74908,\"start\":74907},{\"end\":74915,\"start\":74914},{\"end\":74934,\"start\":74933},{\"end\":74941,\"start\":74940},{\"end\":74949,\"start\":74948},{\"end\":74959,\"start\":74958},{\"end\":75953,\"start\":75952},{\"end\":75962,\"start\":75961},{\"end\":75974,\"start\":75973},{\"end\":75986,\"start\":75985},{\"end\":75996,\"start\":75995},{\"end\":76006,\"start\":76005},{\"end\":76015,\"start\":76014},{\"end\":76339,\"start\":76338},{\"end\":76350,\"start\":76349},{\"end\":76652,\"start\":76651},{\"end\":76662,\"start\":76661},{\"end\":76664,\"start\":76663},{\"end\":76836,\"start\":76835},{\"end\":76844,\"start\":76843},{\"end\":76856,\"start\":76855},{\"end\":76864,\"start\":76863},{\"end\":76874,\"start\":76873},{\"end\":76894,\"start\":76891},{\"end\":76898,\"start\":76897},{\"end\":77195,\"start\":77194},{\"end\":77203,\"start\":77202},{\"end\":77213,\"start\":77212},{\"end\":77223,\"start\":77222},{\"end\":77225,\"start\":77224},{\"end\":77233,\"start\":77232},{\"end\":77245,\"start\":77244},{\"end\":77257,\"start\":77256},{\"end\":77268,\"start\":77267},{\"end\":77280,\"start\":77279},{\"end\":77282,\"start\":77281},{\"end\":77290,\"start\":77289},{\"end\":77298,\"start\":77297},{\"end\":77305,\"start\":77304},{\"end\":77307,\"start\":77306},{\"end\":77315,\"start\":77314},{\"end\":77321,\"start\":77320},{\"end\":77332,\"start\":77331},{\"end\":77334,\"start\":77333},{\"end\":77344,\"start\":77343},{\"end\":77357,\"start\":77356},{\"end\":77364,\"start\":77363},{\"end\":77377,\"start\":77376},{\"end\":77386,\"start\":77385},{\"end\":77395,\"start\":77394},{\"end\":77404,\"start\":77403},{\"end\":77406,\"start\":77405},{\"end\":77417,\"start\":77414},{\"end\":77425,\"start\":77424},{\"end\":77435,\"start\":77434},{\"end\":77443,\"start\":77442},{\"end\":77451,\"start\":77450},{\"end\":77453,\"start\":77452},{\"end\":77463,\"start\":77462},{\"end\":77473,\"start\":77472},{\"end\":77481,\"start\":77480},{\"end\":77491,\"start\":77490},{\"end\":77500,\"start\":77499},{\"end\":77510,\"start\":77509},{\"end\":77522,\"start\":77521},{\"end\":77531,\"start\":77530},{\"end\":77540,\"start\":77539},{\"end\":77542,\"start\":77541},{\"end\":77552,\"start\":77551},{\"end\":77564,\"start\":77563},{\"end\":77571,\"start\":77570},{\"end\":77579,\"start\":77578},{\"end\":77587,\"start\":77586},{\"end\":77595,\"start\":77594},{\"end\":77597,\"start\":77596},{\"end\":78299,\"start\":78298},{\"end\":78307,\"start\":78306},{\"end\":78542,\"start\":78541},{\"end\":78550,\"start\":78549},{\"end\":78552,\"start\":78551},{\"end\":78559,\"start\":78558},{\"end\":78570,\"start\":78569},{\"end\":78578,\"start\":78577},{\"end\":78585,\"start\":78584},{\"end\":78587,\"start\":78586},{\"end\":78600,\"start\":78599},{\"end\":78609,\"start\":78608},{\"end\":78618,\"start\":78617},{\"end\":78628,\"start\":78627},{\"end\":78971,\"start\":78970},{\"end\":78981,\"start\":78980},{\"end\":78991,\"start\":78990},{\"end\":79002,\"start\":79001},{\"end\":79014,\"start\":79013},{\"end\":79021,\"start\":79020},{\"end\":79023,\"start\":79022},{\"end\":79032,\"start\":79031},{\"end\":79045,\"start\":79044},{\"end\":79047,\"start\":79046},{\"end\":79053,\"start\":79052},{\"end\":79060,\"start\":79059},{\"end\":79070,\"start\":79067},{\"end\":79074,\"start\":79073},{\"end\":79439,\"start\":79438},{\"end\":79441,\"start\":79440},{\"end\":79451,\"start\":79450},{\"end\":79453,\"start\":79452},{\"end\":79462,\"start\":79461},{\"end\":79464,\"start\":79463},{\"end\":79685,\"start\":79684},{\"end\":79693,\"start\":79692},{\"end\":79700,\"start\":79699},{\"end\":79714,\"start\":79713},{\"end\":79720,\"start\":79719},{\"end\":79727,\"start\":79726},{\"end\":79973,\"start\":79972},{\"end\":79981,\"start\":79980},{\"end\":79988,\"start\":79987},{\"end\":80002,\"start\":80001},{\"end\":80008,\"start\":80007},{\"end\":80015,\"start\":80014},{\"end\":80300,\"start\":80299},{\"end\":80307,\"start\":80306},{\"end\":80316,\"start\":80315},{\"end\":80318,\"start\":80317},{\"end\":80326,\"start\":80325},{\"end\":80333,\"start\":80332},{\"end\":80335,\"start\":80334},{\"end\":80341,\"start\":80340},{\"end\":80351,\"start\":80350},{\"end\":80357,\"start\":80356},{\"end\":80359,\"start\":80358},{\"end\":80366,\"start\":80365},{\"end\":80368,\"start\":80367},{\"end\":80645,\"start\":80644},{\"end\":80652,\"start\":80651},{\"end\":80660,\"start\":80659},{\"end\":80674,\"start\":80673},{\"end\":80683,\"start\":80682},{\"end\":80690,\"start\":80689},{\"end\":80696,\"start\":80695},{\"end\":80992,\"start\":80991},{\"end\":80998,\"start\":80997},{\"end\":81000,\"start\":80999},{\"end\":81009,\"start\":81008},{\"end\":81015,\"start\":81014},{\"end\":81017,\"start\":81016},{\"end\":81025,\"start\":81024},{\"end\":81035,\"start\":81034},{\"end\":81045,\"start\":81044},{\"end\":81303,\"start\":81302},{\"end\":81310,\"start\":81309},{\"end\":81318,\"start\":81317},{\"end\":81324,\"start\":81323},{\"end\":81330,\"start\":81329},{\"end\":81341,\"start\":81340},{\"end\":81355,\"start\":81354},{\"end\":81621,\"start\":81620},{\"end\":81629,\"start\":81628},{\"end\":81640,\"start\":81639},{\"end\":81647,\"start\":81646},{\"end\":81654,\"start\":81653},{\"end\":81664,\"start\":81663},{\"end\":81672,\"start\":81671},{\"end\":81686,\"start\":81685},{\"end\":81698,\"start\":81697},{\"end\":81706,\"start\":81703},{\"end\":81710,\"start\":81709},{\"end\":68984,\"start\":68983},{\"end\":68991,\"start\":68990},{\"end\":69001,\"start\":69000},{\"end\":69010,\"start\":69009},{\"end\":69022,\"start\":69021},{\"end\":69032,\"start\":69031},{\"end\":69041,\"start\":69040},{\"end\":69049,\"start\":69048},{\"end\":69055,\"start\":69054},{\"end\":69073,\"start\":69072},{\"end\":69084,\"start\":69083},{\"end\":69094,\"start\":69093},{\"end\":69100,\"start\":69099},{\"end\":69107,\"start\":69106},{\"end\":69116,\"start\":69115},{\"end\":69126,\"start\":69125},{\"end\":69135,\"start\":69134},{\"end\":69143,\"start\":69142},{\"end\":69145,\"start\":69144},{\"end\":69154,\"start\":69153},{\"end\":69165,\"start\":69164},{\"end\":69177,\"start\":69176},{\"end\":69179,\"start\":69178},{\"end\":69188,\"start\":69187},{\"end\":69198,\"start\":69197},{\"end\":69213,\"start\":69212},{\"end\":69225,\"start\":69221},{\"end\":69232,\"start\":69231},{\"end\":69242,\"start\":69241},{\"end\":69248,\"start\":69247},{\"end\":69255,\"start\":69254},{\"end\":69265,\"start\":69264},{\"end\":69275,\"start\":69274},{\"end\":69287,\"start\":69286},{\"end\":69294,\"start\":69293},{\"end\":69310,\"start\":69309},{\"end\":69319,\"start\":69318},{\"end\":69331,\"start\":69330},{\"end\":69342,\"start\":69341},{\"end\":69349,\"start\":69348},{\"end\":69359,\"start\":69358},{\"end\":69372,\"start\":69371},{\"end\":69379,\"start\":69378},{\"end\":69387,\"start\":69386},{\"end\":69393,\"start\":69392},{\"end\":69399,\"start\":69398},{\"end\":69406,\"start\":69405},{\"end\":70215,\"start\":70214},{\"end\":70224,\"start\":70223},{\"end\":70235,\"start\":70234},{\"end\":70242,\"start\":70241},{\"end\":70263,\"start\":70262},{\"end\":70271,\"start\":70270},{\"end\":70576,\"start\":70575},{\"end\":70585,\"start\":70584},{\"end\":70591,\"start\":70590},{\"end\":70598,\"start\":70597},{\"end\":70849,\"start\":70848},{\"end\":70851,\"start\":70850},{\"end\":70860,\"start\":70859},{\"end\":70868,\"start\":70867},{\"end\":70877,\"start\":70876},{\"end\":70888,\"start\":70887},{\"end\":70898,\"start\":70897},{\"end\":70910,\"start\":70909},{\"end\":70925,\"start\":70924},{\"end\":70934,\"start\":70933},{\"end\":70944,\"start\":70943},{\"end\":70954,\"start\":70953},{\"end\":70965,\"start\":70964},{\"end\":70981,\"start\":70980},{\"end\":70992,\"start\":70991},{\"end\":71004,\"start\":71003},{\"end\":71013,\"start\":71012},{\"end\":71023,\"start\":71022},{\"end\":71025,\"start\":71024},{\"end\":71036,\"start\":71035},{\"end\":71042,\"start\":71041},{\"end\":71052,\"start\":71051},{\"end\":71061,\"start\":71060},{\"end\":71069,\"start\":71068},{\"end\":71079,\"start\":71078},{\"end\":71089,\"start\":71088},{\"end\":71097,\"start\":71096},{\"end\":71106,\"start\":71105},{\"end\":71115,\"start\":71114},{\"end\":71125,\"start\":71124},{\"end\":71139,\"start\":71138},{\"end\":71150,\"start\":71149},{\"end\":71168,\"start\":71162},{\"end\":71172,\"start\":71171},{\"end\":71636,\"start\":71635},{\"end\":71644,\"start\":71643},{\"end\":71654,\"start\":71653},{\"end\":71661,\"start\":71660},{\"end\":71669,\"start\":71668},{\"end\":71675,\"start\":71670},{\"end\":71684,\"start\":71683},{\"end\":71694,\"start\":71693},{\"end\":71705,\"start\":71704},{\"end\":71714,\"start\":71713},{\"end\":71724,\"start\":71723},{\"end\":71736,\"start\":71735},{\"end\":71743,\"start\":71742},{\"end\":71751,\"start\":71750},{\"end\":71762,\"start\":71761},{\"end\":71772,\"start\":71771},{\"end\":71782,\"start\":71781},{\"end\":71792,\"start\":71791},{\"end\":71803,\"start\":71802},{\"end\":71811,\"start\":71810},{\"end\":71819,\"start\":71818},{\"end\":71828,\"start\":71827},{\"end\":71838,\"start\":71837},{\"end\":71847,\"start\":71846},{\"end\":71857,\"start\":71856},{\"end\":71869,\"start\":71868},{\"end\":71879,\"start\":71878},{\"end\":71889,\"start\":71888},{\"end\":71891,\"start\":71890},{\"end\":71899,\"start\":71898},{\"end\":71911,\"start\":71910},{\"end\":71923,\"start\":71922},{\"end\":71935,\"start\":71934},{\"end\":71945,\"start\":71944},{\"end\":71961,\"start\":71960},{\"end\":71963,\"start\":71962},{\"end\":71971,\"start\":71970},{\"end\":71981,\"start\":71980},{\"end\":71990,\"start\":71989},{\"end\":71999,\"start\":71998},{\"end\":72007,\"start\":72006},{\"end\":72021,\"start\":72020},{\"end\":72031,\"start\":72030},{\"end\":72039,\"start\":72038},{\"end\":72051,\"start\":72050},{\"end\":72060,\"start\":72059},{\"end\":72062,\"start\":72061},{\"end\":72070,\"start\":72069},{\"end\":72079,\"start\":72078},{\"end\":72089,\"start\":72088},{\"end\":72098,\"start\":72097},{\"end\":72110,\"start\":72109},{\"end\":72121,\"start\":72120},{\"end\":72131,\"start\":72130},{\"end\":72143,\"start\":72142},{\"end\":72153,\"start\":72152},{\"end\":72162,\"start\":72161},{\"end\":72174,\"start\":72173},{\"end\":72184,\"start\":72183},{\"end\":72194,\"start\":72193},{\"end\":72209,\"start\":72208},{\"end\":72222,\"start\":72221},{\"end\":73175,\"start\":73174},{\"end\":73183,\"start\":73182},{\"end\":73193,\"start\":73192},{\"end\":73200,\"start\":73199},{\"end\":73208,\"start\":73207},{\"end\":73214,\"start\":73209},{\"end\":73223,\"start\":73222},{\"end\":73233,\"start\":73232},{\"end\":73244,\"start\":73243},{\"end\":73253,\"start\":73252},{\"end\":73263,\"start\":73262},{\"end\":73629,\"start\":73628},{\"end\":73637,\"start\":73636},{\"end\":73643,\"start\":73642},{\"end\":73651,\"start\":73650},{\"end\":73653,\"start\":73652},{\"end\":73927,\"start\":73926},{\"end\":73936,\"start\":73935},{\"end\":73943,\"start\":73942},{\"end\":73950,\"start\":73949},{\"end\":73956,\"start\":73955},{\"end\":73968,\"start\":73967},{\"end\":73974,\"start\":73973},{\"end\":73983,\"start\":73982},{\"end\":73992,\"start\":73991},{\"end\":74005,\"start\":74004},{\"end\":74020,\"start\":74019},{\"end\":74022,\"start\":74021},{\"end\":74032,\"start\":74030},{\"end\":74036,\"start\":74035},{\"end\":74295,\"start\":74294},{\"end\":74308,\"start\":74307},{\"end\":74318,\"start\":74317},{\"end\":74328,\"start\":74327},{\"end\":74337,\"start\":74336},{\"end\":74347,\"start\":74346},{\"end\":74358,\"start\":74357},{\"end\":74368,\"start\":74367},{\"end\":74370,\"start\":74369},{\"end\":74379,\"start\":74378},{\"end\":74389,\"start\":74388},{\"end\":74401,\"start\":74400},{\"end\":74410,\"start\":74409},{\"end\":74417,\"start\":74416},{\"end\":74434,\"start\":74433},{\"end\":74444,\"start\":74443},{\"end\":74451,\"start\":74450},{\"end\":74461,\"start\":74460},{\"end\":74468,\"start\":74467},{\"end\":74479,\"start\":74478},{\"end\":74494,\"start\":74493},{\"end\":74502,\"start\":74501},{\"end\":74508,\"start\":74507},{\"end\":74522,\"start\":74521},{\"end\":74530,\"start\":74529},{\"end\":74542,\"start\":74541},{\"end\":74552,\"start\":74551},{\"end\":74561,\"start\":74560},{\"end\":74572,\"start\":74571},{\"end\":74579,\"start\":74578},{\"end\":74587,\"start\":74586},{\"end\":74599,\"start\":74598},{\"end\":74611,\"start\":74610},{\"end\":74618,\"start\":74617},{\"end\":74633,\"start\":74632},{\"end\":74643,\"start\":74642},{\"end\":74652,\"start\":74651},{\"end\":74664,\"start\":74663},{\"end\":74673,\"start\":74672},{\"end\":74681,\"start\":74680},{\"end\":74693,\"start\":74692},{\"end\":74701,\"start\":74700},{\"end\":74708,\"start\":74707},{\"end\":74716,\"start\":74715},{\"end\":74730,\"start\":74729},{\"end\":74741,\"start\":74740},{\"end\":74750,\"start\":74749},{\"end\":74761,\"start\":74760},{\"end\":74773,\"start\":74772},{\"end\":74775,\"start\":74774},{\"end\":74782,\"start\":74781},{\"end\":74784,\"start\":74783},{\"end\":74794,\"start\":74793},{\"end\":74804,\"start\":74803},{\"end\":74817,\"start\":74816},{\"end\":74828,\"start\":74827},{\"end\":74837,\"start\":74836},{\"end\":74848,\"start\":74847},{\"end\":74855,\"start\":74854},{\"end\":74863,\"start\":74862},{\"end\":74871,\"start\":74870},{\"end\":74880,\"start\":74879},{\"end\":74888,\"start\":74887},{\"end\":74897,\"start\":74896},{\"end\":74908,\"start\":74907},{\"end\":74915,\"start\":74914},{\"end\":74934,\"start\":74933},{\"end\":74941,\"start\":74940},{\"end\":74949,\"start\":74948},{\"end\":74959,\"start\":74958},{\"end\":75953,\"start\":75952},{\"end\":75962,\"start\":75961},{\"end\":75974,\"start\":75973},{\"end\":75986,\"start\":75985},{\"end\":75996,\"start\":75995},{\"end\":76006,\"start\":76005},{\"end\":76015,\"start\":76014},{\"end\":76339,\"start\":76338},{\"end\":76350,\"start\":76349},{\"end\":76652,\"start\":76651},{\"end\":76662,\"start\":76661},{\"end\":76664,\"start\":76663},{\"end\":76836,\"start\":76835},{\"end\":76844,\"start\":76843},{\"end\":76856,\"start\":76855},{\"end\":76864,\"start\":76863},{\"end\":76874,\"start\":76873},{\"end\":76894,\"start\":76891},{\"end\":76898,\"start\":76897},{\"end\":77195,\"start\":77194},{\"end\":77203,\"start\":77202},{\"end\":77213,\"start\":77212},{\"end\":77223,\"start\":77222},{\"end\":77225,\"start\":77224},{\"end\":77233,\"start\":77232},{\"end\":77245,\"start\":77244},{\"end\":77257,\"start\":77256},{\"end\":77268,\"start\":77267},{\"end\":77280,\"start\":77279},{\"end\":77282,\"start\":77281},{\"end\":77290,\"start\":77289},{\"end\":77298,\"start\":77297},{\"end\":77305,\"start\":77304},{\"end\":77307,\"start\":77306},{\"end\":77315,\"start\":77314},{\"end\":77321,\"start\":77320},{\"end\":77332,\"start\":77331},{\"end\":77334,\"start\":77333},{\"end\":77344,\"start\":77343},{\"end\":77357,\"start\":77356},{\"end\":77364,\"start\":77363},{\"end\":77377,\"start\":77376},{\"end\":77386,\"start\":77385},{\"end\":77395,\"start\":77394},{\"end\":77404,\"start\":77403},{\"end\":77406,\"start\":77405},{\"end\":77417,\"start\":77414},{\"end\":77425,\"start\":77424},{\"end\":77435,\"start\":77434},{\"end\":77443,\"start\":77442},{\"end\":77451,\"start\":77450},{\"end\":77453,\"start\":77452},{\"end\":77463,\"start\":77462},{\"end\":77473,\"start\":77472},{\"end\":77481,\"start\":77480},{\"end\":77491,\"start\":77490},{\"end\":77500,\"start\":77499},{\"end\":77510,\"start\":77509},{\"end\":77522,\"start\":77521},{\"end\":77531,\"start\":77530},{\"end\":77540,\"start\":77539},{\"end\":77542,\"start\":77541},{\"end\":77552,\"start\":77551},{\"end\":77564,\"start\":77563},{\"end\":77571,\"start\":77570},{\"end\":77579,\"start\":77578},{\"end\":77587,\"start\":77586},{\"end\":77595,\"start\":77594},{\"end\":77597,\"start\":77596},{\"end\":78299,\"start\":78298},{\"end\":78307,\"start\":78306},{\"end\":78542,\"start\":78541},{\"end\":78550,\"start\":78549},{\"end\":78552,\"start\":78551},{\"end\":78559,\"start\":78558},{\"end\":78570,\"start\":78569},{\"end\":78578,\"start\":78577},{\"end\":78585,\"start\":78584},{\"end\":78587,\"start\":78586},{\"end\":78600,\"start\":78599},{\"end\":78609,\"start\":78608},{\"end\":78618,\"start\":78617},{\"end\":78628,\"start\":78627},{\"end\":78971,\"start\":78970},{\"end\":78981,\"start\":78980},{\"end\":78991,\"start\":78990},{\"end\":79002,\"start\":79001},{\"end\":79014,\"start\":79013},{\"end\":79021,\"start\":79020},{\"end\":79023,\"start\":79022},{\"end\":79032,\"start\":79031},{\"end\":79045,\"start\":79044},{\"end\":79047,\"start\":79046},{\"end\":79053,\"start\":79052},{\"end\":79060,\"start\":79059},{\"end\":79070,\"start\":79067},{\"end\":79074,\"start\":79073},{\"end\":79439,\"start\":79438},{\"end\":79441,\"start\":79440},{\"end\":79451,\"start\":79450},{\"end\":79453,\"start\":79452},{\"end\":79462,\"start\":79461},{\"end\":79464,\"start\":79463},{\"end\":79685,\"start\":79684},{\"end\":79693,\"start\":79692},{\"end\":79700,\"start\":79699},{\"end\":79714,\"start\":79713},{\"end\":79720,\"start\":79719},{\"end\":79727,\"start\":79726},{\"end\":79973,\"start\":79972},{\"end\":79981,\"start\":79980},{\"end\":79988,\"start\":79987},{\"end\":80002,\"start\":80001},{\"end\":80008,\"start\":80007},{\"end\":80015,\"start\":80014},{\"end\":80300,\"start\":80299},{\"end\":80307,\"start\":80306},{\"end\":80316,\"start\":80315},{\"end\":80318,\"start\":80317},{\"end\":80326,\"start\":80325},{\"end\":80333,\"start\":80332},{\"end\":80335,\"start\":80334},{\"end\":80341,\"start\":80340},{\"end\":80351,\"start\":80350},{\"end\":80357,\"start\":80356},{\"end\":80359,\"start\":80358},{\"end\":80366,\"start\":80365},{\"end\":80368,\"start\":80367},{\"end\":80645,\"start\":80644},{\"end\":80652,\"start\":80651},{\"end\":80660,\"start\":80659},{\"end\":80674,\"start\":80673},{\"end\":80683,\"start\":80682},{\"end\":80690,\"start\":80689},{\"end\":80696,\"start\":80695},{\"end\":80992,\"start\":80991},{\"end\":80998,\"start\":80997},{\"end\":81000,\"start\":80999},{\"end\":81009,\"start\":81008},{\"end\":81015,\"start\":81014},{\"end\":81017,\"start\":81016},{\"end\":81025,\"start\":81024},{\"end\":81035,\"start\":81034},{\"end\":81045,\"start\":81044},{\"end\":81303,\"start\":81302},{\"end\":81310,\"start\":81309},{\"end\":81318,\"start\":81317},{\"end\":81324,\"start\":81323},{\"end\":81330,\"start\":81329},{\"end\":81341,\"start\":81340},{\"end\":81355,\"start\":81354},{\"end\":81621,\"start\":81620},{\"end\":81629,\"start\":81628},{\"end\":81640,\"start\":81639},{\"end\":81647,\"start\":81646},{\"end\":81654,\"start\":81653},{\"end\":81664,\"start\":81663},{\"end\":81672,\"start\":81671},{\"end\":81686,\"start\":81685},{\"end\":81698,\"start\":81697},{\"end\":81706,\"start\":81703},{\"end\":81710,\"start\":81709}]", "bib_author_last_name": "[{\"end\":68988,\"start\":68985},{\"end\":68998,\"start\":68992},{\"end\":69007,\"start\":69002},{\"end\":69019,\"start\":69011},{\"end\":69029,\"start\":69023},{\"end\":69038,\"start\":69033},{\"end\":69046,\"start\":69042},{\"end\":69052,\"start\":69050},{\"end\":69070,\"start\":69056},{\"end\":69081,\"start\":69074},{\"end\":69091,\"start\":69085},{\"end\":69097,\"start\":69095},{\"end\":69104,\"start\":69101},{\"end\":69113,\"start\":69108},{\"end\":69123,\"start\":69117},{\"end\":69132,\"start\":69127},{\"end\":69140,\"start\":69136},{\"end\":69151,\"start\":69146},{\"end\":69162,\"start\":69155},{\"end\":69174,\"start\":69166},{\"end\":69185,\"start\":69180},{\"end\":69195,\"start\":69189},{\"end\":69210,\"start\":69199},{\"end\":69219,\"start\":69214},{\"end\":69229,\"start\":69226},{\"end\":69239,\"start\":69233},{\"end\":69245,\"start\":69243},{\"end\":69252,\"start\":69249},{\"end\":69262,\"start\":69256},{\"end\":69272,\"start\":69266},{\"end\":69284,\"start\":69276},{\"end\":69291,\"start\":69288},{\"end\":69307,\"start\":69295},{\"end\":69316,\"start\":69311},{\"end\":69328,\"start\":69320},{\"end\":69339,\"start\":69332},{\"end\":69346,\"start\":69343},{\"end\":69356,\"start\":69350},{\"end\":69369,\"start\":69360},{\"end\":69376,\"start\":69373},{\"end\":69384,\"start\":69380},{\"end\":69390,\"start\":69388},{\"end\":69396,\"start\":69394},{\"end\":69403,\"start\":69400},{\"end\":69411,\"start\":69407},{\"end\":70221,\"start\":70216},{\"end\":70232,\"start\":70225},{\"end\":70239,\"start\":70236},{\"end\":70260,\"start\":70243},{\"end\":70268,\"start\":70264},{\"end\":70282,\"start\":70272},{\"end\":70290,\"start\":70284},{\"end\":70582,\"start\":70577},{\"end\":70588,\"start\":70586},{\"end\":70595,\"start\":70592},{\"end\":70605,\"start\":70599},{\"end\":70857,\"start\":70852},{\"end\":70865,\"start\":70861},{\"end\":70874,\"start\":70869},{\"end\":70885,\"start\":70878},{\"end\":70895,\"start\":70889},{\"end\":70907,\"start\":70899},{\"end\":70922,\"start\":70911},{\"end\":70931,\"start\":70926},{\"end\":70941,\"start\":70935},{\"end\":70951,\"start\":70945},{\"end\":70962,\"start\":70955},{\"end\":70978,\"start\":70966},{\"end\":70989,\"start\":70982},{\"end\":71001,\"start\":70993},{\"end\":71010,\"start\":71005},{\"end\":71020,\"start\":71014},{\"end\":71033,\"start\":71026},{\"end\":71039,\"start\":71037},{\"end\":71049,\"start\":71043},{\"end\":71058,\"start\":71053},{\"end\":71066,\"start\":71062},{\"end\":71076,\"start\":71070},{\"end\":71086,\"start\":71080},{\"end\":71094,\"start\":71090},{\"end\":71103,\"start\":71098},{\"end\":71112,\"start\":71107},{\"end\":71122,\"start\":71116},{\"end\":71136,\"start\":71126},{\"end\":71147,\"start\":71140},{\"end\":71160,\"start\":71151},{\"end\":71641,\"start\":71637},{\"end\":71651,\"start\":71645},{\"end\":71658,\"start\":71655},{\"end\":71666,\"start\":71662},{\"end\":71681,\"start\":71676},{\"end\":71691,\"start\":71685},{\"end\":71702,\"start\":71695},{\"end\":71711,\"start\":71706},{\"end\":71721,\"start\":71715},{\"end\":71733,\"start\":71725},{\"end\":71740,\"start\":71737},{\"end\":71748,\"start\":71744},{\"end\":71759,\"start\":71752},{\"end\":71769,\"start\":71763},{\"end\":71779,\"start\":71773},{\"end\":71789,\"start\":71783},{\"end\":71800,\"start\":71793},{\"end\":71808,\"start\":71804},{\"end\":71816,\"start\":71812},{\"end\":71825,\"start\":71820},{\"end\":71835,\"start\":71829},{\"end\":71844,\"start\":71839},{\"end\":71854,\"start\":71848},{\"end\":71866,\"start\":71858},{\"end\":71876,\"start\":71870},{\"end\":71886,\"start\":71880},{\"end\":71896,\"start\":71892},{\"end\":71908,\"start\":71900},{\"end\":71920,\"start\":71912},{\"end\":71932,\"start\":71924},{\"end\":71942,\"start\":71936},{\"end\":71958,\"start\":71946},{\"end\":71968,\"start\":71964},{\"end\":71978,\"start\":71972},{\"end\":71987,\"start\":71982},{\"end\":71996,\"start\":71991},{\"end\":72004,\"start\":72000},{\"end\":72018,\"start\":72008},{\"end\":72028,\"start\":72022},{\"end\":72036,\"start\":72032},{\"end\":72048,\"start\":72040},{\"end\":72057,\"start\":72052},{\"end\":72067,\"start\":72063},{\"end\":72076,\"start\":72071},{\"end\":72086,\"start\":72080},{\"end\":72095,\"start\":72090},{\"end\":72107,\"start\":72099},{\"end\":72118,\"start\":72111},{\"end\":72128,\"start\":72122},{\"end\":72140,\"start\":72132},{\"end\":72150,\"start\":72144},{\"end\":72159,\"start\":72154},{\"end\":72171,\"start\":72163},{\"end\":72181,\"start\":72175},{\"end\":72191,\"start\":72185},{\"end\":72206,\"start\":72195},{\"end\":72219,\"start\":72210},{\"end\":72230,\"start\":72223},{\"end\":73180,\"start\":73176},{\"end\":73190,\"start\":73184},{\"end\":73197,\"start\":73194},{\"end\":73205,\"start\":73201},{\"end\":73220,\"start\":73215},{\"end\":73230,\"start\":73224},{\"end\":73241,\"start\":73234},{\"end\":73250,\"start\":73245},{\"end\":73260,\"start\":73254},{\"end\":73272,\"start\":73264},{\"end\":73634,\"start\":73630},{\"end\":73640,\"start\":73638},{\"end\":73648,\"start\":73644},{\"end\":73659,\"start\":73654},{\"end\":73933,\"start\":73928},{\"end\":73940,\"start\":73937},{\"end\":73947,\"start\":73944},{\"end\":73953,\"start\":73951},{\"end\":73965,\"start\":73957},{\"end\":73971,\"start\":73969},{\"end\":73980,\"start\":73975},{\"end\":73989,\"start\":73984},{\"end\":74002,\"start\":73993},{\"end\":74017,\"start\":74006},{\"end\":74028,\"start\":74023},{\"end\":74305,\"start\":74296},{\"end\":74315,\"start\":74309},{\"end\":74325,\"start\":74319},{\"end\":74334,\"start\":74329},{\"end\":74344,\"start\":74338},{\"end\":74355,\"start\":74348},{\"end\":74365,\"start\":74359},{\"end\":74376,\"start\":74371},{\"end\":74386,\"start\":74380},{\"end\":74398,\"start\":74390},{\"end\":74407,\"start\":74402},{\"end\":74414,\"start\":74411},{\"end\":74431,\"start\":74418},{\"end\":74441,\"start\":74435},{\"end\":74448,\"start\":74445},{\"end\":74458,\"start\":74452},{\"end\":74465,\"start\":74462},{\"end\":74476,\"start\":74469},{\"end\":74491,\"start\":74480},{\"end\":74499,\"start\":74495},{\"end\":74505,\"start\":74503},{\"end\":74519,\"start\":74509},{\"end\":74527,\"start\":74523},{\"end\":74539,\"start\":74531},{\"end\":74549,\"start\":74543},{\"end\":74558,\"start\":74553},{\"end\":74569,\"start\":74562},{\"end\":74576,\"start\":74573},{\"end\":74584,\"start\":74580},{\"end\":74596,\"start\":74588},{\"end\":74608,\"start\":74600},{\"end\":74615,\"start\":74612},{\"end\":74630,\"start\":74619},{\"end\":74640,\"start\":74634},{\"end\":74649,\"start\":74644},{\"end\":74661,\"start\":74653},{\"end\":74670,\"start\":74665},{\"end\":74678,\"start\":74674},{\"end\":74690,\"start\":74682},{\"end\":74698,\"start\":74694},{\"end\":74705,\"start\":74702},{\"end\":74713,\"start\":74709},{\"end\":74727,\"start\":74717},{\"end\":74738,\"start\":74731},{\"end\":74747,\"start\":74742},{\"end\":74758,\"start\":74751},{\"end\":74770,\"start\":74762},{\"end\":74779,\"start\":74776},{\"end\":74791,\"start\":74785},{\"end\":74801,\"start\":74795},{\"end\":74814,\"start\":74805},{\"end\":74825,\"start\":74818},{\"end\":74834,\"start\":74829},{\"end\":74845,\"start\":74838},{\"end\":74852,\"start\":74849},{\"end\":74860,\"start\":74856},{\"end\":74868,\"start\":74864},{\"end\":74877,\"start\":74872},{\"end\":74885,\"start\":74881},{\"end\":74894,\"start\":74889},{\"end\":74905,\"start\":74898},{\"end\":74912,\"start\":74909},{\"end\":74931,\"start\":74916},{\"end\":74938,\"start\":74935},{\"end\":74946,\"start\":74942},{\"end\":74956,\"start\":74950},{\"end\":74966,\"start\":74960},{\"end\":74972,\"start\":74968},{\"end\":75959,\"start\":75954},{\"end\":75971,\"start\":75963},{\"end\":75983,\"start\":75975},{\"end\":75993,\"start\":75987},{\"end\":76003,\"start\":75997},{\"end\":76012,\"start\":76007},{\"end\":76024,\"start\":76016},{\"end\":76347,\"start\":76340},{\"end\":76357,\"start\":76351},{\"end\":76659,\"start\":76653},{\"end\":76669,\"start\":76665},{\"end\":76841,\"start\":76837},{\"end\":76853,\"start\":76845},{\"end\":76861,\"start\":76857},{\"end\":76871,\"start\":76865},{\"end\":76889,\"start\":76875},{\"end\":77200,\"start\":77196},{\"end\":77210,\"start\":77204},{\"end\":77220,\"start\":77214},{\"end\":77230,\"start\":77226},{\"end\":77242,\"start\":77234},{\"end\":77254,\"start\":77246},{\"end\":77265,\"start\":77258},{\"end\":77277,\"start\":77269},{\"end\":77287,\"start\":77283},{\"end\":77295,\"start\":77291},{\"end\":77302,\"start\":77299},{\"end\":77312,\"start\":77308},{\"end\":77318,\"start\":77316},{\"end\":77329,\"start\":77322},{\"end\":77341,\"start\":77335},{\"end\":77354,\"start\":77345},{\"end\":77361,\"start\":77358},{\"end\":77374,\"start\":77365},{\"end\":77383,\"start\":77378},{\"end\":77392,\"start\":77387},{\"end\":77401,\"start\":77396},{\"end\":77412,\"start\":77407},{\"end\":77422,\"start\":77418},{\"end\":77432,\"start\":77426},{\"end\":77440,\"start\":77436},{\"end\":77448,\"start\":77444},{\"end\":77460,\"start\":77454},{\"end\":77470,\"start\":77464},{\"end\":77478,\"start\":77474},{\"end\":77488,\"start\":77482},{\"end\":77497,\"start\":77492},{\"end\":77507,\"start\":77501},{\"end\":77519,\"start\":77511},{\"end\":77528,\"start\":77523},{\"end\":77537,\"start\":77532},{\"end\":77549,\"start\":77543},{\"end\":77561,\"start\":77553},{\"end\":77568,\"start\":77565},{\"end\":77576,\"start\":77572},{\"end\":77584,\"start\":77580},{\"end\":77592,\"start\":77588},{\"end\":77607,\"start\":77598},{\"end\":78304,\"start\":78300},{\"end\":78317,\"start\":78308},{\"end\":78547,\"start\":78543},{\"end\":78556,\"start\":78553},{\"end\":78567,\"start\":78560},{\"end\":78575,\"start\":78571},{\"end\":78582,\"start\":78579},{\"end\":78597,\"start\":78588},{\"end\":78606,\"start\":78601},{\"end\":78615,\"start\":78610},{\"end\":78625,\"start\":78619},{\"end\":78638,\"start\":78629},{\"end\":78978,\"start\":78972},{\"end\":78988,\"start\":78982},{\"end\":78999,\"start\":78992},{\"end\":79011,\"start\":79003},{\"end\":79018,\"start\":79015},{\"end\":79029,\"start\":79024},{\"end\":79042,\"start\":79033},{\"end\":79050,\"start\":79048},{\"end\":79057,\"start\":79054},{\"end\":79065,\"start\":79061},{\"end\":79448,\"start\":79442},{\"end\":79459,\"start\":79454},{\"end\":79473,\"start\":79465},{\"end\":79690,\"start\":79686},{\"end\":79697,\"start\":79694},{\"end\":79711,\"start\":79701},{\"end\":79717,\"start\":79715},{\"end\":79724,\"start\":79721},{\"end\":79732,\"start\":79728},{\"end\":79978,\"start\":79974},{\"end\":79985,\"start\":79982},{\"end\":79999,\"start\":79989},{\"end\":80005,\"start\":80003},{\"end\":80012,\"start\":80009},{\"end\":80020,\"start\":80016},{\"end\":80304,\"start\":80301},{\"end\":80313,\"start\":80308},{\"end\":80323,\"start\":80319},{\"end\":80330,\"start\":80327},{\"end\":80338,\"start\":80336},{\"end\":80348,\"start\":80342},{\"end\":80354,\"start\":80352},{\"end\":80363,\"start\":80360},{\"end\":80371,\"start\":80369},{\"end\":80649,\"start\":80646},{\"end\":80657,\"start\":80653},{\"end\":80671,\"start\":80661},{\"end\":80680,\"start\":80675},{\"end\":80687,\"start\":80684},{\"end\":80693,\"start\":80691},{\"end\":80701,\"start\":80697},{\"end\":80995,\"start\":80993},{\"end\":81006,\"start\":81001},{\"end\":81012,\"start\":81010},{\"end\":81022,\"start\":81018},{\"end\":81032,\"start\":81026},{\"end\":81042,\"start\":81036},{\"end\":81053,\"start\":81046},{\"end\":81307,\"start\":81304},{\"end\":81315,\"start\":81311},{\"end\":81321,\"start\":81319},{\"end\":81327,\"start\":81325},{\"end\":81338,\"start\":81331},{\"end\":81352,\"start\":81342},{\"end\":81359,\"start\":81356},{\"end\":81626,\"start\":81622},{\"end\":81637,\"start\":81630},{\"end\":81644,\"start\":81641},{\"end\":81651,\"start\":81648},{\"end\":81661,\"start\":81655},{\"end\":81669,\"start\":81665},{\"end\":81683,\"start\":81673},{\"end\":81695,\"start\":81687},{\"end\":81701,\"start\":81699},{\"end\":68988,\"start\":68985},{\"end\":68998,\"start\":68992},{\"end\":69007,\"start\":69002},{\"end\":69019,\"start\":69011},{\"end\":69029,\"start\":69023},{\"end\":69038,\"start\":69033},{\"end\":69046,\"start\":69042},{\"end\":69052,\"start\":69050},{\"end\":69070,\"start\":69056},{\"end\":69081,\"start\":69074},{\"end\":69091,\"start\":69085},{\"end\":69097,\"start\":69095},{\"end\":69104,\"start\":69101},{\"end\":69113,\"start\":69108},{\"end\":69123,\"start\":69117},{\"end\":69132,\"start\":69127},{\"end\":69140,\"start\":69136},{\"end\":69151,\"start\":69146},{\"end\":69162,\"start\":69155},{\"end\":69174,\"start\":69166},{\"end\":69185,\"start\":69180},{\"end\":69195,\"start\":69189},{\"end\":69210,\"start\":69199},{\"end\":69219,\"start\":69214},{\"end\":69229,\"start\":69226},{\"end\":69239,\"start\":69233},{\"end\":69245,\"start\":69243},{\"end\":69252,\"start\":69249},{\"end\":69262,\"start\":69256},{\"end\":69272,\"start\":69266},{\"end\":69284,\"start\":69276},{\"end\":69291,\"start\":69288},{\"end\":69307,\"start\":69295},{\"end\":69316,\"start\":69311},{\"end\":69328,\"start\":69320},{\"end\":69339,\"start\":69332},{\"end\":69346,\"start\":69343},{\"end\":69356,\"start\":69350},{\"end\":69369,\"start\":69360},{\"end\":69376,\"start\":69373},{\"end\":69384,\"start\":69380},{\"end\":69390,\"start\":69388},{\"end\":69396,\"start\":69394},{\"end\":69403,\"start\":69400},{\"end\":69411,\"start\":69407},{\"end\":70221,\"start\":70216},{\"end\":70232,\"start\":70225},{\"end\":70239,\"start\":70236},{\"end\":70260,\"start\":70243},{\"end\":70268,\"start\":70264},{\"end\":70282,\"start\":70272},{\"end\":70290,\"start\":70284},{\"end\":70582,\"start\":70577},{\"end\":70588,\"start\":70586},{\"end\":70595,\"start\":70592},{\"end\":70605,\"start\":70599},{\"end\":70857,\"start\":70852},{\"end\":70865,\"start\":70861},{\"end\":70874,\"start\":70869},{\"end\":70885,\"start\":70878},{\"end\":70895,\"start\":70889},{\"end\":70907,\"start\":70899},{\"end\":70922,\"start\":70911},{\"end\":70931,\"start\":70926},{\"end\":70941,\"start\":70935},{\"end\":70951,\"start\":70945},{\"end\":70962,\"start\":70955},{\"end\":70978,\"start\":70966},{\"end\":70989,\"start\":70982},{\"end\":71001,\"start\":70993},{\"end\":71010,\"start\":71005},{\"end\":71020,\"start\":71014},{\"end\":71033,\"start\":71026},{\"end\":71039,\"start\":71037},{\"end\":71049,\"start\":71043},{\"end\":71058,\"start\":71053},{\"end\":71066,\"start\":71062},{\"end\":71076,\"start\":71070},{\"end\":71086,\"start\":71080},{\"end\":71094,\"start\":71090},{\"end\":71103,\"start\":71098},{\"end\":71112,\"start\":71107},{\"end\":71122,\"start\":71116},{\"end\":71136,\"start\":71126},{\"end\":71147,\"start\":71140},{\"end\":71160,\"start\":71151},{\"end\":71641,\"start\":71637},{\"end\":71651,\"start\":71645},{\"end\":71658,\"start\":71655},{\"end\":71666,\"start\":71662},{\"end\":71681,\"start\":71676},{\"end\":71691,\"start\":71685},{\"end\":71702,\"start\":71695},{\"end\":71711,\"start\":71706},{\"end\":71721,\"start\":71715},{\"end\":71733,\"start\":71725},{\"end\":71740,\"start\":71737},{\"end\":71748,\"start\":71744},{\"end\":71759,\"start\":71752},{\"end\":71769,\"start\":71763},{\"end\":71779,\"start\":71773},{\"end\":71789,\"start\":71783},{\"end\":71800,\"start\":71793},{\"end\":71808,\"start\":71804},{\"end\":71816,\"start\":71812},{\"end\":71825,\"start\":71820},{\"end\":71835,\"start\":71829},{\"end\":71844,\"start\":71839},{\"end\":71854,\"start\":71848},{\"end\":71866,\"start\":71858},{\"end\":71876,\"start\":71870},{\"end\":71886,\"start\":71880},{\"end\":71896,\"start\":71892},{\"end\":71908,\"start\":71900},{\"end\":71920,\"start\":71912},{\"end\":71932,\"start\":71924},{\"end\":71942,\"start\":71936},{\"end\":71958,\"start\":71946},{\"end\":71968,\"start\":71964},{\"end\":71978,\"start\":71972},{\"end\":71987,\"start\":71982},{\"end\":71996,\"start\":71991},{\"end\":72004,\"start\":72000},{\"end\":72018,\"start\":72008},{\"end\":72028,\"start\":72022},{\"end\":72036,\"start\":72032},{\"end\":72048,\"start\":72040},{\"end\":72057,\"start\":72052},{\"end\":72067,\"start\":72063},{\"end\":72076,\"start\":72071},{\"end\":72086,\"start\":72080},{\"end\":72095,\"start\":72090},{\"end\":72107,\"start\":72099},{\"end\":72118,\"start\":72111},{\"end\":72128,\"start\":72122},{\"end\":72140,\"start\":72132},{\"end\":72150,\"start\":72144},{\"end\":72159,\"start\":72154},{\"end\":72171,\"start\":72163},{\"end\":72181,\"start\":72175},{\"end\":72191,\"start\":72185},{\"end\":72206,\"start\":72195},{\"end\":72219,\"start\":72210},{\"end\":72230,\"start\":72223},{\"end\":73180,\"start\":73176},{\"end\":73190,\"start\":73184},{\"end\":73197,\"start\":73194},{\"end\":73205,\"start\":73201},{\"end\":73220,\"start\":73215},{\"end\":73230,\"start\":73224},{\"end\":73241,\"start\":73234},{\"end\":73250,\"start\":73245},{\"end\":73260,\"start\":73254},{\"end\":73272,\"start\":73264},{\"end\":73634,\"start\":73630},{\"end\":73640,\"start\":73638},{\"end\":73648,\"start\":73644},{\"end\":73659,\"start\":73654},{\"end\":73933,\"start\":73928},{\"end\":73940,\"start\":73937},{\"end\":73947,\"start\":73944},{\"end\":73953,\"start\":73951},{\"end\":73965,\"start\":73957},{\"end\":73971,\"start\":73969},{\"end\":73980,\"start\":73975},{\"end\":73989,\"start\":73984},{\"end\":74002,\"start\":73993},{\"end\":74017,\"start\":74006},{\"end\":74028,\"start\":74023},{\"end\":74305,\"start\":74296},{\"end\":74315,\"start\":74309},{\"end\":74325,\"start\":74319},{\"end\":74334,\"start\":74329},{\"end\":74344,\"start\":74338},{\"end\":74355,\"start\":74348},{\"end\":74365,\"start\":74359},{\"end\":74376,\"start\":74371},{\"end\":74386,\"start\":74380},{\"end\":74398,\"start\":74390},{\"end\":74407,\"start\":74402},{\"end\":74414,\"start\":74411},{\"end\":74431,\"start\":74418},{\"end\":74441,\"start\":74435},{\"end\":74448,\"start\":74445},{\"end\":74458,\"start\":74452},{\"end\":74465,\"start\":74462},{\"end\":74476,\"start\":74469},{\"end\":74491,\"start\":74480},{\"end\":74499,\"start\":74495},{\"end\":74505,\"start\":74503},{\"end\":74519,\"start\":74509},{\"end\":74527,\"start\":74523},{\"end\":74539,\"start\":74531},{\"end\":74549,\"start\":74543},{\"end\":74558,\"start\":74553},{\"end\":74569,\"start\":74562},{\"end\":74576,\"start\":74573},{\"end\":74584,\"start\":74580},{\"end\":74596,\"start\":74588},{\"end\":74608,\"start\":74600},{\"end\":74615,\"start\":74612},{\"end\":74630,\"start\":74619},{\"end\":74640,\"start\":74634},{\"end\":74649,\"start\":74644},{\"end\":74661,\"start\":74653},{\"end\":74670,\"start\":74665},{\"end\":74678,\"start\":74674},{\"end\":74690,\"start\":74682},{\"end\":74698,\"start\":74694},{\"end\":74705,\"start\":74702},{\"end\":74713,\"start\":74709},{\"end\":74727,\"start\":74717},{\"end\":74738,\"start\":74731},{\"end\":74747,\"start\":74742},{\"end\":74758,\"start\":74751},{\"end\":74770,\"start\":74762},{\"end\":74779,\"start\":74776},{\"end\":74791,\"start\":74785},{\"end\":74801,\"start\":74795},{\"end\":74814,\"start\":74805},{\"end\":74825,\"start\":74818},{\"end\":74834,\"start\":74829},{\"end\":74845,\"start\":74838},{\"end\":74852,\"start\":74849},{\"end\":74860,\"start\":74856},{\"end\":74868,\"start\":74864},{\"end\":74877,\"start\":74872},{\"end\":74885,\"start\":74881},{\"end\":74894,\"start\":74889},{\"end\":74905,\"start\":74898},{\"end\":74912,\"start\":74909},{\"end\":74931,\"start\":74916},{\"end\":74938,\"start\":74935},{\"end\":74946,\"start\":74942},{\"end\":74956,\"start\":74950},{\"end\":74966,\"start\":74960},{\"end\":74972,\"start\":74968},{\"end\":75959,\"start\":75954},{\"end\":75971,\"start\":75963},{\"end\":75983,\"start\":75975},{\"end\":75993,\"start\":75987},{\"end\":76003,\"start\":75997},{\"end\":76012,\"start\":76007},{\"end\":76024,\"start\":76016},{\"end\":76347,\"start\":76340},{\"end\":76357,\"start\":76351},{\"end\":76659,\"start\":76653},{\"end\":76669,\"start\":76665},{\"end\":76841,\"start\":76837},{\"end\":76853,\"start\":76845},{\"end\":76861,\"start\":76857},{\"end\":76871,\"start\":76865},{\"end\":76889,\"start\":76875},{\"end\":77200,\"start\":77196},{\"end\":77210,\"start\":77204},{\"end\":77220,\"start\":77214},{\"end\":77230,\"start\":77226},{\"end\":77242,\"start\":77234},{\"end\":77254,\"start\":77246},{\"end\":77265,\"start\":77258},{\"end\":77277,\"start\":77269},{\"end\":77287,\"start\":77283},{\"end\":77295,\"start\":77291},{\"end\":77302,\"start\":77299},{\"end\":77312,\"start\":77308},{\"end\":77318,\"start\":77316},{\"end\":77329,\"start\":77322},{\"end\":77341,\"start\":77335},{\"end\":77354,\"start\":77345},{\"end\":77361,\"start\":77358},{\"end\":77374,\"start\":77365},{\"end\":77383,\"start\":77378},{\"end\":77392,\"start\":77387},{\"end\":77401,\"start\":77396},{\"end\":77412,\"start\":77407},{\"end\":77422,\"start\":77418},{\"end\":77432,\"start\":77426},{\"end\":77440,\"start\":77436},{\"end\":77448,\"start\":77444},{\"end\":77460,\"start\":77454},{\"end\":77470,\"start\":77464},{\"end\":77478,\"start\":77474},{\"end\":77488,\"start\":77482},{\"end\":77497,\"start\":77492},{\"end\":77507,\"start\":77501},{\"end\":77519,\"start\":77511},{\"end\":77528,\"start\":77523},{\"end\":77537,\"start\":77532},{\"end\":77549,\"start\":77543},{\"end\":77561,\"start\":77553},{\"end\":77568,\"start\":77565},{\"end\":77576,\"start\":77572},{\"end\":77584,\"start\":77580},{\"end\":77592,\"start\":77588},{\"end\":77607,\"start\":77598},{\"end\":78304,\"start\":78300},{\"end\":78317,\"start\":78308},{\"end\":78547,\"start\":78543},{\"end\":78556,\"start\":78553},{\"end\":78567,\"start\":78560},{\"end\":78575,\"start\":78571},{\"end\":78582,\"start\":78579},{\"end\":78597,\"start\":78588},{\"end\":78606,\"start\":78601},{\"end\":78615,\"start\":78610},{\"end\":78625,\"start\":78619},{\"end\":78638,\"start\":78629},{\"end\":78978,\"start\":78972},{\"end\":78988,\"start\":78982},{\"end\":78999,\"start\":78992},{\"end\":79011,\"start\":79003},{\"end\":79018,\"start\":79015},{\"end\":79029,\"start\":79024},{\"end\":79042,\"start\":79033},{\"end\":79050,\"start\":79048},{\"end\":79057,\"start\":79054},{\"end\":79065,\"start\":79061},{\"end\":79448,\"start\":79442},{\"end\":79459,\"start\":79454},{\"end\":79473,\"start\":79465},{\"end\":79690,\"start\":79686},{\"end\":79697,\"start\":79694},{\"end\":79711,\"start\":79701},{\"end\":79717,\"start\":79715},{\"end\":79724,\"start\":79721},{\"end\":79732,\"start\":79728},{\"end\":79978,\"start\":79974},{\"end\":79985,\"start\":79982},{\"end\":79999,\"start\":79989},{\"end\":80005,\"start\":80003},{\"end\":80012,\"start\":80009},{\"end\":80020,\"start\":80016},{\"end\":80304,\"start\":80301},{\"end\":80313,\"start\":80308},{\"end\":80323,\"start\":80319},{\"end\":80330,\"start\":80327},{\"end\":80338,\"start\":80336},{\"end\":80348,\"start\":80342},{\"end\":80354,\"start\":80352},{\"end\":80363,\"start\":80360},{\"end\":80371,\"start\":80369},{\"end\":80649,\"start\":80646},{\"end\":80657,\"start\":80653},{\"end\":80671,\"start\":80661},{\"end\":80680,\"start\":80675},{\"end\":80687,\"start\":80684},{\"end\":80693,\"start\":80691},{\"end\":80701,\"start\":80697},{\"end\":80995,\"start\":80993},{\"end\":81006,\"start\":81001},{\"end\":81012,\"start\":81010},{\"end\":81022,\"start\":81018},{\"end\":81032,\"start\":81026},{\"end\":81042,\"start\":81036},{\"end\":81053,\"start\":81046},{\"end\":81307,\"start\":81304},{\"end\":81315,\"start\":81311},{\"end\":81321,\"start\":81319},{\"end\":81327,\"start\":81325},{\"end\":81338,\"start\":81331},{\"end\":81352,\"start\":81342},{\"end\":81359,\"start\":81356},{\"end\":81626,\"start\":81622},{\"end\":81637,\"start\":81630},{\"end\":81644,\"start\":81641},{\"end\":81651,\"start\":81648},{\"end\":81661,\"start\":81655},{\"end\":81669,\"start\":81665},{\"end\":81683,\"start\":81673},{\"end\":81695,\"start\":81687},{\"end\":81701,\"start\":81699}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:2204.01691\",\"id\":\"b0\"},\"end\":70131,\"start\":68970},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":173188048},\"end\":70486,\"start\":70133},{\"attributes\":{\"doi\":\"arXiv:1909.00109\",\"id\":\"b2\"},\"end\":70807,\"start\":70488},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":218971783},\"end\":71631,\"start\":70809},{\"attributes\":{\"doi\":\"arXiv:2107.03374\",\"id\":\"b4\"},\"end\":73122,\"start\":71633},{\"attributes\":{\"doi\":\"arXiv:2107.03374\",\"id\":\"b5\"},\"end\":73523,\"start\":73124},{\"attributes\":{\"doi\":\"arXiv:2211.12588\",\"id\":\"b6\"},\"end\":73877,\"start\":73525},{\"attributes\":{\"doi\":\"arXiv:2210.02875\",\"id\":\"b7\"},\"end\":74292,\"start\":73879},{\"attributes\":{\"doi\":\"arXiv:2204.02311\",\"id\":\"b8\"},\"end\":75948,\"start\":74294},{\"attributes\":{\"doi\":\"arXiv:2110.14168\",\"id\":\"b9\"},\"end\":76283,\"start\":75950},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":209202876},\"end\":76649,\"start\":76285},{\"attributes\":{\"doi\":\"arXiv:2012.05876\",\"id\":\"b11\"},\"end\":76833,\"start\":76651},{\"attributes\":{\"doi\":\"arXiv:2109.03910\",\"id\":\"b12\"},\"end\":77190,\"start\":76835},{\"attributes\":{\"id\":\"b13\"},\"end\":78232,\"start\":77192},{\"attributes\":{\"doi\":\"arXiv:2112.08696\",\"id\":\"b14\"},\"end\":78478,\"start\":78234},{\"attributes\":{\"doi\":\"arXiv:2104.08768\",\"id\":\"b15\"},\"end\":78895,\"start\":78480},{\"attributes\":{\"doi\":\"abs/2210.09261\",\"id\":\"b16\",\"matched_paper_id\":252917648},\"end\":79330,\"start\":78897},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":45030378},\"end\":79682,\"start\":79332},{\"attributes\":{\"doi\":\"arXiv:2207.00747\",\"id\":\"b18\"},\"end\":79970,\"start\":79684},{\"attributes\":{\"doi\":\"arXiv:2203.11171\",\"id\":\"b19\"},\"end\":80297,\"start\":79972},{\"attributes\":{\"doi\":\"arXiv:2109.01652\",\"id\":\"b20\"},\"end\":80642,\"start\":80299},{\"attributes\":{\"doi\":\"arXiv:2201.11903\",\"id\":\"b21\"},\"end\":80989,\"start\":80644},{\"attributes\":{\"doi\":\"arXiv:2205.12615\",\"id\":\"b22\"},\"end\":81300,\"start\":80991},{\"attributes\":{\"doi\":\"arXiv:2210.03629\",\"id\":\"b23\"},\"end\":81618,\"start\":81302},{\"attributes\":{\"doi\":\"arXiv:2205.10625\",\"id\":\"b24\"},\"end\":82038,\"start\":81620},{\"attributes\":{\"doi\":\"arXiv:2204.01691\",\"id\":\"b0\"},\"end\":70131,\"start\":68970},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":173188048},\"end\":70486,\"start\":70133},{\"attributes\":{\"doi\":\"arXiv:1909.00109\",\"id\":\"b2\"},\"end\":70807,\"start\":70488},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":218971783},\"end\":71631,\"start\":70809},{\"attributes\":{\"doi\":\"arXiv:2107.03374\",\"id\":\"b4\"},\"end\":73122,\"start\":71633},{\"attributes\":{\"doi\":\"arXiv:2107.03374\",\"id\":\"b5\"},\"end\":73523,\"start\":73124},{\"attributes\":{\"doi\":\"arXiv:2211.12588\",\"id\":\"b6\"},\"end\":73877,\"start\":73525},{\"attributes\":{\"doi\":\"arXiv:2210.02875\",\"id\":\"b7\"},\"end\":74292,\"start\":73879},{\"attributes\":{\"doi\":\"arXiv:2204.02311\",\"id\":\"b8\"},\"end\":75948,\"start\":74294},{\"attributes\":{\"doi\":\"arXiv:2110.14168\",\"id\":\"b9\"},\"end\":76283,\"start\":75950},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":209202876},\"end\":76649,\"start\":76285},{\"attributes\":{\"doi\":\"arXiv:2012.05876\",\"id\":\"b11\"},\"end\":76833,\"start\":76651},{\"attributes\":{\"doi\":\"arXiv:2109.03910\",\"id\":\"b12\"},\"end\":77190,\"start\":76835},{\"attributes\":{\"id\":\"b13\"},\"end\":78232,\"start\":77192},{\"attributes\":{\"doi\":\"arXiv:2112.08696\",\"id\":\"b14\"},\"end\":78478,\"start\":78234},{\"attributes\":{\"doi\":\"arXiv:2104.08768\",\"id\":\"b15\"},\"end\":78895,\"start\":78480},{\"attributes\":{\"doi\":\"abs/2210.09261\",\"id\":\"b16\",\"matched_paper_id\":252917648},\"end\":79330,\"start\":78897},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":45030378},\"end\":79682,\"start\":79332},{\"attributes\":{\"doi\":\"arXiv:2207.00747\",\"id\":\"b18\"},\"end\":79970,\"start\":79684},{\"attributes\":{\"doi\":\"arXiv:2203.11171\",\"id\":\"b19\"},\"end\":80297,\"start\":79972},{\"attributes\":{\"doi\":\"arXiv:2109.01652\",\"id\":\"b20\"},\"end\":80642,\"start\":80299},{\"attributes\":{\"doi\":\"arXiv:2201.11903\",\"id\":\"b21\"},\"end\":80989,\"start\":80644},{\"attributes\":{\"doi\":\"arXiv:2205.12615\",\"id\":\"b22\"},\"end\":81300,\"start\":80991},{\"attributes\":{\"doi\":\"arXiv:2210.03629\",\"id\":\"b23\"},\"end\":81618,\"start\":81302},{\"attributes\":{\"doi\":\"arXiv:2205.10625\",\"id\":\"b24\"},\"end\":82038,\"start\":81620}]", "bib_title": "[{\"end\":68981,\"start\":68970},{\"end\":70212,\"start\":70133},{\"end\":70846,\"start\":70809},{\"end\":76336,\"start\":76285},{\"end\":78968,\"start\":78897},{\"end\":79436,\"start\":79332},{\"end\":68981,\"start\":68970},{\"end\":70212,\"start\":70133},{\"end\":70846,\"start\":70809},{\"end\":76336,\"start\":76285},{\"end\":78968,\"start\":78897},{\"end\":79436,\"start\":79332}]", "bib_author": "[{\"end\":68990,\"start\":68983},{\"end\":69000,\"start\":68990},{\"end\":69009,\"start\":69000},{\"end\":69021,\"start\":69009},{\"end\":69031,\"start\":69021},{\"end\":69040,\"start\":69031},{\"end\":69048,\"start\":69040},{\"end\":69054,\"start\":69048},{\"end\":69072,\"start\":69054},{\"end\":69083,\"start\":69072},{\"end\":69093,\"start\":69083},{\"end\":69099,\"start\":69093},{\"end\":69106,\"start\":69099},{\"end\":69115,\"start\":69106},{\"end\":69125,\"start\":69115},{\"end\":69134,\"start\":69125},{\"end\":69142,\"start\":69134},{\"end\":69153,\"start\":69142},{\"end\":69164,\"start\":69153},{\"end\":69176,\"start\":69164},{\"end\":69187,\"start\":69176},{\"end\":69197,\"start\":69187},{\"end\":69212,\"start\":69197},{\"end\":69221,\"start\":69212},{\"end\":69231,\"start\":69221},{\"end\":69241,\"start\":69231},{\"end\":69247,\"start\":69241},{\"end\":69254,\"start\":69247},{\"end\":69264,\"start\":69254},{\"end\":69274,\"start\":69264},{\"end\":69286,\"start\":69274},{\"end\":69293,\"start\":69286},{\"end\":69309,\"start\":69293},{\"end\":69318,\"start\":69309},{\"end\":69330,\"start\":69318},{\"end\":69341,\"start\":69330},{\"end\":69348,\"start\":69341},{\"end\":69358,\"start\":69348},{\"end\":69371,\"start\":69358},{\"end\":69378,\"start\":69371},{\"end\":69386,\"start\":69378},{\"end\":69392,\"start\":69386},{\"end\":69398,\"start\":69392},{\"end\":69405,\"start\":69398},{\"end\":69413,\"start\":69405},{\"end\":70223,\"start\":70214},{\"end\":70234,\"start\":70223},{\"end\":70241,\"start\":70234},{\"end\":70262,\"start\":70241},{\"end\":70270,\"start\":70262},{\"end\":70284,\"start\":70270},{\"end\":70292,\"start\":70284},{\"end\":70584,\"start\":70575},{\"end\":70590,\"start\":70584},{\"end\":70597,\"start\":70590},{\"end\":70607,\"start\":70597},{\"end\":70859,\"start\":70848},{\"end\":70867,\"start\":70859},{\"end\":70876,\"start\":70867},{\"end\":70887,\"start\":70876},{\"end\":70897,\"start\":70887},{\"end\":70909,\"start\":70897},{\"end\":70924,\"start\":70909},{\"end\":70933,\"start\":70924},{\"end\":70943,\"start\":70933},{\"end\":70953,\"start\":70943},{\"end\":70964,\"start\":70953},{\"end\":70980,\"start\":70964},{\"end\":70991,\"start\":70980},{\"end\":71003,\"start\":70991},{\"end\":71012,\"start\":71003},{\"end\":71022,\"start\":71012},{\"end\":71035,\"start\":71022},{\"end\":71041,\"start\":71035},{\"end\":71051,\"start\":71041},{\"end\":71060,\"start\":71051},{\"end\":71068,\"start\":71060},{\"end\":71078,\"start\":71068},{\"end\":71088,\"start\":71078},{\"end\":71096,\"start\":71088},{\"end\":71105,\"start\":71096},{\"end\":71114,\"start\":71105},{\"end\":71124,\"start\":71114},{\"end\":71138,\"start\":71124},{\"end\":71149,\"start\":71138},{\"end\":71162,\"start\":71149},{\"end\":71171,\"start\":71162},{\"end\":71175,\"start\":71171},{\"end\":71643,\"start\":71635},{\"end\":71653,\"start\":71643},{\"end\":71660,\"start\":71653},{\"end\":71668,\"start\":71660},{\"end\":71683,\"start\":71668},{\"end\":71693,\"start\":71683},{\"end\":71704,\"start\":71693},{\"end\":71713,\"start\":71704},{\"end\":71723,\"start\":71713},{\"end\":71735,\"start\":71723},{\"end\":71742,\"start\":71735},{\"end\":71750,\"start\":71742},{\"end\":71761,\"start\":71750},{\"end\":71771,\"start\":71761},{\"end\":71781,\"start\":71771},{\"end\":71791,\"start\":71781},{\"end\":71802,\"start\":71791},{\"end\":71810,\"start\":71802},{\"end\":71818,\"start\":71810},{\"end\":71827,\"start\":71818},{\"end\":71837,\"start\":71827},{\"end\":71846,\"start\":71837},{\"end\":71856,\"start\":71846},{\"end\":71868,\"start\":71856},{\"end\":71878,\"start\":71868},{\"end\":71888,\"start\":71878},{\"end\":71898,\"start\":71888},{\"end\":71910,\"start\":71898},{\"end\":71922,\"start\":71910},{\"end\":71934,\"start\":71922},{\"end\":71944,\"start\":71934},{\"end\":71960,\"start\":71944},{\"end\":71970,\"start\":71960},{\"end\":71980,\"start\":71970},{\"end\":71989,\"start\":71980},{\"end\":71998,\"start\":71989},{\"end\":72006,\"start\":71998},{\"end\":72020,\"start\":72006},{\"end\":72030,\"start\":72020},{\"end\":72038,\"start\":72030},{\"end\":72050,\"start\":72038},{\"end\":72059,\"start\":72050},{\"end\":72069,\"start\":72059},{\"end\":72078,\"start\":72069},{\"end\":72088,\"start\":72078},{\"end\":72097,\"start\":72088},{\"end\":72109,\"start\":72097},{\"end\":72120,\"start\":72109},{\"end\":72130,\"start\":72120},{\"end\":72142,\"start\":72130},{\"end\":72152,\"start\":72142},{\"end\":72161,\"start\":72152},{\"end\":72173,\"start\":72161},{\"end\":72183,\"start\":72173},{\"end\":72193,\"start\":72183},{\"end\":72208,\"start\":72193},{\"end\":72221,\"start\":72208},{\"end\":72232,\"start\":72221},{\"end\":73182,\"start\":73174},{\"end\":73192,\"start\":73182},{\"end\":73199,\"start\":73192},{\"end\":73207,\"start\":73199},{\"end\":73222,\"start\":73207},{\"end\":73232,\"start\":73222},{\"end\":73243,\"start\":73232},{\"end\":73252,\"start\":73243},{\"end\":73262,\"start\":73252},{\"end\":73274,\"start\":73262},{\"end\":73636,\"start\":73628},{\"end\":73642,\"start\":73636},{\"end\":73650,\"start\":73642},{\"end\":73661,\"start\":73650},{\"end\":73935,\"start\":73926},{\"end\":73942,\"start\":73935},{\"end\":73949,\"start\":73942},{\"end\":73955,\"start\":73949},{\"end\":73967,\"start\":73955},{\"end\":73973,\"start\":73967},{\"end\":73982,\"start\":73973},{\"end\":73991,\"start\":73982},{\"end\":74004,\"start\":73991},{\"end\":74019,\"start\":74004},{\"end\":74030,\"start\":74019},{\"end\":74035,\"start\":74030},{\"end\":74039,\"start\":74035},{\"end\":74307,\"start\":74294},{\"end\":74317,\"start\":74307},{\"end\":74327,\"start\":74317},{\"end\":74336,\"start\":74327},{\"end\":74346,\"start\":74336},{\"end\":74357,\"start\":74346},{\"end\":74367,\"start\":74357},{\"end\":74378,\"start\":74367},{\"end\":74388,\"start\":74378},{\"end\":74400,\"start\":74388},{\"end\":74409,\"start\":74400},{\"end\":74416,\"start\":74409},{\"end\":74433,\"start\":74416},{\"end\":74443,\"start\":74433},{\"end\":74450,\"start\":74443},{\"end\":74460,\"start\":74450},{\"end\":74467,\"start\":74460},{\"end\":74478,\"start\":74467},{\"end\":74493,\"start\":74478},{\"end\":74501,\"start\":74493},{\"end\":74507,\"start\":74501},{\"end\":74521,\"start\":74507},{\"end\":74529,\"start\":74521},{\"end\":74541,\"start\":74529},{\"end\":74551,\"start\":74541},{\"end\":74560,\"start\":74551},{\"end\":74571,\"start\":74560},{\"end\":74578,\"start\":74571},{\"end\":74586,\"start\":74578},{\"end\":74598,\"start\":74586},{\"end\":74610,\"start\":74598},{\"end\":74617,\"start\":74610},{\"end\":74632,\"start\":74617},{\"end\":74642,\"start\":74632},{\"end\":74651,\"start\":74642},{\"end\":74663,\"start\":74651},{\"end\":74672,\"start\":74663},{\"end\":74680,\"start\":74672},{\"end\":74692,\"start\":74680},{\"end\":74700,\"start\":74692},{\"end\":74707,\"start\":74700},{\"end\":74715,\"start\":74707},{\"end\":74729,\"start\":74715},{\"end\":74740,\"start\":74729},{\"end\":74749,\"start\":74740},{\"end\":74760,\"start\":74749},{\"end\":74772,\"start\":74760},{\"end\":74781,\"start\":74772},{\"end\":74793,\"start\":74781},{\"end\":74803,\"start\":74793},{\"end\":74816,\"start\":74803},{\"end\":74827,\"start\":74816},{\"end\":74836,\"start\":74827},{\"end\":74847,\"start\":74836},{\"end\":74854,\"start\":74847},{\"end\":74862,\"start\":74854},{\"end\":74870,\"start\":74862},{\"end\":74879,\"start\":74870},{\"end\":74887,\"start\":74879},{\"end\":74896,\"start\":74887},{\"end\":74907,\"start\":74896},{\"end\":74914,\"start\":74907},{\"end\":74933,\"start\":74914},{\"end\":74940,\"start\":74933},{\"end\":74948,\"start\":74940},{\"end\":74958,\"start\":74948},{\"end\":74968,\"start\":74958},{\"end\":74974,\"start\":74968},{\"end\":75961,\"start\":75952},{\"end\":75973,\"start\":75961},{\"end\":75985,\"start\":75973},{\"end\":75995,\"start\":75985},{\"end\":76005,\"start\":75995},{\"end\":76014,\"start\":76005},{\"end\":76026,\"start\":76014},{\"end\":76349,\"start\":76338},{\"end\":76359,\"start\":76349},{\"end\":76661,\"start\":76651},{\"end\":76671,\"start\":76661},{\"end\":76843,\"start\":76835},{\"end\":76855,\"start\":76843},{\"end\":76863,\"start\":76855},{\"end\":76873,\"start\":76863},{\"end\":76891,\"start\":76873},{\"end\":76897,\"start\":76891},{\"end\":76901,\"start\":76897},{\"end\":77202,\"start\":77194},{\"end\":77212,\"start\":77202},{\"end\":77222,\"start\":77212},{\"end\":77232,\"start\":77222},{\"end\":77244,\"start\":77232},{\"end\":77256,\"start\":77244},{\"end\":77267,\"start\":77256},{\"end\":77279,\"start\":77267},{\"end\":77289,\"start\":77279},{\"end\":77297,\"start\":77289},{\"end\":77304,\"start\":77297},{\"end\":77314,\"start\":77304},{\"end\":77320,\"start\":77314},{\"end\":77331,\"start\":77320},{\"end\":77343,\"start\":77331},{\"end\":77356,\"start\":77343},{\"end\":77363,\"start\":77356},{\"end\":77376,\"start\":77363},{\"end\":77385,\"start\":77376},{\"end\":77394,\"start\":77385},{\"end\":77403,\"start\":77394},{\"end\":77414,\"start\":77403},{\"end\":77424,\"start\":77414},{\"end\":77434,\"start\":77424},{\"end\":77442,\"start\":77434},{\"end\":77450,\"start\":77442},{\"end\":77462,\"start\":77450},{\"end\":77472,\"start\":77462},{\"end\":77480,\"start\":77472},{\"end\":77490,\"start\":77480},{\"end\":77499,\"start\":77490},{\"end\":77509,\"start\":77499},{\"end\":77521,\"start\":77509},{\"end\":77530,\"start\":77521},{\"end\":77539,\"start\":77530},{\"end\":77551,\"start\":77539},{\"end\":77563,\"start\":77551},{\"end\":77570,\"start\":77563},{\"end\":77578,\"start\":77570},{\"end\":77586,\"start\":77578},{\"end\":77594,\"start\":77586},{\"end\":77609,\"start\":77594},{\"end\":78306,\"start\":78298},{\"end\":78319,\"start\":78306},{\"end\":78549,\"start\":78541},{\"end\":78558,\"start\":78549},{\"end\":78569,\"start\":78558},{\"end\":78577,\"start\":78569},{\"end\":78584,\"start\":78577},{\"end\":78599,\"start\":78584},{\"end\":78608,\"start\":78599},{\"end\":78617,\"start\":78608},{\"end\":78627,\"start\":78617},{\"end\":78640,\"start\":78627},{\"end\":78980,\"start\":78970},{\"end\":78990,\"start\":78980},{\"end\":79001,\"start\":78990},{\"end\":79013,\"start\":79001},{\"end\":79020,\"start\":79013},{\"end\":79031,\"start\":79020},{\"end\":79044,\"start\":79031},{\"end\":79052,\"start\":79044},{\"end\":79059,\"start\":79052},{\"end\":79067,\"start\":79059},{\"end\":79073,\"start\":79067},{\"end\":79077,\"start\":79073},{\"end\":79450,\"start\":79438},{\"end\":79461,\"start\":79450},{\"end\":79475,\"start\":79461},{\"end\":79692,\"start\":79684},{\"end\":79699,\"start\":79692},{\"end\":79713,\"start\":79699},{\"end\":79719,\"start\":79713},{\"end\":79726,\"start\":79719},{\"end\":79734,\"start\":79726},{\"end\":79980,\"start\":79972},{\"end\":79987,\"start\":79980},{\"end\":80001,\"start\":79987},{\"end\":80007,\"start\":80001},{\"end\":80014,\"start\":80007},{\"end\":80022,\"start\":80014},{\"end\":80306,\"start\":80299},{\"end\":80315,\"start\":80306},{\"end\":80325,\"start\":80315},{\"end\":80332,\"start\":80325},{\"end\":80340,\"start\":80332},{\"end\":80350,\"start\":80340},{\"end\":80356,\"start\":80350},{\"end\":80365,\"start\":80356},{\"end\":80373,\"start\":80365},{\"end\":80651,\"start\":80644},{\"end\":80659,\"start\":80651},{\"end\":80673,\"start\":80659},{\"end\":80682,\"start\":80673},{\"end\":80689,\"start\":80682},{\"end\":80695,\"start\":80689},{\"end\":80703,\"start\":80695},{\"end\":80997,\"start\":80991},{\"end\":81008,\"start\":80997},{\"end\":81014,\"start\":81008},{\"end\":81024,\"start\":81014},{\"end\":81034,\"start\":81024},{\"end\":81044,\"start\":81034},{\"end\":81055,\"start\":81044},{\"end\":81309,\"start\":81302},{\"end\":81317,\"start\":81309},{\"end\":81323,\"start\":81317},{\"end\":81329,\"start\":81323},{\"end\":81340,\"start\":81329},{\"end\":81354,\"start\":81340},{\"end\":81361,\"start\":81354},{\"end\":81628,\"start\":81620},{\"end\":81639,\"start\":81628},{\"end\":81646,\"start\":81639},{\"end\":81653,\"start\":81646},{\"end\":81663,\"start\":81653},{\"end\":81671,\"start\":81663},{\"end\":81685,\"start\":81671},{\"end\":81697,\"start\":81685},{\"end\":81703,\"start\":81697},{\"end\":81709,\"start\":81703},{\"end\":81713,\"start\":81709},{\"end\":68990,\"start\":68983},{\"end\":69000,\"start\":68990},{\"end\":69009,\"start\":69000},{\"end\":69021,\"start\":69009},{\"end\":69031,\"start\":69021},{\"end\":69040,\"start\":69031},{\"end\":69048,\"start\":69040},{\"end\":69054,\"start\":69048},{\"end\":69072,\"start\":69054},{\"end\":69083,\"start\":69072},{\"end\":69093,\"start\":69083},{\"end\":69099,\"start\":69093},{\"end\":69106,\"start\":69099},{\"end\":69115,\"start\":69106},{\"end\":69125,\"start\":69115},{\"end\":69134,\"start\":69125},{\"end\":69142,\"start\":69134},{\"end\":69153,\"start\":69142},{\"end\":69164,\"start\":69153},{\"end\":69176,\"start\":69164},{\"end\":69187,\"start\":69176},{\"end\":69197,\"start\":69187},{\"end\":69212,\"start\":69197},{\"end\":69221,\"start\":69212},{\"end\":69231,\"start\":69221},{\"end\":69241,\"start\":69231},{\"end\":69247,\"start\":69241},{\"end\":69254,\"start\":69247},{\"end\":69264,\"start\":69254},{\"end\":69274,\"start\":69264},{\"end\":69286,\"start\":69274},{\"end\":69293,\"start\":69286},{\"end\":69309,\"start\":69293},{\"end\":69318,\"start\":69309},{\"end\":69330,\"start\":69318},{\"end\":69341,\"start\":69330},{\"end\":69348,\"start\":69341},{\"end\":69358,\"start\":69348},{\"end\":69371,\"start\":69358},{\"end\":69378,\"start\":69371},{\"end\":69386,\"start\":69378},{\"end\":69392,\"start\":69386},{\"end\":69398,\"start\":69392},{\"end\":69405,\"start\":69398},{\"end\":69413,\"start\":69405},{\"end\":70223,\"start\":70214},{\"end\":70234,\"start\":70223},{\"end\":70241,\"start\":70234},{\"end\":70262,\"start\":70241},{\"end\":70270,\"start\":70262},{\"end\":70284,\"start\":70270},{\"end\":70292,\"start\":70284},{\"end\":70584,\"start\":70575},{\"end\":70590,\"start\":70584},{\"end\":70597,\"start\":70590},{\"end\":70607,\"start\":70597},{\"end\":70859,\"start\":70848},{\"end\":70867,\"start\":70859},{\"end\":70876,\"start\":70867},{\"end\":70887,\"start\":70876},{\"end\":70897,\"start\":70887},{\"end\":70909,\"start\":70897},{\"end\":70924,\"start\":70909},{\"end\":70933,\"start\":70924},{\"end\":70943,\"start\":70933},{\"end\":70953,\"start\":70943},{\"end\":70964,\"start\":70953},{\"end\":70980,\"start\":70964},{\"end\":70991,\"start\":70980},{\"end\":71003,\"start\":70991},{\"end\":71012,\"start\":71003},{\"end\":71022,\"start\":71012},{\"end\":71035,\"start\":71022},{\"end\":71041,\"start\":71035},{\"end\":71051,\"start\":71041},{\"end\":71060,\"start\":71051},{\"end\":71068,\"start\":71060},{\"end\":71078,\"start\":71068},{\"end\":71088,\"start\":71078},{\"end\":71096,\"start\":71088},{\"end\":71105,\"start\":71096},{\"end\":71114,\"start\":71105},{\"end\":71124,\"start\":71114},{\"end\":71138,\"start\":71124},{\"end\":71149,\"start\":71138},{\"end\":71162,\"start\":71149},{\"end\":71171,\"start\":71162},{\"end\":71175,\"start\":71171},{\"end\":71643,\"start\":71635},{\"end\":71653,\"start\":71643},{\"end\":71660,\"start\":71653},{\"end\":71668,\"start\":71660},{\"end\":71683,\"start\":71668},{\"end\":71693,\"start\":71683},{\"end\":71704,\"start\":71693},{\"end\":71713,\"start\":71704},{\"end\":71723,\"start\":71713},{\"end\":71735,\"start\":71723},{\"end\":71742,\"start\":71735},{\"end\":71750,\"start\":71742},{\"end\":71761,\"start\":71750},{\"end\":71771,\"start\":71761},{\"end\":71781,\"start\":71771},{\"end\":71791,\"start\":71781},{\"end\":71802,\"start\":71791},{\"end\":71810,\"start\":71802},{\"end\":71818,\"start\":71810},{\"end\":71827,\"start\":71818},{\"end\":71837,\"start\":71827},{\"end\":71846,\"start\":71837},{\"end\":71856,\"start\":71846},{\"end\":71868,\"start\":71856},{\"end\":71878,\"start\":71868},{\"end\":71888,\"start\":71878},{\"end\":71898,\"start\":71888},{\"end\":71910,\"start\":71898},{\"end\":71922,\"start\":71910},{\"end\":71934,\"start\":71922},{\"end\":71944,\"start\":71934},{\"end\":71960,\"start\":71944},{\"end\":71970,\"start\":71960},{\"end\":71980,\"start\":71970},{\"end\":71989,\"start\":71980},{\"end\":71998,\"start\":71989},{\"end\":72006,\"start\":71998},{\"end\":72020,\"start\":72006},{\"end\":72030,\"start\":72020},{\"end\":72038,\"start\":72030},{\"end\":72050,\"start\":72038},{\"end\":72059,\"start\":72050},{\"end\":72069,\"start\":72059},{\"end\":72078,\"start\":72069},{\"end\":72088,\"start\":72078},{\"end\":72097,\"start\":72088},{\"end\":72109,\"start\":72097},{\"end\":72120,\"start\":72109},{\"end\":72130,\"start\":72120},{\"end\":72142,\"start\":72130},{\"end\":72152,\"start\":72142},{\"end\":72161,\"start\":72152},{\"end\":72173,\"start\":72161},{\"end\":72183,\"start\":72173},{\"end\":72193,\"start\":72183},{\"end\":72208,\"start\":72193},{\"end\":72221,\"start\":72208},{\"end\":72232,\"start\":72221},{\"end\":73182,\"start\":73174},{\"end\":73192,\"start\":73182},{\"end\":73199,\"start\":73192},{\"end\":73207,\"start\":73199},{\"end\":73222,\"start\":73207},{\"end\":73232,\"start\":73222},{\"end\":73243,\"start\":73232},{\"end\":73252,\"start\":73243},{\"end\":73262,\"start\":73252},{\"end\":73274,\"start\":73262},{\"end\":73636,\"start\":73628},{\"end\":73642,\"start\":73636},{\"end\":73650,\"start\":73642},{\"end\":73661,\"start\":73650},{\"end\":73935,\"start\":73926},{\"end\":73942,\"start\":73935},{\"end\":73949,\"start\":73942},{\"end\":73955,\"start\":73949},{\"end\":73967,\"start\":73955},{\"end\":73973,\"start\":73967},{\"end\":73982,\"start\":73973},{\"end\":73991,\"start\":73982},{\"end\":74004,\"start\":73991},{\"end\":74019,\"start\":74004},{\"end\":74030,\"start\":74019},{\"end\":74035,\"start\":74030},{\"end\":74039,\"start\":74035},{\"end\":74307,\"start\":74294},{\"end\":74317,\"start\":74307},{\"end\":74327,\"start\":74317},{\"end\":74336,\"start\":74327},{\"end\":74346,\"start\":74336},{\"end\":74357,\"start\":74346},{\"end\":74367,\"start\":74357},{\"end\":74378,\"start\":74367},{\"end\":74388,\"start\":74378},{\"end\":74400,\"start\":74388},{\"end\":74409,\"start\":74400},{\"end\":74416,\"start\":74409},{\"end\":74433,\"start\":74416},{\"end\":74443,\"start\":74433},{\"end\":74450,\"start\":74443},{\"end\":74460,\"start\":74450},{\"end\":74467,\"start\":74460},{\"end\":74478,\"start\":74467},{\"end\":74493,\"start\":74478},{\"end\":74501,\"start\":74493},{\"end\":74507,\"start\":74501},{\"end\":74521,\"start\":74507},{\"end\":74529,\"start\":74521},{\"end\":74541,\"start\":74529},{\"end\":74551,\"start\":74541},{\"end\":74560,\"start\":74551},{\"end\":74571,\"start\":74560},{\"end\":74578,\"start\":74571},{\"end\":74586,\"start\":74578},{\"end\":74598,\"start\":74586},{\"end\":74610,\"start\":74598},{\"end\":74617,\"start\":74610},{\"end\":74632,\"start\":74617},{\"end\":74642,\"start\":74632},{\"end\":74651,\"start\":74642},{\"end\":74663,\"start\":74651},{\"end\":74672,\"start\":74663},{\"end\":74680,\"start\":74672},{\"end\":74692,\"start\":74680},{\"end\":74700,\"start\":74692},{\"end\":74707,\"start\":74700},{\"end\":74715,\"start\":74707},{\"end\":74729,\"start\":74715},{\"end\":74740,\"start\":74729},{\"end\":74749,\"start\":74740},{\"end\":74760,\"start\":74749},{\"end\":74772,\"start\":74760},{\"end\":74781,\"start\":74772},{\"end\":74793,\"start\":74781},{\"end\":74803,\"start\":74793},{\"end\":74816,\"start\":74803},{\"end\":74827,\"start\":74816},{\"end\":74836,\"start\":74827},{\"end\":74847,\"start\":74836},{\"end\":74854,\"start\":74847},{\"end\":74862,\"start\":74854},{\"end\":74870,\"start\":74862},{\"end\":74879,\"start\":74870},{\"end\":74887,\"start\":74879},{\"end\":74896,\"start\":74887},{\"end\":74907,\"start\":74896},{\"end\":74914,\"start\":74907},{\"end\":74933,\"start\":74914},{\"end\":74940,\"start\":74933},{\"end\":74948,\"start\":74940},{\"end\":74958,\"start\":74948},{\"end\":74968,\"start\":74958},{\"end\":74974,\"start\":74968},{\"end\":75961,\"start\":75952},{\"end\":75973,\"start\":75961},{\"end\":75985,\"start\":75973},{\"end\":75995,\"start\":75985},{\"end\":76005,\"start\":75995},{\"end\":76014,\"start\":76005},{\"end\":76026,\"start\":76014},{\"end\":76349,\"start\":76338},{\"end\":76359,\"start\":76349},{\"end\":76661,\"start\":76651},{\"end\":76671,\"start\":76661},{\"end\":76843,\"start\":76835},{\"end\":76855,\"start\":76843},{\"end\":76863,\"start\":76855},{\"end\":76873,\"start\":76863},{\"end\":76891,\"start\":76873},{\"end\":76897,\"start\":76891},{\"end\":76901,\"start\":76897},{\"end\":77202,\"start\":77194},{\"end\":77212,\"start\":77202},{\"end\":77222,\"start\":77212},{\"end\":77232,\"start\":77222},{\"end\":77244,\"start\":77232},{\"end\":77256,\"start\":77244},{\"end\":77267,\"start\":77256},{\"end\":77279,\"start\":77267},{\"end\":77289,\"start\":77279},{\"end\":77297,\"start\":77289},{\"end\":77304,\"start\":77297},{\"end\":77314,\"start\":77304},{\"end\":77320,\"start\":77314},{\"end\":77331,\"start\":77320},{\"end\":77343,\"start\":77331},{\"end\":77356,\"start\":77343},{\"end\":77363,\"start\":77356},{\"end\":77376,\"start\":77363},{\"end\":77385,\"start\":77376},{\"end\":77394,\"start\":77385},{\"end\":77403,\"start\":77394},{\"end\":77414,\"start\":77403},{\"end\":77424,\"start\":77414},{\"end\":77434,\"start\":77424},{\"end\":77442,\"start\":77434},{\"end\":77450,\"start\":77442},{\"end\":77462,\"start\":77450},{\"end\":77472,\"start\":77462},{\"end\":77480,\"start\":77472},{\"end\":77490,\"start\":77480},{\"end\":77499,\"start\":77490},{\"end\":77509,\"start\":77499},{\"end\":77521,\"start\":77509},{\"end\":77530,\"start\":77521},{\"end\":77539,\"start\":77530},{\"end\":77551,\"start\":77539},{\"end\":77563,\"start\":77551},{\"end\":77570,\"start\":77563},{\"end\":77578,\"start\":77570},{\"end\":77586,\"start\":77578},{\"end\":77594,\"start\":77586},{\"end\":77609,\"start\":77594},{\"end\":78306,\"start\":78298},{\"end\":78319,\"start\":78306},{\"end\":78549,\"start\":78541},{\"end\":78558,\"start\":78549},{\"end\":78569,\"start\":78558},{\"end\":78577,\"start\":78569},{\"end\":78584,\"start\":78577},{\"end\":78599,\"start\":78584},{\"end\":78608,\"start\":78599},{\"end\":78617,\"start\":78608},{\"end\":78627,\"start\":78617},{\"end\":78640,\"start\":78627},{\"end\":78980,\"start\":78970},{\"end\":78990,\"start\":78980},{\"end\":79001,\"start\":78990},{\"end\":79013,\"start\":79001},{\"end\":79020,\"start\":79013},{\"end\":79031,\"start\":79020},{\"end\":79044,\"start\":79031},{\"end\":79052,\"start\":79044},{\"end\":79059,\"start\":79052},{\"end\":79067,\"start\":79059},{\"end\":79073,\"start\":79067},{\"end\":79077,\"start\":79073},{\"end\":79450,\"start\":79438},{\"end\":79461,\"start\":79450},{\"end\":79475,\"start\":79461},{\"end\":79692,\"start\":79684},{\"end\":79699,\"start\":79692},{\"end\":79713,\"start\":79699},{\"end\":79719,\"start\":79713},{\"end\":79726,\"start\":79719},{\"end\":79734,\"start\":79726},{\"end\":79980,\"start\":79972},{\"end\":79987,\"start\":79980},{\"end\":80001,\"start\":79987},{\"end\":80007,\"start\":80001},{\"end\":80014,\"start\":80007},{\"end\":80022,\"start\":80014},{\"end\":80306,\"start\":80299},{\"end\":80315,\"start\":80306},{\"end\":80325,\"start\":80315},{\"end\":80332,\"start\":80325},{\"end\":80340,\"start\":80332},{\"end\":80350,\"start\":80340},{\"end\":80356,\"start\":80350},{\"end\":80365,\"start\":80356},{\"end\":80373,\"start\":80365},{\"end\":80651,\"start\":80644},{\"end\":80659,\"start\":80651},{\"end\":80673,\"start\":80659},{\"end\":80682,\"start\":80673},{\"end\":80689,\"start\":80682},{\"end\":80695,\"start\":80689},{\"end\":80703,\"start\":80695},{\"end\":80997,\"start\":80991},{\"end\":81008,\"start\":80997},{\"end\":81014,\"start\":81008},{\"end\":81024,\"start\":81014},{\"end\":81034,\"start\":81024},{\"end\":81044,\"start\":81034},{\"end\":81055,\"start\":81044},{\"end\":81309,\"start\":81302},{\"end\":81317,\"start\":81309},{\"end\":81323,\"start\":81317},{\"end\":81329,\"start\":81323},{\"end\":81340,\"start\":81329},{\"end\":81354,\"start\":81340},{\"end\":81361,\"start\":81354},{\"end\":81628,\"start\":81620},{\"end\":81639,\"start\":81628},{\"end\":81646,\"start\":81639},{\"end\":81653,\"start\":81646},{\"end\":81663,\"start\":81653},{\"end\":81671,\"start\":81663},{\"end\":81685,\"start\":81671},{\"end\":81697,\"start\":81685},{\"end\":81703,\"start\":81697},{\"end\":81709,\"start\":81703},{\"end\":81713,\"start\":81709}]", "bib_venue": "[{\"end\":69484,\"start\":69472},{\"end\":76468,\"start\":76422},{\"end\":69484,\"start\":69472},{\"end\":76468,\"start\":76422},{\"end\":69470,\"start\":69429},{\"end\":70295,\"start\":70292},{\"end\":70573,\"start\":70488},{\"end\":71182,\"start\":71175},{\"end\":73172,\"start\":73124},{\"end\":73626,\"start\":73525},{\"end\":73924,\"start\":73879},{\"end\":75029,\"start\":74990},{\"end\":76420,\"start\":76359},{\"end\":76717,\"start\":76687},{\"end\":76986,\"start\":76917},{\"end\":78296,\"start\":78234},{\"end\":78539,\"start\":78480},{\"end\":79096,\"start\":79091},{\"end\":79488,\"start\":79475},{\"end\":79798,\"start\":79750},{\"end\":80104,\"start\":80038},{\"end\":80437,\"start\":80389},{\"end\":80788,\"start\":80719},{\"end\":81115,\"start\":81071},{\"end\":81428,\"start\":81377},{\"end\":81794,\"start\":81729},{\"end\":69470,\"start\":69429},{\"end\":70295,\"start\":70292},{\"end\":70573,\"start\":70488},{\"end\":71182,\"start\":71175},{\"end\":73172,\"start\":73124},{\"end\":73626,\"start\":73525},{\"end\":73924,\"start\":73879},{\"end\":75029,\"start\":74990},{\"end\":76420,\"start\":76359},{\"end\":76717,\"start\":76687},{\"end\":76986,\"start\":76917},{\"end\":78296,\"start\":78234},{\"end\":78539,\"start\":78480},{\"end\":79096,\"start\":79091},{\"end\":79488,\"start\":79475},{\"end\":79798,\"start\":79750},{\"end\":80104,\"start\":80038},{\"end\":80437,\"start\":80389},{\"end\":80788,\"start\":80719},{\"end\":81115,\"start\":81071},{\"end\":81428,\"start\":81377},{\"end\":81794,\"start\":81729}]"}}}, "year": 2023, "month": 12, "day": 17}