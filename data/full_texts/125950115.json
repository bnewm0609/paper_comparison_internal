{"id": 125950115, "updated": "2023-10-01 16:14:20.067", "metadata": {"title": "Feature Fusion for Online Mutual Knowledge Distillation", "authors": "[{\"first\":\"Jangho\",\"last\":\"Kim\",\"middle\":[]},{\"first\":\"Minsung\",\"last\":\"Hyun\",\"middle\":[]},{\"first\":\"Inseop\",\"last\":\"Chung\",\"middle\":[]},{\"first\":\"Nojun\",\"last\":\"Kwak\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2019, "month": 4, "day": 19}, "abstract": "We propose a learning framework named Feature Fusion Learning (FFL) that efficiently trains a powerful classifier through a fusion module which combines the feature maps generated from parallel neural networks. Specifically, we train a number of parallel neural networks as sub-networks, then we combine the feature maps from each sub-network using a fusion module to create a more meaningful feature map. The fused feature map is passed into the fused classifier for overall classification. Unlike existing feature fusion methods, in our framework, an ensemble of sub-network classifiers transfers its knowledge to the fused classifier and then the fused classifier delivers its knowledge back to each sub-network, mutually teaching one another in an online-knowledge distillation manner. This mutually teaching system not only improves the performance of the fused classifier but also obtains performance gain in each sub-network. Moreover, our model is more beneficial because different types of network can be used for each sub-network. We have performed a variety of experiments on multiple datasets such as CIFAR-10, CIFAR-100 and ImageNet and proved that our method is more effective than other alternative methods in terms of performance of both sub-networks and the fused classifier.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1904.09058", "mag": "2938998646", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icpr/KimHCK20", "doi": "10.1109/icpr48806.2021.9412615"}}, "content": {"source": {"pdf_hash": "b50995cb56ffb0f8a72aea996a93e149baa74836", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1904.09058v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/1904.09058", "status": "GREEN"}}, "grobid": {"id": "d70b884482b3f8f829a1bf2c2cc63ba7361c9ba7", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/b50995cb56ffb0f8a72aea996a93e149baa74836.txt", "contents": "\nFeature Fusion for Online Mutual Knowledge Distillation\n\n\nJangho Kim \nSeoul National University Seoul\nKorea\n\nMinsung Hyun minsung.hyun@snu.ac.kr \nSeoul National University Seoul\nKorea\n\nInseop Chung \nSeoul National University Seoul\nKorea\n\nNojun Kwak nojunk@snu.ac.kr \nSeoul National University Seoul\nKorea\n\nFeature Fusion for Online Mutual Knowledge Distillation\n\nWe propose a learning framework named Feature Fusion Learning (FFL) that efficiently trains a powerful classifier through a fusion module which combines the feature maps generated from parallel neural networks. Specifically, we train a number of parallel neural networks as sub-networks, then we combine the feature maps from each sub-network using a fusion module to create a more meaningful feature map. The fused feature map is passed into the fused classifier for overall classification. Unlike existing feature fusion methods, in our framework, an ensemble of sub-network classifiers transfers its knowledge to the fused classifier and then the fused classifier delivers its knowledge back to each sub-network, mutually teaching one another in an online-knowledge distillation manner. This mutually teaching system not only improves the performance of the fused classifier but also obtains performance gain in each subnetwork. Moreover, our model is more beneficial because different types of network can be used for each sub-network. We have performed a variety of experiments on multiple datasets such as CIFAR-10, CIFAR-100 and ImageNet and proved that our method is more effective than other alternative methods in terms of performance of both sub-networks and the fused classifier.\n\nIntroduction\n\nDeep neural networks have shown remarkable performance on various computer vision tasks in recent years. There have been many researches on network architecture that extracts discriminative features to gain more efficient performance. In the early years, most of the works were focused on designing deeper and/or wider network to enhance the capacity of deep neural networks. ResNet [11] brought in the concept of residual learning to efficiently increase the depth of the network as well as the accuracy. On the other hand, Wide Residual Networks (WRN) [31] presented that the model can be improved by increasing the width of the network rather than increasing the depth.\n\nBesides developing network architecture, there have been attempts to get away from modifying the network architecture itself and to develop new training mechanism. The first approach is the feature fusion method that can combine different feature maps gained from multiple sub-networks. DualNet [14] coordinated two parallel subnetworks and trained them iteratively to learn complementary features, then they fused the two-stream features and passed it into the fused classifier. They showed that the ensemble of the fused classifier and the two classifiers of subnetworks outperforms an independently trained network. However, this approach only focuses on the performance of the fused classifier. The performance of the sub-networks is significantly lower than the performance of the network that is independently trained with the same architecture.\n\nAnother approach is Knowledge Transfer, which is to improve the performance of a smaller student network by transferring the knowledge of the teacher network. Knowledge Distillation [13], one of the popular methods of Knowledge Transfer, starts with training a powerful teacher model followed by encouraging the student model to mimic the teacher model's softened distribution. Besides probability distribution, some other researches have tried to distill the attention or factors extracted from the feature to the smaller model [30,17].\n\nOnline and offline methods are the two ways of distilling knowledge. Offline distillation is the conventional way of distilling the softened distribution or feature map information of pre-trained teacher model to the smaller target model. On the other hand, online distillation removes the stage of pre-training the teacher model and trains both the teacher model and the target model simultaneously. There is also another online distillation method which trains an ensemble of student models to learn collaboratively and mutually teach one another without a particular teacher model [32]. However, this method may only provide limited information to the target because it does not utilize the rich information from the teacher model for distillation. The Onthe-fly Native Ensemble (ONE) [20] is one of the online distillation methods that trains only a single multi-branch Figure 1: The overall process of our method is called a Feature Fusion Learning (FFL). The sub-networks create an ensemble classifier for training the fusion module. Then, the ensemble classifier transfers its knowledge to the fusion module. Similarly, the fusion module transfers its knowledge back to each sub-network. This online mutual knowledge distillation helps to obtain better performance gain in the fused classifier as well as the sub-networks. More details are explained in Sec. 3.2.\n\nnetwork while concurrently building a strong teacher model with gating of the branch logits to enhance the learning of a student network. This method distills the knowledge of the teacher network to the student network in one-way. It uses a gating module located on the shared layer, thus it is applicable only when the branches have the same architecture. Also, this type of logit based distillation method can not make good use of feature maps which are useful in many vision tasks.\n\nIn this work, we propose a solution for efficiently fusing the features of sub-networks. Contrary to the existing feature fusion methods, we adopted an online mutual knowledge distillation method to enhance the performance of both sub-networks and the fusion module. The overall process of our method is described in Figure 1. When the same architecture of network is employed as sub-networks, we can share the low-level layers and take a multi-branch network similar to [20]. However, when different network architectures are used as sub-networks, the sub-networks are trained in different streams analogous to [32]. Here we have two important classifiers which are the ensemble classifier, and the fused classifier. The ensemble classifier uses the ensemble logit produced from the sub-networks and the fused classifier uses the feature map generated from the fusion module. The fusion module receives feature maps from each sub-network and fuses them using depthwise convolution and pointwise convolution. The fused feature map is then forwarded to the fused classifier for class prediction. When both the ensemble classifier and the fused classifier yield logits, the model performs knowledge distillation from the ensemble classifier to the fused classifier. At the same time, another knowledge distillation is carried out from the fused classifier to each sub-network classifier. This eventually creates a loop between the sub-networks and the fusion module. The sub-networks and the fusion module are learned by mutually teaching each other via knowledge distillation. When the training is completed, the performances of the sub-networks as well as the fusion module are greatly improved due to the online mutual knowledge distillation between the sub-networks and the fusion module.\n\n\nRelated Work\n\n\nFeature Fusion\n\nFeature fusion methods have been used in many previous deep learning studies. In deep convolutional network models, different types of features are extracted from each layer [9]. From this fact, researchers found that combining the features of each layer increases the performance of the model and showed the effectiveness of this method in various computer vision tasks such as detection, semantic segmentation and gesture classification [22,10,7,4].\n\nThe researches in [21,14] applied the feature fusion in dual learning. In the bilinear CNN [21], outputs from two different networks are fused and mapped into a bilinear vector. DualNet [14] trains two parallel networks with the same structure and uses the 'SUM' operation to combine the features of those networks so as to build a fused classifier. In addition, it applies iterative training, which alternately updates the weight of the sub-networks to learn the complementary features. Our Feature Fusion Learning (FFL) has three distinct points compared to DualNet. First, DualNet is designed to work only for the same architectures of subnetworks, whereas FFL is applicable to any network architecture. Second, FFL concatenates the features of the subnetworks and forwards it to the fusion module. We intended the trainable fusion module to be more effective than simple feature fusion methods. Finally, the main difference is that DualNet is only focused on improving the performance of the fused classifier, while FFL focuses on improving the performances of both the fused classifier and the sub-networks through an online mutual knowledge distillation which will be described later.\n\n\nKnowledge Transfer\n\nKnowledge Transfer (KT) is a model compression method proposed to deliver the performance of a lager model to smaller and lighter ones [6]. It is basically composed of a teacher network and a student network, and it transfers the knowledge of the teacher network to the student network in various ways. This scheme was first applied in an offline manner [3]. After that, an online KT was developed to enhance the performance of the student network which learns without a pre-trained teacher network [32,20,27,1]. This online learning method is related to our work in this paper. Offline KT is a way of training a student network from scratch by transferring the knowledge of a pre-trained teacher network. In [2,13], the information of the teacher network is distilled to the student network through L2-norm or Kullback-Leibler divergence (KLD) loss in logit values. Consequentially the student network mimics the outputs of the teacher network. There are some other studies of offline KT which directly or indirectly pass the features of convolution layers from the teacher to the student [24,30,29,8,17,12]. Online KT trains a student network without a pre-trained model unlike the offline KT. In this method, the student network imitates a teacher network which is trained in an online manner instead of imitating a pre-trained teacher network. Deep Mutual Learning (DML) [32] suggested a method which trains student networks to exchange information mutually through the KLD loss and could achieve better performance than an original network. In this framework, each student network plays the role of a teacher network to the other student networks. One advantage of this method is that any kind of different network architectures can be flexibly applied. Codistillation [1] is similar to DML, but it forces student networks to maintain diversity longer by adding distillation loss after enough burn in steps. One-the-fly Native Ensemble (ONE) [20] method transfers knowledge using a gated logit ensemble of student networks which is trained simultaneously.\n\nOur FFL method, which will be described later, can also be categorized as an online KT method. While the aforementioned methods transfer knowledge in one-way from the teacher to the student or the students mutually transfer their knowledge to each other, FFL improves the performance of both sub-networks and the fused classifier by performing bidirectional KT. More specifically, the fused classifier created by the fusion module distills information to the sub-networks acting as a teacher, and the logit ensemble of the sub-networks working as another teacher distills information into the fused classifier. Figure 2 shows the difference between DML, ONE, DualNet and the proposed FFL method.\n\n\nProposed Method\n\nIn this section, we describe how to effectively fuse the features of sub-networks. The proposed method is called Feature Fusion Learning (FFL). Unlike the existing fusion methods, FFL is a learning method that takes care of not only the performance of the fused classifier but also the performance of the sub-networks. In the overall process, the features of a parallel sub-networks are fused through a fusion module, and then the final classification result is obtained through a fused classifier. During training, an ensemble of sub-networks distills its knowledge to the fused classifier, and the fused classifier distills its knowledge to each sub-network mutually.\n\n\nFusion Module\n\nDifferent from DualNet [14], our method does not make use of the simple sum or average operation when fusing features. Instead, we concatenate the features of the sub-networks and then perform the convolution operation through the fusion module. To reduce the number of parameters, we use a simple depthwise convolution and an 1 \u00d7 1 convolution called pointwise convolution that has been used in MobileNet [15]. We use the feature map of the last layer for fusion because it is specific to the task and has sufficient expressive power of the network. Let C 1 and C 2 are the numbers of channels of the feature map in the last layer of network 1 and 2, respectively, then the number of channels from the concatenated feature map, M , will be C 1 + C 2 . The number of output channels from the fusion module, N , can be manipulated as needed. As shown in Figure 3, we firstly perform a 3 \u00d7 3 depthwise convolution which applies a single filter per each input channel and then apply a pointwise convolution to create a linear combination of the slices of the feature map in order to combine them well.\n\nIn DualNet, there is a problem that the number of output channels of the sub-networks must be the same because the feature maps are simply averaged and added element-wise. On the other hand, in our fusion module, since the feature maps of the sub-network are concatenated, FFL can use different networks having different output channels as its subnetworks. If the resolutions of the final feature maps are different between the sub-networks, a simple convolution operation can make the spatial resolutions identical through the module which is similar to the regressor in the FitNets [24].\n\n\nFeature Fusion Learning\n\nIn terms of sub-network architectures, ONE [20] is not flexible in that it can not be applied to sub-networks with (a) DML [32] (b) ONE [20] (c) DualNet [14] (d) FFL (proposed)  different architectures because it creates a teacher by gating logits based on a shared feature map. Similarly, Dual-Net [14] should also be applied to the same sub-network architecture because it simply combines features through the channel-wise sum. To overcome this problem, we designed two types of FFL depending on the architectures of sub-networks in the training process:\n\n\u2022 Case 1: If sub-networks have the same architecture, the low-level layers of the sub-networks are shared and the high-level layers are separated into multiple branches similar to ONE [20].\n\n\u2022 Case 2: If sub-networks have different architectures, sub-networks are trained independently since subnetworks can not share the layers.\n\nIn this work, we handle the multi-class classification task. Assuming that there are m classes, the logit fowarded by the k-th network is defined as z k = {z 1 k , z 2 k , ..., z m k }. In the training process, we use softened probability for the model generalization. Given z k , the softened probability is defined as\n\u03c3 i (z k ; T ) = e z i k /T m j e z j k /T(1)\nWhen T = 1, it is the same as the original softmax. If the one-hot ground-truth is given as y = {y 1 , y 2 , .., y m }, crossentropy loss of k-th network is defined as\nL k ce = \u2212 m i=1 y (i) log(\u03c3 i (z k ; 1))(2)\nThe overall process is shown in Figure 1. For illustration, we have chosen a scenario that uses different sub-network architectures (case 2). Sub-networks create an ensemble classifier through an ensemble of logits to train the fusion module. Assuming that there are n sub-networks, then the ensemble of logits is computed as follows:\nz e = 1 n n k=1 z k(3)\nTo train the fusion module, the ensemble classifier distills its knowledge to the fused classifier. This is called ensemble knowledge distillation (EKD). The EKD loss is defined as the KL-divergence between the softened distribution of the ensemble classifier and the softened distribution of the fused classifier. If the logit in the fused classifier is denoted as z f , the EKD loss is as follows:\nL e kl = m i=1 \u03c3 i (z e ; T ) log( \u03c3 i (z e ; T ) \u03c3 i (z f ; T ) )(4)\nFeature maps from the last layer of sub-networks are concatenated and put into the fusion module. To train each sub-network, the fused classifier in the fusion module distills its knowledge to each sub-network. This is called fusion knowledge distillation (FKD). The FKD loss for distilling the softened distribution of the fused classifier into each sub-network is defined as follows:\nL f kl = n k=1 m i=1 \u03c3 i (z f ; T ) log( \u03c3 i (z f ; T ) \u03c3 i (z k ; T ) )(5)\nIn addition to the distillation loss, each sub-network and the fused classifier learns the true label through cross entropy and the total loss becomes\nL total = n k=1 L k ce + L f ce + T 2 \u00d7 (L e kl + L f kl )(6)\nIn our FFL, each sub-network and the fused classifier learns through ground-truth with cross-entropy loss. At the same time, the ensemble classifier distills its knowledge to the fused classifier with L e kl and in return, the fused classifier distills its knowledge to each sub-network. Through such mutual knowledge distillation (MKD), the fusion module generates meaningful features for classification. Since the scale of the gradient produced by the softend distribution is 1/T 2 , we multiply T 2 according to the KD recommendations [13]. Sub-networks and the fusion module in FFL are trained simultaneously.\n\nGenerally, in the training process, the number of subnetworks is set to two (n = 2). However, in some cases, FFL can increase the number of branches (case 1) or subnetworks (case 2).\n\nAfter training, our method performs classification through the fused classifier. However, if there is a constraint on the memory, as with ONE, we can remove other branches and deploy the original network in the condition that the sub-networks have the same architecture (case 1). If the sub-networks have different architectures (case 2), we can deploy the one that matches the memory as needed.\n\n\nExperiments\n\nTo verify our method, we compare FFL with various other methods on image classification datasets. In Sec. 4.1, we compare our method with DualNet [14], one of the feature fusion method which has the same purpose as our method, and show the ablation study of the proposed mutual knowledge distillation method and the fusion module. Then, in Sec. 4.2, we compare FFL with ONE [20] which is an online ensemble distillation method using the sub-networks with the same architecture. In Sec. 4.3 we also compare FFL with DML [32] which distills knowledge mutually between students with different architectures. Finally, we deal with qualitative analysis in terms of the feature map and generalization in Sec. 4.4. Dataset: We evaluate our method on several benchmark datasets which are CIFAR-10 [18], CIFAR-100 [19] and ImageNet LSVRC 2015 [25]. The CIFAR-10 dataset contains 50k training images and 10k test images with 10 classes. Each class has 6000 images. The CIFAR-100 dataset has the same number of images as CIFAR-10 dataset, 50k (train) and 10k (test), but it has 100 classes so each class is assigned only 600 images. The ImageNet dataset consists of 1.2M training images and 50K validation images with 1,000 classes. Experiment setting: In most experiments, we set the number of sub-networks to two, and T = 3. In case 1, we separate the last block of a backbone network from parameter sharing and the number of output channels N of the fusion module is designed to match the smaller channels between C 1 and C 2 . In ImageNet, we set the N as C 1 + C 2 , and separate the last 2 blocks for giving more learning capacity same as [20]. \n\n\nComparison with Feature Fusion Method\n\nIn this section, we compare DualNet and FFL in terms of feature fusion. Each model consists of two sub-networks with the same architecture. DualNet first trains the model with the iterative training that updates the sub-networks alternately, and then goes through the joint training process which updates only the sub-network classifiers and the fused classifier. On the other hand, FFL simultaneously learns two sub-networks and the fused classifier during the entire learning process. All experiments were repeated 10 times on CIFAR-10 and CIFAR-100 datasets. Fused Classifier: Table 1a represents the top-1 error rate of the fused classifier for the test set. The performance of DualNet represents the average classifier, an ensemble of the sub-networks and the fused classifier as described in the original paper. The performance of FFL is the prediction result of the fused classifier. In CIFAR-10, FFL has slightly better performance than DualNet within the error range. Overall, as the depth of the network increases, the performance gap decreases. However, for the CIFAR-100 dataset, which is a bit more difficult problem, FFL is clearly superior to DualNet. The performance difference from ResNet-56 becomes up to 2.34%p. Sub-network Classifier: Table 1b is the top-1 error rate of all the sub-network classifiers. In this case, there are two sub-network classifiers. FFL shows better performance than DualNet and the difference is larger than that of the fused classifier experiment, because DualNet is not designed to improve the performance of sub-networks. The difference of the error rate between two methods is around 2%p in CIFAR-10 whereas the difference increases up to 7.85%p in the CIFAR-100 experiment.\n\nExperiments on Table 1a show that our proposed fusion module fuses features more effectively than DualNet. We also found out that FFL even improved the performance of the sub-networks which DualNet is overlooking in the ex-  Table 1a is the performance of the fused classifiers. FFL is slightly better than DualNet in CIFAR-10 dataset and at least around 1%p better in CIFAR-100. This indicates that FFL is a more effective feature fusion method. periments of Table 1b. Furthermore, when using the same sub-network architecture as DualNet, FFL learns efficiently in terms of memory consumption because it uses a shared network, shown in Table 4. Ablation Study: In FFL, we have taken a step forward from previous researches by introducing the fusion module (FM) and the mutual knowledge distillation (MKD) which is composed of the ensemble KD (EKD) and the fusion KD (FKD). We are going to show the efficacy of our proposed methodology through an ablation study in this part. Exper- iments were repeated 10 times on the CIFAR-100 dataset with two sub-networks based on ResNet-32 architecture. The numbers in Table 2 represent the top-1 test error rate.\n\nIn the table, case A corresponds to our full FFL model, while case B is where the features are averaged like in Dual-Net instead of using our fusion module (FM). As expected, the error rates of the fused classifier and the sub-network classifier increase around 0.5%p and 0.4%p respectively. Next two rows, case C and D are the cases where we remove the effect of EKD and the FKD sequentially. Without EKD (case C), the error rates of the fused and the subnetwork classifiers increase by around 1.5%p and 1.3%p respectively, and EKD seems to have more influence on the fused one. When we additionally got rid of FKD (case D), the performance of the sub-network classifier shows a sharp decline compared to that of the fused classifier. This can be interpreted that the FKD has a significant impact on the performance of the sub-networks.\n\n\nComparison with Online ensemble Distillation\n\nSince ONE [20] can not be applied to different subnetworks, we consider case 1 which uses sub-networks having the same architecture. CIFAR DataSet: In this section, all experiments were performed on the CIFAR dataset. Only two branches were used  Table 3 shows the average performance of the two branches, and ONE-E is the performance of the gated ensemble teacher. ONE-E+ is the performance of the gated ensemble teacher with the increased parameters which has a similar number of parameters to that of FFL. FFL-S represents the average value of sub-networks and FFL indicates the performance of the fused classifier. Vanilla shows the performance of the original network only trained with cross-entropy. In the case of FFL-S, since the other branch and the fusion module are removed, the number of parameters are equal to ONE and Vanilla. Table 4 shows the number of parameters used in the experiment and the FM ratio is the rate of increase in the number of parameters by the fusion module compared to ONE-E. The table shows that FM increases the number of parameters up to 4%. In both ResNet and WRN series, ONE, ONE+, and FFL-S has better performance than the Vanilla network, shown in Table 3. Unlike DualNet, FFL improves the performance of sub-networks, so it has many advantages similar to ONE. In CIFAR-10, all three methods show similar performance improvements than Vanilla. The comparison of ONE-E and ONE-E+ shows that increasing the number of parameters for the gate module does not improve the performance. Even in the case of CIFAR-100, performance improvement due to the increase of parameter in the gate module can not be seen either. On the other hand, the performance of FFL-S and FFL has been improved by an average of around 0.24%p and 0.33%p compared with ONE and ONE-E. Branch Expansion: FFL generally learns with two branches like DualNet. Since the Fusion module is a method that concatenates the feature maps, FFL can be learned by expanding branches like ONE. In this experiment, we apply three branches for FFL to show the possibility of expanding the branches. The experiments are conducted with ResNet- Table 5: Top-1 classification error rate with 3 branches. The numbers are from 10 runs of experiments and show the best values as in [28]. \"*\" represents reported results in [20]. ResNet Table 6: Top-1 and Top-5 classification error rate on Ima-geNet. We report the average performance of two branch outputs with standard deviation as in [20].  32 and ResNet-56 in CIFAR-100. All conditions were the same as ONE. Table 5 shows the results with 3 branch similar to those of 2 branch experiments. We can confirm that the feature fusion method also improves the performance even when the number of branches are increased. ImageNet DataSet: The experiments on ImageNet with ResNet-34 also have a similar tendency to those on CI-FAR dataset. Both ONE and FFL have better performance than Vanila as shown in Table 6. ONE and FFL-S have a quite similar performance. Regarding the fused classifiers, the feature based teacher shows better performance than the logits based teacher. This indicates that our method also can be applied to a large scale image dataset.\n\n\nComparison with Mutual Learning Method\n\nIn the previous experiments, sub-networks had to have the same architecture due to the architectures of the comparing methods. In case of DML, it is advantageous to be able to train sub-networks having different architecture. In this experiment, we compare the performance on CIFAR-100 dataset with a combination of two sub-networks having different architectures (case 2). The first combination is ResNet-34 and WRN-16-2 which has a relatively low depth and the second one is the combination of ResNet-56 and WRN-40-2 that has a deeper depth. Table 7 shows that all networks of the two combinations Figure 4: We compare the Grad-CAM [26] visualizations of the fusion module and the two sub-networks with the vanilla network (ResNet-34) using ImageNet dataset.\n\nusing FFL method is better than those of DML. FFL also obtains a stronger teacher (fused classifier) and its feature maps require less than 4% additional parameters compared to the parameters used in DML. In FFL, error of the fused classifier for the first combination and the second combination are 24.23\u00b10.25 and 22.20\u00b10.21 respectively. This experiment shows that FFL method can be applied even in the case where sub-networks have different architecture.\n\n\nQualitative analysis\n\nWe aim to give insights on how our FFL method is contributing to the performance of our model by analyzing the feature map outputs. We have created heatmaps of features from four different networks which are the fusion module, the two sub-networks and an independently trained ResNet-34 network. We applied Grad-CAM [26] algorithm which is a method that visualizes the important regions where the the network has considered important to discover how our model is making use of the features. Figure 4 shows the Grad-CAM visualizations from each network with the highest probability and the corresponding class. 1-2 columns show cases which both the networks of our model and ResNet-34 predict the correct class. 3-6 columns are cases where ours get the correct answer but vanilla does not. 7-9 columns show that the feature maps of the fusion module and the sub-networks are very similar and predict the same class even when they get wrong answer. We have observed that the networks of our model detect the correct object better than ResNet-34. Even when both ResNet-34 and our three networks predict the same correct answer, ours have higher rate of confidence (First two columns of Figure 4). Also, we have discovered that the heatmaps of the sub-networks have a tendency to mimic the heatmap of the fusion module. This implies that the sub-networks are greatly influenced by the fusion module and vice versa. This is mainly due to the mutual knowledge distillation between the sub-networks and the fusion module which transfers softened probabilities that has rich information about the relative probabilities of incorrect answers.\n\n\nDiscussion\n\nApplicability for other tasks: In addition to image classification, various other vision tasks use feature maps in various ways. For example, in image detection task, Faster R-CNN learns the region proposal network (RPN) and the recognition classifier uses the feature maps in a pre-trained backbone network [23]. In the case of image segmentation, [5] uses the feature map of a pre-trained network by applying atrous convolution to extract dense features. Also, in image style transfer task, the perceptual loss uses the feature maps of a pre-trained network [16]. In this respect, creating a teacher which can generate meaningful feature maps has more applicability to other tasks than a teacher that consists of gated logits.\n\n\nConclusion\n\nIn this work, we propose a feature fusion method using online mutual knowledge distillation. Unlike existing feature fusion methods, it focuses on not only the performance of the fused classifier but also the performance of the subnetworks and can deploy sub-networks as needed. Moreover, there is no constraint on the architecture of the subnetworks. Therefore, the features of different sub-networks can be fused. The fusion module generates meaningful features by adding less than 4% of additional parameters. From various perspectives, we demonstrated the effectiveness of FFL through experiments in three datasets.\n\nFigure 2 :\n2(a) and (b) are online knowledge distillation methods which focus on the training of sub-networks. (a) uses the knowledge of students mutually for the training. (b) makes a teacher with the gating of logits for students. (c) and (d) are feature fusion methods which generate useful feature maps. Unlike (c), (d) uses online mutual knowledge distillation between the sub-networks and the fused classifier. Therefore, (d) enhances the performance of both the sub-networks and the fused classifier. Also, (a) and (d) can use sub-networks with different architectures. However, (b) and (c) are only applicable to sub-networks with the same architecture.\n\nFigure 3 :\n3The architecture of a fusion module. The depthwise convolution is operated on concatenated feature maps of sub-networks with M filters. Then, the pointwise convolution is operated with N filters.\n\n\n(Sec. 4.1): We reimplemented DualNet based on the original paper and experimented by setting FFL under the same conditions as DualNet. (Sec. 4.2): We use the same learning schedule and hyper-parameters as in ONE. (Sec. 4.3): For fair comparison, DML and FFL use the same learning schedule as used in Sec. 4.2. Other details of experiments are described in the supplementary material.\n\nTable 1 :\n1Performance comparison of two feature fusion methods, FFL and DualNet, with four different network architectures.\n\nTable 1b shows\n1bthe performance of sub-network classifiers. Due to the effect of mutual knowledge distillation, the error rate of FFL is clearly better than that of DualNet in all experiments.(a) Top-1 classification error rate of fused classifiers. DualNet outputs results from the average classifier and FFL uses fusion module for classification.CIFAR-10 \nCIFAR-100 \n(%) \nDualNet \nFFL \nDualNet \nFFL \n\nResNet-32 6.21\u00b10.20 5.78\u00b10.13 27.49\u00b10.31 25.56\u00b10.32 \nResNet-56 5.67\u00b10.12 5.26\u00b10.17 25.87\u00b10.29 23.53\u00b10.25 \nWRN-16-2 5.92\u00b10.16 5.97\u00b10.13 25.71\u00b10.20 24.74\u00b10.31 \nWRN-40-2 4.94\u00b10.10 4.6\u00b10.13 23.22\u00b10.25 21.05\u00b10.25 \n\n(b) Top-1 classification error rate of sub-network classifiers. \n\nCIFAR-10 \nCIFAR-100 \n(%) \nDualNet \nFFL \nDualNet \nFFL \n\nResNet-32 8.23\u00b10.31 6.06\u00b10.15 34.91\u00b11.23 27.06\u00b10.34 \nResNet-56 7.34\u00b10.25 5.58\u00b10.13 32.67\u00b11.14 24.85\u00b10.30 \nWRN-16-2 7.53\u00b10.20 6.09\u00b10.09 31.7\u00b11.00 25.72\u00b10.28 \nWRN-40-2 6.25\u00b10.14 4.75\u00b10.16 28.4\u00b10.61 22.06\u00b10.20 \n\n\n\nTable 2 :\n2Ablation study of FFL.All models were trained \non ResNet-32 and we evaluated the performance of each \nexperiments with top-1 error rate on the CIFAR-100 dataset. \nWe compared our proposed method (case A) to the cases \nwithout fusion module (case B), logit ensemble KD (case \nC) and fusion KD (case D). \n\nCIFAR-100 \ncase FM EKD FKD \nFused \nSub-network \n\nA \n25.56\u00b10.32 27.06\u00b10.34 \nB \n\n26.1\u00b10.36 \n27.46\u00b10.31 \nC \n\n27.03\u00b10.31 28.36\u00b10.44 \nD \n\n\n27.29\u00b10.24 31.04\u00b10.31 \n\n\n\nTable 3 :\n3Top-1 classification error rate on CIFAR-10 and \nCIFAR-100. (Mean classification error (%) of 10 runs). \n\nMethod CIFAR-10 CIFAR-100 \nvanilla \n6.93\u00b10.17 30.95\u00b10.43 \nONE \n6.24\u00b10.12 27.43\u00b10.22 \nONE+ \n6.20\u00b10.12 27.45\u00b10.30 \nResNet-32 \nFFL-S \n6.19\u00b10.12 27.03\u00b10.14 \nONE-E 6.07\u00b10.17 25.84\u00b10.27 \nONE-E+ 5.98\u00b10.09 25.92\u00b10.33 \nFFL \n5.98\u00b10.12 25.45\u00b10.28 \nvanilla \n6.20\u00b10.17 28.63\u00b10.42 \nONE \n5.62\u00b10.13 25.42\u00b10.17 \nONE+ \n5.69\u00b10.17 25.57\u00b10.33 \nResNet-56 \nFFL-S \n5.57\u00b10.17 25.22\u00b10.20 \nONE-E 5.37\u00b10.13 24.31\u00b10.13 \nONE-E+ 5.40\u00b10.17 24.36\u00b10.35 \nFFL \n5.35\u00b10.14 24.04\u00b10.28 \nvanilla \n6.45\u00b10.11 28.79\u00b10.29 \nONE \n6.24\u00b10.16 26.05\u00b10.28 \nONE+ \n6.30\u00b10.06 26.23\u00b10.24 \nWRN-16-2 \nFFL-S \n6.21\u00b10.12 25.83\u00b10.31 \nONE-E 6.16\u00b10.20 25.07\u00b10.30 \nONE-E+ 6.23\u00b10.06 25.23\u00b10.23 \nFFL \n6.14\u00b10.11 24.70\u00b10.33 \nvanilla \n5.30\u00b10.15 25.65\u00b10.31 \nONE \n4.94\u00b10.13 22.37\u00b10.17 \nONE+ \n4.89\u00b10.19 22.34\u00b10.18 \nWRN-40-2 \nFFL-S \n4.83\u00b10.11 22.23\u00b10.28 \nONE-E 4.82\u00b10.13 21.62\u00b10.25 \nONE-E+ 4.75\u00b10.18 21.64\u00b10.14 \nFFL \n4.74\u00b10.11 21.35\u00b10.40 \n\n\n\nTable 4 :\n4The number of parameters in Millions for each method with CIFAR-100. FM Ratio shows the relative increase in the number of parameters in FFL compared to that of ONE-E.Method \nNet Types \nResNet-32 ResNet-56 WRN-16-2 WRN-40-2 \n\nVanilla \n0.47M \n0.86M \n0.70M \n2.26M \nDualNet \n0.97M \n1.75M \n1.45M \n4.55M \nONE-E \n0.83M \n1.52M \n1.24M \n3.98M \nFFL \n0.85M \n1.54M \n1.29M \n4.03M \nFM Ratio \n2.4% \n1.3% \n4.0% \n1.3% \nONE-E+ \n0.85M \n1.54M \n1.32M \n4.05M \n\nto compare the performances of ONE and FFL. For FFL, \nfusion module is needed to combine features, while ONE \nneeds a gate module. Since the fusion module requires ad-\nditional parameters than the gate module, we experimented \nwith the same number of parameters by stacking the resid-\nual blocks in front of the gate module for fairness. ONE \nin the \n\n\nONE-E 24.75 (25.19\u00b10.20) {24.63*} 23.27 (23.59\u00b10.-32 \nResNet-56 \n\nONE \n26.64 (26.94\u00b10.21) {26.61*} 24.63 (25.10\u00b10.29) \nFFL-S \n26.3 (26.66\u00b10.21) \n24.51 (24.85\u00b10.31) \n24) \nFFL \n24.31 (24.82\u00b10.33) \n23.20 (23.43\u00b10.19) \n\n\n\nTable 7 :\n7Top-1 classification error rate on CIFAR-100. (Mean classification error (%) of 10 runs). ResNet-32 WRN-16-2 28.31\u00b10.28 26.45\u00b10.30 27.06\u00b10.26 25.93\u00b10.30 ResNet-56 WRN-40-2 26.75\u00b10.21 23.33\u00b10.27 26.23\u00b10.30 23.06\u00b10.43Net Types \nDML \nFFL \nNet 1 \nNet 2 \nNet 1 \nNet 2 \nNet 1 \nNet 2 \n\n\n\nLarge scale distributed neural network training through online distillation. R Anil, G Pereyra, A Passos, R Ormandi, G E Dahl, G E Hinton, arXiv:1804.03235arXiv preprintR. Anil, G. Pereyra, A. Passos, R. Ormandi, G. E. Dahl, and G. E. Hinton. Large scale distributed neural net- work training through online distillation. arXiv preprint arXiv:1804.03235, 2018. 3\n\nDo deep nets really need to be deep?. J Ba, R Caruana, Advances in neural information processing systems. J. Ba and R. Caruana. Do deep nets really need to be deep? In Advances in neural information processing systems, pages 2654-2662, 2014. 3\n\nModel compression. C Bucilu\u01ce, R Caruana, A Niculescu-Mizil, Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining. the 12th ACM SIGKDD international conference on Knowledge discovery and data miningACMC. Bucilu\u01ce, R. Caruana, and A. Niculescu-Mizil. Model compression. In Proceedings of the 12th ACM SIGKDD international conference on Knowledge discovery and data mining, pages 535-541. ACM, 2006. 3\n\nMulti-level factorisation net for person re-identification. X Chang, T M Hospedales, T Xiang, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionX. Chang, T. M. Hospedales, and T. Xiang. Multi-level fac- torisation net for person re-identification. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 2109-2118, 2018. 2\n\nRethinking atrous convolution for semantic image segmentation. L.-C Chen, G Papandreou, F Schroff, H Adam, arXiv:1706.05587arXiv preprintL.-C. Chen, G. Papandreou, F. Schroff, and H. Adam. Re- thinking atrous convolution for semantic image segmenta- tion. arXiv preprint arXiv:1706.05587, 2017. 8\n\nA survey of model compression and acceleration for deep neural networks. Y Cheng, D Wang, P Zhou, T Zhang, arXiv:1710.09282arXiv preprintY. Cheng, D. Wang, P. Zhou, and T. Zhang. A survey of model compression and acceleration for deep neural net- works. arXiv preprint arXiv:1710.09282, 2017. 3\n\nMulti-level contextual rnns with attention model for scene labeling. H Fan, X Mei, D Prokhorov, H Ling, IEEE Transactions on Intelligent Transportation Systems. 1911H. Fan, X. Mei, D. Prokhorov, and H. Ling. Multi-level contextual rnns with attention model for scene labeling. IEEE Transactions on Intelligent Transportation Systems, 19(11):3475-3485, Nov 2018. 2\n\nT Furlanello, Z C Lipton, M Tschannen, L Itti, A Anandkumar, arXiv:1805.04770Born again neural networks. arXiv preprintT. Furlanello, Z. C. Lipton, M. Tschannen, L. Itti, and A. Anandkumar. Born again neural networks. arXiv preprint arXiv:1805.04770, 2018. 3\n\nDeep learning. I Goodfellow, Y Bengio, A Courville, MIT pressI. Goodfellow, Y. Bengio, and A. Courville. Deep learning. MIT press, 2016. 2\n\nHypercolumns for object segmentation and fine-grained localization. B Hariharan, P Arbelaez, R Girshick, J Malik, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). B. Hariharan, P. Arbelaez, R. Girshick, and J. Malik. Hyper- columns for object segmentation and fine-grained localiza- tion. 2015 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), Jun 2015. 2\n\nDeep residual learning for image recognition. K He, X Zhang, S Ren, J Sun, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionK. He, X. Zhang, S. Ren, and J. Sun. Deep residual learn- ing for image recognition. In Proceedings of the IEEE con- ference on computer vision and pattern recognition, pages 770-778, 2016. 1\n\nKnowledge transfer via distillation of activation boundaries formed by hidden neurons. B Heo, M Lee, S Yun, J Y Choi, arXiv:1811.03233arXiv preprintB. Heo, M. Lee, S. Yun, and J. Y. Choi. Knowledge trans- fer via distillation of activation boundaries formed by hidden neurons. arXiv preprint arXiv:1811.03233, 2018. 3\n\nG Hinton, O Vinyals, J Dean, arXiv:1503.02531Distilling the knowledge in a neural network. 15arXiv preprintG. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge in a neural network. arXiv preprint arXiv:1503.02531, 2015. 1, 3, 5\n\nDualnet: Learn complementary features for image recognition. S Hou, X Liu, Z Wang, 2017 IEEE International Conference on Computer Vision (ICCV). S. Hou, X. Liu, and Z. Wang. Dualnet: Learn complementary features for image recognition. In 2017 IEEE International Conference on Computer Vision (ICCV), pages 502-510, Oct 2017. 1, 2, 3, 4, 5\n\nA G Howard, M Zhu, B Chen, D Kalenichenko, W Wang, T Weyand, M Andreetto, H Adam, arXiv:1704.04861Mobilenets: Efficient convolutional neural networks for mobile vision applications. arXiv preprintA. G. Howard, M. Zhu, B. Chen, D. Kalenichenko, W. Wang, T. Weyand, M. Andreetto, and H. Adam. Mobilenets: Effi- cient convolutional neural networks for mobile vision appli- cations. arXiv preprint arXiv:1704.04861, 2017. 3\n\nPerceptual losses for real-time style transfer and super-resolution. J Johnson, A Alahi, L Fei-Fei, European conference on computer vision. SpringerJ. Johnson, A. Alahi, and L. Fei-Fei. Perceptual losses for real-time style transfer and super-resolution. In European conference on computer vision, pages 694-711. Springer, 2016. 8\n\nParaphrasing complex network: Network compression via factor transfer. J Kim, S Park, N Kwak, Advances in Neural Information Processing Systems. 13J. Kim, S. Park, and N. Kwak. Paraphrasing complex net- work: Network compression via factor transfer. In Ad- vances in Neural Information Processing Systems, pages 2765-2774, 2018. 1, 3\n\nCifar-10 (canadian institute for advanced research. A Krizhevsky, V Nair, G Hinton, A. Krizhevsky, V. Nair, and G. Hinton. Cifar-10 (canadian institute for advanced research). 5\n\nCifar-100 (canadian institute for advanced research. A Krizhevsky, V Nair, G Hinton, A. Krizhevsky, V. Nair, and G. Hinton. Cifar-100 (canadian institute for advanced research). 5\n\nKnowledge distillation by onthe-fly native ensemble. X Lan, X Zhu, S Gong, Advances in Neural Information Processing Systems. 67X. Lan, X. Zhu, and S. Gong. Knowledge distillation by on- the-fly native ensemble. In Advances in Neural Information Processing Systems, 2018. 1, 2, 3, 4, 5, 6, 7\n\nBilinear cnn models for fine-grained visual recognition. T.-Y Lin, A Roychowdhury, S Maji, Proceedings of the IEEE international conference on computer vision. the IEEE international conference on computer visionT.-Y. Lin, A. RoyChowdhury, and S. Maji. Bilinear cnn mod- els for fine-grained visual recognition. In Proceedings of the IEEE international conference on computer vision, pages 1449-1457, 2015. 2\n\nMultiscale deep learning for gesture detection and localization. N Neverova, C Wolf, G W Taylor, F Nebout, Computer Vision -ECCV 2014 Workshops. L. Agapito, M. M. Bronstein, and C. RotherN. Neverova, C. Wolf, G. W. Taylor, and F. Nebout. Multi- scale deep learning for gesture detection and localization. In L. Agapito, M. M. Bronstein, and C. Rother, editors, Computer Vision -ECCV 2014 Workshops, pages 474-490.\n\nFaster r-cnn: Towards real-time object detection with region proposal networks. S Ren, K He, R Girshick, J Sun, Advances in neural information processing systems. S. Ren, K. He, R. Girshick, and J. Sun. Faster r-cnn: Towards real-time object detection with region proposal networks. In Advances in neural information processing systems, pages 91-99, 2015. 8\n\nA Romero, N Ballas, S E Kahou, A Chassang, C Gatta, Y Bengio, arXiv:1412.6550Fitnets: Hints for thin deep nets. arXiv preprintA. Romero, N. Ballas, S. E. Kahou, A. Chassang, C. Gatta, and Y. Bengio. Fitnets: Hints for thin deep nets. arXiv preprint arXiv:1412.6550, 2014. 3\n\nImageNet Large Scale Visual Recognition Challenge. O Russakovsky, J Deng, H Su, J Krause, S Satheesh, S Ma, Z Huang, A Karpathy, A Khosla, M Bernstein, A C Berg, L Fei-Fei, International Journal of Computer Vision (IJCV). 1153O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein, A. C. Berg, and L. Fei-Fei. ImageNet Large Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV), 115(3):211-252, 2015. 5\n\nGrad-cam: Visual explanations from deep networks via gradient-based localization. R R Selvaraju, M Cogswell, A Das, R Vedantam, D Parikh, D Batra, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionR. R. Selvaraju, M. Cogswell, A. Das, R. Vedantam, D. Parikh, and D. Batra. Grad-cam: Visual explanations from deep networks via gradient-based localization. In Proceed- ings of the IEEE International Conference on Computer Vi- sion, pages 618-626, 2017. 8\n\nCollaborative learning for deep neural networks. G Song, W Chai, Advances in Neural Information Processing Systems. G. Song and W. Chai. Collaborative learning for deep neural networks. In Advances in Neural Information Processing Systems, pages 1837-1846, 2018. 3\n\nTraining very deep networks. R K Srivastava, K Greff, J Schmidhuber, Advances in neural information processing systems. R. K. Srivastava, K. Greff, and J. Schmidhuber. Training very deep networks. In Advances in neural information pro- cessing systems, pages 2377-2385, 2015. 7\n\nA gift from knowledge distillation: Fast optimization, network minimization and transfer learning. J Yim, D Joo, J Bae, J Kim, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionJ. Yim, D. Joo, J. Bae, and J. Kim. A gift from knowl- edge distillation: Fast optimization, network minimization and transfer learning. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 4133- 4141, 2017. 3\n\nPaying more attention to attention: Improving the performance of convolutional neural networks via attention transfer. S Zagoruyko, N Komodakis, arXiv:1612.0392813arXiv preprintS. Zagoruyko and N. Komodakis. Paying more atten- tion to attention: Improving the performance of convolu- tional neural networks via attention transfer. arXiv preprint arXiv:1612.03928, 2016. 1, 3\n\nS Zagoruyko, N Komodakis, arXiv:1605.07146Wide residual networks. arXiv preprintS. Zagoruyko and N. Komodakis. Wide residual networks. arXiv preprint arXiv:1605.07146, 2016. 1\n\nDeep mutual learning. Y Zhang, T Xiang, T M Hospedales, H Lu, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionY. Zhang, T. Xiang, T. M. Hospedales, and H. Lu. Deep mutual learning. In Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, pages 4320- 4328, 2018. 1, 2, 3, 4, 5\n", "annotations": {"author": "[{\"end\":109,\"start\":59},{\"end\":185,\"start\":110},{\"end\":238,\"start\":186},{\"end\":306,\"start\":239}]", "publisher": null, "author_last_name": "[{\"end\":69,\"start\":66},{\"end\":122,\"start\":118},{\"end\":198,\"start\":193},{\"end\":249,\"start\":245}]", "author_first_name": "[{\"end\":65,\"start\":59},{\"end\":117,\"start\":110},{\"end\":192,\"start\":186},{\"end\":244,\"start\":239}]", "author_affiliation": "[{\"end\":108,\"start\":71},{\"end\":184,\"start\":147},{\"end\":237,\"start\":200},{\"end\":305,\"start\":268}]", "title": "[{\"end\":56,\"start\":1},{\"end\":362,\"start\":307}]", "venue": null, "abstract": "[{\"end\":1655,\"start\":364}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b10\"},\"end\":2058,\"start\":2054},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":2229,\"start\":2225},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":2644,\"start\":2640},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3384,\"start\":3380},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":3731,\"start\":3727},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":3734,\"start\":3731},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":4325,\"start\":4321},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":4529,\"start\":4525},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":6069,\"start\":6065},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":6210,\"start\":6206},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7595,\"start\":7592},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7861,\"start\":7857},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7864,\"start\":7861},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":7866,\"start\":7864},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7868,\"start\":7866},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":7893,\"start\":7889},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":7896,\"start\":7893},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":7966,\"start\":7962},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":8061,\"start\":8057},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":9222,\"start\":9219},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":9441,\"start\":9438},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9587,\"start\":9583},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":9590,\"start\":9587},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":9593,\"start\":9590},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9595,\"start\":9593},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9796,\"start\":9793},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":9799,\"start\":9796},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10178,\"start\":10174},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":10181,\"start\":10178},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":10184,\"start\":10181},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":10186,\"start\":10184},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":10189,\"start\":10186},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":10192,\"start\":10189},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10463,\"start\":10459},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":10861,\"start\":10858},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":11035,\"start\":11031},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":12575,\"start\":12571},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":12958,\"start\":12954},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":14236,\"start\":14232},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14312,\"start\":14308},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":14392,\"start\":14388},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14405,\"start\":14401},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":14422,\"start\":14418},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":14568,\"start\":14564},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":15011,\"start\":15007},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":17778,\"start\":17774},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":18596,\"start\":18592},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":18824,\"start\":18820},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":18969,\"start\":18965},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":19239,\"start\":19235},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":19255,\"start\":19251},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":19284,\"start\":19280},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":20084,\"start\":20080},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":23907,\"start\":23903},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":26165,\"start\":26161},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":26206,\"start\":26202},{\"end\":26214,\"start\":26208},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":26370,\"start\":26366},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":27765,\"start\":27761},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":28691,\"start\":28687},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":30331,\"start\":30327},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":30371,\"start\":30368},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":30583,\"start\":30579}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32044,\"start\":31382},{\"attributes\":{\"id\":\"fig_1\"},\"end\":32253,\"start\":32045},{\"attributes\":{\"id\":\"fig_2\"},\"end\":32639,\"start\":32254},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":32765,\"start\":32640},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33711,\"start\":32766},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":34186,\"start\":33712},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":35171,\"start\":34187},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":35973,\"start\":35172},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":36192,\"start\":35974},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":36484,\"start\":36193}]", "paragraph": "[{\"end\":2343,\"start\":1671},{\"end\":3196,\"start\":2345},{\"end\":3735,\"start\":3198},{\"end\":5106,\"start\":3737},{\"end\":5592,\"start\":5108},{\"end\":7384,\"start\":5594},{\"end\":7869,\"start\":7418},{\"end\":9061,\"start\":7871},{\"end\":11144,\"start\":9084},{\"end\":11841,\"start\":11146},{\"end\":12530,\"start\":11861},{\"end\":13646,\"start\":12548},{\"end\":14237,\"start\":13648},{\"end\":14821,\"start\":14265},{\"end\":15012,\"start\":14823},{\"end\":15152,\"start\":15014},{\"end\":15473,\"start\":15154},{\"end\":15687,\"start\":15520},{\"end\":16067,\"start\":15733},{\"end\":16490,\"start\":16091},{\"end\":16946,\"start\":16561},{\"end\":17173,\"start\":17023},{\"end\":17849,\"start\":17236},{\"end\":18033,\"start\":17851},{\"end\":18430,\"start\":18035},{\"end\":20086,\"start\":18446},{\"end\":21851,\"start\":20128},{\"end\":23005,\"start\":21853},{\"end\":23844,\"start\":23007},{\"end\":27084,\"start\":23893},{\"end\":27887,\"start\":27127},{\"end\":28346,\"start\":27889},{\"end\":30004,\"start\":28371},{\"end\":30747,\"start\":30019},{\"end\":31381,\"start\":30762}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":15519,\"start\":15474},{\"attributes\":{\"id\":\"formula_1\"},\"end\":15732,\"start\":15688},{\"attributes\":{\"id\":\"formula_2\"},\"end\":16090,\"start\":16068},{\"attributes\":{\"id\":\"formula_3\"},\"end\":16560,\"start\":16491},{\"attributes\":{\"id\":\"formula_4\"},\"end\":17022,\"start\":16947},{\"attributes\":{\"id\":\"formula_5\"},\"end\":17235,\"start\":17174}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":20716,\"start\":20708},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":21391,\"start\":21383},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":21876,\"start\":21868},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":22086,\"start\":22078},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":22321,\"start\":22313},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":22497,\"start\":22490},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":22968,\"start\":22961},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":24147,\"start\":24140},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":24741,\"start\":24734},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":25091,\"start\":25084},{\"end\":26035,\"start\":26028},{\"end\":26222,\"start\":26215},{\"end\":26448,\"start\":26441},{\"end\":26837,\"start\":26830},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":27678,\"start\":27671}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1669,\"start\":1657},{\"attributes\":{\"n\":\"2.\"},\"end\":7399,\"start\":7387},{\"attributes\":{\"n\":\"2.1.\"},\"end\":7416,\"start\":7402},{\"attributes\":{\"n\":\"2.2.\"},\"end\":9082,\"start\":9064},{\"attributes\":{\"n\":\"3.\"},\"end\":11859,\"start\":11844},{\"attributes\":{\"n\":\"3.1.\"},\"end\":12546,\"start\":12533},{\"attributes\":{\"n\":\"3.2.\"},\"end\":14263,\"start\":14240},{\"attributes\":{\"n\":\"4.\"},\"end\":18444,\"start\":18433},{\"attributes\":{\"n\":\"4.1.\"},\"end\":20126,\"start\":20089},{\"attributes\":{\"n\":\"4.2.\"},\"end\":23891,\"start\":23847},{\"attributes\":{\"n\":\"4.3.\"},\"end\":27125,\"start\":27087},{\"attributes\":{\"n\":\"4.4.\"},\"end\":28369,\"start\":28349},{\"attributes\":{\"n\":\"5.\"},\"end\":30017,\"start\":30007},{\"attributes\":{\"n\":\"6.\"},\"end\":30760,\"start\":30750},{\"end\":31393,\"start\":31383},{\"end\":32056,\"start\":32046},{\"end\":32650,\"start\":32641},{\"end\":32781,\"start\":32767},{\"end\":33722,\"start\":33713},{\"end\":34197,\"start\":34188},{\"end\":35182,\"start\":35173},{\"end\":36203,\"start\":36194}]", "table": "[{\"end\":33711,\"start\":33116},{\"end\":34186,\"start\":33746},{\"end\":35171,\"start\":34199},{\"end\":35973,\"start\":35351},{\"end\":36192,\"start\":36025},{\"end\":36484,\"start\":36420}]", "figure_caption": "[{\"end\":32044,\"start\":31395},{\"end\":32253,\"start\":32058},{\"end\":32639,\"start\":32256},{\"end\":32765,\"start\":32652},{\"end\":33116,\"start\":32784},{\"end\":33746,\"start\":33724},{\"end\":35351,\"start\":35184},{\"end\":36025,\"start\":35976},{\"end\":36420,\"start\":36205}]", "figure_ref": "[{\"end\":4619,\"start\":4611},{\"end\":5919,\"start\":5911},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11765,\"start\":11757},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13409,\"start\":13401},{\"end\":15773,\"start\":15765},{\"end\":27735,\"start\":27727},{\"end\":28870,\"start\":28862},{\"end\":29562,\"start\":29554}]", "bib_author_first_name": "[{\"end\":36564,\"start\":36563},{\"end\":36572,\"start\":36571},{\"end\":36583,\"start\":36582},{\"end\":36593,\"start\":36592},{\"end\":36604,\"start\":36603},{\"end\":36606,\"start\":36605},{\"end\":36614,\"start\":36613},{\"end\":36616,\"start\":36615},{\"end\":36889,\"start\":36888},{\"end\":36895,\"start\":36894},{\"end\":37115,\"start\":37114},{\"end\":37126,\"start\":37125},{\"end\":37137,\"start\":37136},{\"end\":37601,\"start\":37600},{\"end\":37610,\"start\":37609},{\"end\":37612,\"start\":37611},{\"end\":37626,\"start\":37625},{\"end\":38054,\"start\":38050},{\"end\":38062,\"start\":38061},{\"end\":38076,\"start\":38075},{\"end\":38087,\"start\":38086},{\"end\":38359,\"start\":38358},{\"end\":38368,\"start\":38367},{\"end\":38376,\"start\":38375},{\"end\":38384,\"start\":38383},{\"end\":38651,\"start\":38650},{\"end\":38658,\"start\":38657},{\"end\":38665,\"start\":38664},{\"end\":38678,\"start\":38677},{\"end\":38947,\"start\":38946},{\"end\":38961,\"start\":38960},{\"end\":38963,\"start\":38962},{\"end\":38973,\"start\":38972},{\"end\":38986,\"start\":38985},{\"end\":38994,\"start\":38993},{\"end\":39222,\"start\":39221},{\"end\":39236,\"start\":39235},{\"end\":39246,\"start\":39245},{\"end\":39415,\"start\":39414},{\"end\":39428,\"start\":39427},{\"end\":39440,\"start\":39439},{\"end\":39452,\"start\":39451},{\"end\":39785,\"start\":39784},{\"end\":39791,\"start\":39790},{\"end\":39800,\"start\":39799},{\"end\":39807,\"start\":39806},{\"end\":40235,\"start\":40234},{\"end\":40242,\"start\":40241},{\"end\":40249,\"start\":40248},{\"end\":40256,\"start\":40255},{\"end\":40258,\"start\":40257},{\"end\":40467,\"start\":40466},{\"end\":40477,\"start\":40476},{\"end\":40488,\"start\":40487},{\"end\":40765,\"start\":40764},{\"end\":40772,\"start\":40771},{\"end\":40779,\"start\":40778},{\"end\":41044,\"start\":41043},{\"end\":41046,\"start\":41045},{\"end\":41056,\"start\":41055},{\"end\":41063,\"start\":41062},{\"end\":41071,\"start\":41070},{\"end\":41087,\"start\":41086},{\"end\":41095,\"start\":41094},{\"end\":41105,\"start\":41104},{\"end\":41118,\"start\":41117},{\"end\":41534,\"start\":41533},{\"end\":41545,\"start\":41544},{\"end\":41554,\"start\":41553},{\"end\":41868,\"start\":41867},{\"end\":41875,\"start\":41874},{\"end\":41883,\"start\":41882},{\"end\":42184,\"start\":42183},{\"end\":42198,\"start\":42197},{\"end\":42206,\"start\":42205},{\"end\":42364,\"start\":42363},{\"end\":42378,\"start\":42377},{\"end\":42386,\"start\":42385},{\"end\":42545,\"start\":42544},{\"end\":42552,\"start\":42551},{\"end\":42559,\"start\":42558},{\"end\":42845,\"start\":42841},{\"end\":42852,\"start\":42851},{\"end\":42868,\"start\":42867},{\"end\":43260,\"start\":43259},{\"end\":43272,\"start\":43271},{\"end\":43280,\"start\":43279},{\"end\":43282,\"start\":43281},{\"end\":43292,\"start\":43291},{\"end\":43690,\"start\":43689},{\"end\":43697,\"start\":43696},{\"end\":43703,\"start\":43702},{\"end\":43715,\"start\":43714},{\"end\":43969,\"start\":43968},{\"end\":43979,\"start\":43978},{\"end\":43989,\"start\":43988},{\"end\":43991,\"start\":43990},{\"end\":44000,\"start\":43999},{\"end\":44012,\"start\":44011},{\"end\":44021,\"start\":44020},{\"end\":44295,\"start\":44294},{\"end\":44310,\"start\":44309},{\"end\":44318,\"start\":44317},{\"end\":44324,\"start\":44323},{\"end\":44334,\"start\":44333},{\"end\":44346,\"start\":44345},{\"end\":44352,\"start\":44351},{\"end\":44361,\"start\":44360},{\"end\":44373,\"start\":44372},{\"end\":44383,\"start\":44382},{\"end\":44396,\"start\":44395},{\"end\":44398,\"start\":44397},{\"end\":44406,\"start\":44405},{\"end\":44816,\"start\":44815},{\"end\":44818,\"start\":44817},{\"end\":44831,\"start\":44830},{\"end\":44843,\"start\":44842},{\"end\":44850,\"start\":44849},{\"end\":44862,\"start\":44861},{\"end\":44872,\"start\":44871},{\"end\":45309,\"start\":45308},{\"end\":45317,\"start\":45316},{\"end\":45555,\"start\":45554},{\"end\":45557,\"start\":45556},{\"end\":45571,\"start\":45570},{\"end\":45580,\"start\":45579},{\"end\":45904,\"start\":45903},{\"end\":45911,\"start\":45910},{\"end\":45918,\"start\":45917},{\"end\":45925,\"start\":45924},{\"end\":46438,\"start\":46437},{\"end\":46451,\"start\":46450},{\"end\":46695,\"start\":46694},{\"end\":46708,\"start\":46707},{\"end\":46894,\"start\":46893},{\"end\":46903,\"start\":46902},{\"end\":46912,\"start\":46911},{\"end\":46914,\"start\":46913},{\"end\":46928,\"start\":46927}]", "bib_author_last_name": "[{\"end\":36569,\"start\":36565},{\"end\":36580,\"start\":36573},{\"end\":36590,\"start\":36584},{\"end\":36601,\"start\":36594},{\"end\":36611,\"start\":36607},{\"end\":36623,\"start\":36617},{\"end\":36892,\"start\":36890},{\"end\":36903,\"start\":36896},{\"end\":37123,\"start\":37116},{\"end\":37134,\"start\":37127},{\"end\":37153,\"start\":37138},{\"end\":37607,\"start\":37602},{\"end\":37623,\"start\":37613},{\"end\":37632,\"start\":37627},{\"end\":38059,\"start\":38055},{\"end\":38073,\"start\":38063},{\"end\":38084,\"start\":38077},{\"end\":38092,\"start\":38088},{\"end\":38365,\"start\":38360},{\"end\":38373,\"start\":38369},{\"end\":38381,\"start\":38377},{\"end\":38390,\"start\":38385},{\"end\":38655,\"start\":38652},{\"end\":38662,\"start\":38659},{\"end\":38675,\"start\":38666},{\"end\":38683,\"start\":38679},{\"end\":38958,\"start\":38948},{\"end\":38970,\"start\":38964},{\"end\":38983,\"start\":38974},{\"end\":38991,\"start\":38987},{\"end\":39005,\"start\":38995},{\"end\":39233,\"start\":39223},{\"end\":39243,\"start\":39237},{\"end\":39256,\"start\":39247},{\"end\":39425,\"start\":39416},{\"end\":39437,\"start\":39429},{\"end\":39449,\"start\":39441},{\"end\":39458,\"start\":39453},{\"end\":39788,\"start\":39786},{\"end\":39797,\"start\":39792},{\"end\":39804,\"start\":39801},{\"end\":39811,\"start\":39808},{\"end\":40239,\"start\":40236},{\"end\":40246,\"start\":40243},{\"end\":40253,\"start\":40250},{\"end\":40263,\"start\":40259},{\"end\":40474,\"start\":40468},{\"end\":40485,\"start\":40478},{\"end\":40493,\"start\":40489},{\"end\":40769,\"start\":40766},{\"end\":40776,\"start\":40773},{\"end\":40784,\"start\":40780},{\"end\":41053,\"start\":41047},{\"end\":41060,\"start\":41057},{\"end\":41068,\"start\":41064},{\"end\":41084,\"start\":41072},{\"end\":41092,\"start\":41088},{\"end\":41102,\"start\":41096},{\"end\":41115,\"start\":41106},{\"end\":41123,\"start\":41119},{\"end\":41542,\"start\":41535},{\"end\":41551,\"start\":41546},{\"end\":41562,\"start\":41555},{\"end\":41872,\"start\":41869},{\"end\":41880,\"start\":41876},{\"end\":41888,\"start\":41884},{\"end\":42195,\"start\":42185},{\"end\":42203,\"start\":42199},{\"end\":42213,\"start\":42207},{\"end\":42375,\"start\":42365},{\"end\":42383,\"start\":42379},{\"end\":42393,\"start\":42387},{\"end\":42549,\"start\":42546},{\"end\":42556,\"start\":42553},{\"end\":42564,\"start\":42560},{\"end\":42849,\"start\":42846},{\"end\":42865,\"start\":42853},{\"end\":42873,\"start\":42869},{\"end\":43269,\"start\":43261},{\"end\":43277,\"start\":43273},{\"end\":43289,\"start\":43283},{\"end\":43299,\"start\":43293},{\"end\":43694,\"start\":43691},{\"end\":43700,\"start\":43698},{\"end\":43712,\"start\":43704},{\"end\":43719,\"start\":43716},{\"end\":43976,\"start\":43970},{\"end\":43986,\"start\":43980},{\"end\":43997,\"start\":43992},{\"end\":44009,\"start\":44001},{\"end\":44018,\"start\":44013},{\"end\":44028,\"start\":44022},{\"end\":44307,\"start\":44296},{\"end\":44315,\"start\":44311},{\"end\":44321,\"start\":44319},{\"end\":44331,\"start\":44325},{\"end\":44343,\"start\":44335},{\"end\":44349,\"start\":44347},{\"end\":44358,\"start\":44353},{\"end\":44370,\"start\":44362},{\"end\":44380,\"start\":44374},{\"end\":44393,\"start\":44384},{\"end\":44403,\"start\":44399},{\"end\":44414,\"start\":44407},{\"end\":44828,\"start\":44819},{\"end\":44840,\"start\":44832},{\"end\":44847,\"start\":44844},{\"end\":44859,\"start\":44851},{\"end\":44869,\"start\":44863},{\"end\":44878,\"start\":44873},{\"end\":45314,\"start\":45310},{\"end\":45322,\"start\":45318},{\"end\":45568,\"start\":45558},{\"end\":45577,\"start\":45572},{\"end\":45592,\"start\":45581},{\"end\":45908,\"start\":45905},{\"end\":45915,\"start\":45912},{\"end\":45922,\"start\":45919},{\"end\":45929,\"start\":45926},{\"end\":46448,\"start\":46439},{\"end\":46461,\"start\":46452},{\"end\":46705,\"start\":46696},{\"end\":46718,\"start\":46709},{\"end\":46900,\"start\":46895},{\"end\":46909,\"start\":46904},{\"end\":46925,\"start\":46915},{\"end\":46931,\"start\":46929}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:1804.03235\",\"id\":\"b0\"},\"end\":36848,\"start\":36486},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":11536917},\"end\":37093,\"start\":36850},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":11253972},\"end\":37538,\"start\":37095},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":4386388},\"end\":37985,\"start\":37540},{\"attributes\":{\"doi\":\"arXiv:1706.05587\",\"id\":\"b4\"},\"end\":38283,\"start\":37987},{\"attributes\":{\"doi\":\"arXiv:1710.09282\",\"id\":\"b5\"},\"end\":38579,\"start\":38285},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":14861644},\"end\":38944,\"start\":38581},{\"attributes\":{\"doi\":\"arXiv:1805.04770\",\"id\":\"b7\"},\"end\":39204,\"start\":38946},{\"attributes\":{\"id\":\"b8\"},\"end\":39344,\"start\":39206},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":12225766},\"end\":39736,\"start\":39346},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":206594692},\"end\":40145,\"start\":39738},{\"attributes\":{\"doi\":\"arXiv:1811.03233\",\"id\":\"b11\"},\"end\":40464,\"start\":40147},{\"attributes\":{\"doi\":\"arXiv:1503.02531\",\"id\":\"b12\"},\"end\":40701,\"start\":40466},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":27384186},\"end\":41041,\"start\":40703},{\"attributes\":{\"doi\":\"arXiv:1704.04861\",\"id\":\"b14\"},\"end\":41462,\"start\":41043},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":980236},\"end\":41794,\"start\":41464},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":3608236},\"end\":42129,\"start\":41796},{\"attributes\":{\"id\":\"b17\"},\"end\":42308,\"start\":42131},{\"attributes\":{\"id\":\"b18\"},\"end\":42489,\"start\":42310},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":48352434},\"end\":42782,\"start\":42491},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":1331231},\"end\":43192,\"start\":42784},{\"attributes\":{\"id\":\"b21\"},\"end\":43607,\"start\":43194},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":10328909},\"end\":43966,\"start\":43609},{\"attributes\":{\"doi\":\"arXiv:1412.6550\",\"id\":\"b23\"},\"end\":44241,\"start\":43968},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":2930547},\"end\":44731,\"start\":44243},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":15019293},\"end\":45257,\"start\":44733},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":44119099},\"end\":45523,\"start\":45259},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":2722012},\"end\":45802,\"start\":45525},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":206596723},\"end\":46316,\"start\":45804},{\"attributes\":{\"doi\":\"arXiv:1612.03928\",\"id\":\"b29\"},\"end\":46692,\"start\":46318},{\"attributes\":{\"doi\":\"arXiv:1605.07146\",\"id\":\"b30\"},\"end\":46869,\"start\":46694},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":26071966},\"end\":47264,\"start\":46871}]", "bib_title": "[{\"end\":36886,\"start\":36850},{\"end\":37112,\"start\":37095},{\"end\":37598,\"start\":37540},{\"end\":38648,\"start\":38581},{\"end\":39412,\"start\":39346},{\"end\":39782,\"start\":39738},{\"end\":40762,\"start\":40703},{\"end\":41531,\"start\":41464},{\"end\":41865,\"start\":41796},{\"end\":42542,\"start\":42491},{\"end\":42839,\"start\":42784},{\"end\":43257,\"start\":43194},{\"end\":43687,\"start\":43609},{\"end\":44292,\"start\":44243},{\"end\":44813,\"start\":44733},{\"end\":45306,\"start\":45259},{\"end\":45552,\"start\":45525},{\"end\":45901,\"start\":45804},{\"end\":46891,\"start\":46871}]", "bib_author": "[{\"end\":36571,\"start\":36563},{\"end\":36582,\"start\":36571},{\"end\":36592,\"start\":36582},{\"end\":36603,\"start\":36592},{\"end\":36613,\"start\":36603},{\"end\":36625,\"start\":36613},{\"end\":36894,\"start\":36888},{\"end\":36905,\"start\":36894},{\"end\":37125,\"start\":37114},{\"end\":37136,\"start\":37125},{\"end\":37155,\"start\":37136},{\"end\":37609,\"start\":37600},{\"end\":37625,\"start\":37609},{\"end\":37634,\"start\":37625},{\"end\":38061,\"start\":38050},{\"end\":38075,\"start\":38061},{\"end\":38086,\"start\":38075},{\"end\":38094,\"start\":38086},{\"end\":38367,\"start\":38358},{\"end\":38375,\"start\":38367},{\"end\":38383,\"start\":38375},{\"end\":38392,\"start\":38383},{\"end\":38657,\"start\":38650},{\"end\":38664,\"start\":38657},{\"end\":38677,\"start\":38664},{\"end\":38685,\"start\":38677},{\"end\":38960,\"start\":38946},{\"end\":38972,\"start\":38960},{\"end\":38985,\"start\":38972},{\"end\":38993,\"start\":38985},{\"end\":39007,\"start\":38993},{\"end\":39235,\"start\":39221},{\"end\":39245,\"start\":39235},{\"end\":39258,\"start\":39245},{\"end\":39427,\"start\":39414},{\"end\":39439,\"start\":39427},{\"end\":39451,\"start\":39439},{\"end\":39460,\"start\":39451},{\"end\":39790,\"start\":39784},{\"end\":39799,\"start\":39790},{\"end\":39806,\"start\":39799},{\"end\":39813,\"start\":39806},{\"end\":40241,\"start\":40234},{\"end\":40248,\"start\":40241},{\"end\":40255,\"start\":40248},{\"end\":40265,\"start\":40255},{\"end\":40476,\"start\":40466},{\"end\":40487,\"start\":40476},{\"end\":40495,\"start\":40487},{\"end\":40771,\"start\":40764},{\"end\":40778,\"start\":40771},{\"end\":40786,\"start\":40778},{\"end\":41055,\"start\":41043},{\"end\":41062,\"start\":41055},{\"end\":41070,\"start\":41062},{\"end\":41086,\"start\":41070},{\"end\":41094,\"start\":41086},{\"end\":41104,\"start\":41094},{\"end\":41117,\"start\":41104},{\"end\":41125,\"start\":41117},{\"end\":41544,\"start\":41533},{\"end\":41553,\"start\":41544},{\"end\":41564,\"start\":41553},{\"end\":41874,\"start\":41867},{\"end\":41882,\"start\":41874},{\"end\":41890,\"start\":41882},{\"end\":42197,\"start\":42183},{\"end\":42205,\"start\":42197},{\"end\":42215,\"start\":42205},{\"end\":42377,\"start\":42363},{\"end\":42385,\"start\":42377},{\"end\":42395,\"start\":42385},{\"end\":42551,\"start\":42544},{\"end\":42558,\"start\":42551},{\"end\":42566,\"start\":42558},{\"end\":42851,\"start\":42841},{\"end\":42867,\"start\":42851},{\"end\":42875,\"start\":42867},{\"end\":43271,\"start\":43259},{\"end\":43279,\"start\":43271},{\"end\":43291,\"start\":43279},{\"end\":43301,\"start\":43291},{\"end\":43696,\"start\":43689},{\"end\":43702,\"start\":43696},{\"end\":43714,\"start\":43702},{\"end\":43721,\"start\":43714},{\"end\":43978,\"start\":43968},{\"end\":43988,\"start\":43978},{\"end\":43999,\"start\":43988},{\"end\":44011,\"start\":43999},{\"end\":44020,\"start\":44011},{\"end\":44030,\"start\":44020},{\"end\":44309,\"start\":44294},{\"end\":44317,\"start\":44309},{\"end\":44323,\"start\":44317},{\"end\":44333,\"start\":44323},{\"end\":44345,\"start\":44333},{\"end\":44351,\"start\":44345},{\"end\":44360,\"start\":44351},{\"end\":44372,\"start\":44360},{\"end\":44382,\"start\":44372},{\"end\":44395,\"start\":44382},{\"end\":44405,\"start\":44395},{\"end\":44416,\"start\":44405},{\"end\":44830,\"start\":44815},{\"end\":44842,\"start\":44830},{\"end\":44849,\"start\":44842},{\"end\":44861,\"start\":44849},{\"end\":44871,\"start\":44861},{\"end\":44880,\"start\":44871},{\"end\":45316,\"start\":45308},{\"end\":45324,\"start\":45316},{\"end\":45570,\"start\":45554},{\"end\":45579,\"start\":45570},{\"end\":45594,\"start\":45579},{\"end\":45910,\"start\":45903},{\"end\":45917,\"start\":45910},{\"end\":45924,\"start\":45917},{\"end\":45931,\"start\":45924},{\"end\":46450,\"start\":46437},{\"end\":46463,\"start\":46450},{\"end\":46707,\"start\":46694},{\"end\":46720,\"start\":46707},{\"end\":46902,\"start\":46893},{\"end\":46911,\"start\":46902},{\"end\":46927,\"start\":46911},{\"end\":46933,\"start\":46927}]", "bib_venue": "[{\"end\":37338,\"start\":37255},{\"end\":37775,\"start\":37713},{\"end\":39954,\"start\":39892},{\"end\":42996,\"start\":42944},{\"end\":45001,\"start\":44949},{\"end\":46072,\"start\":46010},{\"end\":47074,\"start\":47012},{\"end\":36561,\"start\":36486},{\"end\":36954,\"start\":36905},{\"end\":37253,\"start\":37155},{\"end\":37711,\"start\":37634},{\"end\":38048,\"start\":37987},{\"end\":38356,\"start\":38285},{\"end\":38740,\"start\":38685},{\"end\":39049,\"start\":39023},{\"end\":39219,\"start\":39206},{\"end\":39525,\"start\":39460},{\"end\":39890,\"start\":39813},{\"end\":40232,\"start\":40147},{\"end\":40555,\"start\":40511},{\"end\":40846,\"start\":40786},{\"end\":41223,\"start\":41141},{\"end\":41602,\"start\":41564},{\"end\":41939,\"start\":41890},{\"end\":42181,\"start\":42131},{\"end\":42361,\"start\":42310},{\"end\":42615,\"start\":42566},{\"end\":42942,\"start\":42875},{\"end\":43337,\"start\":43301},{\"end\":43770,\"start\":43721},{\"end\":44078,\"start\":44045},{\"end\":44463,\"start\":44416},{\"end\":44947,\"start\":44880},{\"end\":45373,\"start\":45324},{\"end\":45643,\"start\":45594},{\"end\":46008,\"start\":45931},{\"end\":46435,\"start\":46318},{\"end\":46758,\"start\":46736},{\"end\":47010,\"start\":46933}]"}}}, "year": 2023, "month": 12, "day": 17}