{"id": 980236, "updated": "2023-09-27 19:10:19.485", "metadata": {"title": "Perceptual Losses for Real-Time Style Transfer and Super-Resolution", "authors": "[{\"first\":\"Justin\",\"last\":\"Johnson\",\"middle\":[]},{\"first\":\"Alexandre\",\"last\":\"Alahi\",\"middle\":[]},{\"first\":\"Li\",\"last\":\"Fei-Fei\",\"middle\":[]}]", "venue": "ECCV", "journal": "694-711", "publication_date": {"year": 2016, "month": 3, "day": 27}, "abstract": "We consider image transformation problems, where an input image is transformed into an output image. Recent methods for such problems typically train feed-forward convolutional neural networks using a \\emph{per-pixel} loss between the output and ground-truth images. Parallel work has shown that high-quality images can be generated by defining and optimizing \\emph{perceptual} loss functions based on high-level features extracted from pretrained networks. We combine the benefits of both approaches, and propose the use of perceptual loss functions for training feed-forward networks for image transformation tasks. We show results on image style transfer, where a feed-forward network is trained to solve the optimization problem proposed by Gatys et al in real-time. Compared to the optimization-based method, our network gives similar qualitative results but is three orders of magnitude faster. We also experiment with single-image super-resolution, where replacing a per-pixel loss with a perceptual loss gives visually pleasing results.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1603.08155", "mag": "2950689937", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/JohnsonAL16", "doi": "10.1007/978-3-319-46475-6_43"}}, "content": {"source": {"pdf_hash": "915c4bb289b3642489e904c65a47fa56efb60658", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1603.08155v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/1603.08155", "status": "GREEN"}}, "grobid": {"id": "fff1ec0c49b4387ba0ace9d0d001a9546f2b6527", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/915c4bb289b3642489e904c65a47fa56efb60658.txt", "contents": "\nPerceptual Losses for Real-Time Style Transfer and Super-Resolution\n\n\nJustin Johnson \nDepartment of Computer Science\nStanford University\n\n\nAlexandre Alahi alahi@cs.stanford.edu \nDepartment of Computer Science\nStanford University\n\n\nLi Fei-Fei feifeili@cs.stanford.edu \nDepartment of Computer Science\nStanford University\n\n\nPerceptual Losses for Real-Time Style Transfer and Super-Resolution\nStyle transfersuper-resolutiondeep learning\nWe consider image transformation problems, where an input image is transformed into an output image. Recent methods for such problems typically train feed-forward convolutional neural networks using a per-pixel loss between the output and ground-truth images. Parallel work has shown that high-quality images can be generated by defining and optimizing perceptual loss functions based on high-level features extracted from pretrained networks. We combine the benefits of both approaches, and propose the use of perceptual loss functions for training feed-forward networks for image transformation tasks. We show results on image style transfer, where a feed-forward network is trained to solve the optimization problem proposed by Gatys et al in real-time. Compared to the optimization-based method, our network gives similar qualitative results but is three orders of magnitude faster. We also experiment with single-image super-resolution, where replacing a per-pixel loss with a perceptual loss gives visually pleasing results.\n\nIntroduction\n\nMany classic problems can be framed as image transformation tasks, where a system receives some input image and transforms it into an output image. Examples from image processing include denoising, super-resolution, and colorization, where the input is a degraded image (noisy, low-resolution, or grayscale) and the output is a high-quality color image. Examples from computer vision include semantic segmentation and depth estimation, where the input is a color image and the output image encodes semantic or geometric information about the scene.\n\nOne approach for solving image transformation tasks is to train a feedforward convolutional neural network in a supervised manner, using a per-pixel loss function to measure the difference between output and ground-truth images. This approach has been used for example by Dong et al for super-resolution [1], by Cheng et al for colorization [2], by Long et al for segmentation [3], and by Eigen et al for depth and surface normal prediction [4,5]. Such approaches are efficient at test-time, requiring only a forward pass through the trained network.\n\nHowever, the per-pixel losses used by these methods do not capture perceptual differences between output and ground-truth images. For [10] but are three orders of magnitude faster. For super-resolution our method trained with a perceptual loss is able to better reconstruct fine details compared to methods trained with per-pixel loss.\n\nidentical images offset from each other by one pixel; despite their perceptual similarity they would be very different as measured by per-pixel losses.\n\nIn parallel, recent work has shown that high-quality images can be generated using perceptual loss functions based not on differences between pixels but instead on differences between high-level image feature representations extracted from pretrained convolutional neural networks. Images are generated by minimizing a loss function. This strategy has been applied to feature inversion [6] by Mahendran et al, to feature visualization by Simonyan et al [7] and Yosinski et al [8], and to texture synthesis and style transfer by Gatys et al [9,10]. These approaches produce high-quality images, but are slow since inference requires solving an optimization problem.\n\nIn this paper we combine the benefits of these two approaches. We train feedforward transformation networks for image transformation tasks, but rather than using per-pixel loss functions depending only on low-level pixel information, we train our networks using perceptual loss functions that depend on high-level features from a pretrained loss network. During training, perceptual losses measure image similarities more robustly than per-pixel losses, and at test-time the transformation networks run in real-time.\n\nWe experiment on two tasks: style transfer and single-image super-resolution. Both are inherently ill-posed; for style transfer there is no single correct output, and for super-resolution there are many high-resolution images that could have generated the same low-resolution input. Success in either task requires semantic reasoning about the input image. For style transfer the output must be semantically similar to the input despite drastic changes in color and texture; for superresolution fine details must be inferred from visually ambiguous low-resolution inputs. In principle a high-capacity neural network trained for either task could implicitly learn to reason about the relevant semantics; however in practice we need not learn from scratch: the use of perceptual loss functions allows the transfer of semantic knowledge from the loss network to the transformation network.\n\nFor style transfer our feed-forward networks are trained to solve the optimization problem from [10]; our results are similar to [10] both qualitatively and as measured by objective function value, but are three orders of magnitude faster to generate. For super-resolution we show that replacing the per-pixel loss with a perceptual loss gives visually pleasing results for \u00d74 and \u00d78 super-resolution.\n\n\nRelated Work\n\nFeed-forward image transformation. In recent years, a wide variety of feedforward image transformation tasks have been solved by training deep convolutional neural networks with per-pixel loss functions.\n\nSemantic segmentation methods [3,5,12,13,14,15] produce dense scene labels by running a network in a fully-convolutional manner over an input image, training with a per-pixel classification loss. [15] moves beyond per-pixel losses by framing CRF inference as a recurrent layer trained jointly with the rest of the network. The architecture of our transformation networks are inspired by [3] and [14], which use in-network downsampling to reduce the spatial extent of feature maps followed by in-network upsampling to produce the final output image.\n\nRecent methods for depth [5,4,16] and surface normal estimation [5,17] are similar in that they transform a color input image into a geometrically meaningful output image using a feed-forward convolutional network trained with perpixel regression [4,5] or classification [17] losses. Some methods move beyond per-pixel losses by penalizing image gradients [5] or using a CRF loss layer [16] to enforce local consistency in the output image. In [2] a feed-forward model is trained using a per-pixel loss to transform grayscale images to color.\n\nPerceptual optimization. A number of recent papers have used optimization to generate images where the objective is perceptual, depending on highlevel features extracted from a convolutional network. Images can be generated to maximize class prediction scores [7,8] or individual features [8] in order to understand the functions encoded in trained networks. Similar optimization techniques can also be used to generate high-confidence fooling images [18,19].\n\nMahendran and Vedaldi [6] invert features from convolutional networks by minimizing a feature reconstruction loss in order to understand the image information retained by different network layers; similar methods had previously been used to invert local binary descriptors [20] and HOG features [21].\n\nThe work of Dosovitskiy and Brox [22] is particularly relevant to ours, as they train a feed-forward neural network to invert convolutional features, quickly approximating a solution to the optimization problem posed by [6]. However, their feed-forward network is trained with a per-pixel reconstruction loss, while our networks directly optimize the feature reconstruction loss of [6].\n\nStyle Transfer. Gatys et al [10] perform artistic style transfer, combining the content of one image with the style of another by jointly minimizing the feature reconstruction loss of [6] and a style reconstruction loss also based on Input Image\n\nImage Transform Net Style Target\n\n\nContent Target\n\nLoss Network (VGG-16) Fig. 2. System overview. We train an image transformation network to transform input images into output images. We use a loss network pretrained for image classification to define perceptual loss functions that measure perceptual differences in content and style between images. The loss network remains fixed during the training process.\n\nfeatures extracted from a pretrained convolutional network; a similar method had previously been used for texture synthesis [9]. Their method produces highquality results, but is computationally expensive since each step of the optimization problem requires a forward and backward pass through the pretrained network. To overcome this computational burden, we train a feed-forward network to quickly approximate solutions to their optimization problem. Image super-resolution. Image super-resolution is a classic problem for which a wide variety of techniques have been developed. Yang et al [23] provide an exhaustive evaluation of the prevailing techniques prior to the widespread adoption of convolutional neural networks. They group super-resolution techniques into prediction-based methods (bilinear, bicubic, Lanczos, [24]), edgebased methods [25,26], statistical methods [27,28,29], patch-based methods [25,30,31,32,3 and sparse dictionary methods [37,38]. Recently [1] achieved excellent performance on single-image super-resolution using a three-layer convolutional neural network trained with a per-pixel Euclidean loss. Other recent state-of-the-art methods include [39,40,41].\n\n\nMethod\n\nAs shown in Figure 2, our system consists of two components: an image transformation network f W and a loss network \u03c6 that is used to define several loss functions 1 , . . . , k . The image transformation network is a deep residual convolutional neural network parameterized by weights W ; it transforms input images x into output images\u0177 via the mapping\u0177 = f W (x). Each loss function computes a scalar value i (\u0177, y i ) measuring the difference between the output image\u0177 and a target image y i . The image transformation network is trained using stochastic gradient descent to minimize a weighted combination of loss functions:\nW * = arg min W E x,{yi} i=1 \u03bb i i (f W (x), y i )(1)\nTo address the shortcomings of per-pixel losses and allow our loss functions to better measure perceptual and semantic differences between images, we draw inspiration from recent work that generates images via optimization [6,7,8,9,10].\n\nThe key insight of these methods is that convolutional neural networks pretrained for image classification have already learned to encode the perceptual and semantic information we would like to measure in our loss functions. We therefore make use of a network \u03c6 which as been pretrained for image classification as a fixed loss network in order to define our loss functions. Our deep convolutional transformation network is then trained using loss functions that are also deep convolutional networks.\n\nThe loss network \u03c6 is used to define a feature reconstruction loss \u03c6 f eat and a style reconstruction loss \u03c6 style that measure differences in content and style between images. For each input image x we have a content target y c and a style target y s . For style transfer, the content target y c is the input image x and the output image\u0177 should combine the content of x = y c with the style of y s ; we train one network per style target. For single-image super-resolution, the input image x is a low-resolution input, the content target y c is the ground-truth highresolution image, and the style reconstruction loss is not used; we train one network per super-resolution factor.\n\n\nImage Transformation Networks\n\nOur image transformation networks roughly follow the architectural guidelines set forth by Radford et al [42]. We do not use any pooling layers, instead using strided and fractionally strided convolutions for in-network downsampling and upsampling. Our network body consists of five residual blocks [43] using the architecture of [44]. All non-residual convolutional layers are followed by spatial batch normalization [45] and ReLU nonlinearities with the exception of the output layer, which instead uses a scaled tanh to ensure that the output image has pixels in the range [0, 255]. Other than the first and last layers which use 9 \u00d7 9 kernels, all convolutional layers use 3 \u00d7 3 kernels. The exact architectures of all our networks can be found in the supplementary material.\n\nInputs and Outputs. For style transfer the input and output are both color images of shape 3 \u00d7 256 \u00d7 256. For super-resolution with an upsampling factor of f , the output is a high-resolution image patch of shape 3 \u00d7 288 \u00d7 288 and the input is a low-resolution patch of shape 3 \u00d7 288/f \u00d7 288/f . Since the image transformation networks are fully-convolutional, at test-time they can be applied to images of any resolution.\n\nDownsampling and Upsampling. For super-resolution with an upsampling factor of f , we use several residual blocks followed by log 2 f convolutional layers with stride 1/2. This is different from [1] who use bicubic interpolation to upsample the low-resolution input before passing it to the network. Rather than relying on a fixed upsampling function, fractionally-strided convolution allows the upsampling function to be learned jointly with the rest of the network. y relu2_2 relu3_3 relu4_3 relu5_1 relu5_3 Fig. 3. Similar to [6], we use optimization to find an image\u0177 that minimizes the feature reconstruction loss \u03c6,j f eat (\u0177, y) for several layers j from the pretrained VGG-16 loss network \u03c6. As we reconstruct from higher layers, image content and overall spatial structure are preserved, but color, texture, and exact shape are not.\n\nFor style transfer our networks use two stride-2 convolutions to downsample the input followed by several residual blocks and then two convolutional layers with stride 1/2 to upsample. Although the input and output have the same size, there are several benefits to networks that downsample and then upsample.\n\nThe first is computational. With a naive implementation, a 3 \u00d7 3 convolution with C filters on an input of size C \u00d7 H \u00d7 W requires 9HW C 2 multiply-adds, which is the same cost as a 3 \u00d7 3 convolution with DC filters on an input of shape DC \u00d7 H/D \u00d7 W/D. After downsampling, we can therefore use a larger network for the same computational cost.\n\nThe second benefit has to do with effective receptive field sizes. High-quality style transfer requires changing large parts of the image in a coherent way; therefore it is advantageous for each pixel in the output to have a large effective receptive field in the input. Without downsampling, each additional 3 \u00d7 3 convolutional layer increases the effective receptive field size by 2. After downsampling by a factor of D, each 3 \u00d7 3 convolution instead increases effective receptive field size by 2D, giving larger effective receptive fields with the same number of layers.\n\nResidual Connections. He et al [43] use residual connections to train very deep networks for image classification. They argue that residual connections make it easy for the network to learn the identify function; this is an appealing property for image transformation networks, since in most cases the output image should share structure with the input image. The body of our network thus consists of several residual blocks, each of which contains two 3 \u00d7 3 convolutional layers. We use the residual block design of [44], shown in the supplementary material.\n\n\nPerceptual Loss Functions\n\nWe define two perceptual loss functions that measure high-level perceptual and semantic differences between images. They make use of a loss network \u03c6 pretrained for image classification, meaning that these perceptual loss functions are themselves deep convolutional neural networks. In all our experiments \u03c6 is the 16-layer VGG network [46] pretrained on the ImageNet dataset [47]. y relu1_2 relu2_2 relu3_3 relu4_3 Fig. 4. Similar to [10], we use optimization to find an image\u0177 that minimizes the style reconstruction loss \u03c6,j style (\u0177, y) for several layers j from the pretrained VGG-16 loss network \u03c6. The images\u0177 preserve stylistic features but not spatial structure.\n\nFeature Reconstruction Loss. Rather than encouraging the pixels of the output image\u0177 = f W (x) to exactly match the pixels of the target image y, we instead encourage them to have similar feature representations as computed by the loss network \u03c6. Let \u03c6 j (x) be the activations of the jth layer of the network \u03c6 when processing the image x; if j is a convolutional layer then \u03c6 j (x) will be a feature map of shape C j \u00d7 H j \u00d7 W j . The feature reconstruction loss is the (squared, normalized) Euclidean distance between feature representations:\n\u03c6,j f eat (\u0177, y) = 1 C j H j W j \u03c6 j (\u0177) \u2212 \u03c6 j (y) 2 2(2)\nAs demonstrated in [6] and reproduced in Figure 3, finding an image\u0177 that minimizes the feature reconstruction loss for early layers tends to produce images that are visually indistinguishable from y. As we reconstruct from higher layers, image content and overall spatial structure are preserved but color, texture, and exact shape are not. Using a feature reconstruction loss for training our image transformation networks encourages the output image\u0177 to be perceptually similar to the target image y, but does not force them to match exactly. Style Reconstruction Loss. The feature reconstruction loss penalizes the output image\u0177 when it deviates in content from the target y. We also wish to penalize differences in style: colors, textures, common patterns, etc. To achieve this effect, Gatys et al [9,10] propose the following style reconstruction loss. As above, let \u03c6 j (x) be the activations at the jth layer of the network \u03c6 for the input x, which is a feature map of shape C j \u00d7 H j \u00d7 W j . Define the Gram matrix G \u03c6 j (x) to be the C j \u00d7 C j matrix whose elements are given by\nG \u03c6 j (x) c,c = 1 C j H j W j Hj h=1 Wj w=1 \u03c6 j (x) h,w,c \u03c6 j (x) h,w,c .(3)\nIf we interpret \u03c6 j (x) as giving C j -dimensional features for each point on a H j \u00d7 W j grid, then G \u03c6 j (x) is proportional to the uncentered covariance of the C j -dimensional features, treating each grid location as an independent sample. It thus captures information about which features tend to activate together. The Gram matrix can be computed efficiently by reshaping \u03c6 j (x) into a matrix \u03c8 of shape C j \u00d7 H j W j ; then G \u03c6 j (x) = \u03c8\u03c8 T /C j H j W j . The style reconstruction loss is then the squared Frobenius norm of the difference between the Gram matrices of the output and target images:\n\u03c6,j style (\u0177, y) = G \u03c6 j (\u0177) \u2212 G \u03c6 j (y) 2 F .(4)\nThe style reconstruction loss is well-defined even when\u0177 and y have different sizes, since their Gram matrices will both have the same shape. As demonstrated in [10] and reproduced in Figure 5, generating an image\u0177 that minimizes the style reconstruction loss preserves stylistic features from the target image, but does not preserve its spatial structure. Reconstructing from higher layers transfers larger-scale structure from the target image.\n\nTo perform style reconstruction from a set of layers J rather than a single layer j, we define \u03c6,J style (\u0177, y) to be the sum of losses for each layer j \u2208 J.\n\n\nSimple Loss Functions\n\nIn addition to the perceptual losses defined above, we also define two simple loss functions that depend only on low-level pixel information. Pixel Loss. The pixel loss is the (normalized) Euclidean distance between the output image\u0177 and the target y. If both have shape C \u00d7 H \u00d7 W , then the pixel loss is defined as pixel (\u0177, y) = \u0177 \u2212 y 2 2 /CHW . This can only be used when when we have a ground-truth target y that the network is expected to match. Total Variation Regularization. To encourage spatial smoothness in the output image\u0177, we follow prior work on feature inversion [6,20] and superresolution [48,49] and make use of total variation regularizer T V (\u0177).\n\n\nExperiments\n\nWe perform experiments on two image transformation tasks: style transfer and single-image super-resolution. Prior work on style transfer has used optimization to generate images; our feed-forward networks give similar qualitative results but are up to three orders of magnitude faster. Prior work on single-image superresolution with convolutional neural networks has used a per-pixel loss; we show encouraging qualitative results by using a perceptual loss instead.\n\n\nStyle Transfer\n\nThe goal of style transfer is to generate an image\u0177 that combines the content of a target content image y c with the the style of a target style image y s . We train one image transformation network per style target for several hand-picked style targets and compare our results with the baseline approach of Gatys et al [10]. Baseline. As a baseline, we reimplement the method of Gatys et al [10]. Given style and content targets y s and y c and layers j and J at which to perform feature and style reconstruction, an image\u0177 is generated by solving the problem\ny = arg min y \u03bb c \u03c6,j f eat (y, y c ) + \u03bb s \u03c6,J style (y, y s ) + \u03bb T V T V (y)(5)\nwhere \u03bb c , \u03bb s , and \u03bb T V are scalars, y is initialized with white noise, and optimization is performed using L-BFGS. We find that unconstrained optimization of Equation 5 typically results in images whose pixels fall outside the range [0, 255]. For a more fair comparison with our method whose output is constrained to this range, for the baseline we minimize Equation 5 using projected L-BFGS by clipping the image y to the range [0, 255] at each iteration. In most cases optimization converges to satisfactory results within 500 iterations. This method is slow because each L-BFGS iteration requires a forward and backward pass through the VGG-16 loss network \u03c6. Training Details. Our style transfer networks are trained on the Microsoft COCO dataset [50]. We resize each of the 80k training images to 256 \u00d7 256 and train our networks with a batch size of 4 for 40,000 iterations, giving roughly two epochs over the training data. We use Adam [51] with a learning rate of 1 \u00d7 10 \u22123 . The output images are regularized with total variation regularization with a strength of between 1 \u00d7 10 \u22126 and 1 \u00d7 10 \u22124 , chosen via cross-validation per style target. We do not use weight decay or dropout, as the model does not overfit within two epochs. For all style transfer experiments we compute feature reconstruction loss at layer relu2_2 and style reconstruction loss at layers relu1_2, relu2_2, relu3_3, and relu4_3 of the VGG-16 loss network \u03c6.\n\nOur implementation uses Torch [52] and cuDNN [53]; training takes roughly 4 hours on a single GTX Titan X GPU. Qualitative Results. In Figure 6 we show qualitative examples comparing our results with those of the baseline method for a variety of style and content images. In all cases the hyperparameters \u03bb c , \u03bb s , and \u03bb T V are exactly the same between the two methods; all content images are taken from the MS-COCO 2014 validation set. Overall our results are qualitatively similar to the baseline. Although our models are trained with 256 \u00d7 256 images, they can be applied in a fully-convolutional manner to images of any size at test-time. In Figure 7 we show examples of style transfer using our models on 512 \u00d7 512 images.  6. Example results of style transfer using our image transformation networks. Our results are qualitatively similar to Gatys et al [10] but are much faster to generate (see Table 1). All generated images are 256 \u00d7 256 pixels. In these results it is clear that the trained style transfer network is aware of the semantic content of images. For example in the beach image in Figure 7 the people are clearly recognizable in the transformed image but the background is warped beyond recognition; similarly in the cat image, the cat's face is clear in the transformed image, but its body is not. One explanation is that the VGG-16 loss network has features which are selective for people and animals since these objects are present in the classification dataset on which it was trained. Our style transfer networks are trained to preserve VGG-16 features, and in doing so they learn to preserve people and animals more than background objects.\n\nQuantitative Results. The baseline and our method both minimize Equation 5. The baseline performs explicit optimization over the output image, while our method is trained to find a solution for any content image y c in a single forward pass. We may therefore quantitatively compare the two methods by measuring the degree to which they successfully minimize Equation 5.\n\nWe run our method and the baseline on 50 images from the MS-COCO validation set, using The Muse by Pablo Picasso as a style image. For the baseline we record the value of the objective function at each iteration of optimization, and for our method we record the value of Equation 5 for each image; we also compute the value of Equation 5 when y is equal to the content image y c . Results are shown in Figure 5. We see that the content image y c achieves a very high loss, and that our method achieves a loss comparable to between 50 and 100 iterations of explicit optimization.\n\nAlthough our networks are trained to minimize Equation 5 for 256 \u00d7 256 images, they are also successful at minimizing the objective when applied to larger images. We repeat the same quantitative evaluation for 50 images at 512 \u00d7 512 and 1024 \u00d7 1024; results are shown in Figure 5. We see that even at higher resolutions our model achieves a loss comparable to 50 to 100 iterations of the baseline method.  Table 1. Speed (in seconds) for our style transfer network vs the optimization-based baseline for varying numbers of iterations and image resolutions. Our method gives similar qualitative results (see Figure 6) but is faster than a single optimization step of the baseline method. Both methods are benchmarked on a GTX Titan X GPU.\n\nSpeed. In Table 1 we compare the runtime of our method and the baseline for several image sizes; for the baseline we report times for varying numbers of optimization iterations. Across all image sizes, we see that the runtime of our method is approximately twice the speed of a single iteration of the baseline method. Compared to 500 iterations of the baseline method, our method is three orders of magnitude faster. Our method processes images of size 512 \u00d7 512 at 20 FPS, making it feasible to run style transfer in real-time or on video.\n\n\nSingle-Image Super-Resolution\n\nIn single-image super-resolution, the task is to generate a high-resolution output image from a low-resolution input. This is an inherently ill-posed problem, since for each low-resolution image there exist multiple high-resolution images that could have generated it. The ambiguity becomes more extreme as the super-resolution factor grows; for large factors (\u00d74, \u00d78), fine details of the highresolution image may have little or no evidence in its low-resolution version.\n\nTo overcome this problem, we train super-resolution networks not with the per-pixel loss typically used [1] but instead with a feature reconstruction loss (see Section 3) to allow transfer of semantic knowledge from the pretrained loss network to the super-resolution network. We focus on \u00d74 and \u00d78 superresolution since larger factors require more semantic reasoning about the input.\n\nThe traditional metrics used to evaluate super-resolution are PSNR and SSIM [54], both of which have been found to correlate poorly with human assessment of visual quality [55,56,57,58,59]. PSNR and SSIM rely only on lowlevel differences between pixels and operate under the assumption of additive Gaussian noise, which may be invalid for super-resolution. In addition, PSNR is equivalent to the per-pixel loss pixel , so as measured by PSNR a model trained to minimize per-pixel loss should always outperform a model trained to minimize feature reconstruction loss. We therefore emphasize that the goal of these experiments is not to achieve state-of-the-art PSNR or SSIM results, but instead to showcase the qualitative difference between models trained with per-pixel and feature reconstruction losses. Model Details. We train models to perform \u00d74 and \u00d78 super-resolution by minimizing feature reconstruction loss at layer relu2_2 from the VGG-16 loss network \u03c6. We train with 288\u00d7288 patches from 10k images from the MS-COCO training set, and prepare low-resolution inputs by blurring with a Gaussian kernel of width \u03c3 = 1.0 and downsampling with bicubic interpolation. We train with  a batch size of 4 for 200k iterations using Adam [51] with a learning rate of 1\u00d710 \u22123 without weight decay or dropout. As a post-processing step, we perform histogram matching between our network output and the low-resolution input. Baselines. As a baseline model we use SRCNN [1] for its state-of-the-art performance. SRCNN is a three-layer convolutional network trained to minimize per-pixel loss on 33 \u00d7 33 patches from the ILSVRC 2013 detection dataset. SR-CNN is not trained for \u00d78 super-resolution, so we can only evaluate it on \u00d74.\n\nSRCNN is trained for more than 10 9 iterations, which is not computationally feasible for our models. To account for differences between SRCNN and our model in data, training, and architecture, we train image transformation networks for \u00d74 and \u00d78 super-resolution using pixel ; these networks use identical data, architecture, and training as the networks trained to minimize f eat . Evaluation. We evaluate all models on the standard Set5 [60], Set14 [61], and BSD100 [41] datasets. We report PSNR and SSIM [54], computing both only on the Y channel after converting to the YCbCr colorspace, following [1,39]. Results. We show results for \u00d74 super-resolution in Figure 8. Compared to the other methods, our model trained for feature reconstruction does a very good job at reconstructing sharp edges and fine details, such as the eyelashes in the  first image and the individual elements of the hat in the second image. The feature reconstruction loss gives rise to a slight cross-hatch pattern visible under magnification, which harms its PSNR and SSIM compared to baseline methods.\n\nResults for \u00d78 super-resolution are shown in Figure 9. Again we see that our f eat model does a good job at edges and fine details compared to other models, such as the horse's legs and hooves. The f eat model does not sharpen edges indiscriminately; compared to the pixel model, the f eat model sharpens the boundary edges of the horse and rider but the background trees remain diffuse, suggesting that the f eat model may be more aware of image semantics. Since our pixel and our f eat models share the same architecture, data, and training procedure, all differences between them are due to the difference between the pixel and f eat losses. The pixel loss gives fewer visual artifacts and higher PSNR values but the f eat loss does a better job at reconstructing fine details, leading to pleasing visual results.\n\n\nConclusion\n\nIn this paper we have combined the benefits of feed-forward image transformation tasks and optimization-based methods for image generation by training feed-forward transformation networks with perceptual loss functions. We have applied this method to style transfer where we achieve comparable performance and drastically improved speed compared to existing methods, and to singleimage super-resolution where we show that training with a perceptual loss allows the model to better reconstruct fine details and edges.\n\nIn future work we hope to explore the use of perceptual loss functions for other image transformation tasks, such as colorization and semantic segmentation. We also plan to investigate the use of different loss networks to see whether for example loss networks trained on different tasks or datasets can impart image transformation networks with different types of semantic knowledge.\n\nFig. 5 .\n5Our style transfer networks and[10] minimize the same objective. We compare their objective values on 50 images; dashed lines and error bars show standard deviations. Our networks are trained on 256 \u00d7 256 images but generalize to larger images.\n\nFig. 7 .\n7Example results for style transfer on 512 \u00d7 512 images. The model is applied in in a fully-convolutional manner to high-resolution images at test-time. The style images are the same asFigure 6.\n\nFig. 8 .\n8Results for \u00d74 super-resolution on images from Set5 (top) and Set14 (bottom). We report PSNR / SSIM for each example and the mean for each dataset. More results are shown in the supplementary material.\n\nFig. 9 .\n9Super-resolution results with scale factor \u00d78 on an image from the BSD100 dataset. We report PSNR / SSIM for the example image and the mean for each dataset. More results are shown in the supplementary material.\n\n\nexample, consider two arXiv:1603.08155v1 [cs.CV] 27 Mar 2016Style \nContent \nGatys et al [10] \nOurs \n\nGround Truth \nBicubic \nSRCNN [11] Perceptual loss \n\nFig. 1. Example results for style transfer (top) and \u00d74 super-resolution (bottom). For \nstyle transfer, we achieve similar results as Gatys et al \n\n\nOurs ( f eat ) 21.04 / 0.6116 24.99 / 0.6731 24.95 / 63.17Ground Truth \nThis image \nSet5 mean \n\nBicubic \n31.78 / 0.8577 \n28.43 / 0.8114 \n\nOurs ( pixel ) \n31.47 / 0.8573 \n28.40 / 0.8205 \n\nSRCNN [11] \n32.99 / 0.8784 \n30.48 / 0.8628 \n\nOurs ( f eat ) \n29.24 / 0.7841 \n27.09 / 0.7680 \n\nGround Truth \nThis Image \nSet14 mean \nBSD100 mean \n\nBicubic \n21.69 / 0.5840 \n25.99 / 0.7301 \n25.96 / 0.682 \n\nOurs ( pixel ) \n21.66 / 0.5881 \n25.75 / 0.6994 \n25.91 / 0.6680 \n\nSRCNN [11] \n22.53 / 0.6524 \n27.49 / 0.7503 \n26.90 / 0.7101 \n\n\n\nImage super-resolution using deep convolutional networks. C Dong, C C Loy, K He, X Tang, Dong, C., Loy, C.C., He, K., Tang, X.: Image super-resolution using deep convo- lutional networks. (2015)\n\nDeep colorization. Z Cheng, Q Yang, B Sheng, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionCheng, Z., Yang, Q., Sheng, B.: Deep colorization. In: Proceedings of the IEEE International Conference on Computer Vision. (2015) 415-423\n\nFully convolutional networks for semantic segmentation. J Long, E Shelhamer, T Darrell, CVPRLong, J., Shelhamer, E., Darrell, T.: Fully convolutional networks for semantic segmentation. CVPR (2015)\n\nDepth map prediction from a single image using a multi-scale deep network. D Eigen, C Puhrsch, R Fergus, Advances in Neural Information Processing Systems. Eigen, D., Puhrsch, C., Fergus, R.: Depth map prediction from a single image using a multi-scale deep network. In: Advances in Neural Information Processing Systems. (2014) 2366-2374\n\nPredicting depth, surface normals and semantic labels with a common multi-scale convolutional architecture. D Eigen, R Fergus, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionEigen, D., Fergus, R.: Predicting depth, surface normals and semantic labels with a common multi-scale convolutional architecture. In: Proceedings of the IEEE International Conference on Computer Vision. (2015) 2650-2658\n\nUnderstanding deep image representations by inverting them. A Mahendran, A Vedaldi, Proceedings of the IEEE Conf. on Computer Vision and Pattern Recognition (CVPR. the IEEE Conf. on Computer Vision and Pattern Recognition (CVPRMahendran, A., Vedaldi, A.: Understanding deep image representations by invert- ing them. In: Proceedings of the IEEE Conf. on Computer Vision and Pattern Recognition (CVPR). (2015)\n\nK Simonyan, A Vedaldi, A Zisserman, arXiv:1312.6034Deep inside convolutional networks: Visualising image classification models and saliency maps. arXiv preprintSimonyan, K., Vedaldi, A., Zisserman, A.: Deep inside convolutional net- works: Visualising image classification models and saliency maps. arXiv preprint arXiv:1312.6034 (2013)\n\nJ Yosinski, J Clune, A Nguyen, T Fuchs, H Lipson, arXiv:1506.06579Understanding neural networks through deep visualization. arXiv preprintYosinski, J., Clune, J., Nguyen, A., Fuchs, T., Lipson, H.: Understanding neural networks through deep visualization. arXiv preprint arXiv:1506.06579 (2015)\n\nTexture synthesis using convolutional neural networks. L A Gatys, A S Ecker, M Bethge, Advances in Neural Information Processing Systems 28. Gatys, L.A., Ecker, A.S., Bethge, M.: Texture synthesis using convolutional neural networks. In: Advances in Neural Information Processing Systems 28. (May 2015)\n\nL A Gatys, A S Ecker, M Bethge, arXiv:1508.06576A neural algorithm of artistic style. arXiv preprintGatys, L.A., Ecker, A.S., Bethge, M.: A neural algorithm of artistic style. arXiv preprint arXiv:1508.06576 (2015)\n\nLearning a deep convolutional network for image super-resolution. C Dong, C C Loy, K He, X Tang, Computer Vision-ECCV. SpringerDong, C., Loy, C.C., He, K., Tang, X.: Learning a deep convolutional network for image super-resolution. In: Computer Vision-ECCV 2014. Springer (2014) 184-199\n\nLearning hierarchical features for scene labeling. Pattern Analysis and Machine Intelligence. C Farabet, C Couprie, L Najman, Y Lecun, IEEE Transactions on. 358Farabet, C., Couprie, C., Najman, L., LeCun, Y.: Learning hierarchical features for scene labeling. Pattern Analysis and Machine Intelligence, IEEE Transactions on 35(8) (2013) 1915-1929\n\nP H Pinheiro, R Collobert, arXiv:1306.2795Recurrent convolutional neural networks for scene parsing. arXiv preprintPinheiro, P.H., Collobert, R.: Recurrent convolutional neural networks for scene parsing. arXiv preprint arXiv:1306.2795 (2013)\n\nLearning deconvolution network for semantic segmentation. H Noh, S Hong, B Han, arXiv:1505.04366arXiv preprintNoh, H., Hong, S., Han, B.: Learning deconvolution network for semantic segmen- tation. arXiv preprint arXiv:1505.04366 (2015)\n\nS Zheng, S Jayasumana, B Romera-Paredes, V Vineet, Z Su, D Du, C Huang, P H Torr, Conditional random fields as recurrent neural networks. In: Proceedings of the IEEE International Conference on Computer Vision. Zheng, S., Jayasumana, S., Romera-Paredes, B., Vineet, V., Su, Z., Du, D., Huang, C., Torr, P.H.: Conditional random fields as recurrent neural networks. In: Proceed- ings of the IEEE International Conference on Computer Vision. (2015) 1529-1537\n\nDeep convolutional neural fields for depth estimation from a single image. F Liu, C Shen, G Lin, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionLiu, F., Shen, C., Lin, G.: Deep convolutional neural fields for depth estimation from a single image. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2015) 5162-5170\n\nDesigning deep networks for surface normal estimation. X Wang, D Fouhey, A Gupta, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionWang, X., Fouhey, D., Gupta, A.: Designing deep networks for surface normal estimation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2015) 539-547\n\nC Szegedy, W Zaremba, I Sutskever, J Bruna, D Erhan, I Goodfellow, R Fergus, arXiv:1312.6199Intriguing properties of neural networks. arXiv preprintSzegedy, C., Zaremba, W., Sutskever, I., Bruna, J., Erhan, D., Goodfellow, I., Fer- gus, R.: Intriguing properties of neural networks. arXiv preprint arXiv:1312.6199 (2013)\n\nDeep neural networks are easily fooled: High confidence predictions for unrecognizable images. A Nguyen, J Yosinski, J Clune, Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on. Nguyen, A., Yosinski, J., Clune, J.: Deep neural networks are easily fooled: High confidence predictions for unrecognizable images. In: Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on, IEEE (2015) 427-436\n\nBeyond bits: Reconstructing images from local binary descriptors. E Angelo, A Alahi, P Vandergheynst, Pattern Recognition (ICPR), 2012 21st International Conference on. d'Angelo, E., Alahi, A., Vandergheynst, P.: Beyond bits: Reconstructing images from local binary descriptors. In: Pattern Recognition (ICPR), 2012 21st Interna- tional Conference on, IEEE (2012) 935-938\n\nHoggles: Visualizing object detection features. C Vondrick, A Khosla, T Malisiewicz, A Torralba, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionVondrick, C., Khosla, A., Malisiewicz, T., Torralba, A.: Hoggles: Visualizing ob- ject detection features. In: Proceedings of the IEEE International Conference on Computer Vision. (2013) 1-8\n\nA Dosovitskiy, T Brox, arXiv:1506.02753Inverting visual representations with convolutional networks. arXiv preprintDosovitskiy, A., Brox, T.: Inverting visual representations with convolutional net- works. arXiv preprint arXiv:1506.02753 (2015)\n\nSingle-image super-resolution: a benchmark. C Y Yang, C Ma, M H Yang, Computer Vision-ECCV. SpringerYang, C.Y., Ma, C., Yang, M.H.: Single-image super-resolution: a benchmark. In: Computer Vision-ECCV 2014. Springer (2014) 372-386\n\nImproving resolution by image registration. M Irani, S Peleg, CVGIP: Graphical models and image processing. 533Irani, M., Peleg, S.: Improving resolution by image registration. CVGIP: Graphical models and image processing 53(3) (1991) 231-239\n\nImage and video upscaling from local self-examples. G Freedman, R Fattal, ACM Transactions on Graphics (TOG). 30212Freedman, G., Fattal, R.: Image and video upscaling from local self-examples. ACM Transactions on Graphics (TOG) 30(2) (2011) 12\n\nImage super-resolution using gradient profile prior. J Sun, J Sun, Z Xu, H Y Shum, Computer Vision and Pattern Recognition. IEEESun, J., Sun, J., Xu, Z., Shum, H.Y.: Image super-resolution using gradient profile prior. In: Computer Vision and Pattern Recognition, 2008. CVPR 2008. IEEE Conference on, IEEE (2008) 1-8\n\nFast image/video upsampling. Q Shan, Z Li, J Jia, C K Tang, ACM Transactions on Graphics. 27153ACMShan, Q., Li, Z., Jia, J., Tang, C.K.: Fast image/video upsampling. In: ACM Transactions on Graphics (TOG). Volume 27., ACM (2008) 153\n\nSingle-image super-resolution using sparse regression and natural image prior. Pattern Analysis and Machine Intelligence. K I Kim, Y Kwon, IEEE Transactions on. 326Kim, K.I., Kwon, Y.: Single-image super-resolution using sparse regression and natural image prior. Pattern Analysis and Machine Intelligence, IEEE Transactions on 32(6) (2010) 1127-1133\n\nRobust web image/video super-resolution. Image Processing. Z Xiong, X Sun, F Wu, IEEE Transactions on. 198Xiong, Z., Sun, X., Wu, F.: Robust web image/video super-resolution. Image Processing, IEEE Transactions on 19(8) (2010) 2017-2028\n\nExample-based super-resolution. Computer Graphics and Applications. W T Freeman, T R Jones, E C Pasztor, IEEE. 222Freeman, W.T., Jones, T.R., Pasztor, E.C.: Example-based super-resolution. Com- puter Graphics and Applications, IEEE 22(2) (2002) 56-65\n\nSuper-resolution through neighbor embedding. H Chang, D Y Yeung, Y Xiong, Computer Vision and Pattern Recognition. I-I1IEEEChang, H., Yeung, D.Y., Xiong, Y.: Super-resolution through neighbor embedding. In: Computer Vision and Pattern Recognition, 2004. CVPR 2004. Proceedings of the 2004 IEEE Computer Society Conference on. Volume 1., IEEE (2004) I-I\n\nSuper-resolution from a single image. D Glasner, S Bagon, M Irani, IEEE 12th International Conference on. Computer VisionGlasner, D., Bagon, S., Irani, M.: Super-resolution from a single image. In: Com- puter Vision, 2009 IEEE 12th International Conference on, IEEE (2009) 349-356\n\nFast image super-resolution based on in-place example regression. J Yang, Z Lin, S Cohen, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionYang, J., Lin, Z., Cohen, S.: Fast image super-resolution based on in-place exam- ple regression. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2013) 1059-1066\n\nImage hallucination with primal sketch priors. J Sun, N N Zheng, H Tao, H Y Shum, Proceedings. 2003 IEEE Computer Society Conference on. 2003 IEEE Computer Society Conference on2729Computer Vision and Pattern RecognitionSun, J., Zheng, N.N., Tao, H., Shum, H.Y.: Image hallucination with primal sketch priors. In: Computer Vision and Pattern Recognition, 2003. Proceedings. 2003 IEEE Computer Society Conference on. Volume 2., IEEE (2003) II-729\n\nImage superresolution using support vector regression. Image Processing. K S Ni, T Q Nguyen, IEEE Transactions on. 166Ni, K.S., Nguyen, T.Q.: Image superresolution using support vector regression. Image Processing, IEEE Transactions on 16(6) (2007) 1596-1610\n\nBeta process joint dictionary learning for coupled feature spaces with application to single image super-resolution. L He, H Qi, R Zaretzki, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionHe, L., Qi, H., Zaretzki, R.: Beta process joint dictionary learning for coupled feature spaces with application to single image super-resolution. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2013) 345- 352\n\nImage super-resolution as sparse representation of raw image patches. J Yang, J Wright, T Huang, Y Ma, Computer Vision and Pattern Recognition. IEEEYang, J., Wright, J., Huang, T., Ma, Y.: Image super-resolution as sparse repre- sentation of raw image patches. In: Computer Vision and Pattern Recognition, 2008. CVPR 2008. IEEE Conference on, IEEE (2008) 1-8\n\nImage super-resolution via sparse representation. Image Processing. J Yang, J Wright, T S Huang, Y Ma, IEEE Transactions on. 1911Yang, J., Wright, J., Huang, T.S., Ma, Y.: Image super-resolution via sparse representation. Image Processing, IEEE Transactions on 19(11) (2010) 2861-2873\n\nA+: Adjusted anchored neighborhood regression for fast super-resolution. R Timofte, V De Smet, L Van Gool, Computer Vision-ACCV. SpringerTimofte, R., De Smet, V., Van Gool, L.: A+: Adjusted anchored neighborhood regression for fast super-resolution. In: Computer Vision-ACCV 2014. Springer (2014) 111-126\n\nFast and accurate image upscaling with super-resolution forests. S Schulter, C Leistner, H Bischof, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionSchulter, S., Leistner, C., Bischof, H.: Fast and accurate image upscaling with super-resolution forests. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. (2015) 3791-3799\n\nSingle image super-resolution from transformed self-exemplars. J B Huang, A Singh, N Ahuja, Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on. Huang, J.B., Singh, A., Ahuja, N.: Single image super-resolution from transformed self-exemplars. In: Computer Vision and Pattern Recognition (CVPR), 2015 IEEE Conference on, IEEE (2015) 5197-5206\n\nUnsupervised representation learning with deep convolutional generative adversarial networks. A Radford, L Metz, S Chintala, arXiv:1511.06434arXiv preprintRadford, A., Metz, L., Chintala, S.: Unsupervised representation learn- ing with deep convolutional generative adversarial networks. arXiv preprint arXiv:1511.06434 (2015)\n\nK He, X Zhang, S Ren, J Sun, arXiv:1512.03385Deep residual learning for image recognition. arXiv preprintHe, K., Zhang, X., Ren, S., Sun, J.: Deep residual learning for image recognition. arXiv preprint arXiv:1512.03385 (2015)\n\nTraining and investigating residual nets. S Gross, M Wilber, Gross, S., Wilber, M.: Training and investigating residual nets. http://torch. ch/blog/2016/02/04/resnets.html (2016)\n\nBatch normalization: Accelerating deep network training by reducing internal covariate shift. S Ioffe, C Szegedy, Proceedings of The 32nd International Conference on Machine Learning. The 32nd International Conference on Machine LearningIoffe, S., Szegedy, C.: Batch normalization: Accelerating deep network training by reducing internal covariate shift. In: Proceedings of The 32nd International Conference on Machine Learning. (2015) 448-456\n\nK Simonyan, A Zisserman, arXiv:1409.1556Very deep convolutional networks for large-scale image recognition. arXiv preprintSimonyan, K., Zisserman, A.: Very deep convolutional networks for large-scale image recognition. arXiv preprint arXiv:1409.1556 (2014)\n\nImageNet Large Scale Visual Recognition Challenge. O Russakovsky, J Deng, H Su, J Krause, S Satheesh, S Ma, Z Huang, A Karpathy, A Khosla, M Bernstein, A C Berg, L Fei-Fei, International Journal of Computer Vision (IJCV). 1153Russakovsky, O., Deng, J., Su, H., Krause, J., Satheesh, S., Ma, S., Huang, Z., Karpathy, A., Khosla, A., Bernstein, M., Berg, A.C., Fei-Fei, L.: ImageNet Large Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV) 115(3) (2015) 211-252\n\nImage up-sampling using total-variation regularization with a new observation model. Image Processing. H A Aly, E Dubois, IEEE Transactions on. 1410Aly, H.A., Dubois, E.: Image up-sampling using total-variation regularization with a new observation model. Image Processing, IEEE Transactions on 14(10) (2005) 1647-1659\n\nNon-local kernel regression for image and video restoration. H Zhang, J Yang, Y Zhang, T S Huang, Computer Vision-ECCV 2010. SpringerZhang, H., Yang, J., Zhang, Y., Huang, T.S.: Non-local kernel regression for image and video restoration. In: Computer Vision-ECCV 2010. Springer (2010) 566-579\n\nMicrosoft coco: Common objects in context. T Y Lin, M Maire, S Belongie, J Hays, P Perona, D Ramanan, P Doll\u00e1r, C L Zitnick, Computer Vision-ECCV. SpringerLin, T.Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Doll\u00e1r, P., Zitnick, C.L.: Microsoft coco: Common objects in context. In: Computer Vision- ECCV 2014. Springer (2014) 740-755\n\nAdam: A method for stochastic optimization. D Kingma, J Ba, arXiv:1412.6980arXiv preprintKingma, D., Ba, J.: Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980 (2014)\n\nTorch7: A matlab-like environment for machine learning. R Collobert, K Kavukcuoglu, C Farabet, BigLearn, NIPS Workshop. Number EPFL-CONF-192376. Collobert, R., Kavukcuoglu, K., Farabet, C.: Torch7: A matlab-like environment for machine learning. In: BigLearn, NIPS Workshop. Number EPFL-CONF-192376 (2011)\n\nS Chetlur, C Woolley, P Vandermersch, J Cohen, J Tran, B Catanzaro, E Shelhamer, arXiv:1410.0759cudnn: Efficient primitives for deep learning. arXiv preprintChetlur, S., Woolley, C., Vandermersch, P., Cohen, J., Tran, J., Catanzaro, B., Shelhamer, E.: cudnn: Efficient primitives for deep learning. arXiv preprint arXiv:1410.0759 (2014)\n\nImage quality assessment: from error visibility to structural similarity. Image Processing. Z Wang, A C Bovik, H R Sheikh, E P Simoncelli, IEEE Transactions on. 134Wang, Z., Bovik, A.C., Sheikh, H.R., Simoncelli, E.P.: Image quality assessment: from error visibility to structural similarity. Image Processing, IEEE Transactions on 13(4) (2004) 600-612\n\nBenchmarking of quality metrics on ultra-high definition video sequences. P Hanhart, P Korshunov, T Ebrahimi, Digital Signal Processing (DSP), 2013 18th International Conference on. Hanhart, P., Korshunov, P., Ebrahimi, T.: Benchmarking of quality metrics on ultra-high definition video sequences. In: Digital Signal Processing (DSP), 2013 18th International Conference on, IEEE (2013) 1-8\n\nMean squared error: love it or leave it? a new look at signal fidelity measures. Signal Processing Magazine. Z Wang, A C Bovik, IEEE. 261Wang, Z., Bovik, A.C.: Mean squared error: love it or leave it? a new look at signal fidelity measures. Signal Processing Magazine, IEEE 26(1) (2009) 98-117\n\nScope of validity of psnr in image/video quality assessment. Q Huynh-Thu, M Ghanbari, Electronics letters. 4413Huynh-Thu, Q., Ghanbari, M.: Scope of validity of psnr in image/video quality assessment. Electronics letters 44(13) (2008) 800-801\n\nA statistical evaluation of recent full reference image quality assessment algorithms. Image Processing. H R Sheikh, M F Sabir, A C Bovik, IEEE Transactions on. 1511Sheikh, H.R., Sabir, M.F., Bovik, A.C.: A statistical evaluation of recent full refer- ence image quality assessment algorithms. Image Processing, IEEE Transactions on 15(11) (2006) 3440-3451\n\nFull-reference visual quality assessment for synthetic images: A subjective study. D Kundu, B L Evans, Proc. IEEE Int. Conf. on Image Processing. IEEE Int. Conf. on Image essingKundu, D., Evans, B.L.: Full-reference visual quality assessment for synthetic images: A subjective study. Proc. IEEE Int. Conf. on Image Processing (2015)\n\nLow-complexity single-image super-resolution based on nonnegative neighbor embedding. M Bevilacqua, A Roumy, C Guillemot, M L Alberi-Morel, Bevilacqua, M., Roumy, A., Guillemot, C., Alberi-Morel, M.L.: Low-complexity single-image super-resolution based on nonnegative neighbor embedding. (2012)\n\nOn single image scale-up using sparserepresentations. R Zeyde, M Elad, M Protter, Curves and Surfaces. SpringerZeyde, R., Elad, M., Protter, M.: On single image scale-up using sparse- representations. In: Curves and Surfaces. Springer (2010) 711-730\n", "annotations": {"author": "[{\"end\":139,\"start\":71},{\"end\":231,\"start\":140},{\"end\":321,\"start\":232}]", "publisher": null, "author_last_name": "[{\"end\":85,\"start\":78},{\"end\":155,\"start\":150},{\"end\":242,\"start\":235}]", "author_first_name": "[{\"end\":77,\"start\":71},{\"end\":149,\"start\":140},{\"end\":234,\"start\":232}]", "author_affiliation": "[{\"end\":138,\"start\":87},{\"end\":230,\"start\":179},{\"end\":320,\"start\":269}]", "title": "[{\"end\":68,\"start\":1},{\"end\":389,\"start\":322}]", "venue": null, "abstract": "[{\"end\":1464,\"start\":434}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2337,\"start\":2334},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2374,\"start\":2371},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2410,\"start\":2407},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2474,\"start\":2471},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2476,\"start\":2474},{\"end\":2715,\"start\":2712},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2720,\"start\":2716},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3461,\"start\":3458},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3528,\"start\":3525},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3551,\"start\":3548},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3615,\"start\":3612},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3618,\"start\":3615},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":5244,\"start\":5240},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":5277,\"start\":5273},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5800,\"start\":5797},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":5802,\"start\":5800},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":5805,\"start\":5802},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5808,\"start\":5805},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5811,\"start\":5808},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5814,\"start\":5811},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5967,\"start\":5963},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":6157,\"start\":6154},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6166,\"start\":6162},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6345,\"start\":6342},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6347,\"start\":6345},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6350,\"start\":6347},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6384,\"start\":6381},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":6387,\"start\":6384},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6567,\"start\":6564},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6569,\"start\":6567},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":6592,\"start\":6588},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6676,\"start\":6673},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6707,\"start\":6703},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6764,\"start\":6761},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":7124,\"start\":7121},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7126,\"start\":7124},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7153,\"start\":7150},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7316,\"start\":7312},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":7319,\"start\":7316},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7347,\"start\":7344},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7599,\"start\":7595},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":7621,\"start\":7617},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7661,\"start\":7657},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7847,\"start\":7844},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":8009,\"start\":8006},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8044,\"start\":8040},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":8199,\"start\":8196},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":8799,\"start\":8796},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":9268,\"start\":9264},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9500,\"start\":9496},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9525,\"start\":9521},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9528,\"start\":9525},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":9554,\"start\":9550},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9557,\"start\":9554},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":9560,\"start\":9557},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9586,\"start\":9582},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9589,\"start\":9586},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":9592,\"start\":9589},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9595,\"start\":9592},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":9596,\"start\":9595},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":9631,\"start\":9627},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":9634,\"start\":9631},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9648,\"start\":9645},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":9853,\"start\":9849},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":9856,\"start\":9853},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":9859,\"start\":9856},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":10781,\"start\":10778},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":10783,\"start\":10781},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":10785,\"start\":10783},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":10787,\"start\":10785},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10790,\"start\":10787},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":12121,\"start\":12117},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":12315,\"start\":12311},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":12346,\"start\":12342},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":12434,\"start\":12430},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13415,\"start\":13412},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":13749,\"start\":13746},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":15326,\"start\":15322},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":15812,\"start\":15808},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":16220,\"start\":16216},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":16260,\"start\":16256},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16319,\"start\":16315},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":17179,\"start\":17176},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":17963,\"start\":17960},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17966,\"start\":17963},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":19144,\"start\":19140},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":20193,\"start\":20190},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":20196,\"start\":20193},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":20221,\"start\":20217},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":20224,\"start\":20221},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":21102,\"start\":21098},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":21174,\"start\":21170},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":22182,\"start\":22178},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":22374,\"start\":22370},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":22903,\"start\":22899},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":22918,\"start\":22914},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23736,\"start\":23732},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":24909,\"start\":24908},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":27387,\"start\":27384},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":27746,\"start\":27742},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":27842,\"start\":27838},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":27845,\"start\":27842},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":27848,\"start\":27845},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":27851,\"start\":27848},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":27854,\"start\":27851},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":28908,\"start\":28904},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":29135,\"start\":29132},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":29839,\"start\":29835},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":29851,\"start\":29847},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":29868,\"start\":29864},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":29907,\"start\":29903},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":30001,\"start\":29998},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":30004,\"start\":30001},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":32260,\"start\":32256}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32469,\"start\":32214},{\"attributes\":{\"id\":\"fig_1\"},\"end\":32674,\"start\":32470},{\"attributes\":{\"id\":\"fig_2\"},\"end\":32887,\"start\":32675},{\"attributes\":{\"id\":\"fig_3\"},\"end\":33110,\"start\":32888},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":33412,\"start\":33111},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":33931,\"start\":33413}]", "paragraph": "[{\"end\":2028,\"start\":1480},{\"end\":2580,\"start\":2030},{\"end\":2917,\"start\":2582},{\"end\":3070,\"start\":2919},{\"end\":3736,\"start\":3072},{\"end\":4254,\"start\":3738},{\"end\":5142,\"start\":4256},{\"end\":5545,\"start\":5144},{\"end\":5765,\"start\":5562},{\"end\":6315,\"start\":5767},{\"end\":6859,\"start\":6317},{\"end\":7320,\"start\":6861},{\"end\":7622,\"start\":7322},{\"end\":8010,\"start\":7624},{\"end\":8257,\"start\":8012},{\"end\":8291,\"start\":8259},{\"end\":8670,\"start\":8310},{\"end\":9860,\"start\":8672},{\"end\":10500,\"start\":9871},{\"end\":10791,\"start\":10555},{\"end\":11294,\"start\":10793},{\"end\":11978,\"start\":11296},{\"end\":12791,\"start\":12012},{\"end\":13215,\"start\":12793},{\"end\":14058,\"start\":13217},{\"end\":14368,\"start\":14060},{\"end\":14713,\"start\":14370},{\"end\":15289,\"start\":14715},{\"end\":15850,\"start\":15291},{\"end\":16551,\"start\":15880},{\"end\":17098,\"start\":16553},{\"end\":18245,\"start\":17157},{\"end\":18928,\"start\":18323},{\"end\":19425,\"start\":18979},{\"end\":19584,\"start\":19427},{\"end\":20277,\"start\":19610},{\"end\":20759,\"start\":20293},{\"end\":21338,\"start\":20778},{\"end\":22867,\"start\":21422},{\"end\":24539,\"start\":22869},{\"end\":24910,\"start\":24541},{\"end\":25490,\"start\":24912},{\"end\":26229,\"start\":25492},{\"end\":26772,\"start\":26231},{\"end\":27278,\"start\":26806},{\"end\":27664,\"start\":27280},{\"end\":29393,\"start\":27666},{\"end\":30478,\"start\":29395},{\"end\":31296,\"start\":30480},{\"end\":31827,\"start\":31311},{\"end\":32213,\"start\":31829}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":10554,\"start\":10501},{\"attributes\":{\"id\":\"formula_1\"},\"end\":17156,\"start\":17099},{\"attributes\":{\"id\":\"formula_2\"},\"end\":18322,\"start\":18246},{\"attributes\":{\"id\":\"formula_3\"},\"end\":18978,\"start\":18929},{\"attributes\":{\"id\":\"formula_4\"},\"end\":21421,\"start\":21339}]", "table_ref": "[{\"end\":23781,\"start\":23774},{\"end\":25905,\"start\":25898},{\"end\":26248,\"start\":26241}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1478,\"start\":1466},{\"attributes\":{\"n\":\"2\"},\"end\":5560,\"start\":5548},{\"end\":8308,\"start\":8294},{\"attributes\":{\"n\":\"3\"},\"end\":9869,\"start\":9863},{\"attributes\":{\"n\":\"3.1\"},\"end\":12010,\"start\":11981},{\"attributes\":{\"n\":\"3.2\"},\"end\":15878,\"start\":15853},{\"attributes\":{\"n\":\"3.3\"},\"end\":19608,\"start\":19587},{\"attributes\":{\"n\":\"4\"},\"end\":20291,\"start\":20280},{\"attributes\":{\"n\":\"4.1\"},\"end\":20776,\"start\":20762},{\"attributes\":{\"n\":\"4.2\"},\"end\":26804,\"start\":26775},{\"attributes\":{\"n\":\"5\"},\"end\":31309,\"start\":31299},{\"end\":32223,\"start\":32215},{\"end\":32479,\"start\":32471},{\"end\":32684,\"start\":32676},{\"end\":32897,\"start\":32889}]", "table": "[{\"end\":33412,\"start\":33173},{\"end\":33931,\"start\":33473}]", "figure_caption": "[{\"end\":32469,\"start\":32225},{\"end\":32674,\"start\":32481},{\"end\":32887,\"start\":32686},{\"end\":33110,\"start\":32899},{\"end\":33173,\"start\":33113},{\"end\":33473,\"start\":33415}]", "figure_ref": "[{\"end\":8338,\"start\":8332},{\"end\":9891,\"start\":9883},{\"end\":13733,\"start\":13727},{\"end\":16302,\"start\":16296},{\"end\":17206,\"start\":17198},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":19171,\"start\":19163},{\"end\":23012,\"start\":23004},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":23526,\"start\":23518},{\"end\":23602,\"start\":23601},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":23982,\"start\":23974},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25322,\"start\":25314},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25771,\"start\":25763},{\"end\":26107,\"start\":26099},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":30066,\"start\":30058},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":30533,\"start\":30525}]", "bib_author_first_name": "[{\"end\":33992,\"start\":33991},{\"end\":34000,\"start\":33999},{\"end\":34002,\"start\":34001},{\"end\":34009,\"start\":34008},{\"end\":34015,\"start\":34014},{\"end\":34149,\"start\":34148},{\"end\":34158,\"start\":34157},{\"end\":34166,\"start\":34165},{\"end\":34492,\"start\":34491},{\"end\":34500,\"start\":34499},{\"end\":34513,\"start\":34512},{\"end\":34710,\"start\":34709},{\"end\":34719,\"start\":34718},{\"end\":34730,\"start\":34729},{\"end\":35083,\"start\":35082},{\"end\":35092,\"start\":35091},{\"end\":35505,\"start\":35504},{\"end\":35518,\"start\":35517},{\"end\":35855,\"start\":35854},{\"end\":35867,\"start\":35866},{\"end\":35878,\"start\":35877},{\"end\":36193,\"start\":36192},{\"end\":36205,\"start\":36204},{\"end\":36214,\"start\":36213},{\"end\":36224,\"start\":36223},{\"end\":36233,\"start\":36232},{\"end\":36544,\"start\":36543},{\"end\":36546,\"start\":36545},{\"end\":36555,\"start\":36554},{\"end\":36557,\"start\":36556},{\"end\":36566,\"start\":36565},{\"end\":36793,\"start\":36792},{\"end\":36795,\"start\":36794},{\"end\":36804,\"start\":36803},{\"end\":36806,\"start\":36805},{\"end\":36815,\"start\":36814},{\"end\":37075,\"start\":37074},{\"end\":37083,\"start\":37082},{\"end\":37085,\"start\":37084},{\"end\":37092,\"start\":37091},{\"end\":37098,\"start\":37097},{\"end\":37391,\"start\":37390},{\"end\":37402,\"start\":37401},{\"end\":37413,\"start\":37412},{\"end\":37423,\"start\":37422},{\"end\":37645,\"start\":37644},{\"end\":37647,\"start\":37646},{\"end\":37659,\"start\":37658},{\"end\":37947,\"start\":37946},{\"end\":37954,\"start\":37953},{\"end\":37962,\"start\":37961},{\"end\":38127,\"start\":38126},{\"end\":38136,\"start\":38135},{\"end\":38150,\"start\":38149},{\"end\":38168,\"start\":38167},{\"end\":38178,\"start\":38177},{\"end\":38184,\"start\":38183},{\"end\":38190,\"start\":38189},{\"end\":38199,\"start\":38198},{\"end\":38201,\"start\":38200},{\"end\":38660,\"start\":38659},{\"end\":38667,\"start\":38666},{\"end\":38675,\"start\":38674},{\"end\":39082,\"start\":39081},{\"end\":39090,\"start\":39089},{\"end\":39100,\"start\":39099},{\"end\":39437,\"start\":39436},{\"end\":39448,\"start\":39447},{\"end\":39459,\"start\":39458},{\"end\":39472,\"start\":39471},{\"end\":39481,\"start\":39480},{\"end\":39490,\"start\":39489},{\"end\":39504,\"start\":39503},{\"end\":39854,\"start\":39853},{\"end\":39864,\"start\":39863},{\"end\":39876,\"start\":39875},{\"end\":40254,\"start\":40253},{\"end\":40264,\"start\":40263},{\"end\":40273,\"start\":40272},{\"end\":40609,\"start\":40608},{\"end\":40621,\"start\":40620},{\"end\":40631,\"start\":40630},{\"end\":40646,\"start\":40645},{\"end\":40971,\"start\":40970},{\"end\":40986,\"start\":40985},{\"end\":41261,\"start\":41260},{\"end\":41263,\"start\":41262},{\"end\":41271,\"start\":41270},{\"end\":41277,\"start\":41276},{\"end\":41279,\"start\":41278},{\"end\":41493,\"start\":41492},{\"end\":41502,\"start\":41501},{\"end\":41745,\"start\":41744},{\"end\":41757,\"start\":41756},{\"end\":41991,\"start\":41990},{\"end\":41998,\"start\":41997},{\"end\":42005,\"start\":42004},{\"end\":42011,\"start\":42010},{\"end\":42013,\"start\":42012},{\"end\":42285,\"start\":42284},{\"end\":42293,\"start\":42292},{\"end\":42299,\"start\":42298},{\"end\":42306,\"start\":42305},{\"end\":42308,\"start\":42307},{\"end\":42612,\"start\":42611},{\"end\":42614,\"start\":42613},{\"end\":42621,\"start\":42620},{\"end\":42901,\"start\":42900},{\"end\":42910,\"start\":42909},{\"end\":42917,\"start\":42916},{\"end\":43148,\"start\":43147},{\"end\":43150,\"start\":43149},{\"end\":43161,\"start\":43160},{\"end\":43163,\"start\":43162},{\"end\":43172,\"start\":43171},{\"end\":43174,\"start\":43173},{\"end\":43377,\"start\":43376},{\"end\":43386,\"start\":43385},{\"end\":43388,\"start\":43387},{\"end\":43397,\"start\":43396},{\"end\":43724,\"start\":43723},{\"end\":43735,\"start\":43734},{\"end\":43744,\"start\":43743},{\"end\":44034,\"start\":44033},{\"end\":44042,\"start\":44041},{\"end\":44049,\"start\":44048},{\"end\":44445,\"start\":44444},{\"end\":44452,\"start\":44451},{\"end\":44454,\"start\":44453},{\"end\":44463,\"start\":44462},{\"end\":44470,\"start\":44469},{\"end\":44472,\"start\":44471},{\"end\":44918,\"start\":44917},{\"end\":44920,\"start\":44919},{\"end\":44926,\"start\":44925},{\"end\":44928,\"start\":44927},{\"end\":45222,\"start\":45221},{\"end\":45228,\"start\":45227},{\"end\":45234,\"start\":45233},{\"end\":45704,\"start\":45703},{\"end\":45712,\"start\":45711},{\"end\":45722,\"start\":45721},{\"end\":45731,\"start\":45730},{\"end\":46062,\"start\":46061},{\"end\":46070,\"start\":46069},{\"end\":46080,\"start\":46079},{\"end\":46082,\"start\":46081},{\"end\":46091,\"start\":46090},{\"end\":46353,\"start\":46352},{\"end\":46364,\"start\":46363},{\"end\":46375,\"start\":46374},{\"end\":46651,\"start\":46650},{\"end\":46663,\"start\":46662},{\"end\":46675,\"start\":46674},{\"end\":47097,\"start\":47096},{\"end\":47099,\"start\":47098},{\"end\":47108,\"start\":47107},{\"end\":47117,\"start\":47116},{\"end\":47491,\"start\":47490},{\"end\":47502,\"start\":47501},{\"end\":47510,\"start\":47509},{\"end\":47725,\"start\":47724},{\"end\":47731,\"start\":47730},{\"end\":47740,\"start\":47739},{\"end\":47747,\"start\":47746},{\"end\":47995,\"start\":47994},{\"end\":48004,\"start\":48003},{\"end\":48227,\"start\":48226},{\"end\":48236,\"start\":48235},{\"end\":48578,\"start\":48577},{\"end\":48590,\"start\":48589},{\"end\":48887,\"start\":48886},{\"end\":48902,\"start\":48901},{\"end\":48910,\"start\":48909},{\"end\":48916,\"start\":48915},{\"end\":48926,\"start\":48925},{\"end\":48938,\"start\":48937},{\"end\":48944,\"start\":48943},{\"end\":48953,\"start\":48952},{\"end\":48965,\"start\":48964},{\"end\":48975,\"start\":48974},{\"end\":48988,\"start\":48987},{\"end\":48990,\"start\":48989},{\"end\":48998,\"start\":48997},{\"end\":49433,\"start\":49432},{\"end\":49435,\"start\":49434},{\"end\":49442,\"start\":49441},{\"end\":49711,\"start\":49710},{\"end\":49720,\"start\":49719},{\"end\":49728,\"start\":49727},{\"end\":49737,\"start\":49736},{\"end\":49739,\"start\":49738},{\"end\":49988,\"start\":49987},{\"end\":49990,\"start\":49989},{\"end\":49997,\"start\":49996},{\"end\":50006,\"start\":50005},{\"end\":50018,\"start\":50017},{\"end\":50026,\"start\":50025},{\"end\":50036,\"start\":50035},{\"end\":50047,\"start\":50046},{\"end\":50057,\"start\":50056},{\"end\":50059,\"start\":50058},{\"end\":50342,\"start\":50341},{\"end\":50352,\"start\":50351},{\"end\":50546,\"start\":50545},{\"end\":50559,\"start\":50558},{\"end\":50574,\"start\":50573},{\"end\":50797,\"start\":50796},{\"end\":50808,\"start\":50807},{\"end\":50819,\"start\":50818},{\"end\":50835,\"start\":50834},{\"end\":50844,\"start\":50843},{\"end\":50852,\"start\":50851},{\"end\":50865,\"start\":50864},{\"end\":51227,\"start\":51226},{\"end\":51235,\"start\":51234},{\"end\":51237,\"start\":51236},{\"end\":51246,\"start\":51245},{\"end\":51248,\"start\":51247},{\"end\":51258,\"start\":51257},{\"end\":51260,\"start\":51259},{\"end\":51563,\"start\":51562},{\"end\":51574,\"start\":51573},{\"end\":51587,\"start\":51586},{\"end\":51989,\"start\":51988},{\"end\":51997,\"start\":51996},{\"end\":51999,\"start\":51998},{\"end\":52236,\"start\":52235},{\"end\":52249,\"start\":52248},{\"end\":52524,\"start\":52523},{\"end\":52526,\"start\":52525},{\"end\":52536,\"start\":52535},{\"end\":52538,\"start\":52537},{\"end\":52547,\"start\":52546},{\"end\":52549,\"start\":52548},{\"end\":52860,\"start\":52859},{\"end\":52869,\"start\":52868},{\"end\":52871,\"start\":52870},{\"end\":53197,\"start\":53196},{\"end\":53211,\"start\":53210},{\"end\":53220,\"start\":53219},{\"end\":53233,\"start\":53232},{\"end\":53235,\"start\":53234},{\"end\":53461,\"start\":53460},{\"end\":53470,\"start\":53469},{\"end\":53478,\"start\":53477}]", "bib_author_last_name": "[{\"end\":33997,\"start\":33993},{\"end\":34006,\"start\":34003},{\"end\":34012,\"start\":34010},{\"end\":34020,\"start\":34016},{\"end\":34155,\"start\":34150},{\"end\":34163,\"start\":34159},{\"end\":34172,\"start\":34167},{\"end\":34497,\"start\":34493},{\"end\":34510,\"start\":34501},{\"end\":34521,\"start\":34514},{\"end\":34716,\"start\":34711},{\"end\":34727,\"start\":34720},{\"end\":34737,\"start\":34731},{\"end\":35089,\"start\":35084},{\"end\":35099,\"start\":35093},{\"end\":35515,\"start\":35506},{\"end\":35526,\"start\":35519},{\"end\":35864,\"start\":35856},{\"end\":35875,\"start\":35868},{\"end\":35888,\"start\":35879},{\"end\":36202,\"start\":36194},{\"end\":36211,\"start\":36206},{\"end\":36221,\"start\":36215},{\"end\":36230,\"start\":36225},{\"end\":36240,\"start\":36234},{\"end\":36552,\"start\":36547},{\"end\":36563,\"start\":36558},{\"end\":36573,\"start\":36567},{\"end\":36801,\"start\":36796},{\"end\":36812,\"start\":36807},{\"end\":36822,\"start\":36816},{\"end\":37080,\"start\":37076},{\"end\":37089,\"start\":37086},{\"end\":37095,\"start\":37093},{\"end\":37103,\"start\":37099},{\"end\":37399,\"start\":37392},{\"end\":37410,\"start\":37403},{\"end\":37420,\"start\":37414},{\"end\":37429,\"start\":37424},{\"end\":37656,\"start\":37648},{\"end\":37669,\"start\":37660},{\"end\":37951,\"start\":37948},{\"end\":37959,\"start\":37955},{\"end\":37966,\"start\":37963},{\"end\":38133,\"start\":38128},{\"end\":38147,\"start\":38137},{\"end\":38165,\"start\":38151},{\"end\":38175,\"start\":38169},{\"end\":38181,\"start\":38179},{\"end\":38187,\"start\":38185},{\"end\":38196,\"start\":38191},{\"end\":38206,\"start\":38202},{\"end\":38664,\"start\":38661},{\"end\":38672,\"start\":38668},{\"end\":38679,\"start\":38676},{\"end\":39087,\"start\":39083},{\"end\":39097,\"start\":39091},{\"end\":39106,\"start\":39101},{\"end\":39445,\"start\":39438},{\"end\":39456,\"start\":39449},{\"end\":39469,\"start\":39460},{\"end\":39478,\"start\":39473},{\"end\":39487,\"start\":39482},{\"end\":39501,\"start\":39491},{\"end\":39511,\"start\":39505},{\"end\":39861,\"start\":39855},{\"end\":39873,\"start\":39865},{\"end\":39882,\"start\":39877},{\"end\":40261,\"start\":40255},{\"end\":40270,\"start\":40265},{\"end\":40287,\"start\":40274},{\"end\":40618,\"start\":40610},{\"end\":40628,\"start\":40622},{\"end\":40643,\"start\":40632},{\"end\":40655,\"start\":40647},{\"end\":40983,\"start\":40972},{\"end\":40991,\"start\":40987},{\"end\":41268,\"start\":41264},{\"end\":41274,\"start\":41272},{\"end\":41284,\"start\":41280},{\"end\":41499,\"start\":41494},{\"end\":41508,\"start\":41503},{\"end\":41754,\"start\":41746},{\"end\":41764,\"start\":41758},{\"end\":41995,\"start\":41992},{\"end\":42002,\"start\":41999},{\"end\":42008,\"start\":42006},{\"end\":42018,\"start\":42014},{\"end\":42290,\"start\":42286},{\"end\":42296,\"start\":42294},{\"end\":42303,\"start\":42300},{\"end\":42313,\"start\":42309},{\"end\":42618,\"start\":42615},{\"end\":42626,\"start\":42622},{\"end\":42907,\"start\":42902},{\"end\":42914,\"start\":42911},{\"end\":42920,\"start\":42918},{\"end\":43158,\"start\":43151},{\"end\":43169,\"start\":43164},{\"end\":43182,\"start\":43175},{\"end\":43383,\"start\":43378},{\"end\":43394,\"start\":43389},{\"end\":43403,\"start\":43398},{\"end\":43732,\"start\":43725},{\"end\":43741,\"start\":43736},{\"end\":43750,\"start\":43745},{\"end\":44039,\"start\":44035},{\"end\":44046,\"start\":44043},{\"end\":44055,\"start\":44050},{\"end\":44449,\"start\":44446},{\"end\":44460,\"start\":44455},{\"end\":44467,\"start\":44464},{\"end\":44477,\"start\":44473},{\"end\":44923,\"start\":44921},{\"end\":44935,\"start\":44929},{\"end\":45225,\"start\":45223},{\"end\":45231,\"start\":45229},{\"end\":45243,\"start\":45235},{\"end\":45709,\"start\":45705},{\"end\":45719,\"start\":45713},{\"end\":45728,\"start\":45723},{\"end\":45734,\"start\":45732},{\"end\":46067,\"start\":46063},{\"end\":46077,\"start\":46071},{\"end\":46088,\"start\":46083},{\"end\":46094,\"start\":46092},{\"end\":46361,\"start\":46354},{\"end\":46372,\"start\":46365},{\"end\":46384,\"start\":46376},{\"end\":46660,\"start\":46652},{\"end\":46672,\"start\":46664},{\"end\":46683,\"start\":46676},{\"end\":47105,\"start\":47100},{\"end\":47114,\"start\":47109},{\"end\":47123,\"start\":47118},{\"end\":47499,\"start\":47492},{\"end\":47507,\"start\":47503},{\"end\":47519,\"start\":47511},{\"end\":47728,\"start\":47726},{\"end\":47737,\"start\":47732},{\"end\":47744,\"start\":47741},{\"end\":47751,\"start\":47748},{\"end\":48001,\"start\":47996},{\"end\":48011,\"start\":48005},{\"end\":48233,\"start\":48228},{\"end\":48244,\"start\":48237},{\"end\":48587,\"start\":48579},{\"end\":48600,\"start\":48591},{\"end\":48899,\"start\":48888},{\"end\":48907,\"start\":48903},{\"end\":48913,\"start\":48911},{\"end\":48923,\"start\":48917},{\"end\":48935,\"start\":48927},{\"end\":48941,\"start\":48939},{\"end\":48950,\"start\":48945},{\"end\":48962,\"start\":48954},{\"end\":48972,\"start\":48966},{\"end\":48985,\"start\":48976},{\"end\":48995,\"start\":48991},{\"end\":49006,\"start\":48999},{\"end\":49439,\"start\":49436},{\"end\":49449,\"start\":49443},{\"end\":49717,\"start\":49712},{\"end\":49725,\"start\":49721},{\"end\":49734,\"start\":49729},{\"end\":49745,\"start\":49740},{\"end\":49994,\"start\":49991},{\"end\":50003,\"start\":49998},{\"end\":50015,\"start\":50007},{\"end\":50023,\"start\":50019},{\"end\":50033,\"start\":50027},{\"end\":50044,\"start\":50037},{\"end\":50054,\"start\":50048},{\"end\":50067,\"start\":50060},{\"end\":50349,\"start\":50343},{\"end\":50355,\"start\":50353},{\"end\":50556,\"start\":50547},{\"end\":50571,\"start\":50560},{\"end\":50582,\"start\":50575},{\"end\":50805,\"start\":50798},{\"end\":50816,\"start\":50809},{\"end\":50832,\"start\":50820},{\"end\":50841,\"start\":50836},{\"end\":50849,\"start\":50845},{\"end\":50862,\"start\":50853},{\"end\":50875,\"start\":50866},{\"end\":51232,\"start\":51228},{\"end\":51243,\"start\":51238},{\"end\":51255,\"start\":51249},{\"end\":51271,\"start\":51261},{\"end\":51571,\"start\":51564},{\"end\":51584,\"start\":51575},{\"end\":51596,\"start\":51588},{\"end\":51994,\"start\":51990},{\"end\":52005,\"start\":52000},{\"end\":52246,\"start\":52237},{\"end\":52258,\"start\":52250},{\"end\":52533,\"start\":52527},{\"end\":52544,\"start\":52539},{\"end\":52555,\"start\":52550},{\"end\":52866,\"start\":52861},{\"end\":52877,\"start\":52872},{\"end\":53208,\"start\":53198},{\"end\":53217,\"start\":53212},{\"end\":53230,\"start\":53221},{\"end\":53248,\"start\":53236},{\"end\":53467,\"start\":53462},{\"end\":53475,\"start\":53471},{\"end\":53486,\"start\":53479}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":34127,\"start\":33933},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":64884},\"end\":34433,\"start\":34129},{\"attributes\":{\"id\":\"b2\"},\"end\":34632,\"start\":34435},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":2255738},\"end\":34972,\"start\":34634},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":102496818},\"end\":35442,\"start\":34974},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":206593185},\"end\":35852,\"start\":35444},{\"attributes\":{\"doi\":\"arXiv:1312.6034\",\"id\":\"b6\"},\"end\":36190,\"start\":35854},{\"attributes\":{\"doi\":\"arXiv:1506.06579\",\"id\":\"b7\"},\"end\":36486,\"start\":36192},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":8643626},\"end\":36790,\"start\":36488},{\"attributes\":{\"doi\":\"arXiv:1508.06576\",\"id\":\"b9\"},\"end\":37006,\"start\":36792},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":18874645},\"end\":37294,\"start\":37008},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":206765110},\"end\":37642,\"start\":37296},{\"attributes\":{\"doi\":\"arXiv:1306.2795\",\"id\":\"b12\"},\"end\":37886,\"start\":37644},{\"attributes\":{\"doi\":\"arXiv:1505.04366\",\"id\":\"b13\"},\"end\":38124,\"start\":37888},{\"attributes\":{\"id\":\"b14\"},\"end\":38582,\"start\":38126},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":13153},\"end\":39024,\"start\":38584},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":9363077},\"end\":39434,\"start\":39026},{\"attributes\":{\"doi\":\"arXiv:1312.6199\",\"id\":\"b17\"},\"end\":39756,\"start\":39436},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":206592585},\"end\":40185,\"start\":39758},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":18618962},\"end\":40558,\"start\":40187},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":11891893},\"end\":40968,\"start\":40560},{\"attributes\":{\"doi\":\"arXiv:1506.02753\",\"id\":\"b21\"},\"end\":41214,\"start\":40970},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":6194422},\"end\":41446,\"start\":41216},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":4834546},\"end\":41690,\"start\":41448},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":1781727},\"end\":41935,\"start\":41692},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":16113001},\"end\":42253,\"start\":41937},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":8093350},\"end\":42487,\"start\":42255},{\"attributes\":{\"id\":\"b27\"},\"end\":42839,\"start\":42489},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":13248597},\"end\":43077,\"start\":42841},{\"attributes\":{\"id\":\"b29\"},\"end\":43329,\"start\":43079},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":2846430},\"end\":43683,\"start\":43331},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":6024639},\"end\":43965,\"start\":43685},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":11988955},\"end\":44395,\"start\":43967},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":16372893},\"end\":44842,\"start\":44397},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":10298565},\"end\":45102,\"start\":44844},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":14152899},\"end\":45631,\"start\":45104},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":10349990},\"end\":45991,\"start\":45633},{\"attributes\":{\"id\":\"b37\"},\"end\":46277,\"start\":45993},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":9751499},\"end\":46583,\"start\":46279},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":7036556},\"end\":47031,\"start\":46585},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":8282555},\"end\":47394,\"start\":47033},{\"attributes\":{\"doi\":\"arXiv:1511.06434\",\"id\":\"b41\"},\"end\":47722,\"start\":47396},{\"attributes\":{\"doi\":\"arXiv:1512.03385\",\"id\":\"b42\"},\"end\":47950,\"start\":47724},{\"attributes\":{\"id\":\"b43\"},\"end\":48130,\"start\":47952},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":5808102},\"end\":48575,\"start\":48132},{\"attributes\":{\"doi\":\"arXiv:1409.1556\",\"id\":\"b45\"},\"end\":48833,\"start\":48577},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":2930547},\"end\":49327,\"start\":48835},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":18582077},\"end\":49647,\"start\":49329},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":13471181},\"end\":49942,\"start\":49649},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":14113767},\"end\":50295,\"start\":49944},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b50\"},\"end\":50487,\"start\":50297},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":14365368},\"end\":50794,\"start\":50489},{\"attributes\":{\"doi\":\"arXiv:1410.0759\",\"id\":\"b52\"},\"end\":51132,\"start\":50796},{\"attributes\":{\"id\":\"b53\"},\"end\":51486,\"start\":51134},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":17017354},\"end\":51877,\"start\":51488},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":2492436},\"end\":52172,\"start\":51879},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":62732555},\"end\":52416,\"start\":52174},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":9247572},\"end\":52774,\"start\":52418},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":16008641},\"end\":53108,\"start\":52776},{\"attributes\":{\"id\":\"b59\"},\"end\":53404,\"start\":53110},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":2356330},\"end\":53655,\"start\":53406}]", "bib_title": "[{\"end\":34146,\"start\":34129},{\"end\":34707,\"start\":34634},{\"end\":35080,\"start\":34974},{\"end\":35502,\"start\":35444},{\"end\":36541,\"start\":36488},{\"end\":37072,\"start\":37008},{\"end\":37388,\"start\":37296},{\"end\":38657,\"start\":38584},{\"end\":39079,\"start\":39026},{\"end\":39851,\"start\":39758},{\"end\":40251,\"start\":40187},{\"end\":40606,\"start\":40560},{\"end\":41258,\"start\":41216},{\"end\":41490,\"start\":41448},{\"end\":41742,\"start\":41692},{\"end\":41988,\"start\":41937},{\"end\":42282,\"start\":42255},{\"end\":42609,\"start\":42489},{\"end\":42898,\"start\":42841},{\"end\":43145,\"start\":43079},{\"end\":43374,\"start\":43331},{\"end\":43721,\"start\":43685},{\"end\":44031,\"start\":43967},{\"end\":44442,\"start\":44397},{\"end\":44915,\"start\":44844},{\"end\":45219,\"start\":45104},{\"end\":45701,\"start\":45633},{\"end\":46059,\"start\":45993},{\"end\":46350,\"start\":46279},{\"end\":46648,\"start\":46585},{\"end\":47094,\"start\":47033},{\"end\":48224,\"start\":48132},{\"end\":48884,\"start\":48835},{\"end\":49430,\"start\":49329},{\"end\":49708,\"start\":49649},{\"end\":49985,\"start\":49944},{\"end\":50543,\"start\":50489},{\"end\":51224,\"start\":51134},{\"end\":51560,\"start\":51488},{\"end\":51986,\"start\":51879},{\"end\":52233,\"start\":52174},{\"end\":52521,\"start\":52418},{\"end\":52857,\"start\":52776},{\"end\":53458,\"start\":53406}]", "bib_author": "[{\"end\":33999,\"start\":33991},{\"end\":34008,\"start\":33999},{\"end\":34014,\"start\":34008},{\"end\":34022,\"start\":34014},{\"end\":34157,\"start\":34148},{\"end\":34165,\"start\":34157},{\"end\":34174,\"start\":34165},{\"end\":34499,\"start\":34491},{\"end\":34512,\"start\":34499},{\"end\":34523,\"start\":34512},{\"end\":34718,\"start\":34709},{\"end\":34729,\"start\":34718},{\"end\":34739,\"start\":34729},{\"end\":35091,\"start\":35082},{\"end\":35101,\"start\":35091},{\"end\":35517,\"start\":35504},{\"end\":35528,\"start\":35517},{\"end\":35866,\"start\":35854},{\"end\":35877,\"start\":35866},{\"end\":35890,\"start\":35877},{\"end\":36204,\"start\":36192},{\"end\":36213,\"start\":36204},{\"end\":36223,\"start\":36213},{\"end\":36232,\"start\":36223},{\"end\":36242,\"start\":36232},{\"end\":36554,\"start\":36543},{\"end\":36565,\"start\":36554},{\"end\":36575,\"start\":36565},{\"end\":36803,\"start\":36792},{\"end\":36814,\"start\":36803},{\"end\":36824,\"start\":36814},{\"end\":37082,\"start\":37074},{\"end\":37091,\"start\":37082},{\"end\":37097,\"start\":37091},{\"end\":37105,\"start\":37097},{\"end\":37401,\"start\":37390},{\"end\":37412,\"start\":37401},{\"end\":37422,\"start\":37412},{\"end\":37431,\"start\":37422},{\"end\":37658,\"start\":37644},{\"end\":37671,\"start\":37658},{\"end\":37953,\"start\":37946},{\"end\":37961,\"start\":37953},{\"end\":37968,\"start\":37961},{\"end\":38135,\"start\":38126},{\"end\":38149,\"start\":38135},{\"end\":38167,\"start\":38149},{\"end\":38177,\"start\":38167},{\"end\":38183,\"start\":38177},{\"end\":38189,\"start\":38183},{\"end\":38198,\"start\":38189},{\"end\":38208,\"start\":38198},{\"end\":38666,\"start\":38659},{\"end\":38674,\"start\":38666},{\"end\":38681,\"start\":38674},{\"end\":39089,\"start\":39081},{\"end\":39099,\"start\":39089},{\"end\":39108,\"start\":39099},{\"end\":39447,\"start\":39436},{\"end\":39458,\"start\":39447},{\"end\":39471,\"start\":39458},{\"end\":39480,\"start\":39471},{\"end\":39489,\"start\":39480},{\"end\":39503,\"start\":39489},{\"end\":39513,\"start\":39503},{\"end\":39863,\"start\":39853},{\"end\":39875,\"start\":39863},{\"end\":39884,\"start\":39875},{\"end\":40263,\"start\":40253},{\"end\":40272,\"start\":40263},{\"end\":40289,\"start\":40272},{\"end\":40620,\"start\":40608},{\"end\":40630,\"start\":40620},{\"end\":40645,\"start\":40630},{\"end\":40657,\"start\":40645},{\"end\":40985,\"start\":40970},{\"end\":40993,\"start\":40985},{\"end\":41270,\"start\":41260},{\"end\":41276,\"start\":41270},{\"end\":41286,\"start\":41276},{\"end\":41501,\"start\":41492},{\"end\":41510,\"start\":41501},{\"end\":41756,\"start\":41744},{\"end\":41766,\"start\":41756},{\"end\":41997,\"start\":41990},{\"end\":42004,\"start\":41997},{\"end\":42010,\"start\":42004},{\"end\":42020,\"start\":42010},{\"end\":42292,\"start\":42284},{\"end\":42298,\"start\":42292},{\"end\":42305,\"start\":42298},{\"end\":42315,\"start\":42305},{\"end\":42620,\"start\":42611},{\"end\":42628,\"start\":42620},{\"end\":42909,\"start\":42900},{\"end\":42916,\"start\":42909},{\"end\":42922,\"start\":42916},{\"end\":43160,\"start\":43147},{\"end\":43171,\"start\":43160},{\"end\":43184,\"start\":43171},{\"end\":43385,\"start\":43376},{\"end\":43396,\"start\":43385},{\"end\":43405,\"start\":43396},{\"end\":43734,\"start\":43723},{\"end\":43743,\"start\":43734},{\"end\":43752,\"start\":43743},{\"end\":44041,\"start\":44033},{\"end\":44048,\"start\":44041},{\"end\":44057,\"start\":44048},{\"end\":44451,\"start\":44444},{\"end\":44462,\"start\":44451},{\"end\":44469,\"start\":44462},{\"end\":44479,\"start\":44469},{\"end\":44925,\"start\":44917},{\"end\":44937,\"start\":44925},{\"end\":45227,\"start\":45221},{\"end\":45233,\"start\":45227},{\"end\":45245,\"start\":45233},{\"end\":45711,\"start\":45703},{\"end\":45721,\"start\":45711},{\"end\":45730,\"start\":45721},{\"end\":45736,\"start\":45730},{\"end\":46069,\"start\":46061},{\"end\":46079,\"start\":46069},{\"end\":46090,\"start\":46079},{\"end\":46096,\"start\":46090},{\"end\":46363,\"start\":46352},{\"end\":46374,\"start\":46363},{\"end\":46386,\"start\":46374},{\"end\":46662,\"start\":46650},{\"end\":46674,\"start\":46662},{\"end\":46685,\"start\":46674},{\"end\":47107,\"start\":47096},{\"end\":47116,\"start\":47107},{\"end\":47125,\"start\":47116},{\"end\":47501,\"start\":47490},{\"end\":47509,\"start\":47501},{\"end\":47521,\"start\":47509},{\"end\":47730,\"start\":47724},{\"end\":47739,\"start\":47730},{\"end\":47746,\"start\":47739},{\"end\":47753,\"start\":47746},{\"end\":48003,\"start\":47994},{\"end\":48013,\"start\":48003},{\"end\":48235,\"start\":48226},{\"end\":48246,\"start\":48235},{\"end\":48589,\"start\":48577},{\"end\":48602,\"start\":48589},{\"end\":48901,\"start\":48886},{\"end\":48909,\"start\":48901},{\"end\":48915,\"start\":48909},{\"end\":48925,\"start\":48915},{\"end\":48937,\"start\":48925},{\"end\":48943,\"start\":48937},{\"end\":48952,\"start\":48943},{\"end\":48964,\"start\":48952},{\"end\":48974,\"start\":48964},{\"end\":48987,\"start\":48974},{\"end\":48997,\"start\":48987},{\"end\":49008,\"start\":48997},{\"end\":49441,\"start\":49432},{\"end\":49451,\"start\":49441},{\"end\":49719,\"start\":49710},{\"end\":49727,\"start\":49719},{\"end\":49736,\"start\":49727},{\"end\":49747,\"start\":49736},{\"end\":49996,\"start\":49987},{\"end\":50005,\"start\":49996},{\"end\":50017,\"start\":50005},{\"end\":50025,\"start\":50017},{\"end\":50035,\"start\":50025},{\"end\":50046,\"start\":50035},{\"end\":50056,\"start\":50046},{\"end\":50069,\"start\":50056},{\"end\":50351,\"start\":50341},{\"end\":50357,\"start\":50351},{\"end\":50558,\"start\":50545},{\"end\":50573,\"start\":50558},{\"end\":50584,\"start\":50573},{\"end\":50807,\"start\":50796},{\"end\":50818,\"start\":50807},{\"end\":50834,\"start\":50818},{\"end\":50843,\"start\":50834},{\"end\":50851,\"start\":50843},{\"end\":50864,\"start\":50851},{\"end\":50877,\"start\":50864},{\"end\":51234,\"start\":51226},{\"end\":51245,\"start\":51234},{\"end\":51257,\"start\":51245},{\"end\":51273,\"start\":51257},{\"end\":51573,\"start\":51562},{\"end\":51586,\"start\":51573},{\"end\":51598,\"start\":51586},{\"end\":51996,\"start\":51988},{\"end\":52007,\"start\":51996},{\"end\":52248,\"start\":52235},{\"end\":52260,\"start\":52248},{\"end\":52535,\"start\":52523},{\"end\":52546,\"start\":52535},{\"end\":52557,\"start\":52546},{\"end\":52868,\"start\":52859},{\"end\":52879,\"start\":52868},{\"end\":53210,\"start\":53196},{\"end\":53219,\"start\":53210},{\"end\":53232,\"start\":53219},{\"end\":53250,\"start\":53232},{\"end\":53469,\"start\":53460},{\"end\":53477,\"start\":53469},{\"end\":53488,\"start\":53477}]", "bib_venue": "[{\"end\":33989,\"start\":33933},{\"end\":34241,\"start\":34174},{\"end\":34489,\"start\":34435},{\"end\":34788,\"start\":34739},{\"end\":35168,\"start\":35101},{\"end\":35606,\"start\":35528},{\"end\":35998,\"start\":35905},{\"end\":36314,\"start\":36258},{\"end\":36627,\"start\":36575},{\"end\":36876,\"start\":36840},{\"end\":37125,\"start\":37105},{\"end\":37451,\"start\":37431},{\"end\":37743,\"start\":37686},{\"end\":37944,\"start\":37888},{\"end\":38335,\"start\":38208},{\"end\":38758,\"start\":38681},{\"end\":39185,\"start\":39108},{\"end\":39568,\"start\":39528},{\"end\":39955,\"start\":39884},{\"end\":40354,\"start\":40289},{\"end\":40724,\"start\":40657},{\"end\":41069,\"start\":41009},{\"end\":41306,\"start\":41286},{\"end\":41554,\"start\":41510},{\"end\":41800,\"start\":41766},{\"end\":42059,\"start\":42020},{\"end\":42343,\"start\":42315},{\"end\":42648,\"start\":42628},{\"end\":42942,\"start\":42922},{\"end\":43188,\"start\":43184},{\"end\":43444,\"start\":43405},{\"end\":43789,\"start\":43752},{\"end\":44134,\"start\":44057},{\"end\":44532,\"start\":44479},{\"end\":44957,\"start\":44937},{\"end\":45322,\"start\":45245},{\"end\":45775,\"start\":45736},{\"end\":46116,\"start\":46096},{\"end\":46406,\"start\":46386},{\"end\":46762,\"start\":46685},{\"end\":47196,\"start\":47125},{\"end\":47488,\"start\":47396},{\"end\":47813,\"start\":47769},{\"end\":47992,\"start\":47952},{\"end\":48314,\"start\":48246},{\"end\":48683,\"start\":48617},{\"end\":49055,\"start\":49008},{\"end\":49471,\"start\":49451},{\"end\":49772,\"start\":49747},{\"end\":50089,\"start\":50069},{\"end\":50339,\"start\":50297},{\"end\":50632,\"start\":50584},{\"end\":50937,\"start\":50892},{\"end\":51293,\"start\":51273},{\"end\":51668,\"start\":51598},{\"end\":52011,\"start\":52007},{\"end\":52279,\"start\":52260},{\"end\":52577,\"start\":52557},{\"end\":52920,\"start\":52879},{\"end\":53194,\"start\":53110},{\"end\":53507,\"start\":53488},{\"end\":34295,\"start\":34243},{\"end\":35222,\"start\":35170},{\"end\":35671,\"start\":35608},{\"end\":38822,\"start\":38760},{\"end\":39249,\"start\":39187},{\"end\":40778,\"start\":40726},{\"end\":43449,\"start\":43446},{\"end\":44198,\"start\":44136},{\"end\":44574,\"start\":44534},{\"end\":45386,\"start\":45324},{\"end\":46826,\"start\":46764},{\"end\":48369,\"start\":48316},{\"end\":52953,\"start\":52922}]"}}}, "year": 2023, "month": 12, "day": 17}