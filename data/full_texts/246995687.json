{"id": 246995687, "updated": "2023-07-09 17:57:44.461", "metadata": {"title": "CirFix: automatically repairing defects in hardware design code", "authors": "[{\"first\":\"Hammad\",\"last\":\"Ahmad\",\"middle\":[]},{\"first\":\"Yu\",\"last\":\"Huang\",\"middle\":[]},{\"first\":\"Westley\",\"last\":\"Weimer\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 27th ACM International Conference on Architectural Support for Programming Languages and Operating Systems", "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "This paper presents CirFix, a framework for automatically repairing defects in hardware designs implemented in languages like Verilog. We propose a novel fault localization approach based on assignments to wires and registers, and a fitness function tailored to the hardware domain to bridge the gap between software-level automated program repair and hardware descriptions. We also present a benchmark suite of 32 defect scenarios corresponding to a variety of hardware projects. Overall, CirFix produces plausible repairs for 21/32 and correct repairs for 16/32 of the defect scenarios. This repair rate is comparable to that of successful program repair approaches for software, indicating CirFix is effective at bringing over the benefits of automated program repair to the hardware domain for the first time.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/asplos/Ahmad0W22", "doi": "10.1145/3503222.3507763"}}, "content": {"source": {"pdf_hash": "5aa97a10283b2036fbf3f6ad007bf731b59a4f2b", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "aa3ac8bbfe5920245d92d9c108591bfbe11d6547", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/5aa97a10283b2036fbf3f6ad007bf731b59a4f2b.txt", "contents": "\nCirFix: Auto-matically Repairing Defects in Hardware Design Code\nACMCopyright ACMFebruary 28 \u015b March 4, 2022\n\nHammad Ahmad hammada@umich.edu \nYu Huang \nWestley Weimer weimerw@umich.edu \nHammad Ahmad \nYu Huang \nWestley Weimer \n\nUniversity of Michigan\nAnn Arbor Ann ArborMichiganUSA\n\n\nUniversity of Michigan\nAnn Arbor Ann ArborMichiganUSA\n\n\nUniversity of Michigan\nAnn Arbor Ann ArborMichiganUSA\n\nCirFix: Auto-matically Repairing Defects in Hardware Design Code\n\nProceedings of the 27th ACM International Conference on Architectural Support for Pro-gramming Languages and Operating Systems (ASPLOS '22)\nthe 27th ACM International Conference on Architectural Support for Pro-gramming Languages and Operating Systems (ASPLOS '22)Lausanne, Switzerland; New York, NY, USAACM142022February 28 \u015b March 4, 202210.1145/3503222.3507763\nThis paper presents CirFix, a framework for automatically repairing defects in hardware designs implemented in languages like Verilog. We propose a novel fault localization approach based on assignments to wires and registers, and a fitness function tailored to the hardware domain to bridge the gap between software-level automated program repair and hardware descriptions. We also present a benchmark suite of 32 defect scenarios corresponding to a variety of hardware projects. Overall, CirFix produces plausible repairs for 21/32 and correct repairs for 16/32 of the defect scenarios. This repair rate is comparable to that of successful program repair approaches for software, indicating CirFix is effective at bringing over the benefits of automated program repair to the hardware domain for the first time.CCS CONCEPTS\u00b7 Hardware \u2192 High-level and register-transfer level synthesis; Bug fixing (hardware); \u00b7 Software and its engineering \u2192 Search-based software engineering. KEYWORDS automated program repair, hardware designs, HDL benchmark ACM Reference Format:\n\nINTRODUCTION\n\nRecent increases in the complexity of hardware designs have challenged the ability of developers to find and repair defects in circuit descriptions [68]. While significant effort has been devoted to efficiently verifying functional correctness in hardware design descriptions, relatively little work has been done in patching defects in such descriptions automatically. By and large, debugging and repairing hardware designs remains a very expensive and time-consuming Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. ASPLOS ' [20]. Indeed, recent functional and security vulnerabilities due to defects at the hardware design level have led to expensive consequences [8,43,83]. To reduce the cost and improve the maintenance of hardware designs, a solution needs to not only precisely identify sources of defects in real-world off-the-shelf hardware descriptions, but also automatically produce repairs implementing correct functionality of the circuit designs that can then be shown to developers for validation before moving on to the synthesis phase. Additionally, we desire a solution that applies directly to both the behavioral aspects (i.e., higher-level descriptions of circuit functionality) and the register-transfer level (RTL) aspects (i.e., lower-level descriptions) of circuit designs, and makes use of readily-available resources that are part of hardware design to validate proposed repairs.\n\nPrevious work has attempted to address this problem but may not satisfy all of these characteristics of a desired solution. For instance, some techniques automatically localize defects in design source code but suffer from high false positive rates [29,65]. Other approaches for automatic error diagnosis and correction require formal specifications to conduct design verification [12], which usually do not scale to large designs. Furthermore, previous work does not operate on behavioral-level descriptions of hardware circuits [13,49]. On the other hand, in the realm of software, significant research effort focuses on repairing bugs automatically [21,46,58]. Automated program repair (APR) algorithms fix defects in software by producing patches that pass all test cases while retaining required functionality. Traditional APR for software employs fault localization techniques to implicate faulty code, and such techniques are often crucial to the success of program repair.\n\nWhile both software programs and hardware description languages (HDLs) share programming concepts like expressions, statements, and control structures, suggesting the possibility of repurposing software repair techniques to hardware designs, we highlight two key differences between the two domains: (1) Software programs are typically based around a serial execution model, where one line of code executes before the next. By contrast, HDL designs are inherently parallel and often include non-sequential statements, since separate portions of hardware can operate simultaneously.\n\n(2) Software programs usually use test cases to evaluate functional correctness, where individual test cases may pass or fail depending on the quality of the software. HDL designs, on the other hand, use testbenches [50], which are programs with documented and repeatable sets of stimuli, to simulate behaviors of a device under test (DUT). In both academia and industry, the majority of digital hardware design is done using such HDLs.\n\nWe present two key insights to bridge the gap between wellestablished software repair techniques and hardware designs. We first hypothesize that while traditional spectrum-based fault localization approaches do not apply to hardware designs that feature a more parallel structure [26], dataflow-based fault localization (e.g., [5]) approaches work well in this domain. Second, we hypothesize that a traditional hardware testbench can be instrumented to admit observations for candidate patches that guide the search for APR.\n\nLeveraging these insights, we present CirFix, a framework for automatically repairing defects in hardware designs implemented in languages like Verilog, one of the most popular HDLs [34]. CirFix uses genetic programming (GP), an iterative stochastic search technique, to find candidate repairs for defects in hardware designs. CirFix also makes use of readily-available artifacts in the hardware design process (e.g., testbenches, simulation environments) to diagnose and repair defects in a circuit description. We propose an approach to guide the search for a repair by instrumenting hardware testbenches to record the values of output wires at specified time intervals during a simulation of the circuit design. CirFix then performs a bit-level comparison of output wires against information for expected behavior to assess functional correctness of candidate repairs. CirFix employs a fixed point analysis of assignments made to internal registers and output wires to implicate statements and reduce the search space, enabling our approach to scale to large circuit designs in industry.\n\nWe also present a benchmark suite of 32 defect scenarios [39] based on three hardware experts \u00d0 two from industry and one from academia \u00d0 asked to transplant bugs they observed in real life into 11 different Verilog projects. CirFix can produce plausible repairs for 21 out of the 32 Verilog defect scenarios within reasonable resource bounds, of which 16 are deemed correct upon manual inspection.\n\nThe main contributions of this paper are:\n\n\u2022 CirFix, a hardware-design automated repair algorithm.\n\n\u2022 A novel dataflow-based fault localization approach for HDL descriptions to implicate faulty design code. \u2022 A novel approach to guide the search for a hardware design repair that is compatible with the testbench-based hardware testing process. \u2022 A new benchmark suite of 32 scenarios, based on proprietary bugs but available in 11 open Verilog projects. \u2022 A systematic evaluation of CirFix on our benchmark suite.\n\nCirFix was able to correctly repair 16 out of the 32 Verilog defects under consideration.\n\n\nMOTIVATING EXAMPLE\n\nIn this section, we use an example defect from a faulty 4-bit counter with an overflow bit, implemented in Verilog, to motivate the fault localization and candidate evaluation approaches used by CirFix. The main block of the source code is shown in Figure 1a, with the corresponding testbench in Figure 1b. The circuit design uses wires enable and reset to increment (lines 35\u015b37) and reset (lines 30\u015b33) the counter respectively. Incrementing the counter when it has a binary value of 4'b1111 results in the overflow bit being set to true (lines 39\u015b41). This implementation incorrectly manages the overflow bit: the if-statement at line 30 is missing an assignment that resets overflow_out. Such defects can have serious consequences \u00d0 integer overflow errors can be leveraged into significant security exploits [14]. For the purposes of this work, there are two key hardware design concepts that we highlight for a general audience: circuit synchronization and parallelism.\n\nCircuit synchronization. The main block of the circuit design code shows an always block (line 27, Figure 1a) that executes repeatedly until the simulation stops. The execution of such blocks can only be triggered by changes to wires in the sensitivity list that follows the always keyword. Nearly every digital circuit design includes a clock signal (line 50, Figure 1b) that oscillates between a high and a low state (denoted by events posedge and negedge respectively); circuits rely on clock signals to know when and/or how to execute their programmed actions. A clock cycle is the period of time it takes for the clock signal to oscillate from high to low and back to a high state. For the 4-bit counter in Figure 1a, the wire clk (denoting the clock signal) is the only wire in the always block's sensitivity list (see line 27), and lines 28\u015b42 are executed every time that wire reaches a high state.\n\nParallelism. A key property of HDL designs not immediately apparent in Figure 1 is that parts of the design code typically execute in parallel. When a design is realized into actual hardware, individual components run all the time. Indeed, every statement in a Verilog design not inside an explicit sequential block of code exhibits concurrency. For instance, for the 4-bit counter in Figure 1a, an implementation managing the overflow bit correctly would include two assignments to counter_out and overflow_out (on lines 31 and 32 respectively) that happen at the same time when reset is true.\n\nTo automatically repair the design code in Figure 1a, CirFix needs to first answer, for the original design and each candidate repair: what part of the circuit, if any, is behaving incorrectly? Unfortunately, standard spectrum-based fault localization tools commonly used by APR for software do not work for HDL designs that exhibit parallelism. To overcome this challenge, we propose a novel fault localization approach based on assignments to wires and registers. We first instrument the existing testbench to record output values at given time intervals. This instrumented testbench, when used to simulate the design, reports the output values from the circuit, which can be compared against expected output. Any mismatch between expected and actual output serves as the starting point for our fault localization. For the 4-bit counter in Figure 1, the testbench waits for 10 units of time before sending the reset signal (line 65, Figure 1b \u00d0 cf. stimuli for unit tests in software). The procedural block within the testbench that was waiting on the reset signal (line 55, Figure 1b) then sets reset to true upon the next falling edge of the clock signal. This causes any subsequent executions of the corresponding if-statement that resets the wires (line 30, Figure 1a) to evaluate the true branch, following which the counter is reset. A correct design should also reset the overflow bit: at this point, the expected output for the circuit requires overflow_out to be 0, while the actual value recorded by our instrumented testbench is (the Verilog representation an uninitialized or unknown logic value). This causes overflow_out to be implicated for fault localization, and CirFix focuses repair efforts on assignments to this wire and parts of design code that such assignments transitively depend on (e.g., the conditional in line 39, Figure 1a).\n\nFor every candidate repair produced, CirFix needs to also answer: how good (i.e., fit) is the proposed repair at fixing the defect? Unfortunately, evaluation approaches for candidate repairs from software cannot be applied to HDL descriptions that typically use testbenches (see Figure 1b). We address this using a novel fitness evaluation approach. Our instrumented testbench records the values of output wires and registers at every rising edge of the clock during an otherwise standard hardware simulation. For developerspecified time intervals from the design simulation (a clock cycle by default), our fitness function compares each output bit against the expected output: for every bit match, we add to the fitness sum; for every bit mismatch, we subtract from the sum. This fitness sum is then normalized. For the 4-bit counter shown in Figure 1, the testbench simulates the design code for 26 clock cycles, out of which the first 20 produce an output of (i.e., uninitialized) for overflow_out on the original design. This causes an output mismatch for overflow_out for 17 clock cycles, resulting in a fitness score of 0.58 (see Section 3.2 for CirFix fitness calculations). A repair managing overflow_out correctly would match expected behavior, resulting in a fitness of 1.0.\n\nThis faulty circuit code was obtained by having a hardware expert from industry adversarially transplant defects from their experience into open circuit descriptions (see Section 4). We use this example to motivate and demonstrate the basic design ideas behind CirFix, an approach that scales well to larger circuit designs, as we will demonstrate. fl_set \u2190 fault_loc(parent) 7: if probability() \u2264 rtThreshold then \u22b2 Repair templates 8: child \u2190 apply_fix_pattern(parent, fl_set) 9: childPopn \u2190 childPopn \u222a {child} 10: else \u22b2 Repair operators 11: if probability() \u2264 mutThreshold then 12: child \u2190 mutate(parent, fl_set) \n\n\nTECHNICAL APPROACH\n\nIn this section, we present CirFix, an automated repair algorithm for defects in hardware design code. Our prototype implementation of CirFix operates on hardware descriptions written in Verilog. The pseudocode for the main CirFix loop is shown in Algorithm 1.\n\nCirFix applies our two-pronged HDL-specific approach to implicate faulty design code and assess the correctness of circuit descriptions to produce repairs that can then be shown to human developers for review. Our fault localization approach simulates a faulty circuit and assigns blame to incorrect wire and register outputs (line 6 in Algorithm 1; see Section 3.1). Note that while traditional software-based APR techniques typically compute fault localization once at the start of the search for repairs, we choose to repeatedly re-localize to support multiple dependent edits made to the source code. Our fitness function, tailored to the hardware domain, assigns scores to each candidate patch to guide the search for repairs (lines 4 and 18 in Algorithm 1; see Section 3.2).\n\nAt a high level, CirFix uses genetic programming (GP) [36], an iterative stochastic search technique, to synthesize candidate repairs to faulty HDL programs. The framework takes as input the source code implementing a faulty circuit design, an instrumented testbench used to simulate the circuit for testing and verification purposes, the expected circuit behavior, 1  for node in ast do 6: if implicated(node, mismatch) then 7:\n\nFL \u2190 FL \u222a {node.id} 8: for each child of node do 9:\n\nFL \u2190 FL \u222a {child.id} 10: if type(child) = Identifier and child.name \u2209 mismatch then 11: mismatch \u2032 \u2190 mismatch \u2032 \u222a {child.name} 12: return FL population of program variants, each stored as a repair patch [2] describing a sequence of abstract syntax tree (AST) edits parameterized by unique node numbers. Each program variant is obtained by applying a repair operator (lines 12 and 16 in Algorithm 1; see Section 3.4) or a repair template (line 8 in Algorithm 1; see Section 3.3) to a parent selected for reproduction. Candidate variants are selected for reproduction based on their fitness scores assigned by the CirFix fitness function (line 5 in Algorithm 1; see Section 3.5). Our fix localization identifies code to be inserted or replaced as part of mutation operations (see Section 3.6). The algorithm loops for several generations, each maintaining a population of program variants, until a plausible repair is found that produces output (as observed by the instrumented testbench) matching the expected circuit output, or allowed resources are exhausted (i.e., the algorithm reaches a timeout or a certain number of generations). For the final post processing step, CirFix minimizes [87] a candidate repair to remove extraneous operations not needed to obtain correct circuit output (line 19 in Algorithm 1; see Section 3.7). Candidate repairs are not deployed directly but are instead shown to human developers (e.g., during the pair process between an RTL design engineer and a verification engineer [10]) for validation before the design is ultimately synthesized, reducing maintenance costs [48,84].\n\n\nFault Localization\n\nFault localization is critical to the success and efficiency of APR [40]. Traditional APR for software often relies on spectrum-based fault localization [31] to narrow down defects to certain parts of a faulty program by sampling the program counter. Such fault localization approaches do not extend naturally to the parallel structure of hardware descriptions [26].\n\nTo overcome this challenge, we propose a novel dataflow-based fault localization approach to implicate faulty code in HDL descriptions. Previous work analyzing defects in large hardware projects intervals. See Section 5.4 for an evaluation of the trade-off between the level of detail of expected output and repair success.\n\nreports that most defects in Verilog descriptions correspond to assignment statements and if-statements [75]. We present an algorithm that implements an analysis of assignments made to wires and registers in a circuit's design code to implicate faulty statements. Our proposed algorithm transitively captures data and control dependencies in a context-insensitive fixed point analysis. While traditional spectrum-based fault localization approaches for software return a ranked list of implicated statements [1,30,60], our approach returns a uniformly-ranked set: due to the parallel structure of HDL designs, a set of implicated assignments that are equally likely to contribute to the design defect suffices.\n\nAlgorithm 2 outlines the high-level pseudocode for our fault localization approach. The algorithm takes as input the AST of the faulty circuit design, the output from design simulation, and the expected circuit behavior (see Section 3.2 for the structure of the simulated and expected outputs). It then compares the simulation output against the expected behavior to produce a set of identifier names (i.e., variable names) for output wires and registers with mismatched values. Using this mismatch set as a starting point, for every node in the AST, the algorithm checks if the node is implicated by output mismatch. Implication for a node in the AST occurs when\n\n\u2022 (Impl-Data): either the node corresponds to an assignment statement and the left child of the node corresponds to an identifier in the mismatch set (cf. data dependency analysis), \u2022 (Impl-Ctrl): or the node corresponds to a conditional statement and an identifier in the conditional statement belongs to the mismatch set (cf. control dependency analysis).\n\nAny implicated node and all of the node's children are added to the fault localization set. Additionally, if any child of an implicated node is itself an identifier not part of the mismatch set, the name of the identifier is added to the mismatch set (Add-Child). For example, for the 4-bit counter introduced in Section 2, recall that the overflow_out wire had incorrect output from the circuit simulation. This causes the wire to be added to the mismatch set. The CirFix fault localization implicates the only assignment to overflow_out (line 40, Figure 1a) by rule (Impl-Data) in the first iteration of the algorithm. Indeed, the entire if-statement wrapping this assignment (line 39, Figure 1a) gets implicated by (Impl-Ctrl), which brings in the new identifier counter_out to the mismatch set by (Add-Child). The process is repeated until there are no new identifiers added to the mismatch set, following which the fault localization set is output. This novel approach to fault localization for hardware is a good fit for automatically repairing HDL designs: it returns a precise set of implicated AST nodes in a faulty circuit design, is contextinsensitive and therefore inexpensive to compute, and applies directly to node types associated with ASTs for languages like Verilog.\n\n\nFitness Evaluation\n\nThe fitness function evaluates the acceptability of a program variant by assigning a value ranging continuously between 0 and 1 to the variant, with 1 indicating a plausible [64] (i.e., testbench-adequate) repair ready to be shown to human developers. Fitness provides a termination criterion for CirFix and guides the search for a repair. As mention in Section 1, traditional APR for software uses test-case based evaluation strategies to assess candidate repairs. Hardware designs, by contrast, use testbenches to verify functional correctness. We present a novel fitness function tailored to hardware to guide the search for repairs to HDL designs. Our fitness function uses two key insights: visibility and comparison.\n\nTraditional hardware testbenches monitor the values of output wires during simulation and assess correctness based on the final output values. For instance, the testbench for the 4-bit counter introduced earlier (Figure 1b) may report that the final value of the counter is 5 and the overflow bit is 1 when the simulation terminates. Some off-the-shelf hardware testbenches, especially those for large projects, may not even report the exact incorrect value, reporting instead merely the presence or absence of an error during simulation. We want our fitness function to assess a candidate repair based on intermediary as well as final output values, and assign fitness values to the repair based on its overall closeness to the correct circuit design [32]. To do so, given a testbench for a faulty HDL description, we instrument the testbench to record the values of output wires and registers for specified time intervals. This instrumentation is easily automatable: every hardware testbench must instantiate a device-under-test (DUT) and connect wires to the module being instantiated (cf. unit tests in software instantiating the object being tested); each module in turn specifies input and output wires, and a static analysis of the instantiation of the DUT can provide the information needed to instrument a testbench automatically.\n\nOnce the testbench is instrumented, we simulate the circuit design and compare the results against the expected output to assess functional correctness of the HDL description. We desire a fitness function that assigns high values to candidate repairs that display behavior similar to expected behavior. To do so, we need to determine the relative contribution of each bit to the fitness of a proposed repair. Given a set of time steps , a set of output wires and registers , a simulation result : Time \u2192 Var \u2192 {0, 1, , }, and expected output : Time \u2192 Var \u2192 {0, 1, , }, where or correspond to unknown logic value and high impedance respectively, for timestamp \u2208 Time, we sum over the = | ( )| output bits of the circuit. We compare the expected value for wire from clock cycle , , = ( ( )), against the actual value from the simulation result, , = ( ( )) (see Figure 2 for an indicative example juxtaposing a simulation result with expected behavior).\n\nIf the bits match, we add to the fitness sum of the circuit; if the bits differ, we subtract from the fitness. An additional penalty weight is assigned to bits with values of (uninitialized) or (high impedance).\n\nThe fitness sum, ( , ), and total possible fitness, ( , ), are defined as follows, where _ represents a bit value of 0 or 1:\n\nFor the example shown in Figure 2, the mismatch = 35, \u2260 35, = 0 subtracts from the fitness sum, whereas the match 205, = 1 = 205, adds 1 to the fitness sum, with = overflow_out.\n\nThe normalized fitness of the circuit is then defined as:\n( , ) = 0 ( , ) < 0 ( , ) ( , ) ( , ) \u2265 0\nThis novel approach to calculating normalized fitness is effective at capturing whether or not a candidate design is close to the correct implementation of the circuit, and at guiding the search for a repair.\n\n\nRepair Templates\n\nA repair template for a defect in code is defined as a pre-identified pattern that can be applied to some aspect of the code to fix the defect. The idea of using templates for APR is well-studied for software [35,44,45]. We apply repair templates to aid CirFix in its search for repairs. We propose nine repair templates corresponding to four defect categories for HDL designs. Of the four defect categories we consider, three are suggested in previous work by Sudakrishnan et al. [75] that analyzes the bug fix history of four hardware projects written in Verilog and presents several commonlyoccurring fixes for HDL descriptions; we propose the remaining defect category based on our experience with defects in hardware designs.\n\nThe repair templates in CirFix are presented in Table 1. Incorrect conditionals, sensitivity lists, and assignments correspond to the three most commonly occurring defects in the four hardware projects analyzed in previous work [75,Tab. 2]. Note that our repair templates focus on correct behavior from circuit designs during simulation (cf. rules targeting synthesizability [76]). For an incorrect conditional for a program branch (e.g., the condition for a while-loop or an if-statement), our repair templates can negate the conditional. For an incorrect sensitivity list, recall that in HDL descriptions, a developer can specify blocks of code to execute infinitely often (e.g., line 27, Figure 1a); the execution of such blocks can only be triggered by events described in the block's sensitivity list. Our repair templates for this defect category can modify a block's sensitivity list to change when the block is executed. HDL designs also allow the use of blocking and non-blocking statements for Increment the value of an identifier by 1 Decrement the value of an identifier by 1 assignments. A blocking assignment statement (written =) must be executed before any subsequent sequential statements. By contrast, a non-blocking assignment (written <=) allows assignments to be made without delaying the procedural flow of a block. Our repair templates for incorrect assignments can change assignments from blocking to non-blocking, and vice versa. Finally, for numeric errors, our repair templates can increment or decrement the values of declared identifiers.\n\n\nRepair Operators\n\nCirFix uses two standard repair operators from well-known software repair approaches [39,47,63], mutation and crossover, to search the nearby space of circuit designs to produce a repair and to avoid local optima during the process. The input parameter \u210e \u210e (line 11, Algorithm 1) tunes the relative application of mutation and crossover.\n\nAs in common software APR approaches (e.g., [39, Sec. III-F]), the mutation operator itself can be characterized into three subtypes: replace, insert, and delete. The mutate function of the CirFix framework generates a random probability value and employs the user-provided replace, insert, and delete thresholds to choose a mutation sub-type. The replace operator picks a random node from the fault localization space and replaces the node with another randomly chosen node from the corresponding fix localization (see Section 3.6) space. The insert operator picks a random node from the fix localization space and inserts it after another randomly picked node within a code block. The delete operator picks a random node from the fault localization and replaces it with an empty node \u00d0 this operation is equivalent to deleting certain statements from the program variant under consideration.\n\nCirFix uses the standard single-point crossover [62], which starts by picking a crossover point for each of the two parents. Edit operations to the right of that point are swapped between the two parents. This results in two children program variants, each carrying some information from both parents. The crossover operator plays a key role in avoiding local optima when searching for high-fitness patches.\n\n\nSelection\n\nAutomated program repair techniques based on GP use selection to choose parent variants from a population based on fitness. Tournament selection [56], a selection approach that selects a random pool of program variants in a population and selects the fittest member of this pool as the parent, has been used widely for software-based APR [39,42,63,81]. CirFix uses tournament selection to select a parent variant to transfer genetic information to the next generation as a child variant. The top % fittest program variants from the previous generation are automatically chosen to be included in the next generation in a process known as elitism [19,82].\n\n\nFix Localization\n\nGiven that fault localization has identified faulty design code to be changed, our fix localization provides some guidelines on how to perform the changes. While early works on APR for software chose a node at random for insertion and replacement operations [85], such approaches caused a substantial fraction of mutants to not compile [86]. We use fix localization to restrict the scope of the insert and replace operators to reduce the number of syntactically invalid mutants.\n\nFor the insert operator, we propose to only use statements types (e.g., conditional statements, assignments, etc. \u00d0 see Annex A.6.4 in the IEEE Standard for Verilog [27] for the full BNF definition of statement types) as the sources for insertion code. We further allow such statements to be inserted only into initial or always blocks, since such statements inserted elsewhere violate the syntax of Verilog [ We observe that our fix localization approach reduces the average number of mutants producing compilation errors in our prototype from 35% to 10%. This reduction is comparable to that of fix localization techniques in software (e.g., [39]).\n\n\nRepair Minimization\n\nDuring the search for a repair, CirFix might produce edits to the code that do not contribute to the repair (e.g., repeated assignment statements within an always block). Such edits do not increase the fitness of the candidate repair, but they could introduce inefficiencies in the final circuit design or affect the design's readability [66].\n\nCirFix removes such extraneous edits in a postprocessing minimization step by finding a subset of the edits in a repair patch from which no further elements can be dropped without causing a reduction in the fitness of the patch. As in APR for software (e.g., [39]), we use the delta debugging algorithm [87] to efficiently (i.e., in polynomial time) compute this one-minimal subset of the repair patch. The minimized set of repairs is then converted back into HDL code implementing the hardware design correctly.\n\n\nEXPERIMENTAL SETUP\n\nThis section describes the experimental setup for our evaluation of CirFix, including the construction of our new benchmark suite and our choice of experimental parameters. 1, modified to support numbering for each node type) to parse a Verilog description of a circuit and produce an AST representing the circuit design code. We use Synopsys VCS [78], the primary hardware verification tool used by a majority of the world's top-twenty semi-conductor companies [77], to simulate the code using a manually instrumented testbench to assess functional correctness of the circuit design. Our prototype for CirFix is implemented using Python 3.6.8 and is made publicly available on GitHub (https://github.com/hammada/verilog_repair).\n\n\nBenchmark Suite for Hardware Defects\n\nFor our evaluation of CirFix, we desire a benchmark suite consisting of faulty hardware designs that are indicative of defects in industry, comprise a wide range in terms of project size, and correspond to a variety of components found in real-world designs. To the best of our knowledge, there are no publicly available benchmarks that satisfy our requirements. Additionally, there is limited open source community support for industrial hardware designs, since such designs are often considered Intellectual Property (IP) of the stakeholder companies. As such, we propose to adapt the defect-seeding approach common in software [17,61,69] and present a benchmark suite of defects scenarios [39,40] \u00d0 each consisting of a circuit design, an instrumented testbench for the design, information for correct circuit behavior, and an expert-transplanted defect from real-life experience \u00d0 to be used for the evaluation of automated repair techniques for hardware.\n\n\nSelecting Hardware Projects.\n\nEvery defect scenario includes a base circuit design and a testbench, as introduced in Section 2 ( Figure 1). We required circuit designs with an available testbench and that admit simulation using the Synopsys VCS tool without any changes to the design code. This is a common requirement comparable to the benchmarks suites for APR in software [39, Sec. IV-A] [33, Sec. 3.1]. The hardware projects for our benchmark suite are presented in Table 2. For each hardware project, we need an instrumented testbench to record output values for our fitness function. While the instrumentation process is automatable (see Section 3.2), we manually instrument the testbenches for our prototype. Each testbench instrumentation required under 10 lines of Verilog code, took at most 5 minutes of developer time, and did not require any circuit-specific knowledge besides the information already available in the testbench (i.e., identifier names of output wires and registers, and the clock cycle duration).\n\nWe choose six projects from undergraduate VLSI courses to be indicative of repairing a small component in hardware design. We augment this by choosing the remaining five projects from Open-Cores (a popular website for open-source HDL designs) and GitHub collectively to be indicative of repairing the entirety of a large circuit design. Unlike some previous works that only use toy benchmarks for evaluation (e.g., [12,74]), our benchmarks include a range of project sizes (in terms of source lines of code), and all projects \u00d0 including those from courses taught at the undergraduate level \u00d0 correspond to components found in real-world hardware designs. To satisfy our variety requirement, we include a project from each of the key cores listed on the OpenCores website for OpenCores certified projects (i.e., arithmetic, communication, crypto, error correction, and memory).\n\n\nObtaining Information for Correct Circuit Behavior.\n\nCirFix requires information about expected behavior for a circuit design to assign fitness values to candidate repairs. In APR for software, guidelines for correct behavior often take the form of passing and failing test cases [46]. More generally, however, such information can be induced from a previous version of the design known to be functional [4,18,22,51,53,71] or a combination of data mining and static analyses of the design [15,23,25,72], or manually provided by the human developer [3,11,24,28].\n\nThis so-called \u0142oracle problem\u017e [9] remains a challenging issue in general for hardware testing and automated repair: implicit, highlevel test oracles (e.g., \u0142the program does not divide by zero\u017e) used by APR tools for software do not typically carry over to hardware. Given that circuit designs exhibit parallelism and require synchronization against a clock signal [70], how a circuit design reaches a certain output is often equally important as the actual final output produced. As such, any hardware test oracles need detailed information about the intermediate values from design simulation, and it does not suffice to only use the output values from the simulation as correctness information for an approach like CirFix.\n\nFor our benchmark suite, we follow an established approach in APR for software [21,41] and employ a previously-functioning version of the circuit design to record the expected behavior information for circuits in our benchmark suite. We acknowledge that such a previously-functioning version might not always be available, or the circuit specification may have changed. In that case, a developer can use a partially correct or most up-to-date version of the circuit as a starting point, and manually annotate the missing or incorrect bits based on knowledge of the circuit design. This process is analogous to test suite evolution in software [6]. Ultimately, however, if manual developer effort and previous designs are both unavailable, CirFix cannot be applied to repair defects in a circuit.\n\nWhile we recognize that the process of manually annotating the correctness information may take longer than manually fixing a single defect, this information is a one-time cost as long as the high-level circuit specification (i.e., I/O wires and registers, expected behavior) does not change. Given the number of bugs that may arise during the development and maintenance of a circuit design, we believe that it would still be more cost effective to invest developer effort in the correctness information, which can then be used by CirFix during inexpensive machine idle time (see discussion in Section 5.1).\n\n\nTransplanting Hardware Defects.\n\nSince actual industrial defects are not made publicly available, we propose an approach based on defect transplantation by experts. Previous works have used either randomly-seeded or self-seeded defects for evaluation, potentially admitting bias (e.g., [13]). To combat this, we recruited three hardware experts \u00d0 two of whom work in industry and one who works in academia, with 19 years of experience with hardware design collectively \u00d0 to transplant (proprietary or non-public) defects from their real-world experience into otherwise-correct open source implementations of the hardware projects in our benchmark suite. We desire defects in our benchmark suite corresponding to a variety of complexities, both in terms of finding and fixing the defect. As such, we define two defect categories for this process:\n\n\u2022 Category 1: A Category 1 (i.e., \u0142easy\u017e) defect denotes mistakes pertaining to simpler, higher-level aspects of circuit design. \u2022 Category 2: A Category 2 (i.e., \u0142hard\u017e) defect denotes more intricate errors that usually require more effort to diagnose, understand, and/or fix. To get the benefits of real-world defects in our benchmark suite, we instructed our recruited experts to transplant and categorize real defects they have previously encountered to the open-source circuits in our benchmark. We also asked our experts for \u0142... variety in how the defects appear and would be fixed, as long as that variety aligns with how often [they] observe these bugs or mistakes in real life\u017e. We further required that any transplanted defects should compile successfully and change the externally visible behavior of the circuit with respect to the instrumented testbench, and correspond to approximately the same level of complexity as that of real-world defects. Table 3 lists the transplanted defects from our experts that met these criteria. In total, our experimental setup includes 32 different defect scenarios spanning across 11 hardware projects, with 19 Category 1 (i.e., \u0142easy\u017e) and 13 Category 2 (i.e., \u0142hard\u017e) defects. This benchmark suite is 1.5\u015b10\u00d7 as large as benchmark suites used in the hardware diagnosis literature [12,13,29,65,74,75].\n\n\nExperimental Parameters\n\nWe refer to each execution of CirFix as a trial. Each trial is initialized with a distinct random seed for reproducibility of our results, and conducted on a quad-core 3.4GHz machine with hyperthreading and 16GB of memory. We ran 5 independent CirFix trials for each defect scenario, stopping when an acceptable repair was found. Each individual trial was terminated after 8 generations of evolution or 12 hours of wall-clock time (whichever came first).\n\nFor the GP parameters, we use population size popSize = 5000, repair template threshold rtThreshold = 0.2, mutThreshold = 0.7. In Table 3: Repair results for CirFix. \u0142Cat\u017e indicates the category for the defect, \u0142Repair Time\u017e shows the time for repair (in seconds), and a missing time for repair indicates no repair was found in 5 independent trials. CirFix produced plausible repairs to 21 of the 32 defect scenarios in our benchmark suite, of which 16 were correct upon manual inspection (denoted with a \u2713). line with established practices from APR for software [39,42,63], we use deletion, insertion, and replacement thresholds of 0.3, 0.3 and 0.4 respectively. For parent selection, we use a tournament size = 5 to increase the selection pressure on candidate variants [57]. For elitism, we propagate the top = 5% candidates in each generation to the next generation without any modifications.\n\nFor fitness evaluations, we use = 2 as additional weight assigned to bits with values of or . This makes incorrect comparisons between ill-defined wires twice as detrimental to the fitness score of a candidate repair as binary bit mismatches. We found that a weight = 1 did not penalize such incorrect comparisons enough (resulting in longer times to find a repair), while = 3 caused too significant a drop in fitness for candidate variants (negatively impacting the exploration of the search space for a repair).\n\nWhile we leave a comprehensive study of CirFix's parameter sensitivity as future work, we evaluated other values suggested by literature (e.g., smaller population sizes [41,85]), and found no significant differences in CirFix's performance.\n\n\nEXPERIMENTAL RESULTS\n\nIn this section, we present an empirical evaluation CirFix on our benchmark suite of hardware defect scenarios. We address the following research questions:\n\nRQ1. What fraction of defect scenarios can CirFix repair? RQ2. Does CirFix perform better at repairing Category 1 hardware defects compared to Category 2 defects?\n\nRQ3. How effective is the CirFix fitness function at guiding the search for a repair to a circuit description? RQ 4. How sensitive is CirFix to the quality of the information for expected behavior?\n\n\nRQ1. Repair Rate and Quality for CirFix\n\nRepair Rate. Table 3 presents the repair results for each defect scenario. CirFix produced plausible (i.e., testbench-adequate) repairs for 21 of the 32 (65.6%) defects. Of the 11 defects that were not repaired, 4 exhausted resource limits while 7 required edits not supported by CirFix operators and repair templates. While a direct comparison between CirFix and APR for software is not possible, we observe that the repair rate of CirFix comparable to the reported repair rates of well-known software repair approaches, e.g., GenProg (52.4%) [39] and Angelix (34.1%) [55]. When comparing CirFix to a more straightforward search algorithm applying edits at uniform to a circuit design, we found that the brute force algorithm did not scale to the complexity of defects in our benchmark suite and reported no repairs within the 12 hour resource bounds. Though not part of a comprehensive scientific evaluation, when tested on simple single-edit defects (not part of our benchmark suite) in smaller projects from undergraduate courses, the bruteforce algorithm still took hours to find repairs that CirFix found in seconds to minutes, highlighting CirFix's efficient pruning of the search space. We leave a full investigation of CirFix against more straightforward search as future work. Note that we can not compare CirFix to other baselines for hardware repair, since at the time of writing, there are no baselines that operate on source code level Verilog descriptions to automatically repair defects; indeed, that is precisely the improvement CirFix brings over the state-of-the-art.\n\nThe average wall-clock time for a trial to find a repair was 2.03 hours, of which an average of over 90% was spent on fitness evaluations (i.e., design simulations). Most non-repairs timed out after 12 hours, though defects for some projects with smaller search spaces hit the 8 generation maximum first. These results are in line with previously-reported patterns of behavior for APR for software, supporting our hypothesis that the CirFix algorithm is capable of performing as well on hardware design defects as established APR approaches do on software.\n\nWe acknowledge that wall-clock runtime for CirFix on a given defect can be longer than that of an expert human manually fixing the defect. However, CirFix was designed to favor situations in which developer time is significantly more expensive than machine time: it is often more cost-effective to run tools like CirFix using inexpensive machine idle time and then to employ expensive developer time to ensure the repairs are correct before being synthesized [84]. As such, we see CirFix as being cost-effective in terms of reducing the burden on designers. Figure 3: A representative multi-edit repair by CirFix for a defect in the sdram_controller benchmark. The original defect, with a missing and an incorrect assignment, is shown in red; the repaired code is shown in green. Edits on lines 8 and 9 correspond to insert and replace operations respectively.\n\nRepair Quality. We follow the approach taken by Long and Rinard [47] and manually analyze the 21 repairs produced by CirFix. We found 5 to be correct and identical to a human repair, another 11 to be correct but different from a human repair, and the final 5 to be correct only with respect to the testbench (i.e., overfitting). 2 While we acknowledge that having a single developer manually examine a patch is not a substitute for a full human study on patch correctness, this analysis adds some confidence that a majority of the plausible repairs from CirFix do not overfit to the testbench (a common problem in APR for software [38,47,73]), since we inspect intermediate wire values when assigning fitness scores. Correctness is critical in hardware designs (e.g., since manufactured chips cannot be easily updated once deployed), and we note that our use case does not involve deploying patches directly but instead showing plausible patches to developers to reduce maintenance costs [48,84].\n\nWe observed that 7 out of the 21 minimized repairs were multiedit repairs, highlighting CirFix's ability to produce repairs to defects that require more than one change to the circuit design. By comparison, common APR approaches for software usually only produce single-edit repairs [21], and only recently have there been works investigating multi-edit repairs [55,67]. For instance, in a faulty version of the sdram_controller benchmark, one of our experts changed assignments to two wires to transplant a Category 2 defect, causing incorrect functionality in the host interface. CirFix assigned this faulty design code a fitness value of 0.818 based on output mismatch. CirFix repaired this defect scenario in 4.6 hours by inserting a new assignment and modifying an existing assignment. The original defect and the repaired code are shown in Figure 3. This is an indicative instance of CirFix repairing Category 2 (i.e., \u0142hard\u017e) defects in circuit descriptions with multiple edits to the faulty circuit design.\n\nCirFix produced plausible repairs to 21 out of 32 (65.6%) defect scenarios in our benchmark suite, of which 16 repairs were fully correct and 5 were correct only with respect to the testbench. The CirFix repair rate is comparable to strong results from APR for software, suggesting that our approach brings the benefits of APR to hardware designs.\n\n\nRQ2. Performance for Individual Defect Categories\n\nCirFix found plausible repairs to 12 out of 19 (63.2%) of Category 1 and 9 out of 13 (69.2%) of Category 2 defects. The average number of fitness probes for a trial finding a repair to a Category 1 defect was 9500, taking an average wall-clock time of 2.07 hours to complete. By comparison, the average number of probes for a trial repairing a Category 2 defect was 5000, taking an average wall-clock time of 1.97 hours to complete. We found no statistically significant difference in the average amount of time to find a repair between Category 1 and 2 defects (two-tailed Mann-Whitney U test, = 0.373), suggesting that for defects that CirFix is able to patch, the repair can be produced in about the same time, regardless of the category (and therefore, difficulty) of the defect. The CirFix repair operators and repair templates were particularly successful at repairing defects of both categories pertaining to incorrect sensitivity lists for always blocks, and numeric errors in, or omissions of assignments to wires and registers. On the other hand, CirFix was less successful in defect scenarios where wires or registers are defined incorrectly, or where modules are incorrectly instantiated. For instance, in a Category 1 defect scenario for the reed_solomon_decoder project, one of our experts changed the size of a register to 8 bits before assigning a decimal value of 500 to the register. This produces incorrect circuit behavior since 8 bits are not sufficient to store a value of 500. CirFix could not produce a repair to this defect scenario: none of its operators or repair templates are capable of increasing the number of bits allocated to the integer 500. We note that while adding more repair templates can help in such cases, in general, CirFix is able to repair both Category 1 and 2 defects with comparably high success rates.\n\nCirFix performs equally well for Category 1 and Category 2 hardware defects, adding confidence that our approach scales well to a variety of defect types in hardware design.\n\n\nRQ3. Quality of Fitness Function\n\nCirFix's high repair rate suggests that our fitness function, coupled with our testbench instrumentation approach, is highly effective at guiding the search for repairs to faulty circuit designs. We observe that for each change to design code that brings a candidate repair closer to a correct repair, our fitness function shows a corresponding increase in the candidate repair's fitness (i.e., our fitness function has a strong fitness distance correlation, a trait that makes genetic algorithms thrive [32]). This is best observed in transplanted defects that require multiple edits to the design code to be corrected. For instance, one of our experts transplanted a defect in the counter project that required three edits to the design be repaired. The tripleedit repair produced by CirFix for this defect scenario incrementally raised the fitness of the best candidate patch first from 0 to 0.58, then to 0.77, and finally to 1.0 to produce a correct repair. Similar behavior is seen for every other multi-edit repair produced by CirFix, indicating that our fitness function is effective at capturing incremental changes to a circuit design during the search for a repair.\n\nWe also observe instances where CirFix produces a repair deemed unfit by our fitness function and instrumented testbench but considered correct by the original, unannotated testbench. We examine one such case in detail, related to the out_stage module in the error correction core reed_solomon_decoder. This module is responsible for generating output bytes from pipelining input memories. A faulty version of this circuit obtained from one of our experts removed the reset wire from the sensitivity list of an always block. This caused incorrect resetting of output wires by the circuit. Our fitness function assigns the incorrect design code a non-perfect fitness value of 0.999. The original testbench, however, reports no errors in the incorrect code. The final repair produced by CirFix fixes this defect and passes all checks by the original testbench and our instrumented testbench. This suggests that our fitness function and testbench instrumentation can catch errors beyond the capabilities of the original testbench without adding any additional testing logic.\n\nThe CirFix fitness function is highly effective at capturing incremental changes to a circuit's design code to guide the search for a repair, and has the potential to increase testing prowess without any added testing logic to a bench.\n\n\nRQ4. Sensitivity to Correctness Information\n\nSince the information for expected circuit behavior is a non-trivial cost for our algorithm, we investigate the quality of the repairs produced by CirFix as a function of the quality of this information. We consider the defects in our benchmark suite repaired under conditions where high quality guidelines for correctness were available, since repairing the remaining defects with lower quality information could be attributed to the randomness associated with a stochastic approach. As we varied the amount of correctness information (i.e., annotations of expected wire and register values) available from 100% \u2192 50% \u2192 25%, we observed the number of plausible repairs transition from 21 \u2192 20 \u2192 20 and the number of correct repairs go from 16 \u2192 12 \u2192 10. Breaking down the scenario where only 50% of the correctness information was available, we observed that 5 are correct and identical to a human repair, another 7 are correct but different from a human repair, and the final 8 are correct only with respect to the testbench (including a partial repair to a defect requiring multiple edits to be patched). Note that this is a reduction of 25% in the number of correct repairs when the correctness information is reduced by half. Indeed, of these plausible repairs, a total of 10 were identical to repairs produced under conditions when the full expected behavior was available. For the scenario where only a quarter of the expected behavior information was available, we found that 4 are correct and identical to a human repair, another 6 are correct but different from a human repair, and the final 10 are correct only with respect to the testbench (including a partial repairs). This corresponds to a decrease of only 37.5% in the number of correct patches when the correctness information is reduced by 75%.\n\nOur results indicate that the repair rate, and, more importantly, the quality of the repairs produced by CirFix, is not overly sensitive to the quality of the provided expected behavior information. Furthermore, reducing said behavior information does not increase the manual burden of inspecting produced plausible patches, since CirFix only reports the first plausible patch it finds (cf. program repair for software, where developers may need to evaluate an increasing number of plausible patches as the quality of the test suite is degraded [37,59]). This analysis gives confidence that even in settings where high quality information for correct circuit behavior might not be available, high marginal benefit and reduction in maintenance costs are still obtainable from CirFix.\n\nCirFix is not overly sensitive to the quality of the expected circuit behavior information, yielding high repair rates and quality even under settings when low quality correctness information is used as input to the algorithm.\n\n\nLIMITATIONS AND THREATS TO VALIDITY\n\nOur results in Section 5 suggest that CirFix is highly effective at automatically repairing defects in HDL descriptions. That said, there are several limitations to our approach and threats to the validity of our results that we describe in this section.\n\nTiming bugs. Faults in HDL descriptions stemming from timing flow issues and incorrect circuit behavior with respect to the clock signal often go undetected by a traditional testbench, requiring instead complicated analyses of waveforms from the simulation. Such timing bugs are therefore not in scope of our approach that heavily relies on testbenches to assess functional correctness of designs. We note that while such bugs are complex to debug, they represent only a subset of hardware defects in industry, and a nontrivial amount of defects in hardware correspond to functional correctness [16].\n\nThreats to Validity. The parameters for the prototype implementation of CirFix are chosen based on empirical performance and may not be optimal. We do note, however, that the repair operators, fault and fix localization approaches, and representation choice for repairs matter more than the actual values of the GP parameters for APR [7].\n\nOur benchmark defects may not be indicative of defects in realworld hardware projects, posing a potential threat to external validity. To mitigate this threat, we evaluated CirFix on a variety of hardware projects taken from different sources, and had expert hardware designers transplant defects from their real-life experience with HDL designs covering a variety of defect types (see Section 4.1.3).\n\n\nRELATED WORK\n\nAutomatic Error Diagnosis and Correction in Hardware Designs. While a significant amount of work has been done in automatic error diagnosis of hardware designs, the correction of such errors automatically has not been well-explored to the best of our knowledge. Techniques in the works of Jiang et al. [29] and Ran et al. [65] employ software analysis approaches to identify statements in design code responsible for defects, but suffer from high false positive rates. Bloem and Wotawa [12] use formal analysis of circuit descriptions to identify defects, but their approach requires formal specifications for large real-world designs that are not always available. Staber et al. [74] use state-transition analysis to diagnose and correct hardware designs automatically, but their techniques similarly do not scale to real-world circuits with large state spaces. Our approach, by contrast, is more scalable to large, real-world hardware descriptions. Chang et al. [13] explicitly insert multiplexers to automatically diagnose faults in hardware designs and suggest repairs; Madre et al. [49] use Boolean equation solving to diagnose and rectify gate-level design errors. By contrast, our technique applies to both behavioral (higher level) and RTL aspects of a circuit design.\n\nAutomated Program Repair for Software. In the realm of software, significant research effort has been devoted to repairing bugs automatically over the last decade [21,46,58]. Automated program repair usually takes as input source code with a deterministic bug and a test suite with at least one failing test that reveals the bug, and aims to automatically generate fixes to the buggy code. Test suite based repair, where test cases are used to guide the search for a patch, can be further divided into generate-andvalidate and semantics-driven approaches. Generate-and-validate techniques produce candidate patches for the buggy code and evaluate them against the test suite to check if all tests pass [2,39,63,64]. Semantics-driven approaches first extract constraints on a program based on test suite execution and then use these constraints to synthesize a patch [52,54,55,61]. While software approaches to APR make use of test suites to evaluate candidate repairs, CirFix uses instrumented hardware testbenches to make visible the internal and external behavior of a simulated circuit for fitness evaluation. Additionally, APR for software usually uses spectrum-based fault localization to implicate faulty code, whereas CirFix uses our novel fault localization approach supporting the analysis of parallel hardware descriptions.\n\n\nCONCLUSION\n\nThis paper presents CirFix, a framework for automatically repairing defects in hardware designs implemented in languages like Verilog. CirFix makes use of readily-available artifacts included in the hardware design process (e.g., testbenches) to diagnose and repair defects in both behavioral and RTL designs in the circuit description. These repairs can then be shown to developers for validation before the synthesis phase, reducing maintenance costs. The testbench-based evaluation and the parallel structure of hardware designs pose challenges that render traditional APR approaches from software inapplicable to the hardware domain. We present two key insights to bridge this gap. First, we propose a method to instrument hardware testbenches to admit a circuit's behavior to guide the search for repairs. We present a novel fitness function tailored that performs a bit-level comparison of the made-visible output wire values against expected behavior to assess functional correctness of candidate repairs. Second, we present a novel fault localization approach based on a fixed point analysis of assignments made to registers and output wires to implicate statements for defects. Our systematic evaluation of CirFix presents a new benchmark suite of 32 defect scenarios transplanted by three hardware experts across 11 different Verilog projects. CirFix produces plausible repairs for 21 out of 32 and fully correct repairs for 16 out of 32 of the Verilog defects within reasonable resource bounds.\n\n\nACKNOWLEDGMENTS\n\nWe gratefully acknowledge the partial support of the NSF (CCF 1908633, CCF 1763674) and a Google Faculty Research Award. Toyota Research Institute (\u0142TRI\u017e) provided funds to partially assist the authors with their research, but this article solely reflects the opinions and conclusions of its authors and not TRI or any other Toyota entity.\n\n\nA ARTIFACT APPENDIX A.1 Abstract\n\nWe provide the public repository for CirFix, both on Zenodo and GitHub. The artifact includes instructions for installing and running CirFix, as well as scripts and instructions used to reproduce core results from our paper.\n\n\nA.2 Artifact Check-List (Meta-Information)\n\n\u2022 Program: python3. 6 \n\n\nA.3 Description\n\nThe artifact contains all of CirFix's source code as well as the instructions to install and run CirFix and its dependencies. The README.md files at the root of the repository and the /prototype and /pyverilog_changes directories contain all of the instructions used in the Artifact Evaluation process. \n\n\nA.4 Installation\n\nThis section assumes that users already have access to the Synopsys VCS tool. Note that alternative Verilog simulation tools may be used, but would likely require modifications to the scripts to support the API for the simulation tool. Users first need to install Python 3.6.8 and all external Python dependencies (listed under the README.md file at the root of the repository). Some source files for PyVerilog need to be changed to support CirFix; instructions to do so can be found at /pyver-ilog_changes/README.md. Users then need to configure CirFix to run on a defect by editing the configuration file (located at /prototype/repair.conf). This involves setting the source file, testbench, correctness information, and evaluation script paths. Users also need to configure the CirFix GP parameters if necessary (we include our default values in the configuration file). The detailed instructions for this process are included in the README file located at /prototype/README.md.\n\n\nA.5 Experiment Workflow\n\nAfter all dependencies have been installed and the configuration file set, users may run the outer CirFix script (/prototype/repair.py) to start a CirFix run using the terminal command python3 repair.py. The script invokes calls to PyVerilog to parse the Verilog source code into a program AST, which is then manipulated to edit the source code. For every change to the AST, CirFix re-generates the Verilog source code before passing it on to the Synopsys VCS simulator, which in turn uses the new code and the provided testbench to generate the circuit output on given input stimuli. The produced circuit output is then passed back to CirFix and compared against developer provided circuit behavior information to assess the correctness of the produced circuit design. CirFix terminates when it finds a design producing output that matches expected behavior. Users may pass the log=true flag to store detailed logs in the /prototype/repair_logs directory.\n\n\nA.6 Evaluation and Expected Results\n\nThe artifact provides instructions for reproducing the main results from CirFix's evaluation (Table 3). Every CirFix execution (or trial) that finds a repair to a bug ends with the minimized repair patchlist (i.e., a sequence to edits to the source code that ultimately repair the defect). This repair patchlist can be verified against our reported results (Table 3; raw data included in /prototype/experiments_results.xlsx), along with the time to find the repair. We also provide instructions on how to use this repair patchlist to produce Verilog source code for inspection in the file /prototype/README.md.\n\n\nA.7 Notes\n\nWe hope to maintain CirFix as an open-source tool. Any issues that are found with the available artifact or any questions that arise can be submitted as GitHib issues on our repository or communicated via email.\n\nFigure 1 :\n1Main block of the 4-bit counter with an overflow error (b) Main testing logic from the 4-bit counter testbench A 4-bit counter with an overflow error in Verilog.\n\nFigure 2 :\n2A comparison between the simulation result and the expected behavior information for the faulty 4-bit counter in the motivating example. Wires with the correct output are omitted for space reasons. Note the output mismatch for the overflow_out wire for timestamps35 through  195.    \n\n\n22, February 28 \u015b March 4, 2022, Lausanne, Switzerland \u00a9 2022 Association for Computing Machinery. ACM ISBN 978-1-4503-9205-1/22/02. . . $15.00 https://doi.org/10.1145/3503222.3507763task \n\n\nAlgorithm 1The high-level CirFix pseudocode. Input: Circuit design to be repaired, . Input: Instrumented testbench for circuit, TB. Input: Expected output for circuit behavior, . Input: Fitness function, . Input: Parameters, popnSize, maxGens, rtThreshold, mutThreshold. Output: Repaired circuit description.1: popn \u2190 seed_popn( , popnSize) \n2: repeat \n\n3: \n\nchildPopn \u2190 \u2205 \n\n4: \n\nwhile |childPopn| \u2264 popnSize and \n\u2200 candidate \u2208 childPopn. (candidate, TB, ) < 1.0 do \n\n5: \n\nparent \u2190 tournament_selection(popn, ) \n\n6: \n\n\n\n\nand the input parameters. The algorithm starts with the original source code and maintains a Algorithm 2 High-level algorithm for fault localization for HDL based on a fixed point analysis of assignments. Input: Faulty circuit design code AST, . Input: Simulation output, : Time \u2192 Var \u2192 {0, 1, , }. Input: Expected output, : Time \u2192 Var \u2192 {0, 1, , }. Output: Fault localization set, .1: FL, mismatch \u2190 \u2205, \u2205 \n2: mismatch \u2032 \u2190 get_output_mismatch( , ) \n\u22b2 Section 3.2 \n3: while mismatch \u2260 mismatch \u2032 do \n\u22b2 Fixed point calculation \n\n4: \n\nmismatch \u2190 mismatch \u222a mismatch \u2032 \n\n5: \n\n\n\nTable 1 :\n1Repair templates in CirFixDefect Category Pattern DescriptionConditionals \nNegate the conditional of a code block (e.g., \nif-statement, while-loop) \nSensitivity Lists \nTrigger an always block on a signal's falling \nedge \nTrigger an always block on a signal's rising \nedge \nTrigger an always block on any change to a \nvariable within the block \nTrigger an always block when a signal is level \nAssignments \nChange a blocking assignment to non-\nblocking \nChange a non-blocking assignment to block-\ning \nNumeric \n\n\n\n27, Annex A.6.2]. For the replace operator, we design CirFix such that an item in a Verilog module [27, Annex A.1.4] can be replaced either by another item of the same type, or by an item sharing the same immediate parent type (as specified in the formal syntax definition of Verilog [27, Annex A]).\n\nTable 2 :\n2Benchmark hardware projects in our experiments. Project and testbench sizes are measured by source lines of code as reported by the Unix wc command.Project \nDescription \nProject Testbench \nLOC \nLOC \n\ndecoder_3_to_8 \n3-to-8 decoder \n25 \n56 \ncounter \n4-bit counter with overflow \n56 \n135 \nflip_flop \nT-flip flop \n16 \n39 \nfsm_full \nFinite state machine \n115 \n66 \nlshift_reg \n8-bit left shift register \n30 \n44 \nmux_4_1 \n4-to-1 multiplexer \n19 \n51 \ni2c \nTwo-wire, bidirectional serial \nbus for data exchange between \ndevices \n\n2018 \n482 \n\nsha3 \nCryptographic hash function \n499 \n824 \ntate_pairing \nCore for the Tate bilinear pair-\ning algorithm for elliptic curves \n\n2206 \n983 \n\nreed_solomon_ de-\ncoder \n\nCore for Reed-Solomon error \ncorrection \n\n4366 \n148 \n\nsdram_controller \nSynchronous DRAM memory \ncontroller \n\n420 \n95 \n\nTotal \n9770 \n2923 \n\nFor our prototype implementation of CirFix, we use the open-\nsource PyVerilog toolkit [79] (version 1.2.\n\n\n.8, pyverilog-1.2.1, iverilog, VCS \u2022 Run-time environment: Red Hat Enterprise Linux 7.9 \u2022 Hardware: Intel quad-core 3.4GHz machine with hyperthreading and 16GB of memory \u2022 Output: Repair patchlist (i.e., sequence of edits to source code) fixing a defect, if a repair is found \u2022 Experiments: Running CirFix on the defects in our benchmark suite, runtime analysis of CirFix \u2022 How much disk space required (approximately)?: 5GB \u2022 How much time is needed to prepare workflow (approximately)?: <1 hour \u2022 How much time is needed to complete experiments (approximately)?: 15-20 hours (longer experiments can be run concurrently and overnight) \u2022 Publicly available?: Yes (GitHub repository: https://github.com/hammad-a/verilog_repair) \u2022 Code licenses (if publicly available)?: MIT License \u2022 Archived (provide DOI)?: Available at Zenodo: https://doi.org/10.5281/zenodo.5846419\n\n\nA.3.1 How to Access the Artifact. CirFix is available at our public GitHub repository as well as an archive on Zenodo (see Appendix A.2).A.3.2 Hardware Dependencies. The artifact does not have any explicit dependencies, though older, slower hardware might take slightly longer to reproduce our results. For our experiments, we used an Intel quad-core 3.4GHz machine with hyperthreading and 16GB of memory.A.3.3 Software Dependencies. CirFix requires Python 3.6.8, PyVerilog version 1.2.1, and Icarus Verilog. It also requires Synopsys VCS simulator (commercial license) to simulate Verilog designs.\nNote that CirFix does not require perfect information for expected behavior for every timestep: the developer can choose to only provide information at certain time\nWe focus on correctness of a patch against the specification of the circuit (e.g., ensuring the absence of clock-or reset-domain issues) during our manual inspections. The synthesizability of the design is left to be evaluated by the developer during the validation phase of the hardware design process[80].\n\nA practical evaluation of spectrum-based fault localization. Rui Abreu, Peter Zoeteweij, Rob Golsteijn, Arjan Jc Van Gemund, Journal of Systems and Software. 82Rui Abreu, Peter Zoeteweij, Rob Golsteijn, and Arjan JC Van Gemund. 2009. A practical evaluation of spectrum-based fault localization. Journal of Systems and Software 82, 11 (2009), 1780\u015b1792.\n\nEvolving patches for software repair. Thomas Ackling, Bradley Alexander, Ian Grunert, Proceedings of the 13th annual conference on Genetic and evolutionary computation. the 13th annual conference on Genetic and evolutionary computationThomas Ackling, Bradley Alexander, and Ian Grunert. 2011. Evolving patches for software repair. In Proceedings of the 13th annual conference on Genetic and evolutionary computation. 1427\u015b1434.\n\nEvolving Readable String Test Inputs Using a Natural Language Model to Reduce Human Oracle Cost. Phil Sheeva Afshan, Mark Mcminn, Stevenson, 10.1109/ICST.2013.112013 IEEE Sixth International Conference on Software Testing, Verification and Validation. 352\u015b361. Sheeva Afshan, Phil McMinn, and Mark Stevenson. 2013. Evolving Readable String Test Inputs Using a Natural Language Model to Reduce Human Oracle Cost. In 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation. 352\u015b361. https://doi.org/10.1109/ICST.2013.11\n\nA neural net based approach to test oracle. Yogesh Kk Aggarwal, Arvinder Singh, O P Kaur, Sangwan, ACM SIGSOFT Software Engineering Notes. 29KK Aggarwal, Yogesh Singh, Arvinder Kaur, and OP Sangwan. 2004. A neural net based approach to test oracle. ACM SIGSOFT Software Engineering Notes 29, 3 (2004), 1\u015b6.\n\nFault localization using execution slices and dataflow tests. Hiralal Agrawal, R Joseph, Saul Horgan, W Eric London, Wong, Proceedings of Sixth International Symposium on Software Reliability Engineering. ISSRE'95. Sixth International Symposium on Software Reliability Engineering. ISSRE'95IEEE143151Hiralal Agrawal, Joseph R Horgan, Saul London, and W Eric Wong. 1995. Fault localization using execution slices and dataflow tests. In Proceedings of Sixth International Symposium on Software Reliability Engineering. ISSRE'95. IEEE, 143\u015b 151.\n\nEmpirical analysis of object-oriented software test suite evolution. Nada Alsolami, Qasem Obeidat, Mamdouh Alenezi, International Journal of Advanced Computer Science and Applications. 1011Nada Alsolami, Qasem Obeidat, and Mamdouh Alenezi. 2019. Empirical analysis of object-oriented software test suite evolution. International Journal of Advanced Computer Science and Applications 10, 11 (2019).\n\nOn parameter tuning in search based software engineering. Andrea Arcuri, Gordon Fraser, International Symposium on Search Based Software Engineering. SpringerAndrea Arcuri and Gordon Fraser. 2011. On parameter tuning in search based software engineering. In International Symposium on Search Based Software Engi- neering. Springer, 33\u015b47.\n\nPentium fdiv: The processor bug that shook the world. Desire Athow, Desire Athow. 2014. Pentium fdiv: The processor bug that shook the world. https://www.techradar.com/news/computing-components/processors/ pentium-fdiv-the-processor-bug-that-shook-the-world-1270773\n\nThe Oracle Problem in Software Testing: A Survey. T Earl, Mark Barr, Phil Harman, Muzammil Mcminn, Shin Shahbaz, Yoo, 10.1109/TSE.2014.2372785IEEE Transactions on Software Engineering. 41Earl T. Barr, Mark Harman, Phil McMinn, Muzammil Shahbaz, and Shin Yoo. 2015. The Oracle Problem in Software Testing: A Survey. IEEE Transactions on Software Engineering 41, 5 (2015), 507\u015b525. https://doi.org/10.1109/TSE.2014.2372785\n\nRTL Formal Verification. Principles of Verifiable RTL Design: A functional coding style supporting verification processes in Verilog. Lionel Bening, Harry Foster, Lionel Bening and Harry Foster. 2001. RTL Formal Verification. Principles of Verifiable RTL Design: A functional coding style supporting verification processes in Verilog (2001), 103\u015b129.\n\nTesting object-oriented systems: models, patterns, and tools. Robert Binder, Addison-Wesley ProfessionalRobert Binder. 2000. Testing object-oriented systems: models, patterns, and tools. Addison-Wesley Professional.\n\nVerification and fault localization for VHDL programs. Roderick Bloem, Franz Wotawa, Journal of the Telematics Engineering Society (TIV). 2Roderick Bloem and Franz Wotawa. 2002. Verification and fault localization for VHDL programs. Journal of the Telematics Engineering Society (TIV) 2 (2002), 30\u015b33.\n\nAutomatic error diagnosis and correction for RTL designs. Kai-Hui Chang, Ilya Wagner, Valeria Bertacco, Igor L Markov, IEEE International High Level Design Validation and Test Workshop. IEEEKai-hui Chang, Ilya Wagner, Valeria Bertacco, and Igor L Markov. 2007. Automatic error diagnosis and correction for RTL designs. In 2007 IEEE International High Level Design Validation and Test Workshop. IEEE, 65\u015b72.\n\nReturn-oriented programming without returns. Stephen Checkoway, Lucas Davi, Alexandra Dmitrienko, Ahmad-Reza Sadeghi, Hovav Shacham, Marcel Winandy, Proceedings of the 17th ACM conference on Computer and communications security. the 17th ACM conference on Computer and communications securityStephen Checkoway, Lucas Davi, Alexandra Dmitrienko, Ahmad-Reza Sadeghi, Hovav Shacham, and Marcel Winandy. 2010. Return-oriented programming without returns. In Proceedings of the 17th ACM conference on Computer and communications security. 559\u015b572.\n\nSupporting oracle construction via static analysis. Junjie Chen, Yanwei Bai, Dan Hao, Lingming Zhang, Lu Zhang, Bing Xie, Hong Mei, 31st IEEE/ACM International Conference on Automated Software Engineering (ASE). 178\u015b189. Junjie Chen, Yanwei Bai, Dan Hao, Lingming Zhang, Lu Zhang, Bing Xie, and Hong Mei. 2016. Supporting oracle construction via static analysis. In 2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE). 178\u015b189.\n\nHardfails: Insights into software-exploitable hardware bugs. Ghada Dessouky, David Gens, Patrick Haney, Garrett Persyn, Arun Kanuparthi, Hareesh Khattri, Jason M Fung, Ahmad-Reza Sadeghi, Jeyavijayan Rajendran, USENIX Security Symposium. 213\u015b230. Ghada Dessouky, David Gens, Patrick Haney, Garrett Persyn, Arun Kanuparthi, Hareesh Khattri, Jason M Fung, Ahmad-Reza Sadeghi, and Jeyavijayan Rajendran. 2019. Hardfails: Insights into software-exploitable hardware bugs. In USENIX Security Symposium. 213\u015b230.\n\nSupporting controlled experimentation with testing techniques: An infrastructure and its potential impact. Hyunsook Do, Sebastian Elbaum, Gregg Rothermel, Empirical Software Engineering. 10Hyunsook Do, Sebastian Elbaum, and Gregg Rothermel. 2005. Supporting con- trolled experimentation with testing techniques: An infrastructure and its poten- tial impact. Empirical Software Engineering 10, 4 (2005), 405\u015b435.\n\nGenerating diverse software versions with genetic programming: an experimental study. Robert Feldt, IEE Proceedings-Software. 145Robert Feldt. 1998. Generating diverse software versions with genetic program- ming: an experimental study. IEE Proceedings-Software 145, 6 (1998), 228\u015b236.\n\nA genetic programming approach to automated software repair. Stephanie Forrest, Thanhvu Nguyen, Westley Weimer, Claire Le Goues, Proceedings of the 11th Annual conference on Genetic and evolutionary computation. 947\u015b954. the 11th Annual conference on Genetic and evolutionary computation. 947\u015b954Stephanie Forrest, ThanhVu Nguyen, Westley Weimer, and Claire Le Goues. 2009. A genetic programming approach to automated software repair. In Proceedings of the 11th Annual conference on Genetic and evolutionary computation. 947\u015b954.\n\nAssertion-based verification: Industry myths to realities. Harry Foster, International Conference on Computer Aided Verification. Springerinvited tutorialHarry Foster. 2008. Assertion-based verification: Industry myths to realities (invited tutorial). In International Conference on Computer Aided Verification. Springer, 5\u015b10.\n\nAutomatic software repair: A survey. Luca Gazzola, Daniela Micucci, Leonardo Mariani, IEEE Transactions on Software Engineering. 45Luca Gazzola, Daniela Micucci, and Leonardo Mariani. 2017. Automatic software repair: A survey. IEEE Transactions on Software Engineering 45, 1 (2017), 34\u015b67.\n\nMojtaba Vahidi Asl, Meysam Valueian, and Saina Mohamadyari. Farshad Gholami, Niousha Attar, Hassan Haghighi, 10.1109/RTEST.2018.8397165Real-Time and Embedded Systems and Technologies (RTEST). 104\u015b111. A classifier-based test oracle for embedded softwareFarshad Gholami, Niousha Attar, Hassan Haghighi, Mojtaba Vahidi Asl, Meysam Valueian, and Saina Mohamadyari. 2018. A classifier-based test oracle for embed- ded software. In 2018 Real-Time and Embedded Systems and Technologies (RTEST). 104\u015b111. https://doi.org/10.1109/RTEST.2018.8397165\n\nNew methodology for digital design properties extraction from simulation traces. Mohamed Hanafy, Hazem Said, Ayman M Wahba, 10.1109/ICCES.2015.7393026Tenth International Conference on Computer Engineering Systems (ICCES). 91\u015b98. Mohamed Hanafy, Hazem Said, and Ayman M. Wahba. 2015. New methodology for digital design properties extraction from simulation traces. In 2015 Tenth International Conference on Computer Engineering Systems (ICCES). 91\u015b98. https: //doi.org/10.1109/ICCES.2015.7393026\n\nOptimizing for the Number of Tests Generated in Search Based Test Data Generation with an Application to the Oracle Cost Problem. Mark Harman, Sung Gon Kim, Kiran Lakhotia, Phil Mcminn, Shin Yoo, 10.1109/ICSTW.2010.312010 Third International Conference on Software Testing, Verification, and Validation Workshops. 182\u015b191. Mark Harman, Sung Gon Kim, Kiran Lakhotia, Phil McMinn, and Shin Yoo. 2010. Optimizing for the Number of Tests Generated in Search Based Test Data Gener- ation with an Application to the Oracle Cost Problem. In 2010 Third International Conference on Software Testing, Verification, and Validation Workshops. 182\u015b191. https://doi.org/10.1109/ICSTW.2010.31\n\nMining Hardware Assertions With Guidance From Static Analysis. Samuel Hertz, David Sheridan, Shobha Vasudevan, 10.1109/TCAD.2013.2241176IEEE Transactions on Computer-Aided Design of Integrated Circuits and Systems. 32Samuel Hertz, David Sheridan, and Shobha Vasudevan. 2013. Mining Hardware Assertions With Guidance From Static Analysis. IEEE Transactions on Computer- Aided Design of Integrated Circuits and Systems 32, 6 (2013), 952\u015b965. https: //doi.org/10.1109/TCAD.2013.2241176\n\nApplying Automated Program Repair to Dataflow Programming Languages. Yu Huang, Hammad Ahmad, Stephanie Forrest, Westley Weimer, GI @ ICSE 2021. Justyna Petke, Bobby R. Bruce, Yu Huang, Aymeric Blot, Westley Weimer, and W. B. LangdonIEEEinternetYu Huang, Hammad Ahmad, Stephanie Forrest, and Westley Weimer. 2021. Ap- plying Automated Program Repair to Dataflow Programming Languages. In GI @ ICSE 2021, Justyna Petke, Bobby R. Bruce, Yu Huang, Aymeric Blot, Westley Weimer, and W. B. Langdon (Eds.). IEEE, internet.\n\nIEEE Standard for Verilog Hardware Description Language. Ieee, 10.1109/IEEESTD.2006.99495IEEE Std. Revision of IEEE Std 1364-2001IEEE. 2006. IEEE Standard for Verilog Hardware Description Language. IEEE Std 1364-2005 (Revision of IEEE Std 1364-2001) (2006), 1\u015b590. https://doi.org/10.1109/ IEEESTD.2006.99495\n\nTest oracle assessment and improvement. Gunel Jahangirova, David Clark, Mark Harman, Paolo Tonella, Proceedings of the 25th International Symposium on Software Testing and Analysis. 247\u015b258. the 25th International Symposium on Software Testing and Analysis. 247\u015b258Gunel Jahangirova, David Clark, Mark Harman, and Paolo Tonella. 2016. Test oracle assessment and improvement. In Proceedings of the 25th International Symposium on Software Testing and Analysis. 247\u015b258.\n\nEstimating likelihood of correctness for error candidates to assist debugging faulty HDL designs. Tai-Ying Jiang, C-Nj Liu, Jing Ya Jou, 2005 IEEE International Symposium on Circuits and Systems. IEEETai-Ying Jiang, C-NJ Liu, and Jing Ya Jou. 2005. Estimating likelihood of correct- ness for error candidates to assist debugging faulty HDL designs. In 2005 IEEE International Symposium on Circuits and Systems. IEEE, 5682\u015b5685.\n\nEmpirical evaluation of the tarantula automatic fault-localization technique. A James, Mary Jean Jones, Harrold, Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering. 273\u015b282. the 20th IEEE/ACM international Conference on Automated software engineering. 273\u015b282James A Jones and Mary Jean Harrold. 2005. Empirical evaluation of the taran- tula automatic fault-localization technique. In Proceedings of the 20th IEEE/ACM international Conference on Automated software engineering. 273\u015b282.\n\nVisualization of test information to assist fault localization. A James, Mary Jean Jones, John Harrold, Stasko, Proceedings of the 24th International Conference on Software Engineering. ICSE. the 24th International Conference on Software Engineering. ICSEIEEEJames A Jones, Mary Jean Harrold, and John Stasko. 2002. Visualization of test information to assist fault localization. In Proceedings of the 24th International Conference on Software Engineering. ICSE 2002. IEEE, 467\u015b477.\n\nFitness Distance Correlation as a Measure of Problem Difficulty for Genetic Algorithms. Terry Jones, Stephanie Forrest, In ICGA. 95Terry Jones and Stephanie Forrest. 1995. Fitness Distance Correlation as a Measure of Problem Difficulty for Genetic Algorithms. In ICGA, Vol. 95. 184\u015b192.\n\nDefects4J: A database of existing faults to enable controlled testing studies for Java programs. Ren\u00e9 Just, Darioush Jalali, Michael D Ernst, Proceedings of the 2014 International Symposium on Software Testing and Analysis. 437\u015b440. the 2014 International Symposium on Software Testing and Analysis. 437\u015b440Ren\u00e9 Just, Darioush Jalali, and Michael D Ernst. 2014. Defects4J: A database of ex- isting faults to enable controlled testing studies for Java programs. In Proceedings of the 2014 International Symposium on Software Testing and Analysis. 437\u015b440.\n\nWhat is a Hardware Description Language (HDL)?. Robert Keim, RetrievedRobert Keim. 2020. What is a Hardware Description Language (HDL)? Retrieved Jan 11, 2021 from https://www.allaboutcircuits.com/technical-articles/what-is-a- hardware-description-language-hdl/.\n\nAutomatic patch generation learned from human-written patches. Dongsun Kim, Jaechang Nam, Jaewoo Song, Sunghun Kim, 35th International Conference on Software Engineering (ICSE). IEEEDongsun Kim, Jaechang Nam, Jaewoo Song, and Sunghun Kim. 2013. Automatic patch generation learned from human-written patches. In 2013 35th International Conference on Software Engineering (ICSE). IEEE, 802\u015b811.\n\nGenetic programming: on the programming of computers by means of natural selection. John R Koza, MIT press1John R Koza. 1992. Genetic programming: on the programming of computers by means of natural selection. Vol. 1. MIT press.\n\nOn Reliability of Patch Correctness Assessment. D Xuan-Bach, Lingfeng Le, David Bao, Xin Lo, Shanping Xia, Corina Li, Pasareanu, Xuan-Bach D. Le, Lingfeng Bao, David Lo, Xin Xia, Shanping Li, and Corina Pasareanu. 2019. On Reliability of Patch Correctness Assessment. In 2019\n\n10.1109/ICSE.2019.00064IEEE/ACM 41st International Conference on Software Engineering (ICSE). 524\u015b535. IEEE/ACM 41st International Conference on Software Engineering (ICSE). 524\u015b535. https://doi.org/10.1109/ICSE.2019.00064\n\nOverfitting in semantics-based automated program repair. Xuan Bach, D Le, Ferdian Thung, David Lo, Claire Le Goues, Empirical Software Engineering. 23Xuan Bach D Le, Ferdian Thung, David Lo, and Claire Le Goues. 2018. Overfitting in semantics-based automated program repair. Empirical Software Engineering 23, 5 (2018), 3007\u015b3033.\n\nA systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each. Claire Le Goues, Michael Dewey-Vogt, Stephanie Forrest, Westley Weimer, 34th International Conference on Software Engineering (ICSE). IEEEClaire Le Goues, Michael Dewey-Vogt, Stephanie Forrest, and Westley Weimer. 2012. A systematic study of automated program repair: Fixing 55 out of 105 bugs for $8 each. In 2012 34th International Conference on Software Engineering (ICSE). IEEE, 3\u015b13.\n\nCurrent challenges in automatic software repair. Claire Le Goues, Stephanie Forrest, Westley Weimer, Software quality journal. 21Claire Le Goues, Stephanie Forrest, and Westley Weimer. 2013. Current challenges in automatic software repair. Software quality journal 21, 3 (2013), 421\u015b443.\n\nGenProg: A Generic Method for Automatic Software Repair. C Le Goues, T Nguyen, S Forrest, W Weimer, IEEE Transactions on Software Engineering. 38C. Le Goues, T. Nguyen, S. Forrest, and W. Weimer. 2012. GenProg: A Generic Method for Automatic Software Repair. IEEE Transactions on Software Engineering 38, 1 (2012), 54\u015b72.\n\nRepresentations and operators for improving evolutionary software repair. Claire Le Goues, Westley Weimer, Stephanie Forrest, Proceedings of the 14th annual conference on Genetic and evolutionary computation. 959\u015b966. the 14th annual conference on Genetic and evolutionary computation. 959\u015b966Claire Le Goues, Westley Weimer, and Stephanie Forrest. 2012. Representations and operators for improving evolutionary software repair. In Proceedings of the 14th annual conference on Genetic and evolutionary computation. 959\u015b966.\n\nIntel releases fix FOR F00F bug. Robert Lemos, Robert Lemos. 1997. Intel releases fix FOR F00F bug. https://www.zdnet.com/ article/intel-releases-fix-for-f00f-bug/\n\nTBar: revisiting template-based automated program repair. Kui Liu, Anil Koyuncu, Dongsun Kim, Tegawend\u00e9 F Bissyand\u00e9, Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis. the 28th ACM SIGSOFT International Symposium on Software Testing and AnalysisKui Liu, Anil Koyuncu, Dongsun Kim, and Tegawend\u00e9 F Bissyand\u00e9. 2019. TBar: revisiting template-based automated program repair. In Proceedings of the 28th ACM SIGSOFT International Symposium on Software Testing and Analysis. 31\u015b42.\n\nAVATAR: Fixing Semantic Bugs with Fix Patterns of Static Analysis Violations. Kui Liu, Anil Koyuncu, Dongsun Kim, Tegawend\u00e9 F Bissyand\u00e9, Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution, and Reengineering. the 26th IEEE International Conference on Software Analysis, Evolution, and ReengineeringIEEEKui Liu, Anil Koyuncu, Dongsun Kim, and Tegawend\u00e9 F. Bissyand\u00e9. 2019. AVATAR: Fixing Semantic Bugs with Fix Patterns of Static Analysis Violations. In Proceedings of the 26th IEEE International Conference on Software Analysis, Evolution, and Reengineering. IEEE, 456\u015b467.\n\nA Survey of Test Based Automatic Program Repair. Yuzhen Liu, Long Zhang, Zhenyu Zhang, JSW. 13Yuzhen Liu, Long Zhang, and Zhenyu Zhang. 2018. A Survey of Test Based Automatic Program Repair. JSW 13, 8 (2018), 437\u015b452.\n\nAutomatic patch generation by learning correct code. Fan Long, Martin Rinard, Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming LanguagesFan Long and Martin Rinard. 2016. Automatic patch generation by learning correct code. In Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages. 298\u015b312.\n\nCan Automated Program Repair Refine Fault Localization? A Unified Debugging Approach. Yiling Lou, Ali Ghanbari, Xia Li, Lingming Zhang, Haotian Zhang, Dan Hao, Lu Zhang, 10.1145/3395363.3397351Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis (Virtual Event, USA) (ISSTA 2020). the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis (Virtual Event, USA) (ISSTA 2020)New York, NY, USA, 75\u015b87Association for Computing MachineryYiling Lou, Ali Ghanbari, Xia Li, Lingming Zhang, Haotian Zhang, Dan Hao, and Lu Zhang. 2020. Can Automated Program Repair Refine Fault Localization? A Unified Debugging Approach. In Proceedings of the 29th ACM SIGSOFT In- ternational Symposium on Software Testing and Analysis (Virtual Event, USA) (ISSTA 2020). Association for Computing Machinery, New York, NY, USA, 75\u015b87. https://doi.org/10.1145/3395363.3397351\n\nAutomating the diagnosis and the rectification of design errors with PRIAM. J C Madre, O Coudert, J P Billon, 10.1109/ICCAD.1989.768981989 IEEE International Conference on Computer-Aided Design. J. C. Madre, O. Coudert, and J. P. Billon. 1989. Automating the diagnosis and the rectification of design errors with PRIAM. In 1989 IEEE International Conference on Computer-Aided Design. Digest of Technical Papers. 30\u015b33. https://doi.org/10. 1109/ICCAD.1989.76898\n\nDigital design: with an introduction to the Verilog HDL. Morris Mano, Michael Ciletti, PearsonM Morris Mano and Michael Ciletti. 2013. Digital design: with an introduction to the Verilog HDL. Pearson.\n\nSoftware testing using model programs. Software: Practice and Experience. L I Manolache, Derrick G Kourie, 31L. I. Manolache and Derrick G. Kourie. 2001. Software testing using model programs. Software: Practice and Experience 31, 13 (2001), 1211\u015b1236.\n\nASTOR: A Program Repair Library for Java. Matias Martinez, Martin Monperrus, 10.1145/2931037.2948705Proceedings of ISSTA. ISSTAMatias Martinez and Martin Monperrus. 2016. ASTOR: A Program Repair Library for Java. In Proceedings of ISSTA. https://doi.org/10.1145/2931037.2948705\n\nSearch-based failure discovery using testability transformations to generate pseudo-oracles. Phil Mcminn, Proceedings of the 11th Annual conference on Genetic and evolutionary computation. the 11th Annual conference on Genetic and evolutionary computationPhil McMinn. 2009. Search-based failure discovery using testability transforma- tions to generate pseudo-oracles. In Proceedings of the 11th Annual conference on Genetic and evolutionary computation. 1689\u015b1696.\n\nDirectfix: Looking for simple program repairs. Sergey Mechtaev, Jooyong Yi, Abhik Roychoudhury, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering. IEEE1Sergey Mechtaev, Jooyong Yi, and Abhik Roychoudhury. 2015. Directfix: Looking for simple program repairs. In 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol. 1. IEEE, 448\u015b458.\n\nAngelix: Scalable multiline program patch synthesis via symbolic analysis. Sergey Mechtaev, Jooyong Yi, Abhik Roychoudhury, Proceedings of the 38th international conference on software engineering. 691\u015b701. the 38th international conference on software engineering. 691\u015b701Sergey Mechtaev, Jooyong Yi, and Abhik Roychoudhury. 2016. Angelix: Scalable multiline program patch synthesis via symbolic analysis. In Proceedings of the 38th international conference on software engineering. 691\u015b701.\n\nGenetic algorithms, selection schemes, and the varying effects of noise. L Brad, David E Miller, Goldberg, Evolutionary computation. 4Brad L Miller and David E Goldberg. 1996. Genetic algorithms, selection schemes, and the varying effects of noise. Evolutionary computation 4, 2 (1996), 113\u015b131.\n\nGenetic algorithms, tournament selection, and the effects of noise. L Brad, David E Miller, Goldberg, Complex systems. 9Brad L Miller, David E Goldberg, et al. 1995. Genetic algorithms, tournament selection, and the effects of noise. Complex systems 9, 3 (1995), 193\u015b212.\n\nThe Living Review on Automated Program Repair. Martin Monperrus, hal-01956501. HAL/archives-ouvertes.frTechnical ReportMartin Monperrus. 2018. The Living Review on Automated Program Repair. Tech- nical Report hal-01956501. HAL/archives-ouvertes.fr.\n\narXiv:2104.07851Manish Motwani. 2021. High-Quality Automated Program Repair. cs.SEManish Motwani. 2021. High-Quality Automated Program Repair. arXiv:2104.07851 [cs.SE]\n\nA model for spectrabased software diagnosis. Lee Naish, Kotagiri Hua Jie Lee, Ramamohanarao, ACM Transactions on software engineering and methodology (TOSEM). 20Lee Naish, Hua Jie Lee, and Kotagiri Ramamohanarao. 2011. A model for spectra- based software diagnosis. ACM Transactions on software engineering and method- ology (TOSEM) 20, 3 (2011), 1\u015b32.\n\nSemfix: Program repair via semantic analysis. Hoang Duong Thien Nguyen, Dawei Qi, 35th International Conference on Software Engineering (ICSE). IEEEAbhik Roychoudhury, and Satish ChandraHoang Duong Thien Nguyen, Dawei Qi, Abhik Roychoudhury, and Satish Chan- dra. 2013. Semfix: Program repair via semantic analysis. In 2013 35th International Conference on Software Engineering (ICSE). IEEE, 772\u015b781.\n\nGenetic programming with onepoint crossover. Riccardo Poli, William B Langdon, Soft Computing in Engineering Design and Manufacturing. SpringerRiccardo Poli and William B Langdon. 1998. Genetic programming with one- point crossover. In Soft Computing in Engineering Design and Manufacturing. Springer, 180\u015b189.\n\nThe strength of random search on automated program repair. Yuhua Qi, Xiaoguang Mao, Yan Lei, Ziying Dai, Chengsong Wang, Proceedings of the 36th International Conference on Software Engineering. 254\u015b265. the 36th International Conference on Software Engineering. 254\u015b265Yuhua Qi, Xiaoguang Mao, Yan Lei, Ziying Dai, and Chengsong Wang. 2014. The strength of random search on automated program repair. In Proceedings of the 36th International Conference on Software Engineering. 254\u015b265.\n\nAn analysis of patch plausibility and correctness for generate-and-validate patch generation systems. Zichao Qi, Fan Long, Sara Achour, Martin Rinard, Proceedings of the 2015 International Symposium on Software Testing and Analysis. the 2015 International Symposium on Software Testing and AnalysisZichao Qi, Fan Long, Sara Achour, and Martin Rinard. 2015. An analysis of patch plausibility and correctness for generate-and-validate patch generation systems. In Proceedings of the 2015 International Symposium on Software Testing and Analysis. 24\u015b36.\n\nAn efficient mechanism for debugging RTL description. Yi-Yuan Jiann-Chyi Ran, Chia-Hung Chang, Lin, The 3rd IEEE International Workshop on System-on-Chip for Real-Time Applications. Jiann-Chyi Ran, Yi-Yuan Chang, and Chia-Hung Lin. 2003. An efficient mecha- nism for debugging RTL description. In The 3rd IEEE International Workshop on System-on-Chip for Real-Time Applications, 2003. Proceedings. IEEE, 370\u015b373.\n\nA multi-study investigation into dead code. Simone Romano, Christopher Vendome, IEEE Transactions on Software Engineering. Giuseppe Scanniello, and Denys PoshyvanykSimone Romano, Christopher Vendome, Giuseppe Scanniello, and Denys Poshy- vanyk. 2018. A multi-study investigation into dead code. IEEE Transactions on Software Engineering (2018).\n\nHarnessing evolution for multi-hunk program repair. Seemanta Saha, 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE). Seemanta Saha et al. 2019. Harnessing evolution for multi-hunk program repair. In 2019 IEEE/ACM 41st International Conference on Software Engineering (ICSE).\n\n. Ieee, IEEE, 13\u015b24.\n\nDebugging at the hardware/software interface. Frank Schirrmeister, Michael Mcnamara, Larry Melling, Neeti Bhatnagar, Frank Schirrmeister, Michael McNamara, Larry Melling, and Neeti Bhatnagar. 2012. Debugging at the hardware/software interface. https://www.embedded- computing.com/embedded-computing-design/debugging-at-the-hardware- software-interface\n\nSoftware mutational robustness. Genetic Programming and Evolvable Machines. Eric Schulte, Zachary P Fry, Ethan Fast, Westley Weimer, Stephanie Forrest, 15Eric Schulte, Zachary P Fry, Ethan Fast, Westley Weimer, and Stephanie Forrest. 2014. Software mutational robustness. Genetic Programming and Evolvable Machines 15, 3 (2014), 281\u015b312.\n\nSystem timing. Introduction to VLSI systems. L Charles, C Seitz, L Mead, Conway, Charles L Seitz, C Mead, and L Conway. 1980. System timing. Introduction to VLSI systems (1980), 218\u015b262.\n\nAn automated framework for software test oracle. 10.1016/j.infsof.2011.02.006Information and Software Technology. Seyed Reza Shahamiri, Wan Mohd Nasir Wan Kadir, Suhaimi Ibrahim, and Siti Zaiton Mohd Hashim53Seyed Reza Shahamiri, Wan Mohd Nasir Wan Kadir, Suhaimi Ibrahim, and Siti Zaiton Mohd Hashim. 2011. An automated framework for software test oracle. Information and Software Technology 53, 7 (2011), 774\u015b788. https://doi.org/10. 1016/j.infsof.2011.02.006\n\nA Comparative Study on Automated Software Test Oracle Methods. 10.1109/ICSEA.2009.29Fourth International Conference on Software Engineering Advances. 140\u015b145. Seyed Reza Shahamiri, Wan Mohd Nasir Wan Kadir, and Siti Zaiton Mohd-HashimSeyed Reza Shahamiri, Wan Mohd Nasir Wan Kadir, and Siti Zaiton Mohd-Hashim. 2009. A Comparative Study on Automated Software Test Oracle Methods. In 2009 Fourth International Conference on Software Engineering Advances. 140\u015b145. https://doi.org/10.1109/ICSEA.2009.29\n\nIs the cure worse than the disease? overfitting in automated program repair. K Edward, Smith, T Earl, Claire Le Barr, Yuriy Goues, Brun, Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering. 532\u015b543. the 2015 10th Joint Meeting on Foundations of Software Engineering. 532\u015b543Edward K Smith, Earl T Barr, Claire Le Goues, and Yuriy Brun. 2015. Is the cure worse than the disease? overfitting in automated program repair. In Proceedings of the 2015 10th Joint Meeting on Foundations of Software Engineering. 532\u015b543.\n\nFinding and fixing faults. Stefan Staber, Barbara Jobstmann, Roderick Bloem, Advanced Research Working Conference on Correct Hardware Design and Verification Methods. SpringerStefan Staber, Barbara Jobstmann, and Roderick Bloem. 2005. Finding and fixing faults. In Advanced Research Working Conference on Correct Hardware Design and Verification Methods. Springer, 35\u015b49.\n\nUnderstanding bug fix patterns in verilog. Sangeetha Sudakrishnan, Janaki Madhavan, James WhiteheadJr, Jose Renau, Proceedings of the 2008 international working conference on Mining software repositories. 39\u015b42. the 2008 international working conference on Mining software repositories. 39\u015b42Sangeetha Sudakrishnan, Janaki Madhavan, E James Whitehead Jr, and Jose Renau. 2008. Understanding bug fix patterns in verilog. In Proceedings of the 2008 international working conference on Mining software repositories. 39\u015b42.\n\nRTL Modeling with SystemVerilog for Simulation and Synthesis Using SystemVerilog for ASIC and FPGA Design. Stuart Sutherland, Sutherland HDLIncorporatedStuart Sutherland. 2017. RTL Modeling with SystemVerilog for Simulation and Synthesis Using SystemVerilog for ASIC and FPGA Design. Sutherland HDL, Incor- porated.\n\nVCS Functional Verification Solution. Synopsys, Synopsys. 2020. VCS Functional Verification Solution. https://www.synopsys. com/verification/simulation/vcs.html\n\n. Vcs Synopsys, Verilog Simulator. Avaliable HTTP. VCS Synopsys. 2004. Verilog Simulator. Avaliable HTTP: http://www. synopsys. com/products/simulation/simulation. html (2004).\n\nPyverilog: A python-based hardware design processing toolkit for verilog hdl. Shinya Takamaeda-Yamazaki, International Symposium on Applied Reconfigurable Computing. SpringerShinya Takamaeda-Yamazaki. 2015. Pyverilog: A python-based hardware de- sign processing toolkit for verilog hdl. In International Symposium on Applied Reconfigurable Computing. Springer, 451\u015b460.\n\nDigital logic design using verilog: coding and RTL synthesis. Vaibbhav Taraate, SpringerVaibbhav Taraate. 2016. Digital logic design using verilog: coding and RTL synthesis. Springer.\n\nAdvanced techniques for search-based program repair. S Christopher, Timperley, Dissertation. University of YorkPh. D.Christopher S Timperley. 2017. Advanced techniques for search-based program repair. Ph. D. Dissertation. University of York.\n\nImprovements in genetic algorithms. J A Vasconcelos, Jaime Arturo Ramirez, R R Takahashi, Saldanha, IEEE Transactions on magnetics. 37JA Vasconcelos, Jaime Arturo Ramirez, RHC Takahashi, and RR Saldanha. 2001. Improvements in genetic algorithms. IEEE Transactions on magnetics 37, 5 (2001), 3414\u015b3417.\n\nIntel Could Make Billions Off of Meltdown & Spectre. Jayce Wagner, Jayce Wagner. 2018. Intel Could Make Billions Off of Meltdown & Spec- tre. https://www.digitaltrends.com/computing/intel-could-make-billions-off- meltdown-spectre/\n\nPatches as Better Bug Reports. Westley Weimer, 10.1145/1173706.1173734Proceedings of the 5th International Conference on Generative Programming and Component Engineering. the 5th International Conference on Generative Programming and Component EngineeringPortland, Oregon, USA; New York, NY, USA, 181\u015b190Association for Computing MachineryGPCE '06)Westley Weimer. 2006. Patches as Better Bug Reports. In Proceedings of the 5th International Conference on Generative Programming and Component Engineering (Portland, Oregon, USA) (GPCE '06). Association for Computing Machinery, New York, NY, USA, 181\u015b190. https://doi.org/10.1145/1173706.1173734\n\nAutomatic program repair with evolutionary computation. Westley Weimer, Stephanie Forrest, Claire Le Goues, Thanhvu Nguyen, Commun. ACM. 53Westley Weimer, Stephanie Forrest, Claire Le Goues, and ThanhVu Nguyen. 2010. Automatic program repair with evolutionary computation. Commun. ACM 53, 5 (2010), 109\u015b116.\n\nAutomatically finding patches using genetic programming. Westley Weimer, Thanhvu Nguyen, Claire Le Goues, Stephanie Forrest, IEEE 31st International Conference on Software Engineering. IEEEWestley Weimer, ThanhVu Nguyen, Claire Le Goues, and Stephanie Forrest. 2009. Automatically finding patches using genetic programming. In 2009 IEEE 31st International Conference on Software Engineering. IEEE, 364\u015b374.\n\nAutomated debugging: Are we close. Andreas Zeller, Computer. 11Andreas Zeller. 2001. Automated debugging: Are we close. Computer 11 (2001), 26\u015b31.\n", "annotations": {"author": "[{\"end\":142,\"start\":111},{\"end\":152,\"start\":143},{\"end\":186,\"start\":153},{\"end\":200,\"start\":187},{\"end\":210,\"start\":201},{\"end\":226,\"start\":211},{\"end\":282,\"start\":227},{\"end\":338,\"start\":283},{\"end\":394,\"start\":339},{\"end\":142,\"start\":111},{\"end\":152,\"start\":143},{\"end\":186,\"start\":153},{\"end\":200,\"start\":187},{\"end\":210,\"start\":201},{\"end\":226,\"start\":211},{\"end\":282,\"start\":227},{\"end\":338,\"start\":283},{\"end\":394,\"start\":339}]", "publisher": "[{\"end\":69,\"start\":66},{\"end\":768,\"start\":765},{\"end\":69,\"start\":66},{\"end\":768,\"start\":765}]", "author_last_name": "[{\"end\":123,\"start\":118},{\"end\":151,\"start\":146},{\"end\":167,\"start\":161},{\"end\":199,\"start\":194},{\"end\":209,\"start\":204},{\"end\":123,\"start\":118},{\"end\":151,\"start\":146},{\"end\":167,\"start\":161},{\"end\":199,\"start\":194},{\"end\":209,\"start\":204}]", "author_first_name": "[{\"end\":117,\"start\":111},{\"end\":145,\"start\":143},{\"end\":160,\"start\":153},{\"end\":193,\"start\":187},{\"end\":203,\"start\":201},{\"end\":218,\"start\":211},{\"end\":225,\"start\":219},{\"end\":117,\"start\":111},{\"end\":145,\"start\":143},{\"end\":160,\"start\":153},{\"end\":193,\"start\":187},{\"end\":203,\"start\":201},{\"end\":218,\"start\":211},{\"end\":225,\"start\":219}]", "author_affiliation": "[{\"end\":281,\"start\":228},{\"end\":337,\"start\":284},{\"end\":393,\"start\":340},{\"end\":281,\"start\":228},{\"end\":337,\"start\":284},{\"end\":393,\"start\":340}]", "title": "[{\"end\":65,\"start\":1},{\"end\":459,\"start\":395},{\"end\":65,\"start\":1},{\"end\":459,\"start\":395}]", "venue": "[{\"end\":600,\"start\":461},{\"end\":600,\"start\":461}]", "abstract": "[{\"end\":1892,\"start\":825},{\"end\":1892,\"start\":825}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b69\"},\"end\":2060,\"start\":2056},{\"end\":2961,\"start\":2960},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2966,\"start\":2962},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3105,\"start\":3102},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":3108,\"start\":3105},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":3111,\"start\":3108},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":4097,\"start\":4093},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":4100,\"start\":4097},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4229,\"start\":4225},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4378,\"start\":4374},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":4381,\"start\":4378},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4500,\"start\":4496},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":4503,\"start\":4500},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":4506,\"start\":4503},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":5629,\"start\":5625},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6131,\"start\":6127},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6177,\"start\":6174},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":6559,\"start\":6555},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":7526,\"start\":7522},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9310,\"start\":9306},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":10303,\"start\":10300},{\"end\":14496,\"start\":14494},{\"end\":14554,\"start\":14552},{\"end\":14599,\"start\":14597},{\"end\":14635,\"start\":14632},{\"end\":14663,\"start\":14660},{\"end\":14704,\"start\":14701},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":15861,\"start\":15857},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":16170,\"start\":16169},{\"end\":16193,\"start\":16191},{\"end\":16255,\"start\":16253},{\"end\":16310,\"start\":16307},{\"end\":16373,\"start\":16370},{\"end\":16416,\"start\":16413},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":16492,\"start\":16489},{\"attributes\":{\"ref_id\":\"b88\"},\"end\":17479,\"start\":17475},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17798,\"start\":17794},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":17891,\"start\":17887},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":17894,\"start\":17891},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":17990,\"start\":17986},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":18075,\"start\":18071},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":18283,\"start\":18279},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":18719,\"start\":18715},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":19122,\"start\":19119},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":19125,\"start\":19122},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":19128,\"start\":19125},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":21832,\"start\":21828},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":23134,\"start\":23130},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":25731,\"start\":25727},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":25734,\"start\":25731},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":25737,\"start\":25734},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":26003,\"start\":25999},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":26482,\"start\":26478},{\"end\":26489,\"start\":26482},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":26629,\"start\":26625},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":27927,\"start\":27923},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":27930,\"start\":27927},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":27933,\"start\":27930},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":29124,\"start\":29120},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":29642,\"start\":29638},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":29835,\"start\":29831},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":29838,\"start\":29835},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":29841,\"start\":29838},{\"attributes\":{\"ref_id\":\"b82\"},\"end\":29844,\"start\":29841},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":30142,\"start\":30138},{\"attributes\":{\"ref_id\":\"b83\"},\"end\":30145,\"start\":30142},{\"attributes\":{\"ref_id\":\"b86\"},\"end\":30429,\"start\":30425},{\"attributes\":{\"ref_id\":\"b87\"},\"end\":30507,\"start\":30503},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":30816,\"start\":30812},{\"end\":31056,\"start\":31055},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":31295,\"start\":31291},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":31663,\"start\":31659},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":31929,\"start\":31925},{\"attributes\":{\"ref_id\":\"b88\"},\"end\":31973,\"start\":31969},{\"attributes\":{\"ref_id\":\"b79\"},\"end\":32552,\"start\":32548},{\"attributes\":{\"ref_id\":\"b78\"},\"end\":32667,\"start\":32663},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":33605,\"start\":33601},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":33608,\"start\":33605},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":33611,\"start\":33608},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":33667,\"start\":33663},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":33670,\"start\":33667},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":35379,\"start\":35375},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":35382,\"start\":35379},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":36124,\"start\":36120},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":36247,\"start\":36244},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":36250,\"start\":36247},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":36253,\"start\":36250},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":36256,\"start\":36253},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":36259,\"start\":36256},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":36262,\"start\":36259},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":36333,\"start\":36329},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":36336,\"start\":36333},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":36339,\"start\":36336},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":36342,\"start\":36339},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":36391,\"start\":36388},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":36394,\"start\":36391},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":36397,\"start\":36394},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":36400,\"start\":36397},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":36438,\"start\":36435},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":36774,\"start\":36770},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":37215,\"start\":37211},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":37218,\"start\":37215},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":37778,\"start\":37775},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":38830,\"start\":38826},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":40722,\"start\":40718},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":40725,\"start\":40722},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":40728,\"start\":40725},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":40731,\"start\":40728},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":40734,\"start\":40731},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":40737,\"start\":40734},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":41789,\"start\":41785},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":41792,\"start\":41789},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":41795,\"start\":41792},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":41998,\"start\":41994},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":42808,\"start\":42804},{\"attributes\":{\"ref_id\":\"b86\"},\"end\":42811,\"start\":42808},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":44011,\"start\":44007},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":44036,\"start\":44032},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":46072,\"start\":46068},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":46539,\"start\":46535},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46801,\"start\":46800},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":47106,\"start\":47102},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":47109,\"start\":47106},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":47112,\"start\":47109},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":47463,\"start\":47459},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":47466,\"start\":47463},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":47756,\"start\":47752},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":47835,\"start\":47831},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":47838,\"start\":47835},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":51456,\"start\":51452},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":55845,\"start\":55841},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":55848,\"start\":55845},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":57201,\"start\":57197},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":57541,\"start\":57538},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":58268,\"start\":58264},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":58288,\"start\":58284},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":58452,\"start\":58448},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":58646,\"start\":58642},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":58930,\"start\":58926},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":59053,\"start\":59049},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":59407,\"start\":59403},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":59410,\"start\":59407},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":59413,\"start\":59410},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":59945,\"start\":59942},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":59948,\"start\":59945},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":59951,\"start\":59948},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":59954,\"start\":59951},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":60110,\"start\":60106},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":60113,\"start\":60110},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":60116,\"start\":60113},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":60119,\"start\":60116},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":62781,\"start\":62780},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":71449,\"start\":71445},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":2060,\"start\":2056},{\"end\":2961,\"start\":2960},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2966,\"start\":2962},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3105,\"start\":3102},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":3108,\"start\":3105},{\"attributes\":{\"ref_id\":\"b84\"},\"end\":3111,\"start\":3108},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":4097,\"start\":4093},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":4100,\"start\":4097},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4229,\"start\":4225},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4378,\"start\":4374},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":4381,\"start\":4378},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4500,\"start\":4496},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":4503,\"start\":4500},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":4506,\"start\":4503},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":5629,\"start\":5625},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6131,\"start\":6127},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6177,\"start\":6174},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":6559,\"start\":6555},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":7526,\"start\":7522},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9310,\"start\":9306},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":10303,\"start\":10300},{\"end\":14496,\"start\":14494},{\"end\":14554,\"start\":14552},{\"end\":14599,\"start\":14597},{\"end\":14635,\"start\":14632},{\"end\":14663,\"start\":14660},{\"end\":14704,\"start\":14701},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":15861,\"start\":15857},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":16170,\"start\":16169},{\"end\":16193,\"start\":16191},{\"end\":16255,\"start\":16253},{\"end\":16310,\"start\":16307},{\"end\":16373,\"start\":16370},{\"end\":16416,\"start\":16413},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":16492,\"start\":16489},{\"attributes\":{\"ref_id\":\"b88\"},\"end\":17479,\"start\":17475},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17798,\"start\":17794},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":17891,\"start\":17887},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":17894,\"start\":17891},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":17990,\"start\":17986},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":18075,\"start\":18071},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":18283,\"start\":18279},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":18719,\"start\":18715},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":19122,\"start\":19119},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":19125,\"start\":19122},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":19128,\"start\":19125},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":21832,\"start\":21828},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":23134,\"start\":23130},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":25731,\"start\":25727},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":25734,\"start\":25731},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":25737,\"start\":25734},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":26003,\"start\":25999},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":26482,\"start\":26478},{\"end\":26489,\"start\":26482},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":26629,\"start\":26625},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":27927,\"start\":27923},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":27930,\"start\":27927},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":27933,\"start\":27930},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":29124,\"start\":29120},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":29642,\"start\":29638},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":29835,\"start\":29831},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":29838,\"start\":29835},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":29841,\"start\":29838},{\"attributes\":{\"ref_id\":\"b82\"},\"end\":29844,\"start\":29841},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":30142,\"start\":30138},{\"attributes\":{\"ref_id\":\"b83\"},\"end\":30145,\"start\":30142},{\"attributes\":{\"ref_id\":\"b86\"},\"end\":30429,\"start\":30425},{\"attributes\":{\"ref_id\":\"b87\"},\"end\":30507,\"start\":30503},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":30816,\"start\":30812},{\"end\":31056,\"start\":31055},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":31295,\"start\":31291},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":31663,\"start\":31659},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":31929,\"start\":31925},{\"attributes\":{\"ref_id\":\"b88\"},\"end\":31973,\"start\":31969},{\"attributes\":{\"ref_id\":\"b79\"},\"end\":32552,\"start\":32548},{\"attributes\":{\"ref_id\":\"b78\"},\"end\":32667,\"start\":32663},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":33605,\"start\":33601},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":33608,\"start\":33605},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":33611,\"start\":33608},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":33667,\"start\":33663},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":33670,\"start\":33667},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":35379,\"start\":35375},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":35382,\"start\":35379},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":36124,\"start\":36120},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":36247,\"start\":36244},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":36250,\"start\":36247},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":36253,\"start\":36250},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":36256,\"start\":36253},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":36259,\"start\":36256},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":36262,\"start\":36259},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":36333,\"start\":36329},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":36336,\"start\":36333},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":36339,\"start\":36336},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":36342,\"start\":36339},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":36391,\"start\":36388},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":36394,\"start\":36391},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":36397,\"start\":36394},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":36400,\"start\":36397},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":36438,\"start\":36435},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":36774,\"start\":36770},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":37215,\"start\":37211},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":37218,\"start\":37215},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":37778,\"start\":37775},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":38830,\"start\":38826},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":40722,\"start\":40718},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":40725,\"start\":40722},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":40728,\"start\":40725},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":40731,\"start\":40728},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":40734,\"start\":40731},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":40737,\"start\":40734},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":41789,\"start\":41785},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":41792,\"start\":41789},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":41795,\"start\":41792},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":41998,\"start\":41994},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":42808,\"start\":42804},{\"attributes\":{\"ref_id\":\"b86\"},\"end\":42811,\"start\":42808},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":44011,\"start\":44007},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":44036,\"start\":44032},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":46072,\"start\":46068},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":46539,\"start\":46535},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":46801,\"start\":46800},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":47106,\"start\":47102},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":47109,\"start\":47106},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":47112,\"start\":47109},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":47463,\"start\":47459},{\"attributes\":{\"ref_id\":\"b85\"},\"end\":47466,\"start\":47463},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":47756,\"start\":47752},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":47835,\"start\":47831},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":47838,\"start\":47835},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":51456,\"start\":51452},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":55845,\"start\":55841},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":55848,\"start\":55845},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":57201,\"start\":57197},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":57541,\"start\":57538},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":58268,\"start\":58264},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":58288,\"start\":58284},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":58452,\"start\":58448},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":58646,\"start\":58642},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":58930,\"start\":58926},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":59053,\"start\":59049},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":59407,\"start\":59403},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":59410,\"start\":59407},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":59413,\"start\":59410},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":59945,\"start\":59942},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":59948,\"start\":59945},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":59951,\"start\":59948},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":59954,\"start\":59951},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":60110,\"start\":60106},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":60113,\"start\":60110},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":60116,\"start\":60113},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":60119,\"start\":60116},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":62781,\"start\":62780},{\"attributes\":{\"ref_id\":\"b81\"},\"end\":71449,\"start\":71445}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":66141,\"start\":65967},{\"attributes\":{\"id\":\"fig_1\"},\"end\":66438,\"start\":66142},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":66629,\"start\":66439},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":67150,\"start\":66630},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":67725,\"start\":67151},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":68247,\"start\":67726},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":68549,\"start\":68248},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":69506,\"start\":68550},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":70376,\"start\":69507},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":70977,\"start\":70377},{\"attributes\":{\"id\":\"fig_0\"},\"end\":66141,\"start\":65967},{\"attributes\":{\"id\":\"fig_1\"},\"end\":66438,\"start\":66142},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":66629,\"start\":66439},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":67150,\"start\":66630},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":67725,\"start\":67151},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":68247,\"start\":67726},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":68549,\"start\":68248},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":69506,\"start\":68550},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":70376,\"start\":69507},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":70977,\"start\":70377}]", "paragraph": "[{\"end\":3842,\"start\":1908},{\"end\":4824,\"start\":3844},{\"end\":5407,\"start\":4826},{\"end\":5845,\"start\":5409},{\"end\":6371,\"start\":5847},{\"end\":7463,\"start\":6373},{\"end\":7863,\"start\":7465},{\"end\":7906,\"start\":7865},{\"end\":7963,\"start\":7908},{\"end\":8379,\"start\":7965},{\"end\":8470,\"start\":8381},{\"end\":9468,\"start\":8493},{\"end\":10376,\"start\":9470},{\"end\":10972,\"start\":10378},{\"end\":12830,\"start\":10974},{\"end\":14116,\"start\":12832},{\"end\":14736,\"start\":14118},{\"end\":15019,\"start\":14759},{\"end\":15801,\"start\":15021},{\"end\":16231,\"start\":15803},{\"end\":16284,\"start\":16233},{\"end\":17895,\"start\":16286},{\"end\":18284,\"start\":17918},{\"end\":18609,\"start\":18286},{\"end\":19321,\"start\":18611},{\"end\":19986,\"start\":19323},{\"end\":20345,\"start\":19988},{\"end\":21631,\"start\":20347},{\"end\":22376,\"start\":21654},{\"end\":23717,\"start\":22378},{\"end\":24669,\"start\":23719},{\"end\":24882,\"start\":24671},{\"end\":25008,\"start\":24884},{\"end\":25187,\"start\":25010},{\"end\":25246,\"start\":25189},{\"end\":25497,\"start\":25289},{\"end\":26248,\"start\":25518},{\"end\":27817,\"start\":26250},{\"end\":28175,\"start\":27838},{\"end\":29070,\"start\":28177},{\"end\":29479,\"start\":29072},{\"end\":30146,\"start\":29493},{\"end\":30645,\"start\":30167},{\"end\":31297,\"start\":30647},{\"end\":31664,\"start\":31321},{\"end\":32178,\"start\":31666},{\"end\":32930,\"start\":32201},{\"end\":33930,\"start\":32971},{\"end\":34958,\"start\":33963},{\"end\":35837,\"start\":34960},{\"end\":36401,\"start\":35893},{\"end\":37130,\"start\":36403},{\"end\":37927,\"start\":37132},{\"end\":38537,\"start\":37929},{\"end\":39385,\"start\":38573},{\"end\":40738,\"start\":39387},{\"end\":41220,\"start\":40766},{\"end\":42118,\"start\":41222},{\"end\":42633,\"start\":42120},{\"end\":42875,\"start\":42635},{\"end\":43056,\"start\":42900},{\"end\":43220,\"start\":43058},{\"end\":43419,\"start\":43222},{\"end\":45049,\"start\":43463},{\"end\":45607,\"start\":45051},{\"end\":46469,\"start\":45609},{\"end\":47467,\"start\":46471},{\"end\":48483,\"start\":47469},{\"end\":48832,\"start\":48485},{\"end\":50736,\"start\":48886},{\"end\":50911,\"start\":50738},{\"end\":52124,\"start\":50948},{\"end\":53197,\"start\":52126},{\"end\":53434,\"start\":53199},{\"end\":55294,\"start\":53482},{\"end\":56078,\"start\":55296},{\"end\":56306,\"start\":56080},{\"end\":56600,\"start\":56346},{\"end\":57202,\"start\":56602},{\"end\":57542,\"start\":57204},{\"end\":57945,\"start\":57544},{\"end\":59238,\"start\":57962},{\"end\":60573,\"start\":59240},{\"end\":62093,\"start\":60588},{\"end\":62452,\"start\":62113},{\"end\":62713,\"start\":62489},{\"end\":62782,\"start\":62760},{\"end\":63105,\"start\":62802},{\"end\":64107,\"start\":63126},{\"end\":65091,\"start\":64135},{\"end\":65741,\"start\":65131},{\"end\":65966,\"start\":65755},{\"end\":3842,\"start\":1908},{\"end\":4824,\"start\":3844},{\"end\":5407,\"start\":4826},{\"end\":5845,\"start\":5409},{\"end\":6371,\"start\":5847},{\"end\":7463,\"start\":6373},{\"end\":7863,\"start\":7465},{\"end\":7906,\"start\":7865},{\"end\":7963,\"start\":7908},{\"end\":8379,\"start\":7965},{\"end\":8470,\"start\":8381},{\"end\":9468,\"start\":8493},{\"end\":10376,\"start\":9470},{\"end\":10972,\"start\":10378},{\"end\":12830,\"start\":10974},{\"end\":14116,\"start\":12832},{\"end\":14736,\"start\":14118},{\"end\":15019,\"start\":14759},{\"end\":15801,\"start\":15021},{\"end\":16231,\"start\":15803},{\"end\":16284,\"start\":16233},{\"end\":17895,\"start\":16286},{\"end\":18284,\"start\":17918},{\"end\":18609,\"start\":18286},{\"end\":19321,\"start\":18611},{\"end\":19986,\"start\":19323},{\"end\":20345,\"start\":19988},{\"end\":21631,\"start\":20347},{\"end\":22376,\"start\":21654},{\"end\":23717,\"start\":22378},{\"end\":24669,\"start\":23719},{\"end\":24882,\"start\":24671},{\"end\":25008,\"start\":24884},{\"end\":25187,\"start\":25010},{\"end\":25246,\"start\":25189},{\"end\":25497,\"start\":25289},{\"end\":26248,\"start\":25518},{\"end\":27817,\"start\":26250},{\"end\":28175,\"start\":27838},{\"end\":29070,\"start\":28177},{\"end\":29479,\"start\":29072},{\"end\":30146,\"start\":29493},{\"end\":30645,\"start\":30167},{\"end\":31297,\"start\":30647},{\"end\":31664,\"start\":31321},{\"end\":32178,\"start\":31666},{\"end\":32930,\"start\":32201},{\"end\":33930,\"start\":32971},{\"end\":34958,\"start\":33963},{\"end\":35837,\"start\":34960},{\"end\":36401,\"start\":35893},{\"end\":37130,\"start\":36403},{\"end\":37927,\"start\":37132},{\"end\":38537,\"start\":37929},{\"end\":39385,\"start\":38573},{\"end\":40738,\"start\":39387},{\"end\":41220,\"start\":40766},{\"end\":42118,\"start\":41222},{\"end\":42633,\"start\":42120},{\"end\":42875,\"start\":42635},{\"end\":43056,\"start\":42900},{\"end\":43220,\"start\":43058},{\"end\":43419,\"start\":43222},{\"end\":45049,\"start\":43463},{\"end\":45607,\"start\":45051},{\"end\":46469,\"start\":45609},{\"end\":47467,\"start\":46471},{\"end\":48483,\"start\":47469},{\"end\":48832,\"start\":48485},{\"end\":50736,\"start\":48886},{\"end\":50911,\"start\":50738},{\"end\":52124,\"start\":50948},{\"end\":53197,\"start\":52126},{\"end\":53434,\"start\":53199},{\"end\":55294,\"start\":53482},{\"end\":56078,\"start\":55296},{\"end\":56306,\"start\":56080},{\"end\":56600,\"start\":56346},{\"end\":57202,\"start\":56602},{\"end\":57542,\"start\":57204},{\"end\":57945,\"start\":57544},{\"end\":59238,\"start\":57962},{\"end\":60573,\"start\":59240},{\"end\":62093,\"start\":60588},{\"end\":62452,\"start\":62113},{\"end\":62713,\"start\":62489},{\"end\":62782,\"start\":62760},{\"end\":63105,\"start\":62802},{\"end\":64107,\"start\":63126},{\"end\":65091,\"start\":64135},{\"end\":65741,\"start\":65131},{\"end\":65966,\"start\":65755}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":25288,\"start\":25247},{\"attributes\":{\"id\":\"formula_0\"},\"end\":25288,\"start\":25247}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":26305,\"start\":26298},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":34410,\"start\":34403},{\"end\":40355,\"start\":40348},{\"end\":41359,\"start\":41352},{\"end\":43483,\"start\":43476},{\"end\":65233,\"start\":65224},{\"end\":65496,\"start\":65488},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":26305,\"start\":26298},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":34410,\"start\":34403},{\"end\":40355,\"start\":40348},{\"end\":41359,\"start\":41352},{\"end\":43483,\"start\":43476},{\"end\":65233,\"start\":65224},{\"end\":65496,\"start\":65488}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1906,\"start\":1894},{\"attributes\":{\"n\":\"2\"},\"end\":8491,\"start\":8473},{\"attributes\":{\"n\":\"3\"},\"end\":14757,\"start\":14739},{\"attributes\":{\"n\":\"3.1\"},\"end\":17916,\"start\":17898},{\"attributes\":{\"n\":\"3.2\"},\"end\":21652,\"start\":21634},{\"attributes\":{\"n\":\"3.3\"},\"end\":25516,\"start\":25500},{\"attributes\":{\"n\":\"3.4\"},\"end\":27836,\"start\":27820},{\"attributes\":{\"n\":\"3.5\"},\"end\":29491,\"start\":29482},{\"attributes\":{\"n\":\"3.6\"},\"end\":30165,\"start\":30149},{\"attributes\":{\"n\":\"3.7\"},\"end\":31319,\"start\":31300},{\"attributes\":{\"n\":\"4\"},\"end\":32199,\"start\":32181},{\"attributes\":{\"n\":\"4.1\"},\"end\":32969,\"start\":32933},{\"attributes\":{\"n\":\"4.1.1\"},\"end\":33961,\"start\":33933},{\"attributes\":{\"n\":\"4.1.2\"},\"end\":35891,\"start\":35840},{\"attributes\":{\"n\":\"4.1.3\"},\"end\":38571,\"start\":38540},{\"attributes\":{\"n\":\"4.2\"},\"end\":40764,\"start\":40741},{\"attributes\":{\"n\":\"5\"},\"end\":42898,\"start\":42878},{\"attributes\":{\"n\":\"5.1\"},\"end\":43461,\"start\":43422},{\"attributes\":{\"n\":\"5.2\"},\"end\":48884,\"start\":48835},{\"attributes\":{\"n\":\"5.3\"},\"end\":50946,\"start\":50914},{\"attributes\":{\"n\":\"5.4\"},\"end\":53480,\"start\":53437},{\"attributes\":{\"n\":\"6\"},\"end\":56344,\"start\":56309},{\"attributes\":{\"n\":\"7\"},\"end\":57960,\"start\":57948},{\"attributes\":{\"n\":\"8\"},\"end\":60586,\"start\":60576},{\"end\":62111,\"start\":62096},{\"end\":62487,\"start\":62455},{\"end\":62758,\"start\":62716},{\"end\":62800,\"start\":62785},{\"end\":63124,\"start\":63108},{\"end\":64133,\"start\":64110},{\"end\":65129,\"start\":65094},{\"end\":65753,\"start\":65744},{\"end\":65978,\"start\":65968},{\"end\":66153,\"start\":66143},{\"end\":67736,\"start\":67727},{\"end\":68560,\"start\":68551},{\"attributes\":{\"n\":\"1\"},\"end\":1906,\"start\":1894},{\"attributes\":{\"n\":\"2\"},\"end\":8491,\"start\":8473},{\"attributes\":{\"n\":\"3\"},\"end\":14757,\"start\":14739},{\"attributes\":{\"n\":\"3.1\"},\"end\":17916,\"start\":17898},{\"attributes\":{\"n\":\"3.2\"},\"end\":21652,\"start\":21634},{\"attributes\":{\"n\":\"3.3\"},\"end\":25516,\"start\":25500},{\"attributes\":{\"n\":\"3.4\"},\"end\":27836,\"start\":27820},{\"attributes\":{\"n\":\"3.5\"},\"end\":29491,\"start\":29482},{\"attributes\":{\"n\":\"3.6\"},\"end\":30165,\"start\":30149},{\"attributes\":{\"n\":\"3.7\"},\"end\":31319,\"start\":31300},{\"attributes\":{\"n\":\"4\"},\"end\":32199,\"start\":32181},{\"attributes\":{\"n\":\"4.1\"},\"end\":32969,\"start\":32933},{\"attributes\":{\"n\":\"4.1.1\"},\"end\":33961,\"start\":33933},{\"attributes\":{\"n\":\"4.1.2\"},\"end\":35891,\"start\":35840},{\"attributes\":{\"n\":\"4.1.3\"},\"end\":38571,\"start\":38540},{\"attributes\":{\"n\":\"4.2\"},\"end\":40764,\"start\":40741},{\"attributes\":{\"n\":\"5\"},\"end\":42898,\"start\":42878},{\"attributes\":{\"n\":\"5.1\"},\"end\":43461,\"start\":43422},{\"attributes\":{\"n\":\"5.2\"},\"end\":48884,\"start\":48835},{\"attributes\":{\"n\":\"5.3\"},\"end\":50946,\"start\":50914},{\"attributes\":{\"n\":\"5.4\"},\"end\":53480,\"start\":53437},{\"attributes\":{\"n\":\"6\"},\"end\":56344,\"start\":56309},{\"attributes\":{\"n\":\"7\"},\"end\":57960,\"start\":57948},{\"attributes\":{\"n\":\"8\"},\"end\":60586,\"start\":60576},{\"end\":62111,\"start\":62096},{\"end\":62487,\"start\":62455},{\"end\":62758,\"start\":62716},{\"end\":62800,\"start\":62785},{\"end\":63124,\"start\":63108},{\"end\":64133,\"start\":64110},{\"end\":65129,\"start\":65094},{\"end\":65753,\"start\":65744},{\"end\":65978,\"start\":65968},{\"end\":66153,\"start\":66143},{\"end\":67736,\"start\":67727},{\"end\":68560,\"start\":68551}]", "table": "[{\"end\":66629,\"start\":66624},{\"end\":67150,\"start\":66940},{\"end\":67725,\"start\":67536},{\"end\":68247,\"start\":67799},{\"end\":69506,\"start\":68710},{\"end\":66629,\"start\":66624},{\"end\":67150,\"start\":66940},{\"end\":67725,\"start\":67536},{\"end\":68247,\"start\":67799},{\"end\":69506,\"start\":68710}]", "figure_caption": "[{\"end\":66141,\"start\":65980},{\"end\":66438,\"start\":66155},{\"end\":66624,\"start\":66441},{\"end\":66940,\"start\":66632},{\"end\":67536,\"start\":67153},{\"end\":67799,\"start\":67738},{\"end\":68549,\"start\":68250},{\"end\":68710,\"start\":68562},{\"end\":70376,\"start\":69509},{\"end\":70977,\"start\":70379},{\"end\":66141,\"start\":65980},{\"end\":66438,\"start\":66155},{\"end\":66624,\"start\":66441},{\"end\":66940,\"start\":66632},{\"end\":67536,\"start\":67153},{\"end\":67799,\"start\":67738},{\"end\":68549,\"start\":68250},{\"end\":68710,\"start\":68562},{\"end\":70376,\"start\":69509},{\"end\":70977,\"start\":70379}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8751,\"start\":8742},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8798,\"start\":8789},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":9578,\"start\":9569},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":9840,\"start\":9831},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10191,\"start\":10182},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10457,\"start\":10449},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10772,\"start\":10763},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11026,\"start\":11017},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11824,\"start\":11816},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11918,\"start\":11909},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12060,\"start\":12051},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12247,\"start\":12238},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12828,\"start\":12819},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13120,\"start\":13111},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13684,\"start\":13676},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":20905,\"start\":20896},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":21044,\"start\":21035},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":22600,\"start\":22590},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":24586,\"start\":24578},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":25043,\"start\":25035},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":26950,\"start\":26941},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":34070,\"start\":34062},{\"end\":46175,\"start\":46167},{\"end\":48323,\"start\":48315},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8751,\"start\":8742},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8798,\"start\":8789},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":9578,\"start\":9569},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":9840,\"start\":9831},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10191,\"start\":10182},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10457,\"start\":10449},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":10772,\"start\":10763},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11026,\"start\":11017},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11824,\"start\":11816},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11918,\"start\":11909},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12060,\"start\":12051},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12247,\"start\":12238},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":12828,\"start\":12819},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13120,\"start\":13111},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13684,\"start\":13676},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":20905,\"start\":20896},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":21044,\"start\":21035},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":22600,\"start\":22590},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":24586,\"start\":24578},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":25043,\"start\":25035},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":26950,\"start\":26941},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":34070,\"start\":34062},{\"end\":46175,\"start\":46167},{\"end\":48323,\"start\":48315}]", "bib_author_first_name": "[{\"end\":71516,\"start\":71513},{\"end\":71529,\"start\":71524},{\"end\":71544,\"start\":71541},{\"end\":71568,\"start\":71556},{\"end\":71850,\"start\":71844},{\"end\":71867,\"start\":71860},{\"end\":71882,\"start\":71879},{\"end\":72336,\"start\":72332},{\"end\":72356,\"start\":72352},{\"end\":72838,\"start\":72832},{\"end\":72860,\"start\":72852},{\"end\":72869,\"start\":72868},{\"end\":72871,\"start\":72870},{\"end\":73165,\"start\":73158},{\"end\":73176,\"start\":73175},{\"end\":73189,\"start\":73185},{\"end\":73204,\"start\":73198},{\"end\":73713,\"start\":73709},{\"end\":73729,\"start\":73724},{\"end\":73746,\"start\":73739},{\"end\":74103,\"start\":74097},{\"end\":74118,\"start\":74112},{\"end\":74439,\"start\":74433},{\"end\":74697,\"start\":74696},{\"end\":74708,\"start\":74704},{\"end\":74719,\"start\":74715},{\"end\":74736,\"start\":74728},{\"end\":74749,\"start\":74745},{\"end\":75208,\"start\":75202},{\"end\":75222,\"start\":75217},{\"end\":75488,\"start\":75482},{\"end\":75700,\"start\":75692},{\"end\":75713,\"start\":75708},{\"end\":76005,\"start\":75998},{\"end\":76017,\"start\":76013},{\"end\":76033,\"start\":76026},{\"end\":76048,\"start\":76044},{\"end\":76050,\"start\":76049},{\"end\":76400,\"start\":76393},{\"end\":76417,\"start\":76412},{\"end\":76433,\"start\":76424},{\"end\":76456,\"start\":76446},{\"end\":76471,\"start\":76466},{\"end\":76487,\"start\":76481},{\"end\":76950,\"start\":76944},{\"end\":76963,\"start\":76957},{\"end\":76972,\"start\":76969},{\"end\":76986,\"start\":76978},{\"end\":76996,\"start\":76994},{\"end\":77008,\"start\":77004},{\"end\":77018,\"start\":77014},{\"end\":77419,\"start\":77414},{\"end\":77435,\"start\":77430},{\"end\":77449,\"start\":77442},{\"end\":77464,\"start\":77457},{\"end\":77477,\"start\":77473},{\"end\":77497,\"start\":77490},{\"end\":77512,\"start\":77507},{\"end\":77514,\"start\":77513},{\"end\":77531,\"start\":77521},{\"end\":77552,\"start\":77541},{\"end\":77976,\"start\":77968},{\"end\":77990,\"start\":77981},{\"end\":78004,\"start\":77999},{\"end\":78366,\"start\":78360},{\"end\":78631,\"start\":78622},{\"end\":78648,\"start\":78641},{\"end\":78664,\"start\":78657},{\"end\":78679,\"start\":78673},{\"end\":78682,\"start\":78680},{\"end\":79156,\"start\":79151},{\"end\":79462,\"start\":79458},{\"end\":79479,\"start\":79472},{\"end\":79497,\"start\":79489},{\"end\":79779,\"start\":79772},{\"end\":79796,\"start\":79789},{\"end\":79810,\"start\":79804},{\"end\":80342,\"start\":80335},{\"end\":80356,\"start\":80351},{\"end\":80368,\"start\":80363},{\"end\":80370,\"start\":80369},{\"end\":80884,\"start\":80880},{\"end\":80897,\"start\":80893},{\"end\":80901,\"start\":80898},{\"end\":80912,\"start\":80907},{\"end\":80927,\"start\":80923},{\"end\":80940,\"start\":80936},{\"end\":81498,\"start\":81492},{\"end\":81511,\"start\":81506},{\"end\":81528,\"start\":81522},{\"end\":81984,\"start\":81982},{\"end\":81998,\"start\":81992},{\"end\":82015,\"start\":82006},{\"end\":82032,\"start\":82025},{\"end\":82785,\"start\":82780},{\"end\":82804,\"start\":82799},{\"end\":82816,\"start\":82812},{\"end\":82830,\"start\":82825},{\"end\":83316,\"start\":83308},{\"end\":83328,\"start\":83324},{\"end\":83341,\"start\":83334},{\"end\":83718,\"start\":83717},{\"end\":83730,\"start\":83726},{\"end\":83735,\"start\":83731},{\"end\":84233,\"start\":84232},{\"end\":84245,\"start\":84241},{\"end\":84250,\"start\":84246},{\"end\":84262,\"start\":84258},{\"end\":84745,\"start\":84740},{\"end\":84762,\"start\":84753},{\"end\":85041,\"start\":85037},{\"end\":85056,\"start\":85048},{\"end\":85074,\"start\":85065},{\"end\":85550,\"start\":85544},{\"end\":85830,\"start\":85823},{\"end\":85844,\"start\":85836},{\"end\":85856,\"start\":85850},{\"end\":85870,\"start\":85863},{\"end\":86433,\"start\":86432},{\"end\":86453,\"start\":86445},{\"end\":86463,\"start\":86458},{\"end\":86472,\"start\":86469},{\"end\":86485,\"start\":86477},{\"end\":86497,\"start\":86491},{\"end\":86946,\"start\":86942},{\"end\":86954,\"start\":86953},{\"end\":86966,\"start\":86959},{\"end\":86979,\"start\":86974},{\"end\":86990,\"start\":86984},{\"end\":86993,\"start\":86991},{\"end\":87310,\"start\":87304},{\"end\":87313,\"start\":87311},{\"end\":87328,\"start\":87321},{\"end\":87350,\"start\":87341},{\"end\":87367,\"start\":87360},{\"end\":87749,\"start\":87743},{\"end\":87769,\"start\":87760},{\"end\":87786,\"start\":87779},{\"end\":88041,\"start\":88040},{\"end\":88044,\"start\":88042},{\"end\":88053,\"start\":88052},{\"end\":88063,\"start\":88062},{\"end\":88074,\"start\":88073},{\"end\":88386,\"start\":88380},{\"end\":88404,\"start\":88397},{\"end\":88422,\"start\":88413},{\"end\":88870,\"start\":88864},{\"end\":89057,\"start\":89054},{\"end\":89067,\"start\":89063},{\"end\":89084,\"start\":89077},{\"end\":89101,\"start\":89090},{\"end\":89597,\"start\":89594},{\"end\":89607,\"start\":89603},{\"end\":89624,\"start\":89617},{\"end\":89639,\"start\":89630},{\"end\":89641,\"start\":89640},{\"end\":90180,\"start\":90174},{\"end\":90190,\"start\":90186},{\"end\":90204,\"start\":90198},{\"end\":90400,\"start\":90397},{\"end\":90413,\"start\":90407},{\"end\":90897,\"start\":90891},{\"end\":90906,\"start\":90903},{\"end\":90920,\"start\":90917},{\"end\":90933,\"start\":90925},{\"end\":90948,\"start\":90941},{\"end\":90959,\"start\":90956},{\"end\":90967,\"start\":90965},{\"end\":91790,\"start\":91789},{\"end\":91792,\"start\":91791},{\"end\":91801,\"start\":91800},{\"end\":91812,\"start\":91811},{\"end\":91814,\"start\":91813},{\"end\":92238,\"start\":92232},{\"end\":92252,\"start\":92245},{\"end\":92452,\"start\":92451},{\"end\":92454,\"start\":92453},{\"end\":92473,\"start\":92466},{\"end\":92475,\"start\":92474},{\"end\":92679,\"start\":92673},{\"end\":92696,\"start\":92690},{\"end\":93007,\"start\":93003},{\"end\":93430,\"start\":93424},{\"end\":93448,\"start\":93441},{\"end\":93458,\"start\":93453},{\"end\":93840,\"start\":93834},{\"end\":93858,\"start\":93851},{\"end\":93868,\"start\":93863},{\"end\":94327,\"start\":94326},{\"end\":94339,\"start\":94334},{\"end\":94341,\"start\":94340},{\"end\":94619,\"start\":94618},{\"end\":94631,\"start\":94626},{\"end\":94633,\"start\":94632},{\"end\":94876,\"start\":94870},{\"end\":95290,\"start\":95287},{\"end\":95306,\"start\":95298},{\"end\":95647,\"start\":95642},{\"end\":95673,\"start\":95668},{\"end\":96051,\"start\":96043},{\"end\":96374,\"start\":96369},{\"end\":96388,\"start\":96379},{\"end\":96397,\"start\":96394},{\"end\":96409,\"start\":96403},{\"end\":96424,\"start\":96415},{\"end\":96906,\"start\":96900},{\"end\":96914,\"start\":96911},{\"end\":96925,\"start\":96921},{\"end\":96940,\"start\":96934},{\"end\":97411,\"start\":97404},{\"end\":97437,\"start\":97428},{\"end\":97814,\"start\":97808},{\"end\":97834,\"start\":97823},{\"end\":98170,\"start\":98162},{\"end\":98485,\"start\":98480},{\"end\":98508,\"start\":98501},{\"end\":98524,\"start\":98519},{\"end\":98539,\"start\":98534},{\"end\":98867,\"start\":98863},{\"end\":98884,\"start\":98877},{\"end\":98886,\"start\":98885},{\"end\":98897,\"start\":98892},{\"end\":98911,\"start\":98904},{\"end\":98929,\"start\":98920},{\"end\":99172,\"start\":99171},{\"end\":99183,\"start\":99182},{\"end\":99192,\"start\":99191},{\"end\":100357,\"start\":100356},{\"end\":100374,\"start\":100373},{\"end\":100387,\"start\":100381},{\"end\":100390,\"start\":100388},{\"end\":100402,\"start\":100397},{\"end\":100857,\"start\":100851},{\"end\":100873,\"start\":100866},{\"end\":100893,\"start\":100885},{\"end\":101249,\"start\":101240},{\"end\":101270,\"start\":101264},{\"end\":101286,\"start\":101281},{\"end\":101304,\"start\":101300},{\"end\":101831,\"start\":101825},{\"end\":102459,\"start\":102453},{\"end\":102985,\"start\":102984},{\"end\":103211,\"start\":103210},{\"end\":103213,\"start\":103212},{\"end\":103232,\"start\":103227},{\"end\":103239,\"start\":103233},{\"end\":103250,\"start\":103249},{\"end\":103252,\"start\":103251},{\"end\":103535,\"start\":103530},{\"end\":103747,\"start\":103740},{\"end\":104418,\"start\":104411},{\"end\":104436,\"start\":104427},{\"end\":104452,\"start\":104446},{\"end\":104455,\"start\":104453},{\"end\":104470,\"start\":104463},{\"end\":104728,\"start\":104721},{\"end\":104744,\"start\":104737},{\"end\":104759,\"start\":104753},{\"end\":104762,\"start\":104760},{\"end\":104779,\"start\":104770},{\"end\":105114,\"start\":105107},{\"end\":71516,\"start\":71513},{\"end\":71529,\"start\":71524},{\"end\":71544,\"start\":71541},{\"end\":71568,\"start\":71556},{\"end\":71850,\"start\":71844},{\"end\":71867,\"start\":71860},{\"end\":71882,\"start\":71879},{\"end\":72336,\"start\":72332},{\"end\":72356,\"start\":72352},{\"end\":72838,\"start\":72832},{\"end\":72860,\"start\":72852},{\"end\":72869,\"start\":72868},{\"end\":72871,\"start\":72870},{\"end\":73165,\"start\":73158},{\"end\":73176,\"start\":73175},{\"end\":73189,\"start\":73185},{\"end\":73204,\"start\":73198},{\"end\":73713,\"start\":73709},{\"end\":73729,\"start\":73724},{\"end\":73746,\"start\":73739},{\"end\":74103,\"start\":74097},{\"end\":74118,\"start\":74112},{\"end\":74439,\"start\":74433},{\"end\":74697,\"start\":74696},{\"end\":74708,\"start\":74704},{\"end\":74719,\"start\":74715},{\"end\":74736,\"start\":74728},{\"end\":74749,\"start\":74745},{\"end\":75208,\"start\":75202},{\"end\":75222,\"start\":75217},{\"end\":75488,\"start\":75482},{\"end\":75700,\"start\":75692},{\"end\":75713,\"start\":75708},{\"end\":76005,\"start\":75998},{\"end\":76017,\"start\":76013},{\"end\":76033,\"start\":76026},{\"end\":76048,\"start\":76044},{\"end\":76050,\"start\":76049},{\"end\":76400,\"start\":76393},{\"end\":76417,\"start\":76412},{\"end\":76433,\"start\":76424},{\"end\":76456,\"start\":76446},{\"end\":76471,\"start\":76466},{\"end\":76487,\"start\":76481},{\"end\":76950,\"start\":76944},{\"end\":76963,\"start\":76957},{\"end\":76972,\"start\":76969},{\"end\":76986,\"start\":76978},{\"end\":76996,\"start\":76994},{\"end\":77008,\"start\":77004},{\"end\":77018,\"start\":77014},{\"end\":77419,\"start\":77414},{\"end\":77435,\"start\":77430},{\"end\":77449,\"start\":77442},{\"end\":77464,\"start\":77457},{\"end\":77477,\"start\":77473},{\"end\":77497,\"start\":77490},{\"end\":77512,\"start\":77507},{\"end\":77514,\"start\":77513},{\"end\":77531,\"start\":77521},{\"end\":77552,\"start\":77541},{\"end\":77976,\"start\":77968},{\"end\":77990,\"start\":77981},{\"end\":78004,\"start\":77999},{\"end\":78366,\"start\":78360},{\"end\":78631,\"start\":78622},{\"end\":78648,\"start\":78641},{\"end\":78664,\"start\":78657},{\"end\":78679,\"start\":78673},{\"end\":78682,\"start\":78680},{\"end\":79156,\"start\":79151},{\"end\":79462,\"start\":79458},{\"end\":79479,\"start\":79472},{\"end\":79497,\"start\":79489},{\"end\":79779,\"start\":79772},{\"end\":79796,\"start\":79789},{\"end\":79810,\"start\":79804},{\"end\":80342,\"start\":80335},{\"end\":80356,\"start\":80351},{\"end\":80368,\"start\":80363},{\"end\":80370,\"start\":80369},{\"end\":80884,\"start\":80880},{\"end\":80897,\"start\":80893},{\"end\":80901,\"start\":80898},{\"end\":80912,\"start\":80907},{\"end\":80927,\"start\":80923},{\"end\":80940,\"start\":80936},{\"end\":81498,\"start\":81492},{\"end\":81511,\"start\":81506},{\"end\":81528,\"start\":81522},{\"end\":81984,\"start\":81982},{\"end\":81998,\"start\":81992},{\"end\":82015,\"start\":82006},{\"end\":82032,\"start\":82025},{\"end\":82785,\"start\":82780},{\"end\":82804,\"start\":82799},{\"end\":82816,\"start\":82812},{\"end\":82830,\"start\":82825},{\"end\":83316,\"start\":83308},{\"end\":83328,\"start\":83324},{\"end\":83341,\"start\":83334},{\"end\":83718,\"start\":83717},{\"end\":83730,\"start\":83726},{\"end\":83735,\"start\":83731},{\"end\":84233,\"start\":84232},{\"end\":84245,\"start\":84241},{\"end\":84250,\"start\":84246},{\"end\":84262,\"start\":84258},{\"end\":84745,\"start\":84740},{\"end\":84762,\"start\":84753},{\"end\":85041,\"start\":85037},{\"end\":85056,\"start\":85048},{\"end\":85074,\"start\":85065},{\"end\":85550,\"start\":85544},{\"end\":85830,\"start\":85823},{\"end\":85844,\"start\":85836},{\"end\":85856,\"start\":85850},{\"end\":85870,\"start\":85863},{\"end\":86433,\"start\":86432},{\"end\":86453,\"start\":86445},{\"end\":86463,\"start\":86458},{\"end\":86472,\"start\":86469},{\"end\":86485,\"start\":86477},{\"end\":86497,\"start\":86491},{\"end\":86946,\"start\":86942},{\"end\":86954,\"start\":86953},{\"end\":86966,\"start\":86959},{\"end\":86979,\"start\":86974},{\"end\":86990,\"start\":86984},{\"end\":86993,\"start\":86991},{\"end\":87310,\"start\":87304},{\"end\":87313,\"start\":87311},{\"end\":87328,\"start\":87321},{\"end\":87350,\"start\":87341},{\"end\":87367,\"start\":87360},{\"end\":87749,\"start\":87743},{\"end\":87769,\"start\":87760},{\"end\":87786,\"start\":87779},{\"end\":88041,\"start\":88040},{\"end\":88044,\"start\":88042},{\"end\":88053,\"start\":88052},{\"end\":88063,\"start\":88062},{\"end\":88074,\"start\":88073},{\"end\":88386,\"start\":88380},{\"end\":88404,\"start\":88397},{\"end\":88422,\"start\":88413},{\"end\":88870,\"start\":88864},{\"end\":89057,\"start\":89054},{\"end\":89067,\"start\":89063},{\"end\":89084,\"start\":89077},{\"end\":89101,\"start\":89090},{\"end\":89597,\"start\":89594},{\"end\":89607,\"start\":89603},{\"end\":89624,\"start\":89617},{\"end\":89639,\"start\":89630},{\"end\":89641,\"start\":89640},{\"end\":90180,\"start\":90174},{\"end\":90190,\"start\":90186},{\"end\":90204,\"start\":90198},{\"end\":90400,\"start\":90397},{\"end\":90413,\"start\":90407},{\"end\":90897,\"start\":90891},{\"end\":90906,\"start\":90903},{\"end\":90920,\"start\":90917},{\"end\":90933,\"start\":90925},{\"end\":90948,\"start\":90941},{\"end\":90959,\"start\":90956},{\"end\":90967,\"start\":90965},{\"end\":91790,\"start\":91789},{\"end\":91792,\"start\":91791},{\"end\":91801,\"start\":91800},{\"end\":91812,\"start\":91811},{\"end\":91814,\"start\":91813},{\"end\":92238,\"start\":92232},{\"end\":92252,\"start\":92245},{\"end\":92452,\"start\":92451},{\"end\":92454,\"start\":92453},{\"end\":92473,\"start\":92466},{\"end\":92475,\"start\":92474},{\"end\":92679,\"start\":92673},{\"end\":92696,\"start\":92690},{\"end\":93007,\"start\":93003},{\"end\":93430,\"start\":93424},{\"end\":93448,\"start\":93441},{\"end\":93458,\"start\":93453},{\"end\":93840,\"start\":93834},{\"end\":93858,\"start\":93851},{\"end\":93868,\"start\":93863},{\"end\":94327,\"start\":94326},{\"end\":94339,\"start\":94334},{\"end\":94341,\"start\":94340},{\"end\":94619,\"start\":94618},{\"end\":94631,\"start\":94626},{\"end\":94633,\"start\":94632},{\"end\":94876,\"start\":94870},{\"end\":95290,\"start\":95287},{\"end\":95306,\"start\":95298},{\"end\":95647,\"start\":95642},{\"end\":95673,\"start\":95668},{\"end\":96051,\"start\":96043},{\"end\":96374,\"start\":96369},{\"end\":96388,\"start\":96379},{\"end\":96397,\"start\":96394},{\"end\":96409,\"start\":96403},{\"end\":96424,\"start\":96415},{\"end\":96906,\"start\":96900},{\"end\":96914,\"start\":96911},{\"end\":96925,\"start\":96921},{\"end\":96940,\"start\":96934},{\"end\":97411,\"start\":97404},{\"end\":97437,\"start\":97428},{\"end\":97814,\"start\":97808},{\"end\":97834,\"start\":97823},{\"end\":98170,\"start\":98162},{\"end\":98485,\"start\":98480},{\"end\":98508,\"start\":98501},{\"end\":98524,\"start\":98519},{\"end\":98539,\"start\":98534},{\"end\":98867,\"start\":98863},{\"end\":98884,\"start\":98877},{\"end\":98886,\"start\":98885},{\"end\":98897,\"start\":98892},{\"end\":98911,\"start\":98904},{\"end\":98929,\"start\":98920},{\"end\":99172,\"start\":99171},{\"end\":99183,\"start\":99182},{\"end\":99192,\"start\":99191},{\"end\":100357,\"start\":100356},{\"end\":100374,\"start\":100373},{\"end\":100387,\"start\":100381},{\"end\":100390,\"start\":100388},{\"end\":100402,\"start\":100397},{\"end\":100857,\"start\":100851},{\"end\":100873,\"start\":100866},{\"end\":100893,\"start\":100885},{\"end\":101249,\"start\":101240},{\"end\":101270,\"start\":101264},{\"end\":101286,\"start\":101281},{\"end\":101304,\"start\":101300},{\"end\":101831,\"start\":101825},{\"end\":102459,\"start\":102453},{\"end\":102985,\"start\":102984},{\"end\":103211,\"start\":103210},{\"end\":103213,\"start\":103212},{\"end\":103232,\"start\":103227},{\"end\":103239,\"start\":103233},{\"end\":103250,\"start\":103249},{\"end\":103252,\"start\":103251},{\"end\":103535,\"start\":103530},{\"end\":103747,\"start\":103740},{\"end\":104418,\"start\":104411},{\"end\":104436,\"start\":104427},{\"end\":104452,\"start\":104446},{\"end\":104455,\"start\":104453},{\"end\":104470,\"start\":104463},{\"end\":104728,\"start\":104721},{\"end\":104744,\"start\":104737},{\"end\":104759,\"start\":104753},{\"end\":104762,\"start\":104760},{\"end\":104779,\"start\":104770},{\"end\":105114,\"start\":105107}]", "bib_author_last_name": "[{\"end\":71522,\"start\":71517},{\"end\":71539,\"start\":71530},{\"end\":71554,\"start\":71545},{\"end\":71575,\"start\":71569},{\"end\":71858,\"start\":71851},{\"end\":71877,\"start\":71868},{\"end\":71890,\"start\":71883},{\"end\":72350,\"start\":72337},{\"end\":72363,\"start\":72357},{\"end\":72374,\"start\":72365},{\"end\":72850,\"start\":72839},{\"end\":72866,\"start\":72861},{\"end\":72876,\"start\":72872},{\"end\":72885,\"start\":72878},{\"end\":73173,\"start\":73166},{\"end\":73183,\"start\":73177},{\"end\":73196,\"start\":73190},{\"end\":73211,\"start\":73205},{\"end\":73217,\"start\":73213},{\"end\":73722,\"start\":73714},{\"end\":73737,\"start\":73730},{\"end\":73754,\"start\":73747},{\"end\":74110,\"start\":74104},{\"end\":74125,\"start\":74119},{\"end\":74445,\"start\":74440},{\"end\":74702,\"start\":74698},{\"end\":74713,\"start\":74709},{\"end\":74726,\"start\":74720},{\"end\":74743,\"start\":74737},{\"end\":74757,\"start\":74750},{\"end\":74762,\"start\":74759},{\"end\":75215,\"start\":75209},{\"end\":75229,\"start\":75223},{\"end\":75495,\"start\":75489},{\"end\":75706,\"start\":75701},{\"end\":75720,\"start\":75714},{\"end\":76011,\"start\":76006},{\"end\":76024,\"start\":76018},{\"end\":76042,\"start\":76034},{\"end\":76057,\"start\":76051},{\"end\":76410,\"start\":76401},{\"end\":76422,\"start\":76418},{\"end\":76444,\"start\":76434},{\"end\":76464,\"start\":76457},{\"end\":76479,\"start\":76472},{\"end\":76495,\"start\":76488},{\"end\":76955,\"start\":76951},{\"end\":76967,\"start\":76964},{\"end\":76976,\"start\":76973},{\"end\":76992,\"start\":76987},{\"end\":77002,\"start\":76997},{\"end\":77012,\"start\":77009},{\"end\":77022,\"start\":77019},{\"end\":77428,\"start\":77420},{\"end\":77440,\"start\":77436},{\"end\":77455,\"start\":77450},{\"end\":77471,\"start\":77465},{\"end\":77488,\"start\":77478},{\"end\":77505,\"start\":77498},{\"end\":77519,\"start\":77515},{\"end\":77539,\"start\":77532},{\"end\":77562,\"start\":77553},{\"end\":77979,\"start\":77977},{\"end\":77997,\"start\":77991},{\"end\":78014,\"start\":78005},{\"end\":78372,\"start\":78367},{\"end\":78639,\"start\":78632},{\"end\":78655,\"start\":78649},{\"end\":78671,\"start\":78665},{\"end\":78688,\"start\":78683},{\"end\":79163,\"start\":79157},{\"end\":79470,\"start\":79463},{\"end\":79487,\"start\":79480},{\"end\":79505,\"start\":79498},{\"end\":79787,\"start\":79780},{\"end\":79802,\"start\":79797},{\"end\":79819,\"start\":79811},{\"end\":80349,\"start\":80343},{\"end\":80361,\"start\":80357},{\"end\":80376,\"start\":80371},{\"end\":80891,\"start\":80885},{\"end\":80905,\"start\":80902},{\"end\":80921,\"start\":80913},{\"end\":80934,\"start\":80928},{\"end\":80944,\"start\":80941},{\"end\":81504,\"start\":81499},{\"end\":81520,\"start\":81512},{\"end\":81538,\"start\":81529},{\"end\":81990,\"start\":81985},{\"end\":82004,\"start\":81999},{\"end\":82023,\"start\":82016},{\"end\":82039,\"start\":82033},{\"end\":82491,\"start\":82487},{\"end\":82797,\"start\":82786},{\"end\":82810,\"start\":82805},{\"end\":82823,\"start\":82817},{\"end\":82838,\"start\":82831},{\"end\":83322,\"start\":83317},{\"end\":83332,\"start\":83329},{\"end\":83345,\"start\":83342},{\"end\":83724,\"start\":83719},{\"end\":83741,\"start\":83736},{\"end\":83750,\"start\":83743},{\"end\":84239,\"start\":84234},{\"end\":84256,\"start\":84251},{\"end\":84270,\"start\":84263},{\"end\":84278,\"start\":84272},{\"end\":84751,\"start\":84746},{\"end\":84770,\"start\":84763},{\"end\":85046,\"start\":85042},{\"end\":85063,\"start\":85057},{\"end\":85080,\"start\":85075},{\"end\":85555,\"start\":85551},{\"end\":85834,\"start\":85831},{\"end\":85848,\"start\":85845},{\"end\":85861,\"start\":85857},{\"end\":85874,\"start\":85871},{\"end\":86249,\"start\":86238},{\"end\":86443,\"start\":86434},{\"end\":86456,\"start\":86454},{\"end\":86467,\"start\":86464},{\"end\":86475,\"start\":86473},{\"end\":86489,\"start\":86486},{\"end\":86500,\"start\":86498},{\"end\":86511,\"start\":86502},{\"end\":86951,\"start\":86947},{\"end\":86957,\"start\":86955},{\"end\":86972,\"start\":86967},{\"end\":86982,\"start\":86980},{\"end\":86999,\"start\":86994},{\"end\":87319,\"start\":87314},{\"end\":87339,\"start\":87329},{\"end\":87358,\"start\":87351},{\"end\":87374,\"start\":87368},{\"end\":87758,\"start\":87750},{\"end\":87777,\"start\":87770},{\"end\":87793,\"start\":87787},{\"end\":88050,\"start\":88045},{\"end\":88060,\"start\":88054},{\"end\":88071,\"start\":88064},{\"end\":88081,\"start\":88075},{\"end\":88395,\"start\":88387},{\"end\":88411,\"start\":88405},{\"end\":88430,\"start\":88423},{\"end\":88876,\"start\":88871},{\"end\":89061,\"start\":89058},{\"end\":89075,\"start\":89068},{\"end\":89088,\"start\":89085},{\"end\":89111,\"start\":89102},{\"end\":89601,\"start\":89598},{\"end\":89615,\"start\":89608},{\"end\":89628,\"start\":89625},{\"end\":89651,\"start\":89642},{\"end\":90184,\"start\":90181},{\"end\":90196,\"start\":90191},{\"end\":90210,\"start\":90205},{\"end\":90405,\"start\":90401},{\"end\":90420,\"start\":90414},{\"end\":90901,\"start\":90898},{\"end\":90915,\"start\":90907},{\"end\":90923,\"start\":90921},{\"end\":90939,\"start\":90934},{\"end\":90954,\"start\":90949},{\"end\":90963,\"start\":90960},{\"end\":90973,\"start\":90968},{\"end\":91798,\"start\":91793},{\"end\":91809,\"start\":91802},{\"end\":91821,\"start\":91815},{\"end\":92243,\"start\":92239},{\"end\":92260,\"start\":92253},{\"end\":92464,\"start\":92455},{\"end\":92482,\"start\":92476},{\"end\":92688,\"start\":92680},{\"end\":92706,\"start\":92697},{\"end\":93014,\"start\":93008},{\"end\":93439,\"start\":93431},{\"end\":93451,\"start\":93449},{\"end\":93471,\"start\":93459},{\"end\":93849,\"start\":93841},{\"end\":93861,\"start\":93859},{\"end\":93881,\"start\":93869},{\"end\":94332,\"start\":94328},{\"end\":94348,\"start\":94342},{\"end\":94358,\"start\":94350},{\"end\":94624,\"start\":94620},{\"end\":94640,\"start\":94634},{\"end\":94650,\"start\":94642},{\"end\":94886,\"start\":94877},{\"end\":95296,\"start\":95291},{\"end\":95318,\"start\":95307},{\"end\":95333,\"start\":95320},{\"end\":95666,\"start\":95648},{\"end\":95676,\"start\":95674},{\"end\":96056,\"start\":96052},{\"end\":96075,\"start\":96058},{\"end\":96377,\"start\":96375},{\"end\":96392,\"start\":96389},{\"end\":96401,\"start\":96398},{\"end\":96413,\"start\":96410},{\"end\":96429,\"start\":96425},{\"end\":96909,\"start\":96907},{\"end\":96919,\"start\":96915},{\"end\":96932,\"start\":96926},{\"end\":96947,\"start\":96941},{\"end\":97426,\"start\":97412},{\"end\":97443,\"start\":97438},{\"end\":97448,\"start\":97445},{\"end\":97821,\"start\":97815},{\"end\":97842,\"start\":97835},{\"end\":98175,\"start\":98171},{\"end\":98418,\"start\":98414},{\"end\":98499,\"start\":98486},{\"end\":98517,\"start\":98509},{\"end\":98532,\"start\":98525},{\"end\":98549,\"start\":98540},{\"end\":98875,\"start\":98868},{\"end\":98890,\"start\":98887},{\"end\":98902,\"start\":98898},{\"end\":98918,\"start\":98912},{\"end\":98937,\"start\":98930},{\"end\":99180,\"start\":99173},{\"end\":99189,\"start\":99184},{\"end\":99197,\"start\":99193},{\"end\":99205,\"start\":99199},{\"end\":100364,\"start\":100358},{\"end\":100371,\"start\":100366},{\"end\":100379,\"start\":100375},{\"end\":100395,\"start\":100391},{\"end\":100408,\"start\":100403},{\"end\":100414,\"start\":100410},{\"end\":100864,\"start\":100858},{\"end\":100883,\"start\":100874},{\"end\":100899,\"start\":100894},{\"end\":101262,\"start\":101250},{\"end\":101279,\"start\":101271},{\"end\":101296,\"start\":101287},{\"end\":101310,\"start\":101305},{\"end\":101842,\"start\":101832},{\"end\":102081,\"start\":102073},{\"end\":102211,\"start\":102199},{\"end\":102478,\"start\":102460},{\"end\":102824,\"start\":102808},{\"end\":102997,\"start\":102986},{\"end\":103008,\"start\":102999},{\"end\":103225,\"start\":103214},{\"end\":103247,\"start\":103240},{\"end\":103262,\"start\":103253},{\"end\":103272,\"start\":103264},{\"end\":103542,\"start\":103536},{\"end\":103754,\"start\":103748},{\"end\":104425,\"start\":104419},{\"end\":104444,\"start\":104437},{\"end\":104461,\"start\":104456},{\"end\":104477,\"start\":104471},{\"end\":104735,\"start\":104729},{\"end\":104751,\"start\":104745},{\"end\":104768,\"start\":104763},{\"end\":104787,\"start\":104780},{\"end\":105121,\"start\":105115},{\"end\":71522,\"start\":71517},{\"end\":71539,\"start\":71530},{\"end\":71554,\"start\":71545},{\"end\":71575,\"start\":71569},{\"end\":71858,\"start\":71851},{\"end\":71877,\"start\":71868},{\"end\":71890,\"start\":71883},{\"end\":72350,\"start\":72337},{\"end\":72363,\"start\":72357},{\"end\":72374,\"start\":72365},{\"end\":72850,\"start\":72839},{\"end\":72866,\"start\":72861},{\"end\":72876,\"start\":72872},{\"end\":72885,\"start\":72878},{\"end\":73173,\"start\":73166},{\"end\":73183,\"start\":73177},{\"end\":73196,\"start\":73190},{\"end\":73211,\"start\":73205},{\"end\":73217,\"start\":73213},{\"end\":73722,\"start\":73714},{\"end\":73737,\"start\":73730},{\"end\":73754,\"start\":73747},{\"end\":74110,\"start\":74104},{\"end\":74125,\"start\":74119},{\"end\":74445,\"start\":74440},{\"end\":74702,\"start\":74698},{\"end\":74713,\"start\":74709},{\"end\":74726,\"start\":74720},{\"end\":74743,\"start\":74737},{\"end\":74757,\"start\":74750},{\"end\":74762,\"start\":74759},{\"end\":75215,\"start\":75209},{\"end\":75229,\"start\":75223},{\"end\":75495,\"start\":75489},{\"end\":75706,\"start\":75701},{\"end\":75720,\"start\":75714},{\"end\":76011,\"start\":76006},{\"end\":76024,\"start\":76018},{\"end\":76042,\"start\":76034},{\"end\":76057,\"start\":76051},{\"end\":76410,\"start\":76401},{\"end\":76422,\"start\":76418},{\"end\":76444,\"start\":76434},{\"end\":76464,\"start\":76457},{\"end\":76479,\"start\":76472},{\"end\":76495,\"start\":76488},{\"end\":76955,\"start\":76951},{\"end\":76967,\"start\":76964},{\"end\":76976,\"start\":76973},{\"end\":76992,\"start\":76987},{\"end\":77002,\"start\":76997},{\"end\":77012,\"start\":77009},{\"end\":77022,\"start\":77019},{\"end\":77428,\"start\":77420},{\"end\":77440,\"start\":77436},{\"end\":77455,\"start\":77450},{\"end\":77471,\"start\":77465},{\"end\":77488,\"start\":77478},{\"end\":77505,\"start\":77498},{\"end\":77519,\"start\":77515},{\"end\":77539,\"start\":77532},{\"end\":77562,\"start\":77553},{\"end\":77979,\"start\":77977},{\"end\":77997,\"start\":77991},{\"end\":78014,\"start\":78005},{\"end\":78372,\"start\":78367},{\"end\":78639,\"start\":78632},{\"end\":78655,\"start\":78649},{\"end\":78671,\"start\":78665},{\"end\":78688,\"start\":78683},{\"end\":79163,\"start\":79157},{\"end\":79470,\"start\":79463},{\"end\":79487,\"start\":79480},{\"end\":79505,\"start\":79498},{\"end\":79787,\"start\":79780},{\"end\":79802,\"start\":79797},{\"end\":79819,\"start\":79811},{\"end\":80349,\"start\":80343},{\"end\":80361,\"start\":80357},{\"end\":80376,\"start\":80371},{\"end\":80891,\"start\":80885},{\"end\":80905,\"start\":80902},{\"end\":80921,\"start\":80913},{\"end\":80934,\"start\":80928},{\"end\":80944,\"start\":80941},{\"end\":81504,\"start\":81499},{\"end\":81520,\"start\":81512},{\"end\":81538,\"start\":81529},{\"end\":81990,\"start\":81985},{\"end\":82004,\"start\":81999},{\"end\":82023,\"start\":82016},{\"end\":82039,\"start\":82033},{\"end\":82491,\"start\":82487},{\"end\":82797,\"start\":82786},{\"end\":82810,\"start\":82805},{\"end\":82823,\"start\":82817},{\"end\":82838,\"start\":82831},{\"end\":83322,\"start\":83317},{\"end\":83332,\"start\":83329},{\"end\":83345,\"start\":83342},{\"end\":83724,\"start\":83719},{\"end\":83741,\"start\":83736},{\"end\":83750,\"start\":83743},{\"end\":84239,\"start\":84234},{\"end\":84256,\"start\":84251},{\"end\":84270,\"start\":84263},{\"end\":84278,\"start\":84272},{\"end\":84751,\"start\":84746},{\"end\":84770,\"start\":84763},{\"end\":85046,\"start\":85042},{\"end\":85063,\"start\":85057},{\"end\":85080,\"start\":85075},{\"end\":85555,\"start\":85551},{\"end\":85834,\"start\":85831},{\"end\":85848,\"start\":85845},{\"end\":85861,\"start\":85857},{\"end\":85874,\"start\":85871},{\"end\":86249,\"start\":86238},{\"end\":86443,\"start\":86434},{\"end\":86456,\"start\":86454},{\"end\":86467,\"start\":86464},{\"end\":86475,\"start\":86473},{\"end\":86489,\"start\":86486},{\"end\":86500,\"start\":86498},{\"end\":86511,\"start\":86502},{\"end\":86951,\"start\":86947},{\"end\":86957,\"start\":86955},{\"end\":86972,\"start\":86967},{\"end\":86982,\"start\":86980},{\"end\":86999,\"start\":86994},{\"end\":87319,\"start\":87314},{\"end\":87339,\"start\":87329},{\"end\":87358,\"start\":87351},{\"end\":87374,\"start\":87368},{\"end\":87758,\"start\":87750},{\"end\":87777,\"start\":87770},{\"end\":87793,\"start\":87787},{\"end\":88050,\"start\":88045},{\"end\":88060,\"start\":88054},{\"end\":88071,\"start\":88064},{\"end\":88081,\"start\":88075},{\"end\":88395,\"start\":88387},{\"end\":88411,\"start\":88405},{\"end\":88430,\"start\":88423},{\"end\":88876,\"start\":88871},{\"end\":89061,\"start\":89058},{\"end\":89075,\"start\":89068},{\"end\":89088,\"start\":89085},{\"end\":89111,\"start\":89102},{\"end\":89601,\"start\":89598},{\"end\":89615,\"start\":89608},{\"end\":89628,\"start\":89625},{\"end\":89651,\"start\":89642},{\"end\":90184,\"start\":90181},{\"end\":90196,\"start\":90191},{\"end\":90210,\"start\":90205},{\"end\":90405,\"start\":90401},{\"end\":90420,\"start\":90414},{\"end\":90901,\"start\":90898},{\"end\":90915,\"start\":90907},{\"end\":90923,\"start\":90921},{\"end\":90939,\"start\":90934},{\"end\":90954,\"start\":90949},{\"end\":90963,\"start\":90960},{\"end\":90973,\"start\":90968},{\"end\":91798,\"start\":91793},{\"end\":91809,\"start\":91802},{\"end\":91821,\"start\":91815},{\"end\":92243,\"start\":92239},{\"end\":92260,\"start\":92253},{\"end\":92464,\"start\":92455},{\"end\":92482,\"start\":92476},{\"end\":92688,\"start\":92680},{\"end\":92706,\"start\":92697},{\"end\":93014,\"start\":93008},{\"end\":93439,\"start\":93431},{\"end\":93451,\"start\":93449},{\"end\":93471,\"start\":93459},{\"end\":93849,\"start\":93841},{\"end\":93861,\"start\":93859},{\"end\":93881,\"start\":93869},{\"end\":94332,\"start\":94328},{\"end\":94348,\"start\":94342},{\"end\":94358,\"start\":94350},{\"end\":94624,\"start\":94620},{\"end\":94640,\"start\":94634},{\"end\":94650,\"start\":94642},{\"end\":94886,\"start\":94877},{\"end\":95296,\"start\":95291},{\"end\":95318,\"start\":95307},{\"end\":95333,\"start\":95320},{\"end\":95666,\"start\":95648},{\"end\":95676,\"start\":95674},{\"end\":96056,\"start\":96052},{\"end\":96075,\"start\":96058},{\"end\":96377,\"start\":96375},{\"end\":96392,\"start\":96389},{\"end\":96401,\"start\":96398},{\"end\":96413,\"start\":96410},{\"end\":96429,\"start\":96425},{\"end\":96909,\"start\":96907},{\"end\":96919,\"start\":96915},{\"end\":96932,\"start\":96926},{\"end\":96947,\"start\":96941},{\"end\":97426,\"start\":97412},{\"end\":97443,\"start\":97438},{\"end\":97448,\"start\":97445},{\"end\":97821,\"start\":97815},{\"end\":97842,\"start\":97835},{\"end\":98175,\"start\":98171},{\"end\":98418,\"start\":98414},{\"end\":98499,\"start\":98486},{\"end\":98517,\"start\":98509},{\"end\":98532,\"start\":98525},{\"end\":98549,\"start\":98540},{\"end\":98875,\"start\":98868},{\"end\":98890,\"start\":98887},{\"end\":98902,\"start\":98898},{\"end\":98918,\"start\":98912},{\"end\":98937,\"start\":98930},{\"end\":99180,\"start\":99173},{\"end\":99189,\"start\":99184},{\"end\":99197,\"start\":99193},{\"end\":99205,\"start\":99199},{\"end\":100364,\"start\":100358},{\"end\":100371,\"start\":100366},{\"end\":100379,\"start\":100375},{\"end\":100395,\"start\":100391},{\"end\":100408,\"start\":100403},{\"end\":100414,\"start\":100410},{\"end\":100864,\"start\":100858},{\"end\":100883,\"start\":100874},{\"end\":100899,\"start\":100894},{\"end\":101262,\"start\":101250},{\"end\":101279,\"start\":101271},{\"end\":101296,\"start\":101287},{\"end\":101310,\"start\":101305},{\"end\":101842,\"start\":101832},{\"end\":102081,\"start\":102073},{\"end\":102211,\"start\":102199},{\"end\":102478,\"start\":102460},{\"end\":102824,\"start\":102808},{\"end\":102997,\"start\":102986},{\"end\":103008,\"start\":102999},{\"end\":103225,\"start\":103214},{\"end\":103247,\"start\":103240},{\"end\":103262,\"start\":103253},{\"end\":103272,\"start\":103264},{\"end\":103542,\"start\":103536},{\"end\":103754,\"start\":103748},{\"end\":104425,\"start\":104419},{\"end\":104444,\"start\":104437},{\"end\":104461,\"start\":104456},{\"end\":104477,\"start\":104471},{\"end\":104735,\"start\":104729},{\"end\":104751,\"start\":104745},{\"end\":104768,\"start\":104763},{\"end\":104787,\"start\":104780},{\"end\":105121,\"start\":105115}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":2705973},\"end\":71804,\"start\":71452},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":17376387},\"end\":72233,\"start\":71806},{\"attributes\":{\"doi\":\"10.1109/ICST.2013.11\",\"id\":\"b2\",\"matched_paper_id\":14712033},\"end\":72786,\"start\":72235},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":17866981},\"end\":73094,\"start\":72788},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":16926697},\"end\":73638,\"start\":73096},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":209168081},\"end\":74037,\"start\":73640},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":12786543},\"end\":74377,\"start\":74039},{\"attributes\":{\"id\":\"b7\"},\"end\":74644,\"start\":74379},{\"attributes\":{\"doi\":\"10.1109/TSE.2014.2372785\",\"id\":\"b8\",\"matched_paper_id\":7165993},\"end\":75066,\"start\":74646},{\"attributes\":{\"id\":\"b9\"},\"end\":75418,\"start\":75068},{\"attributes\":{\"id\":\"b10\"},\"end\":75635,\"start\":75420},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":13891821},\"end\":75938,\"start\":75637},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":770411},\"end\":76346,\"start\":75940},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":207182734},\"end\":76890,\"start\":76348},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":472942},\"end\":77351,\"start\":76892},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":199521054},\"end\":77859,\"start\":77353},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":7121413},\"end\":78272,\"start\":77861},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":2477450},\"end\":78559,\"start\":78274},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":7117033},\"end\":79090,\"start\":78561},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":114597567},\"end\":79419,\"start\":79092},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":47017778},\"end\":79710,\"start\":79421},{\"attributes\":{\"doi\":\"10.1109/RTEST.2018.8397165\",\"id\":\"b21\"},\"end\":80252,\"start\":79712},{\"attributes\":{\"doi\":\"10.1109/ICCES.2015.7393026\",\"id\":\"b22\",\"matched_paper_id\":18787557},\"end\":80748,\"start\":80254},{\"attributes\":{\"doi\":\"10.1109/ICSTW.2010.31\",\"id\":\"b23\",\"matched_paper_id\":12543276},\"end\":81427,\"start\":80750},{\"attributes\":{\"doi\":\"10.1109/TCAD.2013.2241176\",\"id\":\"b24\",\"matched_paper_id\":6003612},\"end\":81911,\"start\":81429},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":236190217},\"end\":82428,\"start\":81913},{\"attributes\":{\"doi\":\"10.1109/IEEESTD.2006.99495\",\"id\":\"b26\",\"matched_paper_id\":60060813},\"end\":82738,\"start\":82430},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":15307962},\"end\":83208,\"start\":82740},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":45994397},\"end\":83637,\"start\":83210},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":14937735},\"end\":84166,\"start\":83639},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":15262419},\"end\":84650,\"start\":84168},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":14391432},\"end\":84938,\"start\":84652},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":12796895},\"end\":85494,\"start\":84940},{\"attributes\":{\"id\":\"b33\"},\"end\":85758,\"start\":85496},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":234916},\"end\":86152,\"start\":85760},{\"attributes\":{\"id\":\"b35\"},\"end\":86382,\"start\":86154},{\"attributes\":{\"id\":\"b36\"},\"end\":86659,\"start\":86384},{\"attributes\":{\"doi\":\"10.1109/ICSE.2019.00064\",\"id\":\"b37\"},\"end\":86883,\"start\":86661},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":3635768},\"end\":87215,\"start\":86885},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":10987936},\"end\":87692,\"start\":87217},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":16435531},\"end\":87981,\"start\":87694},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":4111307},\"end\":88304,\"start\":87983},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":422790},\"end\":88829,\"start\":88306},{\"attributes\":{\"id\":\"b43\"},\"end\":88994,\"start\":88831},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":84186411},\"end\":89514,\"start\":88996},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":56173188},\"end\":90123,\"start\":89516},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":52173636},\"end\":90342,\"start\":90125},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":6091588},\"end\":90803,\"start\":90344},{\"attributes\":{\"doi\":\"10.1145/3395363.3397351\",\"id\":\"b48\",\"matched_paper_id\":219601886},\"end\":91711,\"start\":90805},{\"attributes\":{\"doi\":\"10.1109/ICCAD.1989.76898\",\"id\":\"b49\",\"matched_paper_id\":9582184},\"end\":92173,\"start\":91713},{\"attributes\":{\"id\":\"b50\"},\"end\":92375,\"start\":92175},{\"attributes\":{\"id\":\"b51\"},\"end\":92629,\"start\":92377},{\"attributes\":{\"doi\":\"10.1145/2931037.2948705\",\"id\":\"b52\",\"matched_paper_id\":5593258},\"end\":92908,\"start\":92631},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":14401785},\"end\":93375,\"start\":92910},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":573113},\"end\":93757,\"start\":93377},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":11431040},\"end\":94251,\"start\":93759},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":45227404},\"end\":94548,\"start\":94253},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":6491320},\"end\":94821,\"start\":94550},{\"attributes\":{\"doi\":\"hal-01956501. HAL/archives-ouvertes.fr\",\"id\":\"b58\"},\"end\":95071,\"start\":94823},{\"attributes\":{\"doi\":\"arXiv:2104.07851\",\"id\":\"b59\"},\"end\":95240,\"start\":95073},{\"attributes\":{\"id\":\"b60\"},\"end\":95594,\"start\":95242},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":11009662},\"end\":95996,\"start\":95596},{\"attributes\":{\"id\":\"b62\"},\"end\":96308,\"start\":95998},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":14976851},\"end\":96796,\"start\":96310},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":6845282},\"end\":97348,\"start\":96798},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":25963892},\"end\":97762,\"start\":97350},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":53628845},\"end\":98108,\"start\":97764},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":174800586},\"end\":98410,\"start\":98110},{\"attributes\":{\"id\":\"b68\"},\"end\":98432,\"start\":98412},{\"attributes\":{\"id\":\"b69\"},\"end\":98785,\"start\":98434},{\"attributes\":{\"id\":\"b70\"},\"end\":99124,\"start\":98787},{\"attributes\":{\"id\":\"b71\"},\"end\":99312,\"start\":99126},{\"attributes\":{\"doi\":\"10.1016/j.infsof.2011.02.006\",\"id\":\"b72\",\"matched_paper_id\":13504898},\"end\":99775,\"start\":99314},{\"attributes\":{\"doi\":\"10.1109/ICSEA.2009.29\",\"id\":\"b73\",\"matched_paper_id\":16502554},\"end\":100277,\"start\":99777},{\"attributes\":{\"id\":\"b74\",\"matched_paper_id\":6300790},\"end\":100822,\"start\":100279},{\"attributes\":{\"id\":\"b75\",\"matched_paper_id\":7087011},\"end\":101195,\"start\":100824},{\"attributes\":{\"id\":\"b76\",\"matched_paper_id\":8459497},\"end\":101716,\"start\":101197},{\"attributes\":{\"id\":\"b77\"},\"end\":102033,\"start\":101718},{\"attributes\":{\"id\":\"b78\"},\"end\":102195,\"start\":102035},{\"attributes\":{\"id\":\"b79\"},\"end\":102373,\"start\":102197},{\"attributes\":{\"id\":\"b80\",\"matched_paper_id\":37805197},\"end\":102744,\"start\":102375},{\"attributes\":{\"id\":\"b81\"},\"end\":102929,\"start\":102746},{\"attributes\":{\"id\":\"b82\"},\"end\":103172,\"start\":102931},{\"attributes\":{\"id\":\"b83\",\"matched_paper_id\":59373049},\"end\":103475,\"start\":103174},{\"attributes\":{\"id\":\"b84\"},\"end\":103707,\"start\":103477},{\"attributes\":{\"doi\":\"10.1145/1173706.1173734\",\"id\":\"b85\",\"matched_paper_id\":7431199},\"end\":104353,\"start\":103709},{\"attributes\":{\"id\":\"b86\",\"matched_paper_id\":7408151},\"end\":104662,\"start\":104355},{\"attributes\":{\"id\":\"b87\",\"matched_paper_id\":1706697},\"end\":105070,\"start\":104664},{\"attributes\":{\"id\":\"b88\",\"matched_paper_id\":206413838},\"end\":105218,\"start\":105072},{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":2705973},\"end\":71804,\"start\":71452},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":17376387},\"end\":72233,\"start\":71806},{\"attributes\":{\"doi\":\"10.1109/ICST.2013.11\",\"id\":\"b2\",\"matched_paper_id\":14712033},\"end\":72786,\"start\":72235},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":17866981},\"end\":73094,\"start\":72788},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":16926697},\"end\":73638,\"start\":73096},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":209168081},\"end\":74037,\"start\":73640},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":12786543},\"end\":74377,\"start\":74039},{\"attributes\":{\"id\":\"b7\"},\"end\":74644,\"start\":74379},{\"attributes\":{\"doi\":\"10.1109/TSE.2014.2372785\",\"id\":\"b8\",\"matched_paper_id\":7165993},\"end\":75066,\"start\":74646},{\"attributes\":{\"id\":\"b9\"},\"end\":75418,\"start\":75068},{\"attributes\":{\"id\":\"b10\"},\"end\":75635,\"start\":75420},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":13891821},\"end\":75938,\"start\":75637},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":770411},\"end\":76346,\"start\":75940},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":207182734},\"end\":76890,\"start\":76348},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":472942},\"end\":77351,\"start\":76892},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":199521054},\"end\":77859,\"start\":77353},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":7121413},\"end\":78272,\"start\":77861},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":2477450},\"end\":78559,\"start\":78274},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":7117033},\"end\":79090,\"start\":78561},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":114597567},\"end\":79419,\"start\":79092},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":47017778},\"end\":79710,\"start\":79421},{\"attributes\":{\"doi\":\"10.1109/RTEST.2018.8397165\",\"id\":\"b21\"},\"end\":80252,\"start\":79712},{\"attributes\":{\"doi\":\"10.1109/ICCES.2015.7393026\",\"id\":\"b22\",\"matched_paper_id\":18787557},\"end\":80748,\"start\":80254},{\"attributes\":{\"doi\":\"10.1109/ICSTW.2010.31\",\"id\":\"b23\",\"matched_paper_id\":12543276},\"end\":81427,\"start\":80750},{\"attributes\":{\"doi\":\"10.1109/TCAD.2013.2241176\",\"id\":\"b24\",\"matched_paper_id\":6003612},\"end\":81911,\"start\":81429},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":236190217},\"end\":82428,\"start\":81913},{\"attributes\":{\"doi\":\"10.1109/IEEESTD.2006.99495\",\"id\":\"b26\",\"matched_paper_id\":60060813},\"end\":82738,\"start\":82430},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":15307962},\"end\":83208,\"start\":82740},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":45994397},\"end\":83637,\"start\":83210},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":14937735},\"end\":84166,\"start\":83639},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":15262419},\"end\":84650,\"start\":84168},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":14391432},\"end\":84938,\"start\":84652},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":12796895},\"end\":85494,\"start\":84940},{\"attributes\":{\"id\":\"b33\"},\"end\":85758,\"start\":85496},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":234916},\"end\":86152,\"start\":85760},{\"attributes\":{\"id\":\"b35\"},\"end\":86382,\"start\":86154},{\"attributes\":{\"id\":\"b36\"},\"end\":86659,\"start\":86384},{\"attributes\":{\"doi\":\"10.1109/ICSE.2019.00064\",\"id\":\"b37\"},\"end\":86883,\"start\":86661},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":3635768},\"end\":87215,\"start\":86885},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":10987936},\"end\":87692,\"start\":87217},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":16435531},\"end\":87981,\"start\":87694},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":4111307},\"end\":88304,\"start\":87983},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":422790},\"end\":88829,\"start\":88306},{\"attributes\":{\"id\":\"b43\"},\"end\":88994,\"start\":88831},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":84186411},\"end\":89514,\"start\":88996},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":56173188},\"end\":90123,\"start\":89516},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":52173636},\"end\":90342,\"start\":90125},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":6091588},\"end\":90803,\"start\":90344},{\"attributes\":{\"doi\":\"10.1145/3395363.3397351\",\"id\":\"b48\",\"matched_paper_id\":219601886},\"end\":91711,\"start\":90805},{\"attributes\":{\"doi\":\"10.1109/ICCAD.1989.76898\",\"id\":\"b49\",\"matched_paper_id\":9582184},\"end\":92173,\"start\":91713},{\"attributes\":{\"id\":\"b50\"},\"end\":92375,\"start\":92175},{\"attributes\":{\"id\":\"b51\"},\"end\":92629,\"start\":92377},{\"attributes\":{\"doi\":\"10.1145/2931037.2948705\",\"id\":\"b52\",\"matched_paper_id\":5593258},\"end\":92908,\"start\":92631},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":14401785},\"end\":93375,\"start\":92910},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":573113},\"end\":93757,\"start\":93377},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":11431040},\"end\":94251,\"start\":93759},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":45227404},\"end\":94548,\"start\":94253},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":6491320},\"end\":94821,\"start\":94550},{\"attributes\":{\"doi\":\"hal-01956501. HAL/archives-ouvertes.fr\",\"id\":\"b58\"},\"end\":95071,\"start\":94823},{\"attributes\":{\"doi\":\"arXiv:2104.07851\",\"id\":\"b59\"},\"end\":95240,\"start\":95073},{\"attributes\":{\"id\":\"b60\"},\"end\":95594,\"start\":95242},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":11009662},\"end\":95996,\"start\":95596},{\"attributes\":{\"id\":\"b62\"},\"end\":96308,\"start\":95998},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":14976851},\"end\":96796,\"start\":96310},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":6845282},\"end\":97348,\"start\":96798},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":25963892},\"end\":97762,\"start\":97350},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":53628845},\"end\":98108,\"start\":97764},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":174800586},\"end\":98410,\"start\":98110},{\"attributes\":{\"id\":\"b68\"},\"end\":98432,\"start\":98412},{\"attributes\":{\"id\":\"b69\"},\"end\":98785,\"start\":98434},{\"attributes\":{\"id\":\"b70\"},\"end\":99124,\"start\":98787},{\"attributes\":{\"id\":\"b71\"},\"end\":99312,\"start\":99126},{\"attributes\":{\"doi\":\"10.1016/j.infsof.2011.02.006\",\"id\":\"b72\",\"matched_paper_id\":13504898},\"end\":99775,\"start\":99314},{\"attributes\":{\"doi\":\"10.1109/ICSEA.2009.29\",\"id\":\"b73\",\"matched_paper_id\":16502554},\"end\":100277,\"start\":99777},{\"attributes\":{\"id\":\"b74\",\"matched_paper_id\":6300790},\"end\":100822,\"start\":100279},{\"attributes\":{\"id\":\"b75\",\"matched_paper_id\":7087011},\"end\":101195,\"start\":100824},{\"attributes\":{\"id\":\"b76\",\"matched_paper_id\":8459497},\"end\":101716,\"start\":101197},{\"attributes\":{\"id\":\"b77\"},\"end\":102033,\"start\":101718},{\"attributes\":{\"id\":\"b78\"},\"end\":102195,\"start\":102035},{\"attributes\":{\"id\":\"b79\"},\"end\":102373,\"start\":102197},{\"attributes\":{\"id\":\"b80\",\"matched_paper_id\":37805197},\"end\":102744,\"start\":102375},{\"attributes\":{\"id\":\"b81\"},\"end\":102929,\"start\":102746},{\"attributes\":{\"id\":\"b82\"},\"end\":103172,\"start\":102931},{\"attributes\":{\"id\":\"b83\",\"matched_paper_id\":59373049},\"end\":103475,\"start\":103174},{\"attributes\":{\"id\":\"b84\"},\"end\":103707,\"start\":103477},{\"attributes\":{\"doi\":\"10.1145/1173706.1173734\",\"id\":\"b85\",\"matched_paper_id\":7431199},\"end\":104353,\"start\":103709},{\"attributes\":{\"id\":\"b86\",\"matched_paper_id\":7408151},\"end\":104662,\"start\":104355},{\"attributes\":{\"id\":\"b87\",\"matched_paper_id\":1706697},\"end\":105070,\"start\":104664},{\"attributes\":{\"id\":\"b88\",\"matched_paper_id\":206413838},\"end\":105218,\"start\":105072}]", "bib_title": "[{\"end\":71511,\"start\":71452},{\"end\":71842,\"start\":71806},{\"end\":72330,\"start\":72235},{\"end\":72830,\"start\":72788},{\"end\":73156,\"start\":73096},{\"end\":73707,\"start\":73640},{\"end\":74095,\"start\":74039},{\"end\":74694,\"start\":74646},{\"end\":75690,\"start\":75637},{\"end\":75996,\"start\":75940},{\"end\":76391,\"start\":76348},{\"end\":76942,\"start\":76892},{\"end\":77412,\"start\":77353},{\"end\":77966,\"start\":77861},{\"end\":78358,\"start\":78274},{\"end\":78620,\"start\":78561},{\"end\":79149,\"start\":79092},{\"end\":79456,\"start\":79421},{\"end\":79770,\"start\":79712},{\"end\":80333,\"start\":80254},{\"end\":80878,\"start\":80750},{\"end\":81490,\"start\":81429},{\"end\":81980,\"start\":81913},{\"end\":82485,\"start\":82430},{\"end\":82778,\"start\":82740},{\"end\":83306,\"start\":83210},{\"end\":83715,\"start\":83639},{\"end\":84230,\"start\":84168},{\"end\":84738,\"start\":84652},{\"end\":85035,\"start\":84940},{\"end\":85821,\"start\":85760},{\"end\":86940,\"start\":86885},{\"end\":87302,\"start\":87217},{\"end\":87741,\"start\":87694},{\"end\":88038,\"start\":87983},{\"end\":88378,\"start\":88306},{\"end\":89052,\"start\":88996},{\"end\":89592,\"start\":89516},{\"end\":90172,\"start\":90125},{\"end\":90395,\"start\":90344},{\"end\":90889,\"start\":90805},{\"end\":91787,\"start\":91713},{\"end\":92671,\"start\":92631},{\"end\":93001,\"start\":92910},{\"end\":93422,\"start\":93377},{\"end\":93832,\"start\":93759},{\"end\":94324,\"start\":94253},{\"end\":94616,\"start\":94550},{\"end\":95285,\"start\":95242},{\"end\":95640,\"start\":95596},{\"end\":96041,\"start\":95998},{\"end\":96367,\"start\":96310},{\"end\":96898,\"start\":96798},{\"end\":97402,\"start\":97350},{\"end\":97806,\"start\":97764},{\"end\":98160,\"start\":98110},{\"end\":99361,\"start\":99314},{\"end\":99838,\"start\":99777},{\"end\":100354,\"start\":100279},{\"end\":100849,\"start\":100824},{\"end\":101238,\"start\":101197},{\"end\":102451,\"start\":102375},{\"end\":103208,\"start\":103174},{\"end\":103738,\"start\":103709},{\"end\":104409,\"start\":104355},{\"end\":104719,\"start\":104664},{\"end\":105105,\"start\":105072},{\"end\":71511,\"start\":71452},{\"end\":71842,\"start\":71806},{\"end\":72330,\"start\":72235},{\"end\":72830,\"start\":72788},{\"end\":73156,\"start\":73096},{\"end\":73707,\"start\":73640},{\"end\":74095,\"start\":74039},{\"end\":74694,\"start\":74646},{\"end\":75690,\"start\":75637},{\"end\":75996,\"start\":75940},{\"end\":76391,\"start\":76348},{\"end\":76942,\"start\":76892},{\"end\":77412,\"start\":77353},{\"end\":77966,\"start\":77861},{\"end\":78358,\"start\":78274},{\"end\":78620,\"start\":78561},{\"end\":79149,\"start\":79092},{\"end\":79456,\"start\":79421},{\"end\":79770,\"start\":79712},{\"end\":80333,\"start\":80254},{\"end\":80878,\"start\":80750},{\"end\":81490,\"start\":81429},{\"end\":81980,\"start\":81913},{\"end\":82485,\"start\":82430},{\"end\":82778,\"start\":82740},{\"end\":83306,\"start\":83210},{\"end\":83715,\"start\":83639},{\"end\":84230,\"start\":84168},{\"end\":84738,\"start\":84652},{\"end\":85035,\"start\":84940},{\"end\":85821,\"start\":85760},{\"end\":86940,\"start\":86885},{\"end\":87302,\"start\":87217},{\"end\":87741,\"start\":87694},{\"end\":88038,\"start\":87983},{\"end\":88378,\"start\":88306},{\"end\":89052,\"start\":88996},{\"end\":89592,\"start\":89516},{\"end\":90172,\"start\":90125},{\"end\":90395,\"start\":90344},{\"end\":90889,\"start\":90805},{\"end\":91787,\"start\":91713},{\"end\":92671,\"start\":92631},{\"end\":93001,\"start\":92910},{\"end\":93422,\"start\":93377},{\"end\":93832,\"start\":93759},{\"end\":94324,\"start\":94253},{\"end\":94616,\"start\":94550},{\"end\":95285,\"start\":95242},{\"end\":95640,\"start\":95596},{\"end\":96041,\"start\":95998},{\"end\":96367,\"start\":96310},{\"end\":96898,\"start\":96798},{\"end\":97402,\"start\":97350},{\"end\":97806,\"start\":97764},{\"end\":98160,\"start\":98110},{\"end\":99361,\"start\":99314},{\"end\":99838,\"start\":99777},{\"end\":100354,\"start\":100279},{\"end\":100849,\"start\":100824},{\"end\":101238,\"start\":101197},{\"end\":102451,\"start\":102375},{\"end\":103208,\"start\":103174},{\"end\":103738,\"start\":103709},{\"end\":104409,\"start\":104355},{\"end\":104719,\"start\":104664},{\"end\":105105,\"start\":105072}]", "bib_author": "[{\"end\":71524,\"start\":71513},{\"end\":71541,\"start\":71524},{\"end\":71556,\"start\":71541},{\"end\":71577,\"start\":71556},{\"end\":71860,\"start\":71844},{\"end\":71879,\"start\":71860},{\"end\":71892,\"start\":71879},{\"end\":72352,\"start\":72332},{\"end\":72365,\"start\":72352},{\"end\":72376,\"start\":72365},{\"end\":72852,\"start\":72832},{\"end\":72868,\"start\":72852},{\"end\":72878,\"start\":72868},{\"end\":72887,\"start\":72878},{\"end\":73175,\"start\":73158},{\"end\":73185,\"start\":73175},{\"end\":73198,\"start\":73185},{\"end\":73213,\"start\":73198},{\"end\":73219,\"start\":73213},{\"end\":73724,\"start\":73709},{\"end\":73739,\"start\":73724},{\"end\":73756,\"start\":73739},{\"end\":74112,\"start\":74097},{\"end\":74127,\"start\":74112},{\"end\":74447,\"start\":74433},{\"end\":74704,\"start\":74696},{\"end\":74715,\"start\":74704},{\"end\":74728,\"start\":74715},{\"end\":74745,\"start\":74728},{\"end\":74759,\"start\":74745},{\"end\":74764,\"start\":74759},{\"end\":75217,\"start\":75202},{\"end\":75231,\"start\":75217},{\"end\":75497,\"start\":75482},{\"end\":75708,\"start\":75692},{\"end\":75722,\"start\":75708},{\"end\":76013,\"start\":75998},{\"end\":76026,\"start\":76013},{\"end\":76044,\"start\":76026},{\"end\":76059,\"start\":76044},{\"end\":76412,\"start\":76393},{\"end\":76424,\"start\":76412},{\"end\":76446,\"start\":76424},{\"end\":76466,\"start\":76446},{\"end\":76481,\"start\":76466},{\"end\":76497,\"start\":76481},{\"end\":76957,\"start\":76944},{\"end\":76969,\"start\":76957},{\"end\":76978,\"start\":76969},{\"end\":76994,\"start\":76978},{\"end\":77004,\"start\":76994},{\"end\":77014,\"start\":77004},{\"end\":77024,\"start\":77014},{\"end\":77430,\"start\":77414},{\"end\":77442,\"start\":77430},{\"end\":77457,\"start\":77442},{\"end\":77473,\"start\":77457},{\"end\":77490,\"start\":77473},{\"end\":77507,\"start\":77490},{\"end\":77521,\"start\":77507},{\"end\":77541,\"start\":77521},{\"end\":77564,\"start\":77541},{\"end\":77981,\"start\":77968},{\"end\":77999,\"start\":77981},{\"end\":78016,\"start\":77999},{\"end\":78374,\"start\":78360},{\"end\":78641,\"start\":78622},{\"end\":78657,\"start\":78641},{\"end\":78673,\"start\":78657},{\"end\":78690,\"start\":78673},{\"end\":79165,\"start\":79151},{\"end\":79472,\"start\":79458},{\"end\":79489,\"start\":79472},{\"end\":79507,\"start\":79489},{\"end\":79789,\"start\":79772},{\"end\":79804,\"start\":79789},{\"end\":79821,\"start\":79804},{\"end\":80351,\"start\":80335},{\"end\":80363,\"start\":80351},{\"end\":80378,\"start\":80363},{\"end\":80893,\"start\":80880},{\"end\":80907,\"start\":80893},{\"end\":80923,\"start\":80907},{\"end\":80936,\"start\":80923},{\"end\":80946,\"start\":80936},{\"end\":81506,\"start\":81492},{\"end\":81522,\"start\":81506},{\"end\":81540,\"start\":81522},{\"end\":81992,\"start\":81982},{\"end\":82006,\"start\":81992},{\"end\":82025,\"start\":82006},{\"end\":82041,\"start\":82025},{\"end\":82493,\"start\":82487},{\"end\":82799,\"start\":82780},{\"end\":82812,\"start\":82799},{\"end\":82825,\"start\":82812},{\"end\":82840,\"start\":82825},{\"end\":83324,\"start\":83308},{\"end\":83334,\"start\":83324},{\"end\":83347,\"start\":83334},{\"end\":83726,\"start\":83717},{\"end\":83743,\"start\":83726},{\"end\":83752,\"start\":83743},{\"end\":84241,\"start\":84232},{\"end\":84258,\"start\":84241},{\"end\":84272,\"start\":84258},{\"end\":84280,\"start\":84272},{\"end\":84753,\"start\":84740},{\"end\":84772,\"start\":84753},{\"end\":85048,\"start\":85037},{\"end\":85065,\"start\":85048},{\"end\":85082,\"start\":85065},{\"end\":85557,\"start\":85544},{\"end\":85836,\"start\":85823},{\"end\":85850,\"start\":85836},{\"end\":85863,\"start\":85850},{\"end\":85876,\"start\":85863},{\"end\":86251,\"start\":86238},{\"end\":86445,\"start\":86432},{\"end\":86458,\"start\":86445},{\"end\":86469,\"start\":86458},{\"end\":86477,\"start\":86469},{\"end\":86491,\"start\":86477},{\"end\":86502,\"start\":86491},{\"end\":86513,\"start\":86502},{\"end\":86953,\"start\":86942},{\"end\":86959,\"start\":86953},{\"end\":86974,\"start\":86959},{\"end\":86984,\"start\":86974},{\"end\":87001,\"start\":86984},{\"end\":87321,\"start\":87304},{\"end\":87341,\"start\":87321},{\"end\":87360,\"start\":87341},{\"end\":87376,\"start\":87360},{\"end\":87760,\"start\":87743},{\"end\":87779,\"start\":87760},{\"end\":87795,\"start\":87779},{\"end\":88052,\"start\":88040},{\"end\":88062,\"start\":88052},{\"end\":88073,\"start\":88062},{\"end\":88083,\"start\":88073},{\"end\":88397,\"start\":88380},{\"end\":88413,\"start\":88397},{\"end\":88432,\"start\":88413},{\"end\":88878,\"start\":88864},{\"end\":89063,\"start\":89054},{\"end\":89077,\"start\":89063},{\"end\":89090,\"start\":89077},{\"end\":89113,\"start\":89090},{\"end\":89603,\"start\":89594},{\"end\":89617,\"start\":89603},{\"end\":89630,\"start\":89617},{\"end\":89653,\"start\":89630},{\"end\":90186,\"start\":90174},{\"end\":90198,\"start\":90186},{\"end\":90212,\"start\":90198},{\"end\":90407,\"start\":90397},{\"end\":90422,\"start\":90407},{\"end\":90903,\"start\":90891},{\"end\":90917,\"start\":90903},{\"end\":90925,\"start\":90917},{\"end\":90941,\"start\":90925},{\"end\":90956,\"start\":90941},{\"end\":90965,\"start\":90956},{\"end\":90975,\"start\":90965},{\"end\":91800,\"start\":91789},{\"end\":91811,\"start\":91800},{\"end\":91823,\"start\":91811},{\"end\":92245,\"start\":92232},{\"end\":92262,\"start\":92245},{\"end\":92466,\"start\":92451},{\"end\":92484,\"start\":92466},{\"end\":92690,\"start\":92673},{\"end\":92708,\"start\":92690},{\"end\":93016,\"start\":93003},{\"end\":93441,\"start\":93424},{\"end\":93453,\"start\":93441},{\"end\":93473,\"start\":93453},{\"end\":93851,\"start\":93834},{\"end\":93863,\"start\":93851},{\"end\":93883,\"start\":93863},{\"end\":94334,\"start\":94326},{\"end\":94350,\"start\":94334},{\"end\":94360,\"start\":94350},{\"end\":94626,\"start\":94618},{\"end\":94642,\"start\":94626},{\"end\":94652,\"start\":94642},{\"end\":94888,\"start\":94870},{\"end\":95298,\"start\":95287},{\"end\":95320,\"start\":95298},{\"end\":95335,\"start\":95320},{\"end\":95668,\"start\":95642},{\"end\":95678,\"start\":95668},{\"end\":96058,\"start\":96043},{\"end\":96077,\"start\":96058},{\"end\":96379,\"start\":96369},{\"end\":96394,\"start\":96379},{\"end\":96403,\"start\":96394},{\"end\":96415,\"start\":96403},{\"end\":96431,\"start\":96415},{\"end\":96911,\"start\":96900},{\"end\":96921,\"start\":96911},{\"end\":96934,\"start\":96921},{\"end\":96949,\"start\":96934},{\"end\":97428,\"start\":97404},{\"end\":97445,\"start\":97428},{\"end\":97450,\"start\":97445},{\"end\":97823,\"start\":97808},{\"end\":97844,\"start\":97823},{\"end\":98177,\"start\":98162},{\"end\":98420,\"start\":98414},{\"end\":98501,\"start\":98480},{\"end\":98519,\"start\":98501},{\"end\":98534,\"start\":98519},{\"end\":98551,\"start\":98534},{\"end\":98877,\"start\":98863},{\"end\":98892,\"start\":98877},{\"end\":98904,\"start\":98892},{\"end\":98920,\"start\":98904},{\"end\":98939,\"start\":98920},{\"end\":99182,\"start\":99171},{\"end\":99191,\"start\":99182},{\"end\":99199,\"start\":99191},{\"end\":99207,\"start\":99199},{\"end\":100366,\"start\":100356},{\"end\":100373,\"start\":100366},{\"end\":100381,\"start\":100373},{\"end\":100397,\"start\":100381},{\"end\":100410,\"start\":100397},{\"end\":100416,\"start\":100410},{\"end\":100866,\"start\":100851},{\"end\":100885,\"start\":100866},{\"end\":100901,\"start\":100885},{\"end\":101264,\"start\":101240},{\"end\":101281,\"start\":101264},{\"end\":101300,\"start\":101281},{\"end\":101312,\"start\":101300},{\"end\":101844,\"start\":101825},{\"end\":102083,\"start\":102073},{\"end\":102213,\"start\":102199},{\"end\":102480,\"start\":102453},{\"end\":102826,\"start\":102808},{\"end\":102999,\"start\":102984},{\"end\":103010,\"start\":102999},{\"end\":103227,\"start\":103210},{\"end\":103249,\"start\":103227},{\"end\":103264,\"start\":103249},{\"end\":103274,\"start\":103264},{\"end\":103544,\"start\":103530},{\"end\":103756,\"start\":103740},{\"end\":104427,\"start\":104411},{\"end\":104446,\"start\":104427},{\"end\":104463,\"start\":104446},{\"end\":104479,\"start\":104463},{\"end\":104737,\"start\":104721},{\"end\":104753,\"start\":104737},{\"end\":104770,\"start\":104753},{\"end\":104789,\"start\":104770},{\"end\":105123,\"start\":105107},{\"end\":71524,\"start\":71513},{\"end\":71541,\"start\":71524},{\"end\":71556,\"start\":71541},{\"end\":71577,\"start\":71556},{\"end\":71860,\"start\":71844},{\"end\":71879,\"start\":71860},{\"end\":71892,\"start\":71879},{\"end\":72352,\"start\":72332},{\"end\":72365,\"start\":72352},{\"end\":72376,\"start\":72365},{\"end\":72852,\"start\":72832},{\"end\":72868,\"start\":72852},{\"end\":72878,\"start\":72868},{\"end\":72887,\"start\":72878},{\"end\":73175,\"start\":73158},{\"end\":73185,\"start\":73175},{\"end\":73198,\"start\":73185},{\"end\":73213,\"start\":73198},{\"end\":73219,\"start\":73213},{\"end\":73724,\"start\":73709},{\"end\":73739,\"start\":73724},{\"end\":73756,\"start\":73739},{\"end\":74112,\"start\":74097},{\"end\":74127,\"start\":74112},{\"end\":74447,\"start\":74433},{\"end\":74704,\"start\":74696},{\"end\":74715,\"start\":74704},{\"end\":74728,\"start\":74715},{\"end\":74745,\"start\":74728},{\"end\":74759,\"start\":74745},{\"end\":74764,\"start\":74759},{\"end\":75217,\"start\":75202},{\"end\":75231,\"start\":75217},{\"end\":75497,\"start\":75482},{\"end\":75708,\"start\":75692},{\"end\":75722,\"start\":75708},{\"end\":76013,\"start\":75998},{\"end\":76026,\"start\":76013},{\"end\":76044,\"start\":76026},{\"end\":76059,\"start\":76044},{\"end\":76412,\"start\":76393},{\"end\":76424,\"start\":76412},{\"end\":76446,\"start\":76424},{\"end\":76466,\"start\":76446},{\"end\":76481,\"start\":76466},{\"end\":76497,\"start\":76481},{\"end\":76957,\"start\":76944},{\"end\":76969,\"start\":76957},{\"end\":76978,\"start\":76969},{\"end\":76994,\"start\":76978},{\"end\":77004,\"start\":76994},{\"end\":77014,\"start\":77004},{\"end\":77024,\"start\":77014},{\"end\":77430,\"start\":77414},{\"end\":77442,\"start\":77430},{\"end\":77457,\"start\":77442},{\"end\":77473,\"start\":77457},{\"end\":77490,\"start\":77473},{\"end\":77507,\"start\":77490},{\"end\":77521,\"start\":77507},{\"end\":77541,\"start\":77521},{\"end\":77564,\"start\":77541},{\"end\":77981,\"start\":77968},{\"end\":77999,\"start\":77981},{\"end\":78016,\"start\":77999},{\"end\":78374,\"start\":78360},{\"end\":78641,\"start\":78622},{\"end\":78657,\"start\":78641},{\"end\":78673,\"start\":78657},{\"end\":78690,\"start\":78673},{\"end\":79165,\"start\":79151},{\"end\":79472,\"start\":79458},{\"end\":79489,\"start\":79472},{\"end\":79507,\"start\":79489},{\"end\":79789,\"start\":79772},{\"end\":79804,\"start\":79789},{\"end\":79821,\"start\":79804},{\"end\":80351,\"start\":80335},{\"end\":80363,\"start\":80351},{\"end\":80378,\"start\":80363},{\"end\":80893,\"start\":80880},{\"end\":80907,\"start\":80893},{\"end\":80923,\"start\":80907},{\"end\":80936,\"start\":80923},{\"end\":80946,\"start\":80936},{\"end\":81506,\"start\":81492},{\"end\":81522,\"start\":81506},{\"end\":81540,\"start\":81522},{\"end\":81992,\"start\":81982},{\"end\":82006,\"start\":81992},{\"end\":82025,\"start\":82006},{\"end\":82041,\"start\":82025},{\"end\":82493,\"start\":82487},{\"end\":82799,\"start\":82780},{\"end\":82812,\"start\":82799},{\"end\":82825,\"start\":82812},{\"end\":82840,\"start\":82825},{\"end\":83324,\"start\":83308},{\"end\":83334,\"start\":83324},{\"end\":83347,\"start\":83334},{\"end\":83726,\"start\":83717},{\"end\":83743,\"start\":83726},{\"end\":83752,\"start\":83743},{\"end\":84241,\"start\":84232},{\"end\":84258,\"start\":84241},{\"end\":84272,\"start\":84258},{\"end\":84280,\"start\":84272},{\"end\":84753,\"start\":84740},{\"end\":84772,\"start\":84753},{\"end\":85048,\"start\":85037},{\"end\":85065,\"start\":85048},{\"end\":85082,\"start\":85065},{\"end\":85557,\"start\":85544},{\"end\":85836,\"start\":85823},{\"end\":85850,\"start\":85836},{\"end\":85863,\"start\":85850},{\"end\":85876,\"start\":85863},{\"end\":86251,\"start\":86238},{\"end\":86445,\"start\":86432},{\"end\":86458,\"start\":86445},{\"end\":86469,\"start\":86458},{\"end\":86477,\"start\":86469},{\"end\":86491,\"start\":86477},{\"end\":86502,\"start\":86491},{\"end\":86513,\"start\":86502},{\"end\":86953,\"start\":86942},{\"end\":86959,\"start\":86953},{\"end\":86974,\"start\":86959},{\"end\":86984,\"start\":86974},{\"end\":87001,\"start\":86984},{\"end\":87321,\"start\":87304},{\"end\":87341,\"start\":87321},{\"end\":87360,\"start\":87341},{\"end\":87376,\"start\":87360},{\"end\":87760,\"start\":87743},{\"end\":87779,\"start\":87760},{\"end\":87795,\"start\":87779},{\"end\":88052,\"start\":88040},{\"end\":88062,\"start\":88052},{\"end\":88073,\"start\":88062},{\"end\":88083,\"start\":88073},{\"end\":88397,\"start\":88380},{\"end\":88413,\"start\":88397},{\"end\":88432,\"start\":88413},{\"end\":88878,\"start\":88864},{\"end\":89063,\"start\":89054},{\"end\":89077,\"start\":89063},{\"end\":89090,\"start\":89077},{\"end\":89113,\"start\":89090},{\"end\":89603,\"start\":89594},{\"end\":89617,\"start\":89603},{\"end\":89630,\"start\":89617},{\"end\":89653,\"start\":89630},{\"end\":90186,\"start\":90174},{\"end\":90198,\"start\":90186},{\"end\":90212,\"start\":90198},{\"end\":90407,\"start\":90397},{\"end\":90422,\"start\":90407},{\"end\":90903,\"start\":90891},{\"end\":90917,\"start\":90903},{\"end\":90925,\"start\":90917},{\"end\":90941,\"start\":90925},{\"end\":90956,\"start\":90941},{\"end\":90965,\"start\":90956},{\"end\":90975,\"start\":90965},{\"end\":91800,\"start\":91789},{\"end\":91811,\"start\":91800},{\"end\":91823,\"start\":91811},{\"end\":92245,\"start\":92232},{\"end\":92262,\"start\":92245},{\"end\":92466,\"start\":92451},{\"end\":92484,\"start\":92466},{\"end\":92690,\"start\":92673},{\"end\":92708,\"start\":92690},{\"end\":93016,\"start\":93003},{\"end\":93441,\"start\":93424},{\"end\":93453,\"start\":93441},{\"end\":93473,\"start\":93453},{\"end\":93851,\"start\":93834},{\"end\":93863,\"start\":93851},{\"end\":93883,\"start\":93863},{\"end\":94334,\"start\":94326},{\"end\":94350,\"start\":94334},{\"end\":94360,\"start\":94350},{\"end\":94626,\"start\":94618},{\"end\":94642,\"start\":94626},{\"end\":94652,\"start\":94642},{\"end\":94888,\"start\":94870},{\"end\":95298,\"start\":95287},{\"end\":95320,\"start\":95298},{\"end\":95335,\"start\":95320},{\"end\":95668,\"start\":95642},{\"end\":95678,\"start\":95668},{\"end\":96058,\"start\":96043},{\"end\":96077,\"start\":96058},{\"end\":96379,\"start\":96369},{\"end\":96394,\"start\":96379},{\"end\":96403,\"start\":96394},{\"end\":96415,\"start\":96403},{\"end\":96431,\"start\":96415},{\"end\":96911,\"start\":96900},{\"end\":96921,\"start\":96911},{\"end\":96934,\"start\":96921},{\"end\":96949,\"start\":96934},{\"end\":97428,\"start\":97404},{\"end\":97445,\"start\":97428},{\"end\":97450,\"start\":97445},{\"end\":97823,\"start\":97808},{\"end\":97844,\"start\":97823},{\"end\":98177,\"start\":98162},{\"end\":98420,\"start\":98414},{\"end\":98501,\"start\":98480},{\"end\":98519,\"start\":98501},{\"end\":98534,\"start\":98519},{\"end\":98551,\"start\":98534},{\"end\":98877,\"start\":98863},{\"end\":98892,\"start\":98877},{\"end\":98904,\"start\":98892},{\"end\":98920,\"start\":98904},{\"end\":98939,\"start\":98920},{\"end\":99182,\"start\":99171},{\"end\":99191,\"start\":99182},{\"end\":99199,\"start\":99191},{\"end\":99207,\"start\":99199},{\"end\":100366,\"start\":100356},{\"end\":100373,\"start\":100366},{\"end\":100381,\"start\":100373},{\"end\":100397,\"start\":100381},{\"end\":100410,\"start\":100397},{\"end\":100416,\"start\":100410},{\"end\":100866,\"start\":100851},{\"end\":100885,\"start\":100866},{\"end\":100901,\"start\":100885},{\"end\":101264,\"start\":101240},{\"end\":101281,\"start\":101264},{\"end\":101300,\"start\":101281},{\"end\":101312,\"start\":101300},{\"end\":101844,\"start\":101825},{\"end\":102083,\"start\":102073},{\"end\":102213,\"start\":102199},{\"end\":102480,\"start\":102453},{\"end\":102826,\"start\":102808},{\"end\":102999,\"start\":102984},{\"end\":103010,\"start\":102999},{\"end\":103227,\"start\":103210},{\"end\":103249,\"start\":103227},{\"end\":103264,\"start\":103249},{\"end\":103274,\"start\":103264},{\"end\":103544,\"start\":103530},{\"end\":103756,\"start\":103740},{\"end\":104427,\"start\":104411},{\"end\":104446,\"start\":104427},{\"end\":104463,\"start\":104446},{\"end\":104479,\"start\":104463},{\"end\":104737,\"start\":104721},{\"end\":104753,\"start\":104737},{\"end\":104770,\"start\":104753},{\"end\":104789,\"start\":104770},{\"end\":105123,\"start\":105107}]", "bib_venue": "[{\"end\":72041,\"start\":71975},{\"end\":73386,\"start\":73311},{\"end\":76640,\"start\":76577},{\"end\":78857,\"start\":78782},{\"end\":83005,\"start\":82931},{\"end\":83939,\"start\":83854},{\"end\":84423,\"start\":84360},{\"end\":85247,\"start\":85173},{\"end\":88599,\"start\":88524},{\"end\":89284,\"start\":89207},{\"end\":89848,\"start\":89759},{\"end\":90605,\"start\":90522},{\"end\":91261,\"start\":91126},{\"end\":92758,\"start\":92753},{\"end\":93165,\"start\":93099},{\"end\":94032,\"start\":93966},{\"end\":96580,\"start\":96514},{\"end\":97096,\"start\":97031},{\"end\":100583,\"start\":100508},{\"end\":101489,\"start\":101409},{\"end\":104013,\"start\":103880},{\"end\":72041,\"start\":71975},{\"end\":73386,\"start\":73311},{\"end\":76640,\"start\":76577},{\"end\":78857,\"start\":78782},{\"end\":83005,\"start\":82931},{\"end\":83939,\"start\":83854},{\"end\":84423,\"start\":84360},{\"end\":85247,\"start\":85173},{\"end\":88599,\"start\":88524},{\"end\":89284,\"start\":89207},{\"end\":89848,\"start\":89759},{\"end\":90605,\"start\":90522},{\"end\":91261,\"start\":91126},{\"end\":92758,\"start\":92753},{\"end\":93165,\"start\":93099},{\"end\":94032,\"start\":93966},{\"end\":96580,\"start\":96514},{\"end\":97096,\"start\":97031},{\"end\":100583,\"start\":100508},{\"end\":101489,\"start\":101409},{\"end\":104013,\"start\":103880},{\"end\":71608,\"start\":71577},{\"end\":71973,\"start\":71892},{\"end\":72494,\"start\":72396},{\"end\":72925,\"start\":72887},{\"end\":73309,\"start\":73219},{\"end\":73823,\"start\":73756},{\"end\":74187,\"start\":74127},{\"end\":74431,\"start\":74379},{\"end\":74829,\"start\":74788},{\"end\":75200,\"start\":75068},{\"end\":75480,\"start\":75420},{\"end\":75773,\"start\":75722},{\"end\":76124,\"start\":76059},{\"end\":76575,\"start\":76497},{\"end\":77111,\"start\":77024},{\"end\":77598,\"start\":77564},{\"end\":78046,\"start\":78016},{\"end\":78398,\"start\":78374},{\"end\":78780,\"start\":78690},{\"end\":79220,\"start\":79165},{\"end\":79548,\"start\":79507},{\"end\":79911,\"start\":79847},{\"end\":80481,\"start\":80404},{\"end\":81071,\"start\":80967},{\"end\":81642,\"start\":81565},{\"end\":82055,\"start\":82041},{\"end\":82527,\"start\":82519},{\"end\":82929,\"start\":82840},{\"end\":83404,\"start\":83347},{\"end\":83852,\"start\":83752},{\"end\":84358,\"start\":84280},{\"end\":84779,\"start\":84772},{\"end\":85171,\"start\":85082},{\"end\":85542,\"start\":85496},{\"end\":85936,\"start\":85876},{\"end\":86236,\"start\":86154},{\"end\":86430,\"start\":86384},{\"end\":86762,\"start\":86684},{\"end\":87031,\"start\":87001},{\"end\":87436,\"start\":87376},{\"end\":87819,\"start\":87795},{\"end\":88124,\"start\":88083},{\"end\":88522,\"start\":88432},{\"end\":88862,\"start\":88831},{\"end\":89205,\"start\":89113},{\"end\":89757,\"start\":89653},{\"end\":90215,\"start\":90212},{\"end\":90520,\"start\":90422},{\"end\":91124,\"start\":90998},{\"end\":91906,\"start\":91847},{\"end\":92230,\"start\":92175},{\"end\":92449,\"start\":92377},{\"end\":92751,\"start\":92731},{\"end\":93097,\"start\":93016},{\"end\":93545,\"start\":93473},{\"end\":93964,\"start\":93883},{\"end\":94384,\"start\":94360},{\"end\":94667,\"start\":94652},{\"end\":94868,\"start\":94823},{\"end\":95148,\"start\":95089},{\"end\":95399,\"start\":95335},{\"end\":95738,\"start\":95678},{\"end\":96131,\"start\":96077},{\"end\":96512,\"start\":96431},{\"end\":97029,\"start\":96949},{\"end\":97530,\"start\":97450},{\"end\":97885,\"start\":97844},{\"end\":98251,\"start\":98177},{\"end\":98478,\"start\":98434},{\"end\":98861,\"start\":98787},{\"end\":99169,\"start\":99126},{\"end\":99426,\"start\":99391},{\"end\":99934,\"start\":99861},{\"end\":100506,\"start\":100416},{\"end\":100989,\"start\":100901},{\"end\":101407,\"start\":101312},{\"end\":101823,\"start\":101718},{\"end\":102071,\"start\":102035},{\"end\":102246,\"start\":102213},{\"end\":102539,\"start\":102480},{\"end\":102806,\"start\":102746},{\"end\":102982,\"start\":102931},{\"end\":103304,\"start\":103274},{\"end\":103528,\"start\":103477},{\"end\":103878,\"start\":103779},{\"end\":104490,\"start\":104479},{\"end\":104847,\"start\":104789},{\"end\":105131,\"start\":105123},{\"end\":71608,\"start\":71577},{\"end\":71973,\"start\":71892},{\"end\":72494,\"start\":72396},{\"end\":72925,\"start\":72887},{\"end\":73309,\"start\":73219},{\"end\":73823,\"start\":73756},{\"end\":74187,\"start\":74127},{\"end\":74431,\"start\":74379},{\"end\":74829,\"start\":74788},{\"end\":75200,\"start\":75068},{\"end\":75480,\"start\":75420},{\"end\":75773,\"start\":75722},{\"end\":76124,\"start\":76059},{\"end\":76575,\"start\":76497},{\"end\":77111,\"start\":77024},{\"end\":77598,\"start\":77564},{\"end\":78046,\"start\":78016},{\"end\":78398,\"start\":78374},{\"end\":78780,\"start\":78690},{\"end\":79220,\"start\":79165},{\"end\":79548,\"start\":79507},{\"end\":79911,\"start\":79847},{\"end\":80481,\"start\":80404},{\"end\":81071,\"start\":80967},{\"end\":81642,\"start\":81565},{\"end\":82055,\"start\":82041},{\"end\":82527,\"start\":82519},{\"end\":82929,\"start\":82840},{\"end\":83404,\"start\":83347},{\"end\":83852,\"start\":83752},{\"end\":84358,\"start\":84280},{\"end\":84779,\"start\":84772},{\"end\":85171,\"start\":85082},{\"end\":85542,\"start\":85496},{\"end\":85936,\"start\":85876},{\"end\":86236,\"start\":86154},{\"end\":86430,\"start\":86384},{\"end\":86762,\"start\":86684},{\"end\":87031,\"start\":87001},{\"end\":87436,\"start\":87376},{\"end\":87819,\"start\":87795},{\"end\":88124,\"start\":88083},{\"end\":88522,\"start\":88432},{\"end\":88862,\"start\":88831},{\"end\":89205,\"start\":89113},{\"end\":89757,\"start\":89653},{\"end\":90215,\"start\":90212},{\"end\":90520,\"start\":90422},{\"end\":91124,\"start\":90998},{\"end\":91906,\"start\":91847},{\"end\":92230,\"start\":92175},{\"end\":92449,\"start\":92377},{\"end\":92751,\"start\":92731},{\"end\":93097,\"start\":93016},{\"end\":93545,\"start\":93473},{\"end\":93964,\"start\":93883},{\"end\":94384,\"start\":94360},{\"end\":94667,\"start\":94652},{\"end\":94868,\"start\":94823},{\"end\":95148,\"start\":95089},{\"end\":95399,\"start\":95335},{\"end\":95738,\"start\":95678},{\"end\":96131,\"start\":96077},{\"end\":96512,\"start\":96431},{\"end\":97029,\"start\":96949},{\"end\":97530,\"start\":97450},{\"end\":97885,\"start\":97844},{\"end\":98251,\"start\":98177},{\"end\":98478,\"start\":98434},{\"end\":98861,\"start\":98787},{\"end\":99169,\"start\":99126},{\"end\":99426,\"start\":99391},{\"end\":99934,\"start\":99861},{\"end\":100506,\"start\":100416},{\"end\":100989,\"start\":100901},{\"end\":101407,\"start\":101312},{\"end\":101823,\"start\":101718},{\"end\":102071,\"start\":102035},{\"end\":102246,\"start\":102213},{\"end\":102539,\"start\":102480},{\"end\":102806,\"start\":102746},{\"end\":102982,\"start\":102931},{\"end\":103304,\"start\":103274},{\"end\":103528,\"start\":103477},{\"end\":103878,\"start\":103779},{\"end\":104490,\"start\":104479},{\"end\":104847,\"start\":104789},{\"end\":105131,\"start\":105123}]"}}}, "year": 2023, "month": 12, "day": 17}