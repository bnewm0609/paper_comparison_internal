{"id": 53082418, "updated": "2023-07-19 16:31:02.795", "metadata": {"title": "Ecosystem-level determinants of sustained activity in open-source projects: a case study of the PyPI ecosystem", "authors": "[{\"first\":\"Marat\",\"last\":\"Valiev\",\"middle\":[]},{\"first\":\"Bogdan\",\"last\":\"Vasilescu\",\"middle\":[]},{\"first\":\"James\",\"last\":\"Herbsleb\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 2018 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering", "publication_date": {"year": 2018, "month": null, "day": null}, "abstract": "Open-source projects do not exist in a vacuum. They benefit from reusing other projects and themselves are being reused by others, creating complex networks of interdependencies, i.e., software ecosystems. Therefore, the sustainability of projects comprising ecosystems may no longer by determined solely by factors internal to the project, but rather by the ecosystem context as well. In this paper we report on a mixed-methods study of ecosystem-level factors affecting the sustainability of open-source Python projects. Quantitatively, using historical data from 46,547 projects in the PyPI ecosystem, we modeled the chances of project development entering a period of dormancy (limited activity) as a function of the projects' position in their dependency networks, organizational support, and other factors. Qualitatively, we triangulated the revealed effects and further expanded on our models through interviews with project maintainers. Results show that the number of project ties and the relative position in the dependency network have significant impact on sustained project activity, with nuanced effects early in a project's life cycle and later on.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2899036005", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/sigsoft/ValievVH18", "doi": "10.1145/3236024.3236062"}}, "content": {"source": {"pdf_hash": "bd20e63c65ea704b086a62ad1b9adc283c9406e6", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "https://dl.acm.org/doi/pdf/10.1145/3236024.3236062", "status": "BRONZE"}}, "grobid": {"id": "1adcdd9539b1f692c4000428515c9dc9b4413f9f", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/bd20e63c65ea704b086a62ad1b9adc283c9406e6.txt", "contents": "\nEcosystem-Level Determinants of Sustained Activity in Open-Source Projects: A Case Study of the PyPI Ecosystem\n\n\nMarat Valiev \nCarnegie Mellon University\nUSA\n\nBogdan Vasilescu \nCarnegie Mellon University\nUSA\n\nJames Herbsleb \nCarnegie Mellon University\nUSA\n\nEcosystem-Level Determinants of Sustained Activity in Open-Source Projects: A Case Study of the PyPI Ecosystem\n10.1145/3236024.3236062ACM Reference Format: Marat Valiev, Bogdan Vasilescu, and James Herbsleb. 2018. Ecosystem-Level Determinants of Sustained Activity in Open-Source Projects: A Case Study of the PyPI Ecosystem. In Proceedings of the 26th ACM Joint European Soft-ware Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE '18), November 4\u015b9, 2018, Lake Buena Vista, FL, USA. ACM, New York, NY, USA, 12 pages. https://Software ecosystemsOpen SourceSurvival modeling\nOpen-source projects do not exist in a vacuum. They benefit from reusing other projects and themselves are being reused by others, creating complex networks of interdependencies, i.e., software ecosystems. Therefore, the sustainability of projects comprising ecosystems may no longer by determined solely by factors internal to the project, but rather by the ecosystem context as well.In this paper we report on a mixed-methods study of ecosystemlevel factors affecting the sustainability of open-source Python projects. Quantitatively, using historical data from 46,547 projects in the PyPI ecosystem, we modeled the chances of project development entering a period of dormancy (limited activity) as a function of the projects' position in their dependency networks, organizational support, and other factors. Qualitatively, we triangulated the revealed effects and further expanded on our models through interviews with project maintainers. Results show that the number of project ties and the relative position in the dependency network have significant impact on sustained project activity, with nuanced effects early in a project's life cycle and later on.CCS CONCEPTS\u00b7 Software and its engineering \u2192 Open source model; Software evolution; Risk management;\n\nwas not seriously considered in the software industry, OSS infrastructure today is ubiquitous, 1 powering applications in virtually every domain. Economists refer to OSS as \u0142digital dark matter\u017e [34], to signify both its invisibility and importance. They also report valuations of OSS in the billions of dollars per year [20,34], in terms of both direct reuse value and boosted productivity and efficiency.\n\nGiven the importance of OSS digital infrastructure to so much of the economy, one might expect that it is adequately staffed and maintained, i.e., sustainable. Yet, this is often not the case. As a recent Ford Foundation report investigating the sustainability of OSS \u0142digital infrastructure\u017e [26] notes, most users of OSS infrastructure take it for granted, and society at large is unaware of the risks. A vivid example is OpenSSL, the OSS project critical to the secure operation of the majority of websites, recently in the spotlight for the \u0142heartbleed\u017e security bug [24]; at that time, Open SSL was severely understaffed. Another notable example is leftpad [1], the trivial 11-LOC JavaScript package that, when deleted by its author from the npm 2 registry, caused cascading disruption in thousands of other projects that relied on it being accessible on npm.\n\nBesides emphasizing the importance of OSS sustainability issues, both examples illustrate a challenge with modern code reuse. Indeed, with vast amounts of high-quality OSS code available for reuse, one can declare dependencies on others' code instead of copying it into their own, taking advantage of the functionality without assuming the burden of maintenance. This leads to the formation of large code interdependency networks. However, this also means that local sustainability issues around individual projects can have widespread network effects. For example, breaking changes\u00d0 changes that are not backwards compatible\u00d0are a significant source of instability, causing negative consequences for dependents downstream [5]. Another example is developer turnover. Contributors to and maintainers of OSS are often overworked volunteers, who can decide to stop contributing at any time [58,74]. Consequently, OSS projects risk knowledge loss [52,57], quality degradation [27], or even extinction [10], again with reverberations downstream.\n\nThese challenges are particularly visible in OSS package ecosystems like npm, PyPI, 3 and CRAN, 4 where packages form complex and often brittle dependency chains [21,41]. With reuse so enticing and so much OSS code available, how can one make informed decisions about which packages to use? While OSS projects can be long-lived (e.g., Linux, Apache, and Eclipse), relatively few reach a mature state [7,12] and many that are active for a period of time are eventually abandoned [40], even once-popular ones [10]. Will a package still be maintained in a year? Which packages are sustainable and which are at risk? How does a package's place in the ecosystem influence its survival chances? How do developer choices, ecosystem community norms, and social processes contribute to sustainability or extinction? The empirical evidence for the mechanisms and predictive factors of OSS project survival in an ecosystem context is, at best, fragmented and incomplete.\n\nIn this paper we report on a mixed-methods study of the Python PyPI ecosystem, that makes a step towards filling this gap. PyPI is the official third-party registry for Python packages and one of the most popular OSS ecosystems, with over 130,000 published packages as of March 2018. Specifically, we study the ecosystem-level factors impacting the chances of a package becoming dormant, i.e., having very low or no development activity after some time. While not all dormant projects are abandoned (e.g., some simply do not require any additional maintenance because they are feature complete [10]), being in an inactive state could signal sustainability risk. For example, for an external observer, lack of project activity may indicate abandonment and increased uncertainty about whether potential issues or feature requests would be dealt with.\n\nWe interview maintainers of PyPI packages; integrate data from PyPI and GitHub, mining repositories and their interdependencies to assemble an ecosystem-level longitudinal data set; identify which packages became dormant; and estimate Cox proportional hazards survival regressions [15,49] to model the factors affecting a package's chances of entering this dormant state.\n\nWe find that the number of connections and the relative position in the dependency network are significant factors affecting the chances of a project becoming dormant; the organizational support a package receives, if any, has different effects depending on the type of supporting organization; and the practice of producing backwards compatible releases does not appear to influence project dormancy under our definition.\n\nIn summary, we contribute (1) a dependency-network-based survival analysis of packages in the PyPI ecosystem; (2) a series of interviews with project maintainers from this ecosystem to triangulate and refine the discovered relationships; and (3) an in-depth discussion of the effects revealed by the mixed-methods analysis.\n\n\nDEVELOPMENT OF HYPOTHESES\n\nAs with natural systems, the sustainability of OSS projects (much like the success of OSS projects [17]) is also clearly a multi-faceted concept; e.g., projects may be considered sustainable from a code maintainability perspective if they conform to modular and extensible architectures, from a community perspective if they successfully attract and retain newcomers; and from an economic perspective if they ensure low total cost of ownership and high added value. Our perspective in this paper is that of OSS supply chains [4]: Given the choice, should one depend on some OSS package? Will it be actively maintained in a year or will it show no signs of life?\n\nTo develop our hypotheses, we start by reviewing the literature on factors impacting the survival of OSS projects, defined here as the state of being actively maintained. We distinguish between project-level factors, of which having an appropriate supply of contributor effort is arguably most important, and ecosystem-level factors, induced by projects' position in an ecosystem and their relationship with other projects up and downstream. The project-level factors are relatively well studied, therefore we use the literature review to identify relevant control variables in our regression models. The ecosystem-level factors constitute our main contribution. For these we derive, and later test, explicit hypotheses.\n\nProject-level Factors. In order to survive and thrive, OSS projects typically require a steady supply of contributor effort, and projects with more contributors tend to have higher survival rates [59]. But not all contributions are created equal. The communities supporting OSS projects are typically organized in layers, with different roles being recognizable among participants [38,51]. Usually, project activity is driven by a few core contributors, who have commit (i.e., \u0142write\u017e) access to the repository and do most of the work. Ascension into the core group is a socio-technical process; earning committer status involves socializing with the core group [23,30,64] and demonstrated commitment through repeated, high-quality contributions [18,70]. The next layer, larger, comprises external contributors, who submit occasional patches; on GitHub, these occasional contributions are popular with the pull-based development model [32,55]. Next, there is typically a layer of contributing users, who may participate in discussions or report issues without contributing code [75]. Finally, the outermost layer consists of external users of the software, who do not necessarily participate in any project activities.\n\nCore contributors, or maintainers, are paramount to the survival of OSS projects. They are highly active and have the deepest knowledge of the code base, making them the hardest to replace. Activity in OSS projects typically follows the Pareto principle [31,50,73], by which 20% of contributors are responsible for 80% of all activity; to capture this phenomenon, different measures of risk of knowledge loss due to developer turnover have been proposed [57,69], including the popular \u0142truck factor\u017e [2,14]. Other contributors and users are also important: future maintainers are frequently groomed or ascend from among external contributors [51]; external contributors also provide much needed testing and quality assurance (\u0142given enough eyeballs, all bugs are shallow\u017e [56]); and without users the software would quickly become obsolete.\n\nWhen contributions come is also important. OSS projects, as with projects generally, have a life cycle, from inception to abandonment. The motivations for contributing to a project, the amount of effort a project may need, and the chances of attracting contributors will likely vary with the stage in the life cycle. The code growth curve of OSS projects often follows the typical pattern of rapid growth slowing and flattening as projects reach maturity and require less effort for adding features, as shown, e.g., in GNOME [42] and Linux stable releases [65]. Relatively few OSS projects reach maturity [7,12] and even once-popular projects can get abandoned, i.e., no longer maintained [10,40]. However, the factors associated with sustained activity can be different in early-stage projects compared to later on [60,71]. For example, Comino et al. [12] found that fewer than 2% of a sample of SourceForge projects reached maturity, and that early-stage projects risked abandonment due to restrictive licenses and smaller communities. In contrast, Coelho and Valente [10] found that common reasons why mature and once-popular OSS projects are abandoned include losing out to a competitor, having become obsolete, and lack of time and interest from contributors.\n\nEcosystem-level Factors. OSS ecosystems have been an active research topic (for a review, see Franco-Bedoya et al. [28]) and different definitions exist [6,36,45,47]. Here we follow Lungu's broad definition [46] of OSS ecosystems as collections of related software projects that co-evolve in the same environment. Python packages published on PyPI fit this definition: they coexist in the PyPI environment and, as we show below, they are often interdependent.\n\nWithin an OSS ecosystem, developers frequently contribute to multiple projects [68], often at the same time [66]. In addition to building social capital, bridging sub-communities also creates connections between projects, which can impact project sustainability. For example, Casalnuovo et al. [8] found that GitHub contributors are more likely to join projects with which they have prior social connections. Singh et al. [61] showed, using a longitudinal panel of 2,378 SourceForge projects, that social network ties between developers impact OSS project survival. Finally, Wang [71] analyzed 2,220 SourceForge projects to model survival factors at various project lifecycle stages. The author found that member social connections with other projects and active engagement of contributors present survival advantages at any stage, while permissive licenses and large contributor bases help especially early on.\n\nA significant missing puzzle piece in prior research on OSS sustainability is the impact of a project's position in dependency networks on survival or extinction, though the heartbleed and leftpad incidents discussed above suggest this might be significant. Indeed, ecosystem connections between projects extend well beyond the social, with complex dependency networks being formed, i.e., one project reusing functionality from another [1,3,21,41].\n\nWe argue that the survival of an OSS project in an ecosystem, in addition to all the factors reviewed above, depends also on the survival of its dependencies upstream (i.e., other packages the current package depends on) and downstream (i.e., packages depending on the current package). Specifically, while the benefits of depending on others' code in an ecosystem\u00d0reusing functionality without assuming the responsibility of maintenance\u00d0are clear, we expect that in general having more upstream dependencies may create more points of failure, because of the costs associated with responding to breaking (i.e., backward incompatible) changes. Indeed, while different OSS ecosystem communities have different practices in planning and deploying breaking changes [5], it is clear that in all ecosystems developers must constantly make dependency management decisions. We expect that: H 1 . The number of upstream dependencies is related to a lower probability of project survival.\n\nHowever, depending on an upstream package may also create an incentive to step up to make changes that benefit you as a user or to help more generally, because an ill maintained upstream project could increase maintenance effort downstream. Therefore, the more downstreams, the larger the pool of potential resources available upstream if needed. This may help explain how the original issues were resolved within hours for leftpad and days for OpenSSL: H 2 . The number of downstream dependencies is related to a greater probability of project survival.\n\nIn addition, in both incidents, a catalyst to the massive disruption is also the fact that among immediately affected dependencies were important network actors. For OpenSSL these were popular web servers while leftpad was used by Babel, a core JavaScript package. The number of direct dependents may not fully reflect a package's importance. Consequently, we posit: H 3 . Structural properties indicating more indirect connectivity through transitive dependencies are related to a greater probability of survival.\n\nIn contrast, there are upstream practices that can help mitigate these downstream costs. As concrete evidence of expending effort to support a community of users we consider backporting, which may indicate more intense involvement with other projects in the extended dependency network. Hence, we posit that: H 4 . Backporting is related to a higher probability of project survival.\n\nThere is also a social organizational perspective to thriving in an ecosystem. Besides differences in roles, OSS contributors are also diverse in terms of background, demographics [67], and employment; they can be a mixture of volunteers, academics, and paid contributors [9,76], with different motivations [22,35,43]. In particular, as ecosystem dependency management costs may become significant over time, we posit that whether a big organization (commercial, non-profit, or even academic) supports an OSS project will affect the project's survival chances, as this level of investment (e.g., assigned employees) is likely beyond that found among volunteers: H 5 . Projects supported by large organizations have a higher probability of survival.\n\n\nMETHODOLOGY\n\nTo test our hypotheses we designed a mixed-methods study following a concurrent triangulation strategy, a common mixed-methods design [25]. We collected both quantitative and qualitative data concurrently and used findings from one source as cross-validation for findings from the other. Quantitatively, we collected a panel data set of Python PyPI packages and used survival analysis to model the factors that explain projects becoming dormant. Qualitatively, we interviewed package maintainers to triangulate the model results and refine the discovered effects. Because of a concurrent rather than sequential triangulation strategy, we could revisit and enhance the model to account for potential effects revealed by the interviews, which is a particular strength of this design [16].\n\n\nData Set\n\nWe assembled a large panel data set 5 of OSS packages part of the PyPI (Python Package Index) ecosystem. A distinctive feature of our data set is that it accurately represents the network of dependencies between member packages (details below).\n\nWe chose Python as it is a popular general purpose language; it is the second most popular on Github by number of pull requests. 6 PyPI is the official registry of Python packages, forming an ecosystem comprising over 130,000 packages (as of March 2018), with declarative-style dependencies. Unlike other languages (e.g., Haskell), Python has only one package repository; as Figure 1, based on our data (details below), shows, PyPI is increasingly popular.\n\nInitial Filtering. Assembling our data set involved integrating data from two sources: metadata from the PyPI registry and the packages' development history from their GitHub repositories. Linking the two required several steps. First, we obtained a list of all PyPI packages using PyPI's JSON API 7 on January 21, 2018, for a total of 125,699 packages, 116,687 of which had at least one release. Next, for each package, we checked if its home page field in the PyPI metadata matches any popular code hosting platforms (github.com, bitbucket.org, gitlab.com). If this failed, we extended the lookup to all other metadata fields. If no URL was found, we downloaded the last package release and looked for mentions of code hosting platform URLs across all package files, with the repository name, if any, matching the package name on PyPI. This approach revealed 91,728 package repositories overall, 89% (or 81,802) of which were hosted on GitHub; for simplicity, we subsequently only mined packages with GitHub repositories. These repositories were checked for existence and uniqueness to filter out project foundries (i.e., repositories hosting hundreds of projects, 8 since these all point to the same PyPI package and the metadata would be impossible to disentangle), leaving 71,903 code repositories (packages) total. We further filtered out packages created before 2012, when GitHub became popular, as the data pre-2012 is sparse, and packages with less than a year of observable history, i.e., created after January 2017, since we could not confidently label them as dormant or still maintained (see \u011f3.2). Our final sample contains 46,547 packages.\n\nDependency Network. By \u0142dependency\u017e, we mean a declared technical dependency on another PyPI package. That is, we do not count required system libraries nor Python packages copied to the source tree of a package. We also exclude optional extras and test dependencies, as the vast majority of installations do not use them. Given a package, we call \u0142upstreams\u017e those packages used by this package, i.e., packages that the focal package depends on; conversely, we call \u0142downstreams\u017e those packages dependent on the focal one.\n\nTo extract dependencies, we mined the package metadata whenever possible, and used a sandbox installation as a fallback. PyPI supports several packaging formats, two of which (.egg and .whl) store machine-readable dependencies. For other formats, e.g., source archives, we executed a package installation in a sandbox environment with an instrumented version of the package installer, logging the requested dependencies.\n\nTo capture network dynamics we extracted dependency information from all releases of all PyPI packages. Then, we generated historical snapshots of the network, using the latest non-testing, non-backported release at each time. Testing releases were inferred from version numbers, using semantic versioning assumptions (i.e.,  not matching a pattern of dots and numbers only). Backporting releases are defined as a release with lower version number than the highest non-testing release (e.g., 1.10.0 is a backporting release if 2.0 was released earlier). Note that we extracted dependencies over the whole PyPI network, not just for packages with GitHub repositories; this means our network structural measures are robust to the initial filtering above.\n\n\nOperationalizations of Concepts\n\nIn preparation for the quantitative survival analysis below (details in \u011f3.3), we introduce the following operationalizations of the different project-and ecosystem-level factors discussed in \u011f2 above.\n\nDormant projects. We consider project as dormant if it is no longer being maintained, i.e., when it stops development (commit) activity, in line with prior work [10,61,71]. This suggests a straightforward approach to detect dormant projects: look for a long period of inactivity in the git history, and consider the timestamp of the latest commit as the dormant date. However, this is not always accurate: e.g., there are instances when a seemingly dormant project, with an activity gap of one year or more, is \u0142revived\u017e by (a few) commits to officially indicate that the project has been deprecated; dormant projects may have also had little activity to begin with (thus long gaps are not unusual), changed owner, or were not as much abandoned as they were \u0142completed\u017e [10] (i.e., they continue to deliver the intended value without active maintenance; 11% of developers interviewed by Coelho and Valente [10] reported this).\n\nTo increase robustness to residual development activity (i.e., fewer false positives), we instead only label a project as dormant if it had less than one commit per month on average in the 12 months prior to its most recent commit. This fits well with our manual inspections of small samples of the data (tens of packages), though we do acknowledge this definition as a potential threat to validity.\n\nProject-level Control Variables. As indicated in our literature review, several factors are known to impact survival rates, and we use the following variables to include these factors in our models:\n\nProject age: the number of months since the first commit in the repository. Note that the earliest Git commit is sometimes dated unreasonably early, e.g., because of a system time reset on a developer machine (dead CMOS battery). A true first commit is one without a parent in the Git history graph. We identified true first commits and filtered out outlying commits dated before their timestamps.\n\nNumber of commits: obtained via the GitHub API and aggregated per calendar month; consequently, since the first month may be incomplete, we exclude it from further analysis.\n\nNumber of contributors: counted as the number of GitHub users having authored commits within a given calendar month.\n\nSize of the core team: the number of people responsible for 90% of contributions in a given month. This threshold was selected empirically as a typical \u0142elbow\u017e point in distribution of OSS activity, much like in other OSS projects (e.g., Apache [50]).\n\nNumber of issues: obtained via the GitHub API, with pull requests filtered out, aggregated per calendar month. We distinguish between developer-reported issues, likely occurring internally during development, and non-developer-reported issues, likely reported by external users, as the latter are more indicative of the size of the user base; we call \u0142developers\u017e those contributors who authored prior commits and \u0142non-developers\u017e the rest.\n\nNumber of non-developer issue reporters: the number of nondeveloper GitHub users reporting issues in a given calendar month; may help distinguish communities with higher user engagement from those where few users do most issue reporting.\n\nLicense type: extracted from PyPI package metadata; categorical variable, indicating whether a project is distributed under a strong copy-left license (GPL, Affero etc.), weak copy-left (LGPL, MPL, OPL, etc.) or non-copy-left license (Apache, BSD etc.), cf. [71].\n\nSocial ties: the total number of PyPI packages that contributors to the focal package also contributed to this month, as a proxy for the amount of OSS embeddedness of the contributors. Projects with more \u0142seasoned\u017e contributors may be more sustainable.\n\nVariables for Ecosystem-level Hypotheses.\n\nNumber of upstreams (out-degree centrality): number of upstream dependencies used by the project (H 1 ).\n\nDormant upstreams: binary variable indicating whether any of the upstream dependencies is itself dormant at the time (H 1 ).\n\nNumber of downstreams (in-degree centrality): number of projects directly dependent on the focal project (H 2 ). Both here and in the upstreams case, we do not differentiate between versions of a dependency, so even dependencies on old and unsupported versions of the package are counted. This is because more potential contributors dependent on this package and having a vested interest in its sustainability may positively affect survival.\n\nKatz centrality: as a proxy for the importance of a package's position in the network structure (H 3 ). Katz centrality [39] for node i is defined as: C K at z (i) = \u03b1 j \u2208J C K at z (j) + \u03b2, where J is the set of adjacent nodes to i. Parameter \u03b2 is an initial centrality (usually 1), and \u03b1 is a discriminating factor applied at each step to down-weigh farther nodes (0.1 in this study). Developers further downstream in the dependency chain may be less likely to step in if needed than people from immediately dependent projects. We use Katz centrality to capture this and down-weigh farther downstream projects depending on their dependencies.\n\nBackporting: binary variable indicating whether the project produced a backporting release in the last 12 months (H 4 ).\n\nOrganizational account: binary variable indicating that the project is hosted under an organizational (rather than personal) GitHub account; organizations, even informal, may possess more resources than an individual developer, affecting survival differently (H 5 ).\n\nUniversity involvement: share of commits where the top-level domain of the author's email is a university domain. 9 This is a conservative operationalization, as the list may be incomplete and not all academically affiliated contributors configure their Git clients with their institutional emails. Predominantly academic projects may be subject to specific survival risks, e.g., student graduation, funding cycles, and shifting research interests (H 5 ).\n\nOrganizational involvement: the share of commits from nonuniversity, non-public, non-personal email domains. Public email providers (e.g., gmail.com) were excluded based on a public list. 10 Personal domains are defined as those with only one known user across the entire ecosystem data. We manually validated the top-100 domains (by number of emails) labeled organizational and found no obvious mislabelling. Commercial companies or open-source foundations, both of which are \u0142organizational\u017e, may act as a driving force and supply resources, e.g., their employees' time (H 5 ).\n\n\nSurvival Analysis (Quantitative)\n\nWe use survival analysis to model the effects of the different factors above on packages becoming dormant. Survival analysis, also known as event history analysis, is a branch of statistics that specializes in modeling of time to event data [49]. Typically only a single event occurs for each subject; in our case, the event is the package suspending its development activity. Survival analysis techniques are designed to deal with so-called right-censored observations: the time of the occurrence of the event of interest can only be recorded reliably for members of the population that already experienced the event; for others, all we know for certain is that the event hasn't happened yet; for some, it may never happen (hence the term rightcensorship). In software engineering, survival analysis has been used to model, e.g., defect survival in Eclipse (time to bug fixes) [72] and contributor survival in OSS projects [13,44,53].\n\nCox Proportional-Hazards Model. Different survival analysis techniques exist. The most common regression modeling framework for survival analysis is the Cox proportional-hazards model [15], which allows to estimate the effect of any one independent variable on the outcome, while holding other covariates fixed. This allows us to precisely isolate the effects of any given factor on survival.\n\nIn a general case, one may be interested in modeling state transitions in some system. Say we have a number of observation of some system, entering (e.g., birth) and leaving (e.g., death) a state of interest. For each alive subject, we thus have a survival time T on record. The probability of reaching a given survival time t will be defined by the survival function S(t) = P(T > t). The probability of leaving the state at time t will be given by hazard rate h(t) = P (T <t +\u2206t |T \u2265t ) \u2206t . 9 As per a public list https://github.com/Hipo/university-domains-list 10 https://gist.github.com/tbrianjones/5992856/ + + + + + + + + + + + + + + + + + + + + ++ ++ ++ ++ +++ ++ ++ +++ +++ +++ ++++ +++++ +++++ +++++ + Given enough data, one can build a non-parametric regression to estimate all these functions. Our goal, however, is to estimate the effect of some independent variables X on the hazard rate: h(t, X ) = \u03b8 (t)f (X ). The problem in this case is that the baseline hazard rate \u03b8 (t) is non-parametric and thus does not have a functional equivalent. Cox's proportional hazard model allows to estimate coefficients of the regression h(t, X ) = \u03b8 (t) exp(\u03b2 T X ) using partial likelihood, without any assumptions about the baseline hazard rate [37,49].\n\nA nice property of this model is that one can directly interpret the coefficients \u03b2. For example, if \u03b2 i = 2, then every unit increase in X i will increase the probability of survival by exp(2) = 7.4 times.\n\nModeling Considerations. Recall that our data set is longitudinal, organized in monthly windows. Measures derived from OSS data (e.g., number of commits) tend to be quite noisy, with high variation from one observation (e.g., month) to the next. To increase the robustness of our models to potentially high window-to-window variance, we first smoothed out all numerical variables using a six-months sliding window, where each value was replaced by the average of the previous six. 11 Then, we split project data into sixmonth periods, taking only the last observation from each period.\n\nAs expected (\u011f2), we also observed during initial exploration of our data that many packages become dormant early; see Figure 2, which shows the probability of survival (i.e., non-dormant) over time, across all PyPI packages in our sample. To model how the different factors contribute to explaining the variability in package survival rates differently early-stage compared to later on, we split the data set into two parts: early-stage shutdowns (i.e., stopping or nearly stopping development in the first six months, which matches well our sliding-window smoothing approach) and the rest.\n\nThe early-stage shutdowns, by definition given our smoothing, only contribute one observation each, while the other packages contribute more. Therefore, we model this group using logistic regression (glm in R), with the response variable being the likelihood of a project becoming dormant. For the remaining packages, the data contains monthly observations. A package's dormant variable is True in the last month, if we labeled the package as having stopped activity (see above), and False otherwise; surviving packages have, therefore, dormant = False in all windows. To model these, we estimate a Cox proportional-hazards model (coxph in R). 11 Or fewer, in the first five months of observation.\n\nIn both cases, we follow a similar procedure for model fit and diagnostics. First, for predictors with highly skewed distributions, we conservatively removed the top 1% of values as high-leverage outliers, in line with statistical best practice [54]; high-leverage points would disproportionally affect regression slopes and reduce the model's robustness. Second, we log-transformed variables with skewed distributions, as needed, to reduce heteroscedasticity [29]; this helps stabilize the variance and can improve model fit. Third, we test for multicollinearity between the explanatory variables using the variance inflation factor (VIF), and remove variables, if any, with VIF scores above the recommended maximum of 5 [11]. We also performed graphical diagnostics: deviance residual plots for the logistic regression and Schoenfeld residuals [33] for the Cox model (which test the assumption of constant hazard ratios over time); none displayed any obvious signs of violations. In the Cox model, to account for the non-independence of repeated observations per package, we explored different options, all of which produced qualitatively similar results: transforming the data into count process format [62]; or using a cluster term for package.\n\nWhen interpreting the models, we consider coefficients important if they are statistically significant at 0.05 level or lower, and we estimate their effect sizes from ANOVA type-2 analyses (column \u0142LR Chisq\u017e in Table 2). For the logistic model we also report McFadden's pseudo R 2 measure of goodness of fit.\n\n\nMaintainer Interviews (Qualitative)\n\nTo triangulate and enhance our modeling results we conducted 10 semistructured interviews with package maintainers. Recruitment was done by soliciting via email, using addresses collected from GitHub profiles or personal websites. We used stratified sampling to identify potential interviewees: 3 packages with extreme feature values (large size), 2 projects that recently became inactive, 4 randomly selected to stratify the sample by project size, and 1 highly productive individual contributing to many projects of different sizes. For each project, the most active person in the last two years was solicited via email. We sent 32 emails, received 12 responses, and conducted 10 interviews; we reached theoretical saturation, meaning roughly that subsequent data all fit within the categories derived from the previous interviews, around the sixth interview.\n\nThe interview protocol was centered around the model features, asking about the predictive power of these features, their expected effect, and comments on the effects discovered by the model. Interviews also included several open ended questions about the definition of sustainability in OSS, project context, and missing factors that should be incorporated into the model.\n\nInterviews were recorded, transcribed, translated (two cases), and coded. For three interviews, interview recordings were partially or completely corrupted due to technical glitches. Transcripts for these interviews were restored from partial recordings and notes, confirming accuracy with participants when necessary.\n\nA lightweight qualitative coding was made by one author and discussed with the others. Codes were designed to match model features, their possible explanations, and threats to validity.  \n\n\nRESULTS AND DISCUSSION\n\nWe present an integrated discussion of quantitative and qualitative results, combining the survival analysis with interview insights. Table 2 presents the regression results. The first two models, logistic regression for projects becoming dormant in the early-stage (first six months), and Cox proportional-hazards for those becoming dormant later on, comprise the factors we reviewed or hypothesized in \u011f2. The third model extends the Cox proportional-hazards model, to test for potential interaction effects emerging during our qualitative analysis. Logistic regression coefficients are odds ratios. Cox model coefficients are hazard ratios; a hazard ratio above 1 indicates a covariate that is positively associated with the event probability, and thus negatively associated with the length of survival.\n\n\nSurvival Models and Interview Insights\n\nProject-level Effects. The number of commits is associated with higher chances to become dormant in the next time period in both groups (early-and late-stage), i.e., packages with higher commit activity are more likely to become dormant, other variables held constant. Interviewees pointed out that commit squashing (merging large contributions into a single commit), which would reduce the number of commits, may help explain this effect: mature projects may use this practice more often, but are less likely to become dormant; at the same time, a contributor with direct commit access can contribute many small commits, which often happens in smaller projects, which are more likely to become dormant. Three interviewees indicated using recency of commits as the main indicator of sustainability. Future work should consider counting commit message lines instead (squashed commits tend to contain all original messages), and replacing the absolute number with commit dynamics, such as stability of monthly contributions. Two participants also suggested adjusting the number of commits to the project size, since bigger projects may need more maintenance. The number of contributors has a negative effect on chances of becoming dormant in both groups, i.e., packages with more contributors are less likely to become dormant. Six interviewees agreed unconditionally that having more contributors improves sustainability. Explanations included, in decreasing order of popularity: larger recruitment pool for the core team, better code reviews, and an indication of healthy onboarding practices. An important addition to the number of committers as a sustainability metric, pointed out by three interviewees (all are maintainers of big projects) is that it does not capture non-code contributions. For example, people contributing code reviews, issue triaging, and even evangelism and securing funding are essential for project sustainability.\n\nThe size of the core team is collinear with the number of contributors in our models, hence not included. Our interviewees also perceive it similarly. It was unanimously viewed as a positive factor by maintainers of big projects. All explanations of the effect either directly referred to the \u0142bus factor\u017e or closely resembled its definition. For small projects, this metric was either equivalent to the total number of contributors and still considered positive, or did not apply because the project was considered feature-complete.\n\nThe number of issue reporters was not included in our models due to multicollinearity. For our interviewees, this was perceived as another way to measure user base.\n\nThe number of issues was expected to be a positive indicator of user engagement. However, it was estimated as a risk factor in the first six months (i.e., the early-stage model), while still decreasing the chances of becoming dormant in the later-stage survival model. In the interviews, the discussion revealed several layers of interpretation for this metric. First, reported issues were unanimously considered to be a positive sign of an active user community. Two small project maintainers also noted that no issues in a small project could be an indicator of a project without quality issues rather than low usage. Four participants suggested looking into issue handling and discussions. Average response time, number of responses, and number of closed issues were proposed as indicators of activeness for the project team.\n\nAnother interpretation for issues, coming from three maintainers of big projects, suggested that issue triaging, although helpful for end users, takes resources and sometimes slows down development activities. Some projects were known to stop responding to issues completely to conserve developers' effort. 12 Based on this discussion, in the third model we introduce an interaction between the number of commits and number of contributors. The interaction effect was significant, rendering number of issues as a positive factor in projects with high volume of commits. Controlling for this interaction, the number of reported issues itself is not significant. H 1 . Upstreams. Upstream dependencies were expected to increase the chances of projects becoming dormant. The modeling effects are nuanced. In the first six months, a higher number of upstreams correlates with higher chances of dormancy, as hypothesized, although the presence of a dormant upstream reduces this risk. Later on, a higher number of upstreams correlates with lower chances of dormancy, but the presence of a dormant upstream increases this risk.\n\nThe interviews with utility library project maintainers offer a potential explanation. Such projects are considered dormant per our definition, while in fact they are feature complete. Reusing feature complete libraries can boost development of a new project, hence the reduced dormancy risk in the first six months. In the long-term, however, projects may start to incur higher costs of maintaining compatibility with dormant upstreams, hence the increased risk.\n\nAt the same time, having more upstreams overall in the long term enables more reuse, compensating for increased dormancy risks. Still, interviewees were cautious, stressing that it is better to limit upstream dependencies in the long-term to those that are really necessary, as there is a trade-off between development effort (lower with more reuse) and potential compatibility issues later on. The mention of \u0142as few as possible within reason\u017e suggested a non-linear effect, which we added to the third model as a quadratic term of the number of upstreams; however, this term did not have a statistically significant effect. We further illustrate this trade-off.\n\nOn the one hand, the positive effect of dependency adoption comes from saving resources on implementation. A striking example comes from an interview with a project maintainer who was able to reuse a domain-specific library from a similar project. The maintainer claimed that most projects in this domain die in an attempt to implement this very expensive piece of functionality, so adoption of this dependency was essential for the project success.\n\nOn the other hand, the compatibility issues come from the Python package installer (pip) not having a version resolver. For example, if package A requires B version 1.0 and C version 1.0, and B 1.0 12 E.g., the npm CLI team: https://twitter.com/maybekatz/status/953402549293350913 requires C 2.0, after installing package A a user might end up with an incompatible setup B 1.0 and C 1.0. The Python community developed tools to build isolated, non-contradicting sets of dependent packages (e.g., virtualenv and pipenv), but even compatibility within these environments requires effort from package developers.\n\nAll interviewees seem well aware of this trade-off and reported using different heuristics to find the right balance. Several maintainers, especially of larger packages, indicated that they have to spend substantial effort to stay compatible with a wide range of environments by supporting outdated versions of upstream packages. In case of smaller upstreams, it is often considered a lesser evil to either reimplement a dependency or copy a compatible version under the package source tree.\n\nIn summary, an indication of compatibility with potential upstreams is the biggest factor in dependency adoption, but overall the evidence for or against H 1 is inconclusive.\nH 2 .\nDownstreams. Downstream dependencies were expected to have a positive effect on project sustainability. Our models indicate that indeed they have a positive effect in the long term, but not in the first six months. Building a community of downstream projects takes time. The most likely scenario for a project to have downstream dependencies early in their lifecycle is to be chipped off from a bigger project into a small utility library, used by other projects of the same maintainer. Such projects are usually limited in scope, do not require further maintenance, and thus will be considered dormant. In the later stage, however, this metric is dominated by \u0142natural\u017e downstream dependencies, working as a positive survival factor in the later-stage survival models.\n\nAcross all interviews, downstream dependencies were characterized as a mostly positive factor, with the main trade-off between extra maintenance effort and resources brought by the dependent projects. Main benefits brought by downstream projects were described as code contributions (three participants), free testers (two), secure funding (two participants from academic projects). Two participants considered the number of dependent projects a proxy for user base, and two maintainers of feature-complete projects stated that it is not important at all.\n\nThe negative side of downstream dependencies was described as extra effort to maintain compatibility and triage issues. Only one participant stated that contributions from downstream projects are not worth this effort. These explanations, together with modeling results, mostly support H 2 .\n\nH 3 . Structural properties. Relative position in the dependency network was only relevant for four projects in the interview pool having transitive downstream dependencies, and even for those the dependency network was not directly observable. Due to these constraints the role of the relative position in the dependency network was mostly discussed from a theoretical perspective rather than personal experience.\n\nIn most cases, transitive downstreams were interpreted in the same way as direct ones, as a user base. Two participants stated that projects higher in the dependency chain need to put more resources into sustainability because of their special position. One of them motivated this with an example of \u0142extremely painful\u017e debugging of a second-level upstream dependency (i.e., an upstream of an upstream). For two maintainers of feature-complete projects the relative position in the dependency network did not matter. Limitations of the interview sample prevent us from building a more robust qualitative interpretation of this metric.\n\nHowever, in all three models higher Katz centrality correlates with increased chances of projects becoming dormant. This effect could be possibly explained by a higher reuse rate of feature complete libraries. It could also be attributed to an increased maintenance effort required in projects higher in the dependency chain, as indicated by interviewees. Overall, based on the modeling and interview results, we could not confirm H 3 .\n\nH 4 . Backporting. Backporting was used as an indicator of project practices aimed at reducing the maintenance cost of dependent projects [5]. It was estimated to substantially reduce chances of becoming dormant in the first six months, where practical importance of backporting releases is questionable. The model estimate, suggesting increased likelihood of survival, could be explained by projects occasionally mislabeling releases; however, the fact that these projects produce multiple releases in the first six months is serving as an indicator of sustainability. In subsequent later-stage survival models this feature did not have a significant effect. We could not confirm H 4 .\n\nH 5 . Organizational Support. University involvement has a special role in the Python community. Many signature Python projects are related to traditionally academic domains: Data Science, Machine Learning, Artificial Intelligence, Natural Language Processing, etc. Our expectation was that university projects have extra risks, such as students leaving after graduation, end of funding cycles, etc. However, modeling results indicated that university involvement is not a significant dormancy risk factor in the first six months, but in later-stage survival models it reduces the chance of becoming dormant by approximately 25%.\n\nIn our interview sample, four participants were university affiliates. Overall, all four indicated that their OSS work is currently funded through a university through a grant or contract, and their contributions are related to their position in academia. Two of them started their projects as students, one joined an existing project, and the last project was created as a practical tool to support existing research. Two interviewees transitioned into faculty positions during their projects, and thus had an extended perspective on the evolution of an academic project. They commented on three survival challenges in the lifecycle of a university project: surviving the student graduation cycle, surviving the academic funding cycle, and growing outside academia. Two out of four university affiliates we interviewed assumed that the diversity of institutions involved might also be used as an indicator of sustainability, where projects with multiple institutions involved are expected to be truly owned by the research community, in contrast to local research projects. It was also suggested that the university involvement effect might vary depending on the area of science.\n\nThe explanation above and the modeling results partially support H 5 . However, increased sustainability of university projects might be specific to the Python ecosystem due to its high share of \u0142academic\u017e projects and should be further tested in different ecosystems by future work.\n\nCommercial involvement was expected to have a positive effect on sustainability (lower risk of dormancy), but the models suggest otherwise; the feature also elicited somewhat controversial interview explanations. A shared opinion about commercial involvement among interviewees was that companies bring resources to the project, but this support is not sustainable long term. Common concerns include misalignment of companies' priories with the project goals and sustainability issues caused by companies withdrawing from a project.\n\nThe overall extent of commercial involvement in PyPI seems small. Contrasting the results of the 2016 Future of Open Source Survey, which states that \u01421 in 3 companies have a full-time resource dedicated to open-source projects\u017e and \u014267% of companies actively encourage developers to engage in and contribute to open-source projects\u017e, 13 only two participants knew about cases of companies paying developers to contribute to OSS projects of their choice. One participant also indicated that their project benefits from commercial contributions, but \u0142... those engineers will have a finite time with us. So we can't put them on the critical path\u017e. This explanation, coupled with modeling results, is at odds with H 5 .\n\nAnother aspect to commercial contributions is licensing. One participant stated that commercial companies are sensitive to licensing terms. In particular, many product companies will not be able to work with GPL products, though service companies might.\n\nAdding license restrictiveness as a control variable in our models, we find that presence of a license, whether strong-, weak-or non-copy-left, is a positive survival indicator. Although one interview participant indicated that strong copy-left licenses, such as GPL, restrict project adoption, the model indicates that strongand weak copy-left licenses have higher positive impact on project chances of survival than non-copy-left licenses or no license.\n\nHosting under an organizational account on GitHub has a substantial positive effect. Otherwise equal, such projects are 22% less likely to be become dormant, which partially supports H 5 .\n\n\nOther Indicators of Sustainability\n\nDuring the interviews other indicators of sustainability emerged. For example, competition was listed as a major driving force behind one project. Users in this domain can easily switch between projects, so this project had to implement new features added by competing projects. Such competition increases the required maintenance effort to stay up to date with the user needs.\n\nAcross many interviews, participants indicated that maturity of project practices plays an important role in an evaluation of the project's sustainability from the end user perspective. Prior work by Trockman et al. [63] also found that developers rely on observable signals when making decisions about which project to use or contribute to. The factors mentioned during our interviews were related to software quality, backward compatibility, developer onboarding, and support for end users. The indicators of such practices include implemented autotests, CI and test runner configurations, documentation, number of pull requests, GitHub stars, project website, etc. Three participants mentioned the number of downloads as an indicator of an active user community, although noisy (\u0142even one order of magnitude doesn't tell you very much\u017e).\n\n\nImplications\n\nOur study provides a quantitative way (supported by qualitative insights) to identify and predict which OSS projects may become dormant and therefore pose a risk to developers choosing dependencies. Our survival models show that in addition to known project-level factors impacting sustainability, such as the number of contributors and the number of users, a project's chances of becoming dormant (having limited activity) is influenced by a series of ecosystem-level factors, such as its position in the ecosystem dependency network. These results have several implications.\n\nFirst, these results may be actionable for OSS researchers and platform designers. The ecosystem-level variables we found to correlate with a project's risk of becoming dormant, despite being aggregations of publicly accessible data, are not readily observable on platforms like GitHub. One of the defining features of GitHub is transparency [19]; developers rely on signals [63] displayed on GitHub repository and user pages (e.g., counts of stars and followers, repository badges) to form impressions about each other and their work [48]. Our approach shows how new signals to display these otherwise unobservable ecosystem-level qualities, such as a project's position in the ecosystem interdependency network or its level of organizational support, could be developed.\n\nIn turn, displaying these signals may help developers identify sustainable projects and projects at risk, steer developers and organizations towards contributing to central projects most in need of support, and overall help nudge the ecosystem towards more efficient allocation of contributor effort. Recall the Open SSL and leftpad examples discussed in the introduction. In these and other similar cases, arguably the centrality of these projects for the health of the rest of the ecosystem was not as clear before their respective prominent incidents as it has become after the fact. Newly developed signals, such as the ones our approach can inform, could have been used to reduce the information asymmetry. Therefore, it is not surprising that recently both GitHub and PyPI have started displaying information on dependents and dependencies for some OSS packages hosted or published there. We expect other signals will become available in the future.\n\nOur results may also be actionable for OSS practitioners. If future research confirms that there is a causal relationship, not just the correlation we demonstrated in our work, between the variables we identified and a project's risk of becoming inactive, that may provide means for suggesting how to extend the life of projects that become inactive without being feature complete.\n\nStill, we emphasize that the response variable in this study (dormancy, or low development activity) is not always indicative of project abandonment, and it therefore requires careful interpretation and should be adjusted to project context. While all abandoned projects are dormant, not all dormant projects are abandoned. For example, utility libraries with a well defined scope do not require further maintenance and thus will also be rendered as dormant, even though they are not abandoned. One interviewee used SMTPlib to illustrate the issue. This library implements a standard unchanged for 30 years and does not require maintenance. This claim is supported by prior research on reasons for OSS project failure, indicating that 11% of seemingly abandoned projects are just considered feature complete by their authors [10]. This suggests that when interpreting sustainability indicators, one should adjust at least to project class and size. E.g., existing dependent projects early in the lifecycle might indicate a chipoff from another project, feature complete from birth, which is not a negative sustainability indicator. Likely, a dormant upstream project might not be an issue if it is feature complete, but can be a problem if it requires constant maintenance. In practice, it means that the presented survival model does not fully apply to feature complete projects and one should consider qualitative methods instead.\n\nFuture research should try to further distinguish feature complete projects from abandoned ones. Suggested ways to determine if a dormant project is complete rather than abandoned may include looking at: maintainers' activity outside the project, nondevelopment activity (mailing lists, issue trackers, and community forum discussions), and dynamics of the project user base; some anecdotal evidence also suggests that projects abandoned by their maintainers continue to be used by existing adopters, but are rarely adopted by new projects, in contrast to feature complete projects, which continue to be adopted as dependencies in new projects.\n\n\nCONCLUSIONS\n\nPrior work revealed a number of project characteristics related to the sustainability of open-source projects. In this mixed-methods study, we have extended those results to include ecosystem factors. We theorized about expected effects and used survival analysis on a large set of PyPI projects hosted on GitHub, modeling risk of dormancy early in their life cycle and later on. We then triangulated the models through interviews with project maintainers, and modeled interaction effects informed by the qualitative analysis.\n\nOur work shows the real impact ecosystem context has in how software is developed, and suggests that it brings new risks as well as clear benefits. As open-source projects are increasingly incorporated into software supply chains, organizations need to improve their ability to evaluate the risks they are taking on and learn strategies for mitigating them. It is also becoming clear, for example in our results about the effects of corporate participation, that it can have a destabilizing effect as well as simply providing more resources. In addition to becoming more informed consumers of open-source software, commercial firms should carefully consider the impact that inconsistent participation can have on the ecosystem.\n\nDue to the size of our dataset, not all new features suggested by the interviewees were practical to test. Remaining, untested effects, left open for future work, include: issue response time, issue discussions, quality of commit messages, quality of documentation, automated tests, and use of CI. Future research should generalize and contrast our results on different ecosystems, better account for feature complete projects, and test the remaining features suggested by interviewees. For now, we note all these issues as potential threats to validity.\n\nFigure 1 :\n1Number of new PyPI packages per month.\n\nFigure 2 :\n2Overall probability of survival across our sample.\n\n\nLog number of commits 3.24 (0.02) * * * 7675.27 * * * 1.77 (0.01) * * * 3317.06 * * * 1.84 (0.01) * * * 3326.17 * * * Log number of contributors 0.00 (0.08) * * * 8276.50 * * * 0.19 (0.05) * * * 1374.33 * * * 0.19 (0.05) * * * 1372.20 * * * Log number of non-developer issues 1.91 (0.07) * * * 79.22 * * * 0.55 (0.04) * * * 222.92 * * * 1.07 (0.11) 222.93 * * * Social ties 1.12 (0.03) * * * 16.42 * * * 1.09 (0.02) * * * 17.58 * * * 1.09 (0.02) * * * 18.30 * * * Number of downstream projects 1.60 (0.04) * * * 178.37 * * * 0.89 (0.02) * * * 68.05 * * * 0.89 (0.02) * * * 68.08 * * * Number of upstream dependencies 1.25 (0.01) * * * 380.27 * * * 0.95 (0.01) * * * 68.25 * * * 0.95 (0.01) * * * 19.05 * * * Some upstreams are dormant 0.69 (0.05) * * * 50.39 * * * 1.11 (0.03) * * * 13.23 * * * 1.11 (0.03) * * * 13.00 * * * Katz centrality 1.12 (0.02) * * * 35.29 * * * 1.27 (0.02) * * * 221.55 * * * 1.26 (0.02) * * * 171.36 * * * High university involvement (>10%) 1.08 (0.06) 1.32 0.75 (0.05) * * * 30.88 * * * 0.76 (0.05) * * * 30.35 * * * High commercial involvement (>10%) 1.51 (0.04) * * * 125.22 * * * 1.15 (0.03) * * * 24.51 * * * 1.15 (0.03) * * * 23.47 * * * Had a backporting release in the last 12 months 0.61 (0.12) * * * 16.63 * * * 0.97 (0.07) 0.21 0.97 (0.07) 0.17 Strong copy-left license (vs none) 0.62 (0.06) * * * 78.42 * * * 0.83 (0.04) * * * 35.83 * * * 0.84 (0.04) * * * 34.54 * * * Weak copy-left license (vs none) 0.69 (0.10) * * * 0.75 (0.07) * * * 0.75 (0.07) * * * Non-copy-left license (vs none) 0.82 (0.04) * * * 0.98 (0.03) 0.98 (0.03) Hosted under organizational account on GitHub 0.55 (0.04) * * * 259.95 * * * 0.77 (0.03) * * * 84.62 * * * 0.78 (0.03) * * * 79.91 * * * Number of upstream dependencies, squared 1.00 (0.00) 0.08 Log num. commits \u00d7 log num. issues 0.81 (0.03) * * * 43.60 * * * Log num. issues \u00d7 log num. contributors 0.91 (0.11) 0.75 * * * p < 0.001, * * p < 0.01, * p < 0.05\n\nTable\n\n\nTable 2 :\n2Regression models for early-stage survival and later-stage survival.Early-stage survival \nLater-stage survival \nresponse: dormant = TRUE \nresponse: dormant = TRUE \nPseudo R 2 = 43.6% \nR 2 = 17% \nR 2 = 17.2% \n\nCoeffs (Err.) LR Chisq Coeffs (Err.) LR Chisq Coeffs (Err.) \nLR Chisq \n\n\nAlready in 2015, less than 3% of respondents to a Black Duck Survey reported they do not use OSS in any way, https://bit.ly/2NgQNRH (slide 9).2 Node.js Package Manager, https://www.npmjs.com 3 Python Package Index, https://pypi.python.org4 Comprehensive R Archive Network, https://cran.r-project.org\nAvailable online at https://zenodo.org/record/1297925. 6 https://octoverse.github.com/, retrieved February 2018\nhttps://wiki.python.org/moin/PyPIJSON 8 E.g., https://github.com/micropython/micropython-lib, 220 projects\nhttps://www.blackducksoftware.com/2016-future-of-open-source, slide 26\nACKNOWLEDGEMENTSThe authors kindly acknowledge support from NSF awards 1633083 and 1546393, an award from the Alfred P. Sloan Foundation, and support from the Google Open Source Program Office.\nWhy do developers use trivial packages? An empirical case study on npm. Rabe Abdalkareem, Olivier Nourry, Sultan Wehaibi, Suhaib Mujahid, Emad Shihab, Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). Joint Meeting on Foundations of Software Engineering (ESEC/FSE)Rabe Abdalkareem, Olivier Nourry, Sultan Wehaibi, Suhaib Mujahid, and Emad Shihab. 2017. Why do developers use trivial packages? An empirical case study on npm. In Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE).\n\nA novel approach for estimating truck factors. Guilherme Avelino, Leonardo Passos, Andre Hora, Marco Tulio Valente, Proc. International Conference on Program Comprehension (ICPC). International Conference on Program Comprehension (ICPC)IEEEGuilherme Avelino, Leonardo Passos, Andre Hora, and Marco Tulio Valente. 2016. A novel approach for estimating truck factors. In Proc. International Conference on Program Comprehension (ICPC). IEEE, 1\u015b10.\n\nEcosystems in GitHub and a method for ecosystem identification using reference coupling. Kelly Blincoe, Francis Harrison, Daniela Damian, Proc. International Conference on Mining Software Repositories (MSR). International Conference on Mining Software Repositories (MSR)IEEEKelly Blincoe, Francis Harrison, and Daniela Damian. 2015. Ecosystems in GitHub and a method for ecosystem identification using reference coupling. In Proc. International Conference on Mining Software Repositories (MSR). IEEE, 202\u015b207.\n\nThe future of supply chain information systems: The open source ecosystem. C Bradley, Boehmke, Benjamin T Hazen, Global Journal of Flexible Systems Management. 18Bradley C Boehmke and Benjamin T Hazen. 2017. The future of supply chain information systems: The open source ecosystem. Global Journal of Flexible Systems Management 18, 2 (2017), 163\u015b168.\n\nHow to break an API: cost negotiation and community values in three software ecosystems. Christopher Bogart, Christian K\u00e4stner, James Herbsleb, Ferdian Thung, Proc. International Symposium on Foundations of Software Engineering (FSE). International Symposium on Foundations of Software Engineering (FSE)ACMChristopher Bogart, Christian K\u00e4stner, James Herbsleb, and Ferdian Thung. 2016. How to break an API: cost negotiation and community values in three soft- ware ecosystems. In Proc. International Symposium on Foundations of Software Engineering (FSE). ACM, 109\u015b120.\n\nFrom software product lines to software ecosystems. Proc. International Software Product Line Conference (SPLC). 111\u015b119. International Software Product Line Conference (SPLC). 111\u015b119Jan Bosch. 2009. From software product lines to software ecosystems. In Proc. International Software Product Line Conference (SPLC). 111\u015b119.\n\nCharacteristics of open source projects. Andrea Capiluppi, Patricia Lago, Maurizio Morisio, Proc. European Conference on Software Maintenance and Reengineering (CSMR). European Conference on Software Maintenance and Reengineering (CSMR)IEEEAndrea Capiluppi, Patricia Lago, and Maurizio Morisio. 2003. Characteristics of open source projects. In Proc. European Conference on Software Maintenance and Reengineering (CSMR). IEEE, 317\u015b327.\n\nDeveloper onboarding in GitHub: the role of prior social links and language experience. Casey Casalnuovo, Bogdan Vasilescu, Premkumar Devanbu, Vladimir Filkov, Proc. Joint Meeting on Foundations of Software Engineering. Joint Meeting on Foundations of Software EngineeringACMESEC/FSECasey Casalnuovo, Bogdan Vasilescu, Premkumar Devanbu, and Vladimir Filkov. 2015. Developer onboarding in GitHub: the role of prior social links and lan- guage experience. In Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). ACM, 817\u015b828.\n\nDilemmas within commercial involvement in open source software. Malgorzata Ciesielska, Ann Westenholz, Journal of Organizational Change Management. 29Malgorzata Ciesielska and Ann Westenholz. 2016. Dilemmas within commer- cial involvement in open source software. Journal of Organizational Change Management 29, 3 (2016), 344\u015b360.\n\nWhy modern open source projects fail. Jailton Coelho, Marco Tulio Valente, Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). Joint Meeting on Foundations of Software Engineering (ESEC/FSE)Jailton Coelho and Marco Tulio Valente. 2017. Why modern open source projects fail. In Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE).\n\n. Acm, ACM, 186\u015b196.\n\nApplied multiple regression/correlation analysis for the behavioral sciences. Jacob Cohen, Patricia Cohen, G Stephen, Leona S West, Aiken, RoutledgeJacob Cohen, Patricia Cohen, Stephen G West, and Leona S Aiken. 2013. Applied multiple regression/correlation analysis for the behavioral sciences. Routledge.\n\nFrom planning to mature: On the success of open source projects. Stefano Comino, M Fabio, Maria Laura Manenti, Parisi, Research Policy. 36Stefano Comino, Fabio M Manenti, and Maria Laura Parisi. 2007. From planning to mature: On the success of open source projects. Research Policy 36, 10 (2007), 1575\u015b1586.\n\nAn empirical comparison of developer retention in the RubyGems and npm software ecosystems. Eleni Constantinou, Tom Mens, Innovations in Systems and Software Engineering. 13Eleni Constantinou and Tom Mens. 2017. An empirical comparison of developer retention in the RubyGems and npm software ecosystems. Innovations in Systems and Software Engineering 13, 2-3 (2017), 101\u015b115.\n\nAssessing the bus factor of Git repositories. Valerio Cosentino, Javier Luis C\u00e1novas, Jordi Izquierdo, Cabot, Proc. International Conference on Software Analysis, Evolution and Reengineering (SANER). International Conference on Software Analysis, Evolution and Reengineering (SANER)IEEEValerio Cosentino, Javier Luis C\u00e1novas Izquierdo, and Jordi Cabot. 2015. Assessing the bus factor of Git repositories. In Proc. International Conference on Software Analysis, Evolution and Reengineering (SANER). IEEE, 499\u015b503.\n\nAnalysis of survival data. Roxbee David, David Cox, Oakes, CRC Press21David Roxbee Cox and David Oakes. 1984. Analysis of survival data. Vol. 21. CRC Press.\n\nW John, David J Creswell, Creswell, Research design: Qualitative, quantitative, and mixed methods approaches. third ed.). Sage publications. 203\u015b224 pagesJohn W Creswell and David J Creswell. 2017. Research design: Qualitative, quan- titative, and mixed methods approaches (third ed.). Sage publications. 203\u015b224 pages.\n\nInformation systems success in free and open source software development: Theory and measures. Kevin Crowston, James Howison, Hala Annabi, Software Process: Improvement and Practice. 11Kevin Crowston, James Howison, and Hala Annabi. 2006. Information systems success in free and open source software development: Theory and measures. Software Process: Improvement and Practice 11, 2 (2006), 123\u015b148.\n\nFree/Libre open-source software development: What we know and what we do not know. Kevin Crowston, Kangning Wei, James Howison, Andrea Wiggins, ACM Computing Surveys (CSUR). 447Kevin Crowston, Kangning Wei, James Howison, and Andrea Wiggins. 2012. Free/Libre open-source software development: What we know and what we do not know. ACM Computing Surveys (CSUR) 44, 2 (2012), 7.\n\nSocial coding in GitHub: transparency and collaboration in an open software repository. Laura Dabbish, Colleen Stuart, Jason Tsay, Jim Herbsleb, Proc. ACM 2012 Conference on Computer Supported Cooperative Work. ACM 2012 Conference on Computer Supported Cooperative WorkCSCWLaura Dabbish, Colleen Stuart, Jason Tsay, and Jim Herbsleb. 2012. Social coding in GitHub: transparency and collaboration in an open software repository. In Proc. ACM 2012 Conference on Computer Supported Cooperative Work (CSCW).\n\nEstimating the economic contribution of open source software to the European economy. Carlo Daffara, The First Openforum Academy Conference Proceedings. Carlo Daffara. 2012. Estimating the economic contribution of open source soft- ware to the European economy. In The First Openforum Academy Conference Proceedings.\n\nAn empirical comparison of dependency network evolution in seven software packaging ecosystems. Alexandre Decan, Tom Mens, Philippe Grosjean, Empirical Software Engineering. Alexandre Decan, Tom Mens, and Philippe Grosjean. 2018. An empirical compar- ison of dependency network evolution in seven software packaging ecosystems. Empirical Software Engineering (2018).\n\nWho is an open source software developer?. J Bert, Debra Dempsey, Paul Weiss, Jane Jones, Greenberg, Commun. ACM. 45Bert J Dempsey, Debra Weiss, Paul Jones, and Jane Greenberg. 2002. Who is an open source software developer? Commun. ACM 45, 2 (2002), 67\u015b72.\n\nSocialization in an open source software community: A socio-technical analysis. Nicolas Ducheneaut, Computer Supported Cooperative Work (CSCW). 14Nicolas Ducheneaut. 2005. Socialization in an open source software community: A socio-technical analysis. Computer Supported Cooperative Work (CSCW) 14, 4 (2005), 323\u015b368.\n\nThe matter of heartbleed. Zakir Durumeric, James Kasten, David Adrian, Alex Halderman, Michael Bailey, Frank Li, Nicolas Weaver, Johanna Amann, Jethro Beekman, Mathias Payer, Proc. 2014 Conference on Internet Measurement Conference. 2014 Conference on Internet Measurement ConferenceACMZakir Durumeric, James Kasten, David Adrian, J Alex Halderman, Michael Bailey, Frank Li, Nicolas Weaver, Johanna Amann, Jethro Beekman, Mathias Payer, et al. 2014. The matter of heartbleed. In Proc. 2014 Conference on Internet Measurement Conference. ACM, 475\u015b488.\n\nSelecting empirical methods for software engineering research. Steve Easterbrook, Janice Singer, Margaret-Anne Storey, Daniela Damian, Guide to advanced empirical software engineering. SpringerSteve Easterbrook, Janice Singer, Margaret-Anne Storey, and Daniela Damian. 2008. Selecting empirical methods for software engineering research. In Guide to advanced empirical software engineering. Springer, 285\u015b311.\n\nRoads and Bridges: The Unseen Labor Behind Our Digital Infrastructure. Nadia Eghbal , Ford FoundationNadia Eghbal. 2016. Roads and Bridges: The Unseen Labor Behind Our Digital Infrastructure. Ford Foundation.\n\nImpact of developer turnover on quality in open-source software. Matthieu Foucault, Marc Palyart, Xavier Blanc, C Gail, Jean-R\u00e9my Murphy, Falleri, Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). Joint Meeting on Foundations of Software Engineering (ESEC/FSE)ACMMatthieu Foucault, Marc Palyart, Xavier Blanc, Gail C Murphy, and Jean-R\u00e9my Falleri. 2015. Impact of developer turnover on quality in open-source software. In Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). ACM, 829\u015b841.\n\nOpen source software ecosystems: A Systematic mapping. Oscar Franco-Bedoya, David Ameller, Dolors Costal, Xavier Franch, Information and Software Technology. 91Oscar Franco-Bedoya, David Ameller, Dolors Costal, and Xavier Franch. 2017. Open source software ecosystems: A Systematic mapping. Information and Software Technology 91 (2017), 160\u015b185.\n\nData analysis using regression and multilevel/hierarchical models. Andrew Gelman, Jennifer Hill, Cambridge university pressAndrew Gelman and Jennifer Hill. 2006. Data analysis using regression and multilevel/hierarchical models. Cambridge university press.\n\nDeveloper initiation and social interactions in OSS: A case study of the Apache Software Foundation. Mohammad Gharehyazie, Daryl Posnett, Bogdan Vasilescu, Vladimir Filkov, Empirical Software Engineering. 20Mohammad Gharehyazie, Daryl Posnett, Bogdan Vasilescu, and Vladimir Filkov. 2015. Developer initiation and social interactions in OSS: A case study of the Apache Software Foundation. Empirical Software Engineering 20, 5 (2015), 1318\u015b 1353.\n\nEvidence for the Pareto principle in Open Source Software Activity. Mathieu Goeminne, Tom Mens, Proc. International Workshop on Model-Driven Software Migration (MDSM). International Workshop on Model-Driven Software Migration (MDSM)74Mathieu Goeminne and Tom Mens. 2011. Evidence for the Pareto principle in Open Source Software Activity. In Proc. International Workshop on Model-Driven Software Migration (MDSM). 74.\n\nAn exploratory study of the pull-based software development model. Georgios Gousios, Martin Pinzger, Arie Van Deursen, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)ACMGeorgios Gousios, Martin Pinzger, and Arie van Deursen. 2014. An exploratory study of the pull-based software development model. In Proc. International Con- ference on Software Engineering (ICSE). ACM, 345\u015b355.\n\nM Patricia, Terry M Grambsch, Therneau, Proportional hazards tests and diagnostics based on weighted residuals. 81Patricia M Grambsch and Terry M Therneau. 1994. Proportional hazards tests and diagnostics based on weighted residuals. Biometrika 81, 3 (1994), 515\u015b526.\n\nDigital dark matter and the economic contribution of Apache. Shane Greenstein, Frank Nagle, Research Policy. 43Shane Greenstein and Frank Nagle. 2014. Digital dark matter and the economic contribution of Apache. Research Policy 43, 4 (2014), 623\u015b631.\n\nMotivation of software developers in Open Source projects: an Internet-based survey of contributors to the Linux kernel. Guido Hertel, Sven Niedner, Stefanie Herrmann, Research policy. 32Guido Hertel, Sven Niedner, and Stefanie Herrmann. 2003. Motivation of software developers in Open Source projects: an Internet-based survey of contributors to the Linux kernel. Research policy 32, 7 (2003), 1159\u015b1177.\n\nA sense of community: A research agenda for software ecosystems. Slinger Jansen, Anthony Finkelstein, Sjaak Brinkkemper, Proc. International Conference on Software Engineering (ICSE) -Companion. International Conference on Software Engineering (ICSE) -CompanionIEEESlinger Jansen, Anthony Finkelstein, and Sjaak Brinkkemper. 2009. A sense of community: A research agenda for software ecosystems. In Proc. International Conference on Software Engineering (ICSE) -Companion. IEEE, 187\u015b190.\n\nSurvival analysis. Unpublished manuscript. P Stephen, Jenkins, Colchester, UKInstitute for Social and Economic Research, University of EssexStephen P Jenkins. 2005. Survival analysis. Unpublished manuscript, Institute for Social and Economic Research, University of Essex, Colchester, UK (2005).\n\nThe onion patch: migration in open source ecosystems. Corey Jergensen, Anita Sarma, Patrick Wagstrom, Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). Joint Meeting on Foundations of Software Engineering (ESEC/FSE)ACMCorey Jergensen, Anita Sarma, and Patrick Wagstrom. 2011. The onion patch: migration in open source ecosystems. In Proc. Joint Meeting on Foundations of Software Engineering (ESEC/FSE). ACM, 70\u015b80.\n\nA new status index derived from sociometric analysis. Psychometrika. Leo Katz, 18Leo Katz. 1953. A new status index derived from sociometric analysis. Psychome- trika 18, 1 (1953), 39\u015b43.\n\nIs it all lost? A study of inactive open source projects. Jymit Khondhu, Andrea Capiluppi, Klaas-Jan Stol, Proc. IFIP International Conference on Open Source Systems. IFIP International Conference on Open Source SystemsSpringerJymit Khondhu, Andrea Capiluppi, and Klaas-Jan Stol. 2013. Is it all lost? A study of inactive open source projects. In Proc. IFIP International Conference on Open Source Systems. Springer, 61\u015b79.\n\nStructure and evolution of package dependency networks. Riivo Kikas, Georgios Gousios, Marlon Dumas, Dietmar Pfahl, Proc. International Conference on Mining Software Repositories (MSR). International Conference on Mining Software Repositories (MSR)IEEERiivo Kikas, Georgios Gousios, Marlon Dumas, and Dietmar Pfahl. 2017. Structure and evolution of package dependency networks. In Proc. International Conference on Mining Software Repositories (MSR). IEEE, 102\u015b112.\n\nEffort, co-operation and co-ordination in an open source software project: GNOME. Stefan Koch, Georg Schneider, Information Systems Journal. 12Stefan Koch and Georg Schneider. 2002. Effort, co-operation and co-ordination in an open source software project: GNOME. Information Systems Journal 12, 1 (2002), 27\u015b42.\n\nWhy Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects. R Karim, Robert G Lakhani, Wolf, Karim R. Lakhani and Robert G. Wolf. 2005. Why Hackers Do What They Do: Understanding Motivation and Effort in Free/Open Source Software Projects.\n\nDeveloper turnover in global, industrial Open Source projects: Insights from applying survival analysis. Bin Lin, Gregorio Robles, Alexander Serebrenik, Proc. International Conference on Global Software Engineering (ICGSE). International Conference on Global Software Engineering (ICGSE)IEEEBin Lin, Gregorio Robles, and Alexander Serebrenik. 2017. Developer turnover in global, industrial Open Source projects: Insights from applying survival analysis. In Proc. International Conference on Global Software Engineering (ICGSE). IEEE, 66\u015b75.\n\nRecovering interproject dependencies in software ecosystems. Mircea Lungu, Romain Robbes, Michele Lanza, Proc. International Conference on Automated Software Engineering (ASE). International Conference on Automated Software Engineering (ASE)ACMMircea Lungu, Romain Robbes, and Michele Lanza. 2010. Recovering inter- project dependencies in software ecosystems. In Proc. International Conference on Automated Software Engineering (ASE). ACM, 309\u015b312.\n\nReverse engineering software ecosystems. Ph.D. Dissertation. Universit\u00e0 della Svizzera italiana. F Mircea, Lungu, Mircea F Lungu. 2009. Reverse engineering software ecosystems. Ph.D. Dissertation. Universit\u00e0 della Svizzera italiana.\n\nSoftware ecosystems\u015b A systematic literature review. Konstantinos Manikas, Klaus Marius Hansen, Journal of Systems and Software. 86Konstantinos Manikas and Klaus Marius Hansen. 2013. Software ecosystems\u015b A systematic literature review. Journal of Systems and Software 86, 5 (2013), 1294\u015b1306.\n\nImpression formation in online peer production: activity traces and personal profiles in GitHub. Jennifer Marlow, Laura Dabbish, Jim Herbsleb, Proc. 2013 Conference on Computer Supported Cooperative Work. 2013 Conference on Computer Supported Cooperative WorkACMJennifer Marlow, Laura Dabbish, and Jim Herbsleb. 2013. Impression formation in online peer production: activity traces and personal profiles in GitHub. In Proc. 2013 Conference on Computer Supported Cooperative Work (CSCW). ACM, 117\u015b128.\n\n. G Rupert, MillerJr, Survival analysis. 66John Wiley & SonsRupert G Miller Jr. 2011. Survival analysis. Vol. 66. John Wiley & Sons.\n\nTwo case studies of open source software development: Apache and Mozilla. Audris Mockus, T Roy, James D Fielding, Herbsleb, ACM Transactions on Software Engineering and Methodology (TOSEM). 11Audris Mockus, Roy T Fielding, and James D Herbsleb. 2002. Two case studies of open source software development: Apache and Mozilla. ACM Transactions on Software Engineering and Methodology (TOSEM) 11, 3 (2002), 309\u015b346.\n\nEvolution patterns of open-source software systems and communities. Kumiyo Nakakoji, Yasuhiro Yamamoto, Yoshiyuki Nishinaka, Kouichi Kishida, Yunwen Ye, Proc. International Workshop on Principles of Software Evolution (IWPSE). International Workshop on Principles of Software Evolution (IWPSE)ACMKumiyo Nakakoji, Yasuhiro Yamamoto, Yoshiyuki Nishinaka, Kouichi Kishida, and Yunwen Ye. 2002. Evolution patterns of open-source software systems and communities. In Proc. International Workshop on Principles of Software Evolution (IWPSE). ACM, 76\u015b85.\n\nRevisiting Turnover-Induced Knowledge Loss in Software Projects. Mathieu Nassif, P Martin, Robillard, Proc. International Conference on Software Maintenance and Evolution (ICSME). International Conference on Software Maintenance and Evolution (ICSME)IEEEMathieu Nassif and Martin P Robillard. 2017. Revisiting Turnover-Induced Knowledge Loss in Software Projects. In Proc. International Conference on Software Maintenance and Evolution (ICSME). IEEE, 261\u015b272.\n\nSurvival analysis in open development projects. Felipe Ortega, Daniel Izquierdo-Cortazar, Proc. ICSE Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development. ICSE Workshop on Emerging Trends in Free/Libre/Open Source Software Research and DevelopmentIEEEFelipe Ortega and Daniel Izquierdo-Cortazar. 2009. Survival analysis in open de- velopment projects. In Proc. ICSE Workshop on Emerging Trends in Free/Libre/Open Source Software Research and Development. IEEE, 7\u015b12.\n\nHandbook of statistical distributions. K Jagdish, C H Patel, Donald Bruce Kapadia, Owen, New YorkTechnical ReportJagdish K Patel, CH Kapadia, Donald Bruce Owen, and JK Patel. 1976. Handbook of statistical distributions. Technical Report. M. Dekker New York.\n\nCreating a shared understanding of testing culture on a social coding site. Raphael Pham, Leif Singer, Olga Liskin, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)IEEE112121Fernando Figueira Filho, and Kurt SchneiderRaphael Pham, Leif Singer, Olga Liskin, Fernando Figueira Filho, and Kurt Schnei- der. 2013. Creating a shared understanding of testing culture on a social coding site. In Proc. International Conference on Software Engineering (ICSE). IEEE, 112\u015b 121.\n\nThe cathedral and the bazaar. Knowledge. Eric Raymond , Technology & Policy. 12Eric Raymond. 1999. The cathedral and the bazaar. Knowledge, Technology & Policy 12, 3 (1999), 23\u015b49.\n\nQuantifying and mitigating turnover-induced knowledge loss: case studies of Chrome and a project at Avaya. C Peter, Yue Rigby, Cai Zhu, M Samuel, Audris Donadelli, Mockus, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)ACMPeter C Rigby, Yue Cai Zhu, Samuel M Donadelli, and Audris Mockus. 2016. Quantifying and mitigating turnover-induced knowledge loss: case studies of Chrome and a project at Avaya. In Proc. International Conference on Software Engineering (ICSE). ACM, 1006\u015b1016.\n\nContributor turnover in libre software projects. Gregorio Robles, Jesus M Gonzalez-Barahona, Proc. IFIP International Conference on Open Source Systems. IFIP International Conference on Open Source SystemsSpringerGregorio Robles and Jesus M Gonzalez-Barahona. 2006. Contributor turnover in libre software projects. In Proc. IFIP International Conference on Open Source Systems. Springer, 273\u015b286.\n\nSurvival analysis on the duration of open source projects. Ioannis Samoladas, Lefteris Angelis, and Ioannis Stamelos. 52Ioannis Samoladas, Lefteris Angelis, and Ioannis Stamelos. 2010. Survival analysis on the duration of open source projects. Information and Software Technology 52, 9 (2010), 902\u015b922.\n\nSuccess and abandonment in open source commons: Selected findings from an empirical study of sourceforge.net projects. Charles Schweik, Bob English, Qimti Paienjton, Sandy Haire, Proc. Workshop on Building Sustainable Open Source Communities (OSCOMM). Workshop on Building Sustainable Open Source Communities (OSCOMM)Charles Schweik, Bob English, Qimti Paienjton, and Sandy Haire. 2010. Success and abandonment in open source commons: Selected findings from an empirical study of sourceforge.net projects. In Proc. Workshop on Building Sustainable Open Source Communities (OSCOMM).\n\nNetwork effects: The influence of structural capital on open source project success. Param Vir, Yong Singh, Vijay Tan, Mookerjee, MIS Quarterly. Param Vir Singh, Yong Tan, and Vijay Mookerjee. 2011. Network effects: The influence of structural capital on open source project success. MIS Quarterly (2011), 813\u015b829.\n\nUsing time dependent covariates and time dependent coefficients in the Cox model. Terry Therneau, Cindy Crowson, Elizabeth Atkinson, Survival Vignettes. Terry Therneau, Cindy Crowson, and Elizabeth Atkinson. 2017. Using time dependent covariates and time dependent coefficients in the Cox model. Survival Vignettes (2017).\n\nAdding sparkle to social coding: an empirical study of repository badges in the npm ecosystem. Shurui Asher Trockman, Christian Zhou, Bogdan K\u00e4stner, Vasilescu, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)Asher Trockman, Shurui Zhou, Christian K\u00e4stner, and Bogdan Vasilescu. 2018. Adding sparkle to social coding: an empirical study of repository badges in the npm ecosystem. In Proc. International Conference on Software Engineering (ICSE).\n\n. Acm, ACM, 511\u015b522.\n\nLet's talk about it: evaluating contributions through discussion in GitHub. Jason Tsay, Laura Dabbish, James Herbsleb, Proc. International Symposium on Foundations of Software Engineering (FSE). International Symposium on Foundations of Software Engineering (FSE)ACMJason Tsay, Laura Dabbish, and James Herbsleb. 2014. Let's talk about it: evaluat- ing contributions through discussion in GitHub. In Proc. International Symposium on Foundations of Software Engineering (FSE). ACM, 144\u015b154.\n\nEvolution in open source software: A case study. Qiang Tu, Proc. International Conference on Software Maintenance and Evolution (ICSME). International Conference on Software Maintenance and Evolution (ICSME)IEEEQiang Tu et al. 2000. Evolution in open source software: A case study. In Proc. International Conference on Software Maintenance and Evolution (ICSME). IEEE, 131\u015b142.\n\nThe sky is not the limit: multitasking across GitHub projects. Bogdan Vasilescu, Kelly Blincoe, Qi Xuan, Casey Casalnuovo, Daniela Damian, Premkumar Devanbu, Vladimir Filkov, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)IEEEBogdan Vasilescu, Kelly Blincoe, Qi Xuan, Casey Casalnuovo, Daniela Damian, Premkumar Devanbu, and Vladimir Filkov. 2016. The sky is not the limit: mul- titasking across GitHub projects. In Proc. International Conference on Software Engineering (ICSE). IEEE, 994\u015b1005.\n\nPerceptions of diversity on GitHub: A user survey. Bogdan Vasilescu, Vladimir Filkov, Alexander Serebrenik, Proc. International Workshop on Cooperative and Human Aspects of Software Engineering. International Workshop on Cooperative and Human Aspects of Software EngineeringIEEEBogdan Vasilescu, Vladimir Filkov, and Alexander Serebrenik. 2015. Percep- tions of diversity on GitHub: A user survey. In Proc. International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE). IEEE, 50\u015b56.\n\nOn the variation and specialisation of workload\u00d0a case study of the Gnome ecosystem community. Bogdan Vasilescu, Alexander Serebrenik, Mathieu Goeminne, Tom Mens, Empirical Software Engineering. 19Bogdan Vasilescu, Alexander Serebrenik, Mathieu Goeminne, and Tom Mens. 2014. On the variation and specialisation of workload\u00d0a case study of the Gnome ecosystem community. Empirical Software Engineering 19, 4 (2014), 955\u015b1008.\n\nThe Babel of software development: Linguistic diversity in Open Source. Bogdan Vasilescu, Alexander Serebrenik, G J Mark, Van Den, Brand, Proc. International Conference on Social Informatics (SocInfo). International Conference on Social Informatics (SocInfo)SpringerBogdan Vasilescu, Alexander Serebrenik, and Mark GJ van den Brand. 2013. The Babel of software development: Linguistic diversity in Open Source. In Proc. International Conference on Social Informatics (SocInfo). Springer, 391\u015b404.\n\nCommunity, joining, and specialization in open source software innovation: a case study. Georg Von Krogh, Sebastian Spaeth, Karim R Lakhani, Research Policy. 32Georg Von Krogh, Sebastian Spaeth, and Karim R Lakhani. 2003. Community, joining, and specialization in open source software innovation: a case study. Research Policy 32, 7 (2003), 1217\u015b1241.\n\nSurvival factors for Free Open Source Software projects: A multi-stage perspective. Jing Wang, European Management Journal. 30Jing Wang. 2012. Survival factors for Free Open Source Software projects: A multi-stage perspective. European Management Journal 30, 4 (2012), 352\u015b371.\n\nMining software code repositories and bug databases using survival analysis models. Michael Wedel, Uwe Jensen, Peter G\u00f6hner, Proc. International Symposium on Empirical Software Engineering and Measurement (ESEM). International Symposium on Empirical Software Engineering and Measurement (ESEM)ACMMichael Wedel, Uwe Jensen, and Peter G\u00f6hner. 2008. Mining software code repos- itories and bug databases using survival analysis models. In Proc. International Symposium on Empirical Software Engineering and Measurement (ESEM). ACM, 282\u015b284.\n\nRevisiting the applicability of the pareto principle to core development teams in open source software projects. Kazuhiro Yamashita, Shane Mcintosh, Yasutaka Kamei, Ahmed E Hassan, Naoyasu Ubayashi, Proc. International Workshop on Principles of Software Evolution (IWPSE). International Workshop on Principles of Software Evolution (IWPSE)ACMKazuhiro Yamashita, Shane McIntosh, Yasutaka Kamei, Ahmed E Hassan, and Naoyasu Ubayashi. 2015. Revisiting the applicability of the pareto principle to core development teams in open source software projects. In Proc. International Workshop on Principles of Software Evolution (IWPSE). ACM, 46\u015b55.\n\nAn empirical study of volunteer members' perceived turnover in open source software projects. Yiqing Yu, Alexander Benlian, Thomas Hess, Proc. Hawaii International Conference on System Science (HICSS). Hawaii International Conference on System Science (HICSS)IEEEYiqing Yu, Alexander Benlian, and Thomas Hess. 2012. An empirical study of volunteer members' perceived turnover in open source software projects. In Proc. Hawaii International Conference on System Science (HICSS). IEEE, 3396\u015b3405.\n\nWhat make long term contributors: Willingness and opportunity in OSS community. Minghui Zhou, Audris Mockus, Proc. International Conference on Software Engineering (ICSE). International Conference on Software Engineering (ICSE)IEEEMinghui Zhou and Audris Mockus. 2012. What make long term contributors: Willingness and opportunity in OSS community. In Proc. International Conference on Software Engineering (ICSE). IEEE, 518\u015b528.\n\nInflow and retention in OSS communities with commercial involvement: A case study of three hybrid projects. Minghui Zhou, Audris Mockus, Xiujuan Ma, Lu Zhang, Hong Mei, ACM Transactions on Software Engineering and Methodology. 2513TOSEM)Minghui Zhou, Audris Mockus, Xiujuan Ma, Lu Zhang, and Hong Mei. 2016. Inflow and retention in OSS communities with commercial involvement: A case study of three hybrid projects. ACM Transactions on Software Engineering and Methodology (TOSEM) 25, 2 (2016), 13.\n", "annotations": {"author": "[{\"end\":159,\"start\":114},{\"end\":209,\"start\":160},{\"end\":257,\"start\":210}]", "publisher": null, "author_last_name": "[{\"end\":126,\"start\":120},{\"end\":176,\"start\":167},{\"end\":224,\"start\":216}]", "author_first_name": "[{\"end\":119,\"start\":114},{\"end\":166,\"start\":160},{\"end\":215,\"start\":210}]", "author_affiliation": "[{\"end\":158,\"start\":128},{\"end\":208,\"start\":178},{\"end\":256,\"start\":226}]", "title": "[{\"end\":111,\"start\":1},{\"end\":368,\"start\":258}]", "venue": null, "abstract": "[{\"end\":2134,\"start\":873}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2232,\"start\":2231},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":2335,\"start\":2331},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2461,\"start\":2457},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":2464,\"start\":2461},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":2841,\"start\":2837},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":3119,\"start\":3115},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3209,\"start\":3206},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":4136,\"start\":4133},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":4301,\"start\":4297},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":4304,\"start\":4301},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":4357,\"start\":4353},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":4360,\"start\":4357},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":4386,\"start\":4382},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4411,\"start\":4407},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4537,\"start\":4536},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4549,\"start\":4548},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":4618,\"start\":4614},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":4621,\"start\":4618},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":4855,\"start\":4852},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4858,\"start\":4855},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":4934,\"start\":4930},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4963,\"start\":4959},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6011,\"start\":6007},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6548,\"start\":6544},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":6551,\"start\":6548},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7516,\"start\":7512},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7941,\"start\":7938},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":8998,\"start\":8994},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":9183,\"start\":9179},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":9186,\"start\":9183},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9464,\"start\":9460},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":9467,\"start\":9464},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":9470,\"start\":9467},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":9548,\"start\":9544},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":9551,\"start\":9548},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":9737,\"start\":9733},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":9740,\"start\":9737},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":9880,\"start\":9876},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10276,\"start\":10272},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":10279,\"start\":10276},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":10282,\"start\":10279},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":10476,\"start\":10472},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":10479,\"start\":10476},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10521,\"start\":10518},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":10524,\"start\":10521},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":10664,\"start\":10660},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":10794,\"start\":10790},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":11389,\"start\":11385},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":11420,\"start\":11416},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":11468,\"start\":11465},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":11471,\"start\":11468},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11553,\"start\":11549},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":11556,\"start\":11553},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":11680,\"start\":11676},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":11683,\"start\":11680},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":11716,\"start\":11712},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11934,\"start\":11930},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":12245,\"start\":12241},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":12282,\"start\":12279},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":12285,\"start\":12282},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":12288,\"start\":12285},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":12291,\"start\":12288},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":12337,\"start\":12333},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":12670,\"start\":12666},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":12699,\"start\":12695},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":12884,\"start\":12881},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":13013,\"start\":13009},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":13171,\"start\":13167},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13939,\"start\":13936},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":13941,\"start\":13939},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":13944,\"start\":13941},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":13947,\"start\":13944},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":14714,\"start\":14711},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":16570,\"start\":16566},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":16661,\"start\":16658},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":16664,\"start\":16661},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":16697,\"start\":16693},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":16700,\"start\":16697},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":16703,\"start\":16700},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":17288,\"start\":17284},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":17935,\"start\":17931},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":18325,\"start\":18324},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":19821,\"start\":19820},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":22412,\"start\":22408},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":22415,\"start\":22412},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":22418,\"start\":22415},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23021,\"start\":23017},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23157,\"start\":23153},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":24717,\"start\":24713},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":25664,\"start\":25660},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":26763,\"start\":26759},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":27790,\"start\":27789},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28322,\"start\":28320},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":28993,\"start\":28989},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":29630,\"start\":29626},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":29676,\"start\":29672},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":29679,\"start\":29676},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":29682,\"start\":29679},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":29873,\"start\":29869},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":30573,\"start\":30572},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":31331,\"start\":31327},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":31334,\"start\":31331},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":32028,\"start\":32026},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":33371,\"start\":33369},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":33673,\"start\":33669},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":33888,\"start\":33884},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":34150,\"start\":34146},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":34274,\"start\":34270},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":34634,\"start\":34630},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":41426,\"start\":41424},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":48358,\"start\":48355},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":51874,\"start\":51872},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":53794,\"start\":53790},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":55355,\"start\":55351},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":55548,\"start\":55544},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":57952,\"start\":57948},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":63520,\"start\":63519},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":63616,\"start\":63615}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":61080,\"start\":61029},{\"attributes\":{\"id\":\"fig_2\"},\"end\":61144,\"start\":61081},{\"attributes\":{\"id\":\"fig_3\"},\"end\":63074,\"start\":61145},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":63082,\"start\":63075},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":63376,\"start\":63083}]", "paragraph": "[{\"end\":2542,\"start\":2136},{\"end\":3408,\"start\":2544},{\"end\":4450,\"start\":3410},{\"end\":5411,\"start\":4452},{\"end\":6261,\"start\":5413},{\"end\":6634,\"start\":6263},{\"end\":7058,\"start\":6636},{\"end\":7383,\"start\":7060},{\"end\":8074,\"start\":7413},{\"end\":8796,\"start\":8076},{\"end\":10016,\"start\":8798},{\"end\":10858,\"start\":10018},{\"end\":12124,\"start\":10860},{\"end\":12585,\"start\":12126},{\"end\":13498,\"start\":12587},{\"end\":13948,\"start\":13500},{\"end\":14928,\"start\":13950},{\"end\":15484,\"start\":14930},{\"end\":16000,\"start\":15486},{\"end\":16384,\"start\":16002},{\"end\":17134,\"start\":16386},{\"end\":17936,\"start\":17150},{\"end\":18193,\"start\":17949},{\"end\":18651,\"start\":18195},{\"end\":20307,\"start\":18653},{\"end\":20832,\"start\":20309},{\"end\":21254,\"start\":20834},{\"end\":22008,\"start\":21256},{\"end\":22245,\"start\":22044},{\"end\":23173,\"start\":22247},{\"end\":23574,\"start\":23175},{\"end\":23774,\"start\":23576},{\"end\":24173,\"start\":23776},{\"end\":24348,\"start\":24175},{\"end\":24466,\"start\":24350},{\"end\":24719,\"start\":24468},{\"end\":25161,\"start\":24721},{\"end\":25400,\"start\":25163},{\"end\":25665,\"start\":25402},{\"end\":25919,\"start\":25667},{\"end\":25962,\"start\":25921},{\"end\":26068,\"start\":25964},{\"end\":26194,\"start\":26070},{\"end\":26637,\"start\":26196},{\"end\":27283,\"start\":26639},{\"end\":27405,\"start\":27285},{\"end\":27673,\"start\":27407},{\"end\":28130,\"start\":27675},{\"end\":28711,\"start\":28132},{\"end\":29683,\"start\":28748},{\"end\":30077,\"start\":29685},{\"end\":31335,\"start\":30079},{\"end\":31543,\"start\":31337},{\"end\":32130,\"start\":31545},{\"end\":32723,\"start\":32132},{\"end\":33422,\"start\":32725},{\"end\":34672,\"start\":33424},{\"end\":34982,\"start\":34674},{\"end\":35883,\"start\":35022},{\"end\":36258,\"start\":35885},{\"end\":36578,\"start\":36260},{\"end\":36767,\"start\":36580},{\"end\":37600,\"start\":36794},{\"end\":39584,\"start\":37643},{\"end\":40119,\"start\":39586},{\"end\":40285,\"start\":40121},{\"end\":41115,\"start\":40287},{\"end\":42238,\"start\":41117},{\"end\":42703,\"start\":42240},{\"end\":43368,\"start\":42705},{\"end\":43819,\"start\":43370},{\"end\":44430,\"start\":43821},{\"end\":44923,\"start\":44432},{\"end\":45099,\"start\":44925},{\"end\":45875,\"start\":45106},{\"end\":46432,\"start\":45877},{\"end\":46725,\"start\":46434},{\"end\":47141,\"start\":46727},{\"end\":47777,\"start\":47143},{\"end\":48215,\"start\":47779},{\"end\":48903,\"start\":48217},{\"end\":49534,\"start\":48905},{\"end\":50716,\"start\":49536},{\"end\":51001,\"start\":50718},{\"end\":51535,\"start\":51003},{\"end\":52254,\"start\":51537},{\"end\":52509,\"start\":52256},{\"end\":52966,\"start\":52511},{\"end\":53156,\"start\":52968},{\"end\":53572,\"start\":53195},{\"end\":54414,\"start\":53574},{\"end\":55007,\"start\":54431},{\"end\":55781,\"start\":55009},{\"end\":56738,\"start\":55783},{\"end\":57121,\"start\":56740},{\"end\":58555,\"start\":57123},{\"end\":59201,\"start\":58557},{\"end\":59743,\"start\":59217},{\"end\":60472,\"start\":59745},{\"end\":61028,\"start\":60474}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":45105,\"start\":45100}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":34892,\"start\":34885},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":36935,\"start\":36928}]", "section_header": "[{\"attributes\":{\"n\":\"2\"},\"end\":7411,\"start\":7386},{\"attributes\":{\"n\":\"3\"},\"end\":17148,\"start\":17137},{\"attributes\":{\"n\":\"3.1\"},\"end\":17947,\"start\":17939},{\"attributes\":{\"n\":\"3.2\"},\"end\":22042,\"start\":22011},{\"attributes\":{\"n\":\"3.3\"},\"end\":28746,\"start\":28714},{\"attributes\":{\"n\":\"3.4\"},\"end\":35020,\"start\":34985},{\"attributes\":{\"n\":\"4\"},\"end\":36792,\"start\":36770},{\"attributes\":{\"n\":\"4.1\"},\"end\":37641,\"start\":37603},{\"attributes\":{\"n\":\"4.2\"},\"end\":53193,\"start\":53159},{\"attributes\":{\"n\":\"4.3\"},\"end\":54429,\"start\":54417},{\"attributes\":{\"n\":\"5\"},\"end\":59215,\"start\":59204},{\"end\":61040,\"start\":61030},{\"end\":61092,\"start\":61082},{\"end\":63081,\"start\":63076},{\"end\":63093,\"start\":63084}]", "table": "[{\"end\":63376,\"start\":63163}]", "figure_caption": "[{\"end\":61080,\"start\":61042},{\"end\":61144,\"start\":61094},{\"end\":63074,\"start\":61147},{\"end\":63163,\"start\":63095}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":18578,\"start\":18570},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":32259,\"start\":32251}]", "bib_author_first_name": "[{\"end\":64237,\"start\":64233},{\"end\":64258,\"start\":64251},{\"end\":64273,\"start\":64267},{\"end\":64289,\"start\":64283},{\"end\":64303,\"start\":64299},{\"end\":64738,\"start\":64729},{\"end\":64756,\"start\":64748},{\"end\":64770,\"start\":64765},{\"end\":64788,\"start\":64777},{\"end\":65222,\"start\":65217},{\"end\":65239,\"start\":65232},{\"end\":65257,\"start\":65250},{\"end\":65715,\"start\":65714},{\"end\":66092,\"start\":66081},{\"end\":66110,\"start\":66101},{\"end\":66125,\"start\":66120},{\"end\":66143,\"start\":66136},{\"end\":66937,\"start\":66931},{\"end\":66957,\"start\":66949},{\"end\":66972,\"start\":66964},{\"end\":67420,\"start\":67415},{\"end\":67439,\"start\":67433},{\"end\":67460,\"start\":67451},{\"end\":67478,\"start\":67470},{\"end\":67945,\"start\":67935},{\"end\":67961,\"start\":67958},{\"end\":68248,\"start\":68241},{\"end\":68268,\"start\":68257},{\"end\":68676,\"start\":68671},{\"end\":68692,\"start\":68684},{\"end\":68701,\"start\":68700},{\"end\":68716,\"start\":68711},{\"end\":68718,\"start\":68717},{\"end\":68973,\"start\":68966},{\"end\":68983,\"start\":68982},{\"end\":68996,\"start\":68991},{\"end\":69002,\"start\":68997},{\"end\":69307,\"start\":69302},{\"end\":69325,\"start\":69322},{\"end\":69641,\"start\":69634},{\"end\":69659,\"start\":69653},{\"end\":69679,\"start\":69674},{\"end\":70135,\"start\":70129},{\"end\":70148,\"start\":70143},{\"end\":70261,\"start\":70260},{\"end\":70275,\"start\":70268},{\"end\":70681,\"start\":70676},{\"end\":70697,\"start\":70692},{\"end\":70711,\"start\":70707},{\"end\":71070,\"start\":71065},{\"end\":71089,\"start\":71081},{\"end\":71100,\"start\":71095},{\"end\":71116,\"start\":71110},{\"end\":71453,\"start\":71448},{\"end\":71470,\"start\":71463},{\"end\":71484,\"start\":71479},{\"end\":71494,\"start\":71491},{\"end\":71956,\"start\":71951},{\"end\":72288,\"start\":72279},{\"end\":72299,\"start\":72296},{\"end\":72314,\"start\":72306},{\"end\":72595,\"start\":72594},{\"end\":72607,\"start\":72602},{\"end\":72621,\"start\":72617},{\"end\":72633,\"start\":72629},{\"end\":72897,\"start\":72890},{\"end\":73160,\"start\":73155},{\"end\":73177,\"start\":73172},{\"end\":73191,\"start\":73186},{\"end\":73204,\"start\":73200},{\"end\":73223,\"start\":73216},{\"end\":73237,\"start\":73232},{\"end\":73249,\"start\":73242},{\"end\":73265,\"start\":73258},{\"end\":73279,\"start\":73273},{\"end\":73296,\"start\":73289},{\"end\":73749,\"start\":73744},{\"end\":73769,\"start\":73763},{\"end\":73791,\"start\":73778},{\"end\":73807,\"start\":73800},{\"end\":74168,\"start\":74163},{\"end\":74175,\"start\":74169},{\"end\":74375,\"start\":74367},{\"end\":74390,\"start\":74386},{\"end\":74406,\"start\":74400},{\"end\":74415,\"start\":74414},{\"end\":74431,\"start\":74422},{\"end\":74891,\"start\":74886},{\"end\":74912,\"start\":74907},{\"end\":74928,\"start\":74922},{\"end\":74943,\"start\":74937},{\"end\":75252,\"start\":75246},{\"end\":75269,\"start\":75261},{\"end\":75546,\"start\":75538},{\"end\":75565,\"start\":75560},{\"end\":75581,\"start\":75575},{\"end\":75601,\"start\":75593},{\"end\":75960,\"start\":75953},{\"end\":75974,\"start\":75971},{\"end\":76379,\"start\":76371},{\"end\":76395,\"start\":76389},{\"end\":76409,\"start\":76405},{\"end\":76757,\"start\":76756},{\"end\":76773,\"start\":76768},{\"end\":76775,\"start\":76774},{\"end\":77091,\"start\":77086},{\"end\":77109,\"start\":77104},{\"end\":77403,\"start\":77398},{\"end\":77416,\"start\":77412},{\"end\":77434,\"start\":77426},{\"end\":77756,\"start\":77749},{\"end\":77772,\"start\":77765},{\"end\":77791,\"start\":77786},{\"end\":78217,\"start\":78216},{\"end\":78529,\"start\":78524},{\"end\":78546,\"start\":78541},{\"end\":78561,\"start\":78554},{\"end\":78980,\"start\":78977},{\"end\":79160,\"start\":79155},{\"end\":79176,\"start\":79170},{\"end\":79197,\"start\":79188},{\"end\":79583,\"start\":79578},{\"end\":79599,\"start\":79591},{\"end\":79615,\"start\":79609},{\"end\":79630,\"start\":79623},{\"end\":80077,\"start\":80071},{\"end\":80089,\"start\":80084},{\"end\":80408,\"start\":80407},{\"end\":80422,\"start\":80416},{\"end\":80424,\"start\":80423},{\"end\":80696,\"start\":80693},{\"end\":80710,\"start\":80702},{\"end\":80728,\"start\":80719},{\"end\":81197,\"start\":81191},{\"end\":81211,\"start\":81205},{\"end\":81227,\"start\":81220},{\"end\":81679,\"start\":81678},{\"end\":81880,\"start\":81868},{\"end\":81895,\"start\":81890},{\"end\":81902,\"start\":81896},{\"end\":82214,\"start\":82206},{\"end\":82228,\"start\":82223},{\"end\":82241,\"start\":82238},{\"end\":82614,\"start\":82613},{\"end\":82825,\"start\":82819},{\"end\":82835,\"start\":82834},{\"end\":82846,\"start\":82841},{\"end\":82848,\"start\":82847},{\"end\":83233,\"start\":83227},{\"end\":83252,\"start\":83244},{\"end\":83272,\"start\":83263},{\"end\":83291,\"start\":83284},{\"end\":83307,\"start\":83301},{\"end\":83780,\"start\":83773},{\"end\":83790,\"start\":83789},{\"end\":84223,\"start\":84217},{\"end\":84238,\"start\":84232},{\"end\":84712,\"start\":84711},{\"end\":84723,\"start\":84722},{\"end\":84725,\"start\":84724},{\"end\":84739,\"start\":84733},{\"end\":84745,\"start\":84740},{\"end\":85014,\"start\":85007},{\"end\":85025,\"start\":85021},{\"end\":85038,\"start\":85034},{\"end\":85515,\"start\":85511},{\"end\":85523,\"start\":85516},{\"end\":85760,\"start\":85759},{\"end\":85771,\"start\":85768},{\"end\":85789,\"start\":85788},{\"end\":85804,\"start\":85798},{\"end\":86265,\"start\":86257},{\"end\":86279,\"start\":86274},{\"end\":86281,\"start\":86280},{\"end\":87036,\"start\":87029},{\"end\":87049,\"start\":87046},{\"end\":87064,\"start\":87059},{\"end\":87081,\"start\":87076},{\"end\":87593,\"start\":87589},{\"end\":87606,\"start\":87601},{\"end\":87896,\"start\":87891},{\"end\":87912,\"start\":87907},{\"end\":87931,\"start\":87922},{\"end\":88234,\"start\":88228},{\"end\":88260,\"start\":88251},{\"end\":88273,\"start\":88267},{\"end\":88753,\"start\":88748},{\"end\":88765,\"start\":88760},{\"end\":88780,\"start\":88775},{\"end\":89217,\"start\":89212},{\"end\":89611,\"start\":89605},{\"end\":89628,\"start\":89623},{\"end\":89640,\"start\":89638},{\"end\":89652,\"start\":89647},{\"end\":89672,\"start\":89665},{\"end\":89690,\"start\":89681},{\"end\":89708,\"start\":89700},{\"end\":90166,\"start\":90160},{\"end\":90186,\"start\":90178},{\"end\":90204,\"start\":90195},{\"end\":90720,\"start\":90714},{\"end\":90741,\"start\":90732},{\"end\":90761,\"start\":90754},{\"end\":90775,\"start\":90772},{\"end\":91123,\"start\":91117},{\"end\":91144,\"start\":91135},{\"end\":91158,\"start\":91157},{\"end\":91160,\"start\":91159},{\"end\":91637,\"start\":91632},{\"end\":91641,\"start\":91638},{\"end\":91658,\"start\":91649},{\"end\":91674,\"start\":91667},{\"end\":91984,\"start\":91980},{\"end\":92266,\"start\":92259},{\"end\":92277,\"start\":92274},{\"end\":92291,\"start\":92286},{\"end\":92835,\"start\":92827},{\"end\":92852,\"start\":92847},{\"end\":92871,\"start\":92863},{\"end\":92884,\"start\":92879},{\"end\":92886,\"start\":92885},{\"end\":92902,\"start\":92895},{\"end\":93455,\"start\":93449},{\"end\":93469,\"start\":93460},{\"end\":93485,\"start\":93479},{\"end\":93938,\"start\":93931},{\"end\":93951,\"start\":93945},{\"end\":94397,\"start\":94390},{\"end\":94410,\"start\":94404},{\"end\":94426,\"start\":94419},{\"end\":94433,\"start\":94431},{\"end\":94445,\"start\":94441}]", "bib_author_last_name": "[{\"end\":64249,\"start\":64238},{\"end\":64265,\"start\":64259},{\"end\":64281,\"start\":64274},{\"end\":64297,\"start\":64290},{\"end\":64310,\"start\":64304},{\"end\":64746,\"start\":64739},{\"end\":64763,\"start\":64757},{\"end\":64775,\"start\":64771},{\"end\":64796,\"start\":64789},{\"end\":65230,\"start\":65223},{\"end\":65248,\"start\":65240},{\"end\":65264,\"start\":65258},{\"end\":65723,\"start\":65716},{\"end\":65732,\"start\":65725},{\"end\":65750,\"start\":65734},{\"end\":66099,\"start\":66093},{\"end\":66118,\"start\":66111},{\"end\":66134,\"start\":66126},{\"end\":66149,\"start\":66144},{\"end\":66947,\"start\":66938},{\"end\":66962,\"start\":66958},{\"end\":66980,\"start\":66973},{\"end\":67431,\"start\":67421},{\"end\":67449,\"start\":67440},{\"end\":67468,\"start\":67461},{\"end\":67485,\"start\":67479},{\"end\":67956,\"start\":67946},{\"end\":67972,\"start\":67962},{\"end\":68255,\"start\":68249},{\"end\":68276,\"start\":68269},{\"end\":68576,\"start\":68573},{\"end\":68682,\"start\":68677},{\"end\":68698,\"start\":68693},{\"end\":68709,\"start\":68702},{\"end\":68723,\"start\":68719},{\"end\":68730,\"start\":68725},{\"end\":68980,\"start\":68974},{\"end\":68989,\"start\":68984},{\"end\":69010,\"start\":69003},{\"end\":69018,\"start\":69012},{\"end\":69320,\"start\":69308},{\"end\":69330,\"start\":69326},{\"end\":69651,\"start\":69642},{\"end\":69672,\"start\":69660},{\"end\":69689,\"start\":69680},{\"end\":69696,\"start\":69691},{\"end\":70141,\"start\":70136},{\"end\":70152,\"start\":70149},{\"end\":70159,\"start\":70154},{\"end\":70266,\"start\":70262},{\"end\":70284,\"start\":70276},{\"end\":70294,\"start\":70286},{\"end\":70690,\"start\":70682},{\"end\":70705,\"start\":70698},{\"end\":70718,\"start\":70712},{\"end\":71079,\"start\":71071},{\"end\":71093,\"start\":71090},{\"end\":71108,\"start\":71101},{\"end\":71124,\"start\":71117},{\"end\":71461,\"start\":71454},{\"end\":71477,\"start\":71471},{\"end\":71489,\"start\":71485},{\"end\":71503,\"start\":71495},{\"end\":71964,\"start\":71957},{\"end\":72294,\"start\":72289},{\"end\":72304,\"start\":72300},{\"end\":72323,\"start\":72315},{\"end\":72600,\"start\":72596},{\"end\":72615,\"start\":72608},{\"end\":72627,\"start\":72622},{\"end\":72639,\"start\":72634},{\"end\":72650,\"start\":72641},{\"end\":72908,\"start\":72898},{\"end\":73170,\"start\":73161},{\"end\":73184,\"start\":73178},{\"end\":73198,\"start\":73192},{\"end\":73214,\"start\":73205},{\"end\":73230,\"start\":73224},{\"end\":73240,\"start\":73238},{\"end\":73256,\"start\":73250},{\"end\":73271,\"start\":73266},{\"end\":73287,\"start\":73280},{\"end\":73302,\"start\":73297},{\"end\":73761,\"start\":73750},{\"end\":73776,\"start\":73770},{\"end\":73798,\"start\":73792},{\"end\":73814,\"start\":73808},{\"end\":74384,\"start\":74376},{\"end\":74398,\"start\":74391},{\"end\":74412,\"start\":74407},{\"end\":74420,\"start\":74416},{\"end\":74438,\"start\":74432},{\"end\":74447,\"start\":74440},{\"end\":74905,\"start\":74892},{\"end\":74920,\"start\":74913},{\"end\":74935,\"start\":74929},{\"end\":74950,\"start\":74944},{\"end\":75259,\"start\":75253},{\"end\":75274,\"start\":75270},{\"end\":75558,\"start\":75547},{\"end\":75573,\"start\":75566},{\"end\":75591,\"start\":75582},{\"end\":75608,\"start\":75602},{\"end\":75969,\"start\":75961},{\"end\":75979,\"start\":75975},{\"end\":76387,\"start\":76380},{\"end\":76403,\"start\":76396},{\"end\":76421,\"start\":76410},{\"end\":76766,\"start\":76758},{\"end\":76784,\"start\":76776},{\"end\":76794,\"start\":76786},{\"end\":77102,\"start\":77092},{\"end\":77115,\"start\":77110},{\"end\":77410,\"start\":77404},{\"end\":77424,\"start\":77417},{\"end\":77443,\"start\":77435},{\"end\":77763,\"start\":77757},{\"end\":77784,\"start\":77773},{\"end\":77803,\"start\":77792},{\"end\":78225,\"start\":78218},{\"end\":78234,\"start\":78227},{\"end\":78539,\"start\":78530},{\"end\":78552,\"start\":78547},{\"end\":78570,\"start\":78562},{\"end\":78985,\"start\":78981},{\"end\":79168,\"start\":79161},{\"end\":79186,\"start\":79177},{\"end\":79202,\"start\":79198},{\"end\":79589,\"start\":79584},{\"end\":79607,\"start\":79600},{\"end\":79621,\"start\":79616},{\"end\":79636,\"start\":79631},{\"end\":80082,\"start\":80078},{\"end\":80099,\"start\":80090},{\"end\":80414,\"start\":80409},{\"end\":80432,\"start\":80425},{\"end\":80438,\"start\":80434},{\"end\":80700,\"start\":80697},{\"end\":80717,\"start\":80711},{\"end\":80739,\"start\":80729},{\"end\":81203,\"start\":81198},{\"end\":81218,\"start\":81212},{\"end\":81233,\"start\":81228},{\"end\":81686,\"start\":81680},{\"end\":81693,\"start\":81688},{\"end\":81888,\"start\":81881},{\"end\":81909,\"start\":81903},{\"end\":82221,\"start\":82215},{\"end\":82236,\"start\":82229},{\"end\":82250,\"start\":82242},{\"end\":82621,\"start\":82615},{\"end\":82629,\"start\":82623},{\"end\":82832,\"start\":82826},{\"end\":82839,\"start\":82836},{\"end\":82857,\"start\":82849},{\"end\":82867,\"start\":82859},{\"end\":83242,\"start\":83234},{\"end\":83261,\"start\":83253},{\"end\":83282,\"start\":83273},{\"end\":83299,\"start\":83292},{\"end\":83310,\"start\":83308},{\"end\":83787,\"start\":83781},{\"end\":83797,\"start\":83791},{\"end\":83808,\"start\":83799},{\"end\":84230,\"start\":84224},{\"end\":84257,\"start\":84239},{\"end\":84720,\"start\":84713},{\"end\":84731,\"start\":84726},{\"end\":84753,\"start\":84746},{\"end\":84759,\"start\":84755},{\"end\":85019,\"start\":85015},{\"end\":85032,\"start\":85026},{\"end\":85045,\"start\":85039},{\"end\":85766,\"start\":85761},{\"end\":85777,\"start\":85772},{\"end\":85786,\"start\":85779},{\"end\":85796,\"start\":85790},{\"end\":85814,\"start\":85805},{\"end\":85822,\"start\":85816},{\"end\":86272,\"start\":86266},{\"end\":86299,\"start\":86282},{\"end\":87044,\"start\":87037},{\"end\":87057,\"start\":87050},{\"end\":87074,\"start\":87065},{\"end\":87087,\"start\":87082},{\"end\":87587,\"start\":87578},{\"end\":87599,\"start\":87594},{\"end\":87610,\"start\":87607},{\"end\":87621,\"start\":87612},{\"end\":87905,\"start\":87897},{\"end\":87920,\"start\":87913},{\"end\":87940,\"start\":87932},{\"end\":88249,\"start\":88235},{\"end\":88265,\"start\":88261},{\"end\":88281,\"start\":88274},{\"end\":88292,\"start\":88283},{\"end\":88655,\"start\":88652},{\"end\":88758,\"start\":88754},{\"end\":88773,\"start\":88766},{\"end\":88789,\"start\":88781},{\"end\":89220,\"start\":89218},{\"end\":89621,\"start\":89612},{\"end\":89636,\"start\":89629},{\"end\":89645,\"start\":89641},{\"end\":89663,\"start\":89653},{\"end\":89679,\"start\":89673},{\"end\":89698,\"start\":89691},{\"end\":89715,\"start\":89709},{\"end\":90176,\"start\":90167},{\"end\":90193,\"start\":90187},{\"end\":90215,\"start\":90205},{\"end\":90730,\"start\":90721},{\"end\":90752,\"start\":90742},{\"end\":90770,\"start\":90762},{\"end\":90780,\"start\":90776},{\"end\":91133,\"start\":91124},{\"end\":91155,\"start\":91145},{\"end\":91165,\"start\":91161},{\"end\":91174,\"start\":91167},{\"end\":91181,\"start\":91176},{\"end\":91647,\"start\":91642},{\"end\":91665,\"start\":91659},{\"end\":91682,\"start\":91675},{\"end\":91989,\"start\":91985},{\"end\":92272,\"start\":92267},{\"end\":92284,\"start\":92278},{\"end\":92298,\"start\":92292},{\"end\":92845,\"start\":92836},{\"end\":92861,\"start\":92853},{\"end\":92877,\"start\":92872},{\"end\":92893,\"start\":92887},{\"end\":92911,\"start\":92903},{\"end\":93458,\"start\":93456},{\"end\":93477,\"start\":93470},{\"end\":93490,\"start\":93486},{\"end\":93943,\"start\":93939},{\"end\":93958,\"start\":93952},{\"end\":94402,\"start\":94398},{\"end\":94417,\"start\":94411},{\"end\":94429,\"start\":94427},{\"end\":94439,\"start\":94434},{\"end\":94449,\"start\":94446}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":11760080},\"end\":64680,\"start\":64161},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":19238548},\"end\":65126,\"start\":64682},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":7537891},\"end\":65637,\"start\":65128},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":168774982},\"end\":65990,\"start\":65639},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":1267994},\"end\":66561,\"start\":65992},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":18709463},\"end\":66888,\"start\":66563},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":22699115},\"end\":67325,\"start\":66890},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":16438090},\"end\":67869,\"start\":67327},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":148267716},\"end\":68201,\"start\":67871},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":12302770},\"end\":68569,\"start\":68203},{\"attributes\":{\"id\":\"b10\"},\"end\":68591,\"start\":68571},{\"attributes\":{\"id\":\"b11\"},\"end\":68899,\"start\":68593},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":153828984},\"end\":69208,\"start\":68901},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":1106864},\"end\":69586,\"start\":69210},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":17816108},\"end\":70100,\"start\":69588},{\"attributes\":{\"id\":\"b15\"},\"end\":70258,\"start\":70102},{\"attributes\":{\"id\":\"b16\"},\"end\":70579,\"start\":70260},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":207767784},\"end\":70980,\"start\":70581},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":2246943},\"end\":71358,\"start\":70982},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":16193315},\"end\":71863,\"start\":71360},{\"attributes\":{\"id\":\"b20\"},\"end\":72181,\"start\":71865},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":2983755},\"end\":72549,\"start\":72183},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":9645095},\"end\":72808,\"start\":72551},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":6165778},\"end\":73127,\"start\":72810},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":142767},\"end\":73679,\"start\":73129},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":1105134},\"end\":74090,\"start\":73681},{\"attributes\":{\"id\":\"b26\"},\"end\":74300,\"start\":74092},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":5656931},\"end\":74829,\"start\":74302},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":39547848},\"end\":75177,\"start\":74831},{\"attributes\":{\"id\":\"b29\"},\"end\":75435,\"start\":75179},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":6547215},\"end\":75883,\"start\":75437},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":17509310},\"end\":76302,\"start\":75885},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":215752914},\"end\":76754,\"start\":76304},{\"attributes\":{\"id\":\"b33\"},\"end\":77023,\"start\":76756},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":14947451},\"end\":77275,\"start\":77025},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":16306341},\"end\":77682,\"start\":77277},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":14233742},\"end\":78171,\"start\":77684},{\"attributes\":{\"id\":\"b37\"},\"end\":78468,\"start\":78173},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":5562917},\"end\":78906,\"start\":78470},{\"attributes\":{\"id\":\"b39\"},\"end\":79095,\"start\":78908},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":12157803},\"end\":79520,\"start\":79097},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":217224482},\"end\":79987,\"start\":79522},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":12944066},\"end\":80301,\"start\":79989},{\"attributes\":{\"id\":\"b43\"},\"end\":80586,\"start\":80303},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":4706363},\"end\":81128,\"start\":80588},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":5676431},\"end\":81579,\"start\":81130},{\"attributes\":{\"id\":\"b46\"},\"end\":81813,\"start\":81581},{\"attributes\":{\"id\":\"b47\"},\"end\":82107,\"start\":81815},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":11432865},\"end\":82609,\"start\":82109},{\"attributes\":{\"id\":\"b49\"},\"end\":82743,\"start\":82611},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":1938015},\"end\":83157,\"start\":82745},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":15341686},\"end\":83706,\"start\":83159},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":27168508},\"end\":84167,\"start\":83708},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":12195891},\"end\":84670,\"start\":84169},{\"attributes\":{\"id\":\"b54\"},\"end\":84929,\"start\":84672},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":1525668},\"end\":85468,\"start\":84931},{\"attributes\":{\"id\":\"b56\"},\"end\":85650,\"start\":85470},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":8789894},\"end\":86206,\"start\":85652},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":45809295},\"end\":86604,\"start\":86208},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":5319733},\"end\":86908,\"start\":86606},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":54826000},\"end\":87491,\"start\":86910},{\"attributes\":{\"id\":\"b61\",\"matched_paper_id\":7156307},\"end\":87807,\"start\":87493},{\"attributes\":{\"id\":\"b62\"},\"end\":88131,\"start\":87809},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":47017030},\"end\":88648,\"start\":88133},{\"attributes\":{\"id\":\"b64\"},\"end\":88670,\"start\":88650},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":2739257},\"end\":89161,\"start\":88672},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":2825077},\"end\":89540,\"start\":89163},{\"attributes\":{\"id\":\"b67\",\"matched_paper_id\":3330083},\"end\":90107,\"start\":89542},{\"attributes\":{\"id\":\"b68\"},\"end\":90617,\"start\":90109},{\"attributes\":{\"id\":\"b69\",\"matched_paper_id\":5711850},\"end\":91043,\"start\":90619},{\"attributes\":{\"id\":\"b70\",\"matched_paper_id\":13818429},\"end\":91541,\"start\":91045},{\"attributes\":{\"id\":\"b71\",\"matched_paper_id\":14150967},\"end\":91894,\"start\":91543},{\"attributes\":{\"id\":\"b72\",\"matched_paper_id\":154554901},\"end\":92173,\"start\":91896},{\"attributes\":{\"id\":\"b73\",\"matched_paper_id\":17174358},\"end\":92712,\"start\":92175},{\"attributes\":{\"id\":\"b74\",\"matched_paper_id\":9012978},\"end\":93353,\"start\":92714},{\"attributes\":{\"id\":\"b75\",\"matched_paper_id\":10885999},\"end\":93849,\"start\":93355},{\"attributes\":{\"id\":\"b76\",\"matched_paper_id\":8135585},\"end\":94280,\"start\":93851},{\"attributes\":{\"id\":\"b77\",\"matched_paper_id\":17705378},\"end\":94780,\"start\":94282}]", "bib_title": "[{\"end\":64231,\"start\":64161},{\"end\":64727,\"start\":64682},{\"end\":65215,\"start\":65128},{\"end\":65712,\"start\":65639},{\"end\":66079,\"start\":65992},{\"end\":66613,\"start\":66563},{\"end\":66929,\"start\":66890},{\"end\":67413,\"start\":67327},{\"end\":67933,\"start\":67871},{\"end\":68239,\"start\":68203},{\"end\":68964,\"start\":68901},{\"end\":69300,\"start\":69210},{\"end\":69632,\"start\":69588},{\"end\":70674,\"start\":70581},{\"end\":71063,\"start\":70982},{\"end\":71446,\"start\":71360},{\"end\":71949,\"start\":71865},{\"end\":72277,\"start\":72183},{\"end\":72592,\"start\":72551},{\"end\":72888,\"start\":72810},{\"end\":73153,\"start\":73129},{\"end\":73742,\"start\":73681},{\"end\":74365,\"start\":74302},{\"end\":74884,\"start\":74831},{\"end\":75536,\"start\":75437},{\"end\":75951,\"start\":75885},{\"end\":76369,\"start\":76304},{\"end\":77084,\"start\":77025},{\"end\":77396,\"start\":77277},{\"end\":77747,\"start\":77684},{\"end\":78522,\"start\":78470},{\"end\":79153,\"start\":79097},{\"end\":79576,\"start\":79522},{\"end\":80069,\"start\":79989},{\"end\":80691,\"start\":80588},{\"end\":81189,\"start\":81130},{\"end\":81866,\"start\":81815},{\"end\":82204,\"start\":82109},{\"end\":82817,\"start\":82745},{\"end\":83225,\"start\":83159},{\"end\":83771,\"start\":83708},{\"end\":84215,\"start\":84169},{\"end\":85005,\"start\":84931},{\"end\":85509,\"start\":85470},{\"end\":85757,\"start\":85652},{\"end\":86255,\"start\":86208},{\"end\":86663,\"start\":86606},{\"end\":87027,\"start\":86910},{\"end\":87576,\"start\":87493},{\"end\":87889,\"start\":87809},{\"end\":88226,\"start\":88133},{\"end\":88746,\"start\":88672},{\"end\":89210,\"start\":89163},{\"end\":89603,\"start\":89542},{\"end\":90158,\"start\":90109},{\"end\":90712,\"start\":90619},{\"end\":91115,\"start\":91045},{\"end\":91630,\"start\":91543},{\"end\":91978,\"start\":91896},{\"end\":92257,\"start\":92175},{\"end\":92825,\"start\":92714},{\"end\":93447,\"start\":93355},{\"end\":93929,\"start\":93851},{\"end\":94388,\"start\":94282}]", "bib_author": "[{\"end\":64251,\"start\":64233},{\"end\":64267,\"start\":64251},{\"end\":64283,\"start\":64267},{\"end\":64299,\"start\":64283},{\"end\":64312,\"start\":64299},{\"end\":64748,\"start\":64729},{\"end\":64765,\"start\":64748},{\"end\":64777,\"start\":64765},{\"end\":64798,\"start\":64777},{\"end\":65232,\"start\":65217},{\"end\":65250,\"start\":65232},{\"end\":65266,\"start\":65250},{\"end\":65725,\"start\":65714},{\"end\":65734,\"start\":65725},{\"end\":65752,\"start\":65734},{\"end\":66101,\"start\":66081},{\"end\":66120,\"start\":66101},{\"end\":66136,\"start\":66120},{\"end\":66151,\"start\":66136},{\"end\":66949,\"start\":66931},{\"end\":66964,\"start\":66949},{\"end\":66982,\"start\":66964},{\"end\":67433,\"start\":67415},{\"end\":67451,\"start\":67433},{\"end\":67470,\"start\":67451},{\"end\":67487,\"start\":67470},{\"end\":67958,\"start\":67935},{\"end\":67974,\"start\":67958},{\"end\":68257,\"start\":68241},{\"end\":68278,\"start\":68257},{\"end\":68578,\"start\":68573},{\"end\":68684,\"start\":68671},{\"end\":68700,\"start\":68684},{\"end\":68711,\"start\":68700},{\"end\":68725,\"start\":68711},{\"end\":68732,\"start\":68725},{\"end\":68982,\"start\":68966},{\"end\":68991,\"start\":68982},{\"end\":69012,\"start\":68991},{\"end\":69020,\"start\":69012},{\"end\":69322,\"start\":69302},{\"end\":69332,\"start\":69322},{\"end\":69653,\"start\":69634},{\"end\":69674,\"start\":69653},{\"end\":69691,\"start\":69674},{\"end\":69698,\"start\":69691},{\"end\":70143,\"start\":70129},{\"end\":70154,\"start\":70143},{\"end\":70161,\"start\":70154},{\"end\":70268,\"start\":70260},{\"end\":70286,\"start\":70268},{\"end\":70296,\"start\":70286},{\"end\":70692,\"start\":70676},{\"end\":70707,\"start\":70692},{\"end\":70720,\"start\":70707},{\"end\":71081,\"start\":71065},{\"end\":71095,\"start\":71081},{\"end\":71110,\"start\":71095},{\"end\":71126,\"start\":71110},{\"end\":71463,\"start\":71448},{\"end\":71479,\"start\":71463},{\"end\":71491,\"start\":71479},{\"end\":71505,\"start\":71491},{\"end\":71966,\"start\":71951},{\"end\":72296,\"start\":72279},{\"end\":72306,\"start\":72296},{\"end\":72325,\"start\":72306},{\"end\":72602,\"start\":72594},{\"end\":72617,\"start\":72602},{\"end\":72629,\"start\":72617},{\"end\":72641,\"start\":72629},{\"end\":72652,\"start\":72641},{\"end\":72910,\"start\":72890},{\"end\":73172,\"start\":73155},{\"end\":73186,\"start\":73172},{\"end\":73200,\"start\":73186},{\"end\":73216,\"start\":73200},{\"end\":73232,\"start\":73216},{\"end\":73242,\"start\":73232},{\"end\":73258,\"start\":73242},{\"end\":73273,\"start\":73258},{\"end\":73289,\"start\":73273},{\"end\":73304,\"start\":73289},{\"end\":73763,\"start\":73744},{\"end\":73778,\"start\":73763},{\"end\":73800,\"start\":73778},{\"end\":73816,\"start\":73800},{\"end\":74178,\"start\":74163},{\"end\":74386,\"start\":74367},{\"end\":74400,\"start\":74386},{\"end\":74414,\"start\":74400},{\"end\":74422,\"start\":74414},{\"end\":74440,\"start\":74422},{\"end\":74449,\"start\":74440},{\"end\":74907,\"start\":74886},{\"end\":74922,\"start\":74907},{\"end\":74937,\"start\":74922},{\"end\":74952,\"start\":74937},{\"end\":75261,\"start\":75246},{\"end\":75276,\"start\":75261},{\"end\":75560,\"start\":75538},{\"end\":75575,\"start\":75560},{\"end\":75593,\"start\":75575},{\"end\":75610,\"start\":75593},{\"end\":75971,\"start\":75953},{\"end\":75981,\"start\":75971},{\"end\":76389,\"start\":76371},{\"end\":76405,\"start\":76389},{\"end\":76423,\"start\":76405},{\"end\":76768,\"start\":76756},{\"end\":76786,\"start\":76768},{\"end\":76796,\"start\":76786},{\"end\":77104,\"start\":77086},{\"end\":77117,\"start\":77104},{\"end\":77412,\"start\":77398},{\"end\":77426,\"start\":77412},{\"end\":77445,\"start\":77426},{\"end\":77765,\"start\":77749},{\"end\":77786,\"start\":77765},{\"end\":77805,\"start\":77786},{\"end\":78227,\"start\":78216},{\"end\":78236,\"start\":78227},{\"end\":78541,\"start\":78524},{\"end\":78554,\"start\":78541},{\"end\":78572,\"start\":78554},{\"end\":78987,\"start\":78977},{\"end\":79170,\"start\":79155},{\"end\":79188,\"start\":79170},{\"end\":79204,\"start\":79188},{\"end\":79591,\"start\":79578},{\"end\":79609,\"start\":79591},{\"end\":79623,\"start\":79609},{\"end\":79638,\"start\":79623},{\"end\":80084,\"start\":80071},{\"end\":80101,\"start\":80084},{\"end\":80416,\"start\":80407},{\"end\":80434,\"start\":80416},{\"end\":80440,\"start\":80434},{\"end\":80702,\"start\":80693},{\"end\":80719,\"start\":80702},{\"end\":80741,\"start\":80719},{\"end\":81205,\"start\":81191},{\"end\":81220,\"start\":81205},{\"end\":81235,\"start\":81220},{\"end\":81688,\"start\":81678},{\"end\":81695,\"start\":81688},{\"end\":81890,\"start\":81868},{\"end\":81911,\"start\":81890},{\"end\":82223,\"start\":82206},{\"end\":82238,\"start\":82223},{\"end\":82252,\"start\":82238},{\"end\":82623,\"start\":82613},{\"end\":82633,\"start\":82623},{\"end\":82834,\"start\":82819},{\"end\":82841,\"start\":82834},{\"end\":82859,\"start\":82841},{\"end\":82869,\"start\":82859},{\"end\":83244,\"start\":83227},{\"end\":83263,\"start\":83244},{\"end\":83284,\"start\":83263},{\"end\":83301,\"start\":83284},{\"end\":83312,\"start\":83301},{\"end\":83789,\"start\":83773},{\"end\":83799,\"start\":83789},{\"end\":83810,\"start\":83799},{\"end\":84232,\"start\":84217},{\"end\":84259,\"start\":84232},{\"end\":84722,\"start\":84711},{\"end\":84733,\"start\":84722},{\"end\":84755,\"start\":84733},{\"end\":84761,\"start\":84755},{\"end\":85021,\"start\":85007},{\"end\":85034,\"start\":85021},{\"end\":85047,\"start\":85034},{\"end\":85526,\"start\":85511},{\"end\":85768,\"start\":85759},{\"end\":85779,\"start\":85768},{\"end\":85788,\"start\":85779},{\"end\":85798,\"start\":85788},{\"end\":85816,\"start\":85798},{\"end\":85824,\"start\":85816},{\"end\":86274,\"start\":86257},{\"end\":86301,\"start\":86274},{\"end\":87046,\"start\":87029},{\"end\":87059,\"start\":87046},{\"end\":87076,\"start\":87059},{\"end\":87089,\"start\":87076},{\"end\":87589,\"start\":87578},{\"end\":87601,\"start\":87589},{\"end\":87612,\"start\":87601},{\"end\":87623,\"start\":87612},{\"end\":87907,\"start\":87891},{\"end\":87922,\"start\":87907},{\"end\":87942,\"start\":87922},{\"end\":88251,\"start\":88228},{\"end\":88267,\"start\":88251},{\"end\":88283,\"start\":88267},{\"end\":88294,\"start\":88283},{\"end\":88657,\"start\":88652},{\"end\":88760,\"start\":88748},{\"end\":88775,\"start\":88760},{\"end\":88791,\"start\":88775},{\"end\":89222,\"start\":89212},{\"end\":89623,\"start\":89605},{\"end\":89638,\"start\":89623},{\"end\":89647,\"start\":89638},{\"end\":89665,\"start\":89647},{\"end\":89681,\"start\":89665},{\"end\":89700,\"start\":89681},{\"end\":89717,\"start\":89700},{\"end\":90178,\"start\":90160},{\"end\":90195,\"start\":90178},{\"end\":90217,\"start\":90195},{\"end\":90732,\"start\":90714},{\"end\":90754,\"start\":90732},{\"end\":90772,\"start\":90754},{\"end\":90782,\"start\":90772},{\"end\":91135,\"start\":91117},{\"end\":91157,\"start\":91135},{\"end\":91167,\"start\":91157},{\"end\":91176,\"start\":91167},{\"end\":91183,\"start\":91176},{\"end\":91649,\"start\":91632},{\"end\":91667,\"start\":91649},{\"end\":91684,\"start\":91667},{\"end\":91991,\"start\":91980},{\"end\":92274,\"start\":92259},{\"end\":92286,\"start\":92274},{\"end\":92300,\"start\":92286},{\"end\":92847,\"start\":92827},{\"end\":92863,\"start\":92847},{\"end\":92879,\"start\":92863},{\"end\":92895,\"start\":92879},{\"end\":92913,\"start\":92895},{\"end\":93460,\"start\":93449},{\"end\":93479,\"start\":93460},{\"end\":93492,\"start\":93479},{\"end\":93945,\"start\":93931},{\"end\":93960,\"start\":93945},{\"end\":94404,\"start\":94390},{\"end\":94419,\"start\":94404},{\"end\":94431,\"start\":94419},{\"end\":94441,\"start\":94431},{\"end\":94451,\"start\":94441}]", "bib_venue": "[{\"end\":64446,\"start\":64383},{\"end\":64918,\"start\":64862},{\"end\":65398,\"start\":65336},{\"end\":66295,\"start\":66227},{\"end\":66747,\"start\":66685},{\"end\":67126,\"start\":67058},{\"end\":67599,\"start\":67547},{\"end\":68412,\"start\":68349},{\"end\":69870,\"start\":69788},{\"end\":71629,\"start\":71571},{\"end\":73412,\"start\":73362},{\"end\":74583,\"start\":74520},{\"end\":76117,\"start\":76053},{\"end\":76541,\"start\":76486},{\"end\":77945,\"start\":77879},{\"end\":78706,\"start\":78643},{\"end\":79316,\"start\":79264},{\"end\":79770,\"start\":79708},{\"end\":80875,\"start\":80812},{\"end\":81371,\"start\":81307},{\"end\":82368,\"start\":82314},{\"end\":83452,\"start\":83386},{\"end\":83958,\"start\":83888},{\"end\":84451,\"start\":84359},{\"end\":85165,\"start\":85110},{\"end\":85942,\"start\":85887},{\"end\":86413,\"start\":86361},{\"end\":87227,\"start\":87162},{\"end\":88412,\"start\":88357},{\"end\":88935,\"start\":88867},{\"end\":89370,\"start\":89300},{\"end\":89835,\"start\":89780},{\"end\":90383,\"start\":90304},{\"end\":91303,\"start\":91247},{\"end\":92468,\"start\":92388},{\"end\":93053,\"start\":92987},{\"end\":93614,\"start\":93557},{\"end\":94078,\"start\":94023},{\"end\":64381,\"start\":64312},{\"end\":64860,\"start\":64798},{\"end\":65334,\"start\":65266},{\"end\":65797,\"start\":65752},{\"end\":66225,\"start\":66151},{\"end\":66683,\"start\":66615},{\"end\":67056,\"start\":66982},{\"end\":67545,\"start\":67487},{\"end\":68017,\"start\":67974},{\"end\":68347,\"start\":68278},{\"end\":68669,\"start\":68593},{\"end\":69035,\"start\":69020},{\"end\":69379,\"start\":69332},{\"end\":69786,\"start\":69698},{\"end\":70127,\"start\":70102},{\"end\":70368,\"start\":70296},{\"end\":70762,\"start\":70720},{\"end\":71154,\"start\":71126},{\"end\":71569,\"start\":71505},{\"end\":72016,\"start\":71966},{\"end\":72355,\"start\":72325},{\"end\":72663,\"start\":72652},{\"end\":72952,\"start\":72910},{\"end\":73360,\"start\":73304},{\"end\":73864,\"start\":73816},{\"end\":74161,\"start\":74092},{\"end\":74518,\"start\":74449},{\"end\":74987,\"start\":74952},{\"end\":75244,\"start\":75179},{\"end\":75640,\"start\":75610},{\"end\":76051,\"start\":75981},{\"end\":76484,\"start\":76423},{\"end\":76866,\"start\":76796},{\"end\":77132,\"start\":77117},{\"end\":77460,\"start\":77445},{\"end\":77877,\"start\":77805},{\"end\":78214,\"start\":78173},{\"end\":78641,\"start\":78572},{\"end\":78975,\"start\":78908},{\"end\":79262,\"start\":79204},{\"end\":79706,\"start\":79638},{\"end\":80128,\"start\":80101},{\"end\":80405,\"start\":80303},{\"end\":80810,\"start\":80741},{\"end\":81305,\"start\":81235},{\"end\":81676,\"start\":81581},{\"end\":81942,\"start\":81911},{\"end\":82312,\"start\":82252},{\"end\":82650,\"start\":82633},{\"end\":82933,\"start\":82869},{\"end\":83384,\"start\":83312},{\"end\":83886,\"start\":83810},{\"end\":84357,\"start\":84259},{\"end\":84709,\"start\":84672},{\"end\":85108,\"start\":85047},{\"end\":85545,\"start\":85526},{\"end\":85885,\"start\":85824},{\"end\":86359,\"start\":86301},{\"end\":86722,\"start\":86665},{\"end\":87160,\"start\":87089},{\"end\":87636,\"start\":87623},{\"end\":87960,\"start\":87942},{\"end\":88355,\"start\":88294},{\"end\":88865,\"start\":88791},{\"end\":89298,\"start\":89222},{\"end\":89778,\"start\":89717},{\"end\":90302,\"start\":90217},{\"end\":90812,\"start\":90782},{\"end\":91245,\"start\":91183},{\"end\":91699,\"start\":91684},{\"end\":92018,\"start\":91991},{\"end\":92386,\"start\":92300},{\"end\":92985,\"start\":92913},{\"end\":93555,\"start\":93492},{\"end\":94021,\"start\":93960},{\"end\":94507,\"start\":94451}]"}}}, "year": 2023, "month": 12, "day": 17}