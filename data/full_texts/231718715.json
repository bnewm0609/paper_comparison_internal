{"id": 231718715, "updated": "2023-12-09 02:06:42.755", "metadata": {"title": "Achieving Linear Speedup with Partial Worker Participation in Non-IID Federated Learning", "authors": "[{\"first\":\"Haibo\",\"last\":\"Yang\",\"middle\":[]},{\"first\":\"Minghong\",\"last\":\"Fang\",\"middle\":[]},{\"first\":\"Jia\",\"last\":\"Liu\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2021, "month": 1, "day": 27}, "abstract": "Federated learning (FL) is a distributed machine learning architecture that leverages a large number of workers to jointly learn a model with decentralized data. FL has received increasing attention in recent years thanks to its data privacy protection, communication efficiency and a linear speedup for convergence in training (i.e., convergence performance increases linearly with respect to the number of workers). However, existing studies on linear speedup for convergence are only limited to the assumptions of i.i.d. datasets across workers and/or full worker participation, both of which rarely hold in practice. So far, it remains an open question whether or not the linear speedup for convergence is achievable under non-i.i.d. datasets with partial worker participation in FL. In this paper, we show that the answer is affirmative. Specifically, we show that the federated averaging (FedAvg) algorithm (with two-sided learning rates) on non-i.i.d. datasets in non-convex settings achieves a convergence rate $\\mathcal{O}(\\frac{1}{\\sqrt{mKT}} + \\frac{1}{T})$ for full worker participation and a convergence rate $\\mathcal{O}(\\frac{1}{\\sqrt{nKT}} + \\frac{1}{T})$ for partial worker participation, where $K$ is the number of local steps, $T$ is the number of total communication rounds, $m$ is the total worker number and $n$ is the worker number in one communication round if for partial worker participation. Our results also reveal that the local steps in FL could help the convergence and show that the maximum number of local steps can be improved to $T/m$. We conduct extensive experiments on MNIST and CIFAR-10 to verify our theoretical results.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/iclr/YangFL21", "doi": null}}, "content": {"source": {"pdf_hash": "433000baf18bb4403681fde5740bccd1fa2034a9", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2101.11203v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "68a9c0d7ac832ed439a30ca4b8274a958d8c5295", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/433000baf18bb4403681fde5740bccd1fa2034a9.txt", "contents": "\nPublished as a conference paper at ICLR 2021 ACHIEVING LINEAR SPEEDUP WITH PARTIAL WORKER PARTICIPATION IN NON-IID FEDERATED LEARNING\n\n\nHaibo Yang \nDepartment of Electrical and Computer Engineering\nThe Ohio State University Columbus\n43210OHUSA\n\nMinghong Fang \nDepartment of Electrical and Computer Engineering\nThe Ohio State University Columbus\n43210OHUSA\n\nJia Liu \nDepartment of Electrical and Computer Engineering\nThe Ohio State University Columbus\n43210OHUSA\n\nPublished as a conference paper at ICLR 2021 ACHIEVING LINEAR SPEEDUP WITH PARTIAL WORKER PARTICIPATION IN NON-IID FEDERATED LEARNING\n\nFederated learning (FL) is a distributed machine learning architecture that leverages a large number of workers to jointly learn a model with decentralized data. FL has received increasing attention in recent years thanks to its data privacy protection, communication efficiency and a linear speedup for convergence in training (i.e., convergence performance increases linearly with respect to the number of workers). However, existing studies on linear speedup for convergence are only limited to the assumptions of i.i.d. datasets across workers and/or full worker participation, both of which rarely hold in practice. So far, it remains an open question whether or not the linear speedup for convergence is achievable under non-i.i.d. datasets with partial worker participation in FL. In this paper, we show that the answer is affirmative. Specifically, we show that the federated averaging (FedAvg) algorithm (with two-sided learning rates) on non-i.i.d. datasets in non-convex settings achieves a convergence rate O( 1 \u221a mKT + 1 T ) for full worker participation and a convergence rate O( 1 \u221a nKT + 1 T ) for partial worker participation, where K is the number of local steps, T is the number of total communication rounds, m is the total worker number and n is the worker number in one communication round if for partial worker participation. Our results also reveal that the local steps in FL could help the convergence and show that the maximum number of local steps can be improved to T /m. We conduct extensive experiments on MNIST and CIFAR-10 to verify our theoretical results.Published as a conference paper at ICLR 2021\u2022 Time-varying partial worker participation (systems non-stationarity): With the flexibility for workers' participation in many scenarios (particularly in mobile edge computing), workers may randomly join or leave the FL system at will, thus rendering the active worker set stochastic and time-varying across communication rounds. Hence, it is often infeasible to wait for all workers' responses as in traditional distributed learning, since inactive workers or stragglers will significantly slow down the whole training process. As a result, only a subset of the workers may be chosen by the server in each communication round, i.e., partial worker participation.In recent years, the Federated Averaging method (FedAvg) and its variants(McMahan et al., 2016; Li et al., 2018; Hsu et al., 2019; Karimireddy et al., 2019; Wang et al., 2019a) have emerged as a prevailing approach for FL. Similar to the traditional distributed learning, FedAvg leverages local computation at each worker and employs a centralized parameter server to aggregate and update the model parameters. The unique feature of FedAvg is that each worker runs multiple local stochastic gradient descent (SGD) steps rather than just one step as in traditional distributed learning between two consecutive communication rounds. For i.i.d. datasets and the full worker participation setting, Stich (2018) and Yu et al. (2019b) proposed two variants of FedAvg that achieve a convergence rate of O( mK T + 1 \u221a mKT ) with a bounded gradient assumption for both strongly convex and nonconvex problems, where m is the number of workers, K is the local update steps and T is the total communication rounds. Wang & Joshi (2018) and Stich & Karimireddy (2019) further proposed improved FedAvg algorithms to achieve a O( m T + 1 \u221a mKT ) rate without bounded gradient assumption. Notably, for a sufficiently large T , the above rates become O( 1 \u221a mKT ) 1 , which implies a linear speedup with respect to the number of workers. 2 This linear speedup is highly desirable for an FL algorithm because the algorithm is able to effectively leverage the massive parallelism in a large FL system. However, with non-i.i.d. datasets and partial worker participation in FL, a fundamental open question arises: Can we still achieve the same linear speedup for convergence, i.e., O( 1 \u221a mKT ), with non-i.i.d. datasets and under either full or partial worker participation? \u2022 In order to achieve a linear speedup, i.e., a convergence rate O( 1 \u221a mKT ), we show that the number of local updates K can be as large as T /m, which improves the T 1/3 /m result previously shown in Yu et al. (2019a) and Karimireddy et al. (2019). As shown later in the communication complexity comparison inTable 1, a larger number of local steps implies relatively fewer communication rounds, thus less communication overhead. Interestingly, our results also indicate that the number of local updates K does not hurt but rather help the convergence with a proper learning rates choice. This overcomes the limitation as suggested in Li et al. (2019b) that local SGD steps might slow down the convergence (O( K T ) for strongly convex case). This result also reveals new insights on the relationship between the number of local steps and learning rate. 1 This rate also matches the convergence rate order of parallel SGD in conventional distributed learning. 2 To attain accuracy for an algorithm, it needs to take O( 1 2 ) steps with a convergence rate O( 1 \u221a T ), while needing O( 1 m 2 ) steps if the convergence rate is O( 1 \u221a mT ) (the hidden constant in Big-O is the same). In this sense, one achieves a linear speedup with respect to the number of workers.\n\nINTRODUCTION\n\nFederated Learning (FL) is a distributed machine learning paradigm that leverages a large number of workers to collaboratively learn a model with decentralized data under the coordination of a centralized server. Formally, the goal of FL is to solve an optimization problem, which can be decomposed as:\nmin x\u2208R d f (x) := 1 m m i=1 F i (x), where F i (x) E \u03bei\u223cDi [F i (x, \u03be i )]\nis the local (non-convex) loss function associated with a local data distribution D i and m is the number of workers. FL allows a large number of workers (such as edge devices) to participate flexibly without sharing data, which helps protect data privacy. However, it also introduces two unique challenges unseen in traditional distributed learning algorithms that are used typically for large data centers:\n\n\u2022 Non-independent-identically-distributed (non-i.i.d.) datasets across workers (data heterogeneity): In conventional distributed learning in data centers, the distribution for each worker's local dataset can usually be assumed to be i.i.d., i.e., D i = D, \u2200i \u2208 {1, ..., m}. Unfortunately, this assumption rarely holds for FL since data are generated locally at the workers based on their circumstances, i.e., D i = D j , for i = j. It will be seen later that the non-i.i.d assumption imposes significant challenges in algorithm design for FL and their performance analysis.\n\nIn this paper, we show the answer to the above question is affirmative. Specifically, we show that a generalized FedAvg with two-sided learning rates achieves linear convergence speedup with non-i.i.d. datasets and under full/partial worker participation. We highlight our contributions as follows:\n\n\u2022 For non-convex problems, we show that the convergence rate of the FedAvg algorithm on noni.i.d. dataset are O( 1 \u221a mKT + 1 T ) and O( 1 \u221a nKT + 1 T ) for full and partial worker participation, respectively, where n is the size of the partially participating worker set. This indicates that our proposed algorithm achieves a linear speedup for convergence rate for a sufficiently large T . When reduced to the i.i.d. case, our convergence rate is O( 1 T K + 1 \u221a mKT ), which is also better than previous works. We summarize the convergence rate comparisons for both i.i.d. and non-i.i.d. cases in Table 1. It is worth noting that our proof does not require the bounded gradient assumption. We note that the SCAFFOLD algorithm (Karimireddy et al., 2019) also achieves the same rate but extra variance reduction operations are required, which lead to high communication costs and implementation complexity. By contrast, we do not have such extra requirements in this paper.  Notation. In this paper, we let m be the total number of workers and S t be the set of active workers for the t-th communication round with size |S t | = n for some n \u2208 (0, m]. 3 We use K to denote the number of local steps per communication round at each worker. We let T be the number of total communication rounds. In addition, we use boldface to denote matrices/vectors. We let [\u00b7] i t,k represent the parameter of k-th local step in the i-th worker after the t-th communication. We use \u00b7 2 to denote the 2 -norm. For a natural number m, we use [m] to represent the set {1, \u00b7 \u00b7 \u00b7 , m}.\nIID Stich1 SC \u00d7 O( mK T + 1 \u221a mKT ) O( mK + 1 mK 2 ) Yu1 NC \u00d7 O( mK T + 1 \u221a mKT ) O( mK + 1 mK 2 ) Wang NC \u00d7 O( m T + 1 \u221a mKT ) O( m + 1 mK 2 ) Stich2 NC \u00d7 O( m T + 1 \u221a mKT ) O( m + 1 mK 2 ) This paper NC O( 1 T K + 1 \u221a mKT ) O( 1 K + 1 mK 2 ) NON- IID Khaled 1 C \u00d7 O( m T + 1 \u221a mT ) O( m + 1 mK 2 ) Yu2 2 NC \u00d7 O( m T K + 1 \u221a mKT ) O( m K + 1 mK 2 ) Li SC O( K T ) O( K ) Karimireddy 3 NC O( 1 T 2/3 + M \u221a SKT ) O( 1 3/2 + M SK 2 ) Karimireddy 4 NC O( 1 T + 1 \u221a mKT ) O( 1 + 1 mK 2 ) This paper 5 NC O( 1 T + 1 \u221a mKT ) O( 1 + 1mK\nThe rest of the paper is organized as follows. In Section 2, we review the literature to put our work in comparative perspectives. Section 3 presents the convergence analysis for our proposed algorithm. Section 4 discusses the implication of the convergence rate analysis. Section 5 presents numerical results and Section 6 concludes this paper. Due to space limitation, the details of all proofs and some experiments are provided in the supplementary material.\n\n\nRELATED WORK\n\nThe federated averaging (FedAvg) algorithm was first proposed by McMahan et al. (2016) for FL as a heuristic to improve communication efficiency and data privacy. Since then, this work has sparked many follow-ups that focus on FL with i.i.d. datasets and full worker participation (also known as LocalSGD (Stich, 2018;Yu et al., 2019b;Wang & Joshi, 2018;Stich & Karimireddy, 2019;Lin et al., 2018;Khaled et al., 2019a;Zhou & Cong, 2017)). Under these two assumptions, most of the theoretical works can achieve a linear speedup for convergence, i.e., O( 1 \u221a mKT ) for a sufficiently large T , matching the rate of the parallel SGD. In addition, LocalSGD is empirically shown to be communication-efficient and enjoys better generalization performance (Lin et al., 2018). For a comprehensive introduction to FL, we refer readers to Li et al. (2019a) and Kairouz et al. (2019).\n\nAlgorithm 1 A Generalized FedAvg Algorithm with Two-Sided Learning Rates.\nInitialize x 0 for t = 0, \u00b7 \u00b7 \u00b7 , T \u2212 1 do\nThe server samples a subset S t of workers with |S t | = n. for each worker i \u2208 S t in parallel do\nx i t,0 = x t for k = 0, \u00b7 \u00b7 \u00b7 , K \u2212 1 do Compute an unbiased estimate g i t,k = \u2207F i (x i t,k , \u03be i t,k ) of \u2207F i (x i t,k ). Local worker update: x i t,k+1 = x i t,k \u2212 \u03b7 L g i t,k . end for Let \u2206 i t = x i t,K \u2212 x i t,0 = \u2212\u03b7 L K\u22121 k=0 g i t,k . Send \u2206 i t to the server. end for At Server: Receive \u2206 i t , i \u2208 S. Let \u2206 t = 1 |S| i\u2208S \u2206 i t . Server Update: x t+1 = x t + \u03b7\u2206 t . Broadcasting x t+1 to workers. end for\nFor non-i.i.d. datasets, many works (Sattler et al., 2019;Zhao et al., 2018;Li et al., 2018;Wang et al., 2019a;Karimireddy et al., 2019;Huang et al., 2018;Jeong et al., 2018) heuristically demonstrated the performance of FedAvg and its variants. On convergence rate with full worker participation, many works (Stich et al., 2018;Yu et al., 2019a;Wang & Joshi, 2018;Karimireddy et al., 2019;Reddi et al., 2020) can achieve linear speedup, but their convergence rate bounds could be improved as shown in this paper. On convergence rate with partial worker participation, Li et al. (2019b) showed that the original FedAvg can achieve O(K/T ) for strongly convex functions, which suggests that local SGD steps slow down the convergence in the original FedAvg. Karimireddy et al. (2019) analyzed a generalized FedAvg with two-sided learning rates in strongly convex, convex and non-convex cases. However, as shown in Table 1, none of them indicates that linear speedup is achievable with non-i.i.d. datasets under partial worker participation. Note that the SCAFFOLD algorithm (Karimireddy et al., 2019) can achieve linear speedup but extra variance reduction operations are required, which lead to high communication costs and implementation complexity. In this paper, we show that this linear speedup can be achieved without any extra requirements. For more detailed comparisons and other algorithmic variants in FL and decentralized settings, we refer readers to Kairouz et al. (2019).\n\n\nLINEAR SPEEDUP OF THE GENERALIZED FEDAVG WITH TWO-SIDED LEARNING RATES FOR NON-IID DATASETS\n\nIn this paper, we consider a FedAvg algorithm with two-sided learning rates as shown in Algorithm 1, which is generalized from previous works (Karimireddy et al., 2019;Reddi et al., 2020). Here, workers perform multiple SGD steps using a worker optimizer to minimize the local loss on its own dataset, while the server aggregates and updates the global model using another gradient-based server optimizer based on the returned parameters. Specifically, between two consecutive communication rounds, each worker performs K SGD steps with the worker's local learning rate \u03b7 L . We assume an unbiased estimator in each step, which is denoted by g i t,k = \u2207F i (x i t,k , \u03be i t,k ), where \u03be i t,k is a random local data sample for k-th steps after t-th communication round at worker i. Then, each worker sends the accumulative parameter difference \u2206 i t to the server. On the server side, the server aggregates all the available \u2206 i t and updates the model parameters with a global learning rate \u03b7. The FedAvg algorithm with two-sided learning rates provides a natural way to decouple the learning of worker and server, thus utilizing different learning rate schedules on the worker and server sides. The original FedAvg can be viewed as a special case of this framework with learning rate on server side being one.\n\nIn what follows, we show that a linear speedup for convergence is achievable by the generalized FedAvg for non-convex functions on non-i.i.d. datasets. We first state our assumptions as follows. Assumption 1. (L-Lipschitz Continuous Gradient) There exists a constant L > 0, such that\n\u2207F i (x) \u2212 \u2207F i (y) \u2264 L x \u2212 y , \u2200x, y \u2208 R d , and i \u2208 [m].\nAssumption 2. (Unbiased Local Gradient Estimator) Let \u03be i t be a random local data sample in the t-th step at the i-th worker. The local gradient estimator is unbiased, i.e.,\nE[\u2207F i (x t , \u03be i t )] = \u2207F i (x t ), \u2200i \u2208 [m]\n, where the expectation is over the local datasets sample.\n\nAssumption 3. (Bounded Local and Global Variance) There exit two constants \u03c3 L > 0 and \u03c3 G > 0, such that the variance of each local gradient estimator is bounded by\nE[ \u2207F i (x t , \u03be i t )\u2212\u2207F i (x t ) 2 ] \u2264 \u03c3 2 L , \u2200i \u2208 [m]\n, and the global variability of the local gradient of the cost function is bounded by\n\u2207F i (x t ) \u2212 \u2207f (x t ) 2 \u2264 \u03c3 2 G , \u2200i \u2208 [m], \u2200t.\nThe first two assumptions are standard in non-convex optimization (Ghadimi & Lan, 2013;Bottou et al., 2018). For Assumption 3, the bounded local variance is also a standard assumption. We use a universal bound \u03c3 G to quantify the heterogeneity of the non-i.i.d. datasets among different workers.\n\nIn particular, \u03c3 G = 0 corresponds to i.i.d. datasets. This assumption is also used in other works for FL under non-i.i.d. datasets (Reddi et al., 2020;Yu et al., 2019b;Wang et al., 2019b) as well as in decentralized optimization (Kairouz et al., 2019). It is worth noting that we do not require a bounded gradient assumption, which is often used in FL optimization analysis.\n\n\nCONVERGENCE ANALYSIS FOR FULL WORKER PARTICIPATION\n\nIn this subsection, we first analyze the convergence rate of the generalized FedAvg with two-sided learning rates under full worker participation, for which we have the following result: Theorem 1. Let constant local and global learning rates \u03b7 L and \u03b7 be chosen as such that \u03b7 L \u2264 1 8LK and \u03b7\u03b7 L \u2264 1 KL . Under Assumptions 1-3 and with full worker participation, the sequence of outputs {x k } generated by Algorithm 1 satisfies:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where \u03a6 1 c [ L\u03b7\u03b7 L 2m \u03c3 2 L + 5K\u03b7 2 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G )], c is a constant, f 0 f (x 0 ), f * f (x * )\nand the expectation is over the local dataset samples among workers.\n\nRemark 1. The convergence bound contains two parts: a vanishing term f0\u2212f * c\u03b7\u03b7 L KT as T increases and a constant term \u03a6 whose size depends on the problem instance parameters and is independent of T . The vanishing term's decay rate matches that of the typical SGD methods.\n\nRemark 2. The first part of \u03a6 (i.e., L\u03b7\u03b7 L 2m \u03c3 2 L ) is due to the local stochastic gradients at each worker, which shrinks as 1 m as m increases. The cumulative variance of the K local steps contributes to the second term in \u03a6 (i.e., 5K\u03b7 2 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G )), which is independent of m and largely affected by the data heterogeneity. To make the second part small, an inverse relationship between the local learning rate and local steps should be satisfied, i.e., \u03b7 L = O( 1 K ). Specifically, note that the global and local variances are linearly amplified by K. This requires a sufficiently small \u03b7 L to offset the variance between two successive communication rounds to make the second term in \u03a6 small. This is consistent with the observation in strongly convex FL that a decaying learning rate is needed for FL to converge under non-i.i.d. datasets even if full gradients used in each worker (Li et al., 2019b). However, we note that our explicit inverse relationship between \u03b7 L and K in the above is new. Intuitively, the K local steps with a sufficiently small \u03b7 L can be viewed as one SGD step with a large learning rate.\n\nWith Theorem 1, we immediately have the following convergence rate for the generalized FedAvg algorithm with a proper choice of two-sided learning rates:\nCorollary 1. Let \u03b7 L = 1 \u221a T KL and \u03b7 = \u221a\nKm. The convergence rate of the generalized FedAvg algorithm under full worker participation is min t\u2208\n[T ] E[ \u2207f (x t ) 2 2 ] = O 1 \u221a mKT + 1 T .\nRemark 3. The generalized FedAvg algorithm with two-sided learning rates can achieve a linear speedup for non-i.i.d. datasets, i.e., a O( 1 \u221a mKT ) convergence rate as long as T \u2265 mK. Although many works have achieved this convergence rate asymptotically, we improve the maximum number of local steps K to T /m, which is significantly better than the state-of-art bounds such as T 1/3 /m shown in (Karimireddy et al., 2019;Yu et al., 2019a;Kairouz et al., 2019). Note that a larger number of local steps implies relatively fewer communication rounds, thus less communication overhead.\n\nSee also the communication complexity comparison in Table 1. For example, when T = 10 6 and m = 100 (as used in (Kairouz et al., 2019)), the local steps in our algorithm is K \u2264 T /m = 10 4 . However, K \u2264 T 1/3 m = 1 means that no extra local steps can be taken to reduce communication costs. Remark 4. When degenerated to the i.i.d. case (\u03c3 G = 0), the convergence rate becomes O( 1 T K + 1 \u221a mKT ), which has a better first term in the bound compared with previous work as shown in Table 1.\n\n\nCONVERGENCE ANALYSIS FOR PARTIAL WORKER PARTICIPATION\n\nPartial worker participation in each communication round may be more practical than full worker participation due to many physical limitations of FL in practice (e.g., excessive delays because of too many devices to poll, malfunctioning devices, etc.). Partial worker participation can also accelerate the training by neglecting stragglers. We consider two sampling strategies proposed by Li et al. (2018) and Li et al. (2019b). Let S t be the participating worker index set at communication round t with |S t | = n, \u2200t, for some n \u2208 (0, m]. S t is randomly and independently selected either with replacement (Strategy 1) or without replacement (Strategy 2) sequentially according to the sampling probabilities p i , \u2200i \u2208 [m]. For each member in S t , we pick a worker from the entire set [m] uniformly at random with probability\np i = 1 m , \u2200i \u2208 [m]\n. That is, selection likelihood for anyone worker i \u2208 S t is p = n m . Then we have the following results: Theorem 2. Under Assumptions 1-3 with partial worker participation, the sequence of outputs {x k } generated by Algorithm 1 with constant learning rates \u03b7 and \u03b7 L satisfies:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where f 0 = f (x 0 ), f * = f (x * )\nand the expectation is over the local dataset samples among workers.\n\nFor sampling Strategy 1, let \u03b7 and \u03b7 L be chosen as such that \u03b7 L \u2264 1 8LK , \u03b7\u03b7 L KL < n\u22121 n and\n30K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L n (90K 2 L 2 \u03b7 2 L + 3) < 1. It then holds that: \u03a6 1 c L\u03b7\u03b7 L 2n \u03c3 2 L + 3L\u03b7\u03b7 L 2n \u03c3 2 G + ( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 2n )(\u03c3 2 L + 6K\u03c3 2 G ) .\nFor sampling Strategy 2, let \u03b7 and \u03b7 L be chosen as such that \u03b7 L \u2264 1 8LK , \u03b7\u03b7 L KL \u2264 n(m\u22121) m(n\u22121) and\n10K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L m\u2212n n(m\u22121) (90K 2 \u03b7 2 L L 2 + 3) < 1.\nIt then holds that:\n\u03a6 1 c L\u03b7\u03b7 L 2n \u03c3 2 L +3L\u03b7\u03b7 L m \u2212 n 2n(m \u2212 1) \u03c3 2 G + 5K\u03b7 2 L L 2 2 +15K\u03b7\u03b7 3 L L 3 m \u2212 n 2n(m \u2212 1) (\u03c3 2 L +6K\u03c3 2 G ) .\nWith Theorem 2, we immediately have the following convergence rate for the generalized FedAvg algorithm with a proper choice of two-sided learning rates:\nCorollary 2. Let \u03b7 L = 1 \u221a T KL and \u03b7 = \u221a\nKn. The convergence rate of the generalized FedAvg algorithm under partial worker participation and both sampling strategies are:\nmin t\u2208[T ] E \u2207f (x t ) 2 2 \u2264 O 1 \u221a nKT + 1 T .\nRemark 5. The convergence rate bound for partial worker participation has the same structure but with a larger variance term. This implies that the partial worker participation by the uniform sampling does not result in fundamental changes in convergence (in order sense) except for an amplified variance due to fewer workers participating and random sampling. The intuition is that the uniform sampling (with/without replacement) for worker selection yields a good approximation of the entire worker distribution in expectation, which reduces the risk of distribution deviation due to the partial worker participation. As shown in Section 5, the distribution deviation due to fewer worker participation could render the training unstable, especially in highly non-i.i.d. cases. Remark 6. The generalized FedAvg with partial worker participation under non-i.i.d. datasets can still achieve a linear speedup O( 1 \u221a nKT ) with proper learning rate settings as shown in Corollary 2. In addition, when degenerated to i.i.d. case (\u03c3 G = 0), the convergence rate becomes O( 1 T K + 1 \u221a nKT ). Remark 7. Here, we let |S t | = n only for ease of presentation and better readability. We note that this is not a restrictive condition. We can show that |S t | = n can be relaxed to |S t | \u2265 n, \u2200t \u2208 [T ]) and the same convergence rate still holds. In fact, our full proof in Appendix A.2 is for |S t | \u2265 n.\n\n\nDISCUSSION\n\nIn light of above results, in what follows, we discuss several insights from the convergence analysis:\n\nConvergence Rate. We show that the generalized FedAvg algorithm with two-sided learning rates can achieve a linear speedup, i.e., an O( 1 \u221a mKT ) convergence rate with a proper choice of hyperparameters. Thus, it works well in large FL systems, where massive parallelism can be leveraged to accelerate training. The key challenge in convergence analysis stems from the different local loss functions (also called \"model drift\" in the literature) among workers due to the non-i.i.d. datasets and local steps. As shown above, we obtain a convergence bound for the generalized FedAvg method containing a vanishing term and a constant term (the constant term is similar to that of SGD). In contrast, the constant term in SGD is only due to the local variance. Note that, similar to SGD, the iterations do not diminish the constant term. The local variance \u03c3 2 L (randomness of stochastic gradients), global variability \u03c3 2 G (non-i.i.d. datasets), and the number of local steps K (amplification factor) all contribute to the constant term, but the total global variability in K local steps dominates the term. When the local learning rate \u03b7 L is set to an inverse relationship with respect to the number of local steps K, the constant term is controllable. An intuitive explanation is that the K local steps can be approximately viewed as one step in conventional SGD. So this speedup and the more local steps that are allowed can be largely attributed to the two-sided learning rates setting.\n\n\nNumber of Local\n\nSteps. Besides the result that the maximum number of local steps is improved to K \u2264 T /m, we also show that the local steps could help the convergence with the proper hyperparameter choices, which supports previous numerical results ( McMahan et al., 2016;Stich, 2018;Lin et al., 2018) and is verified in different models with different non-i.i.d. degree datasets in Section 5. However, there are other results showing the local steps slow down the convergence (Li et al., 2019b). We believe that whether local steps help or hurt the convergence in FL worths further investigations.\n\nNumber of Workers. We show that the convergence rate improves substantially as the the number of workers in each communication round increases. This is consistent with the results for i.i.d. cases in Stich (2018). For i.i.d. datasets, more workers means more data samples and thus less variance and better performance. For non-i.i.d. datasets, having more workers implies that the distribution of the sampled workers is a better approximation for the distribution of all workers. This is also empirically observed in Section 5. On the other hand, the sampling strategy plays an important role in non-i.i.d. case as well. Here, we adopt the uniform sampling (with/without replacement) to enlist workers to participate in FL. Intuitively, the distribution of the sampled workers' collective datasets under uniform sampling yields a good approximation of the overall data distribution in expectation.\n\nNote that, in this paper, we assume that every worker is available to participate once being enlisted. However, this may not always be feasible. In practice, the workers need to be in certain states in order to be able to participate in FL (e.g., in charging or idle states, etc. (Eichner et al., 2019)). Therefore, care must be taken in sampling and enlisting workers in practice. We believe that the joint design of sampling schemes and the generalized FedAvg algorithm will have significant impact on the convergence, which needs further investigations.\n\n\nNUMERICAL RESULTS\n\nWe perform extensive experiments to verify our theoretical results. We use three models: logistic regression (LR), a fully-connected neural network with 2 hidden layer (2NN) and a convolution neural network (CNN) with the non-i.i.d. version of MNIST (LeCun et al., 1998) and one ResNet model with CIFAR-10 (Krizhevsky et al., 2009). Due to space limitation, we relegate some experimental results in the supplementary material.\n\nIn this section, we elaborate the results under non-i.i.d. MNIST datasets for the 2NN. We distribute the MNIST dataset among m = 100 workers randomly and evenly in a digit-based manner such that the local dataset for each worker contains only a certain class of digits. The number of digits in each worker's dataset represents the non-i.i.d. degree. For digits_10, each worker has training/testing samples with ten digits from 0 to 9, which is essentially an i.i.d. case. For digits_1, each worker has samples only with one digit, which leads to highly non-i.i.d. datasets among workers. For partial worker participation, we set the number of workers n = 10 in each communication round. Impact of non-i.i.d. datasets. As shown in Figure 1(a), for the 2NN model with full worker participation, the top-row figures are for training loss versus communication round and the bottomrow are for test accuracy versus communication round. We can see that the generalized FedAvg algorithm converges under non-i.i.d. datasets with a proper learning rate choice in both cases. For five digits (digits_5) in each worker's dataset with full (partial) worker participation in Figure 1(a), the generalized FedAvg algorithm achieves a convergence speed comparable with that of i.i.d. case (digits_10). Another key observation is that non-i.i.d. datasets slow down the convergence under the same learning rate settings for both cases. The higher the non-i.i.d. degree, the slower the convergence speed. As the non-i.i.d. degree increases (from case digits_10 to case digits_1), it is obvious that the training loss is increasing and test accuracy is decreasing. This trend is more obvious from the zigzagging curves for partial worker participation. These two observations can also be verified for other models as shown in the supplementary material, which confirms our theoretical analysis. Impact of worker number. As shown in Figure 1(b), we compare the training loss and test accuracy between full worker participation n = 100 and partial worker participation n = 10 with the same hyper-parameters. Compared with full worker participation, partial worker participation introduces another source of randomness, which leads to zigzagging convergence curves and slower convergence. This problem is more prominent for highly non-i.i.d. datasets. For full worker participation, it can neutralize the the system heterogeneity in each communication round. However, it might not be able to neutralize the gaps among different workers for partial worker participation. That is, the datasets' distribution does not approximate the overall distribution well. Specifically, it is not unlikely that the digits in these datasets among all active workers are only a proper subset of the total 10 digits in the original MNIST dataset, especially with highly non-i.i.d. datasets. This trend is also obvious for complex models and complicated datasets as shown in the supplementary material. The sample strategy here is random sampling with equal probability without replacement. In practice, however, the actual sampling of the workers in FL could be more complex, which worths further investigations.\n\nImpact of local steps. One open question of FL is that whether the local steps help the convergence or not. In Figure 1(c), we show that the local steps could help the convergence for both full and partial worker participation. These results verify our theoretical analysis. However, Li et al. (2019b) showed that the local steps may hurt the convergence and confirmed it under unbalanced non-i.i.d. MNIST datasets. We believe it may be due to the combined effect of unbalanced datasets and local steps rather than just local steps only.  the same settings to achieve certain test accuracy, and the results are reported in Table 2. The non-i.i.d. dataset is for digits_2 and i.i.d. is for digits_10. The learning rates are \u03b7 L = 0.1, \u03b7 = 1.0, and number of local steps K is 5 epochs. We set the target accuracy = 95% for MNIST and = 75% for CIFAR-10. Note that the total training time contains two parts: i) the computation time for training the local model at each worker and ii) the communication time for information exchanges between the worker and server. We assume the bandwidth 20 MB/s for both uplink and downlink connections. For MNIST datasets, we can see that our algorithm is similar to or outperforms SCAFFOLD. This is because the communication rounds of both algorithms are relatively small for such simple tasks. For non-i.i.d. CIFAR-10, SCAFFOLD takes slightly fewer communication rounds than our FedAvg to achieve = 75% thanks to variance reduction. However, it takes more than 1.5 times of communication cost and wall-clock time compared to those of our FedAvg. Due to space limitation, we relegate the results of time proportions for computation and communication to Appendix B (see Fig. 7).\n\n\nCONCLUSIONS AND FUTURE WORK\n\nIn this paper, we analyzed the convergence of a generlized FedAvg algorithm with two-sided learning rates on non-i.i.d. datasets for general non-convex optimization. We proved that the generalized FedAvg algorithm achieves a linear speedup for convergence under full and partial worker participation. We showed that the local steps in FL could help the convergence and we improve the maximum number of local steps to T /m. While our work sheds light on theoretical understanding for FL, it also opens the doors to many new interesting questions in FL, such as how to sample optimally in partial worker participation, how to deal with active participant sets that are both time-varying and size-varying across communication rounds. We hope that the insights and proof techniques in this paper can pave the way for many new research in the aforementioned future directions. \n\n\nA APPENDIX I: PROOFS\n\nIn this section, we give the proofs in detail for full and partial worker participation in Section A.1 and Section A.2, respectively.\n\nA.1 PROOF OF THEOREM 1\n\nTheorem 1. Let constant local and global learning rates \u03b7 L and \u03b7 be chosen as such that \u03b7 L \u2264 1 8LK and \u03b7\u03b7 L \u2264 1 KL . Under Assumptions 1-3 and with full worker participation, the sequence of outputs {x k } generated by Algorithm 1 satisfies:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where \u03a6 1 c [ L\u03b7\u03b7 L 2m \u03c3 2 L + 5K\u03b7 2 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G )], c is a constant, f 0 f (x 0 )\n, f * f (x * ) and the expectation is over the local dataset samples among workers.\n\nProof. For convenience, we define\u2206 t\n1 |St| m i=1 \u2206 i t . Under full device participation (i.e., S t = [m]), it is clear that \u2206 t = 1 m m i=1 \u2206 i t =\u2206 t .\nDue to the smoothness in Assumption 1, taking expectation of f (x t+1 ) over the randomness at communication round t, we have:\nE t [f (x t+1 )] \u2264 f (x t ) + \u2207f (x t ), E t [x t+1 \u2212 x t ] + L 2 E t [ x t+1 \u2212 x t 2 ] = f (x t ) + \u2207f (x t ), E t [\u03b7\u2206 t + \u03b7\u03b7 L K\u2207f (x t ) \u2212 \u03b7\u03b7 L K\u2207f (x t )] + L 2 \u03b7 2 E t [ \u2206 t 2 ] = f (x t ) \u2212 \u03b7\u03b7 L K \u2207f (x t ) 2 + \u03b7 \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] A1 + L 2 \u03b7 2 E t [ \u2206 t 2 ] A2 .\n(1)\n\nNote that the term A 1 in (1) can be bounded as follows:\nA 1 = \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] = \u2207f (x t ), E t \u2212 1 m m i=1 K\u22121 k=0 \u03b7 L g i t,k + \u03b7 L K\u2207f (x t ) = \u2207f (x t ), E t \u2212 1 m m i=1 K\u22121 k=0 \u03b7 L \u2207F i (x i t,k ) + \u03b7 L K 1 m m i=1 \u2207F i (x t ) = \u03b7 L K\u2207f (x t ), \u2212 \u221a \u03b7 L m \u221a K E t m i=1 K\u22121 k=0 (\u2207F i (x i t,k ) \u2212 \u2207F i (x t )) (a1) = \u03b7 L K 2 \u2207f (x t ) 2 + \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 (\u2207F i (x i t,k ) \u2212 \u2207F i (x t )) 2 \u2212 \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 (a2) \u2264 \u03b7 L K 2 \u2207f (x t ) 2 + \u03b7 L 2m m i=1 K\u22121 k=0 E t \u2207F i (x i t,k ) \u2212 \u2207F i (x t ) 2 \u2212 \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 (a3) \u2264 \u03b7 L K 2 \u2207f (x t ) 2 + \u03b7 L L 2 2m m i=1 K\u22121 k=0 E t x i t,k \u2212 x t 2 \u2212 \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 (a4) \u2264 \u03b7 L K( 1 2 + 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + 5K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) \u2212 \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) where (a1) follows from that x, y = 1 2 [ x 2 + y 2 \u2212 x \u2212 y 2 ] for x = \u221a \u03b7 L K\u2207f (x t ) and y = \u2212 \u221a \u03b7 L m \u221a K m i=1 K\u22121 k=0 (\u2207F i (x i t,k ) \u2212 \u2207F i (x t )), (a2) is due to that E[ x 1 + \u00b7 \u00b7 \u00b7 + x n 2 ] \u2264\nnE[ x 1 2 + \u00b7 \u00b7 \u00b7 + x n 2 ] , (a3) is due to Assumption 1 and (a4) follows from Lemma 2.\n\nThe term A 2 in (1) can be bounded as:\nA 2 = E t [ \u2206 t 2 ] = E t 1 m m i=1 \u2206 i t 2 \u2264 1 m 2 E t m i=1 \u2206 i t 2 = \u03b7 2 L m 2 E t m i=1 K\u22121 k=0 g i t,k 2 (a5) = \u03b7 2 L m 2 E t m i=1 K\u22121 k=0 (g i t,k \u2212 \u2207F i (x i t,k )) 2 + \u03b7 2 L m 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 (a6) \u2264 K\u03b7 2 L m \u03c3 2 L + \u03b7 2 L m 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 ,(3)\nwhere (a5) follows from the fact that E[\nx 2 ] = E[ x \u2212 E[x] 2 ] + E[x] 2 ]\nand (a6) is due to the bounded variance assumption in Assumption 3 and the fact that\nE[ x 1 + \u00b7 \u00b7 \u00b7 + x n 2 ] = E[ x 1 2 + \u00b7 \u00b7 \u00b7 + x n 2 ] if x i s are independent with zero mean and E[g i t,j ] = \u2207F i (x i t,j )\n. Substituting the inequalities in (2) of A 1 and (3) of A 2 into inequality (1), we have:\nE t [f (x t+1 )] \u2264 f (x t ) \u2212 \u03b7\u03b7 L K \u2207f (x t ) 2 + \u03b7 < \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] > A1 + L 2 \u03b7 2 E t [ \u2206 t 2 ] A2 \u2264 f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2m \u03c3 2 L + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) \u2212 ( \u03b7\u03b7 L 2Km 2 \u2212 L\u03b7 2 \u03b7 2 L 2m 2 )E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 (a7) \u2264 f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 5K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2m \u03c3 2 L + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) (a8) \u2264 f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2m \u03c3 2 L + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ), where (a7) follows from ( \u03b7\u03b7 L 2Km 2 \u2212 L\u03b7 2 \u03b7 2 L 2m 2 ) \u2265 0 if \u03b7\u03b7 L \u2264 1 KL , (a8) holds because there exists a constant c > 0 satisfying ( 1 2 \u2212 15K 2 \u03b7 2 L L 2 ) > c > 0 if \u03b7 L < 1 \u221a 30KL .\nRearranging and summing from t = 0, \u00b7 \u00b7 \u00b7 , T \u2212 1, we have:\nT \u22121 t=0 c\u03b7\u03b7 L KE[\u2207f (x t )] \u2264 f (x 0 ) \u2212 f (x T ) + T (\u03b7\u03b7 L K) L\u03b7\u03b7 L 2m \u03c3 2 L + 5K\u03b7 2 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) which implies, min t\u2208[T ] E \u2207f (x t ) 2 2 \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where \u03a6 = 1 c [ L\u03b7\u03b7 L 2m \u03c3 2 L + 5K\u03b7 2 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G )]\n. This completes the proof.\n\n\nA.2 PROOF OF THEOREM 2\n\nTheorem 2. Under Assumptions 1-3 with partial worker participation, the sequence of outputs {x k } generated by Algorithm 1 with constant learning rates \u03b7 and \u03b7 L satisfies:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where f 0 = f (x 0 ), f * = f (x * )\nand the expectation is over the local dataset samples among workers.\n\nFor sampling Strategy 1, let \u03b7 and \u03b7 L be chosen as such that \u03b7 L \u2264 1 8LK , \u03b7\u03b7 L KL < n\u22121 n and 30K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L n (90K 2 L 2 \u03b7 2 L + 3) < 1. It then holds that:\n\u03a6 1 c L\u03b7\u03b7 L 2n \u03c3 2 L + 3L\u03b7\u03b7 L 2n \u03c3 2 G + ( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 2n )(\u03c3 2 L + 6K\u03c3 2 G ) .\nFor sampling Strategy 2, let \u03b7 and \u03b7 L be chosen as such that \u03b7 L \u2264 1 8LK , \u03b7\u03b7 L KL \u2264 n(m\u22121) m(n\u22121) and 10K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L m\u2212n n(m\u22121) (90K 2 \u03b7 2 L L 2 + 3) < 1. It then holds that:\n\u03a6 1 c L\u03b7\u03b7 L 2n \u03c3 2 L +3L\u03b7\u03b7 L m \u2212 n 2n(m \u2212 1) \u03c3 2 G + 5K\u03b7 2 L L 2 2 +15K\u03b7\u03b7 3 L L 3 m \u2212 n 2n(m \u2212 1) (\u03c3 2 L +6K\u03c3 2 G ) .\nProof. Let\u2206 t be defined the same as in the proof of Theorem 1. Under partial device participation,\nnote that\u2206 t = \u2206 t (recall that\u2206 t 1 m m i=1 \u2206 i t , \u2206 t = 1 n i\u2208St \u2206 i t ,\nand |S t | = n). The randomness for partial worker participation contains two parts: the random sampling and the stochastic gradient. We still use E t [\u00b7] to represent the expectation with respect to both types of randomness.\n\nDue to the smoothness assumption in Assumption 1, taking expectation of f (x t+1 ) over the randomness at communication round t:\nE t [f (x t+1 )] \u2264 f (x t ) + \u2207f (x t ), E t [x t+1 \u2212 x t ] + L 2 E t [ x t+1 \u2212 x t 2 ] = f (x t ) + \u2207f (x t ), E t [\u03b7\u2206 t + \u03b7\u03b7 L K\u2207f (x t ) \u2212 \u03b7\u03b7 L K\u2207f (x t )] + L 2 \u03b7 2 E t [ \u2206 t 2 ] = f (x t ) \u2212 \u03b7\u03b7 L K \u2207f (x t ) 2 + \u03b7 \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] A 1 + L 2 \u03b7 2 E t [ \u2206 t 2 ] A 2(4)\nThe term A 1 in (4) can be bounded as follows: Since E St [A 1 ] = A 1 due to Lemma 1 for both sampling strategies, we have the same bound as in inequality 2 for A 1 :\nA 1 \u2264 \u03b7 L K( 1 2 + 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + 5K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) \u2212 \u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 ,(5)\nFor strategy 1: We can bound A 2 in (4) as follows.\n\nNote S t is an index set (multiset) for independent sampling (equal probability) with replacement in which some elements may have the same value. Suppose S t = {l 1 , . . . , l n }.\nA 2 = E t [ \u2206 t 2 ] = E t 1 n i\u2208St \u2206 i t 2 = 1 n 2 E t i\u2208St \u2206 i t 2 = 1 n 2 E t n z=1 \u2206 lz t 2 (b1) = \u03b7 2 L n 2 E t n z=1 K\u22121 j=0 [g lz t,j \u2212 \u2207F lz (x lz t,j )] 2 + \u03b7 2 L n 2 E t n z=1 K\u22121 j=0 \u2207F lz (x lz t,j ) 2 (b2) \u2264 K\u03b7 2 L n \u03c3 2 L + \u03b7 2 L n 2 E t n z=1 K\u22121 j=0 \u2207F lz (x lz t,j ) 2 , where (b1) follows from the fact that E[ x 2 ] = E[ x \u2212 E[x] 2 ] + E[x] 2 ]\nand (b2) is due to the bounded variance assumption 3 and E[ x 1 + \u00b7 \u00b7 \u00b7 + x n 2 ] \u2264 nE[ x 1 2 + \u00b7 \u00b7 \u00b7 + x n 2 ].\n\n\nBy letting\nt i = K\u22121 j=0 \u2207F i (x i t,j ), we have: E t n z=1 K\u22121 j=0 \u2207F lz (x lz t,j ) 2 = E t n z=1 t lz 2 = E t n z=1 t lz 2 + i =j;li,lj \u2208St t li , t lj (b3) = E t n t l1 2 + n(n \u2212 1) t l1 , t l2 = n m m i=1 t i 2 + n(n \u2212 1) m 2 i,j\u2208[m] t i , t j = n m m i=1 t i 2 + n(n \u2212 1) m 2 m i=1 t i 2 ,\nwhere (b3) is due to the independent sampling with replacement.\n\nSo we can bound A 2 as follows.\nA 2 = E t [ \u2206 t 2 ] \u2264 K\u03b7 2 L n \u03c3 2 L + \u03b7 2 L mn m i=1 E t t i 2 + (n \u2212 1)\u03b7 2 L m 2 n E t m i=1 t i 2 ,(6)\nFor t i , we have:\nm i=1 E t t i 2 = m i=1 E t K\u22121 j=0 \u2207F i (x i t,j ) \u2212 \u2207F i (x t ) + \u2207F i (x t ) \u2212 \u2207f (x t ) + \u2207f (x t ) 2 (b4) \u2264 3KL 2 m i=1 E t x i t,j \u2212 x t 2 + 3mK\u03c3 2 G + 3mK \u2207f (x t ) 2 (b5) \u2264 15mK 2 L 2 \u03b7 2 L (\u03c3 2 L + 6K\u03c3 2 G ) + (90mK 3 L 2 \u03b7 2 L + 3mK) \u2207f (x t ) 2 + 3mK\u03c3 2 G ,(7)\nwhere (b4) is due to the fact that E[ x 1 + \u00b7 \u00b7 \u00b7 + x n 2 ] \u2264 nE[ x 1 2 + \u00b7 \u00b7 \u00b7 + x n 2 ] , Assumptions 3 and 1, and (b5) follows from Lemma 2.\n\nSubstituting the inequalities in ( 5) of A 1 and ( 6) of A 2 into inequality (4), we have:\nE t [f (x t+1 )] \u2264 f (x t ) \u2212 \u03b7\u03b7 L K \u2207f (x t ) 2 + \u03b7 \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] A 1 + L 2 \u03b7 2 E t [ \u2206 t 2 ] A 2 \u2264 f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) + (n \u2212 1)L\u03b7 2 \u03b7 2 L 2m 2 n \u2212 \u03b7\u03b7 L 2Km 2 E t m i=1 t i 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + L\u03b7 2 \u03b7 2 L 2mn m i=1 E t t i 2 (b6) \u2264 f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + L\u03b7 2 \u03b7 2 L 2mn m i=1 E t t i 2 (b7) \u2264 f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L 2n (90K 2 L 2 \u03b7 2 L + 3)) \u2207f (x t ) 2 + 5\u03b7K 2 \u03b7 3 L L 2 2 + 15K 2 L 3 \u03b7 2 \u03b7 4 L 2n (\u03c3 2 L + 6K\u03c3 2 G ) + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L 2n \u03c3 2 G (b8) \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L 2n \u03c3 2 G + \u03b7\u03b7 L K 5K\u03b7 2 L L 2 2 + 15K\u03b7 3 L \u03b7L 3 2n (\u03c3 2 L + 6K\u03c3 2 G ),(8)\nwhere (b6) follows from (n\u22121)L\u03b7 2 \u03b7 2 L 2m 2 n \u2212 \u03b7\u03b7 L 2Km 2 \u2264 0 if \u03b7\u03b7 L KL \u2264 n\u22121 n is due to inequality (7) and (b7) holds since there exists a constant c > 0 such that\n[ 1 2 \u221215K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L 2n (90K 2 L 2 \u03b7 2 L +3)] > c > 0 if 30K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L n (90K 2 L 2 \u03b7 2 L + 3) < 1.\nNote that the requirement of |S t | = n can be relaxed to |S t | \u2265 n. With p t \u2265 n workers in t-th communication round, 8 is\nE t [f (x t+1 )] \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2p t \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L 2p t \u03c3 2 G + \u03b7\u03b7 L K 5K\u03b7 2 L L 2 2 + 15K\u03b7 3 L \u03b7L 3 2p t (\u03c3 2 L + 6K\u03c3 2 G ) \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L 2n \u03c3 2 G + \u03b7\u03b7 L K 5K\u03b7 2 L L 2 2 + 15K\u03b7 3 L \u03b7L 3 2n (\u03c3 2 L + 6K\u03c3 2 G ).\nThat is, the same convergence rate can be guaranteed if at least n workers in each communication round (no need to be exactly n).\n\nRearranging and summing from t = 0, \u00b7 \u00b7 \u00b7 , T \u2212 1, we have the convergence for partial device participation with sampling strategy 1 as follows:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where \u03a6 = 1 c L\u03b7\u03b7 L 2n \u03c3 2 L + 3L\u03b7\u03b7 L 2n \u03c3 2 G + ( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 32n\n)(\u03c3 2 L + 6K\u03c3 2 G ) and c is a constant.\n\nFor strategy 2: Under the strategy of independent sampling with equal probability without replacement. We bound A 2 as follows.\nA 2 = E t [ \u2206 t 2 ] = E t 1 n i\u2208St \u2206 i t 2 = 1 n 2 E t i\u2208St \u2206 i t 2 = 1 n 2 E t m i=1 I{i \u2208 S t }\u2206 i t 2 = \u03b7 2 L n 2 E t m i=1 I{i \u2208 S t } K\u22121 j=0 [g i t,j \u2212 \u2207F i (x i t,j )] 2 + \u03b7 2 L n 2 E t m i=1 I{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j )] 2 = \u03b7 2 L n 2 E t m i=1 P{i \u2208 S t } K\u22121 j=0 [g i t,j \u2212 \u2207F i (x i t,j )] 2 + \u03b7 2 L n 2 m i=1 I{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j ) 2 (b9) = \u03b7 2 L nm E t m i=1 K\u22121 j=0 g i t,j \u2212 \u2207F i (x i t,j ) 2 + \u03b7 2 L n 2 E t m i=1 I{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j ) 2 (b10) \u2264 K\u03b7 2 L n \u03c3 2 L + \u03b7 2 L n 2 m i=1 P{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j ) 2 ,(9)\nwhere (b9) is due to the fact that E[ x 1 + \u00b7 \u00b7 \u00b7 + x n 2 ] = E[ x 1 2 + \u00b7 \u00b7 \u00b7 + x n 2 ] if x i s are independent with zero mean, x i = g i t,j \u2212 \u2207F i (x i t,j ) is independent random variable with mean zero, and P{i \u2208 S t } = n m . (b10) is due to bounded variance assumption in Assumption 3 Substituting the inequalities in (5) of A 1 and (9) of A 2 into inequality (4), we have:\nE t [f (x t+1 )] \u2264 \u2207f (x t ) \u2212 \u03b7\u03b7 L K \u2207f (x t ) 2 + \u03b7 \u2207f (x t ), E t [\u2206 t + \u03b7 L K\u2207f (x t )] A 1 + L 2 \u03b7 2 E t [ \u2206 t 2 ] A 2 \u2264 \u2207f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 ) \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 5\u03b7K 2 \u03b7 3 L L 2 2 (\u03c3 2 L + 6K\u03c3 2 G ) + L\u03b7 2 \u03b7 2 L 2n 2 E t m i=1 P{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j ) 2 \u2212 \u03b7\u03b7 L 2Km 2 E t m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 A 3 .\nThen we bound A 3 as follows.\n\nBy letting t i =\nK\u22121 j=0 \u2207F i (x i t,j ), we have: m i=1 E t t i 2 \u2264 15mK 2 L 2 \u03b7 2 L (\u03c3 2 L + 6K\u03c3 2 G ) + (90mK 3 L 2 \u03b7 2 L + 3mK) \u2207f (x t ) 2 + 3mK\u03c3 2 G .\nPublished as a conference paper at ICLR 2021\n\nIt then follows that\nm i=1 t i 2 = i\u2208[m] t i 2 + i =j < t i , t j > (b11) = i\u2208[m] m t i 2 \u2212 1 2 i =j t i \u2212 t j 2 m i=1 P{i \u2208 S t }t i 2 = i\u2208[m] P{i \u2208 S t } t i 2 + i =j P{i, j \u2208 S t } < t i , t j > (b12) = n m i\u2208[m] t i 2 + n(n \u2212 1) m(m \u2212 1) i =j < t i , t j > (b13) = n 2 m i\u2208[m] t i 2 \u2212 n(n \u2212 1) 2m(m \u2212 1) i =j t i \u2212 t j 2 ,\nwhere (b11) and (b13) are due to the fact that x, y = 1 2 [ x 2 + y 2 \u2212 x\u2212y 2 ] \u2264 1 2 [ x 2 + y 2 ], (b12) follows from the fact that P{i \u2208 S t } = n m and P{i, j \u2208 S t } = n(n\u22121) m(m\u22121) . Therefore, we have\nA 3 = L\u03b7 2 \u03b7 2 L 2n 2 m i=1 P{i \u2208 S t } K\u22121 j=0 \u2207F i (x i t,j )] 2 \u2212 \u03b7\u03b7 L 2Km 2 m i=1 K\u22121 k=0 \u2207F i (x i t,k ) 2 = ( L\u03b7 2 \u03b7 2 L 2m \u2212 \u03b7\u03b7 L 2Km ) m i=1 t i 2 + ( \u03b7\u03b7 L 4Km 2 \u2212 L\u03b7 2 \u03b7 2 L (n \u2212 1) 4mn(m \u2212 1) ) i =j t i \u2212 t j 2 (b14) = ( L\u03b7 2 \u03b7 2 L 2m \u2212 L\u03b7 2 \u03b7 2 L (n \u2212 1) 2n(m \u2212 1) ) m i=1 t i 2 \u2212 ( \u03b7\u03b7 L 2Km 2 \u2212 L\u03b7 2 \u03b7 2 L (n \u2212 1) 2mn(m \u2212 1) ) i\u2208[m] t i 2 (b15) \u2264 ( L\u03b7 2 \u03b7 2 L 2m \u2212 L\u03b7 2 \u03b7 2 L (n \u2212 1) 2n(m \u2212 1) ) m i=1 t i 2 = L\u03b7 2 \u03b7 2 L m \u2212 n 2mn(m \u2212 1) m i=1 t i 2 , where (b14) follows from the fact that i\u2208[m] t i 2 = i\u2208[m] m t i 2 \u2212 1 2 i =j t i \u2212 t j 2 , and (b15) is due to the fact that ( \u03b7\u03b7 L 2Km 2 \u2212 L\u03b7 2 \u03b7 2 L (n\u22121) 2mn(m\u22121) ) \u2265 0 if \u03b7\u03b7 L KL \u2264 n(m\u22121) m(n\u22121) . Then we have E t [f (x t+1 )] \u2264 \u2207f (x t ) \u2212 \u03b7\u03b7 L K( 1 2 \u2212 15K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L m \u2212 n 2n(m \u2212 1) (90K 2 \u03b7 2 L L 2 + 3)) \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L m \u2212 n 2n(m \u2212 1) \u03c3 2 G + \u03b7\u03b7 L K( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 m \u2212 n 2n(m \u2212 1) )(\u03c3 2 L + 6K\u03c3 2 G ) (b16) \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L m \u2212 n 2n(m \u2212 1) \u03c3 2 G + \u03b7\u03b7 L K( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 m \u2212 n 2n(m \u2212 1) )(\u03c3 2 L + 6K\u03c3 2 G ),(10)\nwhere (b16) holds because there exists a constant c > 0 satisfying (\n1 2 \u2212 5K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L m\u2212n 2n(m\u22121) (90K 2 \u03b7 2 L L 2 + 3)) > c > 0 if 10K 2 \u03b7 2 L L 2 \u2212 L\u03b7\u03b7 L m\u2212n n(m\u22121) (90K 2 \u03b7 2 L L 2 + 3) < 1.\nNote that the requirement of |S t | = n can be relaxed to |S t | \u2265 n. With p t \u2265 n workers in t-th communication round, 10 is\nE t [f (x t+1 )] \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2p t \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L m \u2212 p t 2p t (m \u2212 1) \u03c3 2 G + \u03b7\u03b7 L K( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 m \u2212 p t 2p t (m \u2212 1) )(\u03c3 2 L + 6K\u03c3 2 G ) + \u03b7\u03b7 L K 5K\u03b7 2 L L 2 2 + 15K\u03b7 3 L \u03b7L 3 2p t (\u03c3 2 L + 6K\u03c3 2 G ) \u2264 \u2207f (x t ) \u2212 c\u03b7\u03b7 L K \u2207f (x t ) 2 + LK\u03b7 2 \u03b7 2 L 2n \u03c3 2 L + 3KL\u03b7 2 \u03b7 2 L m \u2212 n 2n(m \u2212 1) \u03c3 2 G + \u03b7\u03b7 L K( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 m \u2212 n 2n(m \u2212 1) )(\u03c3 2 L + 6K\u03c3 2 G )\nThat is, the same convergence rate can be guaranteed if at least n workers in each communication round (no need to be exactly n).\n\nRearranging and summing from t = 0, \u00b7 \u00b7 \u00b7 , T \u2212 1, we have the convergence for partial device participation with sampling strategy 2 as follows:\nmin t\u2208[T ] E[ \u2207f (x t ) 2 2 ] \u2264 f 0 \u2212 f * c\u03b7\u03b7 L KT + \u03a6, where \u03a6 = 1 c L\u03b7\u03b7 L 2n \u03c3 2 L + 3L\u03b7\u03b7 L m\u2212n 2n(m\u22121) \u03c3 2 G + ( 5K\u03b7 2 L L 2 2 + 15K\u03b7\u03b7 3 L L 3 m\u2212n 2n(m\u22121) )(\u03c3 2 L + 6K\u03c3 2 G )\nand c is a constant. This completes the proof.\n\n\nA.2.1 KEY LEMMAS\n\nLemma 1 (Unbiased Sampling). For strategies 1 and 2, the estimator \u2206 t is unbiased, i.e.,\nE St [\u2206 t ] =\u2206 t .\nProof of Lemma 1. Let S t = {t 1 , \u00b7 \u00b7 \u00b7 , t n } with size n. Both for sampling strategies 1 and 2, each sampling distribution is identical. Then we have:\nE St [\u2206 t ] = 1 n E St [ ti\u2208St \u2206 ti t ] = 1 n E St [ n i=1 \u2206 ti t ] = E St [\u2206 t1 t ] = 1 m m i=1 \u2206 i t =\u2206 t .\n\nA.3 AUXILIARY LEMMAS\n\nLemma 2 (Lemma 4 in Reddi et al. (2020)). For any step-size satisfying \u03b7 L \u2264 1 8LK , we can have the following results:\n1 m m i=1 E[ x i t,k \u2212 x t 2 ] \u2264 5K\u03b7 2 L (\u03c3 2 L + 6K\u03c3 2 G ) + 30K 2 \u03b7 2 L \u2207f (x t ) 2 .\nProof. In order for this paper to be self-contained, we restate the proof of Lemma 4 in (Reddi et al., 2020) here.\n\nFor any worker i \u2208 [m] and k \u2208 [K], we have:\nE[ x i t,k \u2212 x t 2 ] = E[ x i t,k\u22121 \u2212 x t \u2212 \u03b7 L g t t,k\u22121 2 ] \u2264 E[ x i t,k\u22121 \u2212 x t \u2212 \u03b7 L (g t t,k\u22121 \u2212 \u2207F i (x i t,k\u22121 ) + \u2207F i (x i t,k\u22121 ) \u2212 \u2207F i (x t ) + \u2207F i (x t ) \u2212 \u2207f (x t ) + \u2207f (x t )) 2 ] \u2264 (1 + 1 2K \u2212 1 )E[ x i t,k\u22121 \u2212 x t 2 ] + E[ \u03b7 L (g t t,k\u22121 \u2212 \u2207F i (x i t,k\u22121 )) 2 ] + 6KE[ \u03b7 L (\u2207F i (x i t,k\u22121 ) \u2212 \u2207F i (x t )) 2 ] + 6KE[ \u03b7 L (\u2207F i (x t ) \u2212 \u2207f (x t ))) 2 ] + 6K \u03b7 L \u2207f (x t )) 2 \u2264 (1 + 1 2K \u2212 1 )E[ x i t,k\u22121 \u2212 x t 2 ] + \u03b7 2 L \u03c3 2 L + 6K\u03b7 2 L L 2 E[ x i t,k\u22121 \u2212 x t 2 ]+ 6K\u03b7 2 L \u03c3 2 G + 6K \u03b7 L \u2207f (x t )) 2 = (1 + 1 2K \u2212 1 + 6K\u03b7 2 L L 2 )E[ x i t,k\u22121 \u2212 x t 2 ] + \u03b7 2 L \u03c3 2 L + 6K\u03b7 2 L \u03c3 2 G + 6K \u03b7 L \u2207f (x t )) 2 \u2264 (1 + 1 K \u2212 1 )E[ x i t,k\u22121 \u2212 x t 2 ] + \u03b7 2 L \u03c3 2 L + 6K\u03b7 2 L \u03c3 2 G + 6K \u03b7 L \u2207f (x t )) 2\nUnrolling the recursion, we get:\n1 m m i=1 E[ x i t,k \u2212 x t 2 ] \u2264 k\u22121 p=0 (1 + 1 K \u2212 1 ) p [\u03b7 2 L \u03c3 2 L + 6K\u03c3 2 G + 6K\u03b7 2 L \u03b7 L \u2207f (x t )) 2 ] \u2264 (K \u2212 1)[(1 + 1 K \u2212 1 ) K \u2212 1][\u03b7 2 L \u03c3 2 L + 6K\u03c3 2 G + 6K\u03b7 2 L \u03b7 L \u2207f (x t )) 2 ] \u2264 5K\u03b7 2 L (\u03c3 2 L + 6K\u03c3 2 G ) + 30K 2 \u03b7 2 L \u2207f (x t ) 2\nThis completes the proof.\n\n\nB APPENDIX II: EXPERIMENTS\n\nWe provide the full detail of the experiments. We uses non-i.i.d. versions for MNIST and CIFAR-10, which are described as follows:\n\n\nB.1 MNIST\n\nWe study image classification of handwritten digits 0-9 in MNIST and modify the MNIST dataset to a non-i.i.d. version.\n\nTo impose statistical heterogeneity, we split the data based on the digits (p) they contain in their dataset. We distribute the data to m = 100 workers such that each worker contains only a certain class of digits with the same number of training/test samples. For example, for p = 1, each worker only has training/testing samples with one digit, which causes heterogeneity among different workers. For p = 10, each worker has samples with 10 digits, which is essentially i.i.d. case. In this way, we can use the digits in worker's local dataset to represent the non-i.i.d. degree qualitatively. In each communication round, 100 workers run K epochs locally in parallel and then the server samples n workers for aggregation and update. We make a grid-search experiments for the hyper-parameters as shown in Table 3. We run three models: multinomial logistic regression, fully-connected network with two hidden layers (2NN) (two 200 neurons hidden layers with ReLU followed by an output layer), convolutional neural network (CNN), as shown in Table 4. The results are shown in Figures 2, 3 and 4.  Unless stated otherwise, we use the following default parameter setting: the server learning rate and client learning rate are set to \u03b7 = 1.0 and \u03b7 L = 0.1, respectively. The local epochs is set to K = 10. The total number of clients is set to 100, and the clients partition number is set to n = 10. We use the same strategy to distribute the data over clients as suggested in McMahan et al. (2016). For the i.i.d.   setting, we evenly partition all the training data among all clients, i.e., each client observes 500 data; for the non-i.i.d. setting, we first sort the training data by label, then divide all the training data into 200 shards of size 250, and randomly assign two shards to each client. For the CIFAR-10 dataset, we train our classifier with the ResNet model. The results are shown in Figure 5 and Figure 6.\n\n\nB.3 DISCUSSION\n\nImpact of non-i.i.d. datasets. Figure 2 shows the results of training loss (top) and test accuracy (bottom) for three models under different non-i.i.d. datasets with full and partial worker participation on MNIST. We can see that the FedAvg algorithm converges under non-i.i.d. datasets with a proper learning rate choice in these cases. We believe that the major challenge in FL is the non-i.i.d. datasets. For these datasets with a lower degree of non-i.i.d., the FedAvg algorithm can achieve a good result compared with the i.i.d. case. For example, when the local dataset in each worker has five digits (p = 5) with full (partial) worker participation, the FedAvg algorithm achieves a convergence speed comparable with that of the i.i.d. case (p = 10). This result can be observed in Figure 2 for all three models. As the degree of non-i.i.d. datasets increases, its negative impact on the convergence is becoming more obvious. The higher the degree of non-i.i.d., the slower the convergence speed. As the non-i.i.d. degree increases (from case p = 10 to case p = 1), it is obvious that the training loss is increasing and test accuracy is decreasing. For these with high degree of non-i.i.d., the convergence curves oscillate and are highly unstable. This trend is more obvious for complex models such for CNN in Figure 2(c).\n\nImpact of worker number. For full worker participation, the server can have an accurate estimation of the system heterogeneity after receiving the updates for all workers and neutralize this heterogeneity in each communication round. However, partial worker participation introduces another source of randomness, which leads to zigzagging convergence curves and slower convergence. In each communication round, the server can only receive a subset of workers based on the sampling strategy. So the server could only have a coarse estimation of the system heterogeneity and might not be able to neutralize the heterogeneity among different workers for partial worker participation. This problem is more prominent for highly non-i.i.d. datasets. It is not unlikely that the digits in these datasets among all active workers are only a proper subset of the total 10 digits in the original MNIST dataset, especially with highly non-i.i.d. datasets. For example, for p = 1 with 10 workers in each communication round, it is highly likely that the datasets formed by these ten workers only includes certain small number of digits (say, 4 or 5) rather than total 10 digits. But for p = 5, it is the opposite, that is, the digits in these datasets among these 10 workers are highly likely to be 10. So in each communication round, the server can mitigate system heterogeneity since it covers the training samples with all 10 digits. This trend is more obvious for complex models and datasets given the dramatic drop of test accuracy in the result of CIFAR-10 in Figure 5.\n\nThe sample strategy here is random sampling with equal probability without replacement. In practice, the workers need to be in certain states in order to be able to participate in FL (e.g., in charging or idle states, etc. (Eichner et al., 2019)). Therefore, care must be taken in sampling and enlisting workers in practice. We believe that the joint design of sampling schemes, number of workers and the FedAvg algorithm will have a significant impact on the convergence, which needs further investigations.\n\nImpact of local steps. Figure 3 and Figure 4 shows the results of training loss (top) and test accuracy (bottom) for three models under different local steps with full and partial worker participation respectively. Figure 6 shows the impact of local steps in CIFAR-10. One open question of FL is that whether the local steps help the convergence or not. Li et al. (2019b) showed a convergence rate O( K T ), i.e., the local steps may hurt the convergence for full and partial worker participation. In this two figures, we can see that local steps could help the convergence for both full and partial worker participation. However, it only has a slight effect on the convergence compared to the effects of non-i.i.d. datasets and number of workers.\n\nvariate to perform variance reduction in each worker needs to update in each round. In this way, the communication time would be largely prolonged. \n\n2 ) 1\n1Full gradients are used for each worker. 2 Local momentum is used at each worker. 3 A FedAvg algorithm with two-sided learning rates. M 2 = O(1) + O(KS(1 \u2212 S m )). S = m (S = n) for full (partial) worker participation. 4 The SCAFFOLD algorithm in Karimireddy et al. (2019) for non-convex case. 5 The convergence rate becomes O( 1 T + 1 \u221a nKT ) under partial worker participation. 6 Shorthand notation for references: Stich1 := Stich (2018), Yu2 := Yu et al. (2019b), Wang:= Wang & Joshi (2018), Stich2:= Stich & Karimireddy (2019); Khaled:= Khaled et al. (2019b), Yu2:=Yu et al. (2019a), Li:= Li et al. (2019b), and Karimireddy:= Karimireddy et al. (2019). 7 Shorthand notation for convexity: SC: Strongly Convex, C: Convex, and NC: Non-Convex.\n\nFigure 1 :\n1Training loss (top) and test accuracy (bottom) for the 2NN model with hyper-parameters setting: local learning rate 0.1, global learning rate 1.0: (a) worker number 100, local steps 5 epochs; (b) local steps 5 epochs; (c) 5 digits in each worker's dataset.\n\n\nComparison with SCAFFOLD: Lastly, we compare with the SCAFFOLD algorithm (Karimireddy et al., 2019) since it also achieves the same linear speedup effect under non-i.i.d. datasets. We compare communication rounds, total communication load, and estimated wall-clock time under\n\nFigure 2 :Figure 3 :\n23Training loss (top) and test accuracy (bottom) for three models on MNIST with hyperparameters setting: local learning rate 0.1, global learning rate 1.0, local steps 5 epochs. Training loss (top) and test accuracy (bottom) for three models on MNIST with hyperparameters setting: local learning rate 0.1, global learning rate 1.0, worker number 100.B.2 CIFAR-10\n\nFigure 4 :\n4Training loss (top) and test accuracy (bottom) for three models on MNIST with hyperparameters setting: local learning rate 0.1, global learning rate 1.0, worker number 10.\n\nFigure 5 :\n5Test accuracy with respect to worker number on CIFAR-10 dataset.\n\nFigure 6 :\n6Test accuracy with respect to different local steps on CIFAR-10 dataset.\n\nFigure 7 :\n7Wall-clock time to achieve test accuracy = 75% on CIFAR-10 dataset.\n\nTable 1 :\n1Convergence rates of optimization methods for FL.Dataset \nAlgorithm 6 \nConvexity 7 Partial \nConvergence \nCommunication \nWorker \nRate \ncomplexity \n\n\n\nTable 2 :\n2Comparison with SCAFFOLD.Dataset \nIID or \nNon-IID \n\nWorker \nselected \nModel \n\nSCAFFOLD \nThis paper \n\n# of Round \nCommunication \ncost (MB) \n\nWall-clock \ntime (s) \n# of Round \nCommunication \ncost (MB) \n\nWall-clock \ntime (s) \n\nMNIST \n\nIID \n\nn = 10 \n\nLogistic \n3 \n0.36 \n0.32 \n3 \n0.18 \n0.22 \n2NN \n3 \n9.12 \n0.88 \n3 \n4.56 \n0.56 \nCNN \n3 \n26.64 \n2.23 \n3 \n13.32 \n1.57 \n\nn = 100 \n\nLogistic \n5 \n0.60 \n0.53 \n5 \n0.30 \n0.42 \n2NN \n5 \n15.20 \n1.51 \n8 \n12.16 \n1.49 \nCNN \n1 \n8.88 \n0.79 \n1 \n4.44 \n0.50 \n\nNon-IID \n\nn = 10 \n\nLogistic \n14 \n1.68 \n1.48 \n14 \n0.84 \n1.16 \n2NN \n14 \n42.55 \n4.23 \n14 \n21.28 \n2.46 \nCNN \n14 \n124.34 \n11.12 \n10 \n44.41 \n4.92 \n\nn = 100 \n\nLogistic \n7 \n0.84 \n0.72 \n11 \n0.66 \n0.91 \n2NN \n7 \n21.28 \n2.11 \n17 \n25.84 \n3.16 \nCNN \n17 \n150.98 \n13.50 \n7 \n31.08 \n3.51 \n\nCIFAR-10 \nIID \nn = 10 Resnet18 \n56 \n9548.07 \n583.24 \n44 \n3751.03 \n256.63 \nNon-IID n = 10 Resnet18 \n52 \n8866.06 \n539.50 \n61 \n5200.29 \n358.22 \n\nBandwidth = 20MB/s. \n\n\n\n\nXiang Li, Kaixuan Huang, Wenhao Yang, Shusen Wang, and Zhihua Zhang. On the convergence of fedavg on non-iid data. arXiv preprint arXiv:1907.02189, 2019b.Tao Lin, Sebastian U Stich, Kumar Kshitij Patel, and Martin Jaggi. Don't use large mini-batches, use \nlocal sgd. arXiv preprint arXiv:1808.07217, 2018. \n\nH Brendan McMahan, Eider Moore, Daniel Ramage, Seth Hampson, et al. Communication-efficient \nlearning of deep networks from decentralized data. arXiv preprint arXiv:1602.05629, 2016. \n\nSashank Reddi, Zachary Charles, Manzil Zaheer, Zachary Garrett, Keith Rush, Jakub Konecny, \nSanjiv Kumar, and H Brendan McMahan. Adaptive federated optimization. arXiv preprint \narXiv:2003.00295, 2020. \n\nFelix Sattler, Simon Wiedemann, Klaus-Robert M\u00fcller, and Wojciech Samek. Robust and \ncommunication-efficient federated learning from non-iid data. IEEE transactions on neural \nnetworks and learning systems, 2019. \n\nSebastian U Stich. Local sgd converges fast and communicates little. arXiv preprint arXiv:1805.09767, \n2018. \n\n\nTable 3 :\n3Hyper-parameters Tuning.Server Learning Rate \n\u03b7 \u2208 {1, 10} \nClient Learning Rate \n\u03b7 L \u2208 {0.001, 0.01, 0.1} \nLocal Epochs \nK \u2208 {1, 5, 10} \nClients Partition Number \nn \u2208 {10, 50, 100} \nNon-i.i.d. Degree \np \u2208 {1, 2, 5, 10} \n\n\n\nTable 4 :\n4CNN Architecture for MNIST.Layer Type \nSize \nConvolution + ReLu \n5 \u00d7 5 \u00d7 32 \nMax Pooling \n2 \u00d7 2 \nConvolution + ReLu \n5 \u00d7 5 \u00d7 64 \nMax Pooling \n2 \u00d7 2 \nFully Connected + ReLU 1024 \u00d7 512 \nFully Connected \n512 \u00d7 10 \n\n0 \n20 \n40 \n60 \n80 \n100 \nCommunication Round \n\n0.0 \n\n0.5 \n\n1.0 \n\n1.5 \n\n2.0 \n\n2.5 \n\nTraining Loss \n\ndigits_1,worker number = 100 \ndigits_2,worker number= 100 \ndigits_5,worker number= 100 \ndigits_10,worker number= 100 \ndigits_1,worker number = 10 \ndigits_2,worker number= 10 \ndigits_5,worker number= 10 \ndigits_10,worker number= 10 \n\n0 \n20 \n40 \n60 \n80 \n100 \nCommunication Round \n\n0.2 \n\n0.4 \n\n0.6 \n\n0.8 \n\n1.0 \n\nTest Accuracy \n\n\nFor simplicity and ease of presentation in this paper, we let |St| = n. We note that this is not a restrictive condition and our proofs and results still hold for |St| \u2265 n, which can be easily satisfied in practice.\n,(2)\ndigits_1, local steps = 1 digits_2, local steps = 1 digits_5, local steps = 1 digits_10, local steps = 1 digits_1,local steps = 5 digits_2,local steps = 5 digits_5,local steps = 5 digits_10,local steps = 5 digits_1,local steps = 10 digits_2,local steps = 10 digits_5,local steps = 10 digits_10,local steps = 10\nACKNOWLEDGEMENTSThis work is supported in part by NSF grants CAREER CNS-1943226, CIF-2110252, ECCS-1818791,  CCF-1934884, ONR grant ONR N00014-17-1-2417, and a Google Faculty Research Award.\nOptimization methods for large-scale machine learning. L\u00e9on Bottou, E Frank, Jorge Curtis, Nocedal, Siam Review. 602L\u00e9on Bottou, Frank E Curtis, and Jorge Nocedal. Optimization methods for large-scale machine learning. Siam Review, 60(2):223-311, 2018.\n", "annotations": {"author": "[{\"end\":245,\"start\":137},{\"end\":357,\"start\":246},{\"end\":463,\"start\":358}]", "publisher": null, "author_last_name": "[{\"end\":147,\"start\":143},{\"end\":259,\"start\":255},{\"end\":365,\"start\":362}]", "author_first_name": "[{\"end\":142,\"start\":137},{\"end\":254,\"start\":246},{\"end\":361,\"start\":358}]", "author_affiliation": "[{\"end\":244,\"start\":149},{\"end\":356,\"start\":261},{\"end\":462,\"start\":367}]", "title": "[{\"end\":134,\"start\":1},{\"end\":597,\"start\":464}]", "venue": null, "abstract": "[{\"end\":5916,\"start\":599}]", "bib_ref": "[{\"end\":8748,\"start\":8747},{\"end\":10254,\"start\":10233},{\"end\":10486,\"start\":10473},{\"end\":10503,\"start\":10486},{\"end\":10522,\"start\":10503},{\"end\":10548,\"start\":10522},{\"end\":10565,\"start\":10548},{\"end\":10586,\"start\":10565},{\"end\":10604,\"start\":10586},{\"end\":10935,\"start\":10917},{\"end\":11014,\"start\":10997},{\"end\":11040,\"start\":11019},{\"end\":11735,\"start\":11713},{\"end\":11753,\"start\":11735},{\"end\":11769,\"start\":11753},{\"end\":11788,\"start\":11769},{\"end\":11813,\"start\":11788},{\"end\":11832,\"start\":11813},{\"end\":11851,\"start\":11832},{\"end\":12006,\"start\":11986},{\"end\":12023,\"start\":12006},{\"end\":12042,\"start\":12023},{\"end\":12067,\"start\":12042},{\"end\":12086,\"start\":12067},{\"end\":12263,\"start\":12246},{\"end\":12775,\"start\":12749},{\"end\":13159,\"start\":13138},{\"end\":13424,\"start\":13398},{\"end\":13443,\"start\":13424},{\"end\":15641,\"start\":15620},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":15661,\"start\":15641},{\"end\":16003,\"start\":15983},{\"end\":16020,\"start\":16003},{\"end\":16039,\"start\":16020},{\"end\":16103,\"start\":16081},{\"end\":18149,\"start\":18131},{\"end\":19132,\"start\":19106},{\"end\":19149,\"start\":19132},{\"end\":19170,\"start\":19149},{\"end\":19429,\"start\":19407},{\"end\":20249,\"start\":20233},{\"end\":20271,\"start\":20254},{\"end\":25362,\"start\":25341},{\"end\":25374,\"start\":25362},{\"end\":25391,\"start\":25374},{\"end\":27437,\"start\":27411},{\"end\":27497,\"start\":27464},{\"end\":31068,\"start\":31051},{\"end\":48448,\"start\":48429},{\"end\":48725,\"start\":48705},{\"end\":51594,\"start\":51573},{\"end\":55181,\"start\":55159}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":57096,\"start\":56344},{\"attributes\":{\"id\":\"fig_1\"},\"end\":57366,\"start\":57097},{\"attributes\":{\"id\":\"fig_2\"},\"end\":57644,\"start\":57367},{\"attributes\":{\"id\":\"fig_3\"},\"end\":58029,\"start\":57645},{\"attributes\":{\"id\":\"fig_4\"},\"end\":58214,\"start\":58030},{\"attributes\":{\"id\":\"fig_5\"},\"end\":58292,\"start\":58215},{\"attributes\":{\"id\":\"fig_6\"},\"end\":58378,\"start\":58293},{\"attributes\":{\"id\":\"fig_7\"},\"end\":58459,\"start\":58379},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":58619,\"start\":58460},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":59551,\"start\":58620},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":60576,\"start\":59552},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":60810,\"start\":60577},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":61458,\"start\":60811}]", "paragraph": "[{\"end\":6234,\"start\":5932},{\"end\":6719,\"start\":6311},{\"end\":7294,\"start\":6721},{\"end\":7594,\"start\":7296},{\"end\":9159,\"start\":7596},{\"end\":10151,\"start\":9690},{\"end\":11041,\"start\":10168},{\"end\":11116,\"start\":11043},{\"end\":11258,\"start\":11160},{\"end\":13160,\"start\":11677},{\"end\":14567,\"start\":13256},{\"end\":14852,\"start\":14569},{\"end\":15086,\"start\":14912},{\"end\":15192,\"start\":15134},{\"end\":15359,\"start\":15194},{\"end\":15503,\"start\":15418},{\"end\":15849,\"start\":15554},{\"end\":16226,\"start\":15851},{\"end\":16711,\"start\":16281},{\"end\":16946,\"start\":16878},{\"end\":17222,\"start\":16948},{\"end\":18364,\"start\":17224},{\"end\":18519,\"start\":18366},{\"end\":18664,\"start\":18562},{\"end\":19293,\"start\":18709},{\"end\":19786,\"start\":19295},{\"end\":20673,\"start\":19844},{\"end\":20975,\"start\":20695},{\"end\":21137,\"start\":21069},{\"end\":21234,\"start\":21139},{\"end\":21509,\"start\":21406},{\"end\":21591,\"start\":21572},{\"end\":21863,\"start\":21710},{\"end\":22035,\"start\":21906},{\"end\":23478,\"start\":22083},{\"end\":23595,\"start\":23493},{\"end\":25086,\"start\":23597},{\"end\":25688,\"start\":25106},{\"end\":26587,\"start\":25690},{\"end\":27145,\"start\":26589},{\"end\":27593,\"start\":27167},{\"end\":30765,\"start\":27595},{\"end\":32477,\"start\":30767},{\"end\":33381,\"start\":32509},{\"end\":33539,\"start\":33406},{\"end\":33563,\"start\":33541},{\"end\":33808,\"start\":33565},{\"end\":34044,\"start\":33961},{\"end\":34082,\"start\":34046},{\"end\":34327,\"start\":34201},{\"end\":34620,\"start\":34617},{\"end\":34678,\"start\":34622},{\"end\":35780,\"start\":35692},{\"end\":35820,\"start\":35782},{\"end\":36159,\"start\":36119},{\"end\":36279,\"start\":36195},{\"end\":36498,\"start\":36408},{\"end\":37288,\"start\":37229},{\"end\":37565,\"start\":37538},{\"end\":37765,\"start\":37592},{\"end\":37927,\"start\":37859},{\"end\":38097,\"start\":37929},{\"end\":38381,\"start\":38196},{\"end\":38599,\"start\":38500},{\"end\":38901,\"start\":38676},{\"end\":39031,\"start\":38903},{\"end\":39491,\"start\":39324},{\"end\":39683,\"start\":39632},{\"end\":39866,\"start\":39685},{\"end\":40342,\"start\":40230},{\"end\":40705,\"start\":40642},{\"end\":40738,\"start\":40707},{\"end\":40863,\"start\":40845},{\"end\":41279,\"start\":41136},{\"end\":41371,\"start\":41281},{\"end\":42384,\"start\":42216},{\"end\":42629,\"start\":42505},{\"end\":43067,\"start\":42938},{\"end\":43213,\"start\":43069},{\"end\":43393,\"start\":43353},{\"end\":43522,\"start\":43395},{\"end\":44476,\"start\":44095},{\"end\":44871,\"start\":44842},{\"end\":44889,\"start\":44873},{\"end\":45074,\"start\":45030},{\"end\":45096,\"start\":45076},{\"end\":45610,\"start\":45403},{\"end\":46795,\"start\":46727},{\"end\":47058,\"start\":46933},{\"end\":47620,\"start\":47491},{\"end\":47766,\"start\":47622},{\"end\":47991,\"start\":47945},{\"end\":48101,\"start\":48012},{\"end\":48275,\"start\":48121},{\"end\":48528,\"start\":48409},{\"end\":48731,\"start\":48617},{\"end\":48777,\"start\":48733},{\"end\":49530,\"start\":49498},{\"end\":49804,\"start\":49779},{\"end\":49965,\"start\":49835},{\"end\":50097,\"start\":49979},{\"end\":52020,\"start\":50099},{\"end\":53369,\"start\":52039},{\"end\":54934,\"start\":53371},{\"end\":55444,\"start\":54936},{\"end\":56193,\"start\":55446},{\"end\":56343,\"start\":56195}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":6310,\"start\":6235},{\"attributes\":{\"id\":\"formula_1\"},\"end\":9689,\"start\":9160},{\"attributes\":{\"id\":\"formula_2\"},\"end\":11159,\"start\":11117},{\"attributes\":{\"id\":\"formula_3\"},\"end\":11676,\"start\":11259},{\"attributes\":{\"id\":\"formula_4\"},\"end\":14911,\"start\":14853},{\"attributes\":{\"id\":\"formula_5\"},\"end\":15133,\"start\":15087},{\"attributes\":{\"id\":\"formula_6\"},\"end\":15417,\"start\":15360},{\"attributes\":{\"id\":\"formula_7\"},\"end\":15553,\"start\":15504},{\"attributes\":{\"id\":\"formula_8\"},\"end\":16877,\"start\":16712},{\"attributes\":{\"id\":\"formula_9\"},\"end\":18561,\"start\":18520},{\"attributes\":{\"id\":\"formula_10\"},\"end\":18708,\"start\":18665},{\"attributes\":{\"id\":\"formula_11\"},\"end\":20694,\"start\":20674},{\"attributes\":{\"id\":\"formula_12\"},\"end\":21068,\"start\":20976},{\"attributes\":{\"id\":\"formula_13\"},\"end\":21405,\"start\":21235},{\"attributes\":{\"id\":\"formula_14\"},\"end\":21571,\"start\":21510},{\"attributes\":{\"id\":\"formula_15\"},\"end\":21709,\"start\":21592},{\"attributes\":{\"id\":\"formula_16\"},\"end\":21905,\"start\":21864},{\"attributes\":{\"id\":\"formula_17\"},\"end\":22082,\"start\":22036},{\"attributes\":{\"id\":\"formula_18\"},\"end\":33960,\"start\":33809},{\"attributes\":{\"id\":\"formula_19\"},\"end\":34200,\"start\":34083},{\"attributes\":{\"id\":\"formula_20\"},\"end\":34616,\"start\":34328},{\"attributes\":{\"id\":\"formula_21\"},\"end\":35691,\"start\":34679},{\"attributes\":{\"id\":\"formula_22\"},\"end\":36118,\"start\":35821},{\"attributes\":{\"id\":\"formula_23\"},\"end\":36194,\"start\":36160},{\"attributes\":{\"id\":\"formula_24\"},\"end\":36407,\"start\":36280},{\"attributes\":{\"id\":\"formula_25\"},\"end\":37228,\"start\":36499},{\"attributes\":{\"id\":\"formula_26\"},\"end\":37537,\"start\":37289},{\"attributes\":{\"id\":\"formula_27\"},\"end\":37858,\"start\":37766},{\"attributes\":{\"id\":\"formula_28\"},\"end\":38195,\"start\":38098},{\"attributes\":{\"id\":\"formula_29\"},\"end\":38499,\"start\":38382},{\"attributes\":{\"id\":\"formula_30\"},\"end\":38675,\"start\":38600},{\"attributes\":{\"id\":\"formula_31\"},\"end\":39323,\"start\":39032},{\"attributes\":{\"id\":\"formula_32\"},\"end\":39631,\"start\":39492},{\"attributes\":{\"id\":\"formula_33\"},\"end\":40229,\"start\":39867},{\"attributes\":{\"id\":\"formula_34\"},\"end\":40641,\"start\":40356},{\"attributes\":{\"id\":\"formula_35\"},\"end\":40844,\"start\":40739},{\"attributes\":{\"id\":\"formula_36\"},\"end\":41135,\"start\":40864},{\"attributes\":{\"id\":\"formula_37\"},\"end\":42215,\"start\":41372},{\"attributes\":{\"id\":\"formula_38\"},\"end\":42504,\"start\":42385},{\"attributes\":{\"id\":\"formula_39\"},\"end\":42937,\"start\":42630},{\"attributes\":{\"id\":\"formula_40\"},\"end\":43352,\"start\":43214},{\"attributes\":{\"id\":\"formula_41\"},\"end\":44094,\"start\":43523},{\"attributes\":{\"id\":\"formula_42\"},\"end\":44841,\"start\":44477},{\"attributes\":{\"id\":\"formula_43\"},\"end\":45029,\"start\":44890},{\"attributes\":{\"id\":\"formula_44\"},\"end\":45402,\"start\":45097},{\"attributes\":{\"id\":\"formula_45\"},\"end\":46726,\"start\":45611},{\"attributes\":{\"id\":\"formula_46\"},\"end\":46932,\"start\":46796},{\"attributes\":{\"id\":\"formula_47\"},\"end\":47490,\"start\":47059},{\"attributes\":{\"id\":\"formula_48\"},\"end\":47944,\"start\":47767},{\"attributes\":{\"id\":\"formula_49\"},\"end\":48120,\"start\":48102},{\"attributes\":{\"id\":\"formula_50\"},\"end\":48385,\"start\":48276},{\"attributes\":{\"id\":\"formula_51\"},\"end\":48616,\"start\":48529},{\"attributes\":{\"id\":\"formula_52\"},\"end\":49497,\"start\":48778},{\"attributes\":{\"id\":\"formula_53\"},\"end\":49778,\"start\":49531}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":8201,\"start\":8194},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":12596,\"start\":12589},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":19354,\"start\":19347},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":19785,\"start\":19778},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":31397,\"start\":31390},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":50913,\"start\":50906},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":51148,\"start\":51141}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":5930,\"start\":5918},{\"attributes\":{\"n\":\"2\"},\"end\":10166,\"start\":10154},{\"attributes\":{\"n\":\"3\"},\"end\":13254,\"start\":13163},{\"attributes\":{\"n\":\"3.1\"},\"end\":16279,\"start\":16229},{\"attributes\":{\"n\":\"3.2\"},\"end\":19842,\"start\":19789},{\"attributes\":{\"n\":\"4\"},\"end\":23491,\"start\":23481},{\"end\":25104,\"start\":25089},{\"attributes\":{\"n\":\"5\"},\"end\":27165,\"start\":27148},{\"attributes\":{\"n\":\"6\"},\"end\":32507,\"start\":32480},{\"end\":33404,\"start\":33384},{\"end\":37590,\"start\":37568},{\"end\":40355,\"start\":40345},{\"end\":48010,\"start\":47994},{\"end\":48407,\"start\":48387},{\"end\":49833,\"start\":49807},{\"end\":49977,\"start\":49968},{\"end\":52037,\"start\":52023},{\"end\":56350,\"start\":56345},{\"end\":57108,\"start\":57098},{\"end\":57666,\"start\":57646},{\"end\":58041,\"start\":58031},{\"end\":58226,\"start\":58216},{\"end\":58304,\"start\":58294},{\"end\":58390,\"start\":58380},{\"end\":58470,\"start\":58461},{\"end\":58630,\"start\":58621},{\"end\":60587,\"start\":60578},{\"end\":60821,\"start\":60812}]", "table": "[{\"end\":58619,\"start\":58521},{\"end\":59551,\"start\":58657},{\"end\":60576,\"start\":59708},{\"end\":60810,\"start\":60613},{\"end\":61458,\"start\":60850}]", "figure_caption": "[{\"end\":57096,\"start\":56352},{\"end\":57366,\"start\":57110},{\"end\":57644,\"start\":57369},{\"end\":58029,\"start\":57669},{\"end\":58214,\"start\":58043},{\"end\":58292,\"start\":58228},{\"end\":58378,\"start\":58306},{\"end\":58459,\"start\":58392},{\"end\":58521,\"start\":58472},{\"end\":58657,\"start\":58632},{\"end\":59708,\"start\":59554},{\"end\":60613,\"start\":60589},{\"end\":60850,\"start\":60823}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":28336,\"start\":28325},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":28767,\"start\":28756},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":29514,\"start\":29506},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":30886,\"start\":30878},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":32475,\"start\":32469},{\"end\":51187,\"start\":51175},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":52006,\"start\":51998},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":52019,\"start\":52011},{\"end\":52078,\"start\":52070},{\"end\":52835,\"start\":52827},{\"end\":53365,\"start\":53357},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":54933,\"start\":54925},{\"end\":55477,\"start\":55469},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":55490,\"start\":55482},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":55669,\"start\":55661}]", "bib_author_first_name": "[{\"end\":62241,\"start\":62237},{\"end\":62251,\"start\":62250},{\"end\":62264,\"start\":62259}]", "bib_author_last_name": "[{\"end\":62248,\"start\":62242},{\"end\":62257,\"start\":62252},{\"end\":62271,\"start\":62265},{\"end\":62280,\"start\":62273}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":3119488},\"end\":62434,\"start\":62182}]", "bib_title": "[{\"end\":62235,\"start\":62182}]", "bib_author": "[{\"end\":62250,\"start\":62237},{\"end\":62259,\"start\":62250},{\"end\":62273,\"start\":62259},{\"end\":62282,\"start\":62273}]", "bib_venue": "[{\"end\":62293,\"start\":62282}]"}}}, "year": 2023, "month": 12, "day": 17}