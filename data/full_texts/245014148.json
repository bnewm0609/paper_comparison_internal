{"id": 245014148, "updated": "2022-01-06 00:57:53.317", "metadata": {"title": "Chess fortresses, a causal test for state of the art Symbolic[Neuro] architectures", "authors": "[{\"middle\":[],\"last\":\"Steingrimsson\",\"first\":\"Hedinn\"}]", "venue": "2021 IEEE Conference on Games (CoG)", "journal": "2021 IEEE Conference on Games (CoG)", "publication_date": {"year": 2021, "month": null, "day": null}, "abstract": "The AI community\u2019s growing interest in causality is motivating the need for benchmarks that test the limits of neural network based probabilistic reasoning and state of the art search algorithms. In this paper we present such a benchmark, chess fortresses. To make the benchmarking task as challenging as possible, we compile a test set of positions in which the defender has a unique best move for entering a fortress defense formation. The defense formation can be invariant to adding a certain type of chess piece to the attacking side thereby defying the laws of probabilistic reasoning. The new dataset enables efficient testing of move prediction since every experiment yields a conclusive outcome, which is a significant improvement over traditional methods. We carry out extensive, large scale tests of the convolutional neural networks of Leela Chess Zero [1], an open source chess engine built on the same principles as AlphaZero (AZ), which has passed AZ in chess playing ability according to many rating lists. Our results show that a novel, experimental network, which was intended for efficient endgame play, performed best despite being one of the smallest networks.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/cig/Steingrimsson21", "doi": "10.1109/cog52621.2021.9619010"}}, "content": {"source": {"pdf_hash": "9a9c680a44acb09e33d9e9d2dd5d1ec65349e6aa", "pdf_src": "MergedPDFExtraction", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "bb942f05ceb03ab76d57edc2277970ef54ea29d1", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/9a9c680a44acb09e33d9e9d2dd5d1ec65349e6aa.txt", "contents": "\nChess fortresses, a causal test for state of the art Symbolic[Neuro] architectures\n\n\nHedinn Steingrimsson hedinn.steingrimsson@rice.edu \nElectrical and Computer Engineering\nRice University Houston\n77005TX\n\nChess fortresses, a causal test for state of the art Symbolic[Neuro] architectures\nIndex Terms-BenchmarkcausationinterventionDeep LearningConvolutional Neural NetworkHalting-Problemchess fortressesMonte Carlo Tree SearchAlphaZeroLeela Chess Zerological reasoninghuman cognitionmaterial invariance\nThe AI community's growing interest in causality is motivating the need for benchmarks that test the limits of neural network based probabilistic reasoning and state of the art search algorithms. In this paper we present such a benchmark, chess fortresses. To make the benchmarking task as challenging as possible, we compile a test set of positions in which the defender has a unique best move for entering a fortress defense formation. The defense formation can be invariant to adding a certain type of chess piece to the attacking side thereby defying the laws of probabilistic reasoning. The new dataset enables efficient testing of move prediction since every experiment yields a conclusive outcome, which is a significant improvement over traditional methods. We carry out extensive, large scale tests of the convolutional neural networks of Leela ChessZero [1], an open source chess engine built on the same principles as AlphaZero (AZ), which has passed AZ in chess playing ability according to many rating lists. Our results show that a novel, experimental network, which was intended for efficient endgame play, performed best despite being one of the smallest networks.\n\nI. INTRODUCTION\n\nDespite the success of deep learning based techniques such as AlphaZero (AZ), the AI community is interested in developing methods that can handle tasks that are of causal nature. For example, Judea Pearl, recently argued that \"all the impressive achievements of deep learning amount to just curve fitting\" [2]- [4]. Yoshua Bengio and Bernhard Sch\u00f6lkopf have also recently emphasized the importance of causal relations [5]. In this paper we pursue this line of research by examining the performance of symbolic[neuro] architectures (notation from [6], an architecture where a neural network runs as a subroutine within symbolic Monte Carlo Tree Search (MCT)), on an original, new benchmark which is of causal nature. The benchmark task is invariant to modifications, that do not change the key causal elements of the task. An example is presented in Figure 1, where the fortress is invariant to adding black white-squared bishops. An arbitrary number of white-squared black bishops can be added to the position without changing the fortress evaluation. The reason is that this type of a piece (which can only move on white squares) does not contribute to battling the key g5 square (which is on a black square), which is sufficiently protected by the white pieces. These characteristics beat the laws of probabilistic reasoning, where extra material typically means increased chances of winning the game. This feature makes the new benchmark especially challenging for neural based architectures.\n\nOur goal in this paper is to provide a new benchmark of logical nature -aimed at being challenging or a hard classwhich modern architectures can be measured against. This new dataset is provided in the Supplement 1 . Exploring hard classes has proven to be fruitful ground for fundamental architectural improvements in the past as shown by Olga Russakovsky's influential work on ImageNet's hard classes [7] and more recently ObjectNet [8].\n\nFollowing a long tradition in AI and more recently AZ [9], [10], we use chess as our experimental domain. For our simulations, we use Leela chess zero (lc0), an open source reverse engineered version of AZ [11], which is based on published information about AZ [12].\n\nIn our dataset we focus on fortresses. Fortresses are considered one of the most challenging concepts in chess, also for the latest chess engines [13]. Fortresses are a task of causal intervention. In a fortress scenario the defending side (There can for example be material disadvantage.), builds an impregnable barrier that the attacking side can not successfully breach. Whether a fortress is impregnable or breakable involves the full depth and complexity of chess which makes fortresses ideally suited for testing the limits of modern architectures. We explore what kinds of neural network modifications make partial progress on the fortress task.\n\nAZ is a general purpose architecture that has been applied to a wide range of tasks [14], [15] such as modeling the COVID-19 virus protein structure with AlphaFold [16].\n\nThe core AZ architecture [17], with the convolutional neural network having only a policy and a value head, is kept intact in subsequent DeepMind papers [17]. Architectural improvements which are motivated by testing a wide variety of different AZ Fig. 1: A fortress, which is invariant to adding extra black white-squared bishops, defies the laws of probabilistic reasoning. There can be either a white knight or bishop on the e7 square. The extra pieces do not contribute to battling the key g5 square.\n\ninspired neural work architectures, could potentially have a wide ranging impact.\n\nIn the work presented here, we tested all 66 of the main and experimental lc0 [1] convolutional neural networks which have been developed since the lc0 project started in 2018.\n\nWe created a novel fortress chess positions dataset, which has causality and logical intervention characteristics, see Figure 1. It emphasizes the importance of making progress. Each position in the dataset has a provably unique best move, which for a defending side leads to a fortress scenario or maintains it. We treat this move as the optimal strategy and measure the success rate of the different networks' preferred choices or policy in terms of matching this ground truth chess move.\n\nOur benchmark approach is different from the traditional approach for testing the performance of deep neural network architectures in chess, which is to let different architectures play full chess matches against each other. This approach is also used in self play. The architecture that wins more matches is considered superior.\n\nOne drawback of this approach is that a very high percentage of chess games played between expert players ends in a draw. This means that the large majority of the experiments are inconclusive. When AZ played Stockfish 8 in their first match, the draw rate was 83.9% (out of 1000 games), [10]. The overall score in this match was 57.45% (574.5 points out of possible 1000). A more recent result with a Leela (lc0) network (384x30-t60-3010) playing 100 games against the current version, Stockfish 11, ended with lc0 winning 52.5-47.5 [18], with 71% of the games ending in a draw. (See discussion [19].) Leela is not inferior to AZ in terms of chess strength, see [20] where a modern lc0 achieved a higher score against Stockfish 8, than AZ did. Generally top level chess games, both engine and human, show the same trend towards a draw as is also observed in the last World Championship match with all the 12 games ending in a draw. It can thus be argued that playing full chess games is inefficient in terms of achieving conclusive experimental outcomes.\n\nTo avoid this outcome, we focused on comparing the networks' most preferred move choices and position evaluation with ground truth data. By comparing the networks' performance on our carefully designed new dataset, we always get a conclusive result in terms of whether the network finds the correct move or not. Thus, no computational resources are wasted on inconclusive experiments.\n\nIn addition to comparing the policy head of the networks with our unique ground truth moves, we also analyze the network's value head, which expresses how feasible the neural network thinks a chess position is after a given move by the policy head (see Figure 2 for the architecture of the network). Given optimal play from both sides, a fortress position will end in a draw. We are interested in exploring how far the evaluation is from this ground truth. Our experimental results indicate that a modified deep learning (DL) network can enhance performance for chess fortresses, while saving computational costs due to a smaller network size.\n\nOur contributions are:\n\n\u2022 a new test dataset for entering as a defending side into a fortress chess position class, \u2022 an experimental evaluation of the impact of different modifications to the lc0 neural network using our new dataset and observe that a network with an additional moves left head consistently outperforms the others. \u2022 an efficient approach for evaluating state of the art chess architectures on hard chess position classes.\n\n\nII. RELATED WORK\n\nPreviously, it was believed that more data enabled training larger architectures with more expressive power, which enabled them to handle a more diverse set of tasks [21]. The self-play approach mastered by AZ was perhaps the pinnacle of this approach, creating a limitless quantity of data. Currently there is a growing consensus that more data is not enough and that the focus should shift towards fundamental architectural improvements with a special focus on logical reasoning and intervention tasks [2]- [6], [22]- [24].\n\n\nA. Fortresses\n\nA chess fortress is a local feature F in a given starting position such that (a) the game cannot be won by the attacker without destroying F, and (b) all sequences of play that break F expressly harm the attacker so that the attacker cannot win. In a fortress, invasion roads or critical squares are sufficiently defended, making it impossible to break the barrier with pawn breakthroughs or material sacrifices that eliminate key defending pieces. In other words, even if the superior side has a material or positional advantage, best play from both sides will still result in a draw (see Figure 1). Fortresses are generally considered to rank among the most challenging phenomena in chess. Nikolaos Ntirlis called fortresses in Appendix 2 Advanced Engine Management [13] \"one of the big problems in computer chess analysis.\"\n\nFortresses display a hardness feature associated generally with the Halting Problem. If a fortress can be broken, then the fact of breaking it is verifiable, otherwise we may not know whether its appearance of holding is because the algorithm has not searched long enough.\n\nPrior work on fortresses explored the different ways in which the attacking side could attempt to break a potential fortress position. All of these approaches involved a mini-max-based search [25] such as Stockfish and were designed to determine whether a given chess position is an impregnable fortress.\n\nA human chess player will approach fortresses as a logical reasoning and intervention task: first define critical squares and the optimal offensive and defensive formations and only then start a search process to determine whether the critical squares can be penetrated.\n\nThis human behavior inspired Eiko Bleicher's Freezer program [26], [27], which focuses on constraining the search space when searching for moves that might break the potential fortress. A human operator defines the results of boundary conditions (pawn moves and pawn or piece exchanges) and the possible defensive piece movements that seem to keep the potential fortress intact. The chess position needs to be close to a tablebases position [28]. Tablebases are chess positions which have been analytically solved using retrograde analysis. Given this constrained search space, Freezer is able to determine whether a chess position is a fortress or not.\n\nIn [29] all moves are searched to the same depth and the chess engine position evaluations at each depth are recorded. The focus is on finding moves which evaluation rises with increasing depth. A temporary concession might open up entry points for the attacking pieces. The most recent attempt with the Stockfish variant Crystal [30] penalizes moves that lead to cyclic, repetitive variations.\n\nIn the work presented here, unlike prior approaches, we focus on finding the unique correct moves for the defending side for entering a fortress. The idea is that this makes the task harder, since the defending side does not have the luxury of making any mistakes.\n\nB. Extended AlphaZero neural network architecture Figure 2 shows the extended AlphaZero neural network architecture as presented in [31]. It was developed for the purpose of making lc0's endgame play more effective [31], finishing off games where there is a winning position instead of maneuvering without making progress or so called \"trolling\" [32], [33]. It was trained with tablebases data, which includes how many moves are left to a checkmate given best play by both sides.\n\nThe vanilla AlphaZero architecture does not have the moves left head or \"horizon\" and has a value head as a direct output.\n\nThe advantage of splitting the value head into win, draw, loss (W, D, L) is that it provides more information about the position evaluation. For example a value head evaluation of zero could mean that W=0, D=100, L=0 or W=50, D=0, L=50. In the former case the position is a dead draw, while in the latter case the position is highly complicated and dynamic, with both sides having a chance, but a draw is an unlikely result. We refer to [9], [10], [34] for further details on the AZ architecture.\n\n\nC. Monte Carlo Tree Search\n\nWith MCTS different moves are searched to a different depths. For its search component, the AZ architecture and lc0 use the Polynomial Upper Confidence Trees (PUCT) [35] variant of the MCTS. PUCT is a best-first search. This is in contrast to mini-max search, which Stockfish uses, where all plausible moves tend to be searched to a similar depth. The original PUCT formula will assign a weight to each move, and select the move with the highest weight:\na t = P U CT (s, a) = argmax a Q(s, a) + U (s, a)(1)\nIn its most basic form, the PUCT formula has two components: Q, the mean action value or average game results across current simulations that took action a in state s, and U a regulating term which makes sure that moves, other than the moves that are thought to be best, also eventually get explored.\n\nU is calculated in its most basic form as:\nU (s, a) = c puct P (s, a) b N (s, b) 1 + N (s, a)\nwhere c puct is an adjustable constant, P (s, a) is the prior probability given by the policy output of the neural network, and N (s, a) is the visit count for action a at state s. We sum over all potential actions (b) in the numerator, and the visit count for the action under consideration (a) in the denominator. Therefore the less we have explored this action, the greater U will be. The U component of the PUCT formula thus encourages exploring moves suggested by the policy P (s, a).\n\nA recent development [36], adds another term to the PUCT formula renaming it as S = Q + U + moves left effect\n\nThe moves left effect comes from an experimental version of lc0 which adds a moves left head to the vanilla AZ architecture. It estimates how many moves are left of the chess game (until game ends).\n\nThe moves left effect is currently defined as (\u22121) * (a + b|Q| + cQ 2 )(dM ) where M is the number of moves that the network estimates are left of the game and a, b, c and d are pre-defined constants. With the additional moves left head, the neural network's role as a universal function approximator is changed from f : position \u2192 (value, bestmoves) to f : position \u2192 (win, draw, loose, bestmoves, \u2192 estimated number of moves lef t).\n\n\nIII. EXPERIMENTAL SETUP\n\nWe ran version, 24.1 of lc0's Monte Carlo Tree Search (MCTS), which is comparable to AZ. For the MCTS, we a) Fortresses dataset: To create the fortresses dataset, we searched the largest available chess composition database [38]. We also contacted known chess composition authors and got databases from their personal collection, which focused on the theme \"a positional draw\". We also got references to books which we searched and composition authors that focused on this theme. We contacted professional chess trainers and got fortress databases from their personal collection, which focus on fortresses that occurred in practical chess matches. We searched some of the largest collections of chess matches such as the Chessbase Mega 2021 [39] and Corr 2020 [40] databases. We used the Chessbase [39] chess database program to filter the resulting databases. This resulted in a database with 150 potential fortress games, each of which can potentially have many fortress positions. We filtered out positions that were in the tablebases [28] domain, since the these positions might have been included in the set of chess positions that the networks were trained on. Finally, we went through each game and position manually in search of chess positions, where there is a unique move for the defending side to enter the fortress. In order to make a network's task of finding the provably unique best move as hard as possible, we selected positions where the defending side must enter a fortress position from afar. In other words, the defending side is not yet in the fortress position, which means that an impregnable barrier has not yet been built, but there is provably a unique way to enter it. We filtered out positions where it was possible to arrive at the fortress scenario or find the correct move by the method of exclusion, meaning that all other moves lead to immediate material loss. We selected only positions which had a unique provably best move because we wanted to have a clear way to measure performance. This rigorous filtering resulted in 18 test positions in our dataset.\n\nOur objective was to gather all the relevant lc0 networks that have been trained since the lc0 project started in the year 2018. We selected all of the strongest networks and all of the experimental versions that tried out different modifications to the vanilla AZ architecture. The best networks included the ones on the lc0 best networks list [41], the final networks from the 2 https://drive.google.com/drive/folders/1du7P4vgi7X7kL9BTCZ6A2VKENGvzLY-B main lc0 training runs, and the most recent networks from the current runs [42]. We gathered networks from lc0 enthusiasts personal repositories [43]- [45]. We also got networks via the lc0 Discord channel [46]. The network which added a moves left head to the vanilla AZ architecture was found on Discord. It is also available on [31]. We collected 66 networks.\n\nWe chose the v0.24.1, of the lc0 MCTS engine [47] CUDA version, which resembles AZ (There have been subsequent improvements which move away from AZ). We chose the default engine parameters. The main variable, apart from the networks, was the number of nodes searched by the lc0 engine. We chose that metric rather than search time as was done in the original AZ paper [9] in order to make our experiments hardware independent. For a list of the 66 networks and the exact lc0 engine parameters see the supplementary material.\n\nSince we kept the MCTS fixed, we subsequently refer to move choices as the network's move choices, although more precisely a move is made by the network and the MCTS.\n\nIn the experiments, the networks were faced with each of the 18 fortress positions from our new dataset. As mentioned, each position has a unique provably best move. We registered the five most preferred moves of each of the networks at the different levels of nodes searched and compared it with the ground truth chess move. We also registered the chess position evaluation associated with each of the preferred five moves.\n\n\nIV. FINDING THE BEST ARCHITECTURE\n\nAll the selected networks were used together with a MCTS search as discussed in Section II to find the best move for entering a fortress position for each of the positions in our dataset. We varied the number of nodes searched for each position to investigate how the performance of the networks depends on the search effort.\n\nThe supplement 3 shows the results of these experiments for all 66 networks. The network 128x10-ccrl-moves-le consistently outperformed the other networks independent of the search effort. This network has an extra moves left head (see Figure 2 for the architecture of the network), tracking how many moves are left in the game, and is also one of the smallest networks tested. It is only 1/27th of the size of the 384x30-t60-3070 network, which is ranked as 8th best. We qualitatively observed, that searching more nodes may or may not lead to an improved performance, depending on the chosen network.\n\nFor improved visual clarity of the graphical representation, we selected the best networks based on the performance of their most preferred move choice. We ran the search with this subset of the networks to a higher node count. The results of those experiments are shown in Figure 3. We observe that all five best networks improve when given more time. We also observe that the best performance is achieved by 128x10-ccrlmoves-le, that correctly identified the best move in 72.2% of the positions when given enough time to search 2 21 nodes per move. This network has the additional moves left head and consistently performs best over the range of nodes searched.\n\nWe were interested in discovering which networks would be able to partially master the fortress positions and in how stable the performance would be when we varied the number of nodes searched. Thus, we considered not only the most preferred move of the networks, but the top five preferred moves.\n\nIn Figure 4 we see that not only is the most preferred move of the 128x10-ccrl-moves-le network better than the most preferred move of the other networks, its other less favored choices are also at least as good as the ones of the other networks. In terms of accumulated performance, it shows the best performance for all the up to five most preferred moves that we tested (results shown up to the accumulated best four).\n\nIn a fortress scenario, the correct winning percentage is 50% or a draw, assuming best play for both sides. MCTS will be slightly off this evaluation, favoring the side which has fewer possibilities for making a mistake. In our case this means that the evaluation would be slightly lower than 50%.\n\nWe see, however, in Figure 5 that all of the top 5 networks are overly pessimistic about their defensive chances. Thus, there is considerable room for improvement when it comes to showing understanding of the fortress concept with an evaluation that is close to the correct 50%. Surprisingly, we observe that more search depth leads to an even worse evaluation (negative slope of the best fit line), except for the best network, 128x10-ccrlmoves-le. a) Main empirical results: The moves left network, 128x10-ccrl-moves-le, outperforms the other architectures consistently in all the metrics measured and in every experiment despite it being one of the smallest of the networks tested.\n\nIt has a better first move choice and generally makes better move choices as seen by the fact that it maintains its lead when more than one move guess is allowed, for the accumulated percentage for the, 2, 3, 4 and 5 move choices (The results for the 2 nd , 3 rd and 5 th are not shown).\n\nIt is the only network whose value head has a positive best fit slope indicating that it benefits from searching more nodes -moving closer to the correct 50% winning percent evaluation. This is in contrast to the vanilla AZ architecture networks, which have a negative best fit line slope indicating that searching more nodes has a detrimental effect on their evaluation of fortress positions.\n\nThe value head of all the networks is off by a large margin from the correct evaluation of a draw indicating that despite the policy head of the moves left network performing well, its value head still lags behind in terms of evaluating the fortress scenario correctly. Nevertheless, the moves left network's value head is still closer to the correct value than the other networks, Fig. 4: The five best networks displayed based on the average of the match between their accumulated four best move choices and the provably unique best move. We see that the highest ranked network, the moves left network, outperforms the other networks over a wide range of nodes searched.\n\nespecially when more nodes are searched, as seen in Figure 5.\n\nA qualitative follow up experiment -the hard classes for the moves left head network\n\nIn order to understand why the moves left head is outperforming other neural networks on the fortress task, we carried out further qualitative tests. We entered the chess positions from the fortress dataset into a graphical user interface and had an expert chess player interpret the moves preference and evaluation of the moves left network in an attempt to understand its approach. We were especially interested in the chess positions in the dataset, that it did not master.\n\nThis qualitative analysis indicates that while learning to win games where there is a winning position quickly, the network also has learned to prolong defeat once faced with what it perceives as an inferior position. A hard class for it seems to be positions where two or more moves lead to a prolonged game or a plausible fortress, but only one of them leads to a genuine fortress. Also, the moves left architecture can underestimate transformative moves, such as sacrificial moves breaking the fortress. This is due to the search not giving enough attention to these sacrificial moves. Prior approaches such as Bratko's approach [29] with mini-max engines tried to find transformative moves and give them special attention in the form of a deeper search. The reason for this problem is that sacrificial moves get a low position evaluation score (Q value) at lower search depth, while the other moves that maintain the status quo have a higher Q value. MCTS searches the moves with a higher Q value deeper than others (see P U CT formula 1), and therefore does not pay enough attention to sacrificial moves. This problem is magnified if there are many possible neutral moves as in most/all our fortress positions. Thus, the architecture struggled with finding sacrificial moves that penetrated the defensive formation, but once such a move had been played or this move had been searched deeper, the evaluation started climbing, and it did realize its strength. Detailed qualitative analyses of the moves left hard classes are presented in the supplementary material.\n\nV. DISCUSSION, CONCLUSIONS AND FUTURE WORK Neuro and symbolic[neuro] architectures have achieved impressive results in a wide range of domains. As described in [2], [5], tasks of logical nature are perhaps their main Achilles heel. Following that reasoning, our paper presents a new benchmark which is of logical nature and explores which extension of the vanilla AZ architecture empirically results in progress being made on the challenging intervention task.\n\nAs expected, our new dataset for entering, as the defensive side, into a fortress scenario proved to be challenging. Surprisingly, a new experimental network, 128x10-ccrl-moves-le, designed for efficient endgame play which adds a moves left head to the neural network, tracking how many moves are left in the game, consistently outperformed the other networks despite being one of the smallest networks tested, only 1/27th of the size of the largest ones. The new architecture was designed for the purpose of finishing off superior endgame positions.\n\nA DeepMind paper [48] highlights a challenge of self play emphasizing the importance of exploring the agent state space Fig. 5: Winning probability for the networks' most preferred move. Red indicates that the move was the correct one, blue the value for an incorrect move guess. The correct move choices of the 128x10-ccrl-moves-le network are the only ones which evaluation does not decrease with more nodes searched as observed by the slope of the best fit line, although the evaluation is still far below 50%. and having diverse agents with a heterogeneous skill set rather than focusing on comparing the performance of the self-play generated agents. If none of the agents masters a part of the agent state space or a chess position class, then this position class will be a blind spot. Focusing on hard classes, such as chess fortresses, can help highlight this problem.\n\nA limitation of our work is that despite searching the largest possible chess composition collections [38], the largest databases with chess matches [39] and [40] and contacting well known composition authors and professional chess trainers and getting access to their personal collections, due to our rigorous filtering, our dataset size was only 18 chess positions. It is possible to extrapolate and augment the dataset in various ways, see Figure 1 e.g. where extra pieces are added to the attacking side. The resulting positions will, however, not be completely independent, since they will share the same logical theme. It is of interest to explore ways to gather a larger dataset. Fortresses are generally considered one of the very hardest chess phenomena, which according to [13], even chess professionals working in tandem with the latest engines struggle with. To our knowledge this is the first time that a dataset has been compiled which consists of positions where a defending side has to find unique best moves for entering a fortress.\n\nAnother limitation is that we show only one architecture where the moves left extension performs best. We leave it for follow up work to carry out an ablation study (removing the moves left head from the best performer) and adding a new moves left head to other architectures (e.g., the 2-5th best).\n\nWhen creating the fortress dataset, we excluded chess positions, where modern chess engines could find the unique correct move by the method of exclusion since all the other moves loose chess material immediately. It is possible that the moves left network is also finding the right moves by the method of elimination from its point of view, which is different. Although material does not change, the network's metric to consider how long the game will last, might lead it to preferring moves that prolong the game.\n\nIt is possible that ideas described in [49] for proving program termination could be explored including moving away from the search for a single ranking function and toward a search for a set of ranking functions. Using ideas from Bratko [29] and specialized Stockfish implementations such as Crystal [30] a new type of a ranking function could be added to the MCTS algorithm to give more attention to transformative moves. These approaches place emphasis on moves that rise in evaluation with a deeper search, and as is the case in Crystal, penalizing, when having a favorable position, chess variations that lead to repetitive cycles of moves where progress is not made. Another possibility is that the MCTS treats the move choice as either status quo or a transformative move and splits the nodes search between these two types of a choices.\n\nWe also may explore whether the new moves left head architecture can play a similar role as the human operator in the Freezer program [26], [27], restricting the search space after which a mini-max engine can finish off the job to decide whether a position is a fortress or not.\n\nIn conclusion, our evaluation of a new dataset comprised of hard classes of chess positions indicates that a moves left head can improve the performance of the AZ architecture in chess. Since AZ is a general purpose architecture, this extension to the architecture could have positive impact on a range of similar domains. For example, tasks associated with the Halting Problem may benefit in a way similar to chess fortresses. The tasks can have logical characteristics and invariant properties such as not being sensitive to the addition of a certain type of extra material or chess pieces, which defies the laws of probabilistic reasoning.\n\nFig. 2 :\n2The AlphaZero neural network architecture with an additional moves left head and a split value head chose the lc0 default value which is c puct = 2.15[37] (see Supplement 2 for a complete list of the lc0 parameters).\n\nFig. 3 :\n3Entering a fortress with a larger number of maximum nodes searched. The five best networks displayed based on the average of the match between their most preferred move choice and the ground truth moves.\nhttps://drive.google.com/drive/folders/1du7P4vgi7X7kL9BTCZ6A2VKENGvzLY-B 978-1-6654-3886-5/21/$31.00 \u00a92021 IEEE\nhttps://drive.google.com/drive/folders/1du7P4vgi7X7kL9BTCZ6A2VKENGvzLY-B\n\nLeela chess zero. L C , Z. open source community. L. C. Z. open source community, \"Leela chess zero,\" 2020, [Online;\n\nradical empiricism and machine learning research,\" causal analysis in theory and practice (blog). J Pearl, 2020J. Pearl, \"\"radical empiricism and machine learning research,\" causal analysis in theory and practice (blog),\" 2020.\n\npossible minds: twenty-five ways of looking at ai. the limitations of opaque learning machines--, \"\"the limitations of opaque learning machines,\" possible minds: twenty-five ways of looking at ai,\" 2019.\n\n. J Pearl, D Mackenzie, ai can't reason whyJ. Pearl and D. Mackenzie, \"\"ai can't reason why,\",\" 2018.\n\nTowards causal representation learning. B Sch\u00f6lkopf, F Locatello, S Bauer, N R Ke, N Kalchbrenner, A Goyal, Y Bengio, B. Sch\u00f6lkopf, F. Locatello, S. Bauer, N. R. Ke, N. Kalchbrenner, A. Goyal, and Y. Bengio, \"Towards causal representation learning,\" 2021.\n\nThe third ai summer, aaai 2020 robert s. engelmore memorial award lecture. H Kautz, H. Kautz, \"The third ai summer, aaai 2020 robert s. engelmore memorial award lecture,\" Youtube, 2020. [Online]. Available: https: //www.youtube.com/watch?v= cQITY0SPiw\n\nImageNet Large Scale Visual Recognition Challenge. O Russakovsky, J Deng, H Su, J Krause, S Satheesh, S Ma, Z Huang, A Karpathy, A Khosla, M Bernstein, A C Berg, L Fei-Fei, International Journal of Computer Vision (IJCV). 1153O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein, A. C. Berg, and L. Fei-Fei, \"ImageNet Large Scale Visual Recognition Challenge,\" International Journal of Computer Vision (IJCV), vol. 115, no. 3, pp. 211-252, 2015.\n\nObjectnet: A large-scale bias-controlled dataset for pushing the limits of object recognition models. A Barbu, D Mayo, J Alverio, W Luo, C Wang, D Gutfreund, J Tenenbaum, B Katz, Advances in Neural Information Processing Systems. H. Wallach, H. Larochelle, A. Beygelzimer, F. d\u00c1lch\u00e9-Buc, E. Fox, and R. GarnettCurran Associates, Inc32A. Barbu, D. Mayo, J. Alverio, W. Luo, C. Wang, D. Gutfreund, J. Tenenbaum, and B. Katz, \"Objectnet: A large-scale bias-controlled dataset for pushing the limits of object recognition models,\" in Advances in Neural Information Processing Systems 32, H. Wallach, H. Larochelle, A. Beygelzimer, F. d\u00c1lch\u00e9-Buc, E. Fox, and R. Garnett, Eds. Curran Associates, Inc., 2019, pp. 9453-9463.\n\nMastering chess and shogi by self-play with a general reinforcement learning algorithm. D Silver, T Hubert, J Schrittwieser, I Antonoglou, M Lai, A Guez, M Lanctot, L Sifre, D Kumaran, T Graepel, T P Lillicrap, K Simonyan, D Hassabis, abs/1712.01815CoRR. D. Silver, T. Hubert, J. Schrittwieser, I. Antonoglou, M. Lai, A. Guez, M. Lanctot, L. Sifre, D. Kumaran, T. Graepel, T. P. Lillicrap, K. Simonyan, and D. Hassabis, \"Mastering chess and shogi by self-play with a general reinforcement learning algorithm,\" CoRR, vol. abs/1712.01815, 2017.\n\nA general reinforcement learning algorithm that masters chess, shogi, and go through self-play. D Silver, T Hubert, J Schrittwieser, I Antonoglou, M Lai, A Guez, M Lanctot, L Sifre, D Kumaran, T Graepel, T Lillicrap, K Simonyan, D Hassabis, Science. 3626419D. Silver, T. Hubert, J. Schrittwieser, I. Antonoglou, M. Lai, A. Guez, M. Lanctot, L. Sifre, D. Kumaran, T. Graepel, T. Lillicrap, K. Simonyan, and D. Hassabis, \"A general reinforcement learning algorithm that masters chess, shogi, and go through self-play,\" Science, vol. 362, no. 6419, pp. 1140-1144, 2018. [Online]. Available: https://science.sciencemag.org/content/362/6419/1140\n\nReproducibility via crowdsourced reverse engineering: A neural network case study with deepmind's alpha zero. D Tanksley, D Wunsch, abs/1909.03032CoRR. D. Tanksley and D. Wunsch, \"Reproducibility via crowdsourced reverse engineering: A neural network case study with deepmind's alpha zero,\" CoRR, vol. abs/1909.03032, 2019. [Online]. Available: http://arxiv.org/abs/1909.03032\n\nAlphazero paper, and lc0 v0.19.1. crem, \"Alphazero paper, and lc0 v0.19.1,\" dec 2018. [Online]. Available: https://lczero.org/blog/2018/12/alphazero-paper-and-lc0-v0191\n\ngrandmaster preparation -thinking inside the box, appendix 2 advanced engine management by nikolaos ntirlis. J Aagaard, N Ntirlis, J. Aagaard and N. Ntirlis, \"\"grandmaster preparation -thinking inside the box, appendix 2 advanced en- gine management by nikolaos ntirlis\",\" 2018. [Online].\n\nGame Changer: AlphaZero's Groundbreaking Chess Strategies and the Promise of AI. M Sadler, N Regan, New in ChessM. Sadler and N. Regan, Game Changer: AlphaZero's Groundbreaking Chess Strategies and the Promise of AI. New in Chess, 2019. [Online].\n\nDavid silver: Alphago, alphazero, and deep reinforcement learning -ai podcast #86 with lex fridman. L Fridman, YoutubeL. Fridman, \"David silver: Alphago, alphazero, and deep reinforcement learning -ai podcast #86 with lex fridman,\" Youtube, apr 2020. [Online].\n\nImproved protein structure prediction using potentials from deep learning. A Senior, R Evans, J Jumper, J Kirkpatrick, L Sifre, T Green, C Qin, A \u017d\u00eddek, A Nelson, A Bridgland, H Penedones, S Petersen, K Simonyan, S Crossan, P Kohli, D Jones, D Silver, K Kavukcuoglu, D Hassabis, Nature. 577A. Senior, R. Evans, J. Jumper, J. Kirkpatrick, L. Sifre, T. Green, C. Qin, A.\u017d\u00eddek, A. Nelson, A. Bridgland, H. Penedones, S. Petersen, K. Simonyan, S. Crossan, P. Kohli, D. Jones, D. Silver, K. Kavukcuoglu, and D. Hassabis, \"Improved protein structure prediction using potentials from deep learning,\" Nature, vol. 577, pp. 1-5, 01 2020.\n\nMastering atari, go, chess and shogi by planning with a learned model. J Schrittwieser, I Antonoglou, T Hubert, K Simonyan, L Sifre, S Schmitt, A Guez, E Lockhart, D Hassabis, T Graepel, T P Lillicrap, D Silver, abs/1911.08265ArXiv. J. Schrittwieser, I. Antonoglou, T. Hubert, K. Simonyan, L. Sifre, S. Schmitt, A. Guez, E. Lockhart, D. Hassabis, T. Graepel, T. P. Lillicrap, and D. Silver, \"Mastering atari, go, chess and shogi by planning with a learned model,\" ArXiv, vol. abs/1911.08265, 2019.\n\nTop chess engine championship: Stockfish 20200407dc vs. lczero v0.24-sv-t60-3010. Chessdom, Chessdom, \"Top chess engine championship: Stockfish 20200407dc vs. lczero v0.24-sv-t60-3010,\" 2020. [Online]. Available: https: //www.tcec-chess.com/archive.html?season=17&div=sf&game=1\n\nTcec s17 super final report. glbchess64, \"Tcec s17 super final report,\" apr 2020. [Online]. Available: https://lczero.org/blog/2020/04/tcec-s17-super-final-report/\n\nAlphazero match will be replicated in computer chess champs. W Canary-Reed, W. Canary-Reed, \"Alphazero match will be replicated in computer chess champs,\" 2020. [Online]. Available: https://www.chess.com/news/view/ alphazero-match-will-be-replicated-in-computer-chess-champs\n\nDebate: \"does ai need more innate machinery?. Y Lecun, G Marcus, Y. LeCun and G. Marcus, \"Debate: \"does ai need more innate machinery?\",\" Youtube, oct 2017. [Online]. Available: https://www. youtube.com/watch?v=vdWPQ6iAkT4&t=227s\n\nFrom system 1 deep learning to system 2 deep learning. Y Bengio, Y. Bengio, \"From system 1 deep learning to system 2 deep learning,\" dec 2019. [Online]. Available: https://slideslive.com/38922304\n\nDebate : The best way forward for ai. Y Bengio, G Marcus, MONTREAL.AIY. Bengio and G. Marcus, \"Debate : The best way forward for ai,\" MONTREAL.AI, dec 2019. [Online]. Available: https: //montrealartificialintelligence.com/aidebate/\n\nweak ai\" is likely to never become \"strong ai\", so what is its greatest value for us. B Liu, B. Liu, \"\"weak ai\" is likely to never become \"strong ai\", so what is its greatest value for us?\" 2021.\n\nMinimax -chessprogramming wiki. Chessprogramming contributors. Online; accessed 4Chessprogramming contributors, \"Minimax -chessprogramming wiki,\" 2020, [Online; accessed 4-June-2020]. [Online]. Available: https: //www.chessprogramming.org/index.php?title=Minimax&oldid=13281\n\nFreezerchess. E Bleicher, 2020Online; accessed 04E. Bleicher, \"Freezerchess,\" 2020, [Online; accessed 04-June-2020].\n\nBuilding chess endgame databases for positions with many pieces using a-priori information. 27[Online]. Available: http://www.freezerchess.com/ [27] --, \"Building chess endgame databases for positions with many pieces using a-priori information,\" 2004. [Online]. Available: http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.217.3356\n\nEndgame tablebases -chessprogramming wiki. Chessprogramming contributors. Online; accessed 4Chessprogramming contributors, \"Endgame tablebases -chesspro- gramming wiki,\" 2020, [Online; accessed 4-June-2020]. [Online].\n\nDetecting fortresses in chess. M Guid, I Bratko, Elektrotehni\u0161ki vestnik. 792012English EditionM. Guid and I. Bratko, \"Detecting fortresses in chess,\" Elektrotehni\u0161ki vestnik (English Edition), vol. 79, pp. 35-40, 01 2012.\n\nCrystal chess engine. J Ellis, Online; accessed 4J. Ellis, \"Crystal chess engine,\" 2020, [Online; accessed 4-June-2020].\n\nMoves left head pull request -github. H Forst\u00e9n, H. Forst\u00e9n, \"Moves left head pull request -github,\" mar 2020. [Online]. Available: https://github.com/LeelaChessZero/lc0/pull/961\n\nTablebase support and leela weirdness in endgame. crem, \"Tablebase support and leela weirdness in endgame,\" oct 2018. [Online]. Available: https://lczero.org/blog/2018/08/ tablebase-support-and-leela-weirdness/\n\nLc0: why play for a mate if i can get a extra 50moves?!\" 2020. Ipmanchess, Ipmanchess, \"Lc0: why play for a mate if i can get a extra 50moves?!\" 2020. [Online]. Available: https://github.com/LeelaChessZero/lc0/issues/ 688\n\nMastering the game of go with deep neural networks and tree search. D Silver, A Huang, C J Maddison, A Guez, L Sifre, G Van Den Driessche, J Schrittwieser, I Antonoglou, V Panneershelvam, M Lanctot, S Dieleman, D Grewe, J Nham, N Kalchbrenner, I Sutskever, T P Lillicrap, M Leach, K Kavukcuoglu, T Graepel, D Hassabis, Nature. 529D. Silver, A. Huang, C. J. Maddison, A. Guez, L. Sifre, G. van den Driessche, J. Schrittwieser, I. Antonoglou, V. Panneershelvam, M. Lanctot, S. Dieleman, D. Grewe, J. Nham, N. Kalchbrenner, I. Sutskever, T. P. Lillicrap, M. Leach, K. Kavukcuoglu, T. Graepel, and D. Hassabis, \"Mastering the game of go with deep neural networks and tree search,\" Nature, vol. 529, pp. 484-489, 2016.\n\nContinuous upper confidence trees with polynomial exploration -consistency. D Auger, A Cou\u00ebtoux, O Teytaud, Machine Learning and Knowledge Discovery. Databases, H. Blockeel, K. Kersting, S. Nijssen, and F.\u017delezn\u00fdBerlin, Heidelberg; Berlin HeidelbergSpringerD. Auger, A. Cou\u00ebtoux, and O. Teytaud, \"Continuous upper confidence trees with polynomial exploration -consistency,\" in Machine Learning and Knowledge Discovery in Databases, H. Blockeel, K. Kersting, S. Nijssen, and F.\u017delezn\u00fd, Eds. Berlin, Heidelberg: Springer Berlin Heidelberg, 2013, pp. 194-209.\n\nScore. Lczero, LCZero, \"Score,\" 2020. [Online]. Available: https://github.com/ LeelaChessZero/lc0/blob/master/src/mcts/search.cc#L1244\n\nA layman's guide to configuring lc0. borg, \"A layman's guide to configuring lc0,\" apr 2020. [Online]. Available: https://lczero.org/blog/2020/04/a-laymans-guide-to-configuring-lc0/\n\nendgame study database hhdbvi, the world's largest collection of endgame studies. H Van Der Heijden, H. van der Heijden, \"\"endgame study database hhdbvi, the world's largest collection of endgame studies\",\" 2020. [Online]. Available: https://www.hhdbvi.nl/\n\n. M Wuellenweber, M Feist, chessbase database program\",\" 2021. [OnlineM. Wuellenweber and M. Feist, \"\"chessbase database program\",\" 2021. [Online]. Available: https://shop.chessbase.com/en/products/chessbase 16 premium package\n\nSelecting network to use. Lczero, LCZero, \"Selecting network to use,\" apr 2020. [Online]. Available: https://lczero.org/play/bestnets/\n\nLeela chess zero networks. --, \"Leela chess zero networks,\" apr 2020. [Online]. Available: http://training.lczero.org/networks/?show all=1\n\nLeela training. J H Thomas, J. H. Thomas, \"Leela training,\" mar 2020. [Online]. Available: https://github.com/jhorthos/lczero-training/wiki/Leela-Training\n\nSv nets. S V , S. V., \"Sv nets,\" 2020. [Online]. Available: https://www.comp.nus.edu. sg/ \u223c sergio-v/\n\nDkappe leela chess zero home page. dkappe, \"Dkappe leela chess zero home page,\" jul 2019. [Online].\n\nLeela chess zero discord server. Lczero, LCZero, \"Leela chess zero discord server,\" 2020. [Online]. Available: https://discordapp.com/invite/pKujYxD\n\nLeela chess zero download page. --, \"Leela chess zero download page,\" 2020. [Online]. Available: https://lczero.org/play/download\n\nOpen-ended learning in symmetric zerosum games. D Balduzzi, M Garnelo, Y Bachrach, W Czarnecki, J P\u00e9rolat, M Jaderberg, T Graepel, ICML. D. Balduzzi, M. Garnelo, Y. Bachrach, W. Czarnecki, J. P\u00e9rolat, M. Jaderberg, and T. Graepel, \"Open-ended learning in symmetric zero- sum games,\" in ICML, 2019.\n\nDistilling programs to prove termination. G W Hamilton, CoRR. G. W. Hamilton, \"Distilling programs to prove termination,\" CoRR, vol. abs/2008.02936, 2020. [Online]. Available: https://arxiv.org/abs/2008. 02936\n", "annotations": {"author": "[{\"start\":\"86\",\"end\":\"206\"}]", "publisher": null, "author_last_name": "[{\"start\":\"93\",\"end\":\"106\"}]", "author_first_name": "[{\"start\":\"86\",\"end\":\"92\"}]", "author_affiliation": "[{\"start\":\"138\",\"end\":\"205\"}]", "title": "[{\"start\":\"1\",\"end\":\"83\"},{\"start\":\"207\",\"end\":\"289\"}]", "venue": null, "abstract": "[{\"start\":\"504\",\"end\":\"1684\"}]", "bib_ref": "[{\"start\":\"2010\",\"end\":\"2013\",\"attributes\":{\"ref_id\":\"b1\"}},{\"start\":\"2015\",\"end\":\"2018\",\"attributes\":{\"ref_id\":\"b3\"}},{\"start\":\"2122\",\"end\":\"2125\",\"attributes\":{\"ref_id\":\"b4\"}},{\"start\":\"2250\",\"end\":\"2253\",\"attributes\":{\"ref_id\":\"b5\"}},{\"start\":\"3604\",\"end\":\"3607\",\"attributes\":{\"ref_id\":\"b6\"}},{\"start\":\"3636\",\"end\":\"3639\",\"attributes\":{\"ref_id\":\"b7\"}},{\"start\":\"3696\",\"end\":\"3699\",\"attributes\":{\"ref_id\":\"b8\"}},{\"start\":\"3701\",\"end\":\"3705\",\"attributes\":{\"ref_id\":\"b9\"}},{\"start\":\"3848\",\"end\":\"3852\",\"attributes\":{\"ref_id\":\"b10\"}},{\"start\":\"3903\",\"end\":\"3907\",\"attributes\":{\"ref_id\":\"b11\"}},{\"start\":\"4056\",\"end\":\"4060\",\"attributes\":{\"ref_id\":\"b12\"}},{\"start\":\"4648\",\"end\":\"4652\",\"attributes\":{\"ref_id\":\"b13\"}},{\"start\":\"4654\",\"end\":\"4658\",\"attributes\":{\"ref_id\":\"b14\"}},{\"start\":\"4728\",\"end\":\"4732\",\"attributes\":{\"ref_id\":\"b15\"}},{\"start\":\"4760\",\"end\":\"4764\",\"attributes\":{\"ref_id\":\"b16\"}},{\"start\":\"4888\",\"end\":\"4892\",\"attributes\":{\"ref_id\":\"b16\"}},{\"start\":\"5402\",\"end\":\"5405\",\"attributes\":{\"ref_id\":\"b0\"}},{\"start\":\"6613\",\"end\":\"6617\",\"attributes\":{\"ref_id\":\"b9\"}},{\"start\":\"6859\",\"end\":\"6863\",\"attributes\":{\"ref_id\":\"b17\"}},{\"start\":\"6921\",\"end\":\"6925\",\"attributes\":{\"ref_id\":\"b18\"}},{\"start\":\"6988\",\"end\":\"6992\",\"attributes\":{\"ref_id\":\"b19\"}},{\"start\":\"9040\",\"end\":\"9044\",\"attributes\":{\"ref_id\":\"b20\"}},{\"start\":\"9378\",\"end\":\"9381\",\"attributes\":{\"ref_id\":\"b1\"}},{\"start\":\"9383\",\"end\":\"9386\",\"attributes\":{\"ref_id\":\"b5\"}},{\"start\":\"9388\",\"end\":\"9392\",\"attributes\":{\"ref_id\":\"b21\"}},{\"start\":\"9394\",\"end\":\"9398\",\"attributes\":{\"ref_id\":\"b23\"}},{\"start\":\"10185\",\"end\":\"10189\",\"attributes\":{\"ref_id\":\"b12\"}},{\"start\":\"10711\",\"end\":\"10715\",\"attributes\":{\"ref_id\":\"b24\"}},{\"start\":\"11158\",\"end\":\"11162\",\"attributes\":{\"ref_id\":\"b25\"}},{\"start\":\"11164\",\"end\":\"11168\"},{\"start\":\"11538\",\"end\":\"11542\",\"attributes\":{\"ref_id\":\"b27\"}},{\"start\":\"11755\",\"end\":\"11759\",\"attributes\":{\"ref_id\":\"b28\"}},{\"start\":\"12082\",\"end\":\"12086\",\"attributes\":{\"ref_id\":\"b29\"}},{\"start\":\"12546\",\"end\":\"12550\",\"attributes\":{\"ref_id\":\"b30\"}},{\"start\":\"12629\",\"end\":\"12633\",\"attributes\":{\"ref_id\":\"b30\"}},{\"start\":\"12760\",\"end\":\"12764\",\"attributes\":{\"ref_id\":\"b31\"}},{\"start\":\"12766\",\"end\":\"12770\",\"attributes\":{\"ref_id\":\"b32\"}},{\"start\":\"13456\",\"end\":\"13459\",\"attributes\":{\"ref_id\":\"b8\"}},{\"start\":\"13461\",\"end\":\"13465\",\"attributes\":{\"ref_id\":\"b9\"}},{\"start\":\"13467\",\"end\":\"13471\",\"attributes\":{\"ref_id\":\"b33\"}},{\"start\":\"13711\",\"end\":\"13715\",\"attributes\":{\"ref_id\":\"b34\"}},{\"start\":\"14961\",\"end\":\"14965\",\"attributes\":{\"ref_id\":\"b35\"}},{\"start\":\"15937\",\"end\":\"15941\",\"attributes\":{\"ref_id\":\"b37\"}},{\"start\":\"16454\",\"end\":\"16458\",\"attributes\":{\"ref_id\":\"b38\"}},{\"start\":\"16511\",\"end\":\"16515\",\"attributes\":{\"ref_id\":\"b38\"}},{\"start\":\"16751\",\"end\":\"16755\",\"attributes\":{\"ref_id\":\"b27\"}},{\"start\":\"18152\",\"end\":\"18156\",\"attributes\":{\"ref_id\":\"b39\"}},{\"start\":\"18336\",\"end\":\"18340\",\"attributes\":{\"ref_id\":\"b40\"}},{\"start\":\"18406\",\"end\":\"18410\",\"attributes\":{\"ref_id\":\"b41\"}},{\"start\":\"18412\",\"end\":\"18416\",\"attributes\":{\"ref_id\":\"b43\"}},{\"start\":\"18467\",\"end\":\"18471\",\"attributes\":{\"ref_id\":\"b44\"}},{\"start\":\"18592\",\"end\":\"18596\",\"attributes\":{\"ref_id\":\"b30\"}},{\"start\":\"18670\",\"end\":\"18674\",\"attributes\":{\"ref_id\":\"b45\"}},{\"start\":\"18993\",\"end\":\"18996\",\"attributes\":{\"ref_id\":\"b8\"}},{\"start\":\"25701\",\"end\":\"25705\",\"attributes\":{\"ref_id\":\"b28\"}},{\"start\":\"26799\",\"end\":\"26802\",\"attributes\":{\"ref_id\":\"b1\"}},{\"start\":\"26804\",\"end\":\"26807\",\"attributes\":{\"ref_id\":\"b4\"}},{\"start\":\"27670\",\"end\":\"27674\",\"attributes\":{\"ref_id\":\"b46\"}},{\"start\":\"28633\",\"end\":\"28637\",\"attributes\":{\"ref_id\":\"b37\"}},{\"start\":\"28680\",\"end\":\"28684\",\"attributes\":{\"ref_id\":\"b38\"}},{\"start\":\"29314\",\"end\":\"29318\",\"attributes\":{\"ref_id\":\"b12\"}},{\"start\":\"30439\",\"end\":\"30443\",\"attributes\":{\"ref_id\":\"b47\"}},{\"start\":\"30638\",\"end\":\"30642\",\"attributes\":{\"ref_id\":\"b28\"}},{\"start\":\"30701\",\"end\":\"30705\",\"attributes\":{\"ref_id\":\"b29\"}},{\"start\":\"31380\",\"end\":\"31384\",\"attributes\":{\"ref_id\":\"b25\"}},{\"start\":\"31386\",\"end\":\"31390\"},{\"start\":\"32330\",\"end\":\"32334\",\"attributes\":{\"ref_id\":\"b36\"}}]", "figure": "[{\"start\":\"32169\",\"end\":\"32396\",\"attributes\":{\"id\":\"fig_0\"}},{\"start\":\"32397\",\"end\":\"32611\",\"attributes\":{\"id\":\"fig_1\"}}]", "paragraph": "[{\"start\":\"1703\",\"end\":\"3199\"},{\"start\":\"3201\",\"end\":\"3640\"},{\"start\":\"3642\",\"end\":\"3908\"},{\"start\":\"3910\",\"end\":\"4562\"},{\"start\":\"4564\",\"end\":\"4733\"},{\"start\":\"4735\",\"end\":\"5239\"},{\"start\":\"5241\",\"end\":\"5322\"},{\"start\":\"5324\",\"end\":\"5500\"},{\"start\":\"5502\",\"end\":\"5992\"},{\"start\":\"5994\",\"end\":\"6323\"},{\"start\":\"6325\",\"end\":\"7380\"},{\"start\":\"7382\",\"end\":\"7766\"},{\"start\":\"7768\",\"end\":\"8411\"},{\"start\":\"8413\",\"end\":\"8435\"},{\"start\":\"8437\",\"end\":\"8853\"},{\"start\":\"8874\",\"end\":\"9399\"},{\"start\":\"9417\",\"end\":\"10243\"},{\"start\":\"10245\",\"end\":\"10517\"},{\"start\":\"10519\",\"end\":\"10823\"},{\"start\":\"10825\",\"end\":\"11095\"},{\"start\":\"11097\",\"end\":\"11750\"},{\"start\":\"11752\",\"end\":\"12146\"},{\"start\":\"12148\",\"end\":\"12412\"},{\"start\":\"12414\",\"end\":\"12893\"},{\"start\":\"12895\",\"end\":\"13017\"},{\"start\":\"13019\",\"end\":\"13515\"},{\"start\":\"13546\",\"end\":\"13999\"},{\"start\":\"14053\",\"end\":\"14353\"},{\"start\":\"14355\",\"end\":\"14397\"},{\"start\":\"14449\",\"end\":\"14938\"},{\"start\":\"14940\",\"end\":\"15049\"},{\"start\":\"15051\",\"end\":\"15249\"},{\"start\":\"15251\",\"end\":\"15685\"},{\"start\":\"15713\",\"end\":\"17805\"},{\"start\":\"17807\",\"end\":\"18623\"},{\"start\":\"18625\",\"end\":\"19149\"},{\"start\":\"19151\",\"end\":\"19317\"},{\"start\":\"19319\",\"end\":\"19743\"},{\"start\":\"19781\",\"end\":\"20106\"},{\"start\":\"20108\",\"end\":\"20710\"},{\"start\":\"20712\",\"end\":\"21375\"},{\"start\":\"21377\",\"end\":\"21674\"},{\"start\":\"21676\",\"end\":\"22097\"},{\"start\":\"22099\",\"end\":\"22396\"},{\"start\":\"22398\",\"end\":\"23082\"},{\"start\":\"23084\",\"end\":\"23371\"},{\"start\":\"23373\",\"end\":\"23766\"},{\"start\":\"23768\",\"end\":\"24440\"},{\"start\":\"24442\",\"end\":\"24503\"},{\"start\":\"24505\",\"end\":\"24589\"},{\"start\":\"24591\",\"end\":\"25067\"},{\"start\":\"25069\",\"end\":\"26637\"},{\"start\":\"26639\",\"end\":\"27099\"},{\"start\":\"27101\",\"end\":\"27651\"},{\"start\":\"27653\",\"end\":\"28529\"},{\"start\":\"28531\",\"end\":\"29580\"},{\"start\":\"29582\",\"end\":\"29881\"},{\"start\":\"29883\",\"end\":\"30398\"},{\"start\":\"30400\",\"end\":\"31244\"},{\"start\":\"31246\",\"end\":\"31524\"},{\"start\":\"31526\",\"end\":\"32168\"}]", "formula": "[{\"start\":\"14000\",\"end\":\"14052\",\"attributes\":{\"id\":\"formula_0\"}},{\"start\":\"14398\",\"end\":\"14448\",\"attributes\":{\"id\":\"formula_1\"}}]", "table_ref": null, "section_header": "[{\"start\":\"1686\",\"end\":\"1701\"},{\"start\":\"8856\",\"end\":\"8872\"},{\"start\":\"9402\",\"end\":\"9415\"},{\"start\":\"13518\",\"end\":\"13544\"},{\"start\":\"15688\",\"end\":\"15711\"},{\"start\":\"19746\",\"end\":\"19779\"},{\"start\":\"32170\",\"end\":\"32178\"},{\"start\":\"32398\",\"end\":\"32406\"}]", "table": null, "figure_caption": "[{\"start\":\"32180\",\"end\":\"32396\"},{\"start\":\"32408\",\"end\":\"32611\"}]", "figure_ref": "[{\"start\":\"2553\",\"end\":\"2561\"},{\"start\":\"4983\",\"end\":\"4989\"},{\"start\":\"5621\",\"end\":\"5629\"},{\"start\":\"8021\",\"end\":\"8029\",\"attributes\":{\"ref_id\":\"fig_0\"}},{\"start\":\"10007\",\"end\":\"10015\"},{\"start\":\"12464\",\"end\":\"12472\",\"attributes\":{\"ref_id\":\"fig_0\"}},{\"start\":\"20344\",\"end\":\"20352\",\"attributes\":{\"ref_id\":\"fig_0\"}},{\"start\":\"20986\",\"end\":\"20994\",\"attributes\":{\"ref_id\":\"fig_1\"}},{\"start\":\"21679\",\"end\":\"21687\"},{\"start\":\"22418\",\"end\":\"22426\"},{\"start\":\"24150\",\"end\":\"24156\"},{\"start\":\"24494\",\"end\":\"24502\"},{\"start\":\"27773\",\"end\":\"27779\"},{\"start\":\"28974\",\"end\":\"28982\"}]", "bib_author_first_name": "[{\"start\":\"32816\",\"end\":\"32817\"},{\"start\":\"32818\",\"end\":\"32819\"},{\"start\":\"33014\",\"end\":\"33015\"},{\"start\":\"33352\",\"end\":\"33353\"},{\"start\":\"33361\",\"end\":\"33362\"},{\"start\":\"33493\",\"end\":\"33494\"},{\"start\":\"33506\",\"end\":\"33507\"},{\"start\":\"33519\",\"end\":\"33520\"},{\"start\":\"33528\",\"end\":\"33529\"},{\"start\":\"33530\",\"end\":\"33531\"},{\"start\":\"33536\",\"end\":\"33537\"},{\"start\":\"33552\",\"end\":\"33553\"},{\"start\":\"33561\",\"end\":\"33562\"},{\"start\":\"33785\",\"end\":\"33786\"},{\"start\":\"34014\",\"end\":\"34015\"},{\"start\":\"34029\",\"end\":\"34030\"},{\"start\":\"34037\",\"end\":\"34038\"},{\"start\":\"34043\",\"end\":\"34044\"},{\"start\":\"34053\",\"end\":\"34054\"},{\"start\":\"34065\",\"end\":\"34066\"},{\"start\":\"34071\",\"end\":\"34072\"},{\"start\":\"34080\",\"end\":\"34081\"},{\"start\":\"34092\",\"end\":\"34093\"},{\"start\":\"34102\",\"end\":\"34103\"},{\"start\":\"34115\",\"end\":\"34116\"},{\"start\":\"34117\",\"end\":\"34118\"},{\"start\":\"34125\",\"end\":\"34126\"},{\"start\":\"34569\",\"end\":\"34570\"},{\"start\":\"34578\",\"end\":\"34579\"},{\"start\":\"34586\",\"end\":\"34587\"},{\"start\":\"34597\",\"end\":\"34598\"},{\"start\":\"34604\",\"end\":\"34605\"},{\"start\":\"34612\",\"end\":\"34613\"},{\"start\":\"34625\",\"end\":\"34626\"},{\"start\":\"34638\",\"end\":\"34639\"},{\"start\":\"35273\",\"end\":\"35274\"},{\"start\":\"35283\",\"end\":\"35284\"},{\"start\":\"35293\",\"end\":\"35294\"},{\"start\":\"35310\",\"end\":\"35311\"},{\"start\":\"35324\",\"end\":\"35325\"},{\"start\":\"35331\",\"end\":\"35332\"},{\"start\":\"35339\",\"end\":\"35340\"},{\"start\":\"35350\",\"end\":\"35351\"},{\"start\":\"35359\",\"end\":\"35360\"},{\"start\":\"35370\",\"end\":\"35371\"},{\"start\":\"35381\",\"end\":\"35382\"},{\"start\":\"35383\",\"end\":\"35384\"},{\"start\":\"35396\",\"end\":\"35397\"},{\"start\":\"35408\",\"end\":\"35409\"},{\"start\":\"35825\",\"end\":\"35826\"},{\"start\":\"35835\",\"end\":\"35836\"},{\"start\":\"35845\",\"end\":\"35846\"},{\"start\":\"35862\",\"end\":\"35863\"},{\"start\":\"35876\",\"end\":\"35877\"},{\"start\":\"35883\",\"end\":\"35884\"},{\"start\":\"35891\",\"end\":\"35892\"},{\"start\":\"35902\",\"end\":\"35903\"},{\"start\":\"35911\",\"end\":\"35912\"},{\"start\":\"35922\",\"end\":\"35923\"},{\"start\":\"35933\",\"end\":\"35934\"},{\"start\":\"35946\",\"end\":\"35947\"},{\"start\":\"35958\",\"end\":\"35959\"},{\"start\":\"36481\",\"end\":\"36482\"},{\"start\":\"36493\",\"end\":\"36494\"},{\"start\":\"37028\",\"end\":\"37029\"},{\"start\":\"37039\",\"end\":\"37040\"},{\"start\":\"37290\",\"end\":\"37291\"},{\"start\":\"37300\",\"end\":\"37301\"},{\"start\":\"37557\",\"end\":\"37558\"},{\"start\":\"37794\",\"end\":\"37795\"},{\"start\":\"37804\",\"end\":\"37805\"},{\"start\":\"37813\",\"end\":\"37814\"},{\"start\":\"37823\",\"end\":\"37824\"},{\"start\":\"37838\",\"end\":\"37839\"},{\"start\":\"37847\",\"end\":\"37848\"},{\"start\":\"37856\",\"end\":\"37857\"},{\"start\":\"37863\",\"end\":\"37864\"},{\"start\":\"37872\",\"end\":\"37873\"},{\"start\":\"37882\",\"end\":\"37883\"},{\"start\":\"37895\",\"end\":\"37896\"},{\"start\":\"37908\",\"end\":\"37909\"},{\"start\":\"37920\",\"end\":\"37921\"},{\"start\":\"37932\",\"end\":\"37933\"},{\"start\":\"37943\",\"end\":\"37944\"},{\"start\":\"37952\",\"end\":\"37953\"},{\"start\":\"37961\",\"end\":\"37962\"},{\"start\":\"37971\",\"end\":\"37972\"},{\"start\":\"37986\",\"end\":\"37987\"},{\"start\":\"38420\",\"end\":\"38421\"},{\"start\":\"38437\",\"end\":\"38438\"},{\"start\":\"38451\",\"end\":\"38452\"},{\"start\":\"38461\",\"end\":\"38462\"},{\"start\":\"38473\",\"end\":\"38474\"},{\"start\":\"38482\",\"end\":\"38483\"},{\"start\":\"38493\",\"end\":\"38494\"},{\"start\":\"38501\",\"end\":\"38502\"},{\"start\":\"38513\",\"end\":\"38514\"},{\"start\":\"38525\",\"end\":\"38526\"},{\"start\":\"38536\",\"end\":\"38537\"},{\"start\":\"38538\",\"end\":\"38539\"},{\"start\":\"38551\",\"end\":\"38552\"},{\"start\":\"39353\",\"end\":\"39354\"},{\"start\":\"39614\",\"end\":\"39615\"},{\"start\":\"39623\",\"end\":\"39624\"},{\"start\":\"39854\",\"end\":\"39855\"},{\"start\":\"40034\",\"end\":\"40035\"},{\"start\":\"40044\",\"end\":\"40045\"},{\"start\":\"40315\",\"end\":\"40316\"},{\"start\":\"40716\",\"end\":\"40717\"},{\"start\":\"41410\",\"end\":\"41411\"},{\"start\":\"41418\",\"end\":\"41419\"},{\"start\":\"41625\",\"end\":\"41626\"},{\"start\":\"41763\",\"end\":\"41764\"},{\"start\":\"42408\",\"end\":\"42409\"},{\"start\":\"42418\",\"end\":\"42419\"},{\"start\":\"42427\",\"end\":\"42428\"},{\"start\":\"42429\",\"end\":\"42430\"},{\"start\":\"42441\",\"end\":\"42442\"},{\"start\":\"42449\",\"end\":\"42450\"},{\"start\":\"42458\",\"end\":\"42459\"},{\"start\":\"42479\",\"end\":\"42480\"},{\"start\":\"42496\",\"end\":\"42497\"},{\"start\":\"42510\",\"end\":\"42511\"},{\"start\":\"42528\",\"end\":\"42529\"},{\"start\":\"42539\",\"end\":\"42540\"},{\"start\":\"42551\",\"end\":\"42552\"},{\"start\":\"42560\",\"end\":\"42561\"},{\"start\":\"42568\",\"end\":\"42569\"},{\"start\":\"42584\",\"end\":\"42585\"},{\"start\":\"42597\",\"end\":\"42598\"},{\"start\":\"42599\",\"end\":\"42600\"},{\"start\":\"42612\",\"end\":\"42613\"},{\"start\":\"42621\",\"end\":\"42622\"},{\"start\":\"42636\",\"end\":\"42637\"},{\"start\":\"42647\",\"end\":\"42648\"},{\"start\":\"43131\",\"end\":\"43132\"},{\"start\":\"43140\",\"end\":\"43141\"},{\"start\":\"43152\",\"end\":\"43153\"},{\"start\":\"44013\",\"end\":\"44014\"},{\"start\":\"44191\",\"end\":\"44192\"},{\"start\":\"44207\",\"end\":\"44208\"},{\"start\":\"44709\",\"end\":\"44710\"},{\"start\":\"44711\",\"end\":\"44712\"},{\"start\":\"44858\",\"end\":\"44859\"},{\"start\":\"44860\",\"end\":\"44861\"},{\"start\":\"45382\",\"end\":\"45383\"},{\"start\":\"45394\",\"end\":\"45395\"},{\"start\":\"45405\",\"end\":\"45406\"},{\"start\":\"45417\",\"end\":\"45418\"},{\"start\":\"45430\",\"end\":\"45431\"},{\"start\":\"45441\",\"end\":\"45442\"},{\"start\":\"45454\",\"end\":\"45455\"},{\"start\":\"45675\",\"end\":\"45676\"},{\"start\":\"45677\",\"end\":\"45678\"}]", "bib_author_last_name": "[{\"start\":\"33016\",\"end\":\"33021\"},{\"start\":\"33354\",\"end\":\"33359\"},{\"start\":\"33363\",\"end\":\"33372\"},{\"start\":\"33495\",\"end\":\"33504\"},{\"start\":\"33508\",\"end\":\"33517\"},{\"start\":\"33521\",\"end\":\"33526\"},{\"start\":\"33532\",\"end\":\"33534\"},{\"start\":\"33538\",\"end\":\"33550\"},{\"start\":\"33554\",\"end\":\"33559\"},{\"start\":\"33563\",\"end\":\"33569\"},{\"start\":\"33787\",\"end\":\"33792\"},{\"start\":\"34016\",\"end\":\"34027\"},{\"start\":\"34031\",\"end\":\"34035\"},{\"start\":\"34039\",\"end\":\"34041\"},{\"start\":\"34045\",\"end\":\"34051\"},{\"start\":\"34055\",\"end\":\"34063\"},{\"start\":\"34067\",\"end\":\"34069\"},{\"start\":\"34073\",\"end\":\"34078\"},{\"start\":\"34082\",\"end\":\"34090\"},{\"start\":\"34094\",\"end\":\"34100\"},{\"start\":\"34104\",\"end\":\"34113\"},{\"start\":\"34119\",\"end\":\"34123\"},{\"start\":\"34127\",\"end\":\"34134\"},{\"start\":\"34571\",\"end\":\"34576\"},{\"start\":\"34580\",\"end\":\"34584\"},{\"start\":\"34588\",\"end\":\"34595\"},{\"start\":\"34599\",\"end\":\"34602\"},{\"start\":\"34606\",\"end\":\"34610\"},{\"start\":\"34614\",\"end\":\"34623\"},{\"start\":\"34627\",\"end\":\"34636\"},{\"start\":\"34640\",\"end\":\"34644\"},{\"start\":\"35275\",\"end\":\"35281\"},{\"start\":\"35285\",\"end\":\"35291\"},{\"start\":\"35295\",\"end\":\"35308\"},{\"start\":\"35312\",\"end\":\"35322\"},{\"start\":\"35326\",\"end\":\"35329\"},{\"start\":\"35333\",\"end\":\"35337\"},{\"start\":\"35341\",\"end\":\"35348\"},{\"start\":\"35352\",\"end\":\"35357\"},{\"start\":\"35361\",\"end\":\"35368\"},{\"start\":\"35372\",\"end\":\"35379\"},{\"start\":\"35385\",\"end\":\"35394\"},{\"start\":\"35398\",\"end\":\"35406\"},{\"start\":\"35410\",\"end\":\"35418\"},{\"start\":\"35827\",\"end\":\"35833\"},{\"start\":\"35837\",\"end\":\"35843\"},{\"start\":\"35847\",\"end\":\"35860\"},{\"start\":\"35864\",\"end\":\"35874\"},{\"start\":\"35878\",\"end\":\"35881\"},{\"start\":\"35885\",\"end\":\"35889\"},{\"start\":\"35893\",\"end\":\"35900\"},{\"start\":\"35904\",\"end\":\"35909\"},{\"start\":\"35913\",\"end\":\"35920\"},{\"start\":\"35924\",\"end\":\"35931\"},{\"start\":\"35935\",\"end\":\"35944\"},{\"start\":\"35948\",\"end\":\"35956\"},{\"start\":\"35960\",\"end\":\"35968\"},{\"start\":\"36483\",\"end\":\"36491\"},{\"start\":\"36495\",\"end\":\"36501\"},{\"start\":\"37030\",\"end\":\"37037\"},{\"start\":\"37041\",\"end\":\"37048\"},{\"start\":\"37292\",\"end\":\"37298\"},{\"start\":\"37302\",\"end\":\"37307\"},{\"start\":\"37559\",\"end\":\"37566\"},{\"start\":\"37796\",\"end\":\"37802\"},{\"start\":\"37806\",\"end\":\"37811\"},{\"start\":\"37815\",\"end\":\"37821\"},{\"start\":\"37825\",\"end\":\"37836\"},{\"start\":\"37840\",\"end\":\"37845\"},{\"start\":\"37849\",\"end\":\"37854\"},{\"start\":\"37858\",\"end\":\"37861\"},{\"start\":\"37865\",\"end\":\"37870\"},{\"start\":\"37874\",\"end\":\"37880\"},{\"start\":\"37884\",\"end\":\"37893\"},{\"start\":\"37897\",\"end\":\"37906\"},{\"start\":\"37910\",\"end\":\"37918\"},{\"start\":\"37922\",\"end\":\"37930\"},{\"start\":\"37934\",\"end\":\"37941\"},{\"start\":\"37945\",\"end\":\"37950\"},{\"start\":\"37954\",\"end\":\"37959\"},{\"start\":\"37963\",\"end\":\"37969\"},{\"start\":\"37973\",\"end\":\"37984\"},{\"start\":\"37988\",\"end\":\"37996\"},{\"start\":\"38422\",\"end\":\"38435\"},{\"start\":\"38439\",\"end\":\"38449\"},{\"start\":\"38453\",\"end\":\"38459\"},{\"start\":\"38463\",\"end\":\"38471\"},{\"start\":\"38475\",\"end\":\"38480\"},{\"start\":\"38484\",\"end\":\"38491\"},{\"start\":\"38495\",\"end\":\"38499\"},{\"start\":\"38503\",\"end\":\"38511\"},{\"start\":\"38515\",\"end\":\"38523\"},{\"start\":\"38527\",\"end\":\"38534\"},{\"start\":\"38540\",\"end\":\"38549\"},{\"start\":\"38553\",\"end\":\"38559\"},{\"start\":\"38930\",\"end\":\"38938\"},{\"start\":\"39355\",\"end\":\"39366\"},{\"start\":\"39616\",\"end\":\"39621\"},{\"start\":\"39625\",\"end\":\"39631\"},{\"start\":\"39856\",\"end\":\"39862\"},{\"start\":\"40036\",\"end\":\"40042\"},{\"start\":\"40046\",\"end\":\"40052\"},{\"start\":\"40317\",\"end\":\"40320\"},{\"start\":\"40718\",\"end\":\"40726\"},{\"start\":\"41412\",\"end\":\"41416\"},{\"start\":\"41420\",\"end\":\"41426\"},{\"start\":\"41627\",\"end\":\"41632\"},{\"start\":\"41765\",\"end\":\"41772\"},{\"start\":\"42180\",\"end\":\"42190\"},{\"start\":\"42410\",\"end\":\"42416\"},{\"start\":\"42420\",\"end\":\"42425\"},{\"start\":\"42431\",\"end\":\"42439\"},{\"start\":\"42443\",\"end\":\"42447\"},{\"start\":\"42451\",\"end\":\"42456\"},{\"start\":\"42460\",\"end\":\"42477\"},{\"start\":\"42481\",\"end\":\"42494\"},{\"start\":\"42498\",\"end\":\"42508\"},{\"start\":\"42512\",\"end\":\"42526\"},{\"start\":\"42530\",\"end\":\"42537\"},{\"start\":\"42541\",\"end\":\"42549\"},{\"start\":\"42553\",\"end\":\"42558\"},{\"start\":\"42562\",\"end\":\"42566\"},{\"start\":\"42570\",\"end\":\"42582\"},{\"start\":\"42586\",\"end\":\"42595\"},{\"start\":\"42601\",\"end\":\"42610\"},{\"start\":\"42614\",\"end\":\"42619\"},{\"start\":\"42623\",\"end\":\"42634\"},{\"start\":\"42638\",\"end\":\"42645\"},{\"start\":\"42649\",\"end\":\"42657\"},{\"start\":\"43133\",\"end\":\"43138\"},{\"start\":\"43142\",\"end\":\"43150\"},{\"start\":\"43154\",\"end\":\"43161\"},{\"start\":\"43620\",\"end\":\"43626\"},{\"start\":\"44015\",\"end\":\"44030\"},{\"start\":\"44193\",\"end\":\"44205\"},{\"start\":\"44209\",\"end\":\"44214\"},{\"start\":\"44443\",\"end\":\"44449\"},{\"start\":\"44713\",\"end\":\"44719\"},{\"start\":\"45086\",\"end\":\"45092\"},{\"start\":\"45384\",\"end\":\"45392\"},{\"start\":\"45396\",\"end\":\"45403\"},{\"start\":\"45407\",\"end\":\"45415\"},{\"start\":\"45419\",\"end\":\"45428\"},{\"start\":\"45432\",\"end\":\"45439\"},{\"start\":\"45443\",\"end\":\"45452\"},{\"start\":\"45456\",\"end\":\"45463\"},{\"start\":\"45679\",\"end\":\"45687\"}]", "bib_entry": "[{\"start\":\"32798\",\"end\":\"32914\",\"attributes\":{\"id\":\"b0\"}},{\"start\":\"32916\",\"end\":\"33143\",\"attributes\":{\"id\":\"b1\"}},{\"start\":\"33145\",\"end\":\"33348\",\"attributes\":{\"id\":\"b2\"}},{\"start\":\"33350\",\"end\":\"33451\",\"attributes\":{\"id\":\"b3\"}},{\"start\":\"33453\",\"end\":\"33708\",\"attributes\":{\"id\":\"b4\"}},{\"start\":\"33710\",\"end\":\"33961\",\"attributes\":{\"id\":\"b5\"}},{\"start\":\"33963\",\"end\":\"34465\",\"attributes\":{\"matched_paper_id\":\"2930547\",\"id\":\"b6\"}},{\"start\":\"34467\",\"end\":\"35183\",\"attributes\":{\"matched_paper_id\":\"202777185\",\"id\":\"b7\"}},{\"start\":\"35185\",\"end\":\"35727\",\"attributes\":{\"matched_paper_id\":\"33081038\",\"id\":\"b8\",\"doi\":\"abs/1712.01815\"}},{\"start\":\"35729\",\"end\":\"36369\",\"attributes\":{\"matched_paper_id\":\"54457125\",\"id\":\"b9\"}},{\"start\":\"36371\",\"end\":\"36747\",\"attributes\":{\"matched_paper_id\":\"202540623\",\"id\":\"b10\",\"doi\":\"abs/1909.03032\"}},{\"start\":\"36749\",\"end\":\"36917\",\"attributes\":{\"id\":\"b11\"}},{\"start\":\"36919\",\"end\":\"37207\",\"attributes\":{\"id\":\"b12\"}},{\"start\":\"37209\",\"end\":\"37455\",\"attributes\":{\"id\":\"b13\"}},{\"start\":\"37457\",\"end\":\"37717\",\"attributes\":{\"id\":\"b14\"}},{\"start\":\"37719\",\"end\":\"38347\",\"attributes\":{\"matched_paper_id\":\"210221987\",\"id\":\"b15\"}},{\"start\":\"38349\",\"end\":\"38846\",\"attributes\":{\"matched_paper_id\":\"208158225\",\"id\":\"b16\",\"doi\":\"abs/1911.08265\"}},{\"start\":\"38848\",\"end\":\"39125\",\"attributes\":{\"id\":\"b17\"}},{\"start\":\"39127\",\"end\":\"39290\",\"attributes\":{\"id\":\"b18\"}},{\"start\":\"39292\",\"end\":\"39566\",\"attributes\":{\"id\":\"b19\"}},{\"start\":\"39568\",\"end\":\"39797\",\"attributes\":{\"id\":\"b20\"}},{\"start\":\"39799\",\"end\":\"39994\",\"attributes\":{\"id\":\"b21\"}},{\"start\":\"39996\",\"end\":\"40227\",\"attributes\":{\"id\":\"b22\"}},{\"start\":\"40229\",\"end\":\"40424\",\"attributes\":{\"id\":\"b23\"}},{\"start\":\"40426\",\"end\":\"40700\",\"attributes\":{\"id\":\"b24\"}},{\"start\":\"40702\",\"end\":\"40818\",\"attributes\":{\"id\":\"b25\"}},{\"start\":\"40820\",\"end\":\"41158\",\"attributes\":{\"id\":\"b26\"}},{\"start\":\"41160\",\"end\":\"41377\",\"attributes\":{\"id\":\"b27\"}},{\"start\":\"41379\",\"end\":\"41601\",\"attributes\":{\"matched_paper_id\":\"11908509\",\"id\":\"b28\"}},{\"start\":\"41603\",\"end\":\"41723\",\"attributes\":{\"id\":\"b29\"}},{\"start\":\"41725\",\"end\":\"41903\",\"attributes\":{\"id\":\"b30\"}},{\"start\":\"41905\",\"end\":\"42115\",\"attributes\":{\"id\":\"b31\"}},{\"start\":\"42117\",\"end\":\"42338\",\"attributes\":{\"id\":\"b32\"}},{\"start\":\"42340\",\"end\":\"43053\",\"attributes\":{\"matched_paper_id\":\"515925\",\"id\":\"b33\"}},{\"start\":\"43055\",\"end\":\"43611\",\"attributes\":{\"matched_paper_id\":\"2196291\",\"id\":\"b34\"}},{\"start\":\"43613\",\"end\":\"43747\",\"attributes\":{\"id\":\"b35\"}},{\"start\":\"43749\",\"end\":\"43929\",\"attributes\":{\"id\":\"b36\"}},{\"start\":\"43931\",\"end\":\"44187\",\"attributes\":{\"id\":\"b37\"}},{\"start\":\"44189\",\"end\":\"44415\",\"attributes\":{\"id\":\"b38\"}},{\"start\":\"44417\",\"end\":\"44551\",\"attributes\":{\"id\":\"b39\"}},{\"start\":\"44553\",\"end\":\"44691\",\"attributes\":{\"id\":\"b40\"}},{\"start\":\"44693\",\"end\":\"44847\",\"attributes\":{\"id\":\"b41\"}},{\"start\":\"44849\",\"end\":\"44950\",\"attributes\":{\"id\":\"b42\"}},{\"start\":\"44952\",\"end\":\"45051\",\"attributes\":{\"id\":\"b43\"}},{\"start\":\"45053\",\"end\":\"45201\",\"attributes\":{\"id\":\"b44\"}},{\"start\":\"45203\",\"end\":\"45332\",\"attributes\":{\"id\":\"b45\"}},{\"start\":\"45334\",\"end\":\"45631\",\"attributes\":{\"matched_paper_id\":\"59222682\",\"id\":\"b46\"}},{\"start\":\"45633\",\"end\":\"45842\",\"attributes\":{\"matched_paper_id\":\"221083303\",\"id\":\"b47\"}}]", "bib_title": "[{\"start\":\"32798\",\"end\":\"32814\"},{\"start\":\"33963\",\"end\":\"34012\"},{\"start\":\"34467\",\"end\":\"34567\"},{\"start\":\"35185\",\"end\":\"35271\"},{\"start\":\"35729\",\"end\":\"35823\"},{\"start\":\"36371\",\"end\":\"36479\"},{\"start\":\"37719\",\"end\":\"37792\"},{\"start\":\"38349\",\"end\":\"38418\"},{\"start\":\"41379\",\"end\":\"41408\"},{\"start\":\"42340\",\"end\":\"42406\"},{\"start\":\"43055\",\"end\":\"43129\"},{\"start\":\"45334\",\"end\":\"45380\"},{\"start\":\"45633\",\"end\":\"45673\"}]", "bib_author": "[{\"start\":\"32816\",\"end\":\"32822\"},{\"start\":\"33014\",\"end\":\"33023\"},{\"start\":\"33352\",\"end\":\"33361\"},{\"start\":\"33361\",\"end\":\"33374\"},{\"start\":\"33493\",\"end\":\"33506\"},{\"start\":\"33506\",\"end\":\"33519\"},{\"start\":\"33519\",\"end\":\"33528\"},{\"start\":\"33528\",\"end\":\"33536\"},{\"start\":\"33536\",\"end\":\"33552\"},{\"start\":\"33552\",\"end\":\"33561\"},{\"start\":\"33561\",\"end\":\"33571\"},{\"start\":\"33785\",\"end\":\"33794\"},{\"start\":\"34014\",\"end\":\"34029\"},{\"start\":\"34029\",\"end\":\"34037\"},{\"start\":\"34037\",\"end\":\"34043\"},{\"start\":\"34043\",\"end\":\"34053\"},{\"start\":\"34053\",\"end\":\"34065\"},{\"start\":\"34065\",\"end\":\"34071\"},{\"start\":\"34071\",\"end\":\"34080\"},{\"start\":\"34080\",\"end\":\"34092\"},{\"start\":\"34092\",\"end\":\"34102\"},{\"start\":\"34102\",\"end\":\"34115\"},{\"start\":\"34115\",\"end\":\"34125\"},{\"start\":\"34125\",\"end\":\"34136\"},{\"start\":\"34569\",\"end\":\"34578\"},{\"start\":\"34578\",\"end\":\"34586\"},{\"start\":\"34586\",\"end\":\"34597\"},{\"start\":\"34597\",\"end\":\"34604\"},{\"start\":\"34604\",\"end\":\"34612\"},{\"start\":\"34612\",\"end\":\"34625\"},{\"start\":\"34625\",\"end\":\"34638\"},{\"start\":\"34638\",\"end\":\"34646\"},{\"start\":\"35273\",\"end\":\"35283\"},{\"start\":\"35283\",\"end\":\"35293\"},{\"start\":\"35293\",\"end\":\"35310\"},{\"start\":\"35310\",\"end\":\"35324\"},{\"start\":\"35324\",\"end\":\"35331\"},{\"start\":\"35331\",\"end\":\"35339\"},{\"start\":\"35339\",\"end\":\"35350\"},{\"start\":\"35350\",\"end\":\"35359\"},{\"start\":\"35359\",\"end\":\"35370\"},{\"start\":\"35370\",\"end\":\"35381\"},{\"start\":\"35381\",\"end\":\"35396\"},{\"start\":\"35396\",\"end\":\"35408\"},{\"start\":\"35408\",\"end\":\"35420\"},{\"start\":\"35825\",\"end\":\"35835\"},{\"start\":\"35835\",\"end\":\"35845\"},{\"start\":\"35845\",\"end\":\"35862\"},{\"start\":\"35862\",\"end\":\"35876\"},{\"start\":\"35876\",\"end\":\"35883\"},{\"start\":\"35883\",\"end\":\"35891\"},{\"start\":\"35891\",\"end\":\"35902\"},{\"start\":\"35902\",\"end\":\"35911\"},{\"start\":\"35911\",\"end\":\"35922\"},{\"start\":\"35922\",\"end\":\"35933\"},{\"start\":\"35933\",\"end\":\"35946\"},{\"start\":\"35946\",\"end\":\"35958\"},{\"start\":\"35958\",\"end\":\"35970\"},{\"start\":\"36481\",\"end\":\"36493\"},{\"start\":\"36493\",\"end\":\"36503\"},{\"start\":\"37028\",\"end\":\"37039\"},{\"start\":\"37039\",\"end\":\"37050\"},{\"start\":\"37290\",\"end\":\"37300\"},{\"start\":\"37300\",\"end\":\"37309\"},{\"start\":\"37557\",\"end\":\"37568\"},{\"start\":\"37794\",\"end\":\"37804\"},{\"start\":\"37804\",\"end\":\"37813\"},{\"start\":\"37813\",\"end\":\"37823\"},{\"start\":\"37823\",\"end\":\"37838\"},{\"start\":\"37838\",\"end\":\"37847\"},{\"start\":\"37847\",\"end\":\"37856\"},{\"start\":\"37856\",\"end\":\"37863\"},{\"start\":\"37863\",\"end\":\"37872\"},{\"start\":\"37872\",\"end\":\"37882\"},{\"start\":\"37882\",\"end\":\"37895\"},{\"start\":\"37895\",\"end\":\"37908\"},{\"start\":\"37908\",\"end\":\"37920\"},{\"start\":\"37920\",\"end\":\"37932\"},{\"start\":\"37932\",\"end\":\"37943\"},{\"start\":\"37943\",\"end\":\"37952\"},{\"start\":\"37952\",\"end\":\"37961\"},{\"start\":\"37961\",\"end\":\"37971\"},{\"start\":\"37971\",\"end\":\"37986\"},{\"start\":\"37986\",\"end\":\"37998\"},{\"start\":\"38420\",\"end\":\"38437\"},{\"start\":\"38437\",\"end\":\"38451\"},{\"start\":\"38451\",\"end\":\"38461\"},{\"start\":\"38461\",\"end\":\"38473\"},{\"start\":\"38473\",\"end\":\"38482\"},{\"start\":\"38482\",\"end\":\"38493\"},{\"start\":\"38493\",\"end\":\"38501\"},{\"start\":\"38501\",\"end\":\"38513\"},{\"start\":\"38513\",\"end\":\"38525\"},{\"start\":\"38525\",\"end\":\"38536\"},{\"start\":\"38536\",\"end\":\"38551\"},{\"start\":\"38551\",\"end\":\"38561\"},{\"start\":\"38930\",\"end\":\"38940\"},{\"start\":\"39353\",\"end\":\"39368\"},{\"start\":\"39614\",\"end\":\"39623\"},{\"start\":\"39623\",\"end\":\"39633\"},{\"start\":\"39854\",\"end\":\"39864\"},{\"start\":\"40034\",\"end\":\"40044\"},{\"start\":\"40044\",\"end\":\"40054\"},{\"start\":\"40315\",\"end\":\"40322\"},{\"start\":\"40716\",\"end\":\"40728\"},{\"start\":\"41410\",\"end\":\"41418\"},{\"start\":\"41418\",\"end\":\"41428\"},{\"start\":\"41625\",\"end\":\"41634\"},{\"start\":\"41763\",\"end\":\"41774\"},{\"start\":\"42180\",\"end\":\"42192\"},{\"start\":\"42408\",\"end\":\"42418\"},{\"start\":\"42418\",\"end\":\"42427\"},{\"start\":\"42427\",\"end\":\"42441\"},{\"start\":\"42441\",\"end\":\"42449\"},{\"start\":\"42449\",\"end\":\"42458\"},{\"start\":\"42458\",\"end\":\"42479\"},{\"start\":\"42479\",\"end\":\"42496\"},{\"start\":\"42496\",\"end\":\"42510\"},{\"start\":\"42510\",\"end\":\"42528\"},{\"start\":\"42528\",\"end\":\"42539\"},{\"start\":\"42539\",\"end\":\"42551\"},{\"start\":\"42551\",\"end\":\"42560\"},{\"start\":\"42560\",\"end\":\"42568\"},{\"start\":\"42568\",\"end\":\"42584\"},{\"start\":\"42584\",\"end\":\"42597\"},{\"start\":\"42597\",\"end\":\"42612\"},{\"start\":\"42612\",\"end\":\"42621\"},{\"start\":\"42621\",\"end\":\"42636\"},{\"start\":\"42636\",\"end\":\"42647\"},{\"start\":\"42647\",\"end\":\"42659\"},{\"start\":\"43131\",\"end\":\"43140\"},{\"start\":\"43140\",\"end\":\"43152\"},{\"start\":\"43152\",\"end\":\"43163\"},{\"start\":\"43620\",\"end\":\"43628\"},{\"start\":\"44013\",\"end\":\"44032\"},{\"start\":\"44191\",\"end\":\"44207\"},{\"start\":\"44207\",\"end\":\"44216\"},{\"start\":\"44443\",\"end\":\"44451\"},{\"start\":\"44709\",\"end\":\"44721\"},{\"start\":\"44858\",\"end\":\"44864\"},{\"start\":\"45086\",\"end\":\"45094\"},{\"start\":\"45382\",\"end\":\"45394\"},{\"start\":\"45394\",\"end\":\"45405\"},{\"start\":\"45405\",\"end\":\"45417\"},{\"start\":\"45417\",\"end\":\"45430\"},{\"start\":\"45430\",\"end\":\"45441\"},{\"start\":\"45441\",\"end\":\"45454\"},{\"start\":\"45454\",\"end\":\"45465\"},{\"start\":\"45675\",\"end\":\"45689\"}]", "bib_venue": "[{\"start\":\"43267\",\"end\":\"43304\"},{\"start\":\"32822\",\"end\":\"32846\"},{\"start\":\"32916\",\"end\":\"33012\"},{\"start\":\"33145\",\"end\":\"33194\"},{\"start\":\"33453\",\"end\":\"33491\"},{\"start\":\"33710\",\"end\":\"33783\"},{\"start\":\"34136\",\"end\":\"34183\"},{\"start\":\"34646\",\"end\":\"34695\"},{\"start\":\"35434\",\"end\":\"35438\"},{\"start\":\"35970\",\"end\":\"35977\"},{\"start\":\"36517\",\"end\":\"36521\"},{\"start\":\"36749\",\"end\":\"36781\"},{\"start\":\"36919\",\"end\":\"37026\"},{\"start\":\"37209\",\"end\":\"37288\"},{\"start\":\"37457\",\"end\":\"37555\"},{\"start\":\"37998\",\"end\":\"38004\"},{\"start\":\"38575\",\"end\":\"38580\"},{\"start\":\"38848\",\"end\":\"38928\"},{\"start\":\"39127\",\"end\":\"39154\"},{\"start\":\"39292\",\"end\":\"39351\"},{\"start\":\"39568\",\"end\":\"39612\"},{\"start\":\"39799\",\"end\":\"39852\"},{\"start\":\"39996\",\"end\":\"40032\"},{\"start\":\"40229\",\"end\":\"40313\"},{\"start\":\"40426\",\"end\":\"40456\"},{\"start\":\"40702\",\"end\":\"40714\"},{\"start\":\"40820\",\"end\":\"40910\"},{\"start\":\"41160\",\"end\":\"41201\"},{\"start\":\"41428\",\"end\":\"41451\"},{\"start\":\"41603\",\"end\":\"41623\"},{\"start\":\"41725\",\"end\":\"41761\"},{\"start\":\"41905\",\"end\":\"41953\"},{\"start\":\"42117\",\"end\":\"42178\"},{\"start\":\"42659\",\"end\":\"42665\"},{\"start\":\"43163\",\"end\":\"43203\"},{\"start\":\"43613\",\"end\":\"43618\"},{\"start\":\"43749\",\"end\":\"43784\"},{\"start\":\"43931\",\"end\":\"44011\"},{\"start\":\"44417\",\"end\":\"44441\"},{\"start\":\"44553\",\"end\":\"44578\"},{\"start\":\"44693\",\"end\":\"44707\"},{\"start\":\"44849\",\"end\":\"44856\"},{\"start\":\"44952\",\"end\":\"44985\"},{\"start\":\"45053\",\"end\":\"45084\"},{\"start\":\"45203\",\"end\":\"45233\"},{\"start\":\"45465\",\"end\":\"45469\"},{\"start\":\"45689\",\"end\":\"45693\"}]"}}}, "year": 2023, "month": 12, "day": 17}