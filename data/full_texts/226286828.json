{"id": 226286828, "updated": "2022-07-25 21:36:34.709", "metadata": {"title": "Memory-assisted reinforcement learning for diverse molecular de novo design", "authors": "[{\"first\":\"Thomas\",\"last\":\"Blaschke\",\"middle\":[]},{\"first\":\"Ola\",\"last\":\"Engkvist\",\"middle\":[]},{\"first\":\"J\u00fcrgen\",\"last\":\"Bajorath\",\"middle\":[]},{\"first\":\"Hongming\",\"last\":\"Chen\",\"middle\":[]}]", "venue": "Journal of Cheminformatics", "journal": "Journal of Cheminformatics", "publication_date": {"year": 2020, "month": null, "day": null}, "abstract": "In de novo molecular design, recurrent neural networks (RNN) have been shown to be effective methods for sampling and generating novel chemical structures. Using a technique called reinforcement learning (RL), an RNN can be tuned to target a particular section of chemical space with optimized desirable properties using a scoring function. However, ligands generated by current RL methods so far tend to have relatively low diversity, and sometimes even result in duplicate structures when optimizing towards desired properties. Here, we propose a new method to address the low diversity issue in RL for molecular design. Memory-assisted RL is an extension of the known RL, with the introduction of a so-called memory unit. As proof of concept, we applied our method to generate structures with a desired AlogP value. In a second case study, we applied our method to design ligands for the dopamine type 2 receptor and the 5-hydroxytryptamine type 1A receptor. For both receptors, a machine learning model was developed to predict whether generated molecules were active or not for the receptor. In both case studies, it was found that memory-assisted RL led to the generation of more compounds predicted to be active having higher chemical diversity, thus achieving better coverage of chemical space of known ligands compared to established RL methods.", "fields_of_study": "[\"Medicine\"]", "external_ids": {"arxiv": null, "mag": "3103098434", "acl": null, "pubmed": "33292554", "pubmedcentral": "7654024", "dblp": null, "doi": "10.1186/s13321-020-00473-0"}}, "content": {"source": {"pdf_hash": "ba33952ea6b80e53ec899bb4f838ca3de9830145", "pdf_src": "PubMedCentral", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://jcheminf.biomedcentral.com/track/pdf/10.1186/s13321-020-00473-0", "status": "GOLD"}}, "grobid": {"id": "2d97b6f4332373bbc6d49e800477e64a3c4fd982", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/ba33952ea6b80e53ec899bb4f838ca3de9830145.txt", "contents": "\nMemory-assisted reinforcement learning for diverse molecular de novo design\n\n\nThomas Blaschke \nOla Engkvist \nJ\u00fcrgen Bajorath \nHongming Chen \nMemory-assisted reinforcement learning for diverse molecular de novo design\n10.1186/s13321-020-00473-0Blaschke et al. J Cheminform (2020) 12:68 RESEARCH ARTICLE This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article' s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article' s zero/1.0/) applies to the data made available in this article, unless otherwise stated in a credit line to the data.Deep learning applicationsReinforcement learningDe Novo designExploration strategyRecurrent neural networks\nIn de novo molecular design, recurrent neural networks (RNN)  have been shown to be effective methods for sampling and generating novel chemical structures. Using a technique called reinforcement learning (RL), an RNN can be tuned to target a particular section of chemical space with optimized desirable properties using a scoring function. However, ligands generated by current RL methods so far tend to have relatively low diversity, and sometimes even result in duplicate structures when optimizing towards desired properties. Here, we propose a new method to address the low diversity issue in RL for molecular design. Memory-assisted RL is an extension of the known RL, with the introduction of a so-called memory unit. As proof of concept, we applied our method to generate structures with a desired AlogP value. In a second case study, we applied our method to design ligands for the dopamine type 2 receptor and the 5-hydroxytryptamine type 1A receptor. For both receptors, a machine learning model was developed to predict whether generated molecules were active or not for the receptor. In both case studies, it was found that memoryassisted RL led to the generation of more compounds predicted to be active having higher chemical diversity, thus achieving better coverage of chemical space of known ligands compared to established RL methods.\n\nIntroduction\n\nOver the last few years, machine learning, and in particular deep learning, has led to numerous breakthroughs in the field of computer vision, speech recognition, and medical diagnosis. In the regime of big data, some machine learning models have surpassed the human level of accuracy. One of the most popular example is the development of AlphaGo, a deep learning architecture capable of winning against one of the best human players in the game Go [1]. Also, more and more machine learning systems yield fast and accurate diagnosis of life-threatening conditions such as strokes and detection atrial fibrillations, and some of their algorithms have been approved by the FDA [2]. In the field of drug discovery, machine learning is often applied for property prediction of chemical structures. In some instances, deep learning has further increased the performance of prediction methods such as support vector machines and random forests in multi-task scenarios [3], in addition some studies indicate that deep learning models are superior in handling missing data while training [4]. Most of the recent studies use established molecular representations such as extended-connectivity fingerprints (ECFP) [5]. However, specialized deep learning architectures like Mol2Vec [6], DruGAN [7], GraphConv [8] allow the extraction of molecular representations based on the input of a molecular graph or using the SMILES notation; in a few reported cases reported this approach leads to some incremental improvements for property prediction over standard representations such as ECFP [9]. Accurate properties prediction is often a crucial step in a drug discovery project, especially when the concurrent optimization of multiple properties, such as physiochemical properties, pharmacokinetic profile, activity against a biological target, or selectivity is attempted. The search for compounds with a specific set of properties is a non-trivial task and a slow and costly process even when it is performed in silico because chemical space is vast. In order to avoid extensively searching chemical space, one would ideally aim to generate compounds with desired properties and avoid enumerating exceedingly large numbers of compounds [10].\n\nIn addition to more accurate property prediction, some deep learning architectures allow the generation of novel molecules and are thus used for de novo design [11]. The potential of molecule generation has been shown in different studies, and multiple architectures and strategies have been devised for the generation of compounds. A number of architectures, such as variational autoencoders [12], recurrent neural networks (RNNs) [13], conditional RNNs [14], and generative adversarial networks (GANs) [15] have been proven successful in generating molecules. A popular approach for generative modeling is so-called reinforcement learning (RL) using RNNs. RL allows to couple generative models with an arbitrary property predictor to direct the generative model towards a specific subset of the chemical space where most of the compounds meet pre-specified properties. For example, Olivecrona et al. proposed the REINVENT algorithm which combined RNNs and RL to generate molecules that are enriched for chemical and biological properties [16]. In their retrospective study, the authors showed that it is possible to rediscover known experimentally validated ligands using RL, which neither the generative model nor the prediction model had been trained on. Benjamin et al. exploited the GAN for a sequence generation model to generate molecules with multi-objective reinforcement learning (named ORGANIC) [17]. Putin et al. extended the ORGANIC framework using differential neural computer (DNC) [18,19]. The results showed that the DNC-based GANs generated SMILES that were longer, more diverse, and more complex than the SMILES generated by ORGANIC. Gupta et al. used a RNN in combination with transfer learning to perform target specific fine tuning of the generative model [20]. Different from many purely computational studies, only few studies reporting generative modelling have also included synthesizes and experimental evaluation of novel compounds. For example, Merk et al. applied transfer learning to six different nuclear receptors followed by in vitro validation of the de novo designs, in which four out of five ligands displayed bioactivity [21]. Zhavoronkov et al. used a two-step RL approach (GENTRL) to design novel ligands for discoidin domain receptor 1 and test their bioactivity [22]. Four compounds were active in biochemical assays, and two were validated in cell-based assays. These results suggest that generative modelling can be applied in prospectively in de novo design.\n\nEven though it is possible to generate novel compounds with the desired properties, the resulting solutions often lack chemical diversity [23][24][25]. Deursen et al. proposed to address this issue with the introduction of Generative Examination Networks (GEN), which perform statistical analysis of the generated compounds during training [26]. However, their study does did not include the application of this approach in any pre-defined optimization scenario. Typically, in a given optimization scenario, the model finds a particular solution which only consists of molecular scaffolds. This is caused by the so-called mode collapse or policy collapse from which the RL and the GAN models suffer [27][28][29][30]. In this case, once the model finds a good solution with desired properties, it keeps sampling this particular section of space without exploring alternative sections. This problem is mostly unsolved so far, and, to the best of our knowledge, only Liu et al. [31] have attempted to engineer a complex RNN model that includes a normal RNN model for structure generation and an explorative RNN model for enforcing the exploration of alternative solutions. However, even with fine-tuning, the method did not significantly increase the diversity of generated structures compared to the REIN-VENT method.\n\nHerein we introduce a novel sampling strategy for RL with RNNs, which utilizes the so-called memory unit to enable modifying the output of any predictor such that RL can move away from an already explored section of chemical space. The memory unit uses well-established similarity measures such as Tanimoto similarity of compounds or scaffolds to compare samples of chemical space and enables a flexible yet intuitive way to fine-tune available RL architectures.\n\n\nMethodological overview\n\nThe memory unit is a separate module that can be used in combination with any property predictor for RL. In this study, we chose to use the memory unit in combination with the REINVENT [16,32] approach. The REINVENT methodology includes two coupled generative neural networks, namely a \"prior\" network and an \"agent\" network for structure generation in a stepwise manner. During the first stage, the prior network is trained to generate novel compounds that are similar to ChEMBL [33] compounds. After the network is trained, the agent network is initialized with the same parameters as the trained Prior network. In the second stage, the agent network is redirected through RL to optimize structures using the property predictor as the scoring function in combination with the likelihood of molecular structure in the Prior model and the reward score from a memory unit.\n\n\nMemory-assisted reinforcement learning formulation\n\nIn REINVENT algorithm, compounds are represented by SMILES strings. The scoring of a compound is dependent on two functions, S(c) and M(c), where S(c) is the scoring function that evaluates the desirability of a generated compound c using some arbitrary method, and the M(c) is the output score from the newly introduced memory unit. The goal of the RL is updating the agent network from the prior network to increase the expected score for the generated compound. However, we would like our agent to be rooted to the prior, which has learned the syntax of SMILES and the distribution of molecular structures in ChEMBL. We, therefore, denote an augmented likelihood \"logP(c) Aug \" as a prior likelihood modulated by the desirability of a sequence:\n\nwhere \u03c3 is a scalar coefficient, S(c) the output of the scoring function, and M(c) the output of the memory unit, which is either 0 or 1. The total reward R(c) of a molecule c can be seen as the agreement between the likelihood of the Agent model \"logP(c) AgentNetwork \"and the augmented likelihood:\n\nThe goal of the Agent is maximizing the expected reward, which is achieved by minimizing the loss function:\n\n\nMemory unit\n\nThe memory unit is designed to be incorporated into the RL scoring function such that the generative model is not only exploring a given favorable area in chemical space, leading to a high score, but many different regions of chemical space. To do so, the memory unit keeps track of all highly scored molecules during RL. If a molecule in the current batch is very similar to the saved compounds in the memory unit, its M(c) score of the memory unit is set to zero. In this way, the memory unit effectively alters the surface of the scoring function so that the gained reward for the generated molecules is minimal, and the neural network is discouraged to continue generating similar molecules. The integration of the memory unit into a generative model is illustrated in Fig. 1. Furthermore, Fig. 2 illustrates the influence of the memory unit\n(1) logP(c) Aug = logP(c) PriorNetwork + \u03c3 \u00d7 S(c) \u00d7 M(c) (2) R(c) = logP(c) Aug \u2212 logP(c) AgentNetwork 2 (3) loss = \u2212R(c)\non RL. In traditional RL, the model can generate highly scored compounds. Once it is at a local maximum for the reward, the model is often unable to find a different solution as it would need to exit the local maximum again. Accordingly, the reward would need to be decreased in order to find other local maxima. This situation ultimately leads to the so-called policy collapse. RL will generate very similar solutions that are not substantially different from each other. In other words, RL generates different compounds with the same scaffold where only the position of a single substitute is changed. The memory unit is introduced to address this issue. Using the memory unit, RL will reach the same local maximum for the reward. However, RL will be prohibited to exploit the given region of chemical space indefinitely. After a specified number of generated compounds have been saved in the memory unit, the memory unit resets the reward and penalizes generated compounds that are similar to the compounds saved in the memory unit. By doing so, RL is enabled to exit a specific local maximum and reach the next local maximum in a different region.\n\nThe implementation of the memory unit is based on a hash table, which consists of multiple index-bucket pairs. A bucket contains a fixed number of chemical structures that belong to the same cluster, and the index corresponds to the seed chemical structure of the bucket. The molecules with high S(c) scores in a batch are taken as query structures to compare with all index structures in the memory unit. The memory score M(c) is related to the query structure from the batch and the number of molecules that are stored in the memory. The default bucket size is 25, which means that the bucket can store a maximum of 25 compounds. If a query compound is similar (Tanimoto similarity index higher than a pre-defined cutoff value) to the index compound and the bucket is full, the memory score is set to 0 for the query molecule and it is rejected. If the bucket is not fully occupied, the memory score is set to 1 and the query compound is added to the bucket. If the highly scored compound is not similar to any index structure in the memory unit, a new index-bucket pair is created with the new compound. Batch compounds with low S(c) scores are not compared to the index molecules of the memory unit and their M(c) score set to 1.\n\nThe assessment of chemical similarity has, therefore, a profound effect on how the memory unit alters the reward. We evaluated four different criteria for chemical similarity. First, we considered the Jaccard index [34] for binary vectors, also known as Tanimoto similarity, on the basis of the ECFP4 fingerprint as a molecular representation. Each time a highly scored compound was generated, Tanimoto similarity to all index compounds was calculated. By default the similarity cutoff value was set to 0.6, if the similarity values were equal to or larger l than 0.6 and the bucket was not full, the molecule was added. If no similarity value to an index compound was at least 0.6 or larger a new index-bucket pair was created.\n\nFurthermore, similarity can not only be evaluated at the compound level but also at the scaffold level. In this case, similarity was assessed either on the basis of Bemis-Murcko (BM) scaffolds [35] or the corresponding carbon skeletons. A carbon skeleton is obtained from a BM scaffold by replacing all heteroatoms with carbos and setting all bond orders to 1.\n\nIn the BM scaffold case, for each highly scoring compound having a score of at least 0.6, the BM scaffold was extracted and compared to all BM scaffolds in the index of a hash table. If an exact match for the BM scaffold was found, the compound was added to the respective Fig. 1 Schematic workflow of the memory unit. The memory unit (left) is integrated into the regular RL cycle (right). The generative model produces structures, which are scored by an arbitrary scoring function. Only molecules with a high score are processed by the memory unit. Every input molecule is compared to all indexed compounds based on their molecular scaffold or their fingerprint. If the generated scaffold matches an indexed scaffold or the fingerprint similarity is greater than a defined value, the input molecule gets added to the corresponding index-bucket pair. If the buckets are not filled, shown in (a), the memory unit does not alter the scoring. If the bucket is full, illustrated in (b), the score is modified, and the generative model has to explore new chemical structures. For an exemplary compound, the path of structure generation is highlighted. Because the bucket for the corresponding scaffold is filled, the score of this compound is modified Fig. 2 Schematic comparison of regular and memory-assisted reinforcement learning utilizing a QSAR model. a The activity prediction surface of a non-linear QSAR model is illustrated. A generative model iteratively constructs compounds (green stars), which are predicted to be active. b Using regular reinforcement learning, the model generates only compounds of the first local maximum it reaches. c Memory-assisted reinforcement learning starts with regular reinforcement learning. d Once the chemical space is locally explored, the memory alters the prediction surface and forces the generative model to find a new local maximum bucket. If the BM scaffold was previously unobserved, a new index-bucket pair was created with the BM scaffold as an index, and the corresponding compound was added to the bucket. If a bucket already contained 25 compounds, the memory index returned a value of 0; otherwise, a value of 1 was returned. The same protocol was also applied to matching identical carbon skeletons.\n\nIn addition to exact carbon skeleton matching, we also evaluated a fuzzy skeleton filter. The fuzzy scaffold filter was based on the carbon skeleton but used the atom pair fingerprint [36] for similarity assessment to compare carbon skeletons instead of exact scaffold match. For each generated carbon skeleton, an atom pair fingerprint was calculated, and different carbon skeletons were compared using the Tanimoto coefficient. If the coefficient value was at least 0.6, the two scaffolds were considered similar and the corresponding compound was added to the same bucket.\n\n\nRetrospective validation\n\nTo test the effectiveness of the memory unit with different similarity assessments, we used two different strategies to generate optimized sets of compounds.\n\n\nOptimize structures towards a specific LogP\n\nAs a proof of concept, we tried to optimize the generated compound toward a desired LogP range. LogP is an important parameter in pharmaceutical research as it indicates the balance between solubility and cell permeability of a molecule. Usually, in early-stage drug development, LogP values ranging from of 2-3 are often considered to be desirable for candidate compounds. Therefore, we set our scoring function to return the value of 1.0 if the calculated LogP is between 2 and 3. If the values are not in that range, we calculate a score as following:\n\nwhere S is the scoring function with values between 0.0 and 1.0, \"tanh\" the hyperbolic tangent, and AlogP is the calculated LogP value using Crippen's atom-based LogP calculation approach [37] implemented in RDKit [38].\n\n\nOptimize structures for high predicted activity against given biological targets\n\nAs another validation, we generated molecules that were predicted to be active against 5-hydroxytryptamine receptor type 1A (HTR1A) and the dopamine type 2 receptor (DRD2). First, for each target, we extracted bioactivity data and assembled a training, validation, and test set. Next, we trained support vector machine (SVM) models [39] using the respective training sets\n(4) S = 1 \u2212 tanh min 2 \u2212 AlogP , 3 \u2212 AlogP\nand optimized the parameters on the validation sets. The test sets were held back to obtain an estimation for the prediction performance of the SVM models. In the next step, we used the probabilistic output of the trained SVM classifiers as the respective reward function for molecule generation.\n\n\nData sets\n\nThe bioactivity data for HTR1A and DRD2 were extracted from ExCAPE-DB [40]. The database contains a total of 3599 actives (pIC50 > = 7) and 66,684 inactive (pIC50 < 7) compounds for HTR1A and 2981 actives (pIC50 > = 7) and 346,206 inactive (pIC50 < 7) compounds for DRD2 respectively. For both data sets, all actives were selected. For HTR1A all inactive compounds were selected and for DRD2 a subset of 100,000 inactive compounds was randomly selected. To decrease the nearest neighbor similarity between the training and testing structures [41] the actives were grouped using the Butina clustering algorithm [42] and the Tanimoto similarity calculated based upon of the extended connectivity fingerprint with bond diameter of 6 (ECFP6) [5]. According to the Butina algorithm, clusters were created by selecting molecules as centroids and assigning every compound with a similarity higher than a defined similarity cutoff to this cluster. In our analysis, we chose a Tanimoto similarity cutoff of 0.4. The centroids were selected, such that the number of molecules that were assigned to any cluster was maximized. After the compounds were assigned to their respective clusters, the clusters were sorted by size and iteratively assigned to the test, validation, and training set, such that the final distribution of actives in the test, validation, and training set was 20%, 20%, and 60%, respectively. The inactives were randomly assigned to the three sets using the same ratios.\n\n\nSVM bioactivity models\n\nThe two non-linear SVM classifiers were built using scikit-learn [43] on the training sets as predictive models for DRD2 or HTR1A activity, respectively. The compounds were encoded as count-based ECFP6 and folded into 2048 dimensional vectors using a modulo operation. The optimal c value and class weights in the final models were obtained from a grid search for the highest MCC [44] performance on the respective validation set. After the determination of the optimal hyperparameter, new SVM models were trained and calibrated using Platt scaling [45] to obtain probabilistic classification values between 0 and 1. The MinMax kernel was used [46]. For c, grid search values between 10 \u22125 and 10 \u22125 were evaluated by incrementally changing the exponent by 1. Uniform class weights and class weights inversely proportional to class frequencies were considered. The test sets were only used to estimate the \"real\" performance on unknown compounds that were not used for the hyperparameter search nor the initial training of the SVMs.\n\n\nGenerative model\n\nAs a generative model, we used a RNN similar to the one reported in REINVENT [16]. The generative model featured an embedding layer followed by three gated recurrent units (GRU) [47] with 256 dimensions, and finally a linear layer that reshaped the outputs to the size of all possible tokens. The loss function is the Negative Log-Likelihood (NLL):\n\nwhere \"x t \" is a random variable representing the probability for all possible tokens of the vocabulary at step \"t\" and \"x t-1 \" is the token chosen at the previous step.\n\nTo train the generative model, the so-called prior model, we used a more general dataset that did not contain known active molecules for HTR1A and DRD2. We extracted all compounds from ChEMBL 25 and removed all compounds with more than 50 heavy atoms. Furthermore, we removed all stereochemistry information and canonicalized the SMILES strings using RDKit. Additionally, we filtered the ChEMBL compounds for the known HTR1A actives and based on the similarity to the DRD2 actives extracted from ExCAPE. All 3599 HTR1A actives and compounds with an ECFP4 Tanimoto similarity of 0.4 or more to any of the 2981 DRD2 actives were excluded. This resulted in a final dataset of 1513,367 unique compounds, which were used to train the prior model for ten epochs using the Adam optimizer [48] and a learning rate of 0.01.\n(5) loss(sequence) = T t=1 log P(x t x t\u22121 , . . . , x 1 )\n\nResults\n\n\nLogP optimization\n\nAs the LogP of a compound is an important indicator for membrane permeability and aqueous solubility of potential drug candidates, a common task in a drug discovery project is to optimize the LogP of a compound series while maintaining the overall characteristics of the series. In our first proof-of-concept study, we replicated this task by optimizing the LogP of known DRD2 inhibitors with high LogP values.\n\nTo restrict the prior model to a set of known bioactive molecules, we selected 487 known DRD2 compounds from ExCAPE with a LogP of larger than or equal to 5 and applied transfer learning to the prior model. The model was retrained on these 487 compounds for 20 epochs directing it to produce DRD2 compounds with a high LogP. The next step was the RL to force the bias before generating molecules with a LogP between 2 and 3. During RL, the model created 100 compounds per iteration that were scored based on their LogP value. RL was applied for 150 iterations, such that a total of 15,000 compounds were generated. We investigated four different similarity measures: one at the compound level and three different similarity measures at the scaffold level. Table 1 summarizes the number of generated optimized compounds with a LogP of 2.0-3.0. All different types showed an increase in the number of generated compounds and generated BM scaffolds and carbon skeletons.\n\nIn the case of the RL without the memory unit, the model was able to generate 938 unique compounds with a predicted LogP between 2 and 3. This resulted in 727 different BM scaffolds and 396 carbon skeletons. The use of the memory unit increased the number of generated optimized compounds by threefold. With 3591 generated compounds, the memory unit matching BM scaffold sampled most compounds. Not only the number of generated compounds, but also the number of generated BM scaffolds and carbon skeletons increased using the memory unit.\n\n\nTable 1 Models for optimized LogP using reinforcement learning\n\nThe generative models were tuned for generating compounds with a predicted LogP between 2.0 and 3.0 using RL for 100 iterations. During each iteration, a model generated 150 compounds resulting in a total of 15.000 compounds. Only compounds with a predicted LogP between 2.0 and 3.0 were retained However, as stated at the beginning, a LogP optimization resulting in compounds with unknown scaffolds would be undesirable as one would like to maintain the bioactivity of compounds containing the known scaffolds. To analyze if the use of the memory unit resulted in the generation of unrelated compounds to the training set, we investigated analog relationships between the generated compounds with the training set using count-based ECFP6 Tanimoto similarity and the matched molecular pair (MMP) formalism [49]. We fragmented the generated and the training set molecules applying a size restriction such that the larger compound fragment (also referred to as MMP-core) was at least twice as large as the other fragment [50]. The obtained MMP-cores were then compared to the MMP-cores of the training set compounds. The results are shown in Table 2.\n\nUsing RL without the memory unit, only 145 optimized compounds with Tanimoto similarity of at least 0.4 to the nearest neighbor from the training set were obtained. In comparison, up to 549 compounds were ECFP6 analogs meeting the same similarity cutoff. An equivalent trend in analog generation was observed when applying the MMP formalism. Using RL without the memory unit, the optimized compounds contained only five MMP cores from the training set. In comparison, the optimized compounds generated by the RL using the memory unit shared up to 19 MMP-cores with the training set, indicating that the memory-assisted RL led to more generated compounds, which also covered a more relevant section of chemical space compared to the RL without a memory unit.\n\n\nOptimization of compounds for high predicted activity against HTR1A and DRD2\n\nAs a second proof-of-concept study, we attempted to apply the memory-assisted RL in more complex optimization scenarios. This time we tried to generate compounds with improved predicted bioactivity. We chose HTR1A and DRD2 as targets and extracted bioactivity data from the ExCAPE database. Both targets are wellstudied neurotransmitter receptors for which sufficient bioactivity data was available a to compare generated compounds at a large scale with experimentally validated compounds.\n\nWe trained and optimized non-linear SVM models using Platt scaling to obtain probabilistic activity predictions between 0 and 1. The predictive performances of the activity models are shown in Table 3 [52] values, an important metric for ranking compounds in virtual screening and RL, were nearly optimal with 0.99 for test set of both HTR1A and DRD2.\n\nFor RL, we sampled our generative model for 300 iterations. At each iteration, the model created 100 SMILES, which were scored by the activity model and then passed\n\n\nTable 2 Generated analogs compounds with optimized LogP\n\nThe generated structures with predicted LogP between 2.0 and 3.0 were compared to the 487 training compounds based on fingerprint similarity (counted ECFP6) and their MMP relationships. Generated compounds with a Tanimoto similarity of 0.4 or higher were considered analogs. The generated compounds were fragmented, and MMP relationships with training compounds were explored. If an MMP-core was present in the set of generated structures and the set of training compounds, it was considered a shared MMP core  to the memory unit, generating in total 30,000 compounds. For HTR1A, RL was performed with a learning rate of 0.001 whereas for DRD2 the RL was performed with a learning rate of 0.005 to accommodate for the fact that all of the known DRD2 analogs were removed from the generative model. We considered only compounds with a predicted activity > = 0.7 as active. We validated the same memory units as in the LogP optimization part (Table 4). Under the same experimental conditions, the number of generated compounds increased nearly twofold and more than fourfold across all different memory-types for HTR1A and DRD2, respectively. For RL with the HTR1A predictor, 9323 unique compounds were generated. Using any memory unit increased the number of generated compounds by nearly twofold, where the largest number of compounds (17,597) was generated using the identical carbon skeleton memory unit. The number of generated BM scaffolds increased by the same ratio as the compound generation for all memory units; 7312 BM scaffolds for RL without memory and 15,531 BM scaffolds using the scaffold similarity memory. Also, the number of generated carbon skeleton increased ~ twofold using the memory units. In the case of the standard RL, 5446 carbon skeletons were obtained, while 12,408 carbon skeletons were obtained using the identical carbon skeleton memory unit.\n\nFor RL with the DRD2 predictor and without a memory unit, 5143 unique compounds were generated accounting for 2635 BM-scaffolds and only 1949 carbon skeletons. In contrast, all memory-assisted RL yielded a larger number of generated compounds of more than fourfold. The largest number of compounds (22,784) was generated using the scaffold similarity memory unit. The memory-assisted RL did not only increase the number of generated compounds, but mostly also increased the number of generated BM scaffold and carbon skeletons. The number of generated BM scaffolds increased by at least fivefold in the case of the identical BM scaffold memory unit and more than a sevenfold increase in the case of the identical carbon skeleton memory unit. The number of carbon skeletons increased from fourfold up to eightfold for the identical BM scaffold memory and the scaffold similarity memory, respectively.\n\nTo investigate if the generated compounds covered a relevant region of chemical space for HTR1A and DRD2, we established and counted analog relationships for these compounds. If the Tanimoto similarity using count-based ECFP6 between a generated compound and the nearest neighbor of known compounds was at least 0.4 the compound was considered to be an analog. Additionally, for a much stricter analog definition, analog relationships between the generated compound and known were established using the size-restricted MMP formalism (Table 5).\n\nFor HTR1A, the RL with no memory unit generated a total of 1726 ECFP6-based analogs of the training set of the predictive model and 1584 ECFP6 analogs of the validation and test set. In comparison, using the memoryassisted RL at least 2734 analogs to the training set and 2742 analogs to the validation and test set were obtained. Interestingly, the number of MMP analogs did not correlate with the number of generated ECFP6 analogs. In the case of RL with no memory unit, 70 MMP analogs of the training and 69 MMP analogs of the test set were generated. Most MMP analogs were generated using the compound similarity memory unit; 110 MMP analogs of the training set and 97 MMP analogs of the validation and test set. For the identical BM scaffold and the identical carbon skeleton memory unit, the number of Table 4 Compounds generated using reinforcement learning\n\nThe generative models were directed towards predicting active compounds using RL for 300 iterations. During each iteration, a model generated 100 compounds resulting in a total of 30.000 compounds. Only compounds with a prediction score of at least 0.7 were considered active In the case of the DRD2 predictor, the RL without a memory generated 576 ECPF6 analogs to the training set and 759 ECFP6 analogs to the validation and test set. They correspond only to the seven and two MMP analogs, respectively. The identical BM scaffold and the identical carbon skeleton memory showed the largest increase in the number of generated ECFP6 analogs; it increased by more than tenfold in case of the training set and more than sevenfold in the case of the validation and test set, respectively. Importantly, also the number of MMP analogs to the training and test set increased. In the case of the identical BM scaffold memory unit, 118 MMP analogs to the training set and 35 MMP analogs to the test set have been generated. An even higher number of MMP analogs was generated using the compound similarity memory unit; 217 MMP analogs to the training set and 60 MMP analogs to the validation and test set. Despite the high number of generated ECFP6 analogs, the identical carbon skeleton memory unit generated only a few MMP analogs; 61 for the training set and five for the test sets. The memory unit utilizing the scaffold similarity generated 155 MMP analogs of the training set and 19 analogs of the test and validation set. For both targets, the memory unit using the compound similarity led to the largest increase in the generation of MMPs with known active compounds, indicating that application of the compound similarity criterion in RL resulted in highest diversity of newly generated compounds. Compared to the standard RL, memory-assisted RL overall led to broader coverage of chemical space including more highly scored compounds and more diversified BM scaffolds and carbon skeletons. Figure 3 shows the difference in the ECFP6 analog generation utilizing the memory unit during the RL. All calculations generated the first ECFP6 analog around iteration 10. For both targets, the normal RL showed the lowest rate at which ECFP6 analogs were generated. Memory-assisted RL generated ECFP6 analogs at a higher rate. In the case of HTR1A, all memory types generated analogs at a similar rate. The large number of generated ECFP6 analogs also resulted in a larger number of BM scaffolds and carbon skeletons. For DRD2, RL without a memory unit showed a very low rate at which ECFP6 analogs were generated. Between the iteration 100 and 300, only 500 ECFP6 analogs were generated with a predicted activity larger or equal 0.7, despite sampling 20,000 SMILES. This also resulted in a very small number of generated BM scaffold and carbon skeletons for DRD2 (Fig. 3e, f ), which illustrates the so-called policy collapse. RL produced highly scoring compounds; however, it did not explore different regions of chemical space. On the other hand, RL with the memory units produced many more ECFP6 analogs with more diverse BM scaffolds and carbon skeletons. By design of the memory unit, different models did not receive a reward when they sampled more than 25 similar compounds. This forced the generative models to explore different regions of chemical space. Similarity measurement of the memory unit determined the directions in which chemical space was further explored. As a consequence, all memory types yielded a significant increase in the rate at which different scaffolds were generated using RL. Exemplary compounds generated using Table 5 \n\n\nECFP6 analogs and MMP analogs generated for the DRD2 and HTR1A data set\n\nThe generated compounds were compared with known actives. If the nearest neighbor Tanimoto similarity (using count-based ECFP6) to known actives was larger than 0.4, or if a fragment from a generated compound formed an MMP relationship with a known active it was considered an analog the HTR1A classifier and their MMP analogs are shown in Fig. 4. All RL methods generated analogs for the same experimental validated ligand. RL without a memory unit generated analogs with a linear side chain in para-position to the piperazine with two different characteristics including an aliphatic side chain containing bromine and a more polar side chain having a primary and secondary amine. The analogs generated with the memory unit showed substitutions at different sides. The first exemplary analog of the scaffold similarity memory unit contains a 2-hydroxy benzene attached to the naphthalene and the second analog a short linear side chain ending in a primary amine attached to the piperazine. The memory unit matching identical BM scaffolds generated an analog similar to the analog produced by the scaffold similarity memory, where a linear side chain with a terminal primary amine is attached to the piperazine. In a second analog, a tertiary amine is added at the naphthalene. The compound similarity memory unit generated analogs where a methyl and a secondary amine is attached to the naphthalene. The memory unit matching carbon skeletons produced two analogs with substituents at the a b c d e f In the first analog produced by the scaffold similarity memory, identical BM memory, and the carbon skeleton memory unit, the chlorine is replaced with fluorine, a primary amine, or a methyl group. The compound similarity memory unit retains the chlorine but introduces an ether group in the linker between the piperidine and the benzene. The second example for the scaffold similarity memory reveals a change of the chlorine to a 1-methyl pyrrolidine. Also, the compound similarity and the identical BM scaffold memory unit extended the known scaffold by replacing the chlorine with benzene. The carbon skeleton memory unit extended the scaffold on the other side of the compound by adding a 1-methyl pyrrolidine to the left benzene. These examples illustrate how the generative model with memory unit can retrieve known scaffolds of experimentally validated ligands and also extend their scaffold in various ways.\n\n\nInfluence of parameters\n\nFor a deeper understanding of this methodology, we also evaluated the influence of different parameters of  the memory unit on the DRD2 analog generation. We benchmarked the effect of the bucket size, the Tanimoto similarity threshold at which compounds are placed in the same bucket, and different output modes. Different bucket sizes ranging from 5 to 75 with an increment of 5 were evaluated. With the exception of matching the identical BM scaffold, every memory unit showed a slight tendency to generate more ECFP6 analogs with increasing bucket size (Fig. 6a). The number of generated BM scaffolds and carbon skeletons show a similar behavior (Fig. 6b, c). For the two memory units measuring the compound and the scaffold similarities, we also assessed the influence of the similarity threshold at which compounds were considered to be similar and assigned to the bucket. For this experiment, we set the bucket size to 25 and evaluated similarity threshold values between 0.3 and 0.9 with an increment of 0.1. The results are shown in Additional file 1: Figure S1. The compound similarity memory units displayed a very clear tendency to generate more ECFP6 analogs for higher similarity values. However, the number of BM scaffolds and carbon skeletons did not significantly increase at similarity thresholds higher than 0.6. The scaffold similarity memory unit generated the maximum number of ECFP6 analogs at a In addition to these two different parameters we also analyzed two different variants of the memory unit with a different output function. Instead of just giving a binary output of 1 if the bucket is not full and 0 if it is, we tried to smoothen this output for a partially filled bucket using a linear and a sigmoid function. In both cases, the output of the memory unit was reduced inversely proportional to the number of compounds present in a bucket. The linear output mode can be defined as follows:\n\nThe sigmoid is defined as:\n\nFor both variations of the output mode we repeated the DRD2 experiment with a bucket size of 25 and a Tanimoto similarity value of 0.6. The results are presented in  Additional file 1: Figure S2. Both output modes showed a slight decrease the number of ECFP6 analogs, BM scaffolds and carbon skeletons and were therefore not taken into further consideration in combination with different parameters.\n\n\nComparison with other methods for increasing diversity\n\nWe also compared the memory unit to another wellestablished method to increase the diversity, the experience replay [53] method. The basic idea behind experience replay is to learn from highly scoring compounds multiple times. For the experience replay, all generated compounds and their scores were saved. After each iteration of the RL, eight compounds were randomly sampled from the list of saved compounds and the model receives a reward for these compounds. The probability at which the compound were sampled was directly proportional to the saved scores. To evaluate the effect of the experience replay on the methodology, we repeated the previously described experiment with varying bucket sizes. The results are shown in Fig. 7. The blue lines in Fig. 7a, c and Fig. 7b, d and f, demonstrating that using the memory unit alone achieves a larger diversity than using experience replay alone. At the same time, when both experience replay and the memory unit are used, the number of ECFP6 analogs, BM scaffolds and carbon skeletons are always larger than the respective result using the memory unit without experience replay. This result suggests that experience replay in combination with the memory unit can achieve an even larger molecular diversity. This is probably because experience replay presents multiple highly scored compounds to the model. The model then uses these compounds as new starting points for searching the chemical space. This way, when the memory unit alters the scoring and forces the model to search for new compounds, the model can start from multiple highly scored compound instead from just the last one.\n\nIn addition to the experience replay, we examined different values for the \"temperature\", which is used by the RNN during the sampling of the individual tokens. Values larger than 1.0 increase the randomness while generating a SMILES string by smoothing the output distribution of each individual character being sampled. For REINVENT without a memory unit, we examined temperature values ranging from 1.0 to 2.0 with a 0.25 increment and from 2.0 to 10.0 with a 1.0 increment. For a direct comparison with the memory unit, a constant temperature of 1.0 was applied in all cases. The results for different temperature values are shown in Additional file 1: Figure S3. Temperature values greater than 2.0 led prohibited the generation of analogs. Temperatures equal to or greater than 4.0 prevented the generation of valid SMILES. Only the temperature value of 1.25 resulted in a significant increase in the number of generated ECFP6 analogs, BM scaffolds and carbon skeletons. Higher temperature values did not yield any significant increase in the number generated analog. It is important to note that even with the optimized value temperature of 1.25 the number of generated ECFP4 analogs, BM scaffolds and carbon skeletons was only ~ 50% compared to any memory assisted RL. These results are in line with recommendations resulting from other studies [20,54] not to modify the temperature values because the SMILES syntax is prone to errors with increasing temperature.\n\nThe proposed memory unit is a passive memory unit into which compounds only can get added. A different type of memory unit exist in the architectures calles differential neural computers (DNC). A DNC add a memory unit into which the generative model can read and write accorinding to it's learned parameters. Conceptionally the memory unit is an extension to the memory in common RNN cells like the LSTM.\n\n\nConclusions\n\nWe developed the memory unit to address the common issue in RL that the generated compounds often lack chemical diversity due to the so-called policy collapse. The memory unit was designed to be easily integrated into RNNS for RL such as REINVENT. With the introduction of the memory unit, the reward function was modified when the generative model created a sufficient number of similar highly scoring compounds. Therefore, the model must create new chemical entities that are dissimilar to the original solution to maximize the reward again. In the proof-of-concept studies, we optimized the LogP for known bioactive compounds. The results of this optimization indicated that memory-assisted RL led to the generation of more highly-scoring compounds compared to the standard RL. A similar increase in the number of generated compounds as well as the number of BM and carbon scaffolds was observed while optimizing compounds for activity prediction towards HTR1A and DRD2. Additionally, the increase in generated compounds also led to an increase in the generation of analogs. This indicates that the introduction of the memory unit did not reduce the ability of the generative model to produce relevant chemical structures. In summary, our findings indicate that the introduction of the memory unit provides a useful and extendable framework for addressing the so-called policy collapse in generative compound design.\n\n\nSupplementary information\n\nSupplementary information accompanies this paper at https ://doi. org/10.1186/s1332 1-020-00473 -0.\n\nAdditional file 1: Figure S1. ECFP6 analog generation during reinforcement learning with different similarity thresholds. Figure S2. ECFP6 analog generation during reinforcement learning with different output modes. Figure S3. ECFP6 analog generation during reinforcement learning without memory units and different temperatures \n\nFig. 3\n3ECFP6 analog generation during reinforcement learning. In a-c the HTR1A QSAR model was used. In d-f the DRD2 model was used. a and d show the number of generated ECFP6 analogs. Compounds with a prediction score of at least 0.7 and Tanimoto similarity (count-based ECFP6) to the nearest neighbor of known actives of at least 0.4 were considered ECFP6 analogs. b and e show the number of unique BM scaffolds of the generated ECFP6 analogs. c and f show the number of unique carbon skeletons of the generated ECFP6 analogs naphthalene including one analog with a primary amine and another with a pyrrolidine.Eight examples of DRD2 analogs generated with memory units are shown inFig. 5. Similar to the HTR1A examples, the generated analogs show different types of modifications such as changes in linear chains, functional groups, or ring substituents compared to the known ligand.\n\nFig. 4\n4Examples of generated HTR1A-analogs. Shown are three generated examples for the HTR1A optimization using no memory unit and the different memory units, respectively. The closest MMP analog is shown in the upper left\n\nFig. 5\n5Examples of generated DRD2-analogs. Shown are generated examples for the DRD2 optimization using the different memory units. The known DRD2 inhibitors are shown on the left. Compounds for RL without a memory unit are not shown because it did not generate compounds establishing single cut MMPs with the inhibitors similarity threshold of 0.6. At higher similarity thresholds the number of ECFP6 analogs decreased again. This also applied to the number of BM scaffolds and carbon skeletons.\n\n\nAbbreviations AUC : Area Under Curve; BM: Bemis-Murcko; DRD2: Dopamine Receptor D2; ECFP: Extended-Connectivity Fingerprint; F1: F-measure: harmonic mean of the precision and recall; GAN: Generative Adversarial Networks; GRU : Gated Recurrent Units; HTR1A: 5-Hydroxytryptamine Receptor 1A; MCC: Matthews Correlation Coefficient; MMP: Matched Molecular Pair; NLL: Negative Log-Likelihood; RL: Reinforcement Learning; RNN: Recurrent Neural Networks; ROC: Receiver Operating Characteristic; SMILES: Simple Molecular Input Line Entry System.\n\n\n. The HTR1A activity model showed excellent balanced accuracy (BA) of 0.96 for the validation and the test set. Also, the F1 [51] and Matthews's correlation coefficient (MCC) score yielded high values of 0.75 for the validation and test set, indicating low misclassification of the active compounds. The DRD2 activity model showed a similar performance. BA reached high values of 0.93 and 0.95 for the validation and test set, respectively. For the test set, the F1 and MCC score values were 0.71 and 0.72, respectively. The area under the receiver operating characteristic curve (ROC AUC)\n\nTable 3\n3Predictive performance of the SVM modelsThe SVM model was trained on the training set and the hyperparameters c, the choice of the kernel, and the class weight were optimized towards a high F1 score on the validation set. The test set was used to estimate the predictive performance of unknown compounds. \"bal\" stands for balancedTarget \nSet \nBal. ACC \nROC AUC \nF1 \nMCC \n\nHTR1A \nTraining \n0.98 \n0.99 \n0.77 \n0.78 \n\nValidation \n0.96 \n0.99 \n0.75 \n0.75 \n\nTest \n0.96 \n0.99 \n0.75 \n0.75 \n\nDRD2 \nTraining \n0.99 \n0.99 \n0.77 \n0.79 \n\nValidation \n0.93 \n0.98 \n0.70 \n0.71 \n\nTest \n0.95 \n0.99 \n0.71 \n0.72 \n\n\n\ne refer to the number of ECFP6 analogs, BM scaffolds and carbon skeletons using RL with experience replay and without the memory unit. They are all below the results of theFig. 6 ECFP6 analog generation during reinforcement learning with different bucket sizes. The different bucket sizes do not apply for the RL without a memory unit. In all figures the DRD2 QSAR model was used. a shows the number of generated ECFP6 analogs. Compounds with a prediction score of at least 0.7 and Tanimoto similarity (count-based ECFP6) to the nearest neighbor of known actives of at least 0.4 were considered ECFP6 analogs. b shows the number of unique BM scaffolds of the generated ECFP6 analogs. c shows the number of unique carbon skeletons of the generated ECFP6 analogsFig. 7 ECFP6 analog generation during reinforcement learning with experience replay and different bucket sizes. In all figures the DRD2 QSAR model was used. (a), (c) and (e) display experiments with experience replay. (b), (d) and (f) experiments without experience replay. a, b show the number of generated ECFP6 analogs. Compounds with a prediction score of at least 0.7 and Tanimoto similarity (count-based ECFP6) to the nearest neighbor of known actives of at least 0.4 were considered ECFP6 analogs. c, d show the number of unique BM scaffolds of the generated ECFP6analogs. e, f show the number of unique carbon skeletons of the generated ECFP6 analogs. In all panels the RL without a memory (blue line) is not affected by the bucket size as this parameter is not present RL with the different memory units and without experience replay ina \nb \nc \n\na \nb \n\nc \nd \n\ne \nf \n\n\nAcknowledgementsThomas Blaschke has received funding from the European Union's Horizon 2020 research and innovation program under the Marie Sklodowska-Curie grant agreement No 676434, \"Big Data in Chemistry\" (\"BIGCHEM\", http://bigch em.eu). The article reflects only the authors' view and neither the European Commission nor the Research Executive Agency (REA) are responsible for any use that may be made of the information it contains. The authors thank Thierry Kogej and Christian Tyrchan for useful discussions.Authors' contributions TB conceived the study and performed the computational work and analysis and wrote the manuscript. OE, JB, and HC provided feedback and critical input. JB revised the manuscript. All authors read and approved the final manuscript.FundingOpen Access funding enabled and organized by Projekt DEAL.Availability of data and materialThe data used in this study is publicly available ChEMBL data and ExCAPE data, the algorithm published in this manuscript and the used prepared datasets are made available via GitHub, https ://githu b.com/tblas chke/reinv ent-memor y.Competing interestsThe authors declare that they have no competing interests. Received: 2 August 2020 Accepted: 29 October 2020\nMastering the game of Go with deep neural networks and tree search. D Silver, A Huang, C J Maddison, 10.1038/nature16961Nature. 529Silver D, Huang A, Maddison CJ et al (2016) Mastering the game of Go with deep neural networks and tree search. Nature 529:484-489. https :// doi.org/10.1038/natur e1696 1\n\nHigh-performance medicine: the convergence of human and artificial intelligence. E J Topol, 10.1038/s41591-018-0300-7Nat Med. 25Topol EJ (2019) High-performance medicine: the convergence of human and artificial intelligence. Nat Med 25:44-56. https ://doi.org/10.1038/ s4159 1-018-0300-7\n\nIndustry-scale application and evaluation of deep learning for drug target prediction. N Sturm, A Mayr, Le Van, T , 10.1186/s13321-020-00428-5J Cheminform. 1226Sturm N, Mayr A, Le Van T et al (2020) Industry-scale application and evaluation of deep learning for drug target prediction. J Cheminform 12:26. https ://doi.org/10.1186/s1332 1-020-00428 -5\n\nEffect of missing data on multitask prediction methods. A D De Le\u00f3n, B Chen, V J Gillet, 10.1186/s13321-018-0281-zJ Cheminform. 1026de Le\u00f3n AD, Chen B, Gillet VJ (2018) Effect of missing data on multitask prediction methods. J Cheminform 10:26. https ://doi.org/10.1186/s1332 1-018-0281-z\n\nExtended-connectivity fingerprints. D Rogers, M Hahn, 10.1021/ci100050tJ Chem Inf Model. 50Rogers D, Hahn M (2010) Extended-connectivity fingerprints. J Chem Inf Model 50:742-754. https ://doi.org/10.1021/ci100 050t\n\nMol2vec: unsupervised machine learning approach with chemical intuition. S Jaeger, S Fulle, S Turk, 10.1021/acs.jcim.7b00616J Chem Inf Model. 58Jaeger S, Fulle S, Turk S (2018) Mol2vec: unsupervised machine learning approach with chemical intuition. J Chem Inf Model 58:27-35. https :// doi.org/10.1021/acs.jcim.7b006 16\n\ndruGAN: an advanced generative adversarial autoencoder model for de novo generation of new molecules with desired molecular properties in silico. A Kadurin, S Nikolenko, K Khrabrov, 10.1021/acs.molpharmaceut.7b00346Mol Pharm. 14Kadurin A, Nikolenko S, Khrabrov K et al (2017) druGAN: an advanced generative adversarial autoencoder model for de novo generation of new molecules with desired molecular properties in silico. Mol Pharm 14:3098-3104. https ://doi.org/10.1021/acs.molph armac eut.7b003 46\n\nMolecular graph convolutions: moving beyond fingerprints. S Kearnes, K Mccloskey, M Berndl, 10.1007/s10822-016-9938-8J Comput Aided Mol Des. 30Kearnes S, McCloskey K, Berndl M et al (2016) Molecular graph convolu- tions: moving beyond fingerprints. J Comput Aided Mol Des 30:595-608. https ://doi.org/10.1007/s1082 2-016-9938-8\n\nMoleculeNet: a benchmark for molecular machine learning. Z Wu, B Ramsundar, E N Feinberg, 10.1039/C7SC02664AChem Sci. 9Wu Z, Ramsundar B, Feinberg EN et al (2018) MoleculeNet: a bench- mark for molecular machine learning. Chem Sci 9:513-530. https ://doi. org/10.1039/C7SC0 2664A\n\nThe rise of deep learning in drug discovery. H Chen, O Engkvist, Y Wang, 10.1016/j.drudis.2018.01.039Drug Discov Today. 23Chen H, Engkvist O, Wang Y et al (2018) The rise of deep learning in drug discovery. Drug Discov Today 23:1241-1250. https ://doi.org/10.1016/j. drudi s.2018.01.039\n\nHas drug design augmented by artificial intelligence become a reality?. H Chen, O Engkvist, 10.1016/j.tips.2019.09.004Trends Pharmacol Sci. 40Chen H, Engkvist O (2019) Has drug design augmented by artificial intel- ligence become a reality? Trends Pharmacol Sci 40:806-809. https ://doi. org/10.1016/j.tips.2019.09.004\n\nApplication of Generative Autoencoder in De Novo Molecular Design. T Blaschke, M Olivecrona, O Engkvist, 10.1002/minf.201700123Mol Inform. 371700123Blaschke T, Olivecrona M, Engkvist O et al (2018) Application of Genera- tive Autoencoder in De Novo Molecular Design. Mol Inform 37:1700123. https ://doi.org/10.1002/minf.20170 0123\n\nGenerating focused molecule libraries for drug discovery with recurrent neural networks. Mhs Segler, T Kogej, C Tyrchan, M P Waller, 10.1021/acscentsci.7b00512ACS Cent Sci. 4Segler MHS, Kogej T, Tyrchan C, Waller MP (2018) Generating focused molecule libraries for drug discovery with recurrent neural networks. ACS Cent Sci 4:120-131. https ://doi.org/10.1021/acsce ntsci .7b005 12\n\nDirect steering of de novo molecular generation with descriptor conditional recurrent neural networks. P-C Kotsias, J Ar\u00fas-Pous, H Chen, 10.1038/s42256-020-0174-5Nat Mach Intell. 2Kotsias P-C, Ar\u00fas-Pous J, Chen H et al (2020) Direct steering of de novo molecular generation with descriptor conditional recurrent neural networks. Nat Mach Intell 2:254-265. https ://doi.org/10.1038/s4225 6-020-0174-5\n\nSeqGAN: Sequence Generative Adversarial Nets with Policy Gradient. L Yu, W Zhang, J Wang, Y Yu, arXiv:1609.05473Yu L, Zhang W, Wang J, Yu Y (2016) SeqGAN: Sequence Generative Adver- sarial Nets with Policy Gradient. pp 2852-2858. arXiv :1609.05473\n\nMolecular de-novo design through deep reinforcement learning. M Olivecrona, T Blaschke, O Engkvist, H Chen, 10.1186/s13321-017-0235-xJ Cheminform. 9Olivecrona M, Blaschke T, Engkvist O, Chen H (2017) Molecular de-novo design through deep reinforcement learning. J Cheminform 9:48. https :// doi.org/10.1186/s1332 1-017-0235-x\n\nOptimizing distributions over molecular space. An objective-reinforced generative adversarial network for inverse-design chemistry. B Sanchez-Lengeling, C Outeiral, G L Guimaraes, A Aspuru-Guzik, ORGANICSanchez-Lengeling B, Outeiral C, Guimaraes GL, Aspuru-Guzik A (2017) Optimizing distributions over molecular space. An objective-reinforced generative adversarial network for inverse-design chemistry (ORGANIC).\n\n. Chemrxiv, 10.26434/chemrxiv.53096685309668ChemRxiv. https ://doi.org/10.26434 /chemr xiv.53096 68\n\nReinforced adversarial neural computer for de Novo molecular design. E Putin, A Asadulaev, Y Ivanenkov, 10.1021/acs.jcim.7b00690J Chem Inf Model. 58Putin E, Asadulaev A, Ivanenkov Y et al (2018) Reinforced adversarial neural computer for de Novo molecular design. J Chem Inf Model 58:1194-1204. https ://doi.org/10.1021/acs.jcim.7b006 90\n\nAdversarial threshold neural computer for molecular de Novo design. E Putin, A Asadulaev, Q Vanhaelen, 10.1021/acs.molpharmaceut.7b01137Mol Pharm. 15Putin E, Asadulaev A, Vanhaelen Q et al (2018) Adversarial threshold neu- ral computer for molecular de Novo design. Mol Pharm 15:4386-4397. https ://doi.org/10.1021/acs.molph armac eut.7b011 37\n\nGenerative recurrent networks for De Novo drug design. A Gupta, A T M\u00fcller, Bjh Huisman, 10.1002/minf.201700111Mol Inform. 371700111Gupta A, M\u00fcller AT, Huisman BJH et al (2018) Generative recurrent networks for De Novo drug design. Mol Inform 37:1700111. https ://doi. org/10.1002/minf.20170 0111\n\nDe Novo design of bioactive small molecules by artificial intelligence. D Merk, L Friedrich, F Grisoni, G Schneider, 10.1002/minf.201700153Mol Inform. 371700153Merk D, Friedrich L, Grisoni F, Schneider G (2018) De Novo design of bio- active small molecules by artificial intelligence. Mol Inform 37:1700153. https ://doi.org/10.1002/minf.20170 0153\n\nDeep learning enables rapid identification of potent DDR1 kinase inhibitors. A Zhavoronkov, Y A Ivanenkov, A Aliper, 10.1038/s41587-019-0224-xNat Biotechnol. 37Zhavoronkov A, Ivanenkov YA, Aliper A et al (2019) Deep learning enables rapid identification of potent DDR1 kinase inhibitors. Nat Biotechnol 37:1038-1040. https ://doi.org/10.1038/s4158 7-019-0224-x\n\nD Polykovskiy, A Zhebrak, B Sanchez-Lengeling, arXiv:1811.12823Molecular Sets (MOSES): a benchmarking platform for molecular generation models. Polykovskiy D, Zhebrak A, Sanchez-Lengeling B, et al (2018) Molecular Sets (MOSES): a benchmarking platform for molecular generation mod- els. arXiv :1811.12823\n\nChemGAN challenge for drug discovery: can AI reproduce natural chemical diversity?. M Benhenda, arXiv:1708.08227Benhenda M (2017) ChemGAN challenge for drug discovery: can AI reproduce natural chemical diversity? arXiv :1708.08227\n\nGuacaMol: benchmarking models for de Novo molecular design. N Brown, M Fiscato, Mhs Segler, A C Vaucher, 10.1021/acs.jcim.8b00839J Chem Inf Model. 59Brown N, Fiscato M, Segler MHS, Vaucher AC (2019) GuacaMol: bench- marking models for de Novo molecular design. J Chem Inf Model 59:1096-1108. https ://doi.org/10.1021/acs.jcim.8b008 39\n\nGEN: highly efficient SMILES explorer using autodidactic generative examination networks. R Van Deursen, P Ertl, I V Tetko, G Godin, 10.1186/s13321-020-00425-8J Cheminform. 1222van Deursen R, Ertl P, Tetko IV, Godin G (2020) GEN: highly efficient SMILES explorer using autodidactic generative examination networks. J Chemin- form 12:22. https ://doi.org/10.1186/s1332 1-020-00425 -8\n\nReinforcement Learning: an Introduction. R S Sutton, A G Barto, 10.1109/TNN.1998.712192IEEE Trans Neural Networks. 91054Sutton RS, Barto AG (1998) Reinforcement Learning: an Introduction. IEEE Trans Neural Networks 9:1054. https ://doi.org/10.1109/TNN.1998.71219 2\n\nL Metz, B Poole, D Pfau, J Sohl-Dickstein, arXiv:1611.02163Generative Adversarial Networks. Metz L, Poole B, Pfau D, Sohl-Dickstein J (2016) Unrolled Generative Adversarial Networks. arXiv :1611.02163\n\nT Salimans, I Goodfellow, W Zaremba, arXiv:1606.03498Improved techniques for Training GANs. Salimans T, Goodfellow I, Zaremba W, et al (2016) Improved techniques for Training GANs. arXiv :1606.03498\n\nCompeting against equilibria in Zero-Sum Games with evolving payoffs. A R Cardoso, J Abernethy, H Wang, H Xu, arXiv:1907.07723Cardoso AR, Abernethy J, Wang H, Xu H (2019) Competing against equi- libria in Zero-Sum Games with evolving payoffs. arXiv :1907.07723\n\nAn exploration strategy improves the diversity of de novo ligands using deep reinforcement learning: a case for the adenosine A2A receptor. X Liu, K Ye, Hwt Van Vlijmen, 10.1186/s13321-019-0355-6J Cheminform. 1135Liu X, Ye K, van Vlijmen HWT et al (2019) An exploration strategy improves the diversity of de novo ligands using deep reinforcement learning: a case for the adenosine A2A receptor. J Cheminform 11:35. https ://doi. org/10.1186/s1332 1-019-0355-6\n\nREINVENT 2.0 -an AI Tool for De Novo Drug Design. T Blaschke, J Ar\u00fas-Pous, H Chen, 10.26434/chemrxiv.12058026.v2Blaschke T, Ar\u00fas-Pous J, Chen H et al (2020) REINVENT 2.0 -an AI Tool for De Novo Drug Design. ChemRxiv. https ://doi.org/10.26434 /chemr xiv.12058 026.v2\n\nThe ChEMBL database in 2017. A Gaulton, A Hersey, M Nowotka, 10.1093/nar/gkw1074Nucleic Acids Res. 45Gaulton A, Hersey A, Nowotka M et al (2017) The ChEMBL database in 2017. Nucleic Acids Res 45:D945-D954. https ://doi.org/10.1093/nar/ gkw10 74\n\n\u00c9tude comparative de la distribution florale dans une portion des Alpes et du Jura. P Jaccard, E Zurich, 10.5169/seals-266450Bull la Soci\u00e9t\u00e9 Vaudoise des Sci Nat. 37Jaccard P, Zurich E (1901) \u00c9tude comparative de la distribution florale dans une portion des Alpes et du Jura. Bull la Soci\u00e9t\u00e9 Vaudoise des Sci Nat 37:547-579. https ://doi.org/10.5169/seals -26645 0\n\nThe Properties of Known Drugs. 1 Molecular Frameworks. G W Bemis, M A Murcko, 10.1021/jm9602928J Med Chem. 39Bemis GW, Murcko MA (1996) The Properties of Known Drugs. 1 Molecu- lar Frameworks. J Med Chem 39:2887-2893. https ://doi.org/10.1021/ jm960 2928\n\nAtom pairs as molecular features in structure-activity studies: definition and applications. R E Carhart, D H Smith, R Venkataraghavan, 10.1021/ci00046a002J Chem Inf Model. 25Carhart RE, Smith DH, Venkataraghavan R (1985) Atom pairs as molecular features in structure-activity studies: definition and applications. J Chem Inf Model 25:64-73. https ://doi.org/10.1021/ci000 46a00 2\n\n307l \u2022 fast, convenient online submission \u2022 thorough peer review by experienced researchers in your field \u2022 rapid publication on acceptance \u2022 support for research data, including large and complex data types \u2022 gold Open Access which fosters wider collaboration and increased citations maximum visibility for your research: over 100M website views per year \u2022 At BMC. S A Wildman, G M Crippen, 10.1021/ci990307lJ Chem Inf Comput Sci. 39Prediction of Physicochemical Parameters by Atomic Contributions. research is always in progress. Learn more biomedcentral.com/submissions Ready to submit your research ? Choose BMC and benefit fromWildman SA, Crippen GM (1999) Prediction of Physicochemical Param- eters by Atomic Contributions. J Chem Inf Comput Sci 39:868-873. https ://doi.org/10.1021/ci990 307l \u2022 fast, convenient online submission \u2022 thorough peer review by experienced researchers in your field \u2022 rapid publication on acceptance \u2022 support for research data, including large and complex data types \u2022 gold Open Access which fosters wider collaboration and increased citations maximum visibility for your research: over 100M website views per year \u2022 At BMC, research is always in progress. Learn more biomedcentral.com/submissions Ready to submit your research ? Choose BMC and benefit from:\n\nmmpdb: an open-source matched molecular pair platform for large multiproperty data sets. A Dalke, J Hert, C Kramer, 10.1021/acs.jcim.8b00173J Chem Inf Model. 58Dalke A, Hert J, Kramer C (2018) mmpdb: an open-source matched molecular pair platform for large multiproperty data sets. J Chem Inf Model 58:902-910. https ://doi.org/10.1021/acs.jcim.8b001 73\n\nSupport-vector networks. C Cortes, V Vapnik, 10.1007/BF00994018Mach Learn. 20Cortes C, Vapnik V (1995) Support-vector networks. Mach Learn 20:273- 297. https ://doi.org/10.1007/BF009 94018\n\nExCAPE-DB: an integrated large scale dataset facilitating Big Data analysis in chemogenomics. J Sun, N Jeliazkova, V Chupakhin, 10.1186/s13321-017-0203-5J Cheminform. 917Sun J, Jeliazkova N, Chupakhin V et al (2017) ExCAPE-DB: an integrated large scale dataset facilitating Big Data analysis in chemogenomics. J Cheminform 9:17. https ://doi.org/10.1186/s1332 1-017-0203-5\n\nSimilarity to molecules in the training set is a good discriminator for prediction accuracy in QSAR. R P Sheridan, B P Feuston, V N Maiorov, S K Kearsley, 10.1021/ci049782wJ Chem Inf Comput Sci. 44Sheridan RP, Feuston BP, Maiorov VN, Kearsley SK (2004) Similarity to mol- ecules in the training set is a good discriminator for prediction accuracy in QSAR. J Chem Inf Comput Sci 44:1912-1928. https ://doi.org/10.1021/ ci049 782w\n\nUnsupervised data base clustering based on daylight's fingerprint and tanimoto similarity: a fast and automated way to cluster small and large data sets. D Butina, 10.1021/ci9803381J Chem Inf Comput Sci. 39Butina D (1999) Unsupervised data base clustering based on daylight's fingerprint and tanimoto similarity: a fast and automated way to cluster small and large data sets. J Chem Inf Comput Sci 39:747-750. https ://doi. org/10.1021/ci980 3381\n\nScikit-learn: machine Learning in Python. F Pedregosa, G Varoquaux, A Gramfort, J Mach Learn Res. 12Pedregosa F, Varoquaux G, Gramfort A et al (2011) Scikit-learn: machine Learning in Python. J Mach Learn Res 12:2825-2830\n\nComparison of the predicted and observed secondary structure of T4 phage lysozyme. B W Matthews, 10.1016/0005-2795(75)90109-9Biochim Biophys Acta Protein Struct. 405Matthews BW (1975) Comparison of the predicted and observed second- ary structure of T4 phage lysozyme. Biochim Biophys Acta Protein Struct 405:442-451. https ://doi.org/10.1016/0005-2795(75)90109 -9\n\nProbabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods. J C Platt, Advances in Large Margin Classifiers. MIT PressPlatt JC (1999) Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods. In: Advances in Large Margin Classifiers. MIT Press, pp 61-74\n\nGraph kernels for chemical informatics. L Ralaivola, S J Swamidass, H Saigo, P Baldi, 10.1016/j.neunet.2005.07.009Neural Networks. 18Ralaivola L, Swamidass SJ, Saigo H, Baldi P (2005) Graph kernels for chemi- cal informatics. Neural Networks 18:1093-1110. https ://doi.org/10.1016/j. neune t.2005.07.009\n\nLearning phrase representations using RNN encoder-decoder for statistical machine translation. K Cho, B Van Merrienboer, C Gulcehre, arXiv:1406.1078Cho K, van Merrienboer B, Gulcehre C, et al (2014) Learning phrase repre- sentations using RNN encoder-decoder for statistical machine translation. arXiv :1406.1078\n\nAdam: A Method for Stochastic Optimization. D P Kingma, J Ba, arXiv:1412.6980Kingma DP, Ba J (2014) Adam: A Method for Stochastic Optimization. arXiv :1412.6980\n\nComputationally efficient algorithm to identify matched molecular Pairs (MMPs) in large data sets. J Hussain, C Rea, 10.1021/ci900450mJ Chem Inf Model. 50Hussain J, Rea C (2010) Computationally efficient algorithm to identify matched molecular Pairs (MMPs) in large data sets. J Chem Inf Model 50:339-348. https ://doi.org/10.1021/ci900 450m\n\nMMP-Cliffs: systematic identification of activity cliffs on the basis of matched molecular Pairs. X Hu, Y Hu, M Vogt, 10.1021/ci3001138J Chem Inf Model. 52Hu X, Hu Y, Vogt M et al (2012) MMP-Cliffs: systematic identification of activity cliffs on the basis of matched molecular Pairs. J Chem Inf Model 52:1138-1145. https ://doi.org/10.1021/ci300 1138\n\nPerformance Evaluation. An Introduction to Machine Learning. M Kubat, Springer International PublishingChamKubat M (2017) Performance Evaluation. An Introduction to Machine Learning. Springer International Publishing, Cham, pp 211-229\n\nAn introduction to ROC analysis. T Fawcett, 10.1016/j.patrec.2005.10.010Pattern Recognit Lett. 27Fawcett T (2006) An introduction to ROC analysis. Pattern Recognit Lett 27:861-874. https ://doi.org/10.1016/j.patre c.2005.10.010\n\nSelf-improving reactive agents based on reinforcement learning, planning and teaching. L-J Lin, 10.1007/BF00992699Mach Learn. 8Lin L-J (1992) Self-improving reactive agents based on reinforcement learning, planning and teaching. Mach Learn 8:293-321. https ://doi. org/10.1007/BF009 92699\n\nExploring Deep Recurrent Models with Reinforcement Learning for Molecule Design. D Neil, M Segler, L Guasch, Neil D, Segler M, Guasch L, et al (2018) Exploring Deep Recurrent Models with Reinforcement Learning for Molecule Design. ICLR 2018\n\nPublisher's Note. Publisher's Note\n\nSpringer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations. Springer Nature remains neutral with regard to jurisdictional claims in pub- lished maps and institutional affiliations.\n", "annotations": {"author": "[{\"end\":95,\"start\":79},{\"end\":109,\"start\":96},{\"end\":126,\"start\":110},{\"end\":141,\"start\":127}]", "publisher": null, "author_last_name": "[{\"end\":94,\"start\":86},{\"end\":108,\"start\":100},{\"end\":125,\"start\":117},{\"end\":140,\"start\":136}]", "author_first_name": "[{\"end\":85,\"start\":79},{\"end\":99,\"start\":96},{\"end\":116,\"start\":110},{\"end\":135,\"start\":127}]", "author_affiliation": null, "title": "[{\"end\":76,\"start\":1},{\"end\":217,\"start\":142}]", "venue": null, "abstract": "[{\"end\":2450,\"start\":1096}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2919,\"start\":2916},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3145,\"start\":3142},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3432,\"start\":3429},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3550,\"start\":3547},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3674,\"start\":3671},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3741,\"start\":3738},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3753,\"start\":3750},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3768,\"start\":3765},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4045,\"start\":4042},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4694,\"start\":4690},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4861,\"start\":4857},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":5094,\"start\":5090},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5133,\"start\":5129},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5156,\"start\":5152},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5205,\"start\":5201},{\"end\":5598,\"start\":5581},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":5741,\"start\":5737},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":6108,\"start\":6104},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":6199,\"start\":6195},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":6202,\"start\":6199},{\"end\":6368,\"start\":6351},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":6480,\"start\":6476},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6861,\"start\":6857},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7006,\"start\":7002},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":7345,\"start\":7341},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":7349,\"start\":7345},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":7353,\"start\":7349},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":7547,\"start\":7543},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":7906,\"start\":7902},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":7910,\"start\":7906},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":7914,\"start\":7910},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":7918,\"start\":7914},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":8182,\"start\":8178},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9199,\"start\":9195},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":9202,\"start\":9199},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":9494,\"start\":9490},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":14684,\"start\":14680},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":15392,\"start\":15388},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":18002,\"start\":17998},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":19371,\"start\":19367},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":19397,\"start\":19393},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":19819,\"start\":19815},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":20282,\"start\":20278},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":20754,\"start\":20750},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":20822,\"start\":20818},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":20949,\"start\":20946},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":21784,\"start\":21780},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":22099,\"start\":22095},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":22268,\"start\":22264},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":22363,\"start\":22359},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":22849,\"start\":22845},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":22950,\"start\":22946},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":24076,\"start\":24072},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":26991,\"start\":26987},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":27204,\"start\":27200},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":28865,\"start\":28861},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":31415,\"start\":31411},{\"end\":31419,\"start\":31415},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":42123,\"start\":42119},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":45002,\"start\":44998},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":45005,\"start\":45002}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":48305,\"start\":47418},{\"attributes\":{\"id\":\"fig_1\"},\"end\":48530,\"start\":48306},{\"attributes\":{\"id\":\"fig_2\"},\"end\":49029,\"start\":48531},{\"attributes\":{\"id\":\"fig_5\"},\"end\":49569,\"start\":49030},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":50161,\"start\":49570},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":50762,\"start\":50162},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":52401,\"start\":50763}]", "paragraph": "[{\"end\":4695,\"start\":2466},{\"end\":7201,\"start\":4697},{\"end\":8518,\"start\":7203},{\"end\":8982,\"start\":8520},{\"end\":9881,\"start\":9010},{\"end\":10683,\"start\":9936},{\"end\":10984,\"start\":10685},{\"end\":11093,\"start\":10986},{\"end\":11954,\"start\":11109},{\"end\":13228,\"start\":12077},{\"end\":14463,\"start\":13230},{\"end\":15193,\"start\":14465},{\"end\":15555,\"start\":15195},{\"end\":17812,\"start\":15557},{\"end\":18389,\"start\":17814},{\"end\":18575,\"start\":18418},{\"end\":19177,\"start\":18623},{\"end\":19398,\"start\":19179},{\"end\":19854,\"start\":19483},{\"end\":20194,\"start\":19898},{\"end\":21688,\"start\":20208},{\"end\":22747,\"start\":21715},{\"end\":23116,\"start\":22768},{\"end\":23289,\"start\":23118},{\"end\":24105,\"start\":23291},{\"end\":24605,\"start\":24195},{\"end\":25574,\"start\":24607},{\"end\":26114,\"start\":25576},{\"end\":27329,\"start\":26181},{\"end\":28088,\"start\":27331},{\"end\":28658,\"start\":28169},{\"end\":29011,\"start\":28660},{\"end\":29177,\"start\":29013},{\"end\":31111,\"start\":29237},{\"end\":32012,\"start\":31113},{\"end\":32557,\"start\":32014},{\"end\":33423,\"start\":32559},{\"end\":37073,\"start\":33425},{\"end\":39565,\"start\":37149},{\"end\":41515,\"start\":39593},{\"end\":41543,\"start\":41517},{\"end\":41944,\"start\":41545},{\"end\":43643,\"start\":42003},{\"end\":45116,\"start\":43645},{\"end\":45522,\"start\":45118},{\"end\":46957,\"start\":45538},{\"end\":47086,\"start\":46987},{\"end\":47417,\"start\":47088}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":12076,\"start\":11955},{\"attributes\":{\"id\":\"formula_1\"},\"end\":19897,\"start\":19855},{\"attributes\":{\"id\":\"formula_2\"},\"end\":24164,\"start\":24106}]", "table_ref": "[{\"end\":25370,\"start\":25363},{\"end\":27328,\"start\":27321},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":28860,\"start\":28853},{\"end\":30185,\"start\":30177},{\"end\":32556,\"start\":32547},{\"end\":33374,\"start\":33367},{\"end\":37072,\"start\":37065}]", "section_header": "[{\"end\":2464,\"start\":2452},{\"end\":9008,\"start\":8985},{\"end\":9934,\"start\":9884},{\"end\":11107,\"start\":11096},{\"end\":18416,\"start\":18392},{\"end\":18621,\"start\":18578},{\"end\":19481,\"start\":19401},{\"end\":20206,\"start\":20197},{\"end\":21713,\"start\":21691},{\"end\":22766,\"start\":22750},{\"end\":24173,\"start\":24166},{\"end\":24193,\"start\":24176},{\"end\":26179,\"start\":26117},{\"end\":28167,\"start\":28091},{\"end\":29235,\"start\":29180},{\"end\":37147,\"start\":37076},{\"end\":39591,\"start\":39568},{\"end\":42001,\"start\":41947},{\"end\":45536,\"start\":45525},{\"end\":46985,\"start\":46960},{\"end\":47425,\"start\":47419},{\"end\":48313,\"start\":48307},{\"end\":48538,\"start\":48532},{\"end\":50170,\"start\":50163}]", "table": "[{\"end\":50762,\"start\":50502},{\"end\":52401,\"start\":52370}]", "figure_caption": "[{\"end\":48305,\"start\":47427},{\"end\":48530,\"start\":48315},{\"end\":49029,\"start\":48540},{\"end\":49569,\"start\":49032},{\"end\":50161,\"start\":49572},{\"end\":50502,\"start\":50172},{\"end\":52370,\"start\":50765}]", "figure_ref": "[{\"end\":11888,\"start\":11882},{\"end\":11909,\"start\":11903},{\"end\":15836,\"start\":15830},{\"end\":16811,\"start\":16805},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":35425,\"start\":35417},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":36295,\"start\":36282},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":37495,\"start\":37489},{\"end\":40158,\"start\":40149},{\"end\":40254,\"start\":40242},{\"end\":40662,\"start\":40653},{\"end\":41739,\"start\":41730},{\"end\":42738,\"start\":42732},{\"end\":42772,\"start\":42758},{\"end\":42780,\"start\":42773},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":44311,\"start\":44302},{\"end\":47116,\"start\":47107},{\"end\":47219,\"start\":47210},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":47313,\"start\":47304}]", "bib_author_first_name": "[{\"end\":53699,\"start\":53698},{\"end\":53709,\"start\":53708},{\"end\":53718,\"start\":53717},{\"end\":53720,\"start\":53719},{\"end\":54016,\"start\":54015},{\"end\":54018,\"start\":54017},{\"end\":54311,\"start\":54310},{\"end\":54320,\"start\":54319},{\"end\":54329,\"start\":54327},{\"end\":54336,\"start\":54335},{\"end\":54633,\"start\":54632},{\"end\":54635,\"start\":54634},{\"end\":54646,\"start\":54645},{\"end\":54654,\"start\":54653},{\"end\":54656,\"start\":54655},{\"end\":54903,\"start\":54902},{\"end\":54913,\"start\":54912},{\"end\":55157,\"start\":55156},{\"end\":55167,\"start\":55166},{\"end\":55176,\"start\":55175},{\"end\":55552,\"start\":55551},{\"end\":55563,\"start\":55562},{\"end\":55576,\"start\":55575},{\"end\":55965,\"start\":55964},{\"end\":55976,\"start\":55975},{\"end\":55989,\"start\":55988},{\"end\":56293,\"start\":56292},{\"end\":56299,\"start\":56298},{\"end\":56312,\"start\":56311},{\"end\":56314,\"start\":56313},{\"end\":56562,\"start\":56561},{\"end\":56570,\"start\":56569},{\"end\":56582,\"start\":56581},{\"end\":56877,\"start\":56876},{\"end\":56885,\"start\":56884},{\"end\":57192,\"start\":57191},{\"end\":57204,\"start\":57203},{\"end\":57218,\"start\":57217},{\"end\":57548,\"start\":57545},{\"end\":57558,\"start\":57557},{\"end\":57567,\"start\":57566},{\"end\":57578,\"start\":57577},{\"end\":57580,\"start\":57579},{\"end\":57946,\"start\":57943},{\"end\":57957,\"start\":57956},{\"end\":57970,\"start\":57969},{\"end\":58309,\"start\":58308},{\"end\":58315,\"start\":58314},{\"end\":58324,\"start\":58323},{\"end\":58332,\"start\":58331},{\"end\":58553,\"start\":58552},{\"end\":58567,\"start\":58566},{\"end\":58579,\"start\":58578},{\"end\":58591,\"start\":58590},{\"end\":58950,\"start\":58949},{\"end\":58971,\"start\":58970},{\"end\":58983,\"start\":58982},{\"end\":58985,\"start\":58984},{\"end\":58998,\"start\":58997},{\"end\":59403,\"start\":59402},{\"end\":59412,\"start\":59411},{\"end\":59425,\"start\":59424},{\"end\":59741,\"start\":59740},{\"end\":59750,\"start\":59749},{\"end\":59763,\"start\":59762},{\"end\":60073,\"start\":60072},{\"end\":60082,\"start\":60081},{\"end\":60084,\"start\":60083},{\"end\":60096,\"start\":60093},{\"end\":60388,\"start\":60387},{\"end\":60396,\"start\":60395},{\"end\":60409,\"start\":60408},{\"end\":60420,\"start\":60419},{\"end\":60743,\"start\":60742},{\"end\":60758,\"start\":60757},{\"end\":60760,\"start\":60759},{\"end\":60773,\"start\":60772},{\"end\":61028,\"start\":61027},{\"end\":61043,\"start\":61042},{\"end\":61054,\"start\":61053},{\"end\":61418,\"start\":61417},{\"end\":61626,\"start\":61625},{\"end\":61635,\"start\":61634},{\"end\":61648,\"start\":61645},{\"end\":61658,\"start\":61657},{\"end\":61660,\"start\":61659},{\"end\":61992,\"start\":61991},{\"end\":62007,\"start\":62006},{\"end\":62015,\"start\":62014},{\"end\":62017,\"start\":62016},{\"end\":62026,\"start\":62025},{\"end\":62327,\"start\":62326},{\"end\":62329,\"start\":62328},{\"end\":62339,\"start\":62338},{\"end\":62341,\"start\":62340},{\"end\":62552,\"start\":62551},{\"end\":62560,\"start\":62559},{\"end\":62569,\"start\":62568},{\"end\":62577,\"start\":62576},{\"end\":62754,\"start\":62753},{\"end\":62766,\"start\":62765},{\"end\":62780,\"start\":62779},{\"end\":63024,\"start\":63023},{\"end\":63026,\"start\":63025},{\"end\":63037,\"start\":63036},{\"end\":63050,\"start\":63049},{\"end\":63058,\"start\":63057},{\"end\":63356,\"start\":63355},{\"end\":63363,\"start\":63362},{\"end\":63371,\"start\":63368},{\"end\":63727,\"start\":63726},{\"end\":63739,\"start\":63738},{\"end\":63752,\"start\":63751},{\"end\":63974,\"start\":63973},{\"end\":63985,\"start\":63984},{\"end\":63995,\"start\":63994},{\"end\":64275,\"start\":64274},{\"end\":64286,\"start\":64285},{\"end\":64612,\"start\":64611},{\"end\":64614,\"start\":64613},{\"end\":64623,\"start\":64622},{\"end\":64625,\"start\":64624},{\"end\":64906,\"start\":64905},{\"end\":64908,\"start\":64907},{\"end\":64919,\"start\":64918},{\"end\":64921,\"start\":64920},{\"end\":64930,\"start\":64929},{\"end\":65561,\"start\":65560},{\"end\":65563,\"start\":65562},{\"end\":65574,\"start\":65573},{\"end\":65576,\"start\":65575},{\"end\":66580,\"start\":66579},{\"end\":66589,\"start\":66588},{\"end\":66597,\"start\":66596},{\"end\":66871,\"start\":66870},{\"end\":66881,\"start\":66880},{\"end\":67130,\"start\":67129},{\"end\":67137,\"start\":67136},{\"end\":67151,\"start\":67150},{\"end\":67511,\"start\":67510},{\"end\":67513,\"start\":67512},{\"end\":67525,\"start\":67524},{\"end\":67527,\"start\":67526},{\"end\":67538,\"start\":67537},{\"end\":67540,\"start\":67539},{\"end\":67551,\"start\":67550},{\"end\":67553,\"start\":67552},{\"end\":67994,\"start\":67993},{\"end\":68330,\"start\":68329},{\"end\":68343,\"start\":68342},{\"end\":68356,\"start\":68355},{\"end\":68594,\"start\":68593},{\"end\":68596,\"start\":68595},{\"end\":68978,\"start\":68977},{\"end\":68980,\"start\":68979},{\"end\":69256,\"start\":69255},{\"end\":69269,\"start\":69268},{\"end\":69271,\"start\":69270},{\"end\":69284,\"start\":69283},{\"end\":69293,\"start\":69292},{\"end\":69616,\"start\":69615},{\"end\":69623,\"start\":69622},{\"end\":69642,\"start\":69641},{\"end\":69879,\"start\":69878},{\"end\":69881,\"start\":69880},{\"end\":69891,\"start\":69890},{\"end\":70096,\"start\":70095},{\"end\":70107,\"start\":70106},{\"end\":70438,\"start\":70437},{\"end\":70444,\"start\":70443},{\"end\":70450,\"start\":70449},{\"end\":70754,\"start\":70753},{\"end\":70962,\"start\":70961},{\"end\":71247,\"start\":71244},{\"end\":71529,\"start\":71528},{\"end\":71537,\"start\":71536},{\"end\":71547,\"start\":71546}]", "bib_author_last_name": "[{\"end\":53706,\"start\":53700},{\"end\":53715,\"start\":53710},{\"end\":53729,\"start\":53721},{\"end\":54024,\"start\":54019},{\"end\":54317,\"start\":54312},{\"end\":54325,\"start\":54321},{\"end\":54333,\"start\":54330},{\"end\":54643,\"start\":54636},{\"end\":54651,\"start\":54647},{\"end\":54663,\"start\":54657},{\"end\":54910,\"start\":54904},{\"end\":54918,\"start\":54914},{\"end\":55164,\"start\":55158},{\"end\":55173,\"start\":55168},{\"end\":55181,\"start\":55177},{\"end\":55560,\"start\":55553},{\"end\":55573,\"start\":55564},{\"end\":55585,\"start\":55577},{\"end\":55973,\"start\":55966},{\"end\":55986,\"start\":55977},{\"end\":55996,\"start\":55990},{\"end\":56296,\"start\":56294},{\"end\":56309,\"start\":56300},{\"end\":56323,\"start\":56315},{\"end\":56567,\"start\":56563},{\"end\":56579,\"start\":56571},{\"end\":56587,\"start\":56583},{\"end\":56882,\"start\":56878},{\"end\":56894,\"start\":56886},{\"end\":57201,\"start\":57193},{\"end\":57215,\"start\":57205},{\"end\":57227,\"start\":57219},{\"end\":57555,\"start\":57549},{\"end\":57564,\"start\":57559},{\"end\":57575,\"start\":57568},{\"end\":57587,\"start\":57581},{\"end\":57954,\"start\":57947},{\"end\":57967,\"start\":57958},{\"end\":57975,\"start\":57971},{\"end\":58312,\"start\":58310},{\"end\":58321,\"start\":58316},{\"end\":58329,\"start\":58325},{\"end\":58335,\"start\":58333},{\"end\":58564,\"start\":58554},{\"end\":58576,\"start\":58568},{\"end\":58588,\"start\":58580},{\"end\":58596,\"start\":58592},{\"end\":58968,\"start\":58951},{\"end\":58980,\"start\":58972},{\"end\":58995,\"start\":58986},{\"end\":59011,\"start\":58999},{\"end\":59242,\"start\":59234},{\"end\":59409,\"start\":59404},{\"end\":59422,\"start\":59413},{\"end\":59435,\"start\":59426},{\"end\":59747,\"start\":59742},{\"end\":59760,\"start\":59751},{\"end\":59773,\"start\":59764},{\"end\":60079,\"start\":60074},{\"end\":60091,\"start\":60085},{\"end\":60104,\"start\":60097},{\"end\":60393,\"start\":60389},{\"end\":60406,\"start\":60397},{\"end\":60417,\"start\":60410},{\"end\":60430,\"start\":60421},{\"end\":60755,\"start\":60744},{\"end\":60770,\"start\":60761},{\"end\":60780,\"start\":60774},{\"end\":61040,\"start\":61029},{\"end\":61051,\"start\":61044},{\"end\":61072,\"start\":61055},{\"end\":61427,\"start\":61419},{\"end\":61632,\"start\":61627},{\"end\":61643,\"start\":61636},{\"end\":61655,\"start\":61649},{\"end\":61668,\"start\":61661},{\"end\":62004,\"start\":61993},{\"end\":62012,\"start\":62008},{\"end\":62023,\"start\":62018},{\"end\":62032,\"start\":62027},{\"end\":62336,\"start\":62330},{\"end\":62347,\"start\":62342},{\"end\":62557,\"start\":62553},{\"end\":62566,\"start\":62561},{\"end\":62574,\"start\":62570},{\"end\":62592,\"start\":62578},{\"end\":62763,\"start\":62755},{\"end\":62777,\"start\":62767},{\"end\":62788,\"start\":62781},{\"end\":63034,\"start\":63027},{\"end\":63047,\"start\":63038},{\"end\":63055,\"start\":63051},{\"end\":63061,\"start\":63059},{\"end\":63360,\"start\":63357},{\"end\":63366,\"start\":63364},{\"end\":63383,\"start\":63372},{\"end\":63736,\"start\":63728},{\"end\":63749,\"start\":63740},{\"end\":63757,\"start\":63753},{\"end\":63982,\"start\":63975},{\"end\":63992,\"start\":63986},{\"end\":64003,\"start\":63996},{\"end\":64283,\"start\":64276},{\"end\":64293,\"start\":64287},{\"end\":64620,\"start\":64615},{\"end\":64632,\"start\":64626},{\"end\":64916,\"start\":64909},{\"end\":64927,\"start\":64922},{\"end\":64946,\"start\":64931},{\"end\":65571,\"start\":65564},{\"end\":65584,\"start\":65577},{\"end\":66586,\"start\":66581},{\"end\":66594,\"start\":66590},{\"end\":66604,\"start\":66598},{\"end\":66878,\"start\":66872},{\"end\":66888,\"start\":66882},{\"end\":67134,\"start\":67131},{\"end\":67148,\"start\":67138},{\"end\":67161,\"start\":67152},{\"end\":67522,\"start\":67514},{\"end\":67535,\"start\":67528},{\"end\":67548,\"start\":67541},{\"end\":67562,\"start\":67554},{\"end\":68001,\"start\":67995},{\"end\":68340,\"start\":68331},{\"end\":68353,\"start\":68344},{\"end\":68365,\"start\":68357},{\"end\":68605,\"start\":68597},{\"end\":68986,\"start\":68981},{\"end\":69266,\"start\":69257},{\"end\":69281,\"start\":69272},{\"end\":69290,\"start\":69285},{\"end\":69299,\"start\":69294},{\"end\":69620,\"start\":69617},{\"end\":69639,\"start\":69624},{\"end\":69651,\"start\":69643},{\"end\":69888,\"start\":69882},{\"end\":69894,\"start\":69892},{\"end\":70104,\"start\":70097},{\"end\":70111,\"start\":70108},{\"end\":70441,\"start\":70439},{\"end\":70447,\"start\":70445},{\"end\":70455,\"start\":70451},{\"end\":70760,\"start\":70755},{\"end\":70970,\"start\":70963},{\"end\":71251,\"start\":71248},{\"end\":71534,\"start\":71530},{\"end\":71544,\"start\":71538},{\"end\":71554,\"start\":71548}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1038/nature16961\",\"id\":\"b0\",\"matched_paper_id\":515925},\"end\":53932,\"start\":53630},{\"attributes\":{\"doi\":\"10.1038/s41591-018-0300-7\",\"id\":\"b1\",\"matched_paper_id\":57574615},\"end\":54221,\"start\":53934},{\"attributes\":{\"doi\":\"10.1186/s13321-020-00428-5\",\"id\":\"b2\",\"matched_paper_id\":215819572},\"end\":54574,\"start\":54223},{\"attributes\":{\"doi\":\"10.1186/s13321-018-0281-z\",\"id\":\"b3\",\"matched_paper_id\":44066618},\"end\":54864,\"start\":54576},{\"attributes\":{\"doi\":\"10.1021/ci100050t\",\"id\":\"b4\",\"matched_paper_id\":5132461},\"end\":55081,\"start\":54866},{\"attributes\":{\"doi\":\"10.1021/acs.jcim.7b00616\",\"id\":\"b5\",\"matched_paper_id\":34512664},\"end\":55403,\"start\":55083},{\"attributes\":{\"doi\":\"10.1021/acs.molpharmaceut.7b00346\",\"id\":\"b6\",\"matched_paper_id\":206687484},\"end\":55904,\"start\":55405},{\"attributes\":{\"doi\":\"10.1007/s10822-016-9938-8\",\"id\":\"b7\",\"matched_paper_id\":918678},\"end\":56233,\"start\":55906},{\"attributes\":{\"doi\":\"10.1039/C7SC02664A\",\"id\":\"b8\",\"matched_paper_id\":217680306},\"end\":56514,\"start\":56235},{\"attributes\":{\"doi\":\"10.1016/j.drudis.2018.01.039\",\"id\":\"b9\",\"matched_paper_id\":46792472},\"end\":56802,\"start\":56516},{\"attributes\":{\"doi\":\"10.1016/j.tips.2019.09.004\",\"id\":\"b10\",\"matched_paper_id\":204815088},\"end\":57122,\"start\":56804},{\"attributes\":{\"doi\":\"10.1002/minf.201700123\",\"id\":\"b11\",\"matched_paper_id\":3848644},\"end\":57454,\"start\":57124},{\"attributes\":{\"doi\":\"10.1021/acscentsci.7b00512\",\"id\":\"b12\",\"matched_paper_id\":27688749},\"end\":57838,\"start\":57456},{\"attributes\":{\"doi\":\"10.1038/s42256-020-0174-5\",\"id\":\"b13\",\"matched_paper_id\":219457600},\"end\":58239,\"start\":57840},{\"attributes\":{\"doi\":\"arXiv:1609.05473\",\"id\":\"b14\"},\"end\":58488,\"start\":58241},{\"attributes\":{\"doi\":\"10.1186/s13321-017-0235-x\",\"id\":\"b15\",\"matched_paper_id\":2978311},\"end\":58815,\"start\":58490},{\"attributes\":{\"id\":\"b16\"},\"end\":59230,\"start\":58817},{\"attributes\":{\"doi\":\"10.26434/chemrxiv.5309668\",\"id\":\"b17\"},\"end\":59331,\"start\":59232},{\"attributes\":{\"doi\":\"10.1021/acs.jcim.7b00690\",\"id\":\"b18\",\"matched_paper_id\":46890769},\"end\":59670,\"start\":59333},{\"attributes\":{\"doi\":\"10.1021/acs.molpharmaceut.7b01137\",\"id\":\"b19\",\"matched_paper_id\":4475537},\"end\":60015,\"start\":59672},{\"attributes\":{\"doi\":\"10.1002/minf.201700111\",\"id\":\"b20\",\"matched_paper_id\":3833699},\"end\":60313,\"start\":60017},{\"attributes\":{\"doi\":\"10.1002/minf.201700153\",\"id\":\"b21\",\"matched_paper_id\":3833836},\"end\":60663,\"start\":60315},{\"attributes\":{\"doi\":\"10.1038/s41587-019-0224-x\",\"id\":\"b22\",\"matched_paper_id\":201716327},\"end\":61025,\"start\":60665},{\"attributes\":{\"doi\":\"arXiv:1811.12823\",\"id\":\"b23\"},\"end\":61331,\"start\":61027},{\"attributes\":{\"doi\":\"arXiv:1708.08227\",\"id\":\"b24\"},\"end\":61563,\"start\":61333},{\"attributes\":{\"doi\":\"10.1021/acs.jcim.8b00839\",\"id\":\"b25\",\"matched_paper_id\":53787096},\"end\":61899,\"start\":61565},{\"attributes\":{\"doi\":\"10.1186/s13321-020-00425-8\",\"id\":\"b26\",\"matched_paper_id\":202558842},\"end\":62283,\"start\":61901},{\"attributes\":{\"doi\":\"10.1109/TNN.1998.712192\",\"id\":\"b27\",\"matched_paper_id\":9166388},\"end\":62549,\"start\":62285},{\"attributes\":{\"doi\":\"arXiv:1611.02163\",\"id\":\"b28\"},\"end\":62751,\"start\":62551},{\"attributes\":{\"doi\":\"arXiv:1606.03498\",\"id\":\"b29\"},\"end\":62951,\"start\":62753},{\"attributes\":{\"doi\":\"arXiv:1907.07723\",\"id\":\"b30\"},\"end\":63213,\"start\":62953},{\"attributes\":{\"doi\":\"10.1186/s13321-019-0355-6\",\"id\":\"b31\",\"matched_paper_id\":96450357},\"end\":63674,\"start\":63215},{\"attributes\":{\"doi\":\"10.26434/chemrxiv.12058026.v2\",\"id\":\"b32\"},\"end\":63942,\"start\":63676},{\"attributes\":{\"doi\":\"10.1093/nar/gkw1074\",\"id\":\"b33\",\"matched_paper_id\":898620},\"end\":64188,\"start\":63944},{\"attributes\":{\"doi\":\"10.5169/seals-266450\",\"id\":\"b34\"},\"end\":64554,\"start\":64190},{\"attributes\":{\"doi\":\"10.1021/jm9602928\",\"id\":\"b35\",\"matched_paper_id\":19424664},\"end\":64810,\"start\":64556},{\"attributes\":{\"doi\":\"10.1021/ci00046a002\",\"id\":\"b36\",\"matched_paper_id\":37017771},\"end\":65192,\"start\":64812},{\"attributes\":{\"doi\":\"10.1021/ci990307l\",\"id\":\"b37\"},\"end\":66488,\"start\":65194},{\"attributes\":{\"doi\":\"10.1021/acs.jcim.8b00173\",\"id\":\"b38\",\"matched_paper_id\":21710298},\"end\":66843,\"start\":66490},{\"attributes\":{\"doi\":\"10.1007/BF00994018\",\"id\":\"b39\",\"matched_paper_id\":52874011},\"end\":67033,\"start\":66845},{\"attributes\":{\"doi\":\"10.1186/s13321-017-0203-5\",\"id\":\"b40\",\"matched_paper_id\":14732369},\"end\":67407,\"start\":67035},{\"attributes\":{\"doi\":\"10.1021/ci049782w\",\"id\":\"b41\",\"matched_paper_id\":44761170},\"end\":67837,\"start\":67409},{\"attributes\":{\"doi\":\"10.1021/ci9803381\",\"id\":\"b42\",\"matched_paper_id\":3069234},\"end\":68285,\"start\":67839},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":10659969},\"end\":68508,\"start\":68287},{\"attributes\":{\"doi\":\"10.1016/0005-2795(75)90109-9\",\"id\":\"b44\",\"matched_paper_id\":44596673},\"end\":68874,\"start\":68510},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":56563878},\"end\":69213,\"start\":68876},{\"attributes\":{\"doi\":\"10.1016/j.neunet.2005.07.009\",\"id\":\"b46\",\"matched_paper_id\":8539222},\"end\":69518,\"start\":69215},{\"attributes\":{\"doi\":\"arXiv:1406.1078\",\"id\":\"b47\"},\"end\":69832,\"start\":69520},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b48\"},\"end\":69994,\"start\":69834},{\"attributes\":{\"doi\":\"10.1021/ci900450m\",\"id\":\"b49\",\"matched_paper_id\":24075062},\"end\":70337,\"start\":69996},{\"attributes\":{\"doi\":\"10.1021/ci3001138\",\"id\":\"b50\",\"matched_paper_id\":23086741},\"end\":70690,\"start\":70339},{\"attributes\":{\"id\":\"b51\"},\"end\":70926,\"start\":70692},{\"attributes\":{\"doi\":\"10.1016/j.patrec.2005.10.010\",\"id\":\"b52\",\"matched_paper_id\":2027090},\"end\":71155,\"start\":70928},{\"attributes\":{\"doi\":\"10.1007/BF00992699\",\"id\":\"b53\",\"matched_paper_id\":3248358},\"end\":71445,\"start\":71157},{\"attributes\":{\"id\":\"b54\"},\"end\":71687,\"start\":71447},{\"attributes\":{\"id\":\"b55\"},\"end\":71723,\"start\":71689},{\"attributes\":{\"id\":\"b56\"},\"end\":71964,\"start\":71725}]", "bib_title": "[{\"end\":53696,\"start\":53630},{\"end\":54013,\"start\":53934},{\"end\":54308,\"start\":54223},{\"end\":54630,\"start\":54576},{\"end\":54900,\"start\":54866},{\"end\":55154,\"start\":55083},{\"end\":55549,\"start\":55405},{\"end\":55962,\"start\":55906},{\"end\":56290,\"start\":56235},{\"end\":56559,\"start\":56516},{\"end\":56874,\"start\":56804},{\"end\":57189,\"start\":57124},{\"end\":57543,\"start\":57456},{\"end\":57941,\"start\":57840},{\"end\":58550,\"start\":58490},{\"end\":59400,\"start\":59333},{\"end\":59738,\"start\":59672},{\"end\":60070,\"start\":60017},{\"end\":60385,\"start\":60315},{\"end\":60740,\"start\":60665},{\"end\":61623,\"start\":61565},{\"end\":61989,\"start\":61901},{\"end\":62324,\"start\":62285},{\"end\":63353,\"start\":63215},{\"end\":63971,\"start\":63944},{\"end\":64272,\"start\":64190},{\"end\":64609,\"start\":64556},{\"end\":64903,\"start\":64812},{\"end\":65558,\"start\":65194},{\"end\":66577,\"start\":66490},{\"end\":66868,\"start\":66845},{\"end\":67127,\"start\":67035},{\"end\":67508,\"start\":67409},{\"end\":67991,\"start\":67839},{\"end\":68327,\"start\":68287},{\"end\":68591,\"start\":68510},{\"end\":68975,\"start\":68876},{\"end\":69253,\"start\":69215},{\"end\":70093,\"start\":69996},{\"end\":70435,\"start\":70339},{\"end\":70959,\"start\":70928},{\"end\":71242,\"start\":71157}]", "bib_author": "[{\"end\":53708,\"start\":53698},{\"end\":53717,\"start\":53708},{\"end\":53731,\"start\":53717},{\"end\":54026,\"start\":54015},{\"end\":54319,\"start\":54310},{\"end\":54327,\"start\":54319},{\"end\":54335,\"start\":54327},{\"end\":54339,\"start\":54335},{\"end\":54645,\"start\":54632},{\"end\":54653,\"start\":54645},{\"end\":54665,\"start\":54653},{\"end\":54912,\"start\":54902},{\"end\":54920,\"start\":54912},{\"end\":55166,\"start\":55156},{\"end\":55175,\"start\":55166},{\"end\":55183,\"start\":55175},{\"end\":55562,\"start\":55551},{\"end\":55575,\"start\":55562},{\"end\":55587,\"start\":55575},{\"end\":55975,\"start\":55964},{\"end\":55988,\"start\":55975},{\"end\":55998,\"start\":55988},{\"end\":56298,\"start\":56292},{\"end\":56311,\"start\":56298},{\"end\":56325,\"start\":56311},{\"end\":56569,\"start\":56561},{\"end\":56581,\"start\":56569},{\"end\":56589,\"start\":56581},{\"end\":56884,\"start\":56876},{\"end\":56896,\"start\":56884},{\"end\":57203,\"start\":57191},{\"end\":57217,\"start\":57203},{\"end\":57229,\"start\":57217},{\"end\":57557,\"start\":57545},{\"end\":57566,\"start\":57557},{\"end\":57577,\"start\":57566},{\"end\":57589,\"start\":57577},{\"end\":57956,\"start\":57943},{\"end\":57969,\"start\":57956},{\"end\":57977,\"start\":57969},{\"end\":58314,\"start\":58308},{\"end\":58323,\"start\":58314},{\"end\":58331,\"start\":58323},{\"end\":58337,\"start\":58331},{\"end\":58566,\"start\":58552},{\"end\":58578,\"start\":58566},{\"end\":58590,\"start\":58578},{\"end\":58598,\"start\":58590},{\"end\":58970,\"start\":58949},{\"end\":58982,\"start\":58970},{\"end\":58997,\"start\":58982},{\"end\":59013,\"start\":58997},{\"end\":59244,\"start\":59234},{\"end\":59411,\"start\":59402},{\"end\":59424,\"start\":59411},{\"end\":59437,\"start\":59424},{\"end\":59749,\"start\":59740},{\"end\":59762,\"start\":59749},{\"end\":59775,\"start\":59762},{\"end\":60081,\"start\":60072},{\"end\":60093,\"start\":60081},{\"end\":60106,\"start\":60093},{\"end\":60395,\"start\":60387},{\"end\":60408,\"start\":60395},{\"end\":60419,\"start\":60408},{\"end\":60432,\"start\":60419},{\"end\":60757,\"start\":60742},{\"end\":60772,\"start\":60757},{\"end\":60782,\"start\":60772},{\"end\":61042,\"start\":61027},{\"end\":61053,\"start\":61042},{\"end\":61074,\"start\":61053},{\"end\":61429,\"start\":61417},{\"end\":61634,\"start\":61625},{\"end\":61645,\"start\":61634},{\"end\":61657,\"start\":61645},{\"end\":61670,\"start\":61657},{\"end\":62006,\"start\":61991},{\"end\":62014,\"start\":62006},{\"end\":62025,\"start\":62014},{\"end\":62034,\"start\":62025},{\"end\":62338,\"start\":62326},{\"end\":62349,\"start\":62338},{\"end\":62559,\"start\":62551},{\"end\":62568,\"start\":62559},{\"end\":62576,\"start\":62568},{\"end\":62594,\"start\":62576},{\"end\":62765,\"start\":62753},{\"end\":62779,\"start\":62765},{\"end\":62790,\"start\":62779},{\"end\":63036,\"start\":63023},{\"end\":63049,\"start\":63036},{\"end\":63057,\"start\":63049},{\"end\":63063,\"start\":63057},{\"end\":63362,\"start\":63355},{\"end\":63368,\"start\":63362},{\"end\":63385,\"start\":63368},{\"end\":63738,\"start\":63726},{\"end\":63751,\"start\":63738},{\"end\":63759,\"start\":63751},{\"end\":63984,\"start\":63973},{\"end\":63994,\"start\":63984},{\"end\":64005,\"start\":63994},{\"end\":64285,\"start\":64274},{\"end\":64295,\"start\":64285},{\"end\":64622,\"start\":64611},{\"end\":64634,\"start\":64622},{\"end\":64918,\"start\":64905},{\"end\":64929,\"start\":64918},{\"end\":64948,\"start\":64929},{\"end\":65573,\"start\":65560},{\"end\":65586,\"start\":65573},{\"end\":66588,\"start\":66579},{\"end\":66596,\"start\":66588},{\"end\":66606,\"start\":66596},{\"end\":66880,\"start\":66870},{\"end\":66890,\"start\":66880},{\"end\":67136,\"start\":67129},{\"end\":67150,\"start\":67136},{\"end\":67163,\"start\":67150},{\"end\":67524,\"start\":67510},{\"end\":67537,\"start\":67524},{\"end\":67550,\"start\":67537},{\"end\":67564,\"start\":67550},{\"end\":68003,\"start\":67993},{\"end\":68342,\"start\":68329},{\"end\":68355,\"start\":68342},{\"end\":68367,\"start\":68355},{\"end\":68607,\"start\":68593},{\"end\":68988,\"start\":68977},{\"end\":69268,\"start\":69255},{\"end\":69283,\"start\":69268},{\"end\":69292,\"start\":69283},{\"end\":69301,\"start\":69292},{\"end\":69622,\"start\":69615},{\"end\":69641,\"start\":69622},{\"end\":69653,\"start\":69641},{\"end\":69890,\"start\":69878},{\"end\":69896,\"start\":69890},{\"end\":70106,\"start\":70095},{\"end\":70113,\"start\":70106},{\"end\":70443,\"start\":70437},{\"end\":70449,\"start\":70443},{\"end\":70457,\"start\":70449},{\"end\":70762,\"start\":70753},{\"end\":70972,\"start\":70961},{\"end\":71253,\"start\":71244},{\"end\":71536,\"start\":71528},{\"end\":71546,\"start\":71536},{\"end\":71556,\"start\":71546}]", "bib_venue": "[{\"end\":53756,\"start\":53750},{\"end\":54058,\"start\":54051},{\"end\":54377,\"start\":54365},{\"end\":54702,\"start\":54690},{\"end\":54953,\"start\":54937},{\"end\":55223,\"start\":55207},{\"end\":55629,\"start\":55620},{\"end\":56045,\"start\":56023},{\"end\":56351,\"start\":56343},{\"end\":56634,\"start\":56617},{\"end\":56942,\"start\":56922},{\"end\":57261,\"start\":57251},{\"end\":57627,\"start\":57615},{\"end\":58017,\"start\":58002},{\"end\":58306,\"start\":58241},{\"end\":58635,\"start\":58623},{\"end\":58947,\"start\":58817},{\"end\":59477,\"start\":59461},{\"end\":59817,\"start\":59808},{\"end\":60138,\"start\":60128},{\"end\":60464,\"start\":60454},{\"end\":60821,\"start\":60807},{\"end\":61169,\"start\":61090},{\"end\":61415,\"start\":61333},{\"end\":61710,\"start\":61694},{\"end\":62072,\"start\":62060},{\"end\":62398,\"start\":62372},{\"end\":62641,\"start\":62610},{\"end\":62843,\"start\":62806},{\"end\":63021,\"start\":62953},{\"end\":63422,\"start\":63410},{\"end\":63724,\"start\":63676},{\"end\":64041,\"start\":64024},{\"end\":64351,\"start\":64315},{\"end\":64661,\"start\":64651},{\"end\":64983,\"start\":64967},{\"end\":65624,\"start\":65603},{\"end\":66646,\"start\":66630},{\"end\":66918,\"start\":66908},{\"end\":67200,\"start\":67188},{\"end\":67602,\"start\":67581},{\"end\":68041,\"start\":68020},{\"end\":68383,\"start\":68367},{\"end\":68670,\"start\":68635},{\"end\":69024,\"start\":68988},{\"end\":69344,\"start\":69329},{\"end\":69613,\"start\":69520},{\"end\":69876,\"start\":69834},{\"end\":70146,\"start\":70130},{\"end\":70490,\"start\":70474},{\"end\":70751,\"start\":70692},{\"end\":71021,\"start\":71000},{\"end\":71281,\"start\":71271},{\"end\":71526,\"start\":71447},{\"end\":71705,\"start\":71689},{\"end\":71842,\"start\":71725}]"}}}, "year": 2023, "month": 12, "day": 17}