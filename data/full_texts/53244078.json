{"id": 53244078, "updated": "2023-11-08 07:08:23.894", "metadata": {"title": "Flux: Elegant machine learning with Julia", "authors": "[{\"first\":\"Mike\",\"last\":\"Innes\",\"middle\":[]}]", "venue": "J. Open Source Softw.", "journal": "J. Open Source Softw.", "publication_date": {"year": 2018, "month": null, "day": null}, "abstract": "Flux is library for machine learning (ML), written using the numerical computing language Julia (Bezanson et al. 2017). The package allows models to be written using Julia\u2019s simple mathematical syntax, and applies automatic differentiation (AD) to seamlessly calculate derivatives and train the model. Meanwhile, it makes heavy use of Julia\u2019s language and compiler features to carry out code analysis and make optimisations. For example, Julia\u2019s GPU compilation support (Besard, Foket, and De Sutter 2017) can be used to JIT-compile custom GPU kernels for model layers (Innes and others 2017a).", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2801128564", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/jossw/Innes18", "doi": "10.21105/joss.00602"}}, "content": {"source": {"pdf_hash": "d4414002f23c0f1c497166eb51c5b1d549ff75c8", "pdf_src": "ScienceParseMerged", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://joss.theoj.org/papers/10.21105/joss.00602.pdf", "status": "GOLD"}}, "grobid": {"id": "a10f7455e9e5d4f53b2eadc469fec8466f7d294b", "type": "plain-text", "url": "s3://ai2-s2-science-parse-plus-prod/parse-results/s2orc_worker/d4414002f23c0f1c497166eb51c5b1d549ff75c8.txt", "contents": "\nFlux: Elegant machine learning with Julia\n03 May 2018\n\nMike Innes \nJulia Computing\n\n\nFlux: Elegant machine learning with Julia\n03 May 2018E934ED047F62DC748DDF68B6B9E7E7B710.21105/joss.00602Submitted: 16 February 2018\nFlux is library for machine learning (ML), written using the numerical computing language Julia(Bezanson et al. 2017).The package allows models to be written using Julia's simple mathematical syntax, and applies automatic differentiation (AD) to seamlessly calculate derivatives and train the model.Meanwhile, it makes heavy use of Julia's language and compiler features to carry out code analysis and make optimisations.For example, Julia's GPU compilation support (Besard, Foket, and De Sutter 2017) can be used to JIT-compile custom GPU kernels for model layers (Innes and others 2017a).The machine learning community has traditionally been divided between \"static\" and \"dynamic\" frameworks that are easy to optimise and easy to use, respectively (Innes and others 2017b).Flux blurs the line between these two approaches, combining a highly intuitive programming model with the compiler techniques needed by ML.This enables research into advanced compiler transforms such as batching (Bradbury 2018) without changing any user code.Flux has been used heavily for natural language processing, but can also support state-ofthe-art research models in areas like computer vision, reinforcement learning and robotics.Many examples of such models can be found in the model zoo (Innes and others 2018).\nJulia: A Fresh Approach to Numerical Computing. Tim Besard, Christophe Foket, Bjorn De Sutter ; Bezanson, Jeff , Alan Edelman, Stefan Karpinski, B Viral, Shah, 10.1137/141000671arXiv abs/11712.03112Effective Extensible Programming: Unleashing Julia on GPUs. 2017. 2017\n\nMinibatch.jl. James Bradbury, 2018. 2018\n\nOn Machine Learning and Programming Languages. Mike Innes, Others, 2017a. 2017. 2017. 2018. 2018Flux Model Zoo\n\nFlux: Elegant machine learning with Julia. Innes, 10.21105/joss.00602Journal of Open Source Software. 3256022018\n", "annotations": {"author": "[{\"end\":85,\"start\":56}]", "publisher": null, "author_last_name": "[{\"end\":66,\"start\":61}]", "author_first_name": "[{\"end\":60,\"start\":56}]", "author_affiliation": "[{\"end\":84,\"start\":68}]", "title": "[{\"end\":42,\"start\":1},{\"end\":127,\"start\":86}]", "venue": null, "abstract": "[{\"end\":1515,\"start\":218}]", "bib_ref": null, "figure": null, "paragraph": null, "formula": null, "table_ref": null, "section_header": null, "table": null, "figure_caption": null, "figure_ref": null, "bib_author_first_name": "[{\"end\":1567,\"start\":1564},{\"end\":1586,\"start\":1576},{\"end\":1599,\"start\":1594},{\"end\":1602,\"start\":1600},{\"end\":1626,\"start\":1622},{\"end\":1633,\"start\":1629},{\"end\":1649,\"start\":1643},{\"end\":1662,\"start\":1661},{\"end\":1805,\"start\":1800},{\"end\":1879,\"start\":1875}]", "bib_author_last_name": "[{\"end\":1574,\"start\":1568},{\"end\":1592,\"start\":1587},{\"end\":1620,\"start\":1603},{\"end\":1641,\"start\":1634},{\"end\":1659,\"start\":1650},{\"end\":1668,\"start\":1663},{\"end\":1674,\"start\":1670},{\"end\":1814,\"start\":1806},{\"end\":1885,\"start\":1880},{\"end\":1893,\"start\":1887},{\"end\":1988,\"start\":1983}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1137/141000671\",\"id\":\"b0\",\"matched_paper_id\":13026838},\"end\":1784,\"start\":1516},{\"attributes\":{\"id\":\"b1\"},\"end\":1826,\"start\":1786},{\"attributes\":{\"id\":\"b2\"},\"end\":1938,\"start\":1828},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":53244078},\"end\":2052,\"start\":1940}]", "bib_title": "[{\"end\":1562,\"start\":1516},{\"end\":1981,\"start\":1940}]", "bib_author": "[{\"end\":1576,\"start\":1564},{\"end\":1594,\"start\":1576},{\"end\":1622,\"start\":1594},{\"end\":1629,\"start\":1622},{\"end\":1643,\"start\":1629},{\"end\":1661,\"start\":1643},{\"end\":1670,\"start\":1661},{\"end\":1676,\"start\":1670},{\"end\":1816,\"start\":1800},{\"end\":1887,\"start\":1875},{\"end\":1895,\"start\":1887},{\"end\":1990,\"start\":1983}]", "bib_venue": "[{\"end\":1772,\"start\":1714},{\"end\":1798,\"start\":1786},{\"end\":1873,\"start\":1828},{\"end\":2040,\"start\":2009}]"}}}, "year": 2023, "month": 12, "day": 17}