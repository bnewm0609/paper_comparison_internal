{"id": 207756696, "updated": "2022-07-07 13:28:51.623", "metadata": {"title": "Managing edge resources for fully autonomous aerial systems", "authors": "[{\"first\":\"Jayson\",\"last\":\"Boubin\",\"middle\":[\"G.\"]},{\"first\":\"Naveen\",\"last\":\"Babu\",\"middle\":[\"T. R.\"]},{\"first\":\"Christopher\",\"last\":\"Stewart\",\"middle\":[]},{\"first\":\"John\",\"last\":\"Chumley\",\"middle\":[]},{\"first\":\"Shiqi\",\"last\":\"Zhang\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 4th ACM/IEEE Symposium on Edge Computing", "publication_date": {"year": 2019, "month": null, "day": null}, "abstract": "Fully autonomous aerial systems (FAAS) fly complex missions guided wholly by software. If users choose software, compute hardware and aircraft well, FAAS can complete missions faster and safer than unmanned aerial systems piloted by humans. On the other hand, poorly managed edge resources slow down missions, waste energy and inflate costs. This paper presents a model-driven approach to manage FAAS. We fly real FAAS missions, profile compute and aircraft resource usage and model expected demands. Naive profiling approaches use traces from previous flights to infer resource usage. However, edge resources can affect where FAAS fly and which data they sense. Usage profiles can diverge greatly across edge management policies. Instead of using traces, we characterize whole flight areas to accurately model resource usage for any flight path. We combine expected resource demands to model mission throughput, i.e., missions completed per fully charged battery. We validated our model by creating FAAS, measuring mission throughput across many system settings. Our FAAS benchmarks, released through our open source FAAS suite SoftwarePilot, execute realistic missions: autonomous photography, search and rescue, and agricultural scouting using well-known software. Our model predicted throughput with 4% error across mission, software and hardware settings. Competing approaches yielded 10--24% error. We used our SoftwarePilot benchmarks to study (1) GPU acceleration, scale up, and scale out, (2) onboard, edge and cloud computing, (3) energy and monetary budgets, and (4) software driven GPU management. We found that model-driven management can boost mission throughput by 10X and reduce costs by 87%.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2988560167", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/edge/BoubinBSCZ19", "doi": "10.1145/3318216.3363306"}}, "content": {"source": {"pdf_hash": "bfacb1908c6ac48ac9495f6161c4bcf891d6386c", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "https://dl.acm.org/doi/pdf/10.1145/3318216.3363306", "status": "BRONZE"}}, "grobid": {"id": "3eed0320dee716939c168e3c24d3227a779b2ba8", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/bfacb1908c6ac48ac9495f6161c4bcf891d6386c.txt", "contents": "\nManaging Edge Resources for Fully Autonomous Aerial Systems\n2019. November 7\n\nJayson G Boubin \nDepartment of Computer Science\nThe Ohio State University\n\n\nNaveen T R Babu \nDepartment of Computer Science\nThe Ohio State University\n\n\nChristopher Stewart \nDepartment of Computer Science\nThe Ohio State University\n\n\nJohn Chumley \nDepartment of Computer Science\nThe Ohio State University\n\n\nShiqi Zhang \nDepartment of Computer Science\nThe Ohio State University\n\n\nJayson G Boubin \nDepartment of Computer Science\nThe Ohio State University\n\n\nNaveen T R Babu \nDepartment of Computer Science\nThe Ohio State University\n\n\nChristopher Stewart \nDepartment of Computer Science\nThe Ohio State University\n\n\nJohn Chumley \nDepartment of Computer Science\nThe Ohio State University\n\n\nShiqi Zhang \nDepartment of Computer Science\nThe Ohio State University\n\n\nManaging Edge Resources for Fully Autonomous Aerial Systems\n\nThe Fourth ACM/IEEE Symposium on Edge Computing (SEC 2019)\n2019. November 710.1145/3318216.3363306SEC 2019, November 7-9, 2019, Arlington, VA, USA \u00a9 Association for Computing Machinery. ACM ISBN 978-1-4503-6733-2/19/11. . . $15.00-9, 2019, Arlington, VA, USA. ACM, New York, NY, USA, 14 pages. https: //\nFully autonomous aerial systems (FAAS) fly complex missions guided wholly by software. If users choose software, compute hardware and aircraft well, FAAS can complete missions faster and safer than unmanned aerial systems piloted by humans. On the other hand, poorly managed edge resources slow down missions, waste energy and inflate costs. This paper presents a model-driven approach to manage FAAS. We fly real FAAS missions, profile compute and aircraft resource usage and model expected demands. Naive profiling approaches use traces from previous flights to infer resource usage. However, edge resources can affect where FAAS fly and which data they sense. Usage profiles can diverge greatly across edge management policies. Instead of using traces, we characterize whole flight areas to accurately model resource usage for any flight path. We combine expected resource demands to model mission throughput, i.e., missions completed per fully charged battery. We validated our model by creating FAAS, measuring mission throughput across many system settings. Our FAAS benchmarks, released through our open source FAAS suite SoftwarePilot, execute realistic missions: autonomous photography, search and rescue, and agricultural scouting using well-known software. Our model predicted throughput with 4% error across mission, software and hardware settings. Competing approaches yielded 10-24% error. We used our SoftwarePilot benchmarks to study (1) GPU acceleration, scale up, and scale out, (2) onboard, edge and cloud computing, (3) energy and monetary budgets, and (4) software driven GPU management. We found that model-driven management can boost mission throughput by 10X and reduce costs by 87%.\n\nINTRODUCTION\n\nUnmanned aerial systems (UAS) hover, fly to waypoints and perform defined actions, e.g., landing and takeoff. In addition to rotors and motors, these aircraft carry computer systems, cameras, batteries, etc. They can access high, vast or unsafe places and capture detailed images and sensor readings. Photographers, farmers and first responders pilot UAS via remote control or smart phone [3,13,26,32,42]. These end users decide where the UAS flies, when it senses data and when missions are complete.\n\nUAS piloting mistakes can have severe consequences. For example, flying UAS in restricted areas risks human lives. Other common mistakes, e.g., flying to unneeded waypoints, degrade mission throughput (i.e., the number of missions completed). Aerial systems that require less human piloting are needed [32,41]. There is growing support for software development kits that control aircraft. Da-Jiang Innovations (DJI) aircraft support software control from iOS, Android and Linux devices [39]. Pixhawk and Aerostack also provide platforms for software control [33,37,38].\n\nFully autonomous aerial systems (FAAS) are an emerging workload wherein UAS execute dynamic missions defined wholly by software. End users do not pilot FAAS nor do they define preset waypoints. Instead, they provide goals, constraints and software that execute missions. Like edge-driven video analytics [12,17,20,21,[43][44][45], FAAS process images in real time and leverage AI for scene analysis. However, FAAS also control aircraft flight, making flight paths (and which data gets sensed) dynamic.\n\nRecent UAS carry sophisticated processors. For example, the DJI Mavic carries the Myriad 2, a system on chip that includes streaming vector engine processors, hardware accelerators, multiple RISC cores and 2 MB on-chip memory.\n\nHowever, compared to UAS, FAAS increase computational demands significantly [3,30,41,43,44]. If aircraft surrender battery capacity to onboard processors and carry heavier payloads for data storage, flight times will suffer [43]. Instead of using onboard resources, FAAS workloads may run on land using networked messages to control the aircraft (i.e., edge cloudlets). Another choice connects aircraft to fast cloud data centers. Latency, processing capacity and cost differ among these choices. Professional end-users must understand how these factors affect their bottom line, but it is hard to answer what-if questions comparing architecture and software designs. For example, how many missions would complete per fully charged battery (i.e., mission throughput) if I ran FAAS software onboard the aircraft instead of edge servers? Or does data processing speedup provided by a GPU warrant its cost?\n\nAutonomous systems combine many independent software components. Many components support settings that trade compute demand for energy savings. It is hard to predict the effects of these settings on mission throughput because they affect where FAAS fly, how many compute resources they require, and the effects are mission specific. For example, lightweight image classifiers can lower compute demand and save energy, but FAAS also fly to more waypoints which can negate savings. End users could test each setting and measure mission throughput directly. However, long complex missions and many software settings make exhaustive testing impractical. This paper presents a modeling approach that predicts mission throughput. Our approach profiles energy demands for aircraft and compute. We model missions as a sequence of waypoints. The waypoint that exhausts battery capacity defines mission throughput. It is hard to profile energy demands across system settings that affect autonomous decisions; we call these autonomy settings. Autonomy settings change flight paths, affecting which data is sensed during mission execution and ultimately energy demands. We propose autonomy cubes, data structures that characterize the whole flight area for a mission. Autonomy cubes can approximate sensed data for any flight path, much like data cubes (their intellectual inspiration) [18].\n\nTo validate the model, we created SoftwarePilot [6], an FAAS suite that performs the following complex missions: (1) autonomously capture high quality photographs of human faces, (2) search and map defined areas for first responders, and (3) scout crop fields for representative samples. SoftwarePilot uses path finding and AI approaches found in prior research [30,37]. Each FAAS supports a wide range of software and hardware settings. Toggling these settings can increase waypoints per mission by 4X and compute demands by 35X.\n\nWe collected 122 autonomy cubes, flying in 56 locations and capturing 20970 data readings. We also flew 145 actual FAAS missions and measured ground-truth mission throughput. FAAS used DJI Spark and Mavic Pro aircraft. We compared our modeling approach to Aerostack [37] and Autoware [22,30]. These approaches use reference traces from prior missions to model energy usage. Our model predicted throughput with 4% error. When trace and mission settings differed on multiple dimensions, Aerostack and Autoware yielded error up to 5X and 10X larger than our approach.\n\nAfter validating our modeling approach, we explore modeldriven management of edge resources. First, we consider scenarios where end users buy aircraft, software and hardware separately and then combine them to make a FAAS. After purchasing aircraft and software, these end users would like to purchase compute hardware that will provide high throughput. Under a cost budget, these end users may have to maximize throughput per dollar. End users can use our models to answer these questions. We used our modeling approach to compare onboard, edge and cloud architectures. Onboard compute and storage reduced flight time by 50%, significantly degrading mission throughput. Edge computing eventually provided best mission throughput and throughput per dollar. However, we observed that larger aircraft could boost onboard architectures. We also used our modeling approach to compare scale out, scale up and GPU approaches to meet compute demands. We found that the best approach depended on (1) autonomy settings and (2) energy capacity. GPU improve throughput, but deplete batteries quickly. Scaling up cores on chip provided a reliable approach to increase throughput.\n\nWe also study the management scenario where end users control the design and implementation of aircraft, processor and software [32]. These end users may sell FAAS to militaries, smart cities or other large operations and can adjust all facets of FAAS to find high throughput settings. We studied software and hardware co-design. We set up an adaptive policy that toggles between deep, compute intensive AI models and less precise but energy efficient AI models. An edge system running CPU and GPU can power off the GPU for less precise models. We compared approaches that toggle GPU states during missions and between missions. Toggling GPU states during a mission provided higher mission throughput. We also modeled end-to-end cost for an industrial application: agricultural scouting. With modeldriven edge management, FAAS missions are 87% cheaper than human piloted UAS missions. Our contributions are as follows: -Our modeling approach precisely predicts mission throughput. We show that autonomy settings have large effects on FAAS flight path and energy usage. -We built three open source FAAS through SoftwarePilot (autonomous photography, search and rescue, and agricultural scouting). We measure their mission throughput directly and validate our modeling approach.\n\n-We demonstrate edge resource management techniques that boost throughput and lower costs. The remainder of this paper is as follows. Section 2 provides an overview of FAAS. Section 3 presents an energy model driven by autonomy cubes. Section 4 describes the implementation of FAAS. Section 5 validates our model and studies FAAS workloads. Section 6 uses our modeling approach to guide FAAS system management. Section 7 discusses future work and limitations of our approaches. Section 8 discusses related work. Section 9 presents conclusions.\n\n\nMOTIVATION AND BACKGROUND\n\nAutonomous systems perform complex tasks in vaguely defined areas without receiving commands from humans. By this definition, UAS are not autonomous. Humans decide (1) where to fly, (2) when to sense data and (3) when a mission is complete. Figure 1 depicts UAS workflow. Humans set high-level mission goals, e.g., take a great photo of a human target. Then, they pilot the aircraft to waypoints by (1) using remote control devices, (2) making gestures or (3) providing a list of GPS coordinates. At each waypoint, the UAS senses data from its surroundings, e.g. detailed images or GPS data. After studying data, humans decide if their goals are met. If not, they choose new waypoints and repeat. Figure 1 also depicts workflow for FAAS. Humans set goals, but all remaining work is done by software. The system is capable of completing multiple missions without a human issuing commands. To remove humans from the loop, software must decide when a mission is complete, meaning both human end users and software can understand mission goals.\n\nThere is a semantic gap between true goals and goals that can be expressed in software. Today, autonomous systems require end users to translate their vague, high-level goals into mathematical equations (called utility functions). If the mission is not complete, FAAS software must also choose the next waypoint. An Example FAAS Mission: Crop fields are vast. Scouting reports can miss subtle problems, e.g., over crowding or crop disease. Human piloted UAS have transformed scouting. Companies, like Fly The Farm [29], fly over fields and capture detailed images. These images inform farmers, guiding the application of fertilizer and pesticides. However, UAS pilots charge $1-$5 per acre. One scouting report can cost nearly 3% of net profits for corn fields [7,16,42]. By eschewing human pilots, FAAS can lower costs. Figure 2 depicts flight area and two agricultural scouting missions explored similarly in prior research [5]. Flight area comprises waypoints where the aircraft can fly. Each cell in Figure 2 represents a waypoint (here, a GPS location). Following the blue line, our FAAS flight controller directs the aircraft to a waypoint (A1) and captures a detailed image. FAAS software analyzes the image, counting corn crops. If the image contains enough crops to accurately measure the state of the field, the mission is complete. (Note, the image may be fed into subsequent analysis, such as yield modeling [26].) If not, FAAS path finding software chooses a new waypoint (B1). This process repeats and the mission completes at waypoint B2.\n\nFAAS visit only some waypoints on each mission. As shown in Figure 2 path finding software (A* search versus nearest neighbors) changes where FAAS fly and how quickly missions complete. The settings represented by the red line choose a longer flight path. This is a key distinction: Video analytics using UAS fly to preset waypoints and adapt video quality dynamically [43]. With FAAS, analytics can affect flight actions, changing resource demands in ways that are hard to predict. Runtime Execution: Figure 1 depicts runtime execution with key software in red. First, software manages flight controls for takeoff, landing and maneuvers. Sensing software pulls data from aircraft sensors. These data producing and actuation components are latency sensitive and normally use processors placed onboard the aircraft [3]. Like video analytics, FAAS use AI models to convert sensed images to multi-dimensional points [17,20,36,43]. Each dimension represents the output of a model. This discussion does not require a specific class of model (e.g., DNN or regression) and models are built offline. During runtime, models are evaluated to classify scenes. This execution can use onboard processors, edge cloudlets or cloud resources [43]. Reinforcement learning can be a robust approach to autonomously control devices [27]. In this approach, FAAS are distributed with training data on observed settings. Each training data element contains (1) scene features computed using AI models, (2) a flight action and (3) a utility gain. An entry means that taking the flight action after observing the scene features, at one point in time, led to the utility gain. Reinforcement learning maps scenes to actions. End users must define utility of sensed data as a function over extracted features. This software too can execute onboard, at edge cloudlets or cloud. Our approach has four stages, shown as boxes in Figure 3. First, we collect all data that could be sensed during a mission, i.e., an autonomy cube. Autonomy cubes are used to construct precise flight paths along with a pathfinding algorithms discussed later (KNN, A*). Given a flight path, the next stages profile compute and aircraft workloads using empirical data. Finally, bottleneck analysis predicts whether aircraft or compute exhausts batteries first.\n\n\nPERFORMANCE MODELING\n\n\nAutonomy profiling\n\nFAAS are hard to model, because their flight path depends on which data is sensed at runtime. Two FAAS flying only a few feet apart can differ on the utility of their sensed data. Their flight paths could diverge, affecting energy usage per mission and ultimately mission throughput. We mitigate variation caused by spatial displacement by modeling expected mission throughput averaged over many runs. Path finding, AI models, utility functions and other autonomy settings have systemic and non-linear effects on flight path. Competing Approaches: Before detailing our approach, it helps to explain how recent work models autonomous systems [22,30,38]. Autoware [22,30] uses a long, representative trace from a self-driving car. This trace suffices for research because safety concerns constrain driving maneuvers and execution environments. Aerostack [38] creates multiple traces where users change the environment between traces. This approach captures a wide range of maneuvers, but, if autonomy settings change, flight paths will diverge from previous traces.\n\nWe use autonomy cubes, a data structure that captures all images that can be sensed during a mission within user defined constraints. Autonomy cubes represent a principled ideal for benchmarking; they can be used to compute flight paths across any FAAS autonomy setting. By depicting captured images at each allowed GPS location, Figure 2  For each dimension d i in which the vehicle can move (e.g yaw, upward motion, northward motion). dimensions are constrained to some maximum magnitude D i , describing the maximum range of the vehicles motion in said direction as such:\n\u2200i : 0 < d i < D i . x = (d 0 , ..., d K ) (1) fa i \u2208 FA : {x m } \u2192 {x n } (2) FS : {x, fa i , y} \u2192 {1|0} if fa i (x) = y (3) ug = u(ai(x)) u(ai(y)) \u2022 FS{x, fa i , y}(4)\nAs shown in Equation 2, we abstract flight actions FA as a set of functions that move the UAV between waypoints. Precisely, a flight action applies a set force. The force moves a hovering aircraft along six degrees of freedom. Actions are calibrated offline. Each action f a i moves aircraft from one expected waypoint to another. Due to spatial displacement, actual and expected positions may differ slightly. For example, wind can apply unexpected force, moving the aircraft away from its expected position. Note, waypoints reachable by any combination of actions define flight area. models (ai) and computes utility (0 <= u(x) <= 1) of its current state, which we call a featureset. Each valid flight step, i.e., FS(...) \u2192 1, has utility gain. Referring to Figure 2, the first flight step for the blue line is:\n{[A, 1], FlyNorth, [B, 1]}.\nThe AI models for this mission include A* (i.e., ai A * ). We now define autonomy cube, \u2200x \u2208 X ac = \u222a(x, ai(x)), where X represents the set of all reachable waypoints. This is to say that an autonomy cube is a data structure that represents the set of all reachable waypoints and their featuresets. Equation 4 shows that ac allows FAAS to compute utility gain for any valid flight step. As shown in Equation 5, a flight path is a sequence of N valid flight steps. Autonomous systems aim to maximize total utility gain TG, i.e., the product of utility gains acquired at each step in the path.\nfp = {x n , fa f(n) , y n } N TG : {fp} \u2192 r \u2208 R : r = n ug(x n , fa f(n) , y n )(5)\nUsing autonomy cubes: Autonomy cubes can be used to simulate a FAAS mission. For this paper, we constrain flight areas to an n-dimensional mesh of waypoints, e.g., a building or crop field. Each dimension corresponds to a FAAS flight action. Each action has an inverse action that is expected to return the aircraft to its original position. Supported actions include x,y, z translation and pitch, yaw, roll and gimbal pitch.\n\nCapturing autonomy cubes: Quadcopters support 6 controllable degrees of freedom, meaning they can use pitch, yaw and roll to fly in any direction along an x,y,z coordinate system [31]. Unlike cars and fixed wing planes, the coordinate system can be explored in any direction relatively quickly, requiring at most rotation and thrust. However, they only move forward in time. We exploit quadcopter maneuverability to capture sensed data before it changes, i.e., we transform time into discrete blocks based on how frequently the utility of sensed data changes. Equation 6 defines scene persistence P as the minimum discrete time slots t such that a hovering aircraft perceives qualitatively similar utility. As shown in Equation 7, to capture an autonomy cube, the aircraft or aircrafts fly to each waypoint in X before P seconds have elapsed. Due to the unpredictable nature of FAAS pathing, we must safely assure that a cube can be created within persistence constraints before flight. This is done by assuming that each flight action takes worst-case time. If a worst-case flight path can complete an autonomy cube within P seconds, so can all others. for this reason, we use the slowest flight action (f a s ) to model shifting between waypoints.\n\nIt is possible to use multiple aircraft to collect an autonomy cube. Equation 6 introduces the variable s representing swarm size (the number of UAV capturing the autonomy cube) to account for the decrease in latency of using a swarm of UAV.\nP = Latency(fa s (x)) \u00d7 t :(6)Max i (Latency(fa i (x))) * |X| s < P(7)\nExamining Equation 7, we observe four techniques to scale our approach. 1. Increase scene persistence: Scenes can be tweaked manually so that key features change less frequently. For example, we have tested our FAAS benchmarking suite using mannequins in place of fidgety humans, and farm land.  \n\n\nAircraft profiling\n\nIn the second stage of our modeling approach, we profile latency and energy functions for flight actions on an input aircraft. In Equation 8, the LatencyA function estimates latency using the average delay of flight actions executed at multiple, sampled points within the flight area denoted by N . Conceptually, we do the same for energy and hover power. This profiling is done offline.\nLatencyA = {fa i (x)} \u2192 r \u2208 R : r = n \u2032 LatencyA(fa i ((x n \u2032 )) N , N << |X|(8)\n\nCompute profiling\n\nCompute latency and energy vary depending on the content of data sensed at a waypoint. Unlike UAV actions, which have a tight latency distribution, compute latency has more variance. Scheduling fluctuations, unpredictable threading overhead, model timing, and network interference all cause compute timings to vary. Compute latency was profiled online, requiring a varied set of execution environments and conditions. experimental latency numbers for all individual components of our benchmark were compiled into normal distributions (represented my \u00b5 and \u03c3 ), truncated to the third standard deviation. Our model uses these distributions to predict compute latency for offline missions similarly to Equation 8.\nLatencyC = {ai(x)} \u2192 (\u00b5, \u03c3 ) \u2208 R : \u03c3 = n \u2032 Latency(ai((x n \u2032 )) N , N << |X|(9)\n\nThroughput modeling\n\nRecall, FAAS compute their flight path fp i at runtime. As shown in Equation 10, each flight step fs [i,n] \u2208 fp i is informed by data observed during execution.\nug n,n+1 : {x n , fa f(n) , y n } N \u2192 {x n+1 , fa f(n+1) , y n+1 }(10)\nSpecifically, FAAS compute expected utility gain ug , using past and training data comprised of additional autonomy  cubes to infer the effects of flight actions. Flight path fp i is the result of iterative invocations of expected utility gain given an autonomous cube, i.e., fp i = {ug \u2022 N ac}. To model throughput, we assume we access to ug and ac. We model energy used by the aircraft with two terms. First for every step along a flight path, we sum energy used for the corresponding action. Second, multiply latency for compute by power used when hovering. The inverse applies to compute. When both compute and aircraft have distinct energy sources with known storage capacities (C air and C cmp ), mission throughput is computed by looking at the number of missions completed before exhausting one energy sources.\n\nEquations 11 shows how we calculate final throughput based on aircraft and compute energy (E a ir and E c mp). E a ir can be calculated by summing the energy consumption of all individual flight actions. The energy consumption of a flight action amounts to its latency times the base power consumption of the UAV (hover power) plus the extra energy required to perform that flight action. E c mp is similarly profiled, using compute idle power as its base. Throughput (tput) describes the maximum number (N ) of waypoints reached in a mission, which is dependent on E a ir and E c mp. When one component runs out of energy, the system's mission completes, as shown in 11.  6 Table 1 decomposes FAAS and presents a layered, systems view of their components. This section presents each layer and compares system settings for 3 FAAS.\n\n\nIMPLEMENTING FAAS\n\nFAAS missions: We implemented (1) autonomous photography, (2) search and rescue, and (3) agricultural scouting. For autonomous photography, the FAAS positions itself and takes high-quality portraits of human faces. It autonomously explores its flight area. This workload was inspired by computational photography and SkyDio [1,3].\n\nThe search and rescue FAAS extends autonomous photography. It searches multiple areas for humans. During emergencies or disasters, it could help first responders discover victims. The FAAS navigates the aircraft between areas, e.g., rooms in a building, and also explores areas thoroughly.\n\nAs discussed, agricultural scouting is commercially viable today. This FAAS takes aerial images of a crop field similar to prior work [5]. For this work, we had access to a corn field, so our missions produce detailed images of corn and planting rows. Scouting as a workload kernel underlies aerial surveillance and military target detection.\n\nFlight area and flight actions: Autonomous photography covers a 2x2x3x3 hyper cube. The aircraft can translate X, Y and Z axes and rotate the camera. We have collected 110 autonomy cubes for this benchmark. Search and rescue explores 15 2x2x3x3 hyper cubes and supports the same actions.\n\nAgricultural scouting covers a 75-acre crop field. The flight area is a 55x43 grid. The aircraft can translate X and Y dimensions only. In total, we have collected 122 autonomy cubes (20970 images) across (1) all 3 FAAS, (2) diverse settings: outdoors, indoors, raining and windy, and (3) with multiple targets: humans and corn. Capturing a cube took roughly 11 minutes for autonomous photography cubes and 4 hours for agricultural scouting.\n\nUtility functions and constraints: Photography and crop analysis use different utility functions. A good portrait contains a centered, bright and crisp face [8]. We created a utility function using the following features: face detection, face location in the image, image brightness and size of the facial bounding box. A good picture of a crop field avoids blur, contrasts crops and soil and does not include extraneous objects. Our utility function here considers glare, image brightness and corn crops counted. For all utility functions, each feature is weighted and the whole function is normalized.\n\nEnd users set thresholds. When utility exceeds the threshold, the FAAS mission is complete. Our photography FAAS support 3 thresholds. A high threshold encourages the FAAS to explore its flight area. As a result, missions are longer. A low threshold encourages the FAAS to land quickly. We label this setting as high throughput. Finally, the default settings aims for a medium threshold that provides good mix.\n\nFlight area bounds FAAS flight path spatially. Flight actions that cause the aircraft to leave that area are not executed. If the aircraft battery falls below 10% of its capacity, our FAAS lands immediately. The Max Waypoints setting bounds flight path temporally. After exceeding this threshold, the mission completes.\n\nPath finding: By default, 4000 training data entries are used to decide where to fly. Each training data entry describes a single image from a collected autonomy cube. Training data entries consist of a vector of utility features, as well as pointers to other training data entries that represent sensed data within the autonomy cube that the FAAS could reach with one motion (e.g a training data entry may have pointers to data sensed using the left, right, up, and down flight actions). This reduces dozens or hundreds of autonomy cubes containing tens of gigabytes of image data into portable CSV files on the order of megabytes.\n\nPathfinding algorithms run on top of our cubes and training set to model FAAS actions. The K-Nearest Neighbors (KNN) algorithm finds 9 entries with utility features nearest to the sensed image. By default, we implement greedy path finding. The expected utility gain is the mean gain observed by nearest neighbors grouped by flight action. This approach takes the flight action with the largest expected utility gain.\n\nA* Search improves greedy KNN with a linear heuristic to model the whole flight area, choosing a flight action along the best expected path. Energy-aware A* Search weights flight actions according to aircraft profiles. It produces flight paths that prefer low energy actions. A* Search and its energyaware variant are well studied and have been used in recent research [9,22,30].\n\nAI models: Each FAAS characterizes sensed data into a vector with up to 64 dimensions. Each dimension represents the output of an AI classifier. We distinguish classifiers by compute demand and support any subset of these groups. Integer models include OpenCV local binary pattern, cascade models using only integer data types, and RGB image classifiers. These models are lightweight, fast and imprecise. Floating point models include DLIB histogram of gradients.\n\nThe are more precise than integer models but also slower to compute. Deep models include DLIB's convolutional neural network (CNN) for face recognition and our custom CNN for crop recognition. We execute deep models only when GPUs are available (i.e., not on CPUs).\n\nExecution context and architectural support: SoftwarePilot, our FAAS suite, is composed of micro services. Each micro service provides basic functions, e.g., issuing aircraft commands, data sensing, data storage, running sensed data through an AI model, querying path finding algorithms etc.\n\nMicro services exchange messages using Californium UDP CoAP clients and servers [28]. Our suite allows for execution of autonomy cube-based pathfinding and modeling on edge or cloud systems.\n\n\nEVALUATION\n\nModeling simplifies testing of a wide array of hardware settings on FAAS throughput. Given ground truth data and profile information, the goal of our modeling approach is to make results from modeled flights and actual FAAS missions virtually indistinguishable. Our FAAS provide ground truth. We can measure mission throughput directly with real aircraft, goals, software settings and compute hardware. This section first compares our model predictions to observed throughput. Then, we compare competing modeling approaches. Finally, we isolate compute and aircraft profiles, and characterize these workloads.\n\n\nModel validation\n\nWe flew each benchmark under the system settings in Table 1. Our FAAS uses the DJI Android SDK to control the aircraft via WiFi connected laptop (edge device). Our platform can also run software components across multiple devices or on the cloud. Edge devices run Ubuntu Linux 18.04.\n\nEach test started with fully charged aircraft and edge batteries. We then flew missions until one of the batteries fell below the safe landing threshold. Observed mission throughput is the number of missions completed. We repeated each test 6 times and report mean throughput.\n\nUnless noted otherwise, we used the DJI Spark aircraft [11]. Its body is roughly 6 square inches. It weighs 300 grams. We observed that it can hover for 11-13 minutes without recharging its 16 Wh lithium ion battery. Also unless otherwise noted, we use edge architecture setup, because it is easier to change architecture settings. We tested edge devices with the following compute architectures.\n\n\u2022 2c: HP G6 laptop; 2-core i5 7200u processor; 3.1 GHz; 3 MB cache; 4 GB DDR4 RAM; 500 GB hard drive.\n\n\u2022 2x2c: 2 HP G6 laptops using 1 Gbps Ethernet router. One laptop runs flight control, pulls images from the aircraft and computes integer AI models. The other laptop runs path finding algorithms and floating point models.\n\n\u2022 4c: 4-core i5 7300u processor; 3.5 Ghz Ghz; 3 MB cache; 4 GB DDR4 RAM; 500 GB hard drive.\n\n\u2022 4ci7: 4-core i7 7500u processor; 3.5 Ghz; 4 MB cache; 8 GB RAM; 256 GB SSD.\n\n\u2022 4c+gpu: 4ci7 connects to an NVIDIA 1080 Ti.\n\n\u2022 2c+gpu: GPU is connected to 2c.  Prediction accuracy: Recall, our modeling approach predicts expected mission throughput, i.e., an average over many missions. For autonomous photography and search and rescue, our approach uses autonomy cubes to produce 50 mission flight paths for each autonomy setting. Note, compute hardware settings do not affect flight paths. Autonomy settings include AI models, path finding and utility functions. For each flight path, Section 3 describes the workflow to predict mission throughput. Agricultural scouting covers a larger area. We have fewer cubes. Here, we generate 6 flight paths for each autonomy setting. Autonomy cubes were implemented by a micro service that returns an image from a cube waypoint in place of the aircraft camera. FAAS software interacts with the micro service as it would with the aircraft. Figure 4 compares predicted and observed mission throughput for autonomous photography. We shorten the names of mission goal parameters to mix, util and tput for space. We also shorten integer and floating point settings for AI models to int and fp. Our tests cover every autonomy setting supported. Mean absolute percent error (i.e., |pred\u2212obs| obs ) was 4%. Error can be attributed to subtle differences in flight conditions, battery age, and hardware timing between profile and test flights. We found that GPU, goals and path finding settings affected throughput by up to 1.8X, 1.75X and 1.71X in isolation. Combined, settings had complex effects. For example, adding a GPU sped up throughput by 1.15X under 4c, KNN and util. However, under 4c, A* and tput speed up was 1.23X-a 7% improvement. Util and KNN missions spent more time hovering. Energy used hovering lessened whole system speedup gained by adding a GPU. Competing modeling approaches: We also studied modeling approaches inspired by recent research. In Autoware [22,23,30], researchers use ROSBAG recordings from a real, longrunning self-driving car. We mimicked this approach by collecting long traces over multiple missions. For autonomous knn a* autoware using knn trace to model a* our approach using autonomy cubes  photography and search and rescue, we combined 100 mission flight paths. Scouting used 12 missions.\n\nAutoware does not consider autonomy settings. As such, this approach does not model flight path well. Figure 5 depicts the problem using examples from Figure 2. Autoware profiles compute workloads on new hardware. However, Autoware can not acquire data outside of the trace. If autonomy settings change where FAAS would fly, Autoware doesn't have access to the sensed data and profiles using available data. Figure 5 highlights the problem: A* missions complete faster than KNN and Mix missions. As a result, Autoware over estimates the total compute workload.\n\nAerostack flies autonomous aircraft in a wide range of settings by manually inserting obstacles [38]. This approach improves Autoware's methodology, because traces include data from multiple settings. We mimicked this approach by creating 3 long running traces for each setting. Figures 6 (a -d) compare our approach, Autoware and Aerostack. We also compare a simple modeling approach driven by data collected from DJI and Intel (DJI). This approach ignores autonomy and uses flight time and aggregate cycles per second to model throughput as a function of speedup, max waypoints and flight time. Autoware and Aerostack traces used missions conducted under baseline setting. Aerostack traces toggled waypoints (15) and A* for multiple traces.\n\nAcross all workloads, settings, and architectures, competing approaches increase relative error from 1.2x-10x. Workloads with high flight overhead and lower detail sensed data experienced less error than low overhead workloads. In autonomous photography, where subtle differences in pathing can cause massive differences in sensed data, sees between 1.7X to over 10X error when using other approaches.\n\nIn Figures 6 (a,c & d), we used a setting close to the reference trace: we changed mix to util. In these graphs, Autoware and Aerostack avoid inflating error by 2X. Given our model predicts throughput with 4%, these results are not too bad. However, Figures 6(b) makes 2 major changes: we changed mix to tput and knn to A*. As shown earlier, these settings affect throughput greatly. DJI inflates relative error 10X, Autoware by up to 20X and Aerostack by 5%. These results suggest that benchmarking must account for flight pathand, more broadly, software settings related to autonomy.\n\nChanging aircraft: To assure the validity of our modeling approach, we created and validated models for the DJI Mavic Pro as well as the Spark. The DJI Mavic Pro is a 734g personal UAV, roughly 12 inches in length. It has a 43 Wh lithium ion battery and a maximum hover time of 23-25 minutes. Mavic, with more powerful motors and processors, requires more energy to run than Spark. Across the flight components we modeled, Mavic consumes 45-55% more energy than Spark. Validation through 5 fully autonomous missions provided an average error of 3% for our Mavic model. Image Quality: Figure 6(e) describes the effects of image quality on throughput. Recent UAS work suggests using high compression ratios [4,15] (such as JPEG60) or low resolution images to speed up detection. As shown, processing times decrease with compression ratio. However, image quality degrade object detection. As a result, aircraft explore more waypoints, possibly without producing valuable outcomes. Figure 6(e) shows the decrease in throughput as image quality degrades using DLIB's facial recognition CNN. At the default quality of the DJI Spark camera (12 megapixels), our FAAS can complete 27 missions per charge. At lower image quality (3 megapixels [4,15]), mission throughput has degraded 62%. This result shows that end-to-end metrics are critical in autonomous systems-results driven by processing time alone can miss whole system impacts.\n\n\nWorkload study\n\nFigure 6(f) reports the impact of aircraft hover, flying, networked data transfer, idle compute and runtime software on total system energy. The aircraft accounts for 58-90%. The use of GPU increases the impact of compute by 4.6X. Table 6(g) delves into the architectural metrics affecting compute latency on facial recognition workloads. These data were collected on the 4c hardware using the Linux Perf tool. We observe that autonomy settings affect waypoints per mission (WPM). Integer models are too imprecise, causing the FAAS to visit many waypoints. However, integer models execute efficiently on general purpose processors, reducing the frequency of cache and branch misses by 25%. This setting provided the lowest latency, speeding up runtime by 4X.\n\nUnder A* search, the runtime executes more instructions per waypoint (IPW) before encountering cache misses than baseline setting. However, despite the lower cache miss rate, it also incurs more branch misses and executes more IPW (i.e., instructions spent computing utility gain for a sequence of actions). The net result is a 29% slowdown.  coupled aircraft, software and hardware, and (3) adapt hardware and software at runtime.\n\n\nSYSTEM MANAGEMENT\n\n\nManaging compute resources\n\nOur modeling approach uses autonomy settings to construct realistic flight paths. Flight paths and autonomy cubes yield representative compute workloads. These workloads can be tested without flying the aircraft. Consider an end user that owns a commodity aircraft. This end user may ask, which hardware resources will provide good throughput? Reusing flight paths across competing hardware solves this problem. When upgrading compute resources, there are 3 options. With scale out, compute resources are replicated and the workload is balanced across them. Upgrading from our 2c to 2x2c setups reflects scale out. Scale up replaces resources with faster or more energy efficient resources, e.g., 2c i5 to 4c i7. Finally, workload targeted accelerators can augment existing resources, e.g., 2c+gpu. Figure 7(a) plots speedup achieved by scaling out, scaling up, and adding GPU using the autonomous photography FAAS. Speedup is tput new tput old . For this plot, the denominator is from a 2c processor running on a device that has 2 Wh battery. Under 2 Wh battery, only scale up provides speedup greater than the increase in system cost. If the upgrade includes a 20 Wh battery, scale out and scale up are worthy investments. GPU speedup does not match its 9X cost increase. However, a GPU provides greatest increase in throughput.\n\n\nComparing onboard, edge and cloud\n\nDJI software development kits support edge architecture where tablets run AI software and control aircraft remotely [10]. For developers, these devices offer one hop, low latency access to the aircraft and powerful compute. Further, developers can procure resources as needed.\n\nProcessors located onboard could provide lower latency, but there is a downside: onboard devices take energy from the aircraft, decreasing flight time. Note, flight time decreases for two reasons. First, and most directly, processors use energy for vision processing, path finding, etc. Second, more subtly, their weight increases thrust needed to take off, hover and fly. Small aircraft simply can not move enough air to carry an Nvidia 1080 Ti (1041 g). Even larger unmanned aerial vehicles would notice decreased in flight time.\n\nThe cloud is also an option. Elastic cloud services could dynamically provision resources, allowing end users to lease hardware on demand and avoid over provisioning. The downside is that slow network latency reduces responsiveness.\n\nWe extended our aircraft profiles to model flight time given added payload. The relationship between flight time and payload weight depends on nominal thrust and aircraft weight [31]. Specifically, we modeled flight time lost to carry Intel i5 CPU, DDR4 RAM and SSD using manufacturer provided thrust and power loading data. We compared three aircraft: (1) Spark, a 300g UAV that can carry 500g; (2) Mavic, a 734g UAV that can carry 1300g; And (3) Matrice 100, a 2400g enterprise UAV that carries 3600g. For Spark, onboard CPU and RAM would degrade flight time by 20%. The full compute system would degrade flight time by 50%. For Mavic and Matrice, the full compute system onboard would degrade flight time by 10%.\n\nWe updated our aircraft profiles to get onboard throughput. We increased energy needs for each flight action in proportion to flight time degradation caused by onboard payload. Then at each waypoint, we subtracted compute energy from aircraft capacity. For cloud throughput, we deployed 2x2c set up using an AWS micro instance as the second processor. This led to a 12% throughput degradation due to moving images between the edge and cloud. Figure 7(b) explores the relationship between throughput per dollar and aircraft lifetime (measured in missions). This figure uses the Spark aircraft and assumes that users either purchase hardware or cloud time on an instance that has a static cost per FAAS mission. Throughput per dollar of the cloud system remains static. We used AWS on-demand micro instances for pricing. Onboard and edge systems have overhead cost that cloud systems do not, but minimal maintenance costs, meaning they experience gains in total throughput per dollar as the system is used. Cloud systems also experience much higher latency than edge systems making edge systems more attractive for live FAAS processing. The crossover point is where onboard and edge systems become more cost effective compared to cloud systems. Using our 4c configuration with a high throughput autonomy setting and a DJI Spark, an edge system would become cost effective after only 10 missions. Moving the system onboard takes 5X as long to cross over.\n\n\nAdaptive hardware-workload co-design\n\nEnd users may have many options as to which AI models they choose to deploy on their FAAS. Our benchmarks can switch between multiple models that vary in (1) recognition accuracy and (2) latency. Highly accurate models are needed to detect distant or dark objects. Less complex models suffice for clear, crisp images. However, highly accurate DNN with DLIB (deep models) require a costly, power hungry GPU. We also use the OpenCV LBP cascade classifier (int models) which, when run on a 2 core laptop, has lower latency than DNN, but also lower accuracy. Deep models can find small, unclear faces in large, noisy images, but as images become clearer, it's performance converges with that of int models.\n\nAs the performance of Deep and Int models converge, it is prudent to turn off the GPU and use only the faster Int models. This approach conserves edge battery and increases throughput by decreasing feature extraction latency. Figure 7(c) depicts an experimentally obtained example mission sequence where the GPU is duty cycled. We set a utility threshold of 0.5, turning off the GPU and using Int models only after a 0.5 utility image was found. All signifies waypoints where deep models were computed whereas Int signifies waypoints where only Int models were computed. For waypoints occurring after the duty cycle threshold, Int models and deep models performed similarly, finding images at comparable utility and choosing the same paths. Figure 7(d-e) explore the differences in throughput and utility of duty cycling GPU using 3 different policies: 11 \u2022 Our Approach: Assigns a user defined threshold for duty cycling. Once one image in a flight path exceeds that threshold using the DNN model, the GPU is turned off and the LBP model is used for facial recognition.\n\n\u2022 Ubora: Mimicks adaptive quality management in recent research [24,25]. Each mission is treated as a query. GPU and Int models are toggled once at the start of each mission. Average utility taken over the flight path is compared to a duty cycle threshold. If average utility exceeds the threshold, GPU is turned off until average utility falls below the threshold.\n\n\u2022 Static: Uses deep models for all feature extraction, with no GPU duty cycling. Figure 7(d) shows a 1.3X gain from using our duty cycling approach as compared to the static approach, and a 1.4X gain as compared to Ubora when using either A* configuration. The A* configurations both have large enough edge batteries such that they are bottlenecked by the UAV battery, so gains or losses in throughput are entirely dependent on execution time savings during feature extraction, which are realized by the GPU configuration. The Ubora approach sees a decrease in throughput as compared to both others. Using a cumulative utility threshold allows for the Ubora approach to miss local utility spikes in a high variance workload like UAV data collection. In our test configurations, Ubora duty cycled the GPU either too early or too late. Duty cycling too late (after integer models and deep models converge) causes Ubora to function like our approach, but with more GPU usage. Duty cycling too early potentially switches to integer models before accuracy converges, taking more waypoints on average to meet utility goal. This affect can be seen in Figure 7(e), where Ubora sees considerably lower average utility than both our approach and the static approach. The failings of the Ubora approach in this context, contrasted with the success of our simpler approach, demonstrate that while duty cycling models and hardware in FAAS workloads can be advantageous, one must carefully choose their duty cycling approach.\n\nAverage utility across autonomy setting is also important. As our architecture, models, and path-finding algorithms improve, so does average utility. Our KNN configuration sees 0.83X lower image utility as compared to A* using the same models. When transitioning to a deep model on the GPU configuration, we see a 1.06X improvement in average utility which can be attributed to the higher accuracy of the deep model. Using our low battery configuration (where edge battery is a throughput bottleneck), we see that our approach makes a 1.65X improvement over a non-duty cycling approach, and a 1.15X improvement over Ubora. 10 \n\n\nSpeedup for autonomous photography\n\nOur model-driven approaches found highest throughput using 4-core Intel I7 with GPU while using low utility threshold, adaptive duty cycling and A* search. This setting completed 34 missions using Spark without recharging. Compared to 2-core Intel I5 using greedy KNN to find high utility images, the 4-core setting sped up compute latency by 15X. Looking deeper, the following changes were significant: \u2022 Autonomy settings: A* search and lower threshold reduced waypoints per mission, providing 4.1X speedup.\n\n\u2022 Using a GPU: Up to 2.25X over other approaches.\n\n\u2022 Software driven power management: 1.3X throughput increase over static GPU usage. Combined, the best settings yield a 10.2X increase in mission throughput compared to the 2-core setting mentioned above.\n\n\nEnd-to-end savings for crop scouting\n\nOur scouting FAAS covers roughly 1-acre per mission and completes 15 missions per hour. 1 FAAS would require 10 hours to scout a 150-acre field. However, multiple FAAS can work in parallel to scout the whole field faster. Given a deadline, we can estimate total hardware and software cost for all parallel FAAS. In contrast, UAS require human piloting. Based on first hand experience, we assume human pilots can execute 11 lawnmower missions for $20 per hour [29]. We also model cost for UAS equipment such as batteries, compute resources, and aircraft. Figure 8 shows the cost for parallel UAS and baseline FAAS to achieve x mission throughput per hour. Baseline FAAS (2c, autoware, KNN) outperforms human piloted UAS. additional equipment and labor costs inflate UAS costs. Our modeldriven approaches improve mission throughput significantly, gaining 6X and 4.2X on UAS and baseline. Adaptive GPU power cycling provides further improvements. Model-driven, adaptive FAAS reduce costs by 87% compared to humanpiloted UAS.\n\n\nLIMITATIONS AND FUTURE WORK\n\nOur Autonomy Cube modeling approach and analysis includes many limitations and future opportunities. First and foremost, autonomy cubes can be difficult to collect. We flew over 100 FAAS missions to collect autonomy cubes for both FAAS modeling and as input to pathfinding algorithms. This is not feasible for all FAAS tasks. Future work should explore the creation of autonomy cubes from extant geotagged multidimensional image sets. For instance, large available datasets like Google Street View [2], or autonomous driving datasets like KITTI [14] could be used to construct autonomy cubes for a multitude of relevant FAAS tasks.\n\nMany of our management strategies focused on decreasing compute power consumption of a single FAAS. Multiple FAAS, i.e., swarms, can share edge compute systems while each UAV carries its own battery on board. The aggregate compute demands of a large swarm could transform power usage, making edge system batteries the bottleneck resources. Our approach can adjust battery sizes, but we can not model how swarms will inflate compute demands.\n\n\nRELATED WORK\n\nFAAS choose their flight path at runtime similar to selfdriving cars. Workload settings that affect their flight path can change energy usage and throughput significantly. We quantified this and proposed autonomy cubes to capture representative traces when settings change. Autoware is a project designed to make autonomous driving more open [22]. Autoware presents open algorithms, libraries, and consumer hardware components for autonomous driving, many of which are applicable to FAAS. It's motion planning design, as referenced in section 5, was improved upon in this paper. Lin et. al extend Autoware to study accelerators [30]. Object detection and tracking for self-driving cars can be sped up 169X using consumer grade hardware, but compute speedup can reduce driving range. This result parallels our observations with mission throughput. Aerostack [38] presents an open source, component based software architecture for aerial robotics, emphasizing full autonomy. Aerostack's design influenced the design and implementation of our own FAAS software.\n\nOther recent studies explore acceleration and edge devices. Sirius [19] studied FPGAs, CPUs, GPUs, and coprocessors on personal assistant benchmarks. In-situ AI [40] studied autonomous IoT. Computational sprinting has targeted interactive, mobile workloads with dynamic architectural optimizations [34,35].\n\n\nCONCLUSION\n\nUnmanned aircraft are changing industries from agriculture to surveillance and photography. Fully autonomous aerial systems are piloted by software-eschewing costly and mistake prone human piloting. Software and hardware settings affect where these systems fly and when missions complete. Recent benchmarking papers use few settings, e.g., from prior traces, but extrapolate throughput broadly. This paper presents a modeling approach that can model flight paths across autonomy settings. Autonomy cubes provide sensed data for any reachable waypoint, enabling our approach. We have collected autonomy cubes for real FAAS executing diverse missions across a wide range of settings. Our model predicts FAAS throughput within 4%. We used our model to evaluate system management problems and uncovered insights that can improve throughput 10X and FAAS reduce costs 87%. Code for our modeling approach and autonomy cubes are open source, made available through the SoftwarePilot project.\n\nFig. 1 :\n1With FAAS, humans set mission goals but do not pilot.\n\nFig. 2 :\n2Two agricultural scouting missions. Each image represents an allowed waypoint where the aircraft could have flown (i.e., flight area). Lines represent actual waypoints visited. Both missions begin at A1.\n\nFigure 3\n3outlines our approach to model mission throughput. Model inputs relate to autonomy (goals & workload), compute architecture and aircraft.\n\n\npresents a simple 2-D autonomy cube. Defining autonomy cubes: Shown in Equation 1, A waypoint x is a multi-dimensional point. Dimensions can abstract (1) GPS or grid positions (e.g., Figure 2), (2) aircraft poses (e.g., aircraft attitude, gimbal positions), and localized data (e.g., altimeter and compass readings). Waypoint x is a set of dimensions d 1 ...d n that uniquely describes the UAVs real world position and state. FAAS fly in a discrete and finite space. where the dimensions are constrained either by limitations of the vehicle, the user, or communication range.\n\nFig. 3 :\n3A single step along a flight path has a starting point, action and ending point. The flight step function FS (Equation 3) indicates valid steps where the flight action leads to an end point within the confines of the FAAS flight areas dimensions.A waypoint will always have |FA| flight actions, but only some may produce valid flight steps. At each waypoint, FAAS senses its surroundings, transforms sensed data using AI Modeling mission throughput for multiple architectures, aircraft and autonomy settings.\n\n2 .\n2Shrink flight area: We can shrink the total area where aircraft can fly or allow fewer flight actions. Of course, fewer flight actions degrades total utility gain. 3. Speedup flight actions: We could also reduce flight time going between waypoints. Scheduling autonomy cube flight paths by prioritizing waypoints with the shortest flight time relative to the current waypoint would minimize delay per flight step.\n\n(\nEnA(fa n ) + LatencyC(ai(x n )) \u00d7 PwrA(fa hover )) E cmp (N) : n (EnC(ai(x n )) + LatencyA(fa n ) \u00d7 PwrC(idle)) tput = min N : C air \u2212 E air (N) = 0 or C cmp \u2212 E cmp (N) = 0\n\nFig. 4 :\n4Our model predicts mission throughput precisely. Baseline setting is highlighted\n\nFig. 5 :\n5Depicting Autoware versus our approach.\n\nFig. 6 :\n6(a -d) Comparing trace and cube driven modeling approaches. (e) poor image quality degrades mission. (f) Autonomy settings shift compute and aircraft energy demands. (g) Autonomy settings affect common architecture counters.\n\nFig. 7 :\n7Model-driven management of autonomous photography FAAS: (a) speedup and cost by architecture optimization, (b) efficiency of onboard, edge, and cloud systems, (c) utility of images captured across FAAS missions with adaptive model switching, (d-e) a comparison of throughput and utility across adaptive switching approaches.\n\n4 .\n4Use swarms to partition cubes: Finally, multiple quadcopters can be deployed at once, allowing each to capture a fraction ( 1 S ) of the flight area. We have used swarms to capture autonomy cubes used with our FAAS. However, for workloads that require tight maneuvering (autonomous photography), partitioning presents several research challenges. First, partitioning to minimize expected delay per action is challenging. Seconding, partitioning should consider the effects of battery capacity. Partitioning on search and rescue (partitioning by rooms) and agricultural sampling (by field region) are much more feasible. Finally, aircraft flying in the same region may interfere with each other.We used swarms comprising 2 & 3 aircraft to partition flight area along the vertical axis (y-axis) for our autonomous photography benchmark. As expected, we were able to cover up 3X more flight area in the best case. However, we also observed anomalies unique to aerial systems. Placing aircraft immediately under each other (i.e., partitioning y while strictly keeping x & z the same) affected wind patterns, creating suctions. The aircraft crashed into each other. Partitions that worked well slightly offset the aircraft in the x & z dimensions.\n\nTable 1 :\n1Layered implementation and system settings.\n\n\nknn[A,1] \u2192 fly[A,2] \u2192 knn[A,2] \u2192 fly[A,3] \u2192 knn[A,3] \u2192 fly[B, 3] a* [A,1] \u2192 fly[B,1] a * [A,2] \u2192 fly[B,2] a * [A,3] \u2192 fly[B, 3] a* [A,1] \u2192 fly[B,1] \u2192a * [B,1] \u2192 fly[B,2] \u2192a * [B,2] \u2192 complete autonomy cube supplies data\n\n\nFig. 8: Agricultural scouting cost as end users use parallelism to increase throughput. Our model-driven edge management provides savings at scale.20 \n30 \n40 \n50 \n60 \n70 \n80 \n90 \n100 \n110 \n120 \n130 \n140 \n150 \n160 \n170 \n180 \n190 \n200 \n\n$0 \n\n$5,000 \n\n$10,000 \n\n$15,000 \n\n$20,000 \n\nuas (human) \nbaseline faas \nmodel-driven \nadapive model-driven \n\ncost \n\nmissions per hour \n\n\n\nSkydio announces sdk to make world\u00e2\u0102\u0179s cleverest drone even cleverer. E Ackerman, E. Ackerman. Skydio announces sdk to make world\u00e2\u0102\u0179s cleverest drone even cleverer. https://spectrum.ieee.org/.\n\nGoogle street view: Capturing the world at street level. Dragomir Anguelov, Carole Dulong, Daniel Filip, Christian Frueh, St\u00e9phane Lafon, Richard Lyon, Abhijit Ogale, Luc Vincent, Josh Weaver, Computer. 436Dragomir Anguelov, Carole Dulong, Daniel Filip, Christian Frueh, St\u00e9phane Lafon, Richard Lyon, Abhijit Ogale, Luc Vincent, and Josh Weaver. Google street view: Capturing the world at street level. Com- puter, 43(6):32-38, 2010.\n\nAlways-on vision processing unit for mobile applications. Brendan Barry, Cormac Brick, Fergal Connor, David Donohoe, David Moloney, Richard Richmond, O&apos; Martin, Vasile Riordan, Toma, IEEE Micro. 352Brendan Barry, Cormac Brick, Fergal Connor, David Donohoe, David Moloney, Richard Richmond, Martin O'Riordan, and Vasile Toma. Always-on vision processing unit for mobile applications. IEEE Micro, 35(2), 2015.\n\nMavbench: Micro aerial vehicle benchmarking. Behzad Boroujerdian, Hasan Genc, Srivatsan Krishnan, Wenzhi Cui, Aleksandra Faust, Vijay Reddi, MICROBehzad Boroujerdian, Hasan Genc, Srivatsan Krishnan, Wenzhi Cui, Aleksandra Faust, and Vijay Reddi. Mavbench: Micro aerial vehicle benchmarking. In MICRO, 2018.\n\nAutonomic computing challenges in fully autonomous precision agriculture. Jayson Boubin, John Chumley, Christopher Stewart, Sami Khanal, 2019 IEEE International Conference on Autonomic Computing (ICAC). IEEEJayson Boubin, John Chumley, Christopher Stewart, and Sami Khanal. Autonomic computing challenges in fully autonomous precision agri- culture. In 2019 IEEE International Conference on Autonomic Computing (ICAC). IEEE, 2019.\n\n. Jayson Boubin, Christopher Stewart, Shiqi Zhang, T R Naveen, Zichen Babu, Zhang, Jayson Boubin, Christopher Stewart, Shiqi Zhang, Naveen T.R. Babu, and Zichen Zhang. Softwarepilot. http://github.com/boubinjg/ softwarepilot, 2019.\n\n3 examples showing why crop scouting pays, even in an off year. T Brechman, T. Brechman. 3 examples showing why crop scouting pays, even in an off year. www.indianaprairiefarmer.com, 2016.\n\nCNN. 7 tips for taking better selfies. CNN. 7 tips for taking better selfies. https://www.cnn.com/2013/12/ 11/tech/mobile/selfie-photo-tips/, 2013.\n\nEnergy-aware coverage path planning of uavs. Carmelo Di Franco, Giorgio C Buttazzo, ICARSC. Carmelo Di Franco and Giorgio C Buttazzo. Energy-aware coverage path planning of uavs. In ICARSC, pages 111-117, 2015.\n\nPrerequisites-dji mobile sdk documentation. Dji, DJI. Prerequisites-dji mobile sdk documentation. https://developer.dji. com/, 2018.\n\n. Dji Spark, Specs, DJI. Spark specs. https://www.dji.com/spark/info, 2018.\n\nWhere's the bear?-automating wildlife image processing using iot and edge cloud systems. Ar Elias, C Golubovic, Krintz, IEEE Internet of Things Design and Implementation. AR Elias, N Golubovic, C Krintz, and et al. Where's the bear?- automating wildlife image processing using iot and edge cloud systems. In IEEE Internet of Things Design and Implementation, 2017.\n\nAutonomous, vision-based flight and live dense 3d mapping with a quadrotor micro aerial vehicle. Matthias Faessler, Flavio Fontana, Christian Forster, Elias Mueggler, Matia Pizzoli, Davide Scaramuzza, Journal of Field Robotics. 334Matthias Faessler, Flavio Fontana, Christian Forster, Elias Mueggler, Matia Pizzoli, and Davide Scaramuzza. Autonomous, vision-based flight and live dense 3d mapping with a quadrotor micro aerial vehicle. Journal of Field Robotics, 33(4), 2016.\n\nAre we ready for autonomous driving? the kitti vision benchmark suite. Andreas Geiger, Philip Lenz, Raquel Urtasun, 2012 IEEE Conference on Computer Vision and Pattern Recognition. IEEEAndreas Geiger, Philip Lenz, and Raquel Urtasun. Are we ready for autonomous driving? the kitti vision benchmark suite. In 2012 IEEE Conference on Computer Vision and Pattern Recognition, pages 3354- 3361. IEEE, 2012.\n\nFlying iot: Toward low-power vision in the sky. H Genc, Y Zu, T Chin, M Halpern, V J Reddi, IEEE Micro. 376H. Genc, Y. Zu, T. Chin, M. Halpern, and V. J. Reddi. Flying iot: Toward low-power vision in the sky. IEEE Micro, 37(6):40-51, November 2017.\n\nAssessing the accuracy of mosaics from unmanned aerial vehicle (uav) imagery for precision agriculture purposes in wheat. D Gomez-Candon, A De Castro, F Lopez-Grandos, Remote Sensing. D. Gomez-Candon, A. De Castro, and F. Lopez-Grandos. Assessing the accuracy of mosaics from unmanned aerial vehicle (uav) imagery for precision agriculture purposes in wheat. In Remote Sensing, 2014.\n\nParkmaster: An in-vehicle, edge-based video analytics service for detecting open parking spaces in urban environments. G Grassi, P Jamieson, G Bahl, Pau, ACM Symposium on Edge Computing. G Grassi, K Jamieson, P Bahl, and G Pau. Parkmaster: An in-vehicle, edge-based video analytics service for detecting open parking spaces in urban environments. In ACM Symposium on Edge Computing, 2017.\n\nData cube: A relational aggregation operator generalizing group-by, crosstab, and sub-totals. Data mining and knowledge discovery. Jim Gray, Surajit Chaudhuri, Adam Bosworth, Andrew Layman, Don Reichart, Murali Venkatrao, Frank Pellow, Hamid Pirahesh, Jim Gray, Surajit Chaudhuri, Adam Bosworth, Andrew Layman, Don Reichart, Murali Venkatrao, Frank Pellow, and Hamid Pirahesh. Data cube: A relational aggregation operator generalizing group-by, cross- tab, and sub-totals. Data mining and knowledge discovery, 1997.\n\nSirius: An open end-to-end voice and vision personal assistant and its implications for future warehouse scale computers. Johann Hauswald, A Michael, Yunqi Laurenzano, Cheng Zhang, Austin Li, Arjun Rovinski, Khurana, G Ronald, Trevor Dreslinski, Vinicius Mudge, Lingjia Petrucci, Tang, ASPLOS. Johann Hauswald, Michael A Laurenzano, Yunqi Zhang, Cheng Li, Austin Rovinski, Arjun Khurana, Ronald G Dreslinski, Trevor Mudge, Vinicius Petrucci, Lingjia Tang, et al. Sirius: An open end-to-end voice and vision personal assistant and its implications for future warehouse scale computers. In ASPLOS, 2015.\n\nVideoedge: Processing camera streams using hierarchical clusters. Cc Hung, Ananthanarayanan, ACM Symposium on Edge Computing. CC Hung, G Ananthanarayanan, and et al. Videoedge: Processing camera streams using hierarchical clusters. In ACM Symposium on Edge Computing, 2018.\n\nAdaptive edge analytics for distributed networked control of water systems. S Kartakis, R Yu, Akhavan, IEEE Internet of Things Design and Implementation. S Kartakis, W Yu, R Akhavan, and et al. Adaptive edge analytics for distributed networked control of water systems. In IEEE Internet of Things Design and Implementation, 2016.\n\nAn open approach to autonomous vehicles. Shinpei Kato, Eijiro Takeuchi, Yoshio Ishiguro, Yoshiki Ninomiya, Kazuya Takeda, Tsuyoshi Hamada, IEEE Micro. 356Shinpei Kato, Eijiro Takeuchi, Yoshio Ishiguro, Yoshiki Ninomiya, Kazuya Takeda, and Tsuyoshi Hamada. An open approach to au- tonomous vehicles. IEEE Micro, 35(6), 2015.\n\nAutoware on board: enabling autonomous vehicles with embedded systems. Shinpei Kato, Shota Tokunaga, Yuya Maruyama, Seiya Maeda, Manato Hirabayashi, Yuki Kitsukawa, Abraham Monrroy, Tomohito Ando, Yusuke Fujii, Takuya Azumi, International Conference on Cyber-Physical Systems. Shinpei Kato, Shota Tokunaga, Yuya Maruyama, Seiya Maeda, Manato Hirabayashi, Yuki Kitsukawa, Abraham Monrroy, Tomohito Ando, Yusuke Fujii, and Takuya Azumi. Autoware on board: enabling au- tonomous vehicles with embedded systems. In International Conference on Cyber-Physical Systems, 2018.\n\nYuxiong He, and Sameh Elnikety. Measuring and managing answer quality for online data-intensive services. Jaimie Kelley, Christopher Stewart, Nathaniel Morris, Devesh Tiwari, ICAC. Jaimie Kelley, Christopher Stewart, Nathaniel Morris, Devesh Tiwari, Yuxiong He, and Sameh Elnikety. Measuring and managing answer quality for online data-intensive services. In ICAC, 2015.\n\nObtaining and managing answer quality for online data-intensive services. Jaimie Kelley, Christopher Stewart, Nathaniel Morris, Devesh Tiwari, ACM Transactions on Modeling and Performance Evaluation of Computing Systems. Yuxiong He, and Sameh ElniketyJaimie Kelley, Christopher Stewart, Nathaniel Morris, Devesh Tiwari, Yuxiong He, and Sameh Elnikety. Obtaining and managing answer quality for online data-intensive services. In ACM Transactions on Modeling and Performance Evaluation of Computing Systems, 2017.\n\nIntegrating aerial images for in-season nitrogen management in a corn field. computers and electronics in agriculture. Sami Khanal, John Fulton, Nathan Douridas, Andrew Klopfenstein, Scott Shearer, 148Sami Khanal, John Fulton, Nathan Douridas, Andrew Klopfenstein, and Scott Shearer. Integrating aerial images for in-season nitrogen management in a corn field. computers and electronics in agriculture, 148, 2018.\n\nDeep neural network for real-time autonomous indoor navigation. Ki Dong, Tsuhan Kim, Chen, arXiv:1511.04668arXiv preprintDong Ki Kim and Tsuhan Chen. Deep neural network for real-time autonomous indoor navigation. arXiv preprint arXiv:1511.04668, 2015.\n\nCalifornium: Scalable cloud services for the internet of things with coap. Matthias Kovatsch, Martin Lanter, Zach Shelby, International Conference on the Internet of Things. Matthias Kovatsch, Martin Lanter, and Zach Shelby. Californium: Scal- able cloud services for the internet of things with coap. In International Conference on the Internet of Things, 2014.\n\nFly the farm. Meg Kummerow, Meg Kummerow. Fly the farm. http://www.flythefarm.com.au/, 2018.\n\nThe architectural implications of autonomous driving: Constraints and acceleration. Yunqi Shih-Chieh Lin, Chang-Hong Zhang, Matt Hsu, Skach, E Md, Lingjia Haque, Jason Tang, Mars, ASPLOS. Shih-Chieh Lin, Yunqi Zhang, Chang-Hong Hsu, Matt Skach, Md E Haque, Lingjia Tang, and Jason Mars. The architectural implications of autonomous driving: Constraints and acceleration. In ASPLOS, 2018.\n\nMultirotor aerial vehicles. Robert Mahony, Vijay Kumar, Peter Corke, IEEE Robotics and Automation magazine. 2032Robert Mahony, Vijay Kumar, and Peter Corke. Multirotor aerial vehicles. IEEE Robotics and Automation magazine, 20(32), 2012.\n\nThe future of autonomy isn't human-less. it's human more. Lockheed Martin, Lockheed Martin. The future of autonomy isn't human-less. it's human more. https://www.lockheedmartin.com/en-us/capabilities/ autonomous-unmanned-systems.html, 2018.\n\nPixhawk: A micro aerial vehicle design for autonomous flight using onboard computer vision. Lorenz Meier, Petri Tanskanen, Lionel Heng, Gim Hee Lee, Friedrich Fraundorfer, Marc Pollefeys, 33Autonomous RobotsLorenz Meier, Petri Tanskanen, Lionel Heng, Gim Hee Lee, Friedrich Fraundorfer, and Marc Pollefeys. Pixhawk: A micro aerial vehicle design for autonomous flight using onboard computer vision. Au- tonomous Robots, 33(1-2), 2012.\n\nModel-driven computational sprinting. N Morris, Stewart, R Chen, Birke, ACM Eurosys. N Morris, C Stewart, L Chen, R Birke, and et al. Model-driven compu- tational sprinting. In ACM Eurosys, 2018.\n\nSprint ability: How well does your software exploit bursts in processing capacity? In ICAC. Nathaniel Morris, Christopher Siva Meenakshi Renganathan, Robert Stewart, Lydia Birke, Chen, Nathaniel Morris, Siva Meenakshi Renganathan, Christopher Stewart, Robert Birke, and Lydia Chen. Sprint ability: How well does your software exploit bursts in processing capacity? In ICAC, 2016.\n\nCollage inference: Tolerating stragglers in distributed neural network inference using coding. Krishna Giri Narra, Zhifeng Lin, Ganesh Ananthanarayanan, Salman Avestimehr, Murali Annavaram, Krishna Giri Narra, Zhifeng Lin, Ganesh Ananthanarayanan, Salman Avestimehr, and Murali Annavaram. Collage inference: Tolerating stragglers in distributed neural network inference using coding, 2019.\n\nAerostack: An architecture and open-source software framework for aerial robotics. Jose Luis Sanchez-Lopez, Ram\u00f3n A Su\u00e1rez Fern\u00e1ndez, Hriday Bavle, Carlos Sampedro, Martin Molina, Jesus Pestana, Pascual Campoy, International Conference on Unmanned Aircraft Systems. Jose Luis Sanchez-Lopez, Ram\u00f3n A Su\u00e1rez Fern\u00e1ndez, Hriday Bavle, Carlos Sampedro, Martin Molina, Jesus Pestana, and Pascual Campoy. Aerostack: An architecture and open-source software framework for aerial robotics. In International Conference on Unmanned Aircraft Systems, 2016.\n\nA multi-layered component-based approach for the development of aerial robotic systems: the aerostack framework. Jose Luis Sanchez-Lopez, Martin Molina, Hriday Bavle, Carlos Sampedro, Ram\u00f3n A Su\u00e1rez, Pascual Fern\u00e1ndez, Campoy, Journal of Intelligent & Robotic Systems. 88Jose Luis Sanchez-Lopez, Martin Molina, Hriday Bavle, Carlos Sampe- dro, Ram\u00f3n A Su\u00e1rez Fern\u00e1ndez, and Pascual Campoy. A multi-layered component-based approach for the development of aerial robotic sys- tems: the aerostack framework. Journal of Intelligent & Robotic Systems, 88, 2017.\n\nDji wants you to develop software for their drones. Popular Science. Dji wants you to develop software for their drones. https://www.popsci.com/, 2015.\n\nIn-situ ai: Towards autonomous and incremental deep learning for iot systems. M Song, K Zhong, J Zhang, Y Hu, D Liu, W Zhang, J Wang, T Li, In High Performance Computer Architecture. M. Song, K. Zhong, J. Zhang, Y. Hu, D. Liu, W. Zhang, J. Wang, and T. Li. In-situ ai: Towards autonomous and incremental deep learning for iot systems. In High Performance Computer Architecture, 2018.\n\nFuture of unmanned aviation. P Kimon, George J Valavanis, Vachtsevanos, Handbook of unmanned aerial vehicles. SpringerKimon P Valavanis and George J Vachtsevanos. Future of unmanned aviation. In Handbook of unmanned aerial vehicles. Springer, 2015.\n\nFarmbeats: An iot platform for data-driven agriculture. Deepak Vasisht, Zerina Kapetanovic, Jongho Won, Ranveer Chandra, Anish Kapoor, Sudipta Sinha, Madhusudhan Sudarshan, Sean Str\u00e3tman, NSDI. Deepak Vasisht, Zerina Kapetanovic, Jongho Won,Ranveer Chandra, Anish Kapoor, Sudipta Sinha, Madhusudhan Sudarshan, and Sean Str\u00e3tman. Farmbeats: An iot platform for data-driven agriculture. In NSDI, 2017.\n\nBandwidth-efficient live video analytics for drones via edge computing. J Wang, Feng, S Chen, George, ACM Symposium on Edge Computing. J Wang, Z Feng, Z Chen, S George, and et al. Bandwidth-efficient live video analytics for drones via edge computing. In ACM Symposium on Edge Computing, 2018.\n\nLavea: Latency-aware video analytics on edge computing platform. S Yi, Q Hao, Q Zhang, W Zhang, Shi, ACM Symposium on Edge Computing. S Yi, Z Hao, Q Zhang, Q Zhang, W Shi, and et al. Lavea: Latency-aware video analytics on edge computing platform. In ACM Symposium on Edge Computing, 2017.\n\nLive video analytics at scale with approximation and delay-tolerance. Haoyu Zhang, Ganesh Ananthanarayanan, Peter Bodik, Matthai Philipose, Paramvir Bahl, Michael J Freedman, NSDI. Haoyu Zhang, Ganesh Ananthanarayanan, Peter Bodik, Matthai Phili- pose, Paramvir Bahl, and Michael J Freedman. Live video analytics at scale with approximation and delay-tolerance. In NSDI, 2017.\n", "annotations": {"author": "[{\"end\":154,\"start\":79},{\"end\":230,\"start\":155},{\"end\":310,\"start\":231},{\"end\":383,\"start\":311},{\"end\":455,\"start\":384},{\"end\":531,\"start\":456},{\"end\":607,\"start\":532},{\"end\":687,\"start\":608},{\"end\":760,\"start\":688},{\"end\":832,\"start\":761}]", "publisher": null, "author_last_name": "[{\"end\":94,\"start\":88},{\"end\":170,\"start\":166},{\"end\":250,\"start\":243},{\"end\":323,\"start\":316},{\"end\":395,\"start\":390},{\"end\":471,\"start\":465},{\"end\":547,\"start\":543},{\"end\":627,\"start\":620},{\"end\":700,\"start\":693},{\"end\":772,\"start\":767}]", "author_first_name": "[{\"end\":85,\"start\":79},{\"end\":87,\"start\":86},{\"end\":161,\"start\":155},{\"end\":165,\"start\":162},{\"end\":242,\"start\":231},{\"end\":315,\"start\":311},{\"end\":389,\"start\":384},{\"end\":462,\"start\":456},{\"end\":464,\"start\":463},{\"end\":538,\"start\":532},{\"end\":542,\"start\":539},{\"end\":619,\"start\":608},{\"end\":692,\"start\":688},{\"end\":766,\"start\":761}]", "author_affiliation": "[{\"end\":153,\"start\":96},{\"end\":229,\"start\":172},{\"end\":309,\"start\":252},{\"end\":382,\"start\":325},{\"end\":454,\"start\":397},{\"end\":530,\"start\":473},{\"end\":606,\"start\":549},{\"end\":686,\"start\":629},{\"end\":759,\"start\":702},{\"end\":831,\"start\":774}]", "title": "[{\"end\":60,\"start\":1},{\"end\":892,\"start\":833}]", "venue": "[{\"end\":952,\"start\":894}]", "abstract": "[{\"end\":2905,\"start\":1198}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3313,\"start\":3310},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3316,\"start\":3313},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3319,\"start\":3316},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":3322,\"start\":3319},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":3325,\"start\":3322},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":3730,\"start\":3726},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":3733,\"start\":3730},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":3914,\"start\":3910},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":3986,\"start\":3982},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":3989,\"start\":3986},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":3992,\"start\":3989},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4303,\"start\":4299},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4306,\"start\":4303},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":4309,\"start\":4306},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4312,\"start\":4309},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":4316,\"start\":4312},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":4320,\"start\":4316},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":4324,\"start\":4320},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4805,\"start\":4802},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":4808,\"start\":4805},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":4811,\"start\":4808},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":4814,\"start\":4811},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":4817,\"start\":4814},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":4954,\"start\":4950},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7009,\"start\":7005},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7063,\"start\":7060},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":7128,\"start\":7125},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7194,\"start\":7191},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":7378,\"start\":7374},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":7381,\"start\":7378},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":7814,\"start\":7810},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7832,\"start\":7828},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":7835,\"start\":7832},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":9411,\"start\":9407},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11297,\"start\":11294},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":12690,\"start\":12686},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":12936,\"start\":12933},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":12939,\"start\":12936},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":12942,\"start\":12939},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":13101,\"start\":13098},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":13596,\"start\":13592},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":14100,\"start\":14096},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":14544,\"start\":14541},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":14644,\"start\":14640},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14647,\"start\":14644},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":14650,\"start\":14647},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":14653,\"start\":14650},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":14957,\"start\":14953},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":15043,\"start\":15039},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":16725,\"start\":16721},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":16728,\"start\":16725},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":16731,\"start\":16728},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":16746,\"start\":16742},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":16749,\"start\":16746},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":16936,\"start\":16932},{\"end\":19041,\"start\":19031},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":20018,\"start\":20014},{\"end\":20564,\"start\":20554},{\"end\":22917,\"start\":22907},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23100,\"start\":23098},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":24747,\"start\":24746},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":25252,\"start\":25249},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":25254,\"start\":25252},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":25685,\"start\":25682},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26784,\"start\":26781},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":29386,\"start\":29383},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":29389,\"start\":29386},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":29392,\"start\":29389},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":30504,\"start\":30500},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":31877,\"start\":31873},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":34648,\"start\":34644},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":34651,\"start\":34648},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":34654,\"start\":34651},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":35666,\"start\":35662},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":36280,\"start\":36276},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":38008,\"start\":38005},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":38011,\"start\":38008},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":38536,\"start\":38533},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":38539,\"start\":38536},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41475,\"start\":41471},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":42582,\"start\":42578},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":46168,\"start\":46166},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":46453,\"start\":46449},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":46456,\"start\":46453},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":48890,\"start\":48888},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":50200,\"start\":50196},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":51291,\"start\":51288},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":51339,\"start\":51335},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":52226,\"start\":52222},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":52512,\"start\":52508},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":52741,\"start\":52737},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":53011,\"start\":53007},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":53105,\"start\":53101},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":53242,\"start\":53238},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":53245,\"start\":53242}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":54309,\"start\":54245},{\"attributes\":{\"id\":\"fig_1\"},\"end\":54524,\"start\":54310},{\"attributes\":{\"id\":\"fig_2\"},\"end\":54673,\"start\":54525},{\"attributes\":{\"id\":\"fig_3\"},\"end\":55251,\"start\":54674},{\"attributes\":{\"id\":\"fig_4\"},\"end\":55771,\"start\":55252},{\"attributes\":{\"id\":\"fig_5\"},\"end\":56191,\"start\":55772},{\"attributes\":{\"id\":\"fig_6\"},\"end\":56368,\"start\":56192},{\"attributes\":{\"id\":\"fig_7\"},\"end\":56460,\"start\":56369},{\"attributes\":{\"id\":\"fig_8\"},\"end\":56511,\"start\":56461},{\"attributes\":{\"id\":\"fig_9\"},\"end\":56747,\"start\":56512},{\"attributes\":{\"id\":\"fig_10\"},\"end\":57083,\"start\":56748},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":58332,\"start\":57084},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":58388,\"start\":58333},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":58610,\"start\":58389},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":58984,\"start\":58611}]", "paragraph": "[{\"end\":3422,\"start\":2921},{\"end\":3993,\"start\":3424},{\"end\":4496,\"start\":3995},{\"end\":4724,\"start\":4498},{\"end\":5629,\"start\":4726},{\"end\":7010,\"start\":5631},{\"end\":7542,\"start\":7012},{\"end\":8108,\"start\":7544},{\"end\":9277,\"start\":8110},{\"end\":10555,\"start\":9279},{\"end\":11100,\"start\":10557},{\"end\":12170,\"start\":11130},{\"end\":13725,\"start\":12172},{\"end\":16034,\"start\":13727},{\"end\":17143,\"start\":16080},{\"end\":17719,\"start\":17145},{\"end\":18703,\"start\":17890},{\"end\":19323,\"start\":18732},{\"end\":19833,\"start\":19408},{\"end\":21084,\"start\":19835},{\"end\":21327,\"start\":21086},{\"end\":21695,\"start\":21399},{\"end\":22105,\"start\":21718},{\"end\":22918,\"start\":22207},{\"end\":23181,\"start\":23021},{\"end\":24071,\"start\":23253},{\"end\":24903,\"start\":24073},{\"end\":25255,\"start\":24925},{\"end\":25546,\"start\":25257},{\"end\":25890,\"start\":25548},{\"end\":26179,\"start\":25892},{\"end\":26622,\"start\":26181},{\"end\":27227,\"start\":26624},{\"end\":27639,\"start\":27229},{\"end\":27960,\"start\":27641},{\"end\":28594,\"start\":27962},{\"end\":29012,\"start\":28596},{\"end\":29393,\"start\":29014},{\"end\":29858,\"start\":29395},{\"end\":30125,\"start\":29860},{\"end\":30418,\"start\":30127},{\"end\":30610,\"start\":30420},{\"end\":31234,\"start\":30625},{\"end\":31538,\"start\":31255},{\"end\":31816,\"start\":31540},{\"end\":32214,\"start\":31818},{\"end\":32317,\"start\":32216},{\"end\":32540,\"start\":32319},{\"end\":32633,\"start\":32542},{\"end\":32712,\"start\":32635},{\"end\":32759,\"start\":32714},{\"end\":35002,\"start\":32761},{\"end\":35564,\"start\":35004},{\"end\":36308,\"start\":35566},{\"end\":36711,\"start\":36310},{\"end\":37298,\"start\":36713},{\"end\":38726,\"start\":37300},{\"end\":39503,\"start\":38745},{\"end\":39936,\"start\":39505},{\"end\":41317,\"start\":39987},{\"end\":41631,\"start\":41355},{\"end\":42164,\"start\":41633},{\"end\":42398,\"start\":42166},{\"end\":43115,\"start\":42400},{\"end\":44568,\"start\":43117},{\"end\":45311,\"start\":44609},{\"end\":46383,\"start\":45313},{\"end\":46750,\"start\":46385},{\"end\":48263,\"start\":46752},{\"end\":48891,\"start\":48265},{\"end\":49439,\"start\":48930},{\"end\":49490,\"start\":49441},{\"end\":49696,\"start\":49492},{\"end\":50758,\"start\":49737},{\"end\":51421,\"start\":50790},{\"end\":51863,\"start\":51423},{\"end\":52938,\"start\":51880},{\"end\":53246,\"start\":52940},{\"end\":54244,\"start\":53261}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":17889,\"start\":17720},{\"attributes\":{\"id\":\"formula_1\"},\"end\":18731,\"start\":18704},{\"attributes\":{\"id\":\"formula_2\"},\"end\":19407,\"start\":19324},{\"attributes\":{\"id\":\"formula_3\"},\"end\":21358,\"start\":21328},{\"attributes\":{\"id\":\"formula_4\"},\"end\":21398,\"start\":21358},{\"attributes\":{\"id\":\"formula_5\"},\"end\":22186,\"start\":22106},{\"attributes\":{\"id\":\"formula_6\"},\"end\":22998,\"start\":22919},{\"attributes\":{\"id\":\"formula_7\"},\"end\":23252,\"start\":23182}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":24755,\"start\":24748},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":31314,\"start\":31307},{\"end\":38983,\"start\":38976}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2919,\"start\":2907},{\"attributes\":{\"n\":\"2\"},\"end\":11128,\"start\":11103},{\"attributes\":{\"n\":\"3\"},\"end\":16057,\"start\":16037},{\"attributes\":{\"n\":\"3.1\"},\"end\":16078,\"start\":16060},{\"attributes\":{\"n\":\"3.2\"},\"end\":21716,\"start\":21698},{\"attributes\":{\"n\":\"3.3\"},\"end\":22205,\"start\":22188},{\"attributes\":{\"n\":\"3.4\"},\"end\":23019,\"start\":23000},{\"attributes\":{\"n\":\"4\"},\"end\":24923,\"start\":24906},{\"attributes\":{\"n\":\"5\"},\"end\":30623,\"start\":30613},{\"attributes\":{\"n\":\"5.1\"},\"end\":31253,\"start\":31237},{\"attributes\":{\"n\":\"5.2\"},\"end\":38743,\"start\":38729},{\"attributes\":{\"n\":\"6\"},\"end\":39956,\"start\":39939},{\"attributes\":{\"n\":\"6.1\"},\"end\":39985,\"start\":39959},{\"attributes\":{\"n\":\"6.2\"},\"end\":41353,\"start\":41320},{\"attributes\":{\"n\":\"6.3\"},\"end\":44607,\"start\":44571},{\"attributes\":{\"n\":\"6.4\"},\"end\":48928,\"start\":48894},{\"attributes\":{\"n\":\"6.5\"},\"end\":49735,\"start\":49699},{\"attributes\":{\"n\":\"7\"},\"end\":50788,\"start\":50761},{\"attributes\":{\"n\":\"8\"},\"end\":51878,\"start\":51866},{\"attributes\":{\"n\":\"9\"},\"end\":53259,\"start\":53249},{\"end\":54254,\"start\":54246},{\"end\":54319,\"start\":54311},{\"end\":54534,\"start\":54526},{\"end\":55261,\"start\":55253},{\"end\":55776,\"start\":55773},{\"end\":56194,\"start\":56193},{\"end\":56378,\"start\":56370},{\"end\":56470,\"start\":56462},{\"end\":56521,\"start\":56513},{\"end\":56757,\"start\":56749},{\"end\":57088,\"start\":57085},{\"end\":58343,\"start\":58334}]", "table": "[{\"end\":58984,\"start\":58760}]", "figure_caption": "[{\"end\":54309,\"start\":54256},{\"end\":54524,\"start\":54321},{\"end\":54673,\"start\":54536},{\"end\":55251,\"start\":54676},{\"end\":55771,\"start\":55263},{\"end\":56191,\"start\":55778},{\"end\":56368,\"start\":56195},{\"end\":56460,\"start\":56380},{\"end\":56511,\"start\":56472},{\"end\":56747,\"start\":56523},{\"end\":57083,\"start\":56759},{\"end\":58332,\"start\":57090},{\"end\":58388,\"start\":58345},{\"end\":58610,\"start\":58391},{\"end\":58760,\"start\":58613}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11379,\"start\":11371},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11835,\"start\":11827},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13001,\"start\":12993},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13184,\"start\":13176},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13795,\"start\":13787},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":14237,\"start\":14229},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":15632,\"start\":15624},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":17483,\"start\":17475},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":18658,\"start\":18650},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":33624,\"start\":33616},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":35114,\"start\":35106},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":35163,\"start\":35155},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":35420,\"start\":35412},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":35861,\"start\":35845},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":36735,\"start\":36716},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":37892,\"start\":37884},{\"attributes\":{\"ref_id\":\"fig_9\"},\"end\":38286,\"start\":38278},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":40794,\"start\":40786},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":43567,\"start\":43559},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":45547,\"start\":45539},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":46062,\"start\":46054},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":46841,\"start\":46833},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":47904,\"start\":47896},{\"end\":50299,\"start\":50291}]", "bib_author_first_name": "[{\"end\":59057,\"start\":59056},{\"end\":59245,\"start\":59237},{\"end\":59262,\"start\":59256},{\"end\":59277,\"start\":59271},{\"end\":59294,\"start\":59285},{\"end\":59310,\"start\":59302},{\"end\":59325,\"start\":59318},{\"end\":59339,\"start\":59332},{\"end\":59350,\"start\":59347},{\"end\":59364,\"start\":59360},{\"end\":59680,\"start\":59673},{\"end\":59694,\"start\":59688},{\"end\":59708,\"start\":59702},{\"end\":59722,\"start\":59717},{\"end\":59737,\"start\":59732},{\"end\":59754,\"start\":59747},{\"end\":59772,\"start\":59765},{\"end\":59787,\"start\":59781},{\"end\":60080,\"start\":60074},{\"end\":60100,\"start\":60095},{\"end\":60116,\"start\":60107},{\"end\":60133,\"start\":60127},{\"end\":60149,\"start\":60139},{\"end\":60162,\"start\":60157},{\"end\":60417,\"start\":60411},{\"end\":60430,\"start\":60426},{\"end\":60451,\"start\":60440},{\"end\":60465,\"start\":60461},{\"end\":60777,\"start\":60771},{\"end\":60797,\"start\":60786},{\"end\":60812,\"start\":60807},{\"end\":60821,\"start\":60820},{\"end\":60823,\"start\":60822},{\"end\":60838,\"start\":60832},{\"end\":61067,\"start\":61066},{\"end\":61393,\"start\":61386},{\"end\":61396,\"start\":61394},{\"end\":61412,\"start\":61405},{\"end\":61414,\"start\":61413},{\"end\":61692,\"start\":61689},{\"end\":61864,\"start\":61863},{\"end\":62235,\"start\":62227},{\"end\":62252,\"start\":62246},{\"end\":62271,\"start\":62262},{\"end\":62286,\"start\":62281},{\"end\":62302,\"start\":62297},{\"end\":62318,\"start\":62312},{\"end\":62685,\"start\":62678},{\"end\":62700,\"start\":62694},{\"end\":62713,\"start\":62707},{\"end\":63060,\"start\":63059},{\"end\":63068,\"start\":63067},{\"end\":63074,\"start\":63073},{\"end\":63082,\"start\":63081},{\"end\":63093,\"start\":63092},{\"end\":63095,\"start\":63094},{\"end\":63384,\"start\":63383},{\"end\":63400,\"start\":63399},{\"end\":63403,\"start\":63401},{\"end\":63413,\"start\":63412},{\"end\":63766,\"start\":63765},{\"end\":63776,\"start\":63775},{\"end\":63788,\"start\":63787},{\"end\":64170,\"start\":64167},{\"end\":64184,\"start\":64177},{\"end\":64200,\"start\":64196},{\"end\":64217,\"start\":64211},{\"end\":64229,\"start\":64226},{\"end\":64246,\"start\":64240},{\"end\":64263,\"start\":64258},{\"end\":64277,\"start\":64272},{\"end\":64681,\"start\":64675},{\"end\":64693,\"start\":64692},{\"end\":64708,\"start\":64703},{\"end\":64726,\"start\":64721},{\"end\":64740,\"start\":64734},{\"end\":64750,\"start\":64745},{\"end\":64771,\"start\":64770},{\"end\":64786,\"start\":64780},{\"end\":64807,\"start\":64799},{\"end\":64822,\"start\":64815},{\"end\":65508,\"start\":65507},{\"end\":65520,\"start\":65519},{\"end\":65810,\"start\":65803},{\"end\":65823,\"start\":65817},{\"end\":65840,\"start\":65834},{\"end\":65858,\"start\":65851},{\"end\":65875,\"start\":65869},{\"end\":65892,\"start\":65884},{\"end\":66165,\"start\":66158},{\"end\":66177,\"start\":66172},{\"end\":66192,\"start\":66188},{\"end\":66208,\"start\":66203},{\"end\":66222,\"start\":66216},{\"end\":66240,\"start\":66236},{\"end\":66259,\"start\":66252},{\"end\":66277,\"start\":66269},{\"end\":66290,\"start\":66284},{\"end\":66304,\"start\":66298},{\"end\":66769,\"start\":66763},{\"end\":66789,\"start\":66778},{\"end\":66808,\"start\":66799},{\"end\":66823,\"start\":66817},{\"end\":67109,\"start\":67103},{\"end\":67129,\"start\":67118},{\"end\":67148,\"start\":67139},{\"end\":67163,\"start\":67157},{\"end\":67666,\"start\":67662},{\"end\":67679,\"start\":67675},{\"end\":67694,\"start\":67688},{\"end\":67711,\"start\":67705},{\"end\":67731,\"start\":67726},{\"end\":68024,\"start\":68022},{\"end\":68037,\"start\":68031},{\"end\":68295,\"start\":68287},{\"end\":68312,\"start\":68306},{\"end\":68325,\"start\":68321},{\"end\":68593,\"start\":68590},{\"end\":68759,\"start\":68754},{\"end\":68786,\"start\":68776},{\"end\":68798,\"start\":68794},{\"end\":68812,\"start\":68811},{\"end\":68824,\"start\":68817},{\"end\":68837,\"start\":68832},{\"end\":69093,\"start\":69087},{\"end\":69107,\"start\":69102},{\"end\":69120,\"start\":69115},{\"end\":69364,\"start\":69356},{\"end\":69638,\"start\":69632},{\"end\":69651,\"start\":69646},{\"end\":69669,\"start\":69663},{\"end\":69679,\"start\":69676},{\"end\":69683,\"start\":69680},{\"end\":69698,\"start\":69689},{\"end\":69716,\"start\":69712},{\"end\":70015,\"start\":70014},{\"end\":70034,\"start\":70033},{\"end\":70274,\"start\":70265},{\"end\":70294,\"start\":70283},{\"end\":70329,\"start\":70323},{\"end\":70344,\"start\":70339},{\"end\":70656,\"start\":70649},{\"end\":70676,\"start\":70669},{\"end\":70688,\"start\":70682},{\"end\":70713,\"start\":70707},{\"end\":70732,\"start\":70726},{\"end\":71032,\"start\":71028},{\"end\":71037,\"start\":71033},{\"end\":71067,\"start\":71053},{\"end\":71085,\"start\":71079},{\"end\":71099,\"start\":71093},{\"end\":71116,\"start\":71110},{\"end\":71130,\"start\":71125},{\"end\":71147,\"start\":71140},{\"end\":71608,\"start\":71604},{\"end\":71613,\"start\":71609},{\"end\":71635,\"start\":71629},{\"end\":71650,\"start\":71644},{\"end\":71664,\"start\":71658},{\"end\":71698,\"start\":71691},{\"end\":72281,\"start\":72280},{\"end\":72289,\"start\":72288},{\"end\":72298,\"start\":72297},{\"end\":72307,\"start\":72306},{\"end\":72313,\"start\":72312},{\"end\":72320,\"start\":72319},{\"end\":72329,\"start\":72328},{\"end\":72337,\"start\":72336},{\"end\":72617,\"start\":72616},{\"end\":72631,\"start\":72625},{\"end\":72633,\"start\":72632},{\"end\":72899,\"start\":72893},{\"end\":72915,\"start\":72909},{\"end\":72935,\"start\":72929},{\"end\":72948,\"start\":72941},{\"end\":72963,\"start\":72958},{\"end\":72979,\"start\":72972},{\"end\":72998,\"start\":72987},{\"end\":73014,\"start\":73010},{\"end\":73311,\"start\":73310},{\"end\":73325,\"start\":73324},{\"end\":73599,\"start\":73598},{\"end\":73605,\"start\":73604},{\"end\":73612,\"start\":73611},{\"end\":73621,\"start\":73620},{\"end\":73899,\"start\":73894},{\"end\":73913,\"start\":73907},{\"end\":73937,\"start\":73932},{\"end\":73952,\"start\":73945},{\"end\":73972,\"start\":73964},{\"end\":73988,\"start\":73979}]", "bib_author_last_name": "[{\"end\":59066,\"start\":59058},{\"end\":59254,\"start\":59246},{\"end\":59269,\"start\":59263},{\"end\":59283,\"start\":59278},{\"end\":59300,\"start\":59295},{\"end\":59316,\"start\":59311},{\"end\":59330,\"start\":59326},{\"end\":59345,\"start\":59340},{\"end\":59358,\"start\":59351},{\"end\":59371,\"start\":59365},{\"end\":59686,\"start\":59681},{\"end\":59700,\"start\":59695},{\"end\":59715,\"start\":59709},{\"end\":59730,\"start\":59723},{\"end\":59745,\"start\":59738},{\"end\":59763,\"start\":59755},{\"end\":59779,\"start\":59773},{\"end\":59795,\"start\":59788},{\"end\":59801,\"start\":59797},{\"end\":60093,\"start\":60081},{\"end\":60105,\"start\":60101},{\"end\":60125,\"start\":60117},{\"end\":60137,\"start\":60134},{\"end\":60155,\"start\":60150},{\"end\":60168,\"start\":60163},{\"end\":60424,\"start\":60418},{\"end\":60438,\"start\":60431},{\"end\":60459,\"start\":60452},{\"end\":60472,\"start\":60466},{\"end\":60784,\"start\":60778},{\"end\":60805,\"start\":60798},{\"end\":60818,\"start\":60813},{\"end\":60830,\"start\":60824},{\"end\":60843,\"start\":60839},{\"end\":60850,\"start\":60845},{\"end\":61076,\"start\":61068},{\"end\":61403,\"start\":61397},{\"end\":61423,\"start\":61415},{\"end\":61600,\"start\":61597},{\"end\":61698,\"start\":61693},{\"end\":61705,\"start\":61700},{\"end\":61861,\"start\":61853},{\"end\":61874,\"start\":61865},{\"end\":61882,\"start\":61876},{\"end\":62244,\"start\":62236},{\"end\":62260,\"start\":62253},{\"end\":62279,\"start\":62272},{\"end\":62295,\"start\":62287},{\"end\":62310,\"start\":62303},{\"end\":62329,\"start\":62319},{\"end\":62692,\"start\":62686},{\"end\":62705,\"start\":62701},{\"end\":62721,\"start\":62714},{\"end\":63065,\"start\":63061},{\"end\":63071,\"start\":63069},{\"end\":63079,\"start\":63075},{\"end\":63090,\"start\":63083},{\"end\":63101,\"start\":63096},{\"end\":63397,\"start\":63385},{\"end\":63410,\"start\":63404},{\"end\":63427,\"start\":63414},{\"end\":63773,\"start\":63767},{\"end\":63785,\"start\":63777},{\"end\":63793,\"start\":63789},{\"end\":63798,\"start\":63795},{\"end\":64175,\"start\":64171},{\"end\":64194,\"start\":64185},{\"end\":64209,\"start\":64201},{\"end\":64224,\"start\":64218},{\"end\":64238,\"start\":64230},{\"end\":64256,\"start\":64247},{\"end\":64270,\"start\":64264},{\"end\":64286,\"start\":64278},{\"end\":64690,\"start\":64682},{\"end\":64701,\"start\":64694},{\"end\":64719,\"start\":64709},{\"end\":64732,\"start\":64727},{\"end\":64743,\"start\":64741},{\"end\":64759,\"start\":64751},{\"end\":64768,\"start\":64761},{\"end\":64778,\"start\":64772},{\"end\":64797,\"start\":64787},{\"end\":64813,\"start\":64808},{\"end\":64831,\"start\":64823},{\"end\":64837,\"start\":64833},{\"end\":65229,\"start\":65222},{\"end\":65247,\"start\":65231},{\"end\":65517,\"start\":65509},{\"end\":65523,\"start\":65521},{\"end\":65532,\"start\":65525},{\"end\":65815,\"start\":65811},{\"end\":65832,\"start\":65824},{\"end\":65849,\"start\":65841},{\"end\":65867,\"start\":65859},{\"end\":65882,\"start\":65876},{\"end\":65899,\"start\":65893},{\"end\":66170,\"start\":66166},{\"end\":66186,\"start\":66178},{\"end\":66201,\"start\":66193},{\"end\":66214,\"start\":66209},{\"end\":66234,\"start\":66223},{\"end\":66250,\"start\":66241},{\"end\":66267,\"start\":66260},{\"end\":66282,\"start\":66278},{\"end\":66296,\"start\":66291},{\"end\":66310,\"start\":66305},{\"end\":66776,\"start\":66770},{\"end\":66797,\"start\":66790},{\"end\":66815,\"start\":66809},{\"end\":66830,\"start\":66824},{\"end\":67116,\"start\":67110},{\"end\":67137,\"start\":67130},{\"end\":67155,\"start\":67149},{\"end\":67170,\"start\":67164},{\"end\":67673,\"start\":67667},{\"end\":67686,\"start\":67680},{\"end\":67703,\"start\":67695},{\"end\":67724,\"start\":67712},{\"end\":67739,\"start\":67732},{\"end\":68029,\"start\":68025},{\"end\":68041,\"start\":68038},{\"end\":68047,\"start\":68043},{\"end\":68304,\"start\":68296},{\"end\":68319,\"start\":68313},{\"end\":68332,\"start\":68326},{\"end\":68602,\"start\":68594},{\"end\":68774,\"start\":68760},{\"end\":68792,\"start\":68787},{\"end\":68802,\"start\":68799},{\"end\":68809,\"start\":68804},{\"end\":68815,\"start\":68813},{\"end\":68830,\"start\":68825},{\"end\":68842,\"start\":68838},{\"end\":68848,\"start\":68844},{\"end\":69100,\"start\":69094},{\"end\":69113,\"start\":69108},{\"end\":69126,\"start\":69121},{\"end\":69371,\"start\":69365},{\"end\":69644,\"start\":69639},{\"end\":69661,\"start\":69652},{\"end\":69674,\"start\":69670},{\"end\":69687,\"start\":69684},{\"end\":69710,\"start\":69699},{\"end\":69726,\"start\":69717},{\"end\":70022,\"start\":70016},{\"end\":70031,\"start\":70024},{\"end\":70039,\"start\":70035},{\"end\":70046,\"start\":70041},{\"end\":70281,\"start\":70275},{\"end\":70321,\"start\":70295},{\"end\":70337,\"start\":70330},{\"end\":70350,\"start\":70345},{\"end\":70356,\"start\":70352},{\"end\":70667,\"start\":70657},{\"end\":70680,\"start\":70677},{\"end\":70705,\"start\":70689},{\"end\":70724,\"start\":70714},{\"end\":70742,\"start\":70733},{\"end\":71051,\"start\":71038},{\"end\":71077,\"start\":71068},{\"end\":71091,\"start\":71086},{\"end\":71108,\"start\":71100},{\"end\":71123,\"start\":71117},{\"end\":71138,\"start\":71131},{\"end\":71154,\"start\":71148},{\"end\":71627,\"start\":71614},{\"end\":71642,\"start\":71636},{\"end\":71656,\"start\":71651},{\"end\":71673,\"start\":71665},{\"end\":71689,\"start\":71675},{\"end\":71708,\"start\":71699},{\"end\":71716,\"start\":71710},{\"end\":72286,\"start\":72282},{\"end\":72295,\"start\":72290},{\"end\":72304,\"start\":72299},{\"end\":72310,\"start\":72308},{\"end\":72317,\"start\":72314},{\"end\":72326,\"start\":72321},{\"end\":72334,\"start\":72330},{\"end\":72340,\"start\":72338},{\"end\":72623,\"start\":72618},{\"end\":72643,\"start\":72634},{\"end\":72657,\"start\":72645},{\"end\":72907,\"start\":72900},{\"end\":72927,\"start\":72916},{\"end\":72939,\"start\":72936},{\"end\":72956,\"start\":72949},{\"end\":72970,\"start\":72964},{\"end\":72985,\"start\":72980},{\"end\":73008,\"start\":72999},{\"end\":73023,\"start\":73015},{\"end\":73316,\"start\":73312},{\"end\":73322,\"start\":73318},{\"end\":73330,\"start\":73326},{\"end\":73338,\"start\":73332},{\"end\":73602,\"start\":73600},{\"end\":73609,\"start\":73606},{\"end\":73618,\"start\":73613},{\"end\":73627,\"start\":73622},{\"end\":73632,\"start\":73629},{\"end\":73905,\"start\":73900},{\"end\":73930,\"start\":73914},{\"end\":73943,\"start\":73938},{\"end\":73962,\"start\":73953},{\"end\":73977,\"start\":73973},{\"end\":73997,\"start\":73989}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":59178,\"start\":58986},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":2820310},\"end\":59613,\"start\":59180},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":206473358},\"end\":60027,\"start\":59615},{\"attributes\":{\"id\":\"b3\"},\"end\":60335,\"start\":60029},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":202561225},\"end\":60767,\"start\":60337},{\"attributes\":{\"id\":\"b5\"},\"end\":61000,\"start\":60769},{\"attributes\":{\"id\":\"b6\"},\"end\":61190,\"start\":61002},{\"attributes\":{\"id\":\"b7\"},\"end\":61339,\"start\":61192},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":19531174},\"end\":61551,\"start\":61341},{\"attributes\":{\"id\":\"b9\"},\"end\":61685,\"start\":61553},{\"attributes\":{\"id\":\"b10\"},\"end\":61762,\"start\":61687},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":2386109},\"end\":62128,\"start\":61764},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":14134675},\"end\":62605,\"start\":62130},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":6724907},\"end\":63009,\"start\":62607},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":21519962},\"end\":63259,\"start\":63011},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":6405697},\"end\":63644,\"start\":63261},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":9349673},\"end\":64034,\"start\":63646},{\"attributes\":{\"id\":\"b17\"},\"end\":64551,\"start\":64036},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":13627618},\"end\":65154,\"start\":64553},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":52906454},\"end\":65429,\"start\":65156},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":1021539},\"end\":65760,\"start\":65431},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":206473388},\"end\":66085,\"start\":65762},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":13792468},\"end\":66655,\"start\":66087},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":11801544},\"end\":67027,\"start\":66657},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":19289530},\"end\":67541,\"start\":67029},{\"attributes\":{\"id\":\"b25\"},\"end\":67956,\"start\":67543},{\"attributes\":{\"doi\":\"arXiv:1511.04668\",\"id\":\"b26\"},\"end\":68210,\"start\":67958},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":11932844},\"end\":68574,\"start\":68212},{\"attributes\":{\"id\":\"b28\"},\"end\":68668,\"start\":68576},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":3987346},\"end\":69057,\"start\":68670},{\"attributes\":{\"id\":\"b30\"},\"end\":69296,\"start\":69059},{\"attributes\":{\"id\":\"b31\"},\"end\":69538,\"start\":69298},{\"attributes\":{\"id\":\"b32\"},\"end\":69974,\"start\":69540},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":4954322},\"end\":70171,\"start\":69976},{\"attributes\":{\"id\":\"b34\"},\"end\":70552,\"start\":70173},{\"attributes\":{\"id\":\"b35\"},\"end\":70943,\"start\":70554},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":9928783},\"end\":71489,\"start\":70945},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":207175146},\"end\":72047,\"start\":71491},{\"attributes\":{\"id\":\"b38\"},\"end\":72200,\"start\":72049},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":4566428},\"end\":72585,\"start\":72202},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":110432718},\"end\":72835,\"start\":72587},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":8200443},\"end\":73236,\"start\":72837},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":53400888},\"end\":73531,\"start\":73238},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":3343746},\"end\":73822,\"start\":73533},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":11894138},\"end\":74200,\"start\":73824}]", "bib_title": "[{\"end\":59235,\"start\":59180},{\"end\":59671,\"start\":59615},{\"end\":60409,\"start\":60337},{\"end\":61384,\"start\":61341},{\"end\":61851,\"start\":61764},{\"end\":62225,\"start\":62130},{\"end\":62676,\"start\":62607},{\"end\":63057,\"start\":63011},{\"end\":63381,\"start\":63261},{\"end\":63763,\"start\":63646},{\"end\":64673,\"start\":64553},{\"end\":65220,\"start\":65156},{\"end\":65505,\"start\":65431},{\"end\":65801,\"start\":65762},{\"end\":66156,\"start\":66087},{\"end\":66761,\"start\":66657},{\"end\":67101,\"start\":67029},{\"end\":68285,\"start\":68212},{\"end\":68752,\"start\":68670},{\"end\":69085,\"start\":69059},{\"end\":70012,\"start\":69976},{\"end\":71026,\"start\":70945},{\"end\":71602,\"start\":71491},{\"end\":72278,\"start\":72202},{\"end\":72614,\"start\":72587},{\"end\":72891,\"start\":72837},{\"end\":73308,\"start\":73238},{\"end\":73596,\"start\":73533},{\"end\":73892,\"start\":73824}]", "bib_author": "[{\"end\":59068,\"start\":59056},{\"end\":59256,\"start\":59237},{\"end\":59271,\"start\":59256},{\"end\":59285,\"start\":59271},{\"end\":59302,\"start\":59285},{\"end\":59318,\"start\":59302},{\"end\":59332,\"start\":59318},{\"end\":59347,\"start\":59332},{\"end\":59360,\"start\":59347},{\"end\":59373,\"start\":59360},{\"end\":59688,\"start\":59673},{\"end\":59702,\"start\":59688},{\"end\":59717,\"start\":59702},{\"end\":59732,\"start\":59717},{\"end\":59747,\"start\":59732},{\"end\":59765,\"start\":59747},{\"end\":59781,\"start\":59765},{\"end\":59797,\"start\":59781},{\"end\":59803,\"start\":59797},{\"end\":60095,\"start\":60074},{\"end\":60107,\"start\":60095},{\"end\":60127,\"start\":60107},{\"end\":60139,\"start\":60127},{\"end\":60157,\"start\":60139},{\"end\":60170,\"start\":60157},{\"end\":60426,\"start\":60411},{\"end\":60440,\"start\":60426},{\"end\":60461,\"start\":60440},{\"end\":60474,\"start\":60461},{\"end\":60786,\"start\":60771},{\"end\":60807,\"start\":60786},{\"end\":60820,\"start\":60807},{\"end\":60832,\"start\":60820},{\"end\":60845,\"start\":60832},{\"end\":60852,\"start\":60845},{\"end\":61078,\"start\":61066},{\"end\":61405,\"start\":61386},{\"end\":61425,\"start\":61405},{\"end\":61602,\"start\":61597},{\"end\":61700,\"start\":61689},{\"end\":61707,\"start\":61700},{\"end\":61863,\"start\":61853},{\"end\":61876,\"start\":61863},{\"end\":61884,\"start\":61876},{\"end\":62246,\"start\":62227},{\"end\":62262,\"start\":62246},{\"end\":62281,\"start\":62262},{\"end\":62297,\"start\":62281},{\"end\":62312,\"start\":62297},{\"end\":62331,\"start\":62312},{\"end\":62694,\"start\":62678},{\"end\":62707,\"start\":62694},{\"end\":62723,\"start\":62707},{\"end\":63067,\"start\":63059},{\"end\":63073,\"start\":63067},{\"end\":63081,\"start\":63073},{\"end\":63092,\"start\":63081},{\"end\":63103,\"start\":63092},{\"end\":63399,\"start\":63383},{\"end\":63412,\"start\":63399},{\"end\":63429,\"start\":63412},{\"end\":63775,\"start\":63765},{\"end\":63787,\"start\":63775},{\"end\":63795,\"start\":63787},{\"end\":63800,\"start\":63795},{\"end\":64177,\"start\":64167},{\"end\":64196,\"start\":64177},{\"end\":64211,\"start\":64196},{\"end\":64226,\"start\":64211},{\"end\":64240,\"start\":64226},{\"end\":64258,\"start\":64240},{\"end\":64272,\"start\":64258},{\"end\":64288,\"start\":64272},{\"end\":64692,\"start\":64675},{\"end\":64703,\"start\":64692},{\"end\":64721,\"start\":64703},{\"end\":64734,\"start\":64721},{\"end\":64745,\"start\":64734},{\"end\":64761,\"start\":64745},{\"end\":64770,\"start\":64761},{\"end\":64780,\"start\":64770},{\"end\":64799,\"start\":64780},{\"end\":64815,\"start\":64799},{\"end\":64833,\"start\":64815},{\"end\":64839,\"start\":64833},{\"end\":65231,\"start\":65222},{\"end\":65249,\"start\":65231},{\"end\":65519,\"start\":65507},{\"end\":65525,\"start\":65519},{\"end\":65534,\"start\":65525},{\"end\":65817,\"start\":65803},{\"end\":65834,\"start\":65817},{\"end\":65851,\"start\":65834},{\"end\":65869,\"start\":65851},{\"end\":65884,\"start\":65869},{\"end\":65901,\"start\":65884},{\"end\":66172,\"start\":66158},{\"end\":66188,\"start\":66172},{\"end\":66203,\"start\":66188},{\"end\":66216,\"start\":66203},{\"end\":66236,\"start\":66216},{\"end\":66252,\"start\":66236},{\"end\":66269,\"start\":66252},{\"end\":66284,\"start\":66269},{\"end\":66298,\"start\":66284},{\"end\":66312,\"start\":66298},{\"end\":66778,\"start\":66763},{\"end\":66799,\"start\":66778},{\"end\":66817,\"start\":66799},{\"end\":66832,\"start\":66817},{\"end\":67118,\"start\":67103},{\"end\":67139,\"start\":67118},{\"end\":67157,\"start\":67139},{\"end\":67172,\"start\":67157},{\"end\":67675,\"start\":67662},{\"end\":67688,\"start\":67675},{\"end\":67705,\"start\":67688},{\"end\":67726,\"start\":67705},{\"end\":67741,\"start\":67726},{\"end\":68031,\"start\":68022},{\"end\":68043,\"start\":68031},{\"end\":68049,\"start\":68043},{\"end\":68306,\"start\":68287},{\"end\":68321,\"start\":68306},{\"end\":68334,\"start\":68321},{\"end\":68604,\"start\":68590},{\"end\":68776,\"start\":68754},{\"end\":68794,\"start\":68776},{\"end\":68804,\"start\":68794},{\"end\":68811,\"start\":68804},{\"end\":68817,\"start\":68811},{\"end\":68832,\"start\":68817},{\"end\":68844,\"start\":68832},{\"end\":68850,\"start\":68844},{\"end\":69102,\"start\":69087},{\"end\":69115,\"start\":69102},{\"end\":69128,\"start\":69115},{\"end\":69373,\"start\":69356},{\"end\":69646,\"start\":69632},{\"end\":69663,\"start\":69646},{\"end\":69676,\"start\":69663},{\"end\":69689,\"start\":69676},{\"end\":69712,\"start\":69689},{\"end\":69728,\"start\":69712},{\"end\":70024,\"start\":70014},{\"end\":70033,\"start\":70024},{\"end\":70041,\"start\":70033},{\"end\":70048,\"start\":70041},{\"end\":70283,\"start\":70265},{\"end\":70323,\"start\":70283},{\"end\":70339,\"start\":70323},{\"end\":70352,\"start\":70339},{\"end\":70358,\"start\":70352},{\"end\":70669,\"start\":70649},{\"end\":70682,\"start\":70669},{\"end\":70707,\"start\":70682},{\"end\":70726,\"start\":70707},{\"end\":70744,\"start\":70726},{\"end\":71053,\"start\":71028},{\"end\":71079,\"start\":71053},{\"end\":71093,\"start\":71079},{\"end\":71110,\"start\":71093},{\"end\":71125,\"start\":71110},{\"end\":71140,\"start\":71125},{\"end\":71156,\"start\":71140},{\"end\":71629,\"start\":71604},{\"end\":71644,\"start\":71629},{\"end\":71658,\"start\":71644},{\"end\":71675,\"start\":71658},{\"end\":71691,\"start\":71675},{\"end\":71710,\"start\":71691},{\"end\":71718,\"start\":71710},{\"end\":72288,\"start\":72280},{\"end\":72297,\"start\":72288},{\"end\":72306,\"start\":72297},{\"end\":72312,\"start\":72306},{\"end\":72319,\"start\":72312},{\"end\":72328,\"start\":72319},{\"end\":72336,\"start\":72328},{\"end\":72342,\"start\":72336},{\"end\":72625,\"start\":72616},{\"end\":72645,\"start\":72625},{\"end\":72659,\"start\":72645},{\"end\":72909,\"start\":72893},{\"end\":72929,\"start\":72909},{\"end\":72941,\"start\":72929},{\"end\":72958,\"start\":72941},{\"end\":72972,\"start\":72958},{\"end\":72987,\"start\":72972},{\"end\":73010,\"start\":72987},{\"end\":73025,\"start\":73010},{\"end\":73318,\"start\":73310},{\"end\":73324,\"start\":73318},{\"end\":73332,\"start\":73324},{\"end\":73340,\"start\":73332},{\"end\":73604,\"start\":73598},{\"end\":73611,\"start\":73604},{\"end\":73620,\"start\":73611},{\"end\":73629,\"start\":73620},{\"end\":73634,\"start\":73629},{\"end\":73907,\"start\":73894},{\"end\":73932,\"start\":73907},{\"end\":73945,\"start\":73932},{\"end\":73964,\"start\":73945},{\"end\":73979,\"start\":73964},{\"end\":73999,\"start\":73979}]", "bib_venue": "[{\"end\":59054,\"start\":58986},{\"end\":59381,\"start\":59373},{\"end\":59813,\"start\":59803},{\"end\":60072,\"start\":60029},{\"end\":60538,\"start\":60474},{\"end\":61064,\"start\":61002},{\"end\":61229,\"start\":61192},{\"end\":61431,\"start\":61425},{\"end\":61595,\"start\":61553},{\"end\":61933,\"start\":61884},{\"end\":62356,\"start\":62331},{\"end\":62786,\"start\":62723},{\"end\":63113,\"start\":63103},{\"end\":63443,\"start\":63429},{\"end\":63831,\"start\":63800},{\"end\":64165,\"start\":64036},{\"end\":64845,\"start\":64839},{\"end\":65280,\"start\":65249},{\"end\":65583,\"start\":65534},{\"end\":65911,\"start\":65901},{\"end\":66362,\"start\":66312},{\"end\":66836,\"start\":66832},{\"end\":67248,\"start\":67172},{\"end\":67660,\"start\":67543},{\"end\":68020,\"start\":67958},{\"end\":68384,\"start\":68334},{\"end\":68588,\"start\":68576},{\"end\":68856,\"start\":68850},{\"end\":69165,\"start\":69128},{\"end\":69354,\"start\":69298},{\"end\":69630,\"start\":69540},{\"end\":70059,\"start\":70048},{\"end\":70263,\"start\":70173},{\"end\":70647,\"start\":70554},{\"end\":71209,\"start\":71156},{\"end\":71758,\"start\":71718},{\"end\":72099,\"start\":72049},{\"end\":72383,\"start\":72342},{\"end\":72695,\"start\":72659},{\"end\":73029,\"start\":73025},{\"end\":73371,\"start\":73340},{\"end\":73665,\"start\":73634},{\"end\":74003,\"start\":73999}]"}}}, "year": 2023, "month": 12, "day": 17}