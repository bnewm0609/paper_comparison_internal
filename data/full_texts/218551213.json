{"id": 218551213, "updated": "2023-10-11 03:09:52.818", "metadata": {"title": "PhraseCut: Language-based Image Segmentation in the Wild", "authors": "[{\"first\":\"Chenyun\",\"last\":\"Wu\",\"middle\":[]},{\"first\":\"Zhe\",\"last\":\"Lin\",\"middle\":[]},{\"first\":\"Scott\",\"last\":\"Cohen\",\"middle\":[]},{\"first\":\"Trung\",\"last\":\"Bui\",\"middle\":[]},{\"first\":\"Subhransu\",\"last\":\"Maji\",\"middle\":[]}]", "venue": "2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)", "journal": "2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)", "publication_date": {"year": 2020, "month": 8, "day": 3}, "abstract": "We consider the problem of segmenting image regions given a natural language phrase, and study it on a novel dataset of 77,262 images and 345,486 phrase-region pairs. Our dataset is collected on top of the Visual Genome dataset and uses the existing annotations to generate a challenging set of referring phrases for which the corresponding regions are manually annotated. Phrases in our dataset correspond to multiple regions and describe a large number of object and stuff categories as well as their attributes such as color, shape, parts, and relationships with other entities in the image. Our experiments show that the scale and diversity of concepts in our dataset poses significant challenges to the existing state-of-the-art. We systematically handle the long-tail nature of these concepts and present a modular approach to combine category, attribute, and relationship cues that outperforms existing approaches.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2008.01187", "mag": "3034764937", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/cvpr/WuLCBM20", "doi": "10.1109/cvpr42600.2020.01023"}}, "content": {"source": {"pdf_hash": "097796dc5258b8c300613a0c8e800c72ba10b34d", "pdf_src": "IEEE", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/2008.01187", "status": "GREEN"}}, "grobid": {"id": "b8bd017e0a541b3f3daa89e431122cf82de100e3", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/097796dc5258b8c300613a0c8e800c72ba10b34d.txt", "contents": "\nPhraseCut: Language-based Image Segmentation in the Wild\n\n\nChenyun Wu chenyun@cs.umass.edu \nUniversity of Massachusetts Amherst\n\n\nZhe Lin zlin@adobe.com \nAdobe Research\n\n\nScott Cohen scohen@adobe.com \nAdobe Research\n\n\nTrung Bui bui@adobe.com \nAdobe Research\n\n\nSubhransu Maji smaji@cs.umass.edu \nUniversity of Massachusetts Amherst\n\n\nPhraseCut: Language-based Image Segmentation in the Wild\n10.1109/CVPR42600.2020.01023\nWe consider the problem of segmenting image regions given a natural language phrase, and study it on a novel dataset of 77,262 images and 345,486 phrase-region pairs. Our dataset is collected on top of the Visual Genome dataset and uses the existing annotations to generate a challenging set of referring phrases for which the corresponding regions are manually annotated. Phrases in our dataset correspond to multiple regions and describe a large number of object and stuff categories as well as their attributes such as color, shape, parts, and relationships with other entities in the image. Our experiments show that the scale and diversity of concepts in our dataset poses significant challenges to the existing state-of-the-art. We systematically handle the long-tail nature of these concepts and present a modular approach to combine category, attribute, and relationship cues that outperforms existing approaches.\n\nIntroduction\n\nModeling the interplay of language and vision is important for tasks such as visual question answering, automatic image editing, human-robot interaction, and more broadly towards the goal of general Artificial Intelligence. Existing efforts on grounding language descriptions to images have achieved promising results on datasets such as Flickr30Entities [30] and Google Referring Expressions [26]. These datasets, however, lack the scale and diversity of concepts that appear in real-world applications.\n\nTo bridge this gap we present the VGPHRASECUT dataset and an associated task of grounding natural language phrases to image regions called PhraseCut (Figure 1 and 2). Our dataset leverages the annotations in the Visual Genome (VG) dataset [18] to generate a large set of referring phrases for each image. For each phrase, we annotate the regions and instance-level bounding boxes that correspond to the phrase. Our dataset contains 77,262 images and 345,486 phrase-region pairs, with some examples shown in Figure 2. VGPHRASECUT contains a significantly longer tail of concepts and has a unified treatment of stuff and object cat-Figure 1. Our task and approach. PhraseCut is the task of segmenting image regions given a natural language phrase. Each phrase is templated into words corresponding to categories, attributes, and relationships. Our approach combines these cues in a modular manner to estimate the final output. egories, unlike prior datasets. The phrases are structured into words that describe categories, attributes, and relationships, providing a systematic way of understanding the performance on individual cues as well as their combinations.\n\nThe PhraseCut task is to segment regions of an image given a templated phrase. As seen in Figure 1, this requires connecting natural language concepts to image regions. Our experiments shows that the task is challenging for stateof-the-art referring approaches such as MattNet [40] and RMI [21]. We find that the overall performance is limited by the performance on rare categories and attributes. To address these challenges we present (i) a modular approach for combining visual cues related to categories, attributes, and relationships, and (ii) a systematic approach to improving the performance on rare categories and attributes by leveraging predictions on more frequent ones. Our category and attribute modules are based on detection models, whose instance-level scores are projected back to the image and further processed using an attention-based model driven by the query phrase. Finally, these are combined with Figure 2. Example annotations from the VGPHRASECUT dataset. Colors (blue, red, green) of the input phrases correspond to words that indicate attributes, categories, and relationships respectively. relationship scores to estimate the segmentation mask (see Figure 1). Objects and stuff categories are processed in a unified manner and the modular design, after the treatment of rare categories, outperforms existing end-to-end models trained on the same dataset.\n\nUsing the dataset we present a systematic analysis of the performance of the models on different subsets of the data. The main conclusions are: (i) object and attribute detection remains poor on rare and small-sized categories, (ii) for the task of image grounding, rare concepts benefit from related but frequent ones (e.g., the concept \"policeman\" could be replaced by \"man\" if there were other distinguishing attributes such as the color of the shirt), and (iii) attributes and relationship models provide the most improvements on rare and small-sized categories. The performance on this dataset is far from perfect and should encourage better models of object detection and semantic segmentation in the computer vision community. The dataset and code is available at: https://people.cs.umass.edu/\u02dcchenyun/ phrasecut.\n\n\nRelated Work\n\nThe language and vision community has put significant effort into relating words and images. Our dataset is closely related to datasets for the visual grounding of referring expressions. We also describe recent approaches for grounding natural language to image regions.\n\nVisual grounding datasets Table 1 shows a comparison of various datasets related to grounding referring expressions to images. The ReferIt dataset [17] was collected on images from ImageCLEF using a ReferItGame between two players. Mao et al. [26] used the same strategy to collect a significantly larger dataset called Google RefExp, on images from the MS COCO dataset [20]. The referring phrases describe objects and refer to boxes inside the image across 80 categories, but the descriptions are long and perhaps re-dundant. Yu et al. [41] instead collect referring expressions using a pragmatic setting where there is limited interaction time between the players to generate and infer the referring object. They collected two versions of the data: RefCOCO that allows location descriptions such as \"man on the left\", and RefCOCO+ which forbids location cues forcing a focus on other visual clues. One drawback is that Google RefExp, RefCOCO and RefCOCO+ are all collected on MS-COCO objects, limiting their referring targets to 80 object categories. Moreover, the target is always one single instance, and there is no treatment of stuff categories.\n\nAnother related dataset is the Flickr30K Entities [30]. Firstly entities are mined and grouped (co-reference resolution) from captions by linking phrases that describe the same entity and then the corresponding bounding-boxes are collected. Sentence context is often needed to ground the entity phrases to image regions. While there are a large number of categories (44,518), most of them have very few examples (average 6.2 examples per category) with a significant bias towards human-related categories (their top 7 categories are \"man\",\"woman\", \"people\", \"shirt\", \"girl\", \"boy\", \"men\"). The dataset also does not contain segmentation masks. nor phrases that describe multiple instances.\n\nOur dataset is based on the Visual Genome (VG) dataset [18]. VG annotates each image as a \"scene graph\" linking descriptions of individual objects, attributes, and their relationships to other objects in the image. The dataset is diverse, capturing various object and stuff categories, as well as attribute and relationship types. However, most descriptions do not distinguish one object from other objects in the scene, i.e., they are not referring expressions. Also, VG object boxes are very noisy. We propose a procedure to mine descriptions within the scene graph that uniquely identifies the objects, thereby generating phrases that are more suitable for the referring task. Finally, we collect segmentation annotations of corresponding regions for these phrases. Approaches for grounding language to images Techniques for localizing regions in an image given a natural language phrase can be broadly categorized into two groups: single-stage segmentation-based techniques and two-stage detection-and-ranking based techniques.\n\nSingle-stage methods [6,15,19,21,27,33,38,39] predict a segmentation mask given a natural language phrase by leveraging techniques used in semantic segmentation. These methods condition a feed-forward segmentation network, such as a fully-convolutional network or U-Net, on the encoding of the natural language (e.g., LSTM over words). The advantage is that these methods can be directly optimized for the segmentation performance and can easily handle stuff categories as well as different numbers of target regions. However, they are not as competitive on smallsized objects. We compare a strong baseline of RMI [21] on our dataset.\n\nMore state-of-the-art methods are based on a two-stage framework of region proposal and ranking. Significant innovations in techniques have been due to the improved techniques for object detection (e.g., Mask R-CNN [11]) as well as language comprehension. Some earlier works [7,16,23,25,26,28,29,31,34,41] adopt a joint image-language embedding model to rank object proposals according to their matching scores to the input expressions. More recent works improve the proposal generation [7,42], introduce attention mechanisms [1,9,39] for accurate grounding, or leverage week supervision from captions [8,36].\n\nThe two-stage framework has also been further extended to modular comprehension inspired by neural module networks [2]. For example, Hu et al. [14] introduce a compositional modular network for better handling of attributes and relationships. Yu et al. [40] propose a modular attention network (MattNet) to factorize the referring task into separate ones for the noun phrase, location, and relationships. Liu et al. [24] improves MattNet by removing easy and dominant words and regions to learn more challenging alignments. Several recent works [3,4,10,22,35,37,43] also apply reasoning on graphs or trees for more complicated phrases. These approaches have several appealing properties such as more detailed modeling of different aspects of language descriptions. However, these techniques have been primarily evaluated on datasets with a closed set of categories, and often with ground-truth instances provided.\n\nSadhu et al. [32] proposes zero-shot grounding to handle phrases with unseen nouns. Our work emphasizes further on the large number of categories, attributes and relationships, providing supervision over these long-tailed concepts and more detailed and straightforward evaluation.\n\n\nThe VGPHRASECUT Dataset\n\nIn this section, we describe how the VGPHRASECUT dataset was collected, the statistics of the final annotations, and the evaluation metrics. Our annotations are based on images and scene-graph annotations from the Visual Genome (VG) dataset. We briefly describe each step in the data-collection pipeline illustrated in Figure 3, deferring to the supplemental material Section 1.1 for more details.\n\nStep 1: Box sampling Each image in VG dataset contains 35 boxes on average, but they are highly redundant. We sample an average of 5 boxes from each image in a stratified manner by avoiding boxes that are highly overlapping or are from a category that already has a high number of selected boxes. We also remove boxes that are less than 2% or greater than 90% of the image size.\n\nStep 2: Phrase generation Each sampled box has several annotations of category names (e.g., \"man\" and \"person\"), attributes (e.g., \"tall\" and \"standing\") and relationships with other entities in the image (e.g., \"next to a tree\" and \"wearing a red shirt\"). We generate one phrase for one box at a time, by adding categories, attributes and relationships that allow discrimination with respect to other VG boxes by the following set of heuristics:\n\n1. We first examine if one of the provided categories of the selected box is unique. If so we add this to the phrase and tack on to it a randomly sampled attribute or relationship description of the box. The category name uniquely identifies the box in this image. 2. If the box is not unique in terms of any of its category names, we look for a unique attribute of the box that distinguishes it from boxes of the same category. If such an attribute exists we combine it with the category name as the generated phrase. 3. If no such an attribute exists, we look for a distinguishing relationship description (a relationship predicate plus a category name for the supporting object). If such a relationship exists we combine it with the category name as the generated phrase. 4. If all of the above fail, we combine all attributes and relationships on the target box and randomly choose a category from the provided list of categories for the box to formulate the phrase. In this case, the generated phrase is more likely to correspond to more than one instance within the image. The attribute and relationship information may be missing if the original box does not have any, but there is always a category name for each box. Phrases generated in this manner tend to be concise but do not always refer to a unique instance in the image.\n\nStep 3: Region annotation We present the images and generated phrases from the previous steps to human annotators on Amazon Mechanical Turk, and ask them to draw polygons around the regions that correspond to provided phrases. Around 10% of phrases are skipped by workers when the phrases are ambiguous.\n\nStep 4: Automatic annotator verification Based on manual inspection over a subset of annotators, we design an automatic mechanism to identify trusted annotators based on the overall agreement of their annotations with the VG boxes. Only annotations from trusted annotators are included in our dataset. 9.27% phrase-region pairs are removed in this step.\n\nStep 5: Automatic instance labeling As a final step we generate instance-level boxes and masks. In most cases, each polygon drawn by the annotators is considered an instance. It is further improved by a set of heuristics to merge multiple polygons into one instance and to split one polygon into several instances leveraging the phrase and VG boxes.\n\n\nDataset statistics\n\nOur final dataset consists of 345,486 phrases across 77,262 images. This roughly covers 70% of the images in Visual Genome. We split the dataset into 310,816 phrases (71,746 images) for training, 20,316 (2,971 images) for validation, and 14,354 (2,545 images) for testing. There is no overlap of COCO trainval images with our test split so that models pre-trained on COCO can be fairly used and evaluated. Figure 4 illustrates several statistics of the dataset. Our dataset contains 1,272 unique category phrases, 593 unique attribute phrases, and 126 relationship phrases with frequency over 20, as seen by the word clouds. Among the distribution of phrases (bottom left bar plot), one can see that 68.2% of the instances can be distinguished by category alone (category+), while 11.8% of phrases require some treatment of attributes to distinguish instances (at-tributes+). Object sizes and their frequency vary widely. While most annotations refer to a single instance, 17.6% of phrases refer to two or more instances. These aspects of the dataset make the PhraseCut task challenging. In Supplementary Section 1.2, we further demonstrate the long-tailed distribution of concepts and how attributes and relationships vary in different categories.\n\n\nEvaluation metrics\n\nThe PhraseCut task is to generate a binary segmentation of the input image given a referring phrase. We assume that the input phrase is parsed into attribute, category, and relationship descriptions. For evaluation we use the following intersection-over-union (IoU) metrics:\n\n\u2022 cumulative IoU: cum-IoU = ( t I t ) / ( t U t ), and\n\u2022 mean IoU: mean-IoU = 1 N t I t /U t .\nHere t indexes over the phrase-region pairs in the evaluation set, I t and U t are the intersection and union area between predicted and ground-truth regions, and N is the size of the evaluation set. Notice that, unlike cum-IoU, mean-IoU averages the performance across all image-region pairs and thus balances the performance on small and large objects.\n\nWe also report the precision when each phrase-region task is considered correct if the IoU is above a threshold. We report results with IoU thresholds at 0.5, 0.7, 0.9 as Pr@0.5, Pr@0.7, Pr@0.9 respectively.\n\nAll these metrics can be computed on different subsets of the data to obtain a better understanding of the strengths and failure modes of the model.\n\n\nA Modular Approach to PhraseCut\n\nWe propose Hierarchical Modular Attention Network (HULANet) for the PhraseCut task, as illustrated in Figure 5. The approach is based on two design principles. First, Figure 4. Statistics of the VGPHRASECUT dataset. Top row: Word clouds of categories (left), attributes (center), and relationship descriptions (right) in the dataset. The size of each phrase is proportional to the square root of its frequency in the dataset. Bottom row: breakdowns of the dataset into different subsets including contents in phrases (first), category frequency (second), size of target region relative to the image size (third), number of target instances per query phrase (fourth), and types of category (last). The leftmost bar chart shows the breakdown of phrases into those that have category annotation (cat) and those that can be distinguished by category information alone (cat+), and similarly for attributes and relationships. Figure 5. Architecture of HULANet. The architecture consists of modules to obtain attribute, category, and relation predictions given a phrase and an image. The attribute and category scores are obtained from Mask-RCNN detections and projected back to the image. The scores across categories and attributes are combined using a module-specific attention model. The relationship module is a convolutional network that takes as input the prediction mask of the related category and outputs a spatial mask given the relationship predicate. The modules are activated based on their presence in the query phrase and combined using an attention mechanism guided by the phrase.\n\nwe design individual modules for category, attribute and relationship sub-phrases. Each module handles the longtail distribution of concepts by learning to aggregate information across concepts using a module-specific attention mechanism. Second, instance-specific predictions are projected onto the image space and combined using an attention mechanism driven by the input phrase. This allows the model to handle stuff and object categories, as well as mul-tiple instances in a unified manner. Details of each module are described next. Backbone encoders We use the Mask-RCNN [11] detector and bi-directional LSTMs [13] as our backbone encoders for images and phrases respectively. The Mask-RCNN (with ResNet101 [12] backbone) is trained to detect instances and predict category scores for the 1,272 categories that have a frequency over 20 on our dataset. Different from instance detection tasks on standard benchmarks, we allow relatively noisy instance detections by setting a low threshold on objectness scores and by allowing at most 100 detections per image to obtain a high recall. For phrase encoding, we train three separate bi-directional LSTMs to generate embeddings for categories, attributes and relationship phrases. They share the same word embeddings initialized from FastText [5] as the input to the LSTM, and have mean pooling applied on the LSTM output of the corresponding words as the encoded output. Category module The category module takes as input the phrase embedding of the category and detected instance boxes (with masks) from Mask-RCNN, and outputs a scoremap of corresponding regions in the image. We first construct the category channels C \u2208 R N \u00d7H\u00d7W by projecting the Mask-RCNN predictions back to the image. Here N = 1272 is the number of categories and H \u00d7 W is set to 1/4\u00d7 the input image size. Concretely, for each instance i detected by Mask R-CNN as category c i with score s i , we project its predicted segmentation mask to image as a binary mask m i,H\u00d7W , and update the category channel score at the corresponding location as C[c i , m i ] := max(s i , C[c i , m i ]). Finally, each category channel is passed though a \"layernorm\" which scales the mean and variance of each channel.\n\nTo compute the attention over the category channels, the phrase embedding e cat is passed through a few linear layers f with sigmoid activation at the end to predict the attention weights over the category channels A = \u03c3(f (e cat )). We calculate the weighted sum of the category channels guided by the attention weights S H\u00d7W = c A c \u00b7 C c , and apply a learned affine transformation plus sigmoid to obtain the category module prediction heat-map P H\u00d7W = \u03c3(a \u00b7 S H\u00d7W + b). This attention scheme enables the category module to leverage predictions from good category detectors to improve performance on more difficult categories. We present other baselines for combining category scores in the ablation studies in Section 5. Attribute module The attribute module is similar to the category module except for an extra attribute classifier. On top of the pooled ResNet instance features from Mask-RCNN, we train a two-layer multi-label attribute classifier. To account for significant label imbalance we weigh the positive instances more when training attribute classifiers with the binary cross-entropy loss. To obtain attribute score channels we take the top 100 detections and project their top 20 predicted attributes back to the image. Identical with the category module, we use the instance masks from the Mask-RCNN, update the corresponding channels with the predicted attribute scores, and finally apply the attention scheme guided by the attribute embedding from the phrase to obtain the final attribute prediction score heat-map. Relationship module Our simple relationship module uses the category module to predict the locations of the supporting object. The down-scaled (32 \u00d7 32) score of the supporting object is concatenated with the embedding of the relationship predicate. This is followed by two dilated convolutional layers with kernel size 7 applied on top, achieving a large receptive field without requiring many parameters. Finally, we apply an affine transformation followed by sigmoid to obtain the relationship prediction scores. The convolutional network can model coarse spatial relationships by learning filters corresponding to each spatial relation. For example, by dilating the mask one can model the relationship \"near\", and by moving the mask above one can model the relationship \"on\". Combining the modules The category, attribute, and relation scores P c , P a , P r obtained from individual modules are each represented as a H \u00d7W image, 1/4 the image size. To this we append channels of quadratic interactions P i \u2022P j for every pair of channels (including i = j), obtained using elementwise product and normalization, and a bias channel of all ones, to obtain a 10-channel scoremap F (3+6+1 channels). Phrase embeddings of category, attribute and relationship are concatenated together and then encoded into 10-dimensional \"attention\" weights w through linear layers with LeakyReLU and DropOut followed by normalization. When there is no attribute or relationship in the input phrase, the corresponding attention weights are set to zero and the attention weights are re-normalized to sum up to one. The overall prediction is the attention-weighted sum of the linear and quadratic feature interactions:\nO = t F t w t .\nOur experiments show a slight improvement of 0.05% on validation mean-IoU with the quadratic features.\n\nTraining details The Mask-RCNN is initialized with weights pre-trained on the MS-COCO dataset [20] and finetuned on our dataset. It is then fixed for all the experiments. The attribute classifier is trained on ground-truth instances and their box features pooled from Mask-RCNN with a binary cross-entropy loss specially weighted according to attribute frequency. These are also fixed during the training of the referring modules. On top of the fixed Mask-RCNN and the attribute classifier, we separately train the individual category and attribute modules. When combining the modules we initialize the weights from individual ones and fine-tune the whole model end-to-end. We apply a pixel-wise binary cross-entropy loss on the prediction score heat-map from each module and also on the final prediction heat-map. To account for the evaluation metric (mean-IoU), we increase the weights on the positive pixels and average the loss over referring phrase-image pairs instead of over pixels. All our models are trained on the training set. For evaluation, we require a binary segmentation mask which is obtained by thresholding on prediction scores. These thresholds are set based on mean-IoU scores on the validation set. In the next section, we report results on the test set. Table 2 shows the overall performance of our model and its ablated versions with two baselines: RMI [21] and Mat-tNet [40]. They yield near state-of-the-art performance on datasets such as RefCOCO [17].\n\n\nResults and Analysis\n\n\nComparison to baselines\n\nRMI is a single-stage visual grounding method. It extracts spatial image features through a convolutional encoder, introduces convolutional multi-modal LSTM for jointly modeling of visual and language clues in the bottleneck, and predicts the segmentation through an upsampling  decoder. We use the RMI model with ResNet101 [12] as the image encoder. We initialized the ResNet with weights pretrained on COCO [20], trained the whole RMI model on our training data of image region and referring phrase pairs following the default setting as in their public repository, and finally evaluated it on our test set. RMI obtains high cum-IoU but low mean-IoU scores because it handles large targets well but fails on small ones (see Table 4 \"small/mid/large\" subsets). cum-IoU is dominated by large targets while our dataset many small targets: 20.2% of our data has the target region smaller than 2% of the image area, while the smallest target in RefCOCO is 2.4% of the image. Figure 6 also shows that RMI predicts empty masks on challenging phrases and small targets.\n\nMattNet focuses on ranking the referred box among candidate boxes. Given a box and a phrase, it calculates the subject, location, and relationship matching scores with three separate modules, and predicts attention weights over the three modules based on the input phrase. Finally, the three scores are combined with weights to produce an overall matching score, and the box with the highest score is picked as the referred box.\n\nWe follow the training and evaluation setup described in their paper. We train the Mask-RCNN detector on our dataset, and also train MattNet to pick the target instance box among ground-truth instance boxes in the image. Note that MattNet training relies on complete annotations of object instances in an image, which are used not only as the candidate boxes but also as the context for further reasoning. The objects in our dataset are only sparsely annotated, hence we leverage the Visual Genome boxes instead as context boxes. At test time the top 50 Mask-RCNN detections from all categories are used as input to the MattNet model.\n\nWhile this setup works well on RefCOCO, it is problematic on VGPHRASECUT because detection is more challenging in the presence of thousands of object categories. MattNet is able to achieve mean-IoU = 42.4% when the ground-truth instance boxes are provided in evaluation, but its performance drops to mean-IoU = 20.2% when Mask-RCNN detections are provided instead. If we only input the detections of the referred category to MattNet, mean-IoU improves to 34.7%, approaching the performance of Mask-RCNN self, but it still performs poorly on rare categories.\n\nOur modular approach for computing robust category scores from noisy detections alone (HULANet cat) outperforms both baselines by a significant margin. Example results using various approaches are shown in Figure 6. Heatmaps from submodules and analysis of failure cases are included in Supplemental Section 3. Table 3 shows that the performance is lower for rare categories. Detection of thousands of categories is challenging, but required to support open-vocabulary natural language descriptions. However, natural language is also redundant. In this section we explore if a category can leverage scores from related categories to improve performance, especially when it is rare.\n\n\nAblation studies and analysis\n\nFirst we evaluate Mask-RCNN as a detector, by using the mask of the top-1 detected instance from the referred category as the predicted region. The result is shown as the row \"Mask-RCNN self\" in Table 3. The row below \"Mask-RCNN top\" shows the performance of the model where each category is matched to a single other category based on the best mean-IoU on the training set. For example, a category \"pedestrian\" may be matched to \"person\" if the person detector is more reliable. Supplemental Section 2 shows the full matching between source and target categories. As one can see in Table 3, the performance on the tail categories jumps significantly (10.1% \u2192 23.2% on the 500+ subset.) In general the tail category detectors are poor and rarely used. This also points to a curious phenomenon in referring expression tasks where even though the named category is specific, one can get away with a coarse category detector. For example, if different animal species never appear together in an image, one can get away with a generic animal detector to resolve any animal species.\n\nThis also explains the performance of the category module with the category-level attention mechanism. Compared to the single category picked by the Mask-RCNN top model, the ability of aggregating multiple category scores using the attention model provides further improvements for the tail categories. Although not included here, we find a similar phenomenon with attributes, where a small number of base attributes can support a larger, heavy-tailed distribution over the attribute phrases. It is reassuring that the number of visual concepts to be learned grows sub-linearly with the number of language concepts. However, the problem is far from solved as the performance on tail categories is still significantly lower. Table 4 shows the results on additional subsets of the test data. Some high-level observations are that: (i) Object categories are more difficult than stuff categories. (ii) Small objects are extremely difficult. (iii) Attributes and relationships provide consistent improvements across different subsets. Remarkably, the improvements from attributes and re-lationships are more significant on rare categories and small target regions where the category module is less accurate.\n\n\nConclusion\n\nWe presented a new dataset, VGPHRASECUT, to study the problem of grounding natural language phrases to image regions. By scaling the number of categories, attributes, and relations we found that existing approaches that rely on high-quality object detections show a dramatic reduction in performance. Our proposed HULANet performs significantly better, suggesting that dealing with long-tail object categories via modeling their relationship to other categories, attributes, and spatial relations is a promising direction of research. Another take away is that decoupling representation learning and modeling long-tails might allow us to scale object detectors to rare categories, without requiring significant amount of labelled visual data. Nevertheless, the performance of the proposed approach is still significantly below human performance which should encourage better modeling of language and vision.\n\nFigure 3 .\n3Illustrations of our VGPHRASECUT dataset collection pipeline.Step 1: blue boxes are the sampling result; red boxes are ignored.Step 2: Phrase generation example in the previous image.Step 3: User interface for collecting region masks.Step 4: Example annotations from trusted and excluded annotators.Step 5: Instance label refinement examples. Blue boxes are final instance boxes, and red boxes are corresponding ones from Visual Genome annotations.\n\nFigure 6 .\n6Prediction results on VGPHRASECUT dataset. Rows from top to down are: (1) input image; (2) ground-truth segmentation and instance boxes; (3) MattNet baseline; (4) RMI baseline; (5) HULANet (cat + att + rel). See more results in the supplemental material.\n\n\nDatasetReferIt[17] Google RefExp[26] RefCOCO[41] Flickr30K Entities[30] Visual Genome[18] VGPHRASECUT# images \n19,894 \n26,711 \n19,994 \n31,783 \n108,077 \n77,262 \n# instances \n96,654 \n54,822 \n50,000 \n275,775 \n1,366,673 \n345,486 \n# categories \n-\n80 \n80 \n44,518 \n80,138 \n3103 \nmulti-instance \nNo \nNo \nNo \nNo \nNo \nYes \nsegmentation \nYes \nYes \nYes \nNo \nNo \nYes \nreferring phrase short phrases \nlong descriptions \nshort phrases \nentities in captions \nregion descriptions \ntemplated phrases \n\nTable 1. Comparison of visual grounding datasets. The proposed VGPHRASECUT dataset has a significantly higher number of categories \nthan RefCOCO and Google RefExp, while also containing multiple instances. \n\n\n\nTable 4 .\n4Themean-IoU on VGPHRASECUT test set for addi-\ntional subsets. att/rel: the subset with attributes/relationship an-\nnotations; att+/rel+: the subset which requires attributes or rela-\ntionships to distinguish the target from other instances of the same \ncategory; single/multi/many: subsets that contain different number \nof instances referred by a phrase; small/mid/large: subsets with \ndifferent sizes of the target region. \n\n\nAcknowledgements The project is supported in part by NSF Grants 1749833 and 1617917, and Faculty awards from Adobe. Our experiments were performed on the UMass GPU cluster obtained under the Collaborative Fund managed by the Massachusetts Technology Collaborative.\nMulti-level multimodal common semantic space for image-phrase grounding. Hassan Akbari, Svebor Karaman, Surabhi Bhargava, Brian Chen, Carl Vondrick, Shih-Fu Chang, Computer Vision and Pattern Recognition (CVPR). Hassan Akbari, Svebor Karaman, Surabhi Bhargava, Brian Chen, Carl Vondrick, and Shih-Fu Chang. Multi-level multi- modal common semantic space for image-phrase grounding. In Computer Vision and Pattern Recognition (CVPR), 2019.\n\nNeural module networks. Jacob Andreas, Marcus Rohrbach, Trevor Darrell, Dan Klein, Computer Vision and Pattern Recognition (CVPR). Jacob Andreas, Marcus Rohrbach, Trevor Darrell, and Dan Klein. Neural module networks. In Computer Vision and Pattern Recognition (CVPR), 2016.\n\nGraphGround: Graph-Based Language Grounding. Mohit Bajaj, Lanjun Wang, Leonid Sigal, International Conference on Computer Vision (ICCV). Mohit Bajaj, Lanjun Wang, and Leonid Sigal. GraphGround: Graph-Based Language Grounding. In International Confer- ence on Computer Vision (ICCV), 2019.\n\nGraphGround: Graph-Based Language Grounding. Mohit Bajaj, Lanjun Wang, Leonid Sigal, International Conference on Computer Vision (ICCV). Mohit Bajaj, Lanjun Wang, and Leonid Sigal. GraphGround: Graph-Based Language Grounding. In International Confer- ence on Computer Vision (ICCV), 2019.\n\nEnriching word vectors with subword information. Piotr Bojanowski, Edouard Grave, Armand Joulin, Tomas Mikolov, Transactions of the Association for Computational Linguistics. 5Piotr Bojanowski, Edouard Grave, Armand Joulin, and Tomas Mikolov. Enriching word vectors with subword infor- mation. Transactions of the Association for Computational Linguistics, 5:135-146, 2017.\n\nSee-through-text grouping for referring image segmentation. Ding-Jie Chen, Songhao Jia, Yi-Chen Lo, Hwann-Tzong Chen, Tyng-Luh Liu, International Conference on Computer Vision (ICCV). Ding-Jie Chen, Songhao Jia, Yi-Chen Lo, Hwann-Tzong Chen, and Tyng-Luh Liu. See-through-text grouping for re- ferring image segmentation. In International Conference on Computer Vision (ICCV), 2019.\n\nQuery-guided regression network with context policy for phrase grounding. Kan Chen, Rama Kovvuri, Ram Nevatia, International Conference on Computer Vision (ICCV. Kan Chen, Rama Kovvuri, and Ram Nevatia. Query-guided regression network with context policy for phrase grounding. In International Conference on Computer Vision (ICCV), 2017.\n\nAlign2ground: Weakly supervised phrase grounding guided by image-caption alignment. Samyak Datta, Karan Sikka, Anirban Roy, Karuna Ahuja, Devi Parikh, Ajay Divakaran, International Conference on Computer Vision (ICCV). Samyak Datta, Karan Sikka, Anirban Roy, Karuna Ahuja, Devi Parikh, and Ajay Divakaran. Align2ground: Weakly supervised phrase grounding guided by image-caption align- ment. In International Conference on Computer Vision (ICCV), 2019.\n\nVisual grounding via accumulated attention. Chaorui Deng, Qi Wu, Qingyao Wu, Fuyuan Hu, Fan Lyu, Mingkui Tan, Computer Vision and Pattern Recognition (CVPR). Chaorui Deng, Qi Wu, Qingyao Wu, Fuyuan Hu, Fan Lyu, and Mingkui Tan. Visual grounding via accumulated atten- tion. In Computer Vision and Pattern Recognition (CVPR), 2018.\n\nNeural sequential phrase grounding (seqGROUND). Pelin Dogan, Leonid Sigal, Markus Gross, Computer Vision and Pattern Recognition (CVPR). Pelin Dogan, Leonid Sigal, and Markus Gross. Neural se- quential phrase grounding (seqGROUND). In Computer Vi- sion and Pattern Recognition (CVPR), 2019.\n\nMask R-CNN. Kaiming He, Georgia Gkioxari, Piotr Doll\u00e1r, Ross B Girshick, International Conference on Computer Vision ICCV. Kaiming He, Georgia Gkioxari, Piotr Doll\u00e1r, and Ross B. Girshick. Mask R-CNN. In International Conference on Computer Vision ICCV, 2017.\n\nDeep residual learning for image recognition. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, Conference on Computer Vision and Pattern Recognition (CVPR). Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\n\nLong short-term memory. Sepp Hochreiter, J\u00fcrgen Schmidhuber, Neural computation. 98Sepp Hochreiter and J\u00fcrgen Schmidhuber. Long short-term memory. Neural computation, 9(8):1735-1780, 1997.\n\nModeling relationships in referential expressions with compositional modular networks. Ronghang Hu, Marcus Rohrbach, Jacob Andreas, Trevor Darrell, Kate Saenko, Conference on Computer Vision and Pattern Recognition (CVPR. Ronghang Hu, Marcus Rohrbach, Jacob Andreas, Trevor Darrell, and Kate Saenko. Modeling relationships in ref- erential expressions with compositional modular networks. In Conference on Computer Vision and Pattern Recognition (CVPR), 2017.\n\nSegmentation from natural language expressions. Ronghang Hu, Marcus Rohrbach, Trevor Darrell, European Conference on Computer Vision (ECCV). Ronghang Hu, Marcus Rohrbach, and Trevor Darrell. Seg- mentation from natural language expressions. In European Conference on Computer Vision (ECCV), 2016.\n\nNatural language object retrieval. Ronghang Hu, Huazhe Xu, Marcus Rohrbach, Jiashi Feng, Kate Saenko, Trevor Darrell, Computer Vision and Pattern Recognition (CVPR). Ronghang Hu, Huazhe Xu, Marcus Rohrbach, Jiashi Feng, Kate Saenko, and Trevor Darrell. Natural language object retrieval. Computer Vision and Pattern Recognition (CVPR), 2016.\n\nReferitgame: Referring to objects in photographs of natural scenes. Sahar Kazemzadeh, Vicente Ordonez, Mark Matten, Tamara Berg, Empirical methods in natural language processing (EMNLP). Sahar Kazemzadeh, Vicente Ordonez, Mark Matten, and Tamara Berg. Referitgame: Referring to objects in pho- tographs of natural scenes. In Empirical methods in natural language processing (EMNLP), 2014.\n\nVisual genome: Connecting language and vision using crowdsourced dense image annotations. Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson, Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalantidis, Li-Jia Li, David A Shamma, Michael Bernstein, Li Fei-Fei, Ranjay Krishna, Yuke Zhu, Oliver Groth, Justin Johnson, Kenji Hata, Joshua Kravitz, Stephanie Chen, Yannis Kalan- tidis, Li-Jia Li, David A Shamma, Michael Bernstein, and Li Fei-Fei. Visual genome: Connecting language and vision using crowdsourced dense image annotations. 2016.\n\nReferring image segmentation via recurrent refinement networks. Ruiyu Li, Kai-Can Li, Yi-Chun Kuo, Michelle Shu, Xiaojuan Qi, Xiaoyong Shen, Jiaya Jia, Computer Vision and Pattern Recognition (CVPR). Ruiyu Li, Kai-Can Li, Yi-Chun Kuo, Michelle Shu, Xiaojuan Qi, Xiaoyong Shen, and Jiaya Jia. Referring image segmen- tation via recurrent refinement networks. In Computer Vision and Pattern Recognition (CVPR), 2018.\n\nMicrosoft COCO: Common objects in context. Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, C Lawrence Zitnick, European Conference on Computer Vision (ECCV). Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft COCO: Common objects in context. In European Conference on Computer Vision (ECCV), 2014.\n\nRecurrent multimodal interaction for referring image segmentation. Chenxi Liu, Zhe Lin, Xiaohui Shen, Jimei Yang, Xin Lu, Alan Yuille, International Conference on Computer Vision (ICCV). Chenxi Liu, Zhe Lin, Xiaohui Shen, Jimei Yang, Xin Lu, and Alan Yuille. Recurrent multimodal interaction for referring image segmentation. In International Conference on Com- puter Vision (ICCV), 2017.\n\nLearning to assemble neural module tree networks for visual grounding. Daqing Liu, Hanwang Zhang, Feng Wu, Zheng-Jun Zha, International Conference on Computer Vision (ICCV). Daqing Liu, Hanwang Zhang, Feng Wu, and Zheng-Jun Zha. Learning to assemble neural module tree networks for visual grounding. In International Conference on Computer Vision (ICCV), 2019.\n\nReferring expression generation and comprehension via attributes. Jingyu Liu, Liang Wang, Ming-Hsuan Yang, International Conference on Computer Vision (ICCV. Jingyu Liu, Liang Wang, and Ming-Hsuan Yang. Referring expression generation and comprehension via attributes. In International Conference on Computer Vision (ICCV), 2017.\n\nImproving referring expression grounding with cross-modal attention-guided erasing. Xihui Liu, Zihao Wang, Jing Shao, Xiaogang Wang, Hongsheng Li, Computer Vision and Pattern Recognition (CVPR). Xihui Liu, Zihao Wang, Jing Shao, Xiaogang Wang, and Hongsheng Li. Improving referring expression grounding with cross-modal attention-guided erasing. In Computer Vi- sion and Pattern Recognition (CVPR), 2019.\n\nComprehensionguided referring expressions. Ruotian Luo, Gregory Shakhnarovich, Computer Vision and Pattern Recognition (CVPR. Ruotian Luo and Gregory Shakhnarovich. Comprehension- guided referring expressions. Computer Vision and Pattern Recognition (CVPR), 2017.\n\nGeneration and comprehension of unambiguous object descriptions. Junhua Mao, Jonathan Huang, Alexander Toshev, Oana Camburu, Alan Yuille, Kevin Murphy, Computer Vision and Pattern Recognition (CVPR). Junhua Mao, Jonathan Huang, Alexander Toshev, Oana Camburu, Alan Yuille, and Kevin Murphy. Generation and comprehension of unambiguous object descriptions. In Com- puter Vision and Pattern Recognition (CVPR), 2016.\n\nDynamic multimodal instance segmentation guided by natural language queries. Edgar Margffoy-Tuay, C Juan, Emilio P\u00e9rez, Pablo Botero, Arbel\u00e1ez, European Conference on Computer Vision (ECCV). Edgar Margffoy-Tuay, Juan C P\u00e9rez, Emilio Botero, and Pablo Arbel\u00e1ez. Dynamic multimodal instance segmentation guided by natural language queries. In European Conference on Computer Vision (ECCV), 2018.\n\nModeling context between objects for referring expression understanding. K Varun, Vlad I Nagaraja, Larry S Morariu, Davis, ECCV. Varun K. Nagaraja, Vlad I. Morariu, and Larry S. Davis. Modeling context between objects for referring expression understanding. In ECCV, 2016.\n\nConditional image-text embedding networks. A Bryan, Paige Plummer, Kordas, Shuai Hadi Kiapour, Robinson Zheng, Svetlana Piramuthu, Lazebnik, European Conference on Computer Vision (ECCV). Bryan A Plummer, Paige Kordas, M Hadi Kiapour, Shuai Zheng, Robinson Piramuthu, and Svetlana Lazebnik. Con- ditional image-text embedding networks. In European Con- ference on Computer Vision (ECCV), 2018.\n\nFlickr30k entities: Collecting region-to-phrase correspondences for richer image-to-sentence models. A Bryan, Liwei Plummer, Chris M Wang, Juan C Cervantes, Julia Caicedo, Svetlana Hockenmaier, Lazebnik, International Journal of Computer Vision. 1231Bryan A. Plummer, Liwei Wang, Chris M. Cervantes, Juan C. Caicedo, Julia Hockenmaier, and Svetlana Lazeb- nik. Flickr30k entities: Collecting region-to-phrase corre- spondences for richer image-to-sentence models. Interna- tional Journal of Computer Vision, 123(1):74-93, 2017.\n\nGrounding of textual phrases in images by reconstruction. Anna Rohrbach, Marcus Rohrbach, Ronghang Hu, Trevor Darrell, Bernt Schiele, European Conference on Computer Vision (ECCV). Anna Rohrbach, Marcus Rohrbach, Ronghang Hu, Trevor Darrell, and Bernt Schiele. Grounding of textual phrases in images by reconstruction. In European Conference on Com- puter Vision (ECCV), 2016.\n\nZero-shot grounding of objects from natural language queries. Arka Sadhu, Kan Chen, Ram Nevatia, International Conference on Computer Vision (ICCV). Arka Sadhu, Kan Chen, and Ram Nevatia. Zero-shot ground- ing of objects from natural language queries. In International Conference on Computer Vision (ICCV), 2019.\n\nKey-word-aware network for referring expression image segmentation. Hengcan Shi, Hongliang Li, Fanman Meng, Qingbo Wu, European Conference on Computer Vision (ECCV). Hengcan Shi, Hongliang Li, Fanman Meng, and Qingbo Wu. Key-word-aware network for referring expression image seg- mentation. In European Conference on Computer Vision (ECCV), 2018.\n\nLearning deep structure-preserving image-text embeddings. Liwei Wang, Yin Li, Svetlana Lazebnik, Computer Vision and Pattern Recognition (CVPR). Liwei Wang, Yin Li, and Svetlana Lazebnik. Learning deep structure-preserving image-text embeddings. Computer Vi- sion and Pattern Recognition (CVPR), 2016.\n\nNeighbourhood watch: Referring expression comprehension via language-guided graph attention networks. Peng Wang, Qi Wu, Jiewei Cao, Chunhua Shen, Lianli Gao, Anton Van Den, Hengel, Computer Vision and Pattern Recognition (CVPR). Peng Wang, Qi Wu, Jiewei Cao, Chunhua Shen, Lianli Gao, and Anton van den Hengel. Neighbourhood watch: Refer- ring expression comprehension via language-guided graph attention networks. In Computer Vision and Pattern Recog- nition (CVPR), 2019.\n\nWeaklysupervised visual grounding of phrases with linguistic structures. Fanyi Xiao, Leonid Sigal, Yong Jae Lee, Computer Vision and Pattern Recognition (CVPR. Fanyi Xiao, Leonid Sigal, and Yong Jae Lee. Weakly- supervised visual grounding of phrases with linguistic struc- tures. In Computer Vision and Pattern Recognition (CVPR), 2017.\n\nDynamic graph attention for referring expression comprehension. Sibei Yang, Guanbin Li, Yizhou Yu, International Conference on Computer Vision (ICCV). Sibei Yang, Guanbin Li, and Yizhou Yu. Dynamic graph attention for referring expression comprehension. In Inter- national Conference on Computer Vision (ICCV), 2019.\n\nA fast and accurate onestage approach to visual grounding. Zhengyuan Yang, Boqing Gong, Liwei Wang, Wenbing Huang, Dong Yu, Jiebo Luo, International Conference on Computer Vision (ICCV). Zhengyuan Yang, Boqing Gong, Liwei Wang, Wenbing Huang, Dong Yu, and Jiebo Luo. A fast and accurate one- stage approach to visual grounding. In International Confer- ence on Computer Vision (ICCV), 2019.\n\nCross-modal self-attention network for referring image segmentation. Linwei Ye, Mrigank Rochan, Zhi Liu, Yang Wang, Computer Vision and Pattern Recognition (CVPR). Linwei Ye, Mrigank Rochan, Zhi Liu, and Yang Wang. Cross-modal self-attention network for referring image seg- mentation. In Computer Vision and Pattern Recognition (CVPR), 2019.\n\nMattNet: Modular attention network for referring expression comprehension. Licheng Yu, Zhe Lin, Xiaohui Shen, Jimei Yang, Xin Lu, Mohit Bansal, Tamara L Berg, Computer Vision and Pattern Recognition (CVPR). Licheng Yu, Zhe Lin, Xiaohui Shen, Jimei Yang, Xin Lu, Mohit Bansal, and Tamara L Berg. MattNet: Modular at- tention network for referring expression comprehension. In Computer Vision and Pattern Recognition (CVPR), 2018.\n\nModeling context in referring expressions. Licheng Yu, Patrick Poirson, Shan Yang, Alexander C Berg, Tamara L Berg, European Conference on Computer Vision. Licheng Yu, Patrick Poirson, Shan Yang, Alexander C Berg, and Tamara L Berg. Modeling context in referring expres- sions. In European Conference on Computer Vision, 2016.\n\nRethinking diversified and discriminative proposal generation for visual grounding. Zhou Yu, Jun Yu, Chenchao Xiang, Zhou Zhao, Qi Tian, Dacheng Tao, abs/1805.03508CoRRZhou Yu, Jun Yu, Chenchao Xiang, Zhou Zhao, Qi Tian, and Dacheng Tao. Rethinking diversified and discrimi- native proposal generation for visual grounding. CoRR, abs/1805.03508, 2018.\n\nGrounding referring expressions in images by variational context. Hanwang Zhang, Yulei Niu, Shih-Fu Chang, Computer Vision and Pattern Recognition (CVPR). Hanwang Zhang, Yulei Niu, and Shih-Fu Chang. Grounding referring expressions in images by variational context. In Computer Vision and Pattern Recognition (CVPR), 2018.\n", "annotations": {"author": "[{\"end\":130,\"start\":60},{\"end\":171,\"start\":131},{\"end\":218,\"start\":172},{\"end\":260,\"start\":219},{\"end\":333,\"start\":261}]", "publisher": null, "author_last_name": "[{\"end\":70,\"start\":68},{\"end\":138,\"start\":135},{\"end\":183,\"start\":178},{\"end\":228,\"start\":225},{\"end\":275,\"start\":271}]", "author_first_name": "[{\"end\":67,\"start\":60},{\"end\":134,\"start\":131},{\"end\":177,\"start\":172},{\"end\":224,\"start\":219},{\"end\":270,\"start\":261}]", "author_affiliation": "[{\"end\":129,\"start\":93},{\"end\":170,\"start\":155},{\"end\":217,\"start\":202},{\"end\":259,\"start\":244},{\"end\":332,\"start\":296}]", "title": "[{\"end\":57,\"start\":1},{\"end\":390,\"start\":334}]", "venue": null, "abstract": "[{\"end\":1341,\"start\":420}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b29\"},\"end\":1716,\"start\":1712},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":1754,\"start\":1750},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":2106,\"start\":2102},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":3307,\"start\":3303},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":3320,\"start\":3316},{\"end\":3957,\"start\":3949},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":5672,\"start\":5668},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5768,\"start\":5764},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5895,\"start\":5891},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":6062,\"start\":6058},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":6728,\"start\":6724},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7424,\"start\":7420},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":8422,\"start\":8419},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":8425,\"start\":8422},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8428,\"start\":8425},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8431,\"start\":8428},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":8434,\"start\":8431},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":8437,\"start\":8434},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":8440,\"start\":8437},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":8443,\"start\":8440},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9016,\"start\":9012},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":9253,\"start\":9249},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":9312,\"start\":9309},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9315,\"start\":9312},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":9318,\"start\":9315},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9321,\"start\":9318},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9324,\"start\":9321},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9327,\"start\":9324},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":9330,\"start\":9327},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":9333,\"start\":9330},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":9336,\"start\":9333},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":9339,\"start\":9336},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":9524,\"start\":9521},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":9527,\"start\":9524},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9563,\"start\":9560},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":9565,\"start\":9563},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":9568,\"start\":9565},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":9639,\"start\":9636},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":9642,\"start\":9639},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9763,\"start\":9760},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9792,\"start\":9788},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":9902,\"start\":9898},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10065,\"start\":10061},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":10193,\"start\":10190},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":10195,\"start\":10193},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10198,\"start\":10195},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":10201,\"start\":10198},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":10204,\"start\":10201},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":10207,\"start\":10204},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":10210,\"start\":10207},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":10577,\"start\":10573},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":19029,\"start\":19025},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":19068,\"start\":19064},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":19165,\"start\":19161},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":19745,\"start\":19742},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":24132,\"start\":24128},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25415,\"start\":25411},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":25433,\"start\":25429},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":25512,\"start\":25508},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":25892,\"start\":25888},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25977,\"start\":25973},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":32923,\"start\":32919},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":32941,\"start\":32937},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":32953,\"start\":32949},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":32976,\"start\":32972},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":32994,\"start\":32990}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32634,\"start\":32173},{\"attributes\":{\"id\":\"fig_1\"},\"end\":32902,\"start\":32635},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":33597,\"start\":32903},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":34037,\"start\":33598}]", "paragraph": "[{\"end\":1861,\"start\":1357},{\"end\":3024,\"start\":1863},{\"end\":4410,\"start\":3026},{\"end\":5232,\"start\":4412},{\"end\":5519,\"start\":5249},{\"end\":6672,\"start\":5521},{\"end\":7363,\"start\":6674},{\"end\":8396,\"start\":7365},{\"end\":9032,\"start\":8398},{\"end\":9643,\"start\":9034},{\"end\":10558,\"start\":9645},{\"end\":10840,\"start\":10560},{\"end\":11265,\"start\":10868},{\"end\":11645,\"start\":11267},{\"end\":12093,\"start\":11647},{\"end\":13431,\"start\":12095},{\"end\":13736,\"start\":13433},{\"end\":14091,\"start\":13738},{\"end\":14442,\"start\":14093},{\"end\":15713,\"start\":14465},{\"end\":16010,\"start\":15736},{\"end\":16066,\"start\":16012},{\"end\":16461,\"start\":16107},{\"end\":16670,\"start\":16463},{\"end\":16820,\"start\":16672},{\"end\":18446,\"start\":16856},{\"end\":20674,\"start\":18448},{\"end\":23913,\"start\":20676},{\"end\":24032,\"start\":23930},{\"end\":25513,\"start\":24034},{\"end\":26627,\"start\":25564},{\"end\":27057,\"start\":26629},{\"end\":27693,\"start\":27059},{\"end\":28252,\"start\":27695},{\"end\":28935,\"start\":28254},{\"end\":30046,\"start\":28969},{\"end\":31250,\"start\":30048},{\"end\":32172,\"start\":31265}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":16106,\"start\":16067},{\"attributes\":{\"id\":\"formula_1\"},\"end\":23929,\"start\":23914}]", "table_ref": "[{\"end\":5554,\"start\":5547},{\"end\":25318,\"start\":25311},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":26297,\"start\":26290},{\"end\":28572,\"start\":28565},{\"end\":29171,\"start\":29164},{\"end\":29559,\"start\":29552},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":30779,\"start\":30772}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1355,\"start\":1343},{\"attributes\":{\"n\":\"2.\"},\"end\":5247,\"start\":5235},{\"attributes\":{\"n\":\"3.\"},\"end\":10866,\"start\":10843},{\"attributes\":{\"n\":\"3.1.\"},\"end\":14463,\"start\":14445},{\"attributes\":{\"n\":\"3.2.\"},\"end\":15734,\"start\":15716},{\"attributes\":{\"n\":\"4.\"},\"end\":16854,\"start\":16823},{\"attributes\":{\"n\":\"5.\"},\"end\":25536,\"start\":25516},{\"attributes\":{\"n\":\"5.1.\"},\"end\":25562,\"start\":25539},{\"attributes\":{\"n\":\"5.2.\"},\"end\":28967,\"start\":28938},{\"attributes\":{\"n\":\"6.\"},\"end\":31263,\"start\":31253},{\"end\":32184,\"start\":32174},{\"end\":32646,\"start\":32636},{\"end\":33608,\"start\":33599}]", "table": "[{\"end\":33597,\"start\":33006},{\"end\":34037,\"start\":33613}]", "figure_caption": "[{\"end\":32634,\"start\":32186},{\"end\":32902,\"start\":32648},{\"end\":33006,\"start\":32905},{\"end\":33613,\"start\":33610}]", "figure_ref": "[{\"end\":2021,\"start\":2012},{\"end\":2378,\"start\":2370},{\"end\":3124,\"start\":3116},{\"end\":4213,\"start\":4205},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11195,\"start\":11187},{\"end\":14879,\"start\":14871},{\"end\":16966,\"start\":16958},{\"end\":17031,\"start\":17023},{\"end\":17784,\"start\":17776},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":26544,\"start\":26536},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":28468,\"start\":28460}]", "bib_author_first_name": "[{\"end\":34382,\"start\":34376},{\"end\":34397,\"start\":34391},{\"end\":34414,\"start\":34407},{\"end\":34430,\"start\":34425},{\"end\":34441,\"start\":34437},{\"end\":34459,\"start\":34452},{\"end\":34772,\"start\":34767},{\"end\":34788,\"start\":34782},{\"end\":34805,\"start\":34799},{\"end\":34818,\"start\":34815},{\"end\":35069,\"start\":35064},{\"end\":35083,\"start\":35077},{\"end\":35096,\"start\":35090},{\"end\":35359,\"start\":35354},{\"end\":35373,\"start\":35367},{\"end\":35386,\"start\":35380},{\"end\":35653,\"start\":35648},{\"end\":35673,\"start\":35666},{\"end\":35687,\"start\":35681},{\"end\":35701,\"start\":35696},{\"end\":36042,\"start\":36034},{\"end\":36056,\"start\":36049},{\"end\":36069,\"start\":36062},{\"end\":36085,\"start\":36074},{\"end\":36100,\"start\":36092},{\"end\":36435,\"start\":36432},{\"end\":36446,\"start\":36442},{\"end\":36459,\"start\":36456},{\"end\":36787,\"start\":36781},{\"end\":36800,\"start\":36795},{\"end\":36815,\"start\":36808},{\"end\":36827,\"start\":36821},{\"end\":36839,\"start\":36835},{\"end\":36852,\"start\":36848},{\"end\":37202,\"start\":37195},{\"end\":37211,\"start\":37209},{\"end\":37223,\"start\":37216},{\"end\":37234,\"start\":37228},{\"end\":37242,\"start\":37239},{\"end\":37255,\"start\":37248},{\"end\":37536,\"start\":37531},{\"end\":37550,\"start\":37544},{\"end\":37564,\"start\":37558},{\"end\":37794,\"start\":37787},{\"end\":37806,\"start\":37799},{\"end\":37822,\"start\":37817},{\"end\":37835,\"start\":37831},{\"end\":37837,\"start\":37836},{\"end\":38089,\"start\":38082},{\"end\":38101,\"start\":38094},{\"end\":38117,\"start\":38109},{\"end\":38127,\"start\":38123},{\"end\":38396,\"start\":38392},{\"end\":38415,\"start\":38409},{\"end\":38653,\"start\":38645},{\"end\":38664,\"start\":38658},{\"end\":38680,\"start\":38675},{\"end\":38696,\"start\":38690},{\"end\":38710,\"start\":38706},{\"end\":39075,\"start\":39067},{\"end\":39086,\"start\":39080},{\"end\":39103,\"start\":39097},{\"end\":39360,\"start\":39352},{\"end\":39371,\"start\":39365},{\"end\":39382,\"start\":39376},{\"end\":39399,\"start\":39393},{\"end\":39410,\"start\":39406},{\"end\":39425,\"start\":39419},{\"end\":39733,\"start\":39728},{\"end\":39753,\"start\":39746},{\"end\":39767,\"start\":39763},{\"end\":39782,\"start\":39776},{\"end\":40146,\"start\":40140},{\"end\":40160,\"start\":40156},{\"end\":40172,\"start\":40166},{\"end\":40186,\"start\":40180},{\"end\":40201,\"start\":40196},{\"end\":40214,\"start\":40208},{\"end\":40233,\"start\":40224},{\"end\":40246,\"start\":40240},{\"end\":40265,\"start\":40259},{\"end\":40275,\"start\":40270},{\"end\":40277,\"start\":40276},{\"end\":40293,\"start\":40286},{\"end\":40307,\"start\":40305},{\"end\":40666,\"start\":40661},{\"end\":40678,\"start\":40671},{\"end\":40690,\"start\":40683},{\"end\":40704,\"start\":40696},{\"end\":40718,\"start\":40710},{\"end\":40731,\"start\":40723},{\"end\":40743,\"start\":40738},{\"end\":41064,\"start\":41056},{\"end\":41077,\"start\":41070},{\"end\":41090,\"start\":41085},{\"end\":41106,\"start\":41101},{\"end\":41119,\"start\":41113},{\"end\":41132,\"start\":41128},{\"end\":41147,\"start\":41142},{\"end\":41166,\"start\":41156},{\"end\":41520,\"start\":41514},{\"end\":41529,\"start\":41526},{\"end\":41542,\"start\":41535},{\"end\":41554,\"start\":41549},{\"end\":41564,\"start\":41561},{\"end\":41573,\"start\":41569},{\"end\":41914,\"start\":41908},{\"end\":41927,\"start\":41920},{\"end\":41939,\"start\":41935},{\"end\":41953,\"start\":41944},{\"end\":42271,\"start\":42265},{\"end\":42282,\"start\":42277},{\"end\":42299,\"start\":42289},{\"end\":42619,\"start\":42614},{\"end\":42630,\"start\":42625},{\"end\":42641,\"start\":42637},{\"end\":42656,\"start\":42648},{\"end\":42672,\"start\":42663},{\"end\":42986,\"start\":42979},{\"end\":42999,\"start\":42992},{\"end\":43272,\"start\":43266},{\"end\":43286,\"start\":43278},{\"end\":43303,\"start\":43294},{\"end\":43316,\"start\":43312},{\"end\":43330,\"start\":43326},{\"end\":43344,\"start\":43339},{\"end\":43699,\"start\":43694},{\"end\":43716,\"start\":43715},{\"end\":43729,\"start\":43723},{\"end\":43742,\"start\":43737},{\"end\":44086,\"start\":44085},{\"end\":44098,\"start\":44094},{\"end\":44100,\"start\":44099},{\"end\":44116,\"start\":44111},{\"end\":44118,\"start\":44117},{\"end\":44330,\"start\":44329},{\"end\":44343,\"start\":44338},{\"end\":44366,\"start\":44361},{\"end\":44389,\"start\":44381},{\"end\":44405,\"start\":44397},{\"end\":44783,\"start\":44782},{\"end\":44796,\"start\":44791},{\"end\":44811,\"start\":44806},{\"end\":44813,\"start\":44812},{\"end\":44824,\"start\":44820},{\"end\":44826,\"start\":44825},{\"end\":44843,\"start\":44838},{\"end\":44861,\"start\":44853},{\"end\":45272,\"start\":45268},{\"end\":45289,\"start\":45283},{\"end\":45308,\"start\":45300},{\"end\":45319,\"start\":45313},{\"end\":45334,\"start\":45329},{\"end\":45654,\"start\":45650},{\"end\":45665,\"start\":45662},{\"end\":45675,\"start\":45672},{\"end\":45977,\"start\":45970},{\"end\":45992,\"start\":45983},{\"end\":46003,\"start\":45997},{\"end\":46016,\"start\":46010},{\"end\":46313,\"start\":46308},{\"end\":46323,\"start\":46320},{\"end\":46336,\"start\":46328},{\"end\":46659,\"start\":46655},{\"end\":46668,\"start\":46666},{\"end\":46679,\"start\":46673},{\"end\":46692,\"start\":46685},{\"end\":46705,\"start\":46699},{\"end\":46716,\"start\":46711},{\"end\":47106,\"start\":47101},{\"end\":47119,\"start\":47113},{\"end\":47131,\"start\":47127},{\"end\":47135,\"start\":47132},{\"end\":47436,\"start\":47431},{\"end\":47450,\"start\":47443},{\"end\":47461,\"start\":47455},{\"end\":47753,\"start\":47744},{\"end\":47766,\"start\":47760},{\"end\":47778,\"start\":47773},{\"end\":47792,\"start\":47785},{\"end\":47804,\"start\":47800},{\"end\":47814,\"start\":47809},{\"end\":48152,\"start\":48146},{\"end\":48164,\"start\":48157},{\"end\":48176,\"start\":48173},{\"end\":48186,\"start\":48182},{\"end\":48503,\"start\":48496},{\"end\":48511,\"start\":48508},{\"end\":48524,\"start\":48517},{\"end\":48536,\"start\":48531},{\"end\":48546,\"start\":48543},{\"end\":48556,\"start\":48551},{\"end\":48571,\"start\":48565},{\"end\":48573,\"start\":48572},{\"end\":48901,\"start\":48894},{\"end\":48913,\"start\":48906},{\"end\":48927,\"start\":48923},{\"end\":48943,\"start\":48934},{\"end\":48945,\"start\":48944},{\"end\":48958,\"start\":48952},{\"end\":48960,\"start\":48959},{\"end\":49267,\"start\":49263},{\"end\":49275,\"start\":49272},{\"end\":49288,\"start\":49280},{\"end\":49300,\"start\":49296},{\"end\":49309,\"start\":49307},{\"end\":49323,\"start\":49316},{\"end\":49605,\"start\":49598},{\"end\":49618,\"start\":49613},{\"end\":49631,\"start\":49624}]", "bib_author_last_name": "[{\"end\":34389,\"start\":34383},{\"end\":34405,\"start\":34398},{\"end\":34423,\"start\":34415},{\"end\":34435,\"start\":34431},{\"end\":34450,\"start\":34442},{\"end\":34465,\"start\":34460},{\"end\":34780,\"start\":34773},{\"end\":34797,\"start\":34789},{\"end\":34813,\"start\":34806},{\"end\":34824,\"start\":34819},{\"end\":35075,\"start\":35070},{\"end\":35088,\"start\":35084},{\"end\":35102,\"start\":35097},{\"end\":35365,\"start\":35360},{\"end\":35378,\"start\":35374},{\"end\":35392,\"start\":35387},{\"end\":35664,\"start\":35654},{\"end\":35679,\"start\":35674},{\"end\":35694,\"start\":35688},{\"end\":35709,\"start\":35702},{\"end\":36047,\"start\":36043},{\"end\":36060,\"start\":36057},{\"end\":36072,\"start\":36070},{\"end\":36090,\"start\":36086},{\"end\":36104,\"start\":36101},{\"end\":36440,\"start\":36436},{\"end\":36454,\"start\":36447},{\"end\":36467,\"start\":36460},{\"end\":36793,\"start\":36788},{\"end\":36806,\"start\":36801},{\"end\":36819,\"start\":36816},{\"end\":36833,\"start\":36828},{\"end\":36846,\"start\":36840},{\"end\":36862,\"start\":36853},{\"end\":37207,\"start\":37203},{\"end\":37214,\"start\":37212},{\"end\":37226,\"start\":37224},{\"end\":37237,\"start\":37235},{\"end\":37246,\"start\":37243},{\"end\":37259,\"start\":37256},{\"end\":37542,\"start\":37537},{\"end\":37556,\"start\":37551},{\"end\":37570,\"start\":37565},{\"end\":37797,\"start\":37795},{\"end\":37815,\"start\":37807},{\"end\":37829,\"start\":37823},{\"end\":37846,\"start\":37838},{\"end\":38092,\"start\":38090},{\"end\":38107,\"start\":38102},{\"end\":38121,\"start\":38118},{\"end\":38131,\"start\":38128},{\"end\":38407,\"start\":38397},{\"end\":38427,\"start\":38416},{\"end\":38656,\"start\":38654},{\"end\":38673,\"start\":38665},{\"end\":38688,\"start\":38681},{\"end\":38704,\"start\":38697},{\"end\":38717,\"start\":38711},{\"end\":39078,\"start\":39076},{\"end\":39095,\"start\":39087},{\"end\":39111,\"start\":39104},{\"end\":39363,\"start\":39361},{\"end\":39374,\"start\":39372},{\"end\":39391,\"start\":39383},{\"end\":39404,\"start\":39400},{\"end\":39417,\"start\":39411},{\"end\":39433,\"start\":39426},{\"end\":39744,\"start\":39734},{\"end\":39761,\"start\":39754},{\"end\":39774,\"start\":39768},{\"end\":39787,\"start\":39783},{\"end\":40154,\"start\":40147},{\"end\":40164,\"start\":40161},{\"end\":40178,\"start\":40173},{\"end\":40194,\"start\":40187},{\"end\":40206,\"start\":40202},{\"end\":40222,\"start\":40215},{\"end\":40238,\"start\":40234},{\"end\":40257,\"start\":40247},{\"end\":40268,\"start\":40266},{\"end\":40284,\"start\":40278},{\"end\":40303,\"start\":40294},{\"end\":40315,\"start\":40308},{\"end\":40669,\"start\":40667},{\"end\":40681,\"start\":40679},{\"end\":40694,\"start\":40691},{\"end\":40708,\"start\":40705},{\"end\":40721,\"start\":40719},{\"end\":40736,\"start\":40732},{\"end\":40747,\"start\":40744},{\"end\":41068,\"start\":41065},{\"end\":41083,\"start\":41078},{\"end\":41099,\"start\":41091},{\"end\":41111,\"start\":41107},{\"end\":41126,\"start\":41120},{\"end\":41140,\"start\":41133},{\"end\":41154,\"start\":41148},{\"end\":41174,\"start\":41167},{\"end\":41524,\"start\":41521},{\"end\":41533,\"start\":41530},{\"end\":41547,\"start\":41543},{\"end\":41559,\"start\":41555},{\"end\":41567,\"start\":41565},{\"end\":41580,\"start\":41574},{\"end\":41918,\"start\":41915},{\"end\":41933,\"start\":41928},{\"end\":41942,\"start\":41940},{\"end\":41957,\"start\":41954},{\"end\":42275,\"start\":42272},{\"end\":42287,\"start\":42283},{\"end\":42304,\"start\":42300},{\"end\":42623,\"start\":42620},{\"end\":42635,\"start\":42631},{\"end\":42646,\"start\":42642},{\"end\":42661,\"start\":42657},{\"end\":42675,\"start\":42673},{\"end\":42990,\"start\":42987},{\"end\":43013,\"start\":43000},{\"end\":43276,\"start\":43273},{\"end\":43292,\"start\":43287},{\"end\":43310,\"start\":43304},{\"end\":43324,\"start\":43317},{\"end\":43337,\"start\":43331},{\"end\":43351,\"start\":43345},{\"end\":43713,\"start\":43700},{\"end\":43721,\"start\":43717},{\"end\":43735,\"start\":43730},{\"end\":43749,\"start\":43743},{\"end\":43759,\"start\":43751},{\"end\":44092,\"start\":44087},{\"end\":44109,\"start\":44101},{\"end\":44126,\"start\":44119},{\"end\":44133,\"start\":44128},{\"end\":44336,\"start\":44331},{\"end\":44351,\"start\":44344},{\"end\":44359,\"start\":44353},{\"end\":44379,\"start\":44367},{\"end\":44395,\"start\":44390},{\"end\":44415,\"start\":44406},{\"end\":44425,\"start\":44417},{\"end\":44789,\"start\":44784},{\"end\":44804,\"start\":44797},{\"end\":44818,\"start\":44814},{\"end\":44836,\"start\":44827},{\"end\":44851,\"start\":44844},{\"end\":44873,\"start\":44862},{\"end\":44883,\"start\":44875},{\"end\":45281,\"start\":45273},{\"end\":45298,\"start\":45290},{\"end\":45311,\"start\":45309},{\"end\":45327,\"start\":45320},{\"end\":45342,\"start\":45335},{\"end\":45660,\"start\":45655},{\"end\":45670,\"start\":45666},{\"end\":45683,\"start\":45676},{\"end\":45981,\"start\":45978},{\"end\":45995,\"start\":45993},{\"end\":46008,\"start\":46004},{\"end\":46019,\"start\":46017},{\"end\":46318,\"start\":46314},{\"end\":46326,\"start\":46324},{\"end\":46345,\"start\":46337},{\"end\":46664,\"start\":46660},{\"end\":46671,\"start\":46669},{\"end\":46683,\"start\":46680},{\"end\":46697,\"start\":46693},{\"end\":46709,\"start\":46706},{\"end\":46724,\"start\":46717},{\"end\":46732,\"start\":46726},{\"end\":47111,\"start\":47107},{\"end\":47125,\"start\":47120},{\"end\":47139,\"start\":47136},{\"end\":47441,\"start\":47437},{\"end\":47453,\"start\":47451},{\"end\":47464,\"start\":47462},{\"end\":47758,\"start\":47754},{\"end\":47771,\"start\":47767},{\"end\":47783,\"start\":47779},{\"end\":47798,\"start\":47793},{\"end\":47807,\"start\":47805},{\"end\":47818,\"start\":47815},{\"end\":48155,\"start\":48153},{\"end\":48171,\"start\":48165},{\"end\":48180,\"start\":48177},{\"end\":48191,\"start\":48187},{\"end\":48506,\"start\":48504},{\"end\":48515,\"start\":48512},{\"end\":48529,\"start\":48525},{\"end\":48541,\"start\":48537},{\"end\":48549,\"start\":48547},{\"end\":48563,\"start\":48557},{\"end\":48578,\"start\":48574},{\"end\":48904,\"start\":48902},{\"end\":48921,\"start\":48914},{\"end\":48932,\"start\":48928},{\"end\":48950,\"start\":48946},{\"end\":48965,\"start\":48961},{\"end\":49270,\"start\":49268},{\"end\":49278,\"start\":49276},{\"end\":49294,\"start\":49289},{\"end\":49305,\"start\":49301},{\"end\":49314,\"start\":49310},{\"end\":49327,\"start\":49324},{\"end\":49611,\"start\":49606},{\"end\":49622,\"start\":49619},{\"end\":49637,\"start\":49632}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":53845347},\"end\":34741,\"start\":34303},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":5276660},\"end\":35017,\"start\":34743},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":204972196},\"end\":35307,\"start\":35019},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":204972196},\"end\":35597,\"start\":35309},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":207556454},\"end\":35972,\"start\":35599},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":207979929},\"end\":36356,\"start\":35974},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":12856358},\"end\":36695,\"start\":36358},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":85543204},\"end\":37149,\"start\":36697},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":52837841},\"end\":37481,\"start\":37151},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":83458594},\"end\":37773,\"start\":37483},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":54465873},\"end\":38034,\"start\":37775},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":206594692},\"end\":38366,\"start\":38036},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":1915014},\"end\":38556,\"start\":38368},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":10248021},\"end\":39017,\"start\":38558},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":1931511},\"end\":39315,\"start\":39019},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":9944232},\"end\":39658,\"start\":39317},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":6308361},\"end\":40048,\"start\":39660},{\"attributes\":{\"id\":\"b17\"},\"end\":40595,\"start\":40050},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":52831465},\"end\":41011,\"start\":40597},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":14113767},\"end\":41445,\"start\":41013},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":3518818},\"end\":41835,\"start\":41447},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":91184480},\"end\":42197,\"start\":41837},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":12483169},\"end\":42528,\"start\":42199},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":67856153},\"end\":42934,\"start\":42530},{\"attributes\":{\"id\":\"b24\"},\"end\":43199,\"start\":42936},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":8745888},\"end\":43615,\"start\":43201},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":49656155},\"end\":44010,\"start\":43617},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":2893400},\"end\":44284,\"start\":44012},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":4343278},\"end\":44679,\"start\":44286},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":6941275},\"end\":45208,\"start\":44681},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":9926549},\"end\":45586,\"start\":45210},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":201103723},\"end\":45900,\"start\":45588},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":52955377},\"end\":46248,\"start\":45902},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":9059202},\"end\":46551,\"start\":46250},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":54477462},\"end\":47026,\"start\":46553},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":9190307},\"end\":47365,\"start\":47028},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":202661022},\"end\":47683,\"start\":47367},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":201070217},\"end\":48075,\"start\":47685},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":104292134},\"end\":48419,\"start\":48077},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":3441497},\"end\":48849,\"start\":48421},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":1688357},\"end\":49177,\"start\":48851},{\"attributes\":{\"doi\":\"abs/1805.03508\",\"id\":\"b41\"},\"end\":49530,\"start\":49179},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":3527606},\"end\":49854,\"start\":49532}]", "bib_title": "[{\"end\":34374,\"start\":34303},{\"end\":34765,\"start\":34743},{\"end\":35062,\"start\":35019},{\"end\":35352,\"start\":35309},{\"end\":35646,\"start\":35599},{\"end\":36032,\"start\":35974},{\"end\":36430,\"start\":36358},{\"end\":36779,\"start\":36697},{\"end\":37193,\"start\":37151},{\"end\":37529,\"start\":37483},{\"end\":37785,\"start\":37775},{\"end\":38080,\"start\":38036},{\"end\":38390,\"start\":38368},{\"end\":38643,\"start\":38558},{\"end\":39065,\"start\":39019},{\"end\":39350,\"start\":39317},{\"end\":39726,\"start\":39660},{\"end\":40659,\"start\":40597},{\"end\":41054,\"start\":41013},{\"end\":41512,\"start\":41447},{\"end\":41906,\"start\":41837},{\"end\":42263,\"start\":42199},{\"end\":42612,\"start\":42530},{\"end\":42977,\"start\":42936},{\"end\":43264,\"start\":43201},{\"end\":43692,\"start\":43617},{\"end\":44083,\"start\":44012},{\"end\":44327,\"start\":44286},{\"end\":44780,\"start\":44681},{\"end\":45266,\"start\":45210},{\"end\":45648,\"start\":45588},{\"end\":45968,\"start\":45902},{\"end\":46306,\"start\":46250},{\"end\":46653,\"start\":46553},{\"end\":47099,\"start\":47028},{\"end\":47429,\"start\":47367},{\"end\":47742,\"start\":47685},{\"end\":48144,\"start\":48077},{\"end\":48494,\"start\":48421},{\"end\":48892,\"start\":48851},{\"end\":49596,\"start\":49532}]", "bib_author": "[{\"end\":34391,\"start\":34376},{\"end\":34407,\"start\":34391},{\"end\":34425,\"start\":34407},{\"end\":34437,\"start\":34425},{\"end\":34452,\"start\":34437},{\"end\":34467,\"start\":34452},{\"end\":34782,\"start\":34767},{\"end\":34799,\"start\":34782},{\"end\":34815,\"start\":34799},{\"end\":34826,\"start\":34815},{\"end\":35077,\"start\":35064},{\"end\":35090,\"start\":35077},{\"end\":35104,\"start\":35090},{\"end\":35367,\"start\":35354},{\"end\":35380,\"start\":35367},{\"end\":35394,\"start\":35380},{\"end\":35666,\"start\":35648},{\"end\":35681,\"start\":35666},{\"end\":35696,\"start\":35681},{\"end\":35711,\"start\":35696},{\"end\":36049,\"start\":36034},{\"end\":36062,\"start\":36049},{\"end\":36074,\"start\":36062},{\"end\":36092,\"start\":36074},{\"end\":36106,\"start\":36092},{\"end\":36442,\"start\":36432},{\"end\":36456,\"start\":36442},{\"end\":36469,\"start\":36456},{\"end\":36795,\"start\":36781},{\"end\":36808,\"start\":36795},{\"end\":36821,\"start\":36808},{\"end\":36835,\"start\":36821},{\"end\":36848,\"start\":36835},{\"end\":36864,\"start\":36848},{\"end\":37209,\"start\":37195},{\"end\":37216,\"start\":37209},{\"end\":37228,\"start\":37216},{\"end\":37239,\"start\":37228},{\"end\":37248,\"start\":37239},{\"end\":37261,\"start\":37248},{\"end\":37544,\"start\":37531},{\"end\":37558,\"start\":37544},{\"end\":37572,\"start\":37558},{\"end\":37799,\"start\":37787},{\"end\":37817,\"start\":37799},{\"end\":37831,\"start\":37817},{\"end\":37848,\"start\":37831},{\"end\":38094,\"start\":38082},{\"end\":38109,\"start\":38094},{\"end\":38123,\"start\":38109},{\"end\":38133,\"start\":38123},{\"end\":38409,\"start\":38392},{\"end\":38429,\"start\":38409},{\"end\":38658,\"start\":38645},{\"end\":38675,\"start\":38658},{\"end\":38690,\"start\":38675},{\"end\":38706,\"start\":38690},{\"end\":38719,\"start\":38706},{\"end\":39080,\"start\":39067},{\"end\":39097,\"start\":39080},{\"end\":39113,\"start\":39097},{\"end\":39365,\"start\":39352},{\"end\":39376,\"start\":39365},{\"end\":39393,\"start\":39376},{\"end\":39406,\"start\":39393},{\"end\":39419,\"start\":39406},{\"end\":39435,\"start\":39419},{\"end\":39746,\"start\":39728},{\"end\":39763,\"start\":39746},{\"end\":39776,\"start\":39763},{\"end\":39789,\"start\":39776},{\"end\":40156,\"start\":40140},{\"end\":40166,\"start\":40156},{\"end\":40180,\"start\":40166},{\"end\":40196,\"start\":40180},{\"end\":40208,\"start\":40196},{\"end\":40224,\"start\":40208},{\"end\":40240,\"start\":40224},{\"end\":40259,\"start\":40240},{\"end\":40270,\"start\":40259},{\"end\":40286,\"start\":40270},{\"end\":40305,\"start\":40286},{\"end\":40317,\"start\":40305},{\"end\":40671,\"start\":40661},{\"end\":40683,\"start\":40671},{\"end\":40696,\"start\":40683},{\"end\":40710,\"start\":40696},{\"end\":40723,\"start\":40710},{\"end\":40738,\"start\":40723},{\"end\":40749,\"start\":40738},{\"end\":41070,\"start\":41056},{\"end\":41085,\"start\":41070},{\"end\":41101,\"start\":41085},{\"end\":41113,\"start\":41101},{\"end\":41128,\"start\":41113},{\"end\":41142,\"start\":41128},{\"end\":41156,\"start\":41142},{\"end\":41176,\"start\":41156},{\"end\":41526,\"start\":41514},{\"end\":41535,\"start\":41526},{\"end\":41549,\"start\":41535},{\"end\":41561,\"start\":41549},{\"end\":41569,\"start\":41561},{\"end\":41582,\"start\":41569},{\"end\":41920,\"start\":41908},{\"end\":41935,\"start\":41920},{\"end\":41944,\"start\":41935},{\"end\":41959,\"start\":41944},{\"end\":42277,\"start\":42265},{\"end\":42289,\"start\":42277},{\"end\":42306,\"start\":42289},{\"end\":42625,\"start\":42614},{\"end\":42637,\"start\":42625},{\"end\":42648,\"start\":42637},{\"end\":42663,\"start\":42648},{\"end\":42677,\"start\":42663},{\"end\":42992,\"start\":42979},{\"end\":43015,\"start\":42992},{\"end\":43278,\"start\":43266},{\"end\":43294,\"start\":43278},{\"end\":43312,\"start\":43294},{\"end\":43326,\"start\":43312},{\"end\":43339,\"start\":43326},{\"end\":43353,\"start\":43339},{\"end\":43715,\"start\":43694},{\"end\":43723,\"start\":43715},{\"end\":43737,\"start\":43723},{\"end\":43751,\"start\":43737},{\"end\":43761,\"start\":43751},{\"end\":44094,\"start\":44085},{\"end\":44111,\"start\":44094},{\"end\":44128,\"start\":44111},{\"end\":44135,\"start\":44128},{\"end\":44338,\"start\":44329},{\"end\":44353,\"start\":44338},{\"end\":44361,\"start\":44353},{\"end\":44381,\"start\":44361},{\"end\":44397,\"start\":44381},{\"end\":44417,\"start\":44397},{\"end\":44427,\"start\":44417},{\"end\":44791,\"start\":44782},{\"end\":44806,\"start\":44791},{\"end\":44820,\"start\":44806},{\"end\":44838,\"start\":44820},{\"end\":44853,\"start\":44838},{\"end\":44875,\"start\":44853},{\"end\":44885,\"start\":44875},{\"end\":45283,\"start\":45268},{\"end\":45300,\"start\":45283},{\"end\":45313,\"start\":45300},{\"end\":45329,\"start\":45313},{\"end\":45344,\"start\":45329},{\"end\":45662,\"start\":45650},{\"end\":45672,\"start\":45662},{\"end\":45685,\"start\":45672},{\"end\":45983,\"start\":45970},{\"end\":45997,\"start\":45983},{\"end\":46010,\"start\":45997},{\"end\":46021,\"start\":46010},{\"end\":46320,\"start\":46308},{\"end\":46328,\"start\":46320},{\"end\":46347,\"start\":46328},{\"end\":46666,\"start\":46655},{\"end\":46673,\"start\":46666},{\"end\":46685,\"start\":46673},{\"end\":46699,\"start\":46685},{\"end\":46711,\"start\":46699},{\"end\":46726,\"start\":46711},{\"end\":46734,\"start\":46726},{\"end\":47113,\"start\":47101},{\"end\":47127,\"start\":47113},{\"end\":47141,\"start\":47127},{\"end\":47443,\"start\":47431},{\"end\":47455,\"start\":47443},{\"end\":47466,\"start\":47455},{\"end\":47760,\"start\":47744},{\"end\":47773,\"start\":47760},{\"end\":47785,\"start\":47773},{\"end\":47800,\"start\":47785},{\"end\":47809,\"start\":47800},{\"end\":47820,\"start\":47809},{\"end\":48157,\"start\":48146},{\"end\":48173,\"start\":48157},{\"end\":48182,\"start\":48173},{\"end\":48193,\"start\":48182},{\"end\":48508,\"start\":48496},{\"end\":48517,\"start\":48508},{\"end\":48531,\"start\":48517},{\"end\":48543,\"start\":48531},{\"end\":48551,\"start\":48543},{\"end\":48565,\"start\":48551},{\"end\":48580,\"start\":48565},{\"end\":48906,\"start\":48894},{\"end\":48923,\"start\":48906},{\"end\":48934,\"start\":48923},{\"end\":48952,\"start\":48934},{\"end\":48967,\"start\":48952},{\"end\":49272,\"start\":49263},{\"end\":49280,\"start\":49272},{\"end\":49296,\"start\":49280},{\"end\":49307,\"start\":49296},{\"end\":49316,\"start\":49307},{\"end\":49329,\"start\":49316},{\"end\":49613,\"start\":49598},{\"end\":49624,\"start\":49613},{\"end\":49639,\"start\":49624}]", "bib_venue": "[{\"end\":34513,\"start\":34467},{\"end\":34872,\"start\":34826},{\"end\":35154,\"start\":35104},{\"end\":35444,\"start\":35394},{\"end\":35772,\"start\":35711},{\"end\":36156,\"start\":36106},{\"end\":36518,\"start\":36469},{\"end\":36914,\"start\":36864},{\"end\":37307,\"start\":37261},{\"end\":37618,\"start\":37572},{\"end\":37896,\"start\":37848},{\"end\":38193,\"start\":38133},{\"end\":38447,\"start\":38429},{\"end\":38778,\"start\":38719},{\"end\":39158,\"start\":39113},{\"end\":39481,\"start\":39435},{\"end\":39845,\"start\":39789},{\"end\":40138,\"start\":40050},{\"end\":40795,\"start\":40749},{\"end\":41221,\"start\":41176},{\"end\":41632,\"start\":41582},{\"end\":42009,\"start\":41959},{\"end\":42355,\"start\":42306},{\"end\":42723,\"start\":42677},{\"end\":43060,\"start\":43015},{\"end\":43399,\"start\":43353},{\"end\":43806,\"start\":43761},{\"end\":44139,\"start\":44135},{\"end\":44472,\"start\":44427},{\"end\":44925,\"start\":44885},{\"end\":45389,\"start\":45344},{\"end\":45735,\"start\":45685},{\"end\":46066,\"start\":46021},{\"end\":46393,\"start\":46347},{\"end\":46780,\"start\":46734},{\"end\":47186,\"start\":47141},{\"end\":47516,\"start\":47466},{\"end\":47870,\"start\":47820},{\"end\":48239,\"start\":48193},{\"end\":48626,\"start\":48580},{\"end\":49005,\"start\":48967},{\"end\":49261,\"start\":49179},{\"end\":49685,\"start\":49639}]"}}}, "year": 2023, "month": 12, "day": 17}