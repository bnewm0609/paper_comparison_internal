{"id": 234856285, "updated": "2022-12-03 20:25:03.637", "metadata": {"title": "Characteristics, potentials, and limitations of open-source Simulink projects for empirical research", "authors": "[{\"first\":\"Alexander\",\"last\":\"Boll\",\"middle\":[]},{\"first\":\"Florian\",\"last\":\"Brokhausen\",\"middle\":[]},{\"first\":\"Tiago\",\"last\":\"Amorim\",\"middle\":[]},{\"first\":\"Timo\",\"last\":\"Kehrer\",\"middle\":[]},{\"first\":\"Andreas\",\"last\":\"Vogelsang\",\"middle\":[]}]", "venue": "Software and Systems Modeling", "journal": "Software and Systems Modeling", "publication_date": {"year": 2021, "month": null, "day": null}, "abstract": "Simulink is an example of a successful application of the paradigm of model-based development into industrial practice. Numerous companies create and maintain Simulink projects for modeling software-intensive embedded systems, aiming at early validation and automated code generation. However, Simulink projects are not as easily available as code-based ones, which profit from large publicly accessible open-source repositories, thus curbing empirical research. In this paper, we investigate a set of 1734 freely available Simulink models from 194 projects and analyze their suitability for empirical research. We analyze the projects considering (1) their development context, (2) their complexity in terms of size and organization within projects, and (3) their evolution over time. Our results show that there are both limitations and potentials for empirical research. On the one hand, some application domains dominate the development context, and there is a large number of models that can be considered toy examples of limited practical relevance. These often stem from an academic context, consist of only a few Simulink blocks, and are no longer (or have never been) under active development or maintenance. On the other hand, we found that a subset of the analyzed models is of considerable size and complexity. There are models comprising several thousands of blocks, some of them highly modularized by hierarchically organized Simulink subsystems. Likewise, some of the models expose an active maintenance span of several years, which indicates that they are used as primary development artifacts throughout a project\u2019s lifecycle. According to a discussion of our results with a domain expert, many models can be considered mature enough for quality analysis purposes, and they expose characteristics that can be considered representative for industry-scale models. Thus, we are confident that a subset of the models is suitable for empirical research. More generally, using a publicly available model corpus or a dedicated subset enables researchers to replicate findings, publish subsequent studies, and use them for validation purposes. We publish our dataset for the sake of replicating our results and fostering future empirical research.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "3153098386", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/sosym/BollBAKV21", "doi": "10.1007/s10270-021-00883-0"}}, "content": {"source": {"pdf_hash": "c63433e68c3542ea56f7435507ed2dd47b60fd4b", "pdf_src": "SpringerNature", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://link.springer.com/content/pdf/10.1007/s10270-021-00883-0.pdf", "status": "HYBRID"}}, "grobid": {"id": "353b6f89dc6b300fea326c1dfa571dbd8c45d804", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/c63433e68c3542ea56f7435507ed2dd47b60fd4b.txt", "contents": "\nSoftware and Systems Modeling Characteristics, potentials, and limitations of open-source Simulink projects for empirical research\n(2021) 20:2111-2130\n\nAlexander Boll \nHumboldt University of Berlin\nBerlinGermany\n\nFlorian Brokhausen florian.brokhausen@tu-berlin.de \nTechnical University of Berlin\nBerlinGermany\n\n\u00b7 Tiago Amorim amorim@cs.uni-koeln.de \nUniversity of Cologne\nCologneGermany\n\nTimo Kehrer \nHumboldt University of Berlin\nBerlinGermany\n\nAndreas Vogelsang vogelsang@cs.uni-koeln.de \nUniversity of Cologne\nCologneGermany\n\nJeff Gray \nAndreas Vogelsang \nAlexander Boll \nFlorian Brokhausen \nTiago Amorim \nTimo Kehrer \nSoftware and Systems Modeling Characteristics, potentials, and limitations of open-source Simulink projects for empirical research\n(2021) 20:2111-2130Received: 11 September 2020 / Revised: 25 January 2021 / Accepted: 11 March 2021 / Published online: 14 April 2021R E G U L A R P A P E R Communicated bySimulink \u00b7 Open source \u00b7 Empirical research \u00b7 Sample study\nSimulink is an example of a successful application of the paradigm of model-based development into industrial practice. Numerous companies create and maintain Simulink projects for modeling software-intensive embedded systems, aiming at early validation and automated code generation. However, Simulink projects are not as easily available as code-based ones, which profit from large publicly accessible open-source repositories, thus curbing empirical research. In this paper, we investigate a set of 1734 freely available Simulink models from 194 projects and analyze their suitability for empirical research. We analyze the projects considering (1) their development context, (2) their complexity in terms of size and organization within projects, and (3) their evolution over time. Our results show that there are both limitations and potentials for empirical research. On the one hand, some application domains dominate the development context, and there is a large number of models that can be considered toy examples of limited practical relevance. These often stem from an academic context, consist of only a few Simulink blocks, and are no longer (or have never been) under active development or maintenance. On the other hand, we found that a subset of the analyzed models is of considerable size and complexity. There are models comprising several thousands of blocks, some of them highly modularized by hierarchically organized Simulink subsystems. Likewise, some of the models expose an active maintenance span of several years, which indicates that they are used as primary development artifacts throughout a project's lifecycle. According to a discussion of our results with a domain expert, many models can be considered mature enough for quality analysis purposes, and they expose characteristics that can be considered representative for industry-scale models. Thus, we are confident that a subset of the models is suitable for empirical research. More generally, using a publicly available model corpus or a dedicated subset enables researchers to replicate findings, publish subsequent studies, and use them for validation purposes. We publish our dataset for the sake of replicating our results and fostering future empirical research.\n\nIntroduction\n\nDomain-specific models are the primary artifacts of modelbased development of software-intensive systems [10,66]. They serve as a central means for abstraction, facilitate analysis and simulation in the early stages of development, and provide a starting point for automated software production. Over the last two decades, Matlab/Simulink 1 (in the sequel referred to as Simulink, for short) has emerged in various domains (e.g., automotive, avionics, industrial automation, medicine) as a de facto standard for the industrial modelbased development of embedded systems [40].\n\nHowever, Simulink projects and models created and maintained in an industrial context are usually not pub-licly available due to confidentiality agreements or license restrictions [2,21,51,63]. Access to these models, in general, is limited, making research results hard if not impossible to replicate [7]. Publicly available projects do not reflect \"real-world\" models [6,12,13,31,33], which severely limits empirical research. Additionally, there are no commonly established benchmarks for assessing and comparing the effectiveness of new techniques and tools, and little is known about the usage of these models in practice. As a consequence, scientific insights into model-based development with Simulink are not nearly as deep and substantial as for classical code-based development, which highly profits from large publicly available open-source software repositories [22,23,25,27,35].\n\nAs a step to overcome this situation, we investigate a set of 1,734 freely available Simulink models from 194 projects, originally collected by Chowdhury et al. [15] and updated in terms of our study. The set comprises projects from Matlab Central 2 , SourceForge 3 , GitHub 4 , and other web pages, as well as two smaller sets [9,34]. We first analyze these projects and models concerning their basic characteristics, including (i) their development context, (ii) their complexity in terms of size and model organization within projects, and (iii) their evolution over time. Thereupon, we discuss the corpus' potentials and limitations for empirical research.\n\nWe found that the projects and models comprised by the corpus are very heterogeneous concerning these characteristics. For (i), the projects stem from different origins and application domains. Most projects come from academia, and the distribution over application domains is skewed toward the energy sector. For (ii) and (iii), most of the projects are relatively small, exposing a short lifetime and hardly any collaborative development effort. Many of them are toy examples with limited practical relevance. However, some large-scale projects provide sophisticated Simulink models in a mature project structure, and the most long-living projects have a lifetime of several years of active development. Besides these limitations, our results show that there are also potentials for empirical research in the Simulink area. According to our results' validation with a domain expert, many models expose several characteristics that can be considered representative of industry models, and are suitable for empirical research, the circumstances of which are discussed in this paper. The validity of this study may be threatened internally by a subjective classification of a project's context and externally by the limited size of our data set. We publish the updated corpus 5 for the sake of replicating our results and fostering future empirical research, which is the major impact we aim for with this paper.\n\n\nModel-based development with Simulink\n\nSimulink is a Matlab-based graphical programming environment for modeling, simulating, and analyzing multidomain dynamical systems. Its primary interface is a graphical block diagramming tool and a customizable set of block libraries. Different kinds of blocks can be connected via ports to transmit outputs and receive inputs, thus yielding a dataflow-oriented model. Subsystems are special blocks that contain another Simulink diagram, thus enabling hierarchical modeling. Figure 1 shows an example of a Simulink diagram (taken from [42]). The model shows a dual-clutch control of an automatic transmission system of a vehicle with two separate clutches. Blocks of various types are connected via signal lines. The four smaller blocks on the left side are inport blocks, which transport input values from the model's context. One of them is the car's current speed (V ehSpd), which is further processed to compute the next gear shift. Also, there are three outport blocks (the same symbol as inports but with incoming signal lines), which transport output values of the model to its context. The four rectangular blocks shaded in gray are subsystems. The subsystems are part of the model, and the contained behavior can be displayed on request. The other shapes represent basic blocks (i.e., noncomposite blocks). The pentagon at the top (trq_dem) is a goto block that transports its signal to some other part of the model (to a point deeper in one of the subsystems). The triangle (T max) is a gain block, which multiplies a signal with a constant. The black bar is a multiplexer block, which combines inputs with the same data type and complexity into a vector output. The rectangle with the label \"[0,1]\" is a saturation block, which produces an output signal that is the input signal's value bounded to some upper and lower values.\n\nThe process of computing the states of a Simulink model at successive time steps is known as solving the model. This way, models can be simulated for the sake of validation or verification. Simulink comes with two classes of solvers: (1) Fixed-step solvers, as the name suggests, solve the model using the same step size from the beginning to the end of the simulation; (2) variable-step solvers vary the step size during the simulation. Within one simulation step, each block of the model updates its state and output values according to the specified behavior and this step's input values.\n\nSeveral add-on tools allow to model state-based systems (Stateflow), generate code from Simulink models (e.g., Tar- Fig. 1 Example of a Simulink block diagram modeling the dual-clutch control of an automatic transmission system of a vehicle with two separate clutches [42] getLink, Embedded Coder), or to do formal verification and test case generation (e.g., Design Verifier).\n\n\nRelated work\n\n\nEmpirical studies on model characteristics\n\nSeveral authors have investigated existing UML models regarding their characteristics and perception. Hebig et al. [28] released the currently largest set of open-source UML models mined from GitHub repositories (the Lindholmen dataset). They described content-and process-related characteristics of the UML models and the corresponding projects. In a follow-up study [30], they triangulated their results with qualitative surveys. They found that collaboration seems to be the most important motivation for using UML, and teams use UML during communication and planning of joint implementation efforts. St\u00f6rrle analyzed the impact of UML diagram size on the understanding of the diagrams [60]. He found a strong negative correlation between diagram size and modeler performance. He used in his experiments class diagrams, state charts, and sequence diagrams with a mean diagram size of 25 to 30 elements, which were smaller than the models found in the Lindholmen dataset [28].\n\nRegarding works describing characteristics of Simulink models, Dajsuren et al. [18,19] reported coupling and cohesion metrics they found in ten industrial Simulink models. They measured the inter-relation of subsystems as well as the inter-relation of blocks within subsystems. Stephan et al. [57] developed a taxonomy to describe Simulink model mutations. The mutations are organized by categories based on the types of model clones (Type 1, 2 or 3) they inject, and further broken down into mutation classes that resemble typical edit operations on Simulink models. In order to evaluate the representativeness of the edit operations, the taxonomy has been applied to three Simulink projects, two of them being publicly available. Although the work's main aim was to establish a framework for evaluating model clone detectors, the taxonomy can be considered general enough to describe aspects of Simulink model evolution from a quali-tative perspective. Kehrer et al. [37] defined Simulink model editing operations which have been used to study the evolution of a cruise control model. Balasubramaniam et al. [3] conducted an empirical study investigating the types and quantity of software changes in the context of embedded control systems. Insights are gained from two widely adopted open-source control software suites, namely ArduPilot and Paparazzi UAV. These are used to develop a code mutation framework mimicking typical evolution in control software. Later on, they apply this framework to explore the impact of software evolution on the behavior of three controllers designed with Simulink, focusing on the mismatches that arise between control models and the corresponding control software. Chowdhury et al. [15] reported on a large set of freely available Simulink models that they crawled from various sources on the Internet. They analyzed these models in terms of content and reported basic measures such as the number of blocks and connections. Their set is used in this paper as the basis for further analysis. Moreover, we update their corpus by collecting the latest project and model snapshots, and we extract additional meta-data from those projects hosted on GitHub to assess their evolutionary characteristics.\n\n\nRelevance of open source models for empirical research\n\nConducting extensive empirical studies in modeling and model-based development can be challenging due to the lack of repositories with large numbers of freely accessible models. Badreddin et al. studied 20 free open-source software (FOSS) projects with high numbers of commits without finding UML and concluded that it is barely used in FOSS [2]. Similarly, Ding et al. found only 19 projects with UML when manually studying 2,000 FOSS projects from popular FOSS repositories [21]. Most empirical studies on modeling in practice are case studies analyzing limited sets of models in specific contexts (e.g., [11,26,32,43,64]) or qualitative studies including interviews and surveys (e.g., [1,44,49]). Some studies approach the use of models in FOSS from a quantitative perspective, studying a large number and variety of projects. For example, to study the use of sketches, Chung et al. collected insights from 230 persons contributing to 40 FOSS projects [16]. Langer et al. studied the lifespan of 121 enterprise architect models in FOSS projects [39]. Collections of models used for experimental evaluations of model-based development tools can be found, e.g., in [29,47] .\n\nSome authors created datasets of Simulink models as benchmarks. For example, Bourbouh et al. [8] compiled a set of 77 Stateflow models to demonstrate the effectiveness of their tool. Similarly, Sanchez et al. [52] downloaded 70 Simulink models larger than 1MB from GitHub. Another benchmark of Simulink models was created as part of the Applied Verification for Continuous and Hybrid Systems (ARCH) workshop [24]. This benchmark offers six models in four projects used as study objects in a competition to solve a range of general problems (e.g., falsification or model checking).\n\nDue to the lack of publicly available models, most experimental evaluations of tools rely on models that have been synthetically created using a dedicated model generator [45,46,[53][54][55]61]. Specifically, there is a line of research on the generation of realistic models conducted by Yazdi et al. [69][70][71][72]. The basic idea is to analyze model histories to learn statistical properties of model editing sequences, which are then used to configure a model generator that aims to generate realistic models by simulating such editing sequences.\n\nStol and Ali Babar performed a systematic literature review on empirical studies in FOSS [58]. Based on their observation of the analyzed studies' low methodological quality, they proposed a guideline for conducting empirical studies in FOSS projects. In the guideline, they emphasized the importance of reporting the characteristics of the analyzed sample: \"Such details can include: the size of the FOSS software (expressed as lines of code), size of community (expressed as the number of active and inactive participants), and the domain of the FOSS software (e.g., operating systems, desktop software, infrastructural such as web servers).\" In our paper, we augment the meta-data of models with information about content, project context, and process context. This information allows researchers to derive and justify suitable samples for their research.\n\nIn code-based development, a large research community focuses on analyzing [22,23,25,27,35], and building [62] FOSS repositories, especially in the context of platforms with social features (e.g., GitHub) [17,36]. However, models known from model-based development, including UML, Simulink and other domain-specific kinds of models, have not yet made it into typical research on mining software repositories.\n\n\nStudy design\n\n\nResearch objective\n\nOur research aims at understanding the characteristics of publicly available Simulink models to assess their potential for empirical research. We characterize these models according to three perspectives: context, size, and evolution. We selected these perspectives because we found indications in the literature that those perspectives should be considered when conducting empirical studies. For example, the ACM SIGSOFT Empirical Standards [50] lists \"describes the context of the case in rich detail\" as an essential part of any case study or action research study. Baltes and Ralph [4] argue that representativeness of corpora can be improved by \"(1) Including artifacts from diverse domains (e.g., aerospace, finance, personal computing, robotics). [\u2026] (3) Making the corpus large enough to support heterogeneity sampling and bootstrapping. (4) Attempting to match the parameters we can discern [\u2026]\". Moreover, we considered existing studies on model characteristics (see Sect. 3.1) and found that these consistently report the context of the analyzed models, size and complexity [19,60], and evolution [28].\n\nTherefore, we analyzed the mentioned three perspectives as formulated by the following research questions. RQ1: In which context are Simulink projects created? Information regarding the project context is a necessary prerequisite to assess the external validity of any future empirical research based on our Simulink project corpus. For example, the validity of research results might be limited to dedicated application domains. RQ2: What is the size of the Simulink models and how are they organized within their defining projects? The primary motivation for assessing the size of models is that future benchmarks or experiments being based on our corpus might require models that exceed a certain degree of complexity and are not just toy models. In particular, we are interested in whether our corpus comprises industry-scale models useful for further research. RQ3: How do Simulink projects and their models evolve over time?\n\nThe motivation to understand how Simulink projects and models evolve is to assess their suitability for learning from their development history. Thus, we are particularly interested in whether there are any projects under active development or maintenance for a long time.\n\nThe research objective is summarized using a Goal Question Metric [5] model, illustrated in Fig. 2. Metrics and respective extraction methods will be presented in detail in the remainder of this section.\n\n\nStudy subjects\n\nThis study can be classified as a quantitative and qualitative non-probability sample study [59]. Our sample is based on the largest [14] set of publicly available Simulink models, 6 collected by Chowdhury et al. [15]. The set by Chowdhury et al. comprises a smaller Simulink model collection [34], a Stateflow model collection by the CoCo-Sim-Team [9], and many other projects from Matlab Central, Source-Forge, GitHub, and other sources such as web sites of  Instead of using the provided dataset as it is, we re-collected a current snapshot in August 2020 7 consisting of all constituent Simulink models based on the information provided in the meta-data of the corpus of Chowdhury et al. The main motivation for this new snapshot arises from several inconsistencies we found between the actual corpus and the results presented in [15]. According to personal correspondence with the authors, these inconsistencies may originate from only a subset of the entire corpus models being used in their study. For many projects, the newer snapshot also provided updated models and a richer model evolution history for answering RQ3.\n\nWe collected the Simulink projects and models of our updated corpus using the project URLs provided in the original corpus' meta-data. Out of the 205 projects listed in the meta-data, 204 mention a URL. We visited these 204 web pages and found 193 to be still online. Out of the remaining 11 projects, we were able to find one additional project in the original dataset. In sum, we could thus analyze 194 projects comprising a total of 1,736 Simulink models. Two of these models are invalid and cannot be opened by Matlab Simulink, which reduces the number of actually analyzable models to 1,734.\n\nOur corpus comprising all the projects and models used in this study, including the respective meta-data, is available in our replication package. \n\n\nData analysis\n\n\nRQ1: Project context\n\nTo get a basic understanding of the context in which a Simulink project has been created, we classify each project with respect to the following dimensions:\n\nOrigin: We use the categories academia, industry, and Mathworks to classify the origin of a project. The categorization is determined based on the affiliations of the developers associated with the projects. Although Mathworks' modeling projects might also be classified as industry projects, we assume that Mathworks developers do not represent typical \"end-users\" of Simulink from industry, which is why we differentiate among the two.\n\nApplication domain: We use the domains energy, electronics, automotive, avionics, robotics, domain independent, and other to classify the projects with respect to their application domain. Domain-independent projects commonly encompass tools (e.g., Simulink analyzers, diagram layout managers or general toolboxes). These projects are assumed to be applicable in any domain.\n\nBoth classifications were performed manually by four researchers based on multiple sources of information. Besides the project data itself and the project's web site, a web search was performed to gather additional information like developer affiliation or associated scientific publications. Concerning the list of possible application domains, we first used the classification scheme of [65], which comprises eight application domains. We revised this initial classification scheme during our analysis, as some of the analyzed projects did not fit into that scheme and some domains were not represented by a single project. We ended up reusing their domains automotive, avionics, and \"unclear\". Newly created domains were decided upon together and were added if a project would not fit into another domain: energy, electronics, domain-independent, robotics, military, biology, wearable. The domains railway and automation were adjusted to transport and home automation. The domains finance, health care, public, and telecommunication were not used in our classification. To mitigate classification errors, a consensus needed to be reached among the four researchers, which was achieved through iterative discussions. Without a consensus, no useful project description available, or when a project domain remains unclear, we used the categories unclear and not enough information for domain and origin, respectively.\n\nTraceability to a scientific publication: Moreover, particularly for those projects originating from an academic context, we are interested in whether there is a scientific publication associated with the project. Such publications may be useful for additional research as they provide a more detailed context of a project and its models. It also gives an insight into the scientific diligence of the academic work.\n\nSolver mode: The usage of a fixed-step solver might indicate that a model is used for code generation; otherwise, the model may only be used for simulation or other abstract purposes. If the model state is changed in fixed time steps, code generation for hardware on embedded systems as a deployment target is possible. The solver mode can be automatically extracted using the Simulink API.\n\nCode generation using a standard code generator: In addition to the extraction of the solver mode, we searched for TargetLink, and Embedded Coder traces in the models, as these are the two most commonly used code generators in model-driven development with Simulink.\n\n\nRQ2: size and organization of Simulink models\n\nTo characterize the size and complexity of the Simulink models and their organization within projects, we use a collection of standard Simulink model and complexity metrics from Olszewska et al. [48]. We collect and report measurements on a model level and on a project level by aggregating the measurements from a project's models. Our Matlab and Python scripts used for computation of all the metrics are published on Figshare. 8 The number of models per projects helps to judge the projects' overall size. The number of blocks further helps in assessing the size of the models as well as, in an aggregated manner, the magnitude of the projects (i.e., if projects consist of multiple small models or fewer large ones). We include masked subsystems in the calculation of the num-8 https://doi.org/10.6084/m9.figshare.13636589 ber of blocks. The number of different block types used in a model represents the modeling diversity. When aggregated, this metric serves to judge and compare the modeling diversity on a project level. Further, the comparison of model and project block diversity yields insights into how the different models within projects are modularized, i.e., if the models of a project contain similar blocks or not. The number of signal lines represents the connectivity within the models, demonstrating the complexity of interaction between different functional blocks. This metric is also analyzed regarding the number of blocks to examine if there is a correlation. The number of subsystems characterizes a model from an architectural point of view and gives a hint on its modularization.\n\nTo assess the complexity of the models in our corpus, we use several complexity metrics that have been proposed by Olszewska et al. [48]. In their work, the authors have adapted several well-known code complexity metrics to Simulink. Cyclomatic Complexity was first introduced by McCabe [41] and assesses a program's complexity by counting the independent paths of program flow. Olszewska et al. adapt this for Simulink by mapping conditional statements of C to corresponding blocks in Simulink.\n\nThe Halstead metrics are another set of complexity metrics. For our study, we measure the Halstead difficulty, which is calculated by the following formula:\nD = n 1 2 * N 2 n 2\nwhere n 1 is the number of distinct Simulink block types, n 2 is the number of distinct input signals, and N 2 is the total number of input and output signals [48].\n\nThe Henry-Kafura Information Flow defines a subsystem's complexity based on the fan-in and fan-out of information flow for that subsystem. It is calculated as:\nHKIF = size * (fanIn * fanOut) 2\nwhere si ze is the number of contained blocks (including subsystem blocks), f anI n and f anOut represent the number of afferent and efferent blocks of a subsystem. [48].\n\nAs last complexity metric, we calculate Card and Glass's System Complexity. System Complexity adds up two submetrics: structural complexity and data complexity (SC = StructC + DataC). Structural complexity is defined as the mean of squared values of fan-out for all subsystems (n):\nStructC = n i=1 fanOut 2 i\nn Data complexity is defined as a function that is directly dependent on the number of input and output signals (S i ) and inversely dependent on the number of fan-outs in the module:\nDataC = 1 n * n i=1 S i fanOut i + 1\nIn addition to size and complexity, we assess the file format of the model. This information originates from the default file format of Simulink models changing from .mdl to .slxextensions with the second annual release of Simulink in 2012. The file format may be necessary for tool and organization compatibility across versions. Finally, we establish any peculiarities to be observed between the manually identified domains of projects (e.g., if industry projects differ from academic ones). Additionally, the identified industries themselves are analyzed concerning project and model structure.\n\n\nRQ3: project and model evolution\n\nWe use meta-data extracted from a version control system to get an overview of how Simulink projects and models evolve, as it is customary in the field of software repository mining [22,23]. We use a subset of our corpus' projects hosted on GitHub. We analyze only this subset as we can easily access the commit history of these Git projects 9 . On the contrary, the commit history is not provided for the other projects, thus excluded here. The GitHub subset comprises 35 projects containing 579 models, accounting for 18 % of all projects and 33 % of all models of the entire corpus.\n\nOn the project level, the total number of commits assesses the project's general development activity. In contrast, the ratio of merge commits to total commits and the number of authors serve as indicators of how the development is performed collaboratively. By extracting the project lifetime, we determine whether there are any long-living projects. We are particularly interested in whether any projects are actively maintained over time or whether they are just stored in the repository. Therefore, the lifetime comprises the time between the first and the last commit. Further, the commits per day provide a first indicator of how frequently the projects are updated. Since the total commits extracted from GitHub refer to all the project files, we are additionally interested in the proportion of model commits that change at least one Simulink model in the project. Similarly, regarding the total number of project authors, we are also interested in the authors' proportion that changed at least one model file (model authors) during a project's lifetime.\n\nOn the model level, the number of updates reports the number of commits on the model file. The number of authors per model reports the number of different committers that have modified this model at least once. The lifetime in days encompasses the time between the first and the last commit that changed the model. In contrast, the lifetime in % denotes the model's relative lifetime concerning the overall lifetime of the project that comprises the model. We compute all models' lifetime according to the model files' inherent meta-data in addition to these metrics extracted from GitHub meta-data. This information provides a date for the first creation date and the last modification used to calculate the lifetime in days of all models.\n\nFinally, we are interested in how the development workload, particularly the number of model modifications, is distributed over the lifetime of projects and models. Therefore, we calculate the distribution of project commits, the distribution of model commits, and the ratio of models that are under active development over the lifetime of a project. We assume a model to be under active development between the first and last commit of a model.\n\n\nStudy results\n\nIn this section, we report the results of the analyses detailed in Sect. 4.3, structured by our research questions RQ1-RQ3.\n\n\nRQ1: Project context\n\nOrigin and traceability to a scientific publication: As illustrated in Fig. 3, of 194 projects, 113 (58 %) originate from an academic context, 34 (17 %) are provided by Mathworks, and 25 (13 %) projects are from industry. We could not classify the origin of the remaining 22 (12 %) projects due to missing information. We measured the agreement of the manual classification by computing Krippendorff's alpha [38] to be 0.85, which is reliable (Alpha values \u2265 0.80 are considered reliable). Further, we found links to scientific publications for 26 (13 %) projects. Of these projects, 18 (9 %) originate from an academic context, while the remaining eight (4 %) projects are not classified concerning their context. Application domains: Figure 4 shows the results of our domain classification. Most projects represent applications in the energy sector: 52 (27 %). The second-largest domain is electronics, with 47 (24 %) projects. These two domains make up more than half of all projects. 36 (19 %) of the models are classified as \"domain-independent\"-e.g., used to demonstrate a Simulink tool. The avionics, robotics, and automotive domain together make up another 21 %. The remaining categories are summarized as \"other\" in Fig. 4. The \"other\" categories comprise 18 projects (9 %): six of which we could not classify at all and are thus \"unclear\", five telecommunication projects, and two audio projects. The remaining domains only contribute a single project to the corpus: biology, home automation, wearable, transportation, and military.   \n\n\nRQ2: model sizes and project organization\n\nOverall project comparison: Table 1 shows the different metrics on the project and model level. On the project level, all metrics are aggregated for all models in each project. The model-level metrics are calculated without relation to the projects.\n\nThe standard deviation is much larger for all metrics than the mean values (except for the number of different block types), which shows the diverse range of projects and models. Further, for these metrics, the median is significantly smaller than the mean value. Therefore, the metric values are rather small for most models and projects, while some exceptions are much larger than the median accounts. Some of the models are even empty, in the sense that they do not contain a single line or block. Models without any signal lines are usually library models, which are merely a collection of different types of blocks. In contrast, empty models might indicate \"orphan models\" or models that are not yet under active development.\n\nThe number of models per project varies substantially. Ninety-eight projects (50.5 %) contain only one model. The five largest projects contain 42 % of all models. Overall, no predominant trend is evident concerning the number of blocks, neither per model nor per project.\n\nThe number of signal lines also varies substantially between projects and models. Sixty-eight library models contain only blocks but no signal lines. Additionally, some model files contain just a single high-level subsystem, which is a reference to another model in the project. On the other hand, 450 models show high connectivity with equally as many or more signal lines than blocks. Apart from these two extremes, there is no common scheme in the correlation of signal lines and blocks. This phenomenon is also apparent when analyzing the average signal lines per block over all models, which amounts to 0.82 \u00b1 1.52. One may expect models to contain more signal lines than blocks, in general. However, many models are library models, one signal line can connect more than two blocks, and models can contain descriptions or comment blocks that are not connected to other blocks. As with the previously presented metrics, the number of subsystems per project and per model does not show any particular pattern. Again, some very large projects are causing the high maximum value and the high standard deviation.\n\nSimilarly, with all of the reported complexity metrics, the mean, median, and standard deviation distribution show the diversity of models and projects regarding their complexity. The large maximum values of the Cyclomatic Complexity originate from extensive library models from a drive-train simulation. In contrast to these extreme examples, 1088 models exhibit a minimal Cyclomatic Complexity of 1. The Halstead difficulty values are not as divergent and do not show prominent outliers. However, in addition to the median, the 957 models showing a complexity of 0 signify a large number of low complexity models. The Henry-Kafura Information Flow exhibits one radical outlier with the noted maximum value. The next lowest value amounts to just 13.000. This outlier originates from a demo model contained in a Mathworks tool collection. In contrast to this, there are 1366 models in the dataset with a Henry-Kafura Information Flow of 0. This divergence explains the reported values in the table. Regarding System Complexity, the shown maximum value is an exception in the dataset, with the next highest value amounting to just 178.\n\nDiving deeper into the models' contents, we can see that some block types are commonly used in most models. Figure 5 shows the 25 most commonly occurring block types with the number of models they are used. The most used type of block, being the subsystem, highlights the importance of modularization in Simulink projects. Unsurprisingly, in-, and outports, which provide the basic functionality to receive and send signals, are used in most models. The few projects not incorporating these blocks are not used to process data but mainly for simulations using generated signals as inputs and only producing some visualization in scope instead of outputting a signal.\n\nIn addition to the models' contents, we analyze the file types of the models within the projects, with the majority of 107 projects (55 %) exclusively containing models with the older file type .mdl, 72 projects (37 %) only containing .slxfiles and 15 (8 %) containing both. 40 % of the models with the newer .slx format has been created before 2012 when this file format was first introduced. While appearing counterintuitive, this finding indicates that these models were created in the previous .mdl format but were later transferred into the newer .slx format. This hypothesis is further supported by the fact that of these 40 % of .slx model files being created before 2012, 95 % were still under active development after introducing the new file format. Comparison by origin This comparison analyzes how model size and organization differ between models from different origins, which we determined in Sect. 5.1. To that end, we group our measurements by the categories Academic, Mathworks, Industry, and No Information, comprising 460, 619, 309, and 346 models, respectively. We use boxplots [67] to illustrate these aggregated values; the orange line within a box represents the median, the size of the box is determined by the first and third quartile, and the whiskers represent the fifth and ninety-fifth percentile. Outliers are displayed as circles.\n\nFor most industry category projects, the number of models per project is much lower than in the other categories, as shown in Fig. 6a. Only the projects with no origin information are even smaller. The largest projects in terms of the number of models can be found in the Mathworks category. When comparing the model metrics based on the project's origin, three metrics stand out and show a difference between origins. Figure 6b shows the comparison of origins regarding the number of blocks per model. For reasons of clarity, we cleaned the plot of outliers, i.e., models with more than 10,500 blocks. Therefore, there are eight models in the Mathworks category and three models in the industry and academic categories that are not displayed in the plot. These outliers consist of libraries and large simulation models. Models from the Mathworks category show the largest median, with 123 blocks per model, while the industry models show the largest distribution. While the academic category shows the most narrow distribution of the number of blocks per model, the category also exhibits the most outliers. Figure 6c shows the subsystems per model for all origin categories. This plot is cleaned of outliers with more than 175 subsystems, accounting for one model each in the academic and industry categories. When considering the modularization of models in terms of the contained subsystems, models from the Mathworks category show the most usage of subsystems due to the high median, larger third quartile, and high density of outliers above the 95 percentile. However, there are more models with a larger number of subsystems in the industry category, while the majority of industry models use fewer subsystems than the Mathworks models. Models from academia are least modularized, with just 11 subsystems per model on average.\n\nLastly, Fig. 6d shows the Cyclomatic Complexity of models for the different categories. There are four industry models and one from academia not shown in the plot, with values larger than 210. Interestingly, all categories exhibit a median of 1, as in the overall comparison before. Still, the industry category contains the most complex models, with an average Cyclomatic Complexity of 30. The much larger ninety-fifth percentile also signifies this.\n\n\nComparison by application domain:\n\nWe compare the models concerning their identified application domain from Sect. 5.1. The largest domain in terms of the number of models is the energy domain, with 354 models. The other domains split up as follows: 339 are domain-independent, 280 from electronics, 257 from avionics, 232 from robotics, 151 from several 'other' domains, and 121 in the automotive domain. Figure 7a shows the models' distribution over the projects of the domains. Projects from avionics and robotics domains are the largest in terms of the number of models per project, with 17.1 and 16.6 models per project on average. The smallest projects originate from the electronics and energy domain, with 6.1 and 6.7 models per project on average. The extreme outlier in the energy domain is an extensive model of a wind turbine. Apart from the outliers and the ninety-fifth percentiles, the projects in all domains are rather small, with each of the third quartiles being under 15 models per project.\n\nAs in the preceding section, Fig. 7b shows the blocks per model for the different domains of the projects. This plot is again cleaned off the outliers above 10,500 blocks per model. Therefore not shown are five domain-independent projects, three from the robotics and automotive domains, two from energy, and one from avionics. Figure 7b shows that most automotive domain models are significantly larger than in the other domains. Figure 7c shows the number of subsystems per model for the identified domains, excluding one outlier each from the automotive and energy domain. With the automotive domain models being the largest ones, they also show the highest amount of subsystems per model. Therefore, the models in the automotive domain show the highest degree of modularization. The energy domain exhibits the second largest number of subsystems in the models. Generally, the distribution of subsystems over the domains follows a similar trend as the number of blocks.\n\nThe number of different block types per model is shown in Fig. 7d. The automotive domain shows the most diversity in terms of the block types used in the models, with 29 unique block types per model on average. However, many highly diverse models belong to the energy domain, as signified by the ninety-fifth percentile and the outliers. The remaining domains are rather similar in their unique block types per model, exhibiting only minor differences.\n\nLastly, Fig. 7e shows the Cyclomatic Complexity of models for the domains. The plot is cleaned of values above 210, which relates to three models from the automotive and two from the energy domain. The previously identified trend holds in this respect as well, as the automotive domain is the most prominent featuring the most complex models. While all other domains exhibit a median of just 1, the automotive domain exhibits a value of 10. Further, all third quartiles are below 5; just the automotive domain exhibits a value of 66 for the third quartile. The majority of projects and models are rather small. The largest models stem from the automotive domain, exposing a high degree of modularity through subsystems and higher Cyclomatic Complexity. Models originating from industry and Mathworks are the most modularized.\n\n\nRQ3: project and model evolution\n\nAs described in Sect. 4.3.3, we analyze the subset of projects hosted on GitHub to evaluate evolutionary aspects. In order to evaluate if this subset represents the characteristics of the whole corpus, we analyzed all metrics reported in Sect. 5.2 on this subset as well. While the GitHub subset is missing some of the most extensive projects, identified as outliers in Sect. 5.2, the overall metrics are comparable to those of the whole corpus. The lack of some of the largest projects especially reflects in the metrics for subsystems, Cyclomatic Complexity and System Complexity, where the GitHub subset shows smaller values on average. However, the most extensive projects are outliers of the entire corpus and therefore deviate from most corpus projects. Arguably, their lack in the GitHub subset does not harm its representativity. Evolutionary data from the projects mentioned above can be seen in Table 2, while the models' evolution characteristics are summarized in Table 3. Similar to the results of the static properties of RQ2 (see Sect. 5.2), these projects and models are highly diverse concerning their evolutionary characteristics, as the standard deviation is bigger than the mean for most metrics. For some metrics, the standard deviation is more than twice the mean value. Further, all metrics' median values are lower than the respective mean values, which indicates that only a few projects are substantially more long-living, more frequently maintained, and have more authors. Projects: Most projects show a rather small number of commits, as the median only amounts to 8 commits (see Table 2). The ratio of merges to all commits in the GitHub projects is even smaller; the median lies at 0 %, with 1.4 merge commits per project on average. Similarly, the number of people actively working on the projects is small, comprising only 2.7 authors on average. The project lifetimes vary greatly between zero days (1 commit only) and more than six years. About half of the projects show an active maintenance span which is less than 50 days. 44.2 % of the commits modify Simulink models, indicating that the models can indeed be considered as primary development artifacts of the projects. The model-author ratio further supports this: In most cases, all authors of a project also edit the model files, with the mean value being at 82.2 %. Models: Table 3 shows that on average, a model is updated about two times after its initial creation. For most of the models, these modifications are performed by a single developer since, on average, 1.  day-indicated by the median. The relative time a model is actively developed presents a median and mean value of 1 % and 23.9 % of the entire project's lifetime.\n\nAdditionally, we evaluated all models' absolute lifetime by analyzing the Simulink model files, which expose their initial creation and last modification dates. The penultimate line of Table 3 summarizes lifetime characteristics obtained from Simulink files of 1,686 models in our corpus. For 48 of the models, the format of the dates was corrupted and not retrievable. In particular, it can be seen that the mean and median values differ significantly in comparison with the lifetime calculated for GitHub projects. Further, the most long-living model was under development for almost 20 years. This information might indicate that some models have been developed offline and were later committed and pushed to the central repository for the sake of distribution and archiving. Furthermore, others represented file hosting services like Mathworks and SourceForge started hosting files earlier than GitHub. Distribution of development workload over project lifetime Figure 8a shows the distribution of project commits over a project's lifetime, averaged over all projects. As the median project lifetime is about 50 days, each bin represents five or more days for most projects. Apart from bursts of development activity at the beginning and the end of a project, a rather even distribution of project commits is observed. The burst in the first tenth of a project's lifetime is dominating with 36 % of all commits falling into this initial period. A similar pattern can be seen in Fig. 8b, which depicts commits' distribution, that modify a Simulink model, again, averaged over all projects. From comparing Fig. 8a, b, we can conclude that the overall workload on models and the rest of the project are similarly distributed. A minor difference can be observed concerning the bursts at the beginning and the end of a project, where the first burst of development activity is even more distinct for model commits than for project commits. Figure 8c shows a nearly identical graph to Fig. 8b, as it plots the distribution of committed Simulink model modifications over a project's lifetime. The difference is that Fig. 8b counts a commit with at least one created or updated model, and Fig. 8b counts each created or updated model, individually. As the graphs are extremely similar, it follows that the average commit on one or more models over a project's lifetime modifies the same amount of models. Figure 8d shows the ratio of models under active development during a project's lifetime, averaged over all projects. A model is counted in each bin that falls between its first commit and last commit: Suppose a model is created at the very start of the project and last modified just before the project's half time, then it will be counted in the first four bins separately. It can be seen that 52 % of the models of the GitHub subset are created in the first 10 % of the project lifetime. At least half of these models were never modified again, as the second bin only holds 23 % of models that are under active development. Some models are created only in the last 10 % of a project's lifetime. On average, more than 22 % of the models are under active development during the entire duration of a project. Again, this can be interpreted as an indicator that the models within a Simulink project can be considered primary development artifacts since there are no project phases in which the models are not edited.\n\n\nRQ3: How do Simulink projects and their models evolve over time?\n\n35 projects from our corpus are hosted on GitHub, most of which are under active development for less than 50 days. The median project receives a commit every second day. Most models are rarely updated and commonly maintained by only a single developer. Bursts of commit activity can be seen at the beginning and the end of a project, with workload regarding models following a similar trend. More than a fifth of the average project's models are under active development throughout the entire lifetime of a project.\n\n\nThreats to validity\n\nWe discuss potential threats to our study results' validity, using the scheme established by Wohlin et al. [68].\n\n\nInternal validity\n\nThreats to internal validity are related to our methodology's potential systematic errors, most notably concerning the collected and analyzed data.\n\nSome of the classifications for RQ1 (origin and application domain) have been done manually, which may be biased by the subjective assessment of individual researchers or by simply overlooking relevant information. To mitigate this bias, we formed a team of four researchers to rate any manual classification task results. Their inter-rater agreement was good, as reported in Sect. 5.1. If two or more researchers were unsure how to assess a project, we abstained from making a final yet potentially misleading decision and classified the project as unclear.  The reported quantitative measures are calculated using scripts that we developed as part of this study. We took several countermeasures to rule out potential errors in these calculations. For those metrics already reported in the study of Chowdhury et al. [15], which are based on a model corpus that overlaps with ours, we have checked the plausibility and were able to reproduce their results. Further, we used the Matlab/API to parse the Simulink models, which prevents errors introduced by other custom-built Simulink parsers. We checked the results of our scripts on sample models of the corpus to assure correctness. Since our automated check on TargetLink and Embedded Coder usage did not result in any findings, we used example models for code generation provided by Matlab Simulink also. Our scripts successfully detected indications of code generation in these models. For the evolutionary metrics extracted from GitHub, we used an established tool, namely PyDriller [56], to extract meta-data from the commit history.\n\nAdditionally, in our analysis, we focused only on the information that is provided directly in the Simulink models, as it is also done in other studies [14,15,19,48]). However, Simulink models can also reference Matlab code and functions. Arguably, these are a part of the model, and most repositories do not contain just Simulink models. The analysis of Matlab code was out of the scope of our study and scripts. Our results may be affected by this threat if, for example, most of the complexity resides in the outsourced Matlab code instead of the Simulink model.\n\nThe information presented in this study is limited to the data available in the project repositories. To not miss anything, we performed manual inspection of the models in a open coding fashion [20] (cf. Sect. 4.3.1). However, if rel-evant information about the project is not reflected in the repositories or their meta-information, we may have missed it.\n\n\nConstruct validity\n\nThe construct validity concerns whether the study answers the posed research questions.\n\nWe investigated the projects and models curated in our corpus from three perspectives (context, size/organization, and evolution). However, the project and model characteristics explored for each of these perspectives are not meant to be comprehensive. Though we selected these characteristics based on existing guidelines for empirical research and related work, future empirical studies may aim for different characteristics that are not yet considered by our analysis.\n\nMoreover, our classification scheme for RQ1 may be incomplete. However, the main reason that projects could not be assigned to a dedicated origin or application domain was missing information. No additional category arose during the discussion of the researchers who did the manual classification.\n\nRegarding the evolution of projects, we rely on the commit history of GitHub. However, as with any repository, we do not have further information regarding subordinate processing of the models between commits or before the first commit. Thus, we cannot assess whether there is an underlying modeling process apart from the explicit repository commits. In particular, mainstream version control systems such as GitHub are file-based and work on a textual or binary representation of the managed artifacts, which is still considered an obstacle for the versioning of models. Thus, version control systems are not as integrated into the development process as it is the case for code-centric development.\n\n\nExternal validity\n\nThe external validity pertains to the question to which extent our results are generalizable. Raw data used in our study are taken from a limited set of data sources, namely a publicly available corpus of Simulink models and according to meta-data extracted from the subset of GitHub projects for answering RQ3. We did not do any systematic mining of open-source platforms (e.g., GitHub, SourceForge, Bit-Bucket) beyond the projects included in the corpus. More specifically, we cannot claim that the analyzed corpus is statistically representative for the population of all existing Simulink projects (not even for the publicly available ones). The reader should have in mind that access to a comprehensive population list regarding all publicly available open-source Simulink projects and models is impossible; thus, we cannot infer that any accessible population is \"representative\". However, the selected corpus provides the currently largest [14] and publicly available set of open source Simulink models from hosts like Mathworks, Source-Forge, GitHub, and other web pages, and it even includes two other compiled corpora [9,34]. This makes us confident that our results generalize to other open-source Simulink projects.\n\n\nConclusion validity\n\nConclusion validity pertains to the degree to which we can be sure that our conclusions are reasonable.\n\nDue to the lack of reliable indicators, our study does not capture the intent behind creating a model, yielding a spectrum that heavily influences a model's characteristics. On the one hand of this spectrum, there are simple example models that are deliberately kept as tiny as possible, e.g., for the sake of teaching. On the other hand of the spectrum, some models are created to model a real-world system or phenomenon, thus growing in size and complexity. Not distinguishing the models by their intent of creation may lead to the fact that a few outliers dominate many of the aggregated metrics presented in Table 1 at both ends of this spectrum. A classification of the intent could help eliminate such outliers and get a better picture of the models within each intent category. However, the aggregated values are not meant to characterize a specific class of models, but are calculated for characterizing our entire corpus.\n\nInstead of the intent behind creating a model, we classified our projects and models according to their origin and application domain (see Fig. 4.3.1), which we use to get an overview of the characteristics in each of these categories (see Fig. 6 and Fig. 7). The results may be biased by intents not equally distributed over the models' origins and application domains. For example, by chance, it might be the case that most of the models in one application domain are toy examples created for the sake of teaching, while the models in another domain are representing abstractions of real-world systems. Again, a classification by intent could help to rule out such undesired effects.\n\n\nDiscussion: suitability for empirical research\n\nIn this section, we discuss our findings together with the opinion of a Simulink expert. The expert, a partner in the context of a research project, has more than six years of experience in developing a quality assurance and optimization tools for Simulink models. In his work, he is confronted with many Simulink models and projects in various stages of development and from different application domains, including the automotive, automation, and lift domains. Please note that this consultation of an expert is not meant to be part of our research methodology as the expressiveness of just one expert's opinion is somewhat limited. However, we included the expert to help us form our interpretation less subjectively and become more informed from a practitioner's point of view. The talk with the expert started with presenting our results, followed by an open discussion on the project and model characteristics. The goal was to get an expert opinion on the general suitability of our corpus.\n\n\nSuitability from the perspective of context\n\nAlthough our corpus comprises Simulink projects of various origins, most of them have an academic background (58 %), while only 13 % originate from the industry. However, Fig. 6a-c shows that models from academic and industrial projects are not that different. Moreover, several different application domains are represented within our corpus, although the distribution is skewed toward the energy and electronics domains while others are missing (e.g., defense and automation). According to the interviewed Simulink expert, the automotive domain seems to be underrepresented within our corpus. The expert was also surprised that we did not find any indication of code generation in our models. According to the practitioner experience, industrial models are usually used for generating code, which is eventually deployed on some hardware. The expert expected more models employing Embedded Coder. He assumes that TargetLink is not used in the corpus' models because it is too expensive for opensource Simulink development.\n\nIn conclusion, our corpus does show some variation in terms of the project context. However, the corpus should not be used to compare characteristics between different domains since not all domains are covered, and the distribution is imbalanced. Additionally, the corpus is not suitable for studies on code generation since we found no evidence of code generation capabilities in the projects.\n\n\nSuitability from the perspective of model size and organization\n\nThe Simulink expert reveals that most models in our corpus are considerably smaller (median of 70 blocks per model) than the average models from the industry (his estimation is a median of about 1,000 blocks per model). Typical industry models he analyzes consist of 200-2,000 blocks, only a few exceed 20,000 blocks. Thus, the largest models in our corpus are comparable to large models in the industry. The expert also confirmed that the distribution of block types in our corpus is similar to industrial models. He was surprised by the ratio of blocks to the subsystem. In his opinion, this relation indicates rather mature models in terms of modularization. As presented in Sect. 5.2, the corpus's diversity may be useful for testing and validating tools or automated approaches. The variety of models can cover a vast spectrum of test cases. Further, for studies with more specific requirements toward certain model characteristics, the corpus can be leveraged to produce a subset under the application needs (e.g., only large models, only models with many subsystems, exclusion of library models).\n\nIn terms of model size and organization, the corpus is well suited for testing and evaluating tools. The enclosed models exhibit a wide range of characteristics. The largest ones are comparable to industry models in terms of size, which is especially suitable for scalability and performance tests. On the other hand, large models still are a minority. Therefore, the corpus may not be suitable for applications with especially high prerequisites concerning the amount of data, e.g., machine-learning approaches.\n\n\nSuitability from the perspective of project and model evolution\n\nOur corpus provides limited opportunities to research projects and model evolution. Only 35 of the 194 projects are hosted on GitHub and offer the full project commit history. The results presented in Sect. 5.3 show that most projects are rather short-lived (<50 days) and are maintained by only one developer. A low number of merge commits also indicates little collaborative work available for analysis. However, a few projects in our corpus provide opportunities to study their evolution (e.g., in a case study research). For example, a NASA project 12 is active for 2,273 days, a Mathworks Simulink tools project 13 has 589 commits, and a driving chair simulator 14 has 16 developers. Moreover, with, on average, 44 % of commits affecting models, the development of most projects indeed focuses on Simulink models. Despite the cases mentioned above, we conclude that most projects are not suitable for empirical studies from an evolutionary perspective, confirmed by the Simulink expert. According to him, the evolution characteristics extracted from GitHub do not mirror the evolution of industrial Simulink projects. Typically, more developers are involved in a project, and the number of commits steadily increases towards the end of the project or a release.\n\n\nConclusions\n\nIn this paper, we collect and investigate a set of 1,734 freely available Simulink models from 194 projects and analyze their basic characteristics and suitability for empirical research. Our analyses regarding project context, size and 12 https://github.com/nasa/T-MATS 13 https://github.com/analogdevicesinc/MathWorks_tools 14 https://github.com/Alexanderallenbrown/MotionBase/wiki organization, and evolution have shown that the projects and models are highly diverse in all aspects.\n\nIn principle, the models in our corpus are suitable for empirical research. Depending on the research goals, the subsets of the corpus might have to be selected. According to the Simulink expert, many corpus models can be considered mature enough for quality analysis purposes. Another use case might be unit testing, as many test cases can be covered with a diverse set of models. Generally, the usage of a publicly available model corpus or a subset enables researchers to replicate findings, publish subsequent studies, and use them for validation purposes.\n\nFor other kinds of empirical research, however, our corpus might be of limited value. Most industry models use code generation at some development stage, which is not represented in the corpus at all. Domain-wise, the corpus is skewed toward the energy sector. Run-time analysis with big models (e.g., 100k blocks or more) is possible with only a few models. Many projects are no longer under active development or maintenance, which may be necessary for testing up-todate Simulink versions and newer features or consulting the developers involved in a Simulink project.\n\nIn the future, we want to investigate the models' contents and their evolution. To understand their basic characteristics, most of our current metrics refer to the models' size and basic organization within projects, which could be complemented by structural complexity metrics or even qualitative analyses in the future. The evolutionary characterization might be worth examining content-related characteristics such as structural differences between versions, complementing our high-level analyses of the development history. Acquiring a bigger set of Simulink projects from GitHub akin to the method used in [52] promises to gain more generalizable statements about RQ3.\n\nAcknowledgements This work has been supported by the German Ministry of Research and Education (BMBF) within project Simu-Comp (Simulink Architecture Comprehension and Analysis) under grant 01IS18091. Special thanks to Ferry Bachmann for helping us with his expert knowledge. We also would like to thank the anonymous reviewers for their critical reading and detailed feedback, which greatly helped to improve and clarify this manuscript.\n\nFunding Open Access funding enabled and organized by Projekt DEAL.\n\nOpen Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copy-right holder. To view a copy of this licence, visit http://creativecomm ons.org/licenses/by/4.0/.\n\n\n2 https://www.mathworks.com/matlabcentral/fileexchange 3 https://sourceforge.net 4 https://github.com\n\nFig. 2\n2Goal Question Metric model of the research objective university projects. Although critical open-source repository sites could have been missed, the set by Chowdhury et al. covers a wide range of sources.\n\n\n7 https://doi.org/10.6084/m9.figshare.13636589\n\nFig. 3 Fig. 4\n34Origin of the projects comprised by our corpus Application domains in which the projects have been developed\n\nFig. 5\n5The 25 most common block types according to the number of models they are used inRQ1:In which context are Simulink projects created? We were able to determine the origin of 172 projects, 65 % of those originate from an academic context, and 17 % of projects are from industry. Further, 13 % of all projects are associated with a scientific publication. 27 % of all projects are developed in the energy domain, and another 24 % are from the electronics domain. Although one-third of all models use fixed-step solvers, none uses a standard code generator such as TargetLink or Embedded Coder.\n\nFig. 6\n6Comparison of the different project origins w.r.t a the number of models per project, b the number of blocks per model, c the number of subsystems per model, and d the Cyclomatic Complexity per model RQ2: What is the size of the Simulink models and how are they organized within their defining projects?\n\nFig. 7\n73 developers contribute to a model over its entire lifetime. The mean time span in which a model is under active development is about 204 days. On the contrary, most models have an active lifetime of only one Comparison of the different project domains w.r.t. a the number of models per project, b the number of blocks per model, c the number of subsystems per model, d the number of different block types per model, and e the Cyclomatic Complexity per model\n\nFig. 8 a\n8Distribution of commits over a project's lifetime. b the distribution of commits, that modify Simulink models over a project's lifetime. c The distribution of committed Simulink modifications over a project's lifetime. d The ratios of models under development over a project's lifetime. Note that a model will be counted in every bin from its first commit till its last in (d)\n\nTable 1\n1Calculated metrics for the project size. The metrics are reported per project and per modelMetric \nper \nMin. \nMax. \nMean \nMedian \nStd. Dev. \n\nNumber of Models \nproject \n1.0 \n252.0 \n8.93 \n1.00 \n25.84 \n\nmodel \n-\n-\n-\n-\n-\n\nNumber of Blocks \nproject \n2.0 \n319,108.0 \n6,076.56 \n553.50 \n28,786.19 \n\nmodel \n0.0 \n59,860.0 \n679.85 \n70.00 \n2,746.76 \n\nNumber of Block types \nproject \n2.0 \n199.0 \n47.59 \n40.00 \n36.46 \n\nmodel \n0.0 \n66.0 \n16.11 \n13.00 \n12.97 \n\nNumber of Signal lines \nproject \n0.0 \n41,340.0 \n1,137.76 \n158.00 \n3,863.64 \n\nmodel \n0.0 \n12,844.0 \n127.29 \n28.00 \n470.32 \n\nNumber of Subsystems \nproject \n0.0 \n3,372.0 \n118.63 \n18.50 \n391.63 \n\nmodel \n0.0 \n1,791.0 \n13.27 \n4.00 \n50.14 \n\nCyclomatic Complexity \nproject \n1.0 \n384.0 \n14.45 \n2.41 \n37.49 \n\nmodel \n1.0 \n859.0 \n10.50 \n1.00 \n39.68 \n\nHalstead Difficulty \nproject \n0.0 \n118.0 \n16.55 \n11.53 \n19.99 \n\nmodel \n0.0 \n118.0 \n10.37 \n0.00 \n15.99 \n\nHenry-Kafura Information Flow \nproject \n0.0 \n7,936.0 \n161.49 \n1.06 \n828.75 \n\nmodel \n0.0 \n96,042.9 \n131.43 \n0.00 \n2,393.25 \n\nSystem Complexity \nproject \n0.0 \n1,173.1 \n12.73 \n3.24 \n84.41 \n\nmodel \n0.0 \n1,173.1 \n4.31 \n2.00 \n29.14 \n\n\n\nTable 2 Calculated\n2metrics for \nthe projects' evolution \nProject Metric \nMin. \nMax. \nMean \nMedian \nStd. Dev. \n\nNumber of commits \n1.0 \n589.0 \n56.8 \n8.0 \n120.1 \n\nMerge commits in % \n0.0 \n16.9 \n2.4 \n0.0 \n4.5 \n\nNumber of authors \n1.0 \n16.0 \n2.7 \n1.0 \n3.4 \n\nLifetime in days \n0.0 \n2,273.0 \n250.8 \n50.0 \n511.3 \n\nCommits per day \n0.005 \n14.0 \n1.9 \n0.5 \n3.5 \n\nModel commits in % \n3.1 \n100.0 \n44.2 \n42.9 \n29.6 \n\nModel authors in % \n33.3 \n100.0 \n82.2 \n100.0 \n24.2 \n\n\n\nTable 3\n3Calculated metrics for \nthe models' evolution \nModel Metric \nMin. \nMax. \nMean \nMedian \nStd. Dev. \n\nNumber of updates \n0.0 \n42.0 \n2.3 \n1.0 \n3.6 \n\nNumber of authors \n1.0 \n4.0 \n1.3 \n1.0 \n0.5 \n\nAbs. lifetime in days* \n0.0 \n2,153.0 \n204.2 \n1.0 \n383.7 \n\nAbs. lifetime in days** \n0.0 \n7,071.0 \n1,350.1 \n885.0 \n1,381.1 \n\nRel. lifetime in %* \n0.0 \n100.0 \n23.9 \n1.0 \n33.9 \n\n*Calculated for GitHub models based on commit data \n**Calculated for all models of the corpus based on the model files' internal meta data \n\n\nhttp://www.mathworks.com/products/simulink\nhttps://doi.org/10.6084/m9.figshare.13636589\nhttps://github.com/verivital/slsf_randgen\nhttps://git-scm.com\nTiago Amorim is a soon-to-befinished Ph.D. candidate at the University of Cologne in Germany. Before, he worked as a research assistant at the Technical University of Berlin and the Fraunhofer Institute for Experimental Software Engineering, both in Germany. He also has a double master's degree in software engineering from the Technical University of Kaiserslautern in Germany and the Blekinge Institute of Technology in Sweden. In his Ph.D., Tiago studies how organizations can select Model-based Systems Engineering methods best aligned to business goals and context and how they can adopt those methods more efficiently. His research interests are process modeling, software engineering, and empirical research.\nStrategies and best practices for model-based systems engineering adoption in embedded systems industry. T Amorim, A Vogelsang, F Pudlitz, P Gersing, J Philipps, 41st International Conference on Software Engineering: Software Engineering in Practice (ICSE-SEIP). Amorim, T., Vogelsang, A., Pudlitz, F., Gersing, P., Philipps, J.: Strategies and best practices for model-based systems engineering adoption in embedded systems industry. In: 41st International Con- ference on Software Engineering: Software Engineering in Practice (ICSE-SEIP), pp. 203-212 (2019)\n\nModeling practices in open source software. O Badreddin, T C Lethbridge, M Elassar, Open Source Software: Quality Verification (OSS). E. Petrinja, G. Succi, N. El Ioini, A. SillittiBadreddin, O., Lethbridge, T.C., Elassar, M.: Modeling practices in open source software. In: E. Petrinja, G. Succi, N. El Ioini, A. Sillitti (eds.) Open Source Software: Quality Verification (OSS), pp. 127-139 (2013)\n\nInvestigating controller evolution and divergence through mining and mutation. B Balasubramaniam, H Bagheri, S Elbaum, J Bradley, 2020 ACM/IEEE 11th International Conference on Cyber-Physical Systems (ICCPS). IEEEBalasubramaniam, B., Bagheri, H., Elbaum, S., Bradley, J.: Inves- tigating controller evolution and divergence through mining and mutation. In: 2020 ACM/IEEE 11th International Conference on Cyber-Physical Systems (ICCPS), pp. 151-161. IEEE (2020)\n\nS Baltes, P Ralph, arXiv:2002.07764Sampling in software engineering research: A critical review and guidelines. arXiv preprintBaltes, S., Ralph, P.: Sampling in software engineering research: A critical review and guidelines. arXiv preprint arXiv:2002.07764 (2020)\n\nV R Basili, G Caldiera, D H Rombach, The Goal Question Metric Approach. LondonJohn Wiley & SonsBasili, V.R., Caldiera, G., Rombach, D.H.: The Goal Question Met- ric Approach, vol. I. John Wiley & Sons, London (1994)\n\nComponent and connector views in practice: An experience report. V Bertram, S Maoz, J O Ringert, B Rumpe, M Von Wenckstern, ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS). Bertram, V., Maoz, S., Ringert, J.O., Rumpe, B., von Wenckstern, M.: Component and connector views in practice: An experience report. In: ACM/IEEE 20th International Conference on Model Driven Engineering Languages and Systems (MODELS), pp. 167- 177 (2017)\n\nOn the replicability of experimental tool evaluations in model-based development. A Boll, T Kehrer, Systems Modelling and Management. Babur, \u00d6., Denil, J., Vogel-Heuser, B.ChamSpringer International PublishingBoll, A., Kehrer, T.: On the replicability of experimental tool evaluations in model-based development. In: Babur, \u00d6., Denil, J., Vogel-Heuser, B. (eds.) Systems Modelling and Management, pp. 111-130. Springer International Publishing, Cham (2020)\n\nAutomated analysis of stateflow models. H Bourbouh, P L Garoche, C Garion, A Gurfinkel, T Kahsai, X Thirioux, 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning (LPAR 2017). Bourbouh, H., Garoche, P.L., Garion, C., Gurfinkel, A., Kahsai, T., Thirioux, X.: Automated analysis of stateflow models. In: 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning (LPAR 2017), pp. 144-161 (2017)\n\nCoCoSim, a code generation framework for control/command applications an overview of CoCoSim for multi-periodic discrete Simulink models. H Bourbouh, P L Garoche, T Loquen, \u00c9 Noulard, C Pagetti, 10th European Congress on Embedded Real Time Software and Systems. 2020Bourbouh, H., Garoche, P.L., Loquen, T., Noulard, \u00c9., Pagetti, C.: CoCoSim, a code generation framework for control/command applications an overview of CoCoSim for multi-periodic discrete Simulink models. In: 10th European Congress on Embedded Real Time Software and Systems (ERTS 2020) (2020)\n\nModel-driven software engineering in practice. M Brambilla, J Cabot, M Wimmer, Morgan & Claypool PublishersBrambilla, M., Cabot, J., Wimmer, M.: Model-driven software engineering in practice. Morgan & Claypool Publishers (2017)\n\nComparing and contrasting model-driven engineering at three large companies. H Burden, R Heldal, J Whittle, ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM). Burden, H., Heldal, R., Whittle, J.: Comparing and contrasting model-driven engineering at three large companies. In: ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), pp. 1-10 (2014)\n\nUnderstanding and improving cyber-physical system models and development tools. S A Chowdhury, IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Chowdhury, S.A.: Understanding and improving cyber-physical system models and development tools. In: IEEE/ACM 40th Inter- national Conference on Software Engineering: Companion (ICSE- Companion), pp. 452-453 (2018)\n\nAutomatically finding bugs in a commercial cyber-physical system development tool chain with slforge. S A Chowdhury, S Mohian, S Mehra, S Gawsane, T T Johnson, C Csallner, IEEE/ACM 40th International Conference on Software Engineering (ICSE). Chowdhury, S.A., Mohian, S., Mehra, S., Gawsane, S., Johnson, T.T., Csallner, C.: Automatically finding bugs in a commercial cyber-physical system development tool chain with slforge. In: IEEE/ACM 40th International Conference on Software Engineer- ing (ICSE), pp. 981-992 (2018)\n\nSLEMI: Finding Simulink compiler bugs through equivalence modulo input (EMI). S A Chowdhury, S L Shrestha, T T Johnson, C Csallner, Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings, ICSE '20, p. 1-4. Association for Computing Machinery. the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings, ICSE '20, p. 1-4. Association for Computing MachineryNew York, NY, USAChowdhury, S.A., Shrestha, S.L., Johnson, T.T., Csallner, C.: SLEMI: Finding Simulink compiler bugs through equivalence modulo input (EMI). In: Proceedings of the ACM/IEEE 42nd International Conference on Software Engineering: Companion Proceedings, ICSE '20, p. 1-4. Association for Computing Machin- ery, New York, NY, USA (2020)\n\nA curated corpus of Simulink models for modelbased empirical studies. S A Chowdhury, L S Varghese, S Mohian, T T Johnson, C Csallner, IEEE/ACM 4th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS). Chowdhury, S.A., Varghese, L.S., Mohian, S., Johnson, T.T., Csallner, C.: A curated corpus of Simulink models for model- based empirical studies. In: IEEE/ACM 4th International Work- shop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS), pp. 45-48 (2018)\n\nSketching and drawing in the design of open source software. E Chung, C Jensen, K Yatani, V Kuechler, K N Truong, IEEE Symposium on Visual Languages and Human-Centric Computing (VLHCC). Chung, E., Jensen, C., Yatani, K., Kuechler, V., Truong, K.N.: Sketching and drawing in the design of open source software. In: IEEE Symposium on Visual Languages and Human-Centric Com- puting (VLHCC), pp. 195-202 (2010)\n\nA systematic mapping study of software development with GitHub. V Cosentino, J L C\u00e1novas Izquierdo, J Cabot, IEEE Access. 5Cosentino, V., C\u00e1novas Izquierdo, J.L., Cabot, J.: A systematic mapping study of software development with GitHub. IEEE Access 5, 7173-7192 (2017)\n\nOn the design of an architecture framework and quality evaluation for automotive software systems. Y Dajsuren, Department of Mathematics and Computer Science, Technische Universiteit EindhovenPh.D. thesisDajsuren, Y.: On the design of an architecture framework and quality evaluation for automotive software systems. Ph.D. thesis, Department of Mathematics and Computer Science, Technische Universiteit Eindhoven (2015)\n\nSimulink models are also software: Modularity assessment. Y Dajsuren, M G Van Den Brand, A Serebrenik, S Roubtsov, 9th International ACM Sigsoft Conference on Quality of Software Architectures (QoSA). Dajsuren, Y., van den Brand, M.G., Serebrenik, A., Roubtsov, S.: Simulink models are also software: Modularity assessment. In: 9th International ACM Sigsoft Conference on Quality of Software Architectures (QoSA), pp. 99-106 (2013)\n\nDeveloping and using a codebook for the analysis of interview data: An example from a professional development research project. J Decuir-Gunby, P Marshall, A Mcculloch, Field Methods J. 23DeCuir-Gunby, J., Marshall, P., Mcculloch, A.: Developing and using a codebook for the analysis of interview data: An example from a professional development research project. Field Methods J. 23, 136-155 (2011)\n\nHow do open source communities document software architecture: An exploratory survey. W Ding, P Liang, A Tang, H Vliet, M Shahin, 19th International Conference on Engineering of Complex Computer Systems (ICECCS). Ding, W., Liang, P., Tang, A., v. Vliet, H., Shahin, M.: How do open source communities document software architecture: An exploratory survey. In: 19th International Conference on Engineer- ing of Complex Computer Systems (ICECCS), pp. 136-145 (2014)\n\nBoa: Ultra-largescale software repository and source-code mining. R Dyer, H A Nguyen, H Rajan, T N Nguyen, ACM Trans. Softw. Eng. Methodol. 251Dyer, R., Nguyen, H.A., Rajan, H., Nguyen, T.N.: Boa: Ultra-large- scale software repository and source-code mining. ACM Trans. Softw. Eng. Methodol. 25(1), 1-34 (2015)\n\nAnalysing software repositories to understand software evolution. M D&apos;ambros, H Gall, M Lanza, M Pinzger, Software evolution. SpringerD'Ambros, M., Gall, H., Lanza, M., Pinzger, M.: Analysing soft- ware repositories to understand software evolution. In: Software evolution, pp. 37-67. Springer (2008)\n\nG Ernst, P Arcaini, A Donze, G Fainekos, L Mathesen, G Pedrielli, S Yaghoubi, Y Yamagata, Z Zhang, Arch-comp 2019 category report: Falsification. In: ARCH@ CPSIoTWeek. Ernst, G., Arcaini, P., Donze, A., Fainekos, G., Mathesen, L., Pedrielli, G., Yaghoubi, S., Yamagata, Y., Zhang, Z.: Arch-comp 2019 category report: Falsification. In: ARCH@ CPSIoTWeek, pp. 129-140 (2019)\n\nA systematic mapping study on mining software repositories. F De, M A Farias, R Novais, M C J\u00fanior, L P Da Silva Carvalho, M Mendon\u00e7a, R O Sp\u00ednola, 31st Annual ACM Symposium on Applied Computing. de F. Farias, M.A., Novais, R., J\u00fanior, M.C., da Silva Carvalho, L.P., Mendon\u00e7a, M., Sp\u00ednola, R.O.: A systematic mapping study on mining software repositories. In: 31st Annual ACM Symposium on Applied Computing, pp. 1472-1479 (2016)\n\nSupporting semi-automatic co-evolution of architecture and fault tree models. S Getir, L Grunske, A Van Hoorn, T Kehrer, Y Noller, M Tichy, J. Syst. Softw. 142Getir, S., Grunske, L., van Hoorn, A., Kehrer, T., Noller, Y., Tichy, M.: Supporting semi-automatic co-evolution of architecture and fault tree models. J. Syst. Softw. 142, 115-135 (2018)\n\nThe road ahead for mining software repositories. A E Hassan, Frontiers of Software Maintenance. IEEEHassan, A.E.: The road ahead for mining software repositories. In: Frontiers of Software Maintenance, pp. 48-57. IEEE (2008)\n\nThe quest for open source projects that use UML: mining GitHub. R Hebig, T Ho-Quang, M R V Chaudron, G Robles, M A Fern\u00e1ndez, The ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems (MODELS). B. Baudry, B. CombemaleHebig, R., Ho-Quang, T., Chaudron, M.R.V., Robles, G., Fern\u00e1n- dez, M.A.: The quest for open source projects that use UML: mining GitHub. In: B. Baudry, B. Combemale (eds.) The ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems (MODELS), pp. 173-183 (2016)\n\nLanguage evolution in practice: The history of GMF. M Herrmannsdoerfer, D Ratiu, G Wachsmuth, International Conference on Software Language Engineering (SLE). SpringerHerrmannsdoerfer, M., Ratiu, D., Wachsmuth, G.: Language evo- lution in practice: The history of GMF. In: International Conference on Software Language Engineering (SLE), pp. 3-22. Springer (2009)\n\nPractices and perceptions of UML use in open source projects. T Ho-Quang, R Hebig, G Robles, M R Chaudron, M A Fernandez, IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP). IEEEHo-Quang, T., Hebig, R., Robles, G., Chaudron, M.R., Fernan- dez, M.A.: Practices and perceptions of UML use in open source projects. In: IEEE/ACM 39th International Conference on Software Engineering: Software Engineering in Practice Track (ICSE-SEIP), pp. 203-212. IEEE (2017)\n\nImproved restricted control set model predictive control (ircs-mpc) based maximum power point tracking of photovoltaic module. A Hussain, H A Sher, A F Murtaza, K Al-Haddad, IEEE Access. 7Hussain, A., Sher, H.A., Murtaza, A.F., Al-Haddad, K.: Improved restricted control set model predictive control (ircs-mpc) based maximum power point tracking of photovoltaic module. IEEE Access 7, 149,422-149,432 (2019)\n\nEmpirical assessment of MDE in industry. J Hutchinson, J Whittle, M Rouncefield, S Kristoffersen, 33rd International Conference on Software Engineering (ICSE). Hutchinson, J., Whittle, J., Rouncefield, M., Kristoffersen, S.: Empirical assessment of MDE in industry. In: 33rd International Conference on Software Engineering (ICSE), pp. 471-480 (2011)\n\nOptimal test case generation for Simulink models using slicing. Z Jiang, X Wu, Z Dong, M Mu, IEEE International Conference on Software Quality, Reliability and Security Companion (QRS-C). Jiang, Z., Wu, X., Dong, Z., Mu, M.: Optimal test case generation for Simulink models using slicing. In: IEEE International Con- ference on Software Quality, Reliability and Security Companion (QRS-C), pp. 363-369 (2017)\n\nBenchmarks for model transformations and conformance checking. X Jin, J V Deshmukh, J Kapinski, K Ueda, K Butts, 1st International Workshop on Applied Verification for Continuous and Hybrid Systems (ARCH). Jin, X., Deshmukh, J.V., Kapinski, J., Ueda, K., Butts, K.: Bench- marks for model transformations and conformance checking. In: 1st International Workshop on Applied Verification for Continuous and Hybrid Systems (ARCH) (2014)\n\nA survey and taxonomy of approaches for mining software repositories in the context of software evolution. H Kagdi, M L Collard, J I Maletic, J. Softw. Maint. Evol. Res. Pract. 192Kagdi, H., Collard, M.L., Maletic, J.I.: A survey and taxonomy of approaches for mining software repositories in the context of software evolution. J. Softw. Maint. Evol. Res. Pract. 19(2), 77- 131 (2007)\n\nThe promises and perils of mining github. E Kalliamvakou, G Gousios, K Blincoe, L Singer, D M German, D Damian, 11th Working Conference on Mining Software Repositories (MSR). Kalliamvakou, E., Gousios, G., Blincoe, K., Singer, L., German, D.M., Damian, D.: The promises and perils of mining github. In: 11th Working Conference on Mining Software Repositories (MSR), pp. 92-101 (2014)\n\nA rule-based approach to the semantic lifting of model differences in the context of model versioning. T Kehrer, U Kelter, G Taentzer, 26th IEEE/ACM International Conference on Automated Software Engineering. IEEEKehrer, T., Kelter, U., Taentzer, G.: A rule-based approach to the semantic lifting of model differences in the context of model versioning. In: 26th IEEE/ACM International Conference on Auto- mated Software Engineering, pp. 163-172. IEEE (2011)\n\nComputing krippendorff's alpha-reliability. University of Pennsylvania. K Krippendorff, Tech. repKrippendorff, K.: Computing krippendorff's alpha-reliability. Uni- versity of Pennsylvania, Tech. rep (2011)\n\nOn the usage of UML: Initial results of analyzing open UML models. P Langer, T Mayerhofer, M Wimmer, G Kappel, H.G. Fill, D. Karagiannis, U. ReimerLanger, P., Mayerhofer, T., Wimmer, M., Kappel, G.: On the usage of UML: Initial results of analyzing open UML models. In: H.G. Fill, D. Karagiannis, U. Reimer (eds.) Modellierung, pp. 289-304 (2014)\n\nTrends in embedded software engineering. P Liggesmeyer, M Trapp, IEEE Softw. 263Liggesmeyer, P., Trapp, M.: Trends in embedded software engi- neering. IEEE Softw. 26(3), 19-25 (2009)\n\nA complexity measure. T J Mccabe, IEEE Transactions on software Engineering SE. 24McCabe, T.J.: A complexity measure. IEEE Transactions on soft- ware Engineering SE-2(4), 308-320 (1976)\n\nDesign and simulations of dual clutch transmission for hybrid electric vehicles. V T Minh, A Moustafa, M Tamre, Int. J. Electr. Hybrid Veh. 94Minh, V.T., Moustafa, A., Tamre, M.: Design and simulations of dual clutch transmission for hybrid electric vehicles. Int. J. Electr. Hybrid Veh. 9(4), 302-321 (2017)\n\nAn empirical study of the state of the practice and acceptance of modeldriven engineering in four industrial cases. P Mohagheghi, W Gilani, A Stefanescu, M A Fernandez, Empir. Softw. Eng. 181Mohagheghi, P., Gilani, W., Stefanescu, A., Fernandez, M.A.: An empirical study of the state of the practice and acceptance of model- driven engineering in four industrial cases. Empir. Softw. Eng. 18(1), 89-116 (2012)\n\nThe relevance of model-driven engineering thirty years from now. G Mussbacher, D Amyot, R Breu, J M Bruel, B H C Cheng, P Collet, B Combemale, R B France, R Heldal, J Hill, J Kienzle, M Sch\u00f6ttle, F Steimann, D Stikkolorum, J Whittle, Model-Driven Engineering Languages and Systems (MODELS). J. Dingel, W. Schulte, I. Ramos, S. Abrah\u00e3o, E. InsfranMussbacher, G., Amyot, D., Breu, R., Bruel, J.M., Cheng, B.H.C., Collet, P., Combemale, B., France, R.B., Heldal, R., Hill, J., Kien- zle, J., Sch\u00f6ttle, M., Steimann, F., Stikkolorum, D., Whittle, J.: The relevance of model-driven engineering thirty years from now. In: J. Dingel, W. Schulte, I. Ramos, S. Abrah\u00e3o, E. Insfran (eds.) Model-Driven Engineering Languages and Systems (MODELS), pp. 183-200 (2014)\n\nGenerating large EMF models efficiently -A rule-based, configurable approach. N Nassar, J Kosiol, T Kehrer, G Taentzer, Fundamental Approaches to Software Engineering. Springer12076Nassar, N., Kosiol, J., Kehrer, T., Taentzer, G.: Generating large EMF models efficiently -A rule-based, configurable approach. In: Fundamental Approaches to Software Engineering, Lecture Notes in Computer Science, vol. 12076, pp. 224-244. Springer (2020)\n\nMofuzz: A fuzzer suite for testing model-driven software engineering tools. H L Nguyen, N Nassar, T Kehrer, L Grunske, 35th IEEE/ACM International Conference on Automated Software Engineering (ASE). IEEENguyen, H.L., Nassar, N., Kehrer, T., Grunske, L.: Mofuzz: A fuzzer suite for testing model-driven software engineering tools. In: 35th IEEE/ACM International Conference on Automated Soft- ware Engineering (ASE), pp. 1103-1115. IEEE (2020)\n\nHistory-based model repair recommendations. M Ohrndorf, C Pietsch, U Kelter, L Grunske, T Kehrer, ACM Trans. Softw. Eng. Methodol. 302Ohrndorf, M., Pietsch, C., Kelter, U., Grunske, L., Kehrer, T.: History-based model repair recommendations. ACM Trans. Softw. Eng. Methodol. 30(2) (2021)\n\nTailoring complexity metrics for Simulink models. M Olszewska, Y Dajsuren, H Altinger, A Serebrenik, M Wald\u00e9n, M G Van Den Brand, Proccedings of the 10th European Conference on Software Architecture Workshops. cedings of the 10th European Conference on Software Architecture WorkshopsNew York, NY, United StatesAssociation for Computing MachineryOlszewska, M., Dajsuren, Y., Altinger, H., Serebrenik, A., Wald\u00e9n, M., van den Brand, M.G.: Tailoring complexity metrics for Simulink models. In: Proccedings of the 10th European Confer- ence on Software Architecture Workshops, pp. 1-7. Association for Computing Machinery, New York, NY, United States (2016)\n\nUML in practice. M Petre, International Conference on Software Engineering (ICSE). Petre, M.: UML in practice. In: International Conference on Soft- ware Engineering (ICSE), pp. 722-731 (2013)\n\nP Ralph, S Baltes, D Bianculli, Y Dittrich, M Felderer, ACM SIGSOFT empirical standards. Ralph, P., Baltes, S., Bianculli, D., Dittrich, Y., Felderer, M., et al.: ACM SIGSOFT empirical standards (2020)\n\nMutation testing based evaluation of formal verification tools. A C Rao, A Raouf, G Dhadyalla, V Pasupuleti, International Conference on Dependable Systems and Their Applications (DSA). Rao, A.C., Raouf, A., Dhadyalla, G., Pasupuleti, V.: Mutation testing based evaluation of formal verification tools. In: Interna- tional Conference on Dependable Systems and Their Applications (DSA), pp. 1-7 (2017)\n\nOn-the-fly translation and execution of ocl-like queries on Simulink models. B Sanchez, A Zolotas, H H Rodriguez, D Kolovos, R Paige, ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS). Sanchez, B., Zolotas, A., Rodriguez, H.H., Kolovos, D., Paige, R.: On-the-fly translation and execution of ocl-like queries on Simulink models. In: ACM/IEEE 22nd International Conference on Model Driven Engineering Languages and Systems (MODELS), pp. 205- 215 (2019)\n\nOn the use of product-line variants as experimental subjects for clone-and-own research: a case study. A Schulthei\u00df, P M Bittner, T Kehrer, T Th\u00fcm, Proceedings of the 24th ACM Conference on Systems and Software Product Line. the 24th ACM Conference on Systems and Software Product LineASchulthei\u00df, A., Bittner, P.M., Kehrer, T., Th\u00fcm, T.: On the use of product-line variants as experimental subjects for clone-and-own research: a case study. In: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, pp. 1-6 (2020)\n\nA graph solver for the automated generation of consistent domain-specific models. O Semer\u00e1th, A S Nagy, D Varr\u00f3, 40th International Conference on Software Engineering (ICSE). Semer\u00e1th, O., Nagy, A.S., Varr\u00f3, D.: A graph solver for the auto- mated generation of consistent domain-specific models. In: 40th International Conference on Software Engineering (ICSE), pp. 969-980 (2018)\n\nAutomatic model generation strategies for model transformation testing. S Sen, B Baudry, J M Mottu, International Conference on Theory and Practice of Model Transformations. SpringerSen, S., Baudry, B., Mottu, J.M.: Automatic model generation strategies for model transformation testing. In: International Con- ference on Theory and Practice of Model Transformations, pp. 148-164. Springer (2009)\n\nPydriller: Python framework for mining software repositories. D Spadini, M Aniche, A Bacchelli, 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE). Spadini, D., Aniche, M., Bacchelli, A.: Pydriller: Python frame- work for mining software repositories. In: 26th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering (ESEC/FSE), pp. 908- 911 (2018)\n\nTowards a taxonomy for simulink model mutations. M Stephan, M H Alalfi, J R Cordy, 2014 IEEE Seventh International Conference on Software Testing, Verification and Validation Workshops. Stephan, M., Alalfi, M.H., Cordy, J.R.: Towards a taxonomy for simulink model mutations. In: 2014 IEEE Seventh International Conference on Software Testing, Verification and Validation Work- shops, pp. 206-215 (2014)\n\nReporting empirical research in open source software: The state of practice. K J Stol, Ali Babar, M , Open Source Ecosystems: Diverse Communities Interacting. C. Boldyreff, K. Crowston, B. Lundell, A.I. WassermanStol, K.J., Ali Babar, M.: Reporting empirical research in open source software: The state of practice. In: C. Boldyreff, K. Crow- ston, B. Lundell, A.I. Wasserman (eds.) Open Source Ecosystems: Diverse Communities Interacting, pp. 156-169 (2009)\n\nThe abc of software engineering research. K J Stol, B Fitzgerald, ACM Trans. Softw. Eng. Methodol. 273Stol, K.J., Fitzgerald, B.: The abc of software engineering research. ACM Trans. Softw. Eng. Methodol. 27(3) (2018)\n\nOn the impact of size to the understanding of UML diagrams. Software and Systems Modeling. H St\u00f6rrle, SoSyM. 171St\u00f6rrle, H.: On the impact of size to the understanding of UML diagrams. Software and Systems Modeling (SoSyM 17(1), 115- 134 (2018)\n\nSynthesizing software models: generating train station models automatically. A Svendsen, \u00d8 Haugen, B M\u00f8ller-Pedersen, International SDL Forum. SpringerSvendsen, A., Haugen, \u00d8., M\u00f8ller-Pedersen, B.: Synthesizing soft- ware models: generating train station models automatically. In: International SDL Forum, pp. 38-53. Springer (2011)\n\nThe qualitas corpus: A curated collection of java code for empirical studies. E Tempero, C Anslow, J Dietrich, T Han, J Li, M Lumpe, H Melton, J Noble, 10.1109/APSEC.2010.462010 Asia Pacific Software Engineering Conference. Tempero, E., Anslow, C., Dietrich, J., Han, T., Li, J., Lumpe, M., Melton, H., Noble, J.: The qualitas corpus: A curated collection of java code for empirical studies. In: 2010 Asia Pacific Software Engineering Conference, pp. 336-345 (2010). 10.1109/APSEC.2010.46\n\nA scalable monte-carlo test-case generation tool for large and complex Simulink models. T Tomita, D Ishii, T Murakami, S Takeuchi, T Aoki, IEEE/ACM 11th International Workshop on Modelling in Software Engineering (MiSE). Tomita, T., Ishii, D., Murakami, T., Takeuchi, S., Aoki, T.: A scal- able monte-carlo test-case generation tool for large and complex Simulink models. In: IEEE/ACM 11th International Workshop on Modelling in Software Engineering (MiSE), pp. 39-46 (2019)\n\nFeature dependencies in automotive software systems: extent, awareness, and refactoring. A Vogelsang, J. Syst. Softw. 160Vogelsang, A.: Feature dependencies in automotive software sys- tems: extent, awareness, and refactoring. J. Syst. Softw. 160, 1-15 (2020)\n\nViews on quality requirements in academia and practice: commonalities, differences, and context-dependent grey areas. A Vogelsang, J Eckhardt, D Mendez, M Berger, Inf. Softw. Technol. 121Vogelsang, A., Eckhardt, J., Mendez, D., Berger, M.: Views on quality requirements in academia and practice: commonalities, dif- ferences, and context-dependent grey areas. Inf. Softw. Technol. 121, 106-253 (2020)\n\nModel-Driven Software Development: Technology, Engineering, Management. M V\u00f6lter, T Stahl, J Bettin, A Haase, S Helsen, John Wiley & SonsLondonV\u00f6lter, M., Stahl, T., Bettin, J., Haase, A., Helsen, S.: Model-Driven Software Development: Technology, Engineering, Management. John Wiley & Sons, London (2013)\n\nThe box plot: a simple visual method to interpret data. D F Williamson, R A Parker, J S Kendrick, Ann. Intern. Med. 11011Williamson, D.F., Parker, R.A., Kendrick, J.S.: The box plot: a simple visual method to interpret data. Ann. Intern. Med. 110(11), 916-921 (1989)\n\nExperimentation in software engineering. C Wohlin, P Runeson, M H\u00f6st, M C Ohlsson, B Regnell, A Wessl\u00e9n, Springer Science & Business MediaWohlin, C., Runeson, P., H\u00f6st, M., Ohlsson, M.C., Regnell, B., Wessl\u00e9n, A.: Experimentation in software engineering. Springer Science & Business Media (2012)\n\nA framework for capturing, statistically modeling and analyzing the evolution of software models. H S Yazdi, L Angelis, T Kehrer, U Kelter, J. Syst. Softw. 118Yazdi, H.S., Angelis, L., Kehrer, T., Kelter, U.: A framework for capturing, statistically modeling and analyzing the evolution of software models. J. Syst. Softw. 118, 176-207 (2016)\n\nAnalysis and prediction of design model evolution using time series. H S Yazdi, M Mirbolouki, P Pietsch, T Kehrer, U Kelter, International Conference on Advanced Information Systems Engineering. SpringerYazdi, H.S., Mirbolouki, M., Pietsch, P., Kehrer, T., Kelter, U.: Analysis and prediction of design model evolution using time series. In: International Conference on Advanced Information Sys- tems Engineering, pp. 1-15. Springer (2014)\n\nStatistical analysis of changes for synthesizing realistic test models. H S Yazdi, P Pietsch, T Kehrer, U Kelter, Software Engineering. Yazdi, H.S., Pietsch, P., Kehrer, T., Kelter, U.: Statistical analysis of changes for synthesizing realistic test models. Software Engi- neering 2013, (2013)\n\nSynthesizing realistic test models. H S Yazdi, P Pietsch, T Kehrer, U Kelter, Comput. Sci. Res. Dev. 303-4Yazdi, H.S., Pietsch, P., Kehrer, T., Kelter, U.: Synthesizing realistic test models. Comput. Sci. Res. Dev. 30(3-4), 231-253 (2015)\n", "annotations": {"author": "[{\"end\":213,\"start\":153},{\"end\":311,\"start\":214},{\"end\":388,\"start\":312},{\"end\":446,\"start\":389},{\"end\":529,\"start\":447},{\"end\":540,\"start\":530},{\"end\":559,\"start\":541},{\"end\":575,\"start\":560},{\"end\":595,\"start\":576},{\"end\":609,\"start\":596},{\"end\":622,\"start\":610}]", "publisher": null, "author_last_name": "[{\"end\":167,\"start\":163},{\"end\":232,\"start\":222},{\"end\":326,\"start\":320},{\"end\":400,\"start\":394},{\"end\":464,\"start\":455},{\"end\":558,\"start\":549},{\"end\":574,\"start\":570},{\"end\":594,\"start\":584},{\"end\":608,\"start\":602},{\"end\":621,\"start\":615}]", "author_first_name": "[{\"end\":162,\"start\":153},{\"end\":221,\"start\":214},{\"end\":313,\"start\":312},{\"end\":319,\"start\":314},{\"end\":393,\"start\":389},{\"end\":454,\"start\":447},{\"end\":534,\"start\":530},{\"end\":539,\"start\":535},{\"end\":548,\"start\":541},{\"end\":569,\"start\":560},{\"end\":583,\"start\":576},{\"end\":601,\"start\":596},{\"end\":614,\"start\":610}]", "author_affiliation": "[{\"end\":212,\"start\":169},{\"end\":310,\"start\":266},{\"end\":387,\"start\":351},{\"end\":445,\"start\":402},{\"end\":528,\"start\":492}]", "title": "[{\"end\":131,\"start\":1},{\"end\":753,\"start\":623}]", "venue": null, "abstract": "[{\"end\":3241,\"start\":985}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3366,\"start\":3362},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":3369,\"start\":3366},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":3831,\"start\":3827},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4017,\"start\":4014},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4020,\"start\":4017},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":4023,\"start\":4020},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":4026,\"start\":4023},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":4139,\"start\":4136},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":4207,\"start\":4204},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4210,\"start\":4207},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":4213,\"start\":4210},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":4216,\"start\":4213},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":4219,\"start\":4216},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":4712,\"start\":4708},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":4715,\"start\":4712},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":4718,\"start\":4715},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":4721,\"start\":4718},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":4724,\"start\":4721},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4892,\"start\":4888},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":5058,\"start\":5055},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5061,\"start\":5058},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6665,\"start\":6664},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":7381,\"start\":7377},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":9546,\"start\":9542},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9832,\"start\":9828},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":10085,\"start\":10081},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":10406,\"start\":10402},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":10690,\"start\":10686},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":10776,\"start\":10772},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":10779,\"start\":10776},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":10990,\"start\":10986},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":11666,\"start\":11662},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":11806,\"start\":11803},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":12418,\"start\":12414},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13332,\"start\":13329},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":13467,\"start\":13463},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":13598,\"start\":13594},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":13601,\"start\":13598},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":13604,\"start\":13601},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":13607,\"start\":13604},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":13610,\"start\":13607},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13678,\"start\":13675},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":13681,\"start\":13678},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":13684,\"start\":13681},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":13946,\"start\":13942},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":14039,\"start\":14035},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":14157,\"start\":14153},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":14160,\"start\":14157},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":14260,\"start\":14257},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":14377,\"start\":14373},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":14576,\"start\":14572},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":14921,\"start\":14917},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":14924,\"start\":14921},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":14928,\"start\":14924},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":14932,\"start\":14928},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":14936,\"start\":14932},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":14939,\"start\":14936},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":15051,\"start\":15047},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":15055,\"start\":15051},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":15059,\"start\":15055},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":15063,\"start\":15059},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":15392,\"start\":15388},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":16238,\"start\":16234},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":16241,\"start\":16238},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":16244,\"start\":16241},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":16247,\"start\":16244},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":16250,\"start\":16247},{\"attributes\":{\"ref_id\":\"b61\"},\"end\":16269,\"start\":16265},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":16368,\"start\":16364},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":16371,\"start\":16368},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":17051,\"start\":17047},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":17194,\"start\":17191},{\"end\":17362,\"start\":17359},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":17694,\"start\":17690},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":17697,\"start\":17694},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":17717,\"start\":17713},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":18995,\"start\":18992},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":19244,\"start\":19240},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":19285,\"start\":19281},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":19330,\"start\":19329},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":19365,\"start\":19361},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":19445,\"start\":19441},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":19500,\"start\":19497},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":19986,\"start\":19982},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":22429,\"start\":22425},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":24779,\"start\":24775},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":25011,\"start\":25010},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":26326,\"start\":26322},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":26481,\"start\":26477},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":27027,\"start\":27023},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":27392,\"start\":27388},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":28745,\"start\":28741},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":28748,\"start\":28745},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":28902,\"start\":28901},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":31975,\"start\":31971},{\"end\":32424,\"start\":32418},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":38431,\"start\":38427},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":51145,\"start\":51141},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":52138,\"start\":52134},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":52859,\"start\":52855},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":53064,\"start\":53060},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":53067,\"start\":53064},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":53070,\"start\":53067},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":53073,\"start\":53070},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":53673,\"start\":53669},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":56389,\"start\":56385},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":56569,\"start\":56566},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":56572,\"start\":56569},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":66197,\"start\":66193}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":67721,\"start\":67618},{\"attributes\":{\"id\":\"fig_1\"},\"end\":67935,\"start\":67722},{\"attributes\":{\"id\":\"fig_2\"},\"end\":67984,\"start\":67936},{\"attributes\":{\"id\":\"fig_3\"},\"end\":68110,\"start\":67985},{\"attributes\":{\"id\":\"fig_4\"},\"end\":68710,\"start\":68111},{\"attributes\":{\"id\":\"fig_5\"},\"end\":69023,\"start\":68711},{\"attributes\":{\"id\":\"fig_6\"},\"end\":69491,\"start\":69024},{\"attributes\":{\"id\":\"fig_7\"},\"end\":69879,\"start\":69492},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":71007,\"start\":69880},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":71467,\"start\":71008},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":71983,\"start\":71468}]", "paragraph": "[{\"end\":3832,\"start\":3257},{\"end\":4725,\"start\":3834},{\"end\":5387,\"start\":4727},{\"end\":6800,\"start\":5389},{\"end\":8679,\"start\":6842},{\"end\":9272,\"start\":8681},{\"end\":9651,\"start\":9274},{\"end\":10691,\"start\":9713},{\"end\":12928,\"start\":10693},{\"end\":14162,\"start\":12987},{\"end\":14744,\"start\":14164},{\"end\":15297,\"start\":14746},{\"end\":16157,\"start\":15299},{\"end\":16567,\"start\":16159},{\"end\":17718,\"start\":16605},{\"end\":18650,\"start\":17720},{\"end\":18924,\"start\":18652},{\"end\":19129,\"start\":18926},{\"end\":20275,\"start\":19148},{\"end\":20873,\"start\":20277},{\"end\":21022,\"start\":20875},{\"end\":21219,\"start\":21063},{\"end\":21658,\"start\":21221},{\"end\":22034,\"start\":21660},{\"end\":23453,\"start\":22036},{\"end\":23870,\"start\":23455},{\"end\":24262,\"start\":23872},{\"end\":24530,\"start\":24264},{\"end\":26188,\"start\":24580},{\"end\":26685,\"start\":26190},{\"end\":26843,\"start\":26687},{\"end\":27028,\"start\":26864},{\"end\":27189,\"start\":27030},{\"end\":27393,\"start\":27223},{\"end\":27676,\"start\":27395},{\"end\":27887,\"start\":27704},{\"end\":28522,\"start\":27925},{\"end\":29144,\"start\":28559},{\"end\":30208,\"start\":29146},{\"end\":30950,\"start\":30210},{\"end\":31397,\"start\":30952},{\"end\":31538,\"start\":31415},{\"end\":33108,\"start\":31563},{\"end\":33403,\"start\":33154},{\"end\":34135,\"start\":33405},{\"end\":34409,\"start\":34137},{\"end\":35523,\"start\":34411},{\"end\":36659,\"start\":35525},{\"end\":37327,\"start\":36661},{\"end\":38690,\"start\":37329},{\"end\":40525,\"start\":38692},{\"end\":40978,\"start\":40527},{\"end\":41991,\"start\":41016},{\"end\":42965,\"start\":41993},{\"end\":43419,\"start\":42967},{\"end\":44246,\"start\":43421},{\"end\":47007,\"start\":44283},{\"end\":50425,\"start\":47009},{\"end\":51010,\"start\":50494},{\"end\":51146,\"start\":51034},{\"end\":51315,\"start\":51168},{\"end\":52906,\"start\":51317},{\"end\":53473,\"start\":52908},{\"end\":53831,\"start\":53475},{\"end\":53941,\"start\":53854},{\"end\":54414,\"start\":53943},{\"end\":54713,\"start\":54416},{\"end\":55416,\"start\":54715},{\"end\":56665,\"start\":55438},{\"end\":56792,\"start\":56689},{\"end\":57724,\"start\":56794},{\"end\":58411,\"start\":57726},{\"end\":59458,\"start\":58462},{\"end\":60529,\"start\":59506},{\"end\":60925,\"start\":60531},{\"end\":62096,\"start\":60993},{\"end\":62610,\"start\":62098},{\"end\":63944,\"start\":62678},{\"end\":64446,\"start\":63960},{\"end\":65008,\"start\":64448},{\"end\":65580,\"start\":65010},{\"end\":66255,\"start\":65582},{\"end\":66695,\"start\":66257},{\"end\":66763,\"start\":66697},{\"end\":67617,\"start\":66765}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":26863,\"start\":26844},{\"attributes\":{\"id\":\"formula_1\"},\"end\":27222,\"start\":27190},{\"attributes\":{\"id\":\"formula_2\"},\"end\":27703,\"start\":27677},{\"attributes\":{\"id\":\"formula_3\"},\"end\":27924,\"start\":27888}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":33189,\"start\":33182},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":45195,\"start\":45188},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":45266,\"start\":45259},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":45898,\"start\":45891},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":46656,\"start\":46649},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":47201,\"start\":47194},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":57413,\"start\":57406}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":3255,\"start\":3243},{\"attributes\":{\"n\":\"2\"},\"end\":6840,\"start\":6803},{\"attributes\":{\"n\":\"3\"},\"end\":9666,\"start\":9654},{\"attributes\":{\"n\":\"3.1\"},\"end\":9711,\"start\":9669},{\"attributes\":{\"n\":\"3.2\"},\"end\":12985,\"start\":12931},{\"attributes\":{\"n\":\"4\"},\"end\":16582,\"start\":16570},{\"attributes\":{\"n\":\"4.1\"},\"end\":16603,\"start\":16585},{\"attributes\":{\"n\":\"4.2\"},\"end\":19146,\"start\":19132},{\"attributes\":{\"n\":\"4.3\"},\"end\":21038,\"start\":21025},{\"attributes\":{\"n\":\"4.3.1\"},\"end\":21061,\"start\":21041},{\"attributes\":{\"n\":\"4.3.2\"},\"end\":24578,\"start\":24533},{\"attributes\":{\"n\":\"4.3.3\"},\"end\":28557,\"start\":28525},{\"attributes\":{\"n\":\"5\"},\"end\":31413,\"start\":31400},{\"attributes\":{\"n\":\"5.1\"},\"end\":31561,\"start\":31541},{\"attributes\":{\"n\":\"5.2\"},\"end\":33152,\"start\":33111},{\"end\":41014,\"start\":40981},{\"attributes\":{\"n\":\"5.3\"},\"end\":44281,\"start\":44249},{\"end\":50492,\"start\":50428},{\"attributes\":{\"n\":\"6\"},\"end\":51032,\"start\":51013},{\"attributes\":{\"n\":\"6.1\"},\"end\":51166,\"start\":51149},{\"attributes\":{\"n\":\"6.2\"},\"end\":53852,\"start\":53834},{\"attributes\":{\"n\":\"6.3\"},\"end\":55436,\"start\":55419},{\"attributes\":{\"n\":\"6.4\"},\"end\":56687,\"start\":56668},{\"attributes\":{\"n\":\"7\"},\"end\":58460,\"start\":58414},{\"attributes\":{\"n\":\"7.1\"},\"end\":59504,\"start\":59461},{\"attributes\":{\"n\":\"7.2\"},\"end\":60991,\"start\":60928},{\"attributes\":{\"n\":\"7.3\"},\"end\":62676,\"start\":62613},{\"attributes\":{\"n\":\"8\"},\"end\":63958,\"start\":63947},{\"end\":67729,\"start\":67723},{\"end\":67999,\"start\":67986},{\"end\":68118,\"start\":68112},{\"end\":68718,\"start\":68712},{\"end\":69031,\"start\":69025},{\"end\":69501,\"start\":69493},{\"end\":69888,\"start\":69881},{\"end\":71027,\"start\":71009},{\"end\":71476,\"start\":71469}]", "table": "[{\"end\":71007,\"start\":69981},{\"end\":71467,\"start\":71029},{\"end\":71983,\"start\":71478}]", "figure_caption": "[{\"end\":67721,\"start\":67620},{\"end\":67935,\"start\":67731},{\"end\":67984,\"start\":67938},{\"end\":68110,\"start\":68002},{\"end\":68710,\"start\":68120},{\"end\":69023,\"start\":68720},{\"end\":69491,\"start\":69033},{\"end\":69879,\"start\":69503},{\"end\":69981,\"start\":69890}]", "figure_ref": "[{\"end\":7325,\"start\":7317},{\"end\":9396,\"start\":9390},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":19024,\"start\":19018},{\"end\":31640,\"start\":31634},{\"end\":32307,\"start\":32299},{\"end\":32794,\"start\":32788},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":36777,\"start\":36769},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":38825,\"start\":38818},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":39120,\"start\":39111},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":39810,\"start\":39801},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40542,\"start\":40535},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":41396,\"start\":41387},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":42029,\"start\":42022},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":42330,\"start\":42321},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":42433,\"start\":42424},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":43032,\"start\":43025},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":43436,\"start\":43429},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":47984,\"start\":47975},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":48498,\"start\":48491},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":48624,\"start\":48617},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":48957,\"start\":48948},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":48999,\"start\":48992},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":49129,\"start\":49122},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":49201,\"start\":49194},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":49419,\"start\":49410},{\"end\":57871,\"start\":57865},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":57972,\"start\":57966},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":57984,\"start\":57977},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":59684,\"start\":59677}]", "bib_author_first_name": "[{\"end\":72957,\"start\":72956},{\"end\":72967,\"start\":72966},{\"end\":72980,\"start\":72979},{\"end\":72991,\"start\":72990},{\"end\":73002,\"start\":73001},{\"end\":73458,\"start\":73457},{\"end\":73471,\"start\":73470},{\"end\":73473,\"start\":73472},{\"end\":73487,\"start\":73486},{\"end\":73893,\"start\":73892},{\"end\":73912,\"start\":73911},{\"end\":73923,\"start\":73922},{\"end\":73933,\"start\":73932},{\"end\":74276,\"start\":74275},{\"end\":74286,\"start\":74285},{\"end\":74542,\"start\":74541},{\"end\":74544,\"start\":74543},{\"end\":74554,\"start\":74553},{\"end\":74566,\"start\":74565},{\"end\":74568,\"start\":74567},{\"end\":74824,\"start\":74823},{\"end\":74835,\"start\":74834},{\"end\":74843,\"start\":74842},{\"end\":74845,\"start\":74844},{\"end\":74856,\"start\":74855},{\"end\":74865,\"start\":74864},{\"end\":75322,\"start\":75321},{\"end\":75330,\"start\":75329},{\"end\":75738,\"start\":75737},{\"end\":75750,\"start\":75749},{\"end\":75752,\"start\":75751},{\"end\":75763,\"start\":75762},{\"end\":75773,\"start\":75772},{\"end\":75786,\"start\":75785},{\"end\":75796,\"start\":75795},{\"end\":76306,\"start\":76305},{\"end\":76318,\"start\":76317},{\"end\":76320,\"start\":76319},{\"end\":76331,\"start\":76330},{\"end\":76341,\"start\":76340},{\"end\":76352,\"start\":76351},{\"end\":76776,\"start\":76775},{\"end\":76789,\"start\":76788},{\"end\":76798,\"start\":76797},{\"end\":77035,\"start\":77034},{\"end\":77045,\"start\":77044},{\"end\":77055,\"start\":77054},{\"end\":77463,\"start\":77462},{\"end\":77465,\"start\":77464},{\"end\":77888,\"start\":77887},{\"end\":77890,\"start\":77889},{\"end\":77903,\"start\":77902},{\"end\":77913,\"start\":77912},{\"end\":77922,\"start\":77921},{\"end\":77933,\"start\":77932},{\"end\":77935,\"start\":77934},{\"end\":77946,\"start\":77945},{\"end\":78388,\"start\":78387},{\"end\":78390,\"start\":78389},{\"end\":78403,\"start\":78402},{\"end\":78405,\"start\":78404},{\"end\":78417,\"start\":78416},{\"end\":78419,\"start\":78418},{\"end\":78430,\"start\":78429},{\"end\":79167,\"start\":79166},{\"end\":79169,\"start\":79168},{\"end\":79182,\"start\":79181},{\"end\":79184,\"start\":79183},{\"end\":79196,\"start\":79195},{\"end\":79206,\"start\":79205},{\"end\":79208,\"start\":79207},{\"end\":79219,\"start\":79218},{\"end\":79668,\"start\":79667},{\"end\":79677,\"start\":79676},{\"end\":79687,\"start\":79686},{\"end\":79697,\"start\":79696},{\"end\":79709,\"start\":79708},{\"end\":79711,\"start\":79710},{\"end\":80079,\"start\":80078},{\"end\":80092,\"start\":80091},{\"end\":80094,\"start\":80093},{\"end\":80115,\"start\":80114},{\"end\":80385,\"start\":80384},{\"end\":80765,\"start\":80764},{\"end\":80777,\"start\":80776},{\"end\":80779,\"start\":80778},{\"end\":80796,\"start\":80795},{\"end\":80810,\"start\":80809},{\"end\":81269,\"start\":81268},{\"end\":81285,\"start\":81284},{\"end\":81297,\"start\":81296},{\"end\":81628,\"start\":81627},{\"end\":81636,\"start\":81635},{\"end\":81645,\"start\":81644},{\"end\":81653,\"start\":81652},{\"end\":81662,\"start\":81661},{\"end\":82073,\"start\":82072},{\"end\":82081,\"start\":82080},{\"end\":82083,\"start\":82082},{\"end\":82093,\"start\":82092},{\"end\":82102,\"start\":82101},{\"end\":82104,\"start\":82103},{\"end\":82386,\"start\":82385},{\"end\":82403,\"start\":82402},{\"end\":82411,\"start\":82410},{\"end\":82420,\"start\":82419},{\"end\":82627,\"start\":82626},{\"end\":82636,\"start\":82635},{\"end\":82647,\"start\":82646},{\"end\":82656,\"start\":82655},{\"end\":82668,\"start\":82667},{\"end\":82680,\"start\":82679},{\"end\":82693,\"start\":82692},{\"end\":82705,\"start\":82704},{\"end\":82717,\"start\":82716},{\"end\":83061,\"start\":83060},{\"end\":83067,\"start\":83066},{\"end\":83069,\"start\":83068},{\"end\":83079,\"start\":83078},{\"end\":83089,\"start\":83088},{\"end\":83091,\"start\":83090},{\"end\":83101,\"start\":83100},{\"end\":83103,\"start\":83102},{\"end\":83124,\"start\":83123},{\"end\":83136,\"start\":83135},{\"end\":83138,\"start\":83137},{\"end\":83509,\"start\":83508},{\"end\":83518,\"start\":83517},{\"end\":83529,\"start\":83528},{\"end\":83542,\"start\":83541},{\"end\":83552,\"start\":83551},{\"end\":83562,\"start\":83561},{\"end\":83828,\"start\":83827},{\"end\":83830,\"start\":83829},{\"end\":84069,\"start\":84068},{\"end\":84078,\"start\":84077},{\"end\":84090,\"start\":84089},{\"end\":84094,\"start\":84091},{\"end\":84106,\"start\":84105},{\"end\":84116,\"start\":84115},{\"end\":84118,\"start\":84117},{\"end\":84605,\"start\":84604},{\"end\":84625,\"start\":84624},{\"end\":84634,\"start\":84633},{\"end\":84980,\"start\":84979},{\"end\":84992,\"start\":84991},{\"end\":85001,\"start\":85000},{\"end\":85011,\"start\":85010},{\"end\":85013,\"start\":85012},{\"end\":85025,\"start\":85024},{\"end\":85027,\"start\":85026},{\"end\":85567,\"start\":85566},{\"end\":85578,\"start\":85577},{\"end\":85580,\"start\":85579},{\"end\":85588,\"start\":85587},{\"end\":85590,\"start\":85589},{\"end\":85601,\"start\":85600},{\"end\":85890,\"start\":85889},{\"end\":85904,\"start\":85903},{\"end\":85915,\"start\":85914},{\"end\":85930,\"start\":85929},{\"end\":86265,\"start\":86264},{\"end\":86274,\"start\":86273},{\"end\":86280,\"start\":86279},{\"end\":86288,\"start\":86287},{\"end\":86674,\"start\":86673},{\"end\":86681,\"start\":86680},{\"end\":86683,\"start\":86682},{\"end\":86695,\"start\":86694},{\"end\":86707,\"start\":86706},{\"end\":86715,\"start\":86714},{\"end\":87153,\"start\":87152},{\"end\":87162,\"start\":87161},{\"end\":87164,\"start\":87163},{\"end\":87175,\"start\":87174},{\"end\":87177,\"start\":87176},{\"end\":87474,\"start\":87473},{\"end\":87490,\"start\":87489},{\"end\":87501,\"start\":87500},{\"end\":87512,\"start\":87511},{\"end\":87522,\"start\":87521},{\"end\":87524,\"start\":87523},{\"end\":87534,\"start\":87533},{\"end\":87920,\"start\":87919},{\"end\":87930,\"start\":87929},{\"end\":87940,\"start\":87939},{\"end\":88349,\"start\":88348},{\"end\":88551,\"start\":88550},{\"end\":88561,\"start\":88560},{\"end\":88575,\"start\":88574},{\"end\":88585,\"start\":88584},{\"end\":88873,\"start\":88872},{\"end\":88888,\"start\":88887},{\"end\":89038,\"start\":89037},{\"end\":89040,\"start\":89039},{\"end\":89284,\"start\":89283},{\"end\":89286,\"start\":89285},{\"end\":89294,\"start\":89293},{\"end\":89306,\"start\":89305},{\"end\":89629,\"start\":89628},{\"end\":89643,\"start\":89642},{\"end\":89653,\"start\":89652},{\"end\":89667,\"start\":89666},{\"end\":89669,\"start\":89668},{\"end\":89989,\"start\":89988},{\"end\":90003,\"start\":90002},{\"end\":90012,\"start\":90011},{\"end\":90020,\"start\":90019},{\"end\":90022,\"start\":90021},{\"end\":90031,\"start\":90030},{\"end\":90035,\"start\":90032},{\"end\":90044,\"start\":90043},{\"end\":90054,\"start\":90053},{\"end\":90067,\"start\":90066},{\"end\":90069,\"start\":90068},{\"end\":90079,\"start\":90078},{\"end\":90089,\"start\":90088},{\"end\":90097,\"start\":90096},{\"end\":90108,\"start\":90107},{\"end\":90120,\"start\":90119},{\"end\":90132,\"start\":90131},{\"end\":90147,\"start\":90146},{\"end\":90758,\"start\":90757},{\"end\":90768,\"start\":90767},{\"end\":90778,\"start\":90777},{\"end\":90788,\"start\":90787},{\"end\":91194,\"start\":91193},{\"end\":91196,\"start\":91195},{\"end\":91206,\"start\":91205},{\"end\":91216,\"start\":91215},{\"end\":91226,\"start\":91225},{\"end\":91606,\"start\":91605},{\"end\":91618,\"start\":91617},{\"end\":91629,\"start\":91628},{\"end\":91639,\"start\":91638},{\"end\":91650,\"start\":91649},{\"end\":91901,\"start\":91900},{\"end\":91914,\"start\":91913},{\"end\":91926,\"start\":91925},{\"end\":91938,\"start\":91937},{\"end\":91952,\"start\":91951},{\"end\":91962,\"start\":91961},{\"end\":91964,\"start\":91963},{\"end\":92524,\"start\":92523},{\"end\":92701,\"start\":92700},{\"end\":92710,\"start\":92709},{\"end\":92720,\"start\":92719},{\"end\":92733,\"start\":92732},{\"end\":92745,\"start\":92744},{\"end\":92968,\"start\":92967},{\"end\":92970,\"start\":92969},{\"end\":92977,\"start\":92976},{\"end\":92986,\"start\":92985},{\"end\":92999,\"start\":92998},{\"end\":93383,\"start\":93382},{\"end\":93394,\"start\":93393},{\"end\":93405,\"start\":93404},{\"end\":93407,\"start\":93406},{\"end\":93420,\"start\":93419},{\"end\":93431,\"start\":93430},{\"end\":93910,\"start\":93909},{\"end\":93924,\"start\":93923},{\"end\":93926,\"start\":93925},{\"end\":93937,\"start\":93936},{\"end\":93947,\"start\":93946},{\"end\":94438,\"start\":94437},{\"end\":94450,\"start\":94449},{\"end\":94452,\"start\":94451},{\"end\":94460,\"start\":94459},{\"end\":94810,\"start\":94809},{\"end\":94817,\"start\":94816},{\"end\":94827,\"start\":94826},{\"end\":94829,\"start\":94828},{\"end\":95198,\"start\":95197},{\"end\":95209,\"start\":95208},{\"end\":95219,\"start\":95218},{\"end\":95682,\"start\":95681},{\"end\":95693,\"start\":95692},{\"end\":95695,\"start\":95694},{\"end\":95705,\"start\":95704},{\"end\":95707,\"start\":95706},{\"end\":96114,\"start\":96113},{\"end\":96116,\"start\":96115},{\"end\":96126,\"start\":96123},{\"end\":96135,\"start\":96134},{\"end\":96539,\"start\":96538},{\"end\":96541,\"start\":96540},{\"end\":96549,\"start\":96548},{\"end\":96807,\"start\":96806},{\"end\":97039,\"start\":97038},{\"end\":97051,\"start\":97050},{\"end\":97061,\"start\":97060},{\"end\":97374,\"start\":97373},{\"end\":97385,\"start\":97384},{\"end\":97395,\"start\":97394},{\"end\":97407,\"start\":97406},{\"end\":97414,\"start\":97413},{\"end\":97420,\"start\":97419},{\"end\":97429,\"start\":97428},{\"end\":97439,\"start\":97438},{\"end\":97874,\"start\":97873},{\"end\":97884,\"start\":97883},{\"end\":97893,\"start\":97892},{\"end\":97905,\"start\":97904},{\"end\":97917,\"start\":97916},{\"end\":98351,\"start\":98350},{\"end\":98641,\"start\":98640},{\"end\":98654,\"start\":98653},{\"end\":98666,\"start\":98665},{\"end\":98676,\"start\":98675},{\"end\":98997,\"start\":98996},{\"end\":99007,\"start\":99006},{\"end\":99016,\"start\":99015},{\"end\":99026,\"start\":99025},{\"end\":99035,\"start\":99034},{\"end\":99288,\"start\":99287},{\"end\":99290,\"start\":99289},{\"end\":99304,\"start\":99303},{\"end\":99306,\"start\":99305},{\"end\":99316,\"start\":99315},{\"end\":99318,\"start\":99317},{\"end\":99541,\"start\":99540},{\"end\":99551,\"start\":99550},{\"end\":99562,\"start\":99561},{\"end\":99570,\"start\":99569},{\"end\":99572,\"start\":99571},{\"end\":99583,\"start\":99582},{\"end\":99594,\"start\":99593},{\"end\":99895,\"start\":99894},{\"end\":99897,\"start\":99896},{\"end\":99906,\"start\":99905},{\"end\":99917,\"start\":99916},{\"end\":99927,\"start\":99926},{\"end\":100210,\"start\":100209},{\"end\":100212,\"start\":100211},{\"end\":100221,\"start\":100220},{\"end\":100235,\"start\":100234},{\"end\":100246,\"start\":100245},{\"end\":100256,\"start\":100255},{\"end\":100654,\"start\":100653},{\"end\":100656,\"start\":100655},{\"end\":100665,\"start\":100664},{\"end\":100676,\"start\":100675},{\"end\":100686,\"start\":100685},{\"end\":100913,\"start\":100912},{\"end\":100915,\"start\":100914},{\"end\":100924,\"start\":100923},{\"end\":100935,\"start\":100934},{\"end\":100945,\"start\":100944}]", "bib_author_last_name": "[{\"end\":72964,\"start\":72958},{\"end\":72977,\"start\":72968},{\"end\":72988,\"start\":72981},{\"end\":72999,\"start\":72992},{\"end\":73011,\"start\":73003},{\"end\":73468,\"start\":73459},{\"end\":73484,\"start\":73474},{\"end\":73495,\"start\":73488},{\"end\":73909,\"start\":73894},{\"end\":73920,\"start\":73913},{\"end\":73930,\"start\":73924},{\"end\":73941,\"start\":73934},{\"end\":74283,\"start\":74277},{\"end\":74292,\"start\":74287},{\"end\":74551,\"start\":74545},{\"end\":74563,\"start\":74555},{\"end\":74576,\"start\":74569},{\"end\":74832,\"start\":74825},{\"end\":74840,\"start\":74836},{\"end\":74853,\"start\":74846},{\"end\":74862,\"start\":74857},{\"end\":74880,\"start\":74866},{\"end\":75327,\"start\":75323},{\"end\":75337,\"start\":75331},{\"end\":75747,\"start\":75739},{\"end\":75760,\"start\":75753},{\"end\":75770,\"start\":75764},{\"end\":75783,\"start\":75774},{\"end\":75793,\"start\":75787},{\"end\":75805,\"start\":75797},{\"end\":76315,\"start\":76307},{\"end\":76328,\"start\":76321},{\"end\":76338,\"start\":76332},{\"end\":76349,\"start\":76342},{\"end\":76360,\"start\":76353},{\"end\":76786,\"start\":76777},{\"end\":76795,\"start\":76790},{\"end\":76805,\"start\":76799},{\"end\":77042,\"start\":77036},{\"end\":77052,\"start\":77046},{\"end\":77063,\"start\":77056},{\"end\":77475,\"start\":77466},{\"end\":77900,\"start\":77891},{\"end\":77910,\"start\":77904},{\"end\":77919,\"start\":77914},{\"end\":77930,\"start\":77923},{\"end\":77943,\"start\":77936},{\"end\":77955,\"start\":77947},{\"end\":78400,\"start\":78391},{\"end\":78414,\"start\":78406},{\"end\":78427,\"start\":78420},{\"end\":78439,\"start\":78431},{\"end\":79179,\"start\":79170},{\"end\":79193,\"start\":79185},{\"end\":79203,\"start\":79197},{\"end\":79216,\"start\":79209},{\"end\":79228,\"start\":79220},{\"end\":79674,\"start\":79669},{\"end\":79684,\"start\":79678},{\"end\":79694,\"start\":79688},{\"end\":79706,\"start\":79698},{\"end\":79718,\"start\":79712},{\"end\":80089,\"start\":80080},{\"end\":80112,\"start\":80095},{\"end\":80121,\"start\":80116},{\"end\":80394,\"start\":80386},{\"end\":80774,\"start\":80766},{\"end\":80793,\"start\":80780},{\"end\":80807,\"start\":80797},{\"end\":80819,\"start\":80811},{\"end\":81282,\"start\":81270},{\"end\":81294,\"start\":81286},{\"end\":81307,\"start\":81298},{\"end\":81633,\"start\":81629},{\"end\":81642,\"start\":81637},{\"end\":81650,\"start\":81646},{\"end\":81659,\"start\":81654},{\"end\":81669,\"start\":81663},{\"end\":82078,\"start\":82074},{\"end\":82090,\"start\":82084},{\"end\":82099,\"start\":82094},{\"end\":82111,\"start\":82105},{\"end\":82400,\"start\":82387},{\"end\":82408,\"start\":82404},{\"end\":82417,\"start\":82412},{\"end\":82428,\"start\":82421},{\"end\":82633,\"start\":82628},{\"end\":82644,\"start\":82637},{\"end\":82653,\"start\":82648},{\"end\":82665,\"start\":82657},{\"end\":82677,\"start\":82669},{\"end\":82690,\"start\":82681},{\"end\":82702,\"start\":82694},{\"end\":82714,\"start\":82706},{\"end\":82723,\"start\":82718},{\"end\":83064,\"start\":83062},{\"end\":83076,\"start\":83070},{\"end\":83086,\"start\":83080},{\"end\":83098,\"start\":83092},{\"end\":83121,\"start\":83104},{\"end\":83133,\"start\":83125},{\"end\":83146,\"start\":83139},{\"end\":83515,\"start\":83510},{\"end\":83526,\"start\":83519},{\"end\":83539,\"start\":83530},{\"end\":83549,\"start\":83543},{\"end\":83559,\"start\":83553},{\"end\":83568,\"start\":83563},{\"end\":83837,\"start\":83831},{\"end\":84075,\"start\":84070},{\"end\":84087,\"start\":84079},{\"end\":84103,\"start\":84095},{\"end\":84113,\"start\":84107},{\"end\":84128,\"start\":84119},{\"end\":84622,\"start\":84606},{\"end\":84631,\"start\":84626},{\"end\":84644,\"start\":84635},{\"end\":84989,\"start\":84981},{\"end\":84998,\"start\":84993},{\"end\":85008,\"start\":85002},{\"end\":85022,\"start\":85014},{\"end\":85037,\"start\":85028},{\"end\":85575,\"start\":85568},{\"end\":85585,\"start\":85581},{\"end\":85598,\"start\":85591},{\"end\":85611,\"start\":85602},{\"end\":85901,\"start\":85891},{\"end\":85912,\"start\":85905},{\"end\":85927,\"start\":85916},{\"end\":85944,\"start\":85931},{\"end\":86271,\"start\":86266},{\"end\":86277,\"start\":86275},{\"end\":86285,\"start\":86281},{\"end\":86291,\"start\":86289},{\"end\":86678,\"start\":86675},{\"end\":86692,\"start\":86684},{\"end\":86704,\"start\":86696},{\"end\":86712,\"start\":86708},{\"end\":86721,\"start\":86716},{\"end\":87159,\"start\":87154},{\"end\":87172,\"start\":87165},{\"end\":87185,\"start\":87178},{\"end\":87487,\"start\":87475},{\"end\":87498,\"start\":87491},{\"end\":87509,\"start\":87502},{\"end\":87519,\"start\":87513},{\"end\":87531,\"start\":87525},{\"end\":87541,\"start\":87535},{\"end\":87927,\"start\":87921},{\"end\":87937,\"start\":87931},{\"end\":87949,\"start\":87941},{\"end\":88362,\"start\":88350},{\"end\":88558,\"start\":88552},{\"end\":88572,\"start\":88562},{\"end\":88582,\"start\":88576},{\"end\":88592,\"start\":88586},{\"end\":88885,\"start\":88874},{\"end\":88894,\"start\":88889},{\"end\":89047,\"start\":89041},{\"end\":89291,\"start\":89287},{\"end\":89303,\"start\":89295},{\"end\":89312,\"start\":89307},{\"end\":89640,\"start\":89630},{\"end\":89650,\"start\":89644},{\"end\":89664,\"start\":89654},{\"end\":89679,\"start\":89670},{\"end\":90000,\"start\":89990},{\"end\":90009,\"start\":90004},{\"end\":90017,\"start\":90013},{\"end\":90028,\"start\":90023},{\"end\":90041,\"start\":90036},{\"end\":90051,\"start\":90045},{\"end\":90064,\"start\":90055},{\"end\":90076,\"start\":90070},{\"end\":90086,\"start\":90080},{\"end\":90094,\"start\":90090},{\"end\":90105,\"start\":90098},{\"end\":90117,\"start\":90109},{\"end\":90129,\"start\":90121},{\"end\":90144,\"start\":90133},{\"end\":90155,\"start\":90148},{\"end\":90765,\"start\":90759},{\"end\":90775,\"start\":90769},{\"end\":90785,\"start\":90779},{\"end\":90797,\"start\":90789},{\"end\":91203,\"start\":91197},{\"end\":91213,\"start\":91207},{\"end\":91223,\"start\":91217},{\"end\":91234,\"start\":91227},{\"end\":91615,\"start\":91607},{\"end\":91626,\"start\":91619},{\"end\":91636,\"start\":91630},{\"end\":91647,\"start\":91640},{\"end\":91657,\"start\":91651},{\"end\":91911,\"start\":91902},{\"end\":91923,\"start\":91915},{\"end\":91935,\"start\":91927},{\"end\":91949,\"start\":91939},{\"end\":91959,\"start\":91953},{\"end\":91978,\"start\":91965},{\"end\":92530,\"start\":92525},{\"end\":92707,\"start\":92702},{\"end\":92717,\"start\":92711},{\"end\":92730,\"start\":92721},{\"end\":92742,\"start\":92734},{\"end\":92754,\"start\":92746},{\"end\":92974,\"start\":92971},{\"end\":92983,\"start\":92978},{\"end\":92996,\"start\":92987},{\"end\":93010,\"start\":93000},{\"end\":93391,\"start\":93384},{\"end\":93402,\"start\":93395},{\"end\":93417,\"start\":93408},{\"end\":93428,\"start\":93421},{\"end\":93437,\"start\":93432},{\"end\":93921,\"start\":93911},{\"end\":93934,\"start\":93927},{\"end\":93944,\"start\":93938},{\"end\":93952,\"start\":93948},{\"end\":94447,\"start\":94439},{\"end\":94457,\"start\":94453},{\"end\":94466,\"start\":94461},{\"end\":94814,\"start\":94811},{\"end\":94824,\"start\":94818},{\"end\":94835,\"start\":94830},{\"end\":95206,\"start\":95199},{\"end\":95216,\"start\":95210},{\"end\":95229,\"start\":95220},{\"end\":95690,\"start\":95683},{\"end\":95702,\"start\":95696},{\"end\":95713,\"start\":95708},{\"end\":96121,\"start\":96117},{\"end\":96132,\"start\":96127},{\"end\":96546,\"start\":96542},{\"end\":96560,\"start\":96550},{\"end\":96815,\"start\":96808},{\"end\":97048,\"start\":97040},{\"end\":97058,\"start\":97052},{\"end\":97077,\"start\":97062},{\"end\":97382,\"start\":97375},{\"end\":97392,\"start\":97386},{\"end\":97404,\"start\":97396},{\"end\":97411,\"start\":97408},{\"end\":97417,\"start\":97415},{\"end\":97426,\"start\":97421},{\"end\":97436,\"start\":97430},{\"end\":97445,\"start\":97440},{\"end\":97881,\"start\":97875},{\"end\":97890,\"start\":97885},{\"end\":97902,\"start\":97894},{\"end\":97914,\"start\":97906},{\"end\":97922,\"start\":97918},{\"end\":98361,\"start\":98352},{\"end\":98651,\"start\":98642},{\"end\":98663,\"start\":98655},{\"end\":98673,\"start\":98667},{\"end\":98683,\"start\":98677},{\"end\":99004,\"start\":98998},{\"end\":99013,\"start\":99008},{\"end\":99023,\"start\":99017},{\"end\":99032,\"start\":99027},{\"end\":99042,\"start\":99036},{\"end\":99301,\"start\":99291},{\"end\":99313,\"start\":99307},{\"end\":99327,\"start\":99319},{\"end\":99548,\"start\":99542},{\"end\":99559,\"start\":99552},{\"end\":99567,\"start\":99563},{\"end\":99580,\"start\":99573},{\"end\":99591,\"start\":99584},{\"end\":99602,\"start\":99595},{\"end\":99903,\"start\":99898},{\"end\":99914,\"start\":99907},{\"end\":99924,\"start\":99918},{\"end\":99934,\"start\":99928},{\"end\":100218,\"start\":100213},{\"end\":100232,\"start\":100222},{\"end\":100243,\"start\":100236},{\"end\":100253,\"start\":100247},{\"end\":100263,\"start\":100257},{\"end\":100662,\"start\":100657},{\"end\":100673,\"start\":100666},{\"end\":100683,\"start\":100677},{\"end\":100693,\"start\":100687},{\"end\":100921,\"start\":100916},{\"end\":100932,\"start\":100925},{\"end\":100942,\"start\":100936},{\"end\":100952,\"start\":100946}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":85558688},\"end\":73411,\"start\":72851},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":17149134},\"end\":73811,\"start\":73413},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":218833902},\"end\":74273,\"start\":73813},{\"attributes\":{\"doi\":\"arXiv:2002.07764\",\"id\":\"b3\"},\"end\":74539,\"start\":74275},{\"attributes\":{\"id\":\"b4\"},\"end\":74756,\"start\":74541},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":19812469},\"end\":75237,\"start\":74758},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":225041826},\"end\":75695,\"start\":75239},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":42093599},\"end\":76165,\"start\":75697},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":213006977},\"end\":76726,\"start\":76167},{\"attributes\":{\"id\":\"b9\"},\"end\":76955,\"start\":76728},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":9234184},\"end\":77380,\"start\":76957},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":49291306},\"end\":77783,\"start\":77382},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":47019892},\"end\":78307,\"start\":77785},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":211106787},\"end\":79094,\"start\":78309},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":49866368},\"end\":79604,\"start\":79096},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":3847278},\"end\":80012,\"start\":79606},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":25595468},\"end\":80283,\"start\":80014},{\"attributes\":{\"id\":\"b17\"},\"end\":80704,\"start\":80285},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":18814593},\"end\":81137,\"start\":80706},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":62257829},\"end\":81539,\"start\":81139},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":777327},\"end\":82004,\"start\":81541},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":12825757},\"end\":82317,\"start\":82006},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":23235697},\"end\":82624,\"start\":82319},{\"attributes\":{\"id\":\"b23\"},\"end\":82998,\"start\":82626},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":14283118},\"end\":83428,\"start\":83000},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":44169250},\"end\":83776,\"start\":83430},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":8656663},\"end\":84002,\"start\":83778},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":18669369},\"end\":84550,\"start\":84004},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":400849},\"end\":84915,\"start\":84552},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":37126517},\"end\":85437,\"start\":84917},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":204863749},\"end\":85846,\"start\":85439},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":10919286},\"end\":86198,\"start\":85848},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":32518685},\"end\":86608,\"start\":86200},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":15919926},\"end\":87043,\"start\":86610},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":19035584},\"end\":87429,\"start\":87045},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":14232025},\"end\":87814,\"start\":87431},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":9656543},\"end\":88274,\"start\":87816},{\"attributes\":{\"id\":\"b37\"},\"end\":88481,\"start\":88276},{\"attributes\":{\"id\":\"b38\"},\"end\":88829,\"start\":88483},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":17197524},\"end\":89013,\"start\":88831},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":9116234},\"end\":89200,\"start\":89015},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":115163735},\"end\":89510,\"start\":89202},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":18306769},\"end\":89921,\"start\":89512},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":16809999},\"end\":90677,\"start\":89923},{\"attributes\":{\"id\":\"b44\"},\"end\":91115,\"start\":90679},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":229701669},\"end\":91559,\"start\":91117},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":232264243},\"end\":91848,\"start\":91561},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":15981214},\"end\":92504,\"start\":91850},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":5458623},\"end\":92698,\"start\":92506},{\"attributes\":{\"id\":\"b49\"},\"end\":92901,\"start\":92700},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":45162571},\"end\":93303,\"start\":92903},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":208213011},\"end\":93804,\"start\":93305},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":222335383},\"end\":94353,\"start\":93806},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":47021558},\"end\":94735,\"start\":94355},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":16848251},\"end\":95133,\"start\":94737},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":215818375},\"end\":95630,\"start\":95135},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":2732586},\"end\":96034,\"start\":95632},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":54773},\"end\":96494,\"start\":96036},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":52306413},\"end\":96713,\"start\":96496},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":46824587},\"end\":96959,\"start\":96715},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":1706900},\"end\":97293,\"start\":96961},{\"attributes\":{\"doi\":\"10.1109/APSEC.2010.46\",\"id\":\"b61\",\"matched_paper_id\":1961650},\"end\":97783,\"start\":97295},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":197538019},\"end\":98259,\"start\":97785},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":208975068},\"end\":98520,\"start\":98261},{\"attributes\":{\"id\":\"b64\",\"matched_paper_id\":211066597},\"end\":98922,\"start\":98522},{\"attributes\":{\"id\":\"b65\"},\"end\":99229,\"start\":98924},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":32335634},\"end\":99497,\"start\":99231},{\"attributes\":{\"id\":\"b67\"},\"end\":99794,\"start\":99499},{\"attributes\":{\"id\":\"b68\",\"matched_paper_id\":4947786},\"end\":100138,\"start\":99796},{\"attributes\":{\"id\":\"b69\",\"matched_paper_id\":35011407},\"end\":100579,\"start\":100140},{\"attributes\":{\"id\":\"b70\",\"matched_paper_id\":15734292},\"end\":100874,\"start\":100581},{\"attributes\":{\"id\":\"b71\",\"matched_paper_id\":14664530},\"end\":101114,\"start\":100876}]", "bib_title": "[{\"end\":72954,\"start\":72851},{\"end\":73455,\"start\":73413},{\"end\":73890,\"start\":73813},{\"end\":74821,\"start\":74758},{\"end\":75319,\"start\":75239},{\"end\":75735,\"start\":75697},{\"end\":76303,\"start\":76167},{\"end\":77032,\"start\":76957},{\"end\":77460,\"start\":77382},{\"end\":77885,\"start\":77785},{\"end\":78385,\"start\":78309},{\"end\":79164,\"start\":79096},{\"end\":79665,\"start\":79606},{\"end\":80076,\"start\":80014},{\"end\":80762,\"start\":80706},{\"end\":81266,\"start\":81139},{\"end\":81625,\"start\":81541},{\"end\":82070,\"start\":82006},{\"end\":82383,\"start\":82319},{\"end\":83058,\"start\":83000},{\"end\":83506,\"start\":83430},{\"end\":83825,\"start\":83778},{\"end\":84066,\"start\":84004},{\"end\":84602,\"start\":84552},{\"end\":84977,\"start\":84917},{\"end\":85564,\"start\":85439},{\"end\":85887,\"start\":85848},{\"end\":86262,\"start\":86200},{\"end\":86671,\"start\":86610},{\"end\":87150,\"start\":87045},{\"end\":87471,\"start\":87431},{\"end\":87917,\"start\":87816},{\"end\":88870,\"start\":88831},{\"end\":89035,\"start\":89015},{\"end\":89281,\"start\":89202},{\"end\":89626,\"start\":89512},{\"end\":89986,\"start\":89923},{\"end\":90755,\"start\":90679},{\"end\":91191,\"start\":91117},{\"end\":91603,\"start\":91561},{\"end\":91898,\"start\":91850},{\"end\":92521,\"start\":92506},{\"end\":92965,\"start\":92903},{\"end\":93380,\"start\":93305},{\"end\":93907,\"start\":93806},{\"end\":94435,\"start\":94355},{\"end\":94807,\"start\":94737},{\"end\":95195,\"start\":95135},{\"end\":95679,\"start\":95632},{\"end\":96111,\"start\":96036},{\"end\":96536,\"start\":96496},{\"end\":96804,\"start\":96715},{\"end\":97036,\"start\":96961},{\"end\":97371,\"start\":97295},{\"end\":97871,\"start\":97785},{\"end\":98348,\"start\":98261},{\"end\":98638,\"start\":98522},{\"end\":99285,\"start\":99231},{\"end\":99892,\"start\":99796},{\"end\":100207,\"start\":100140},{\"end\":100651,\"start\":100581},{\"end\":100910,\"start\":100876}]", "bib_author": "[{\"end\":72966,\"start\":72956},{\"end\":72979,\"start\":72966},{\"end\":72990,\"start\":72979},{\"end\":73001,\"start\":72990},{\"end\":73013,\"start\":73001},{\"end\":73470,\"start\":73457},{\"end\":73486,\"start\":73470},{\"end\":73497,\"start\":73486},{\"end\":73911,\"start\":73892},{\"end\":73922,\"start\":73911},{\"end\":73932,\"start\":73922},{\"end\":73943,\"start\":73932},{\"end\":74285,\"start\":74275},{\"end\":74294,\"start\":74285},{\"end\":74553,\"start\":74541},{\"end\":74565,\"start\":74553},{\"end\":74578,\"start\":74565},{\"end\":74834,\"start\":74823},{\"end\":74842,\"start\":74834},{\"end\":74855,\"start\":74842},{\"end\":74864,\"start\":74855},{\"end\":74882,\"start\":74864},{\"end\":75329,\"start\":75321},{\"end\":75339,\"start\":75329},{\"end\":75749,\"start\":75737},{\"end\":75762,\"start\":75749},{\"end\":75772,\"start\":75762},{\"end\":75785,\"start\":75772},{\"end\":75795,\"start\":75785},{\"end\":75807,\"start\":75795},{\"end\":76317,\"start\":76305},{\"end\":76330,\"start\":76317},{\"end\":76340,\"start\":76330},{\"end\":76351,\"start\":76340},{\"end\":76362,\"start\":76351},{\"end\":76788,\"start\":76775},{\"end\":76797,\"start\":76788},{\"end\":76807,\"start\":76797},{\"end\":77044,\"start\":77034},{\"end\":77054,\"start\":77044},{\"end\":77065,\"start\":77054},{\"end\":77477,\"start\":77462},{\"end\":77902,\"start\":77887},{\"end\":77912,\"start\":77902},{\"end\":77921,\"start\":77912},{\"end\":77932,\"start\":77921},{\"end\":77945,\"start\":77932},{\"end\":77957,\"start\":77945},{\"end\":78402,\"start\":78387},{\"end\":78416,\"start\":78402},{\"end\":78429,\"start\":78416},{\"end\":78441,\"start\":78429},{\"end\":79181,\"start\":79166},{\"end\":79195,\"start\":79181},{\"end\":79205,\"start\":79195},{\"end\":79218,\"start\":79205},{\"end\":79230,\"start\":79218},{\"end\":79676,\"start\":79667},{\"end\":79686,\"start\":79676},{\"end\":79696,\"start\":79686},{\"end\":79708,\"start\":79696},{\"end\":79720,\"start\":79708},{\"end\":80091,\"start\":80078},{\"end\":80114,\"start\":80091},{\"end\":80123,\"start\":80114},{\"end\":80396,\"start\":80384},{\"end\":80776,\"start\":80764},{\"end\":80795,\"start\":80776},{\"end\":80809,\"start\":80795},{\"end\":80821,\"start\":80809},{\"end\":81284,\"start\":81268},{\"end\":81296,\"start\":81284},{\"end\":81309,\"start\":81296},{\"end\":81635,\"start\":81627},{\"end\":81644,\"start\":81635},{\"end\":81652,\"start\":81644},{\"end\":81661,\"start\":81652},{\"end\":81671,\"start\":81661},{\"end\":82080,\"start\":82072},{\"end\":82092,\"start\":82080},{\"end\":82101,\"start\":82092},{\"end\":82113,\"start\":82101},{\"end\":82402,\"start\":82385},{\"end\":82410,\"start\":82402},{\"end\":82419,\"start\":82410},{\"end\":82430,\"start\":82419},{\"end\":82635,\"start\":82626},{\"end\":82646,\"start\":82635},{\"end\":82655,\"start\":82646},{\"end\":82667,\"start\":82655},{\"end\":82679,\"start\":82667},{\"end\":82692,\"start\":82679},{\"end\":82704,\"start\":82692},{\"end\":82716,\"start\":82704},{\"end\":82725,\"start\":82716},{\"end\":83066,\"start\":83060},{\"end\":83078,\"start\":83066},{\"end\":83088,\"start\":83078},{\"end\":83100,\"start\":83088},{\"end\":83123,\"start\":83100},{\"end\":83135,\"start\":83123},{\"end\":83148,\"start\":83135},{\"end\":83517,\"start\":83508},{\"end\":83528,\"start\":83517},{\"end\":83541,\"start\":83528},{\"end\":83551,\"start\":83541},{\"end\":83561,\"start\":83551},{\"end\":83570,\"start\":83561},{\"end\":83839,\"start\":83827},{\"end\":84077,\"start\":84068},{\"end\":84089,\"start\":84077},{\"end\":84105,\"start\":84089},{\"end\":84115,\"start\":84105},{\"end\":84130,\"start\":84115},{\"end\":84624,\"start\":84604},{\"end\":84633,\"start\":84624},{\"end\":84646,\"start\":84633},{\"end\":84991,\"start\":84979},{\"end\":85000,\"start\":84991},{\"end\":85010,\"start\":85000},{\"end\":85024,\"start\":85010},{\"end\":85039,\"start\":85024},{\"end\":85577,\"start\":85566},{\"end\":85587,\"start\":85577},{\"end\":85600,\"start\":85587},{\"end\":85613,\"start\":85600},{\"end\":85903,\"start\":85889},{\"end\":85914,\"start\":85903},{\"end\":85929,\"start\":85914},{\"end\":85946,\"start\":85929},{\"end\":86273,\"start\":86264},{\"end\":86279,\"start\":86273},{\"end\":86287,\"start\":86279},{\"end\":86293,\"start\":86287},{\"end\":86680,\"start\":86673},{\"end\":86694,\"start\":86680},{\"end\":86706,\"start\":86694},{\"end\":86714,\"start\":86706},{\"end\":86723,\"start\":86714},{\"end\":87161,\"start\":87152},{\"end\":87174,\"start\":87161},{\"end\":87187,\"start\":87174},{\"end\":87489,\"start\":87473},{\"end\":87500,\"start\":87489},{\"end\":87511,\"start\":87500},{\"end\":87521,\"start\":87511},{\"end\":87533,\"start\":87521},{\"end\":87543,\"start\":87533},{\"end\":87929,\"start\":87919},{\"end\":87939,\"start\":87929},{\"end\":87951,\"start\":87939},{\"end\":88364,\"start\":88348},{\"end\":88560,\"start\":88550},{\"end\":88574,\"start\":88560},{\"end\":88584,\"start\":88574},{\"end\":88594,\"start\":88584},{\"end\":88887,\"start\":88872},{\"end\":88896,\"start\":88887},{\"end\":89049,\"start\":89037},{\"end\":89293,\"start\":89283},{\"end\":89305,\"start\":89293},{\"end\":89314,\"start\":89305},{\"end\":89642,\"start\":89628},{\"end\":89652,\"start\":89642},{\"end\":89666,\"start\":89652},{\"end\":89681,\"start\":89666},{\"end\":90002,\"start\":89988},{\"end\":90011,\"start\":90002},{\"end\":90019,\"start\":90011},{\"end\":90030,\"start\":90019},{\"end\":90043,\"start\":90030},{\"end\":90053,\"start\":90043},{\"end\":90066,\"start\":90053},{\"end\":90078,\"start\":90066},{\"end\":90088,\"start\":90078},{\"end\":90096,\"start\":90088},{\"end\":90107,\"start\":90096},{\"end\":90119,\"start\":90107},{\"end\":90131,\"start\":90119},{\"end\":90146,\"start\":90131},{\"end\":90157,\"start\":90146},{\"end\":90767,\"start\":90757},{\"end\":90777,\"start\":90767},{\"end\":90787,\"start\":90777},{\"end\":90799,\"start\":90787},{\"end\":91205,\"start\":91193},{\"end\":91215,\"start\":91205},{\"end\":91225,\"start\":91215},{\"end\":91236,\"start\":91225},{\"end\":91617,\"start\":91605},{\"end\":91628,\"start\":91617},{\"end\":91638,\"start\":91628},{\"end\":91649,\"start\":91638},{\"end\":91659,\"start\":91649},{\"end\":91913,\"start\":91900},{\"end\":91925,\"start\":91913},{\"end\":91937,\"start\":91925},{\"end\":91951,\"start\":91937},{\"end\":91961,\"start\":91951},{\"end\":91980,\"start\":91961},{\"end\":92532,\"start\":92523},{\"end\":92709,\"start\":92700},{\"end\":92719,\"start\":92709},{\"end\":92732,\"start\":92719},{\"end\":92744,\"start\":92732},{\"end\":92756,\"start\":92744},{\"end\":92976,\"start\":92967},{\"end\":92985,\"start\":92976},{\"end\":92998,\"start\":92985},{\"end\":93012,\"start\":92998},{\"end\":93393,\"start\":93382},{\"end\":93404,\"start\":93393},{\"end\":93419,\"start\":93404},{\"end\":93430,\"start\":93419},{\"end\":93439,\"start\":93430},{\"end\":93923,\"start\":93909},{\"end\":93936,\"start\":93923},{\"end\":93946,\"start\":93936},{\"end\":93954,\"start\":93946},{\"end\":94449,\"start\":94437},{\"end\":94459,\"start\":94449},{\"end\":94468,\"start\":94459},{\"end\":94816,\"start\":94809},{\"end\":94826,\"start\":94816},{\"end\":94837,\"start\":94826},{\"end\":95208,\"start\":95197},{\"end\":95218,\"start\":95208},{\"end\":95231,\"start\":95218},{\"end\":95692,\"start\":95681},{\"end\":95704,\"start\":95692},{\"end\":95715,\"start\":95704},{\"end\":96123,\"start\":96113},{\"end\":96134,\"start\":96123},{\"end\":96138,\"start\":96134},{\"end\":96548,\"start\":96538},{\"end\":96562,\"start\":96548},{\"end\":96817,\"start\":96806},{\"end\":97050,\"start\":97038},{\"end\":97060,\"start\":97050},{\"end\":97079,\"start\":97060},{\"end\":97384,\"start\":97373},{\"end\":97394,\"start\":97384},{\"end\":97406,\"start\":97394},{\"end\":97413,\"start\":97406},{\"end\":97419,\"start\":97413},{\"end\":97428,\"start\":97419},{\"end\":97438,\"start\":97428},{\"end\":97447,\"start\":97438},{\"end\":97883,\"start\":97873},{\"end\":97892,\"start\":97883},{\"end\":97904,\"start\":97892},{\"end\":97916,\"start\":97904},{\"end\":97924,\"start\":97916},{\"end\":98363,\"start\":98350},{\"end\":98653,\"start\":98640},{\"end\":98665,\"start\":98653},{\"end\":98675,\"start\":98665},{\"end\":98685,\"start\":98675},{\"end\":99006,\"start\":98996},{\"end\":99015,\"start\":99006},{\"end\":99025,\"start\":99015},{\"end\":99034,\"start\":99025},{\"end\":99044,\"start\":99034},{\"end\":99303,\"start\":99287},{\"end\":99315,\"start\":99303},{\"end\":99329,\"start\":99315},{\"end\":99550,\"start\":99540},{\"end\":99561,\"start\":99550},{\"end\":99569,\"start\":99561},{\"end\":99582,\"start\":99569},{\"end\":99593,\"start\":99582},{\"end\":99604,\"start\":99593},{\"end\":99905,\"start\":99894},{\"end\":99916,\"start\":99905},{\"end\":99926,\"start\":99916},{\"end\":99936,\"start\":99926},{\"end\":100220,\"start\":100209},{\"end\":100234,\"start\":100220},{\"end\":100245,\"start\":100234},{\"end\":100255,\"start\":100245},{\"end\":100265,\"start\":100255},{\"end\":100664,\"start\":100653},{\"end\":100675,\"start\":100664},{\"end\":100685,\"start\":100675},{\"end\":100695,\"start\":100685},{\"end\":100923,\"start\":100912},{\"end\":100934,\"start\":100923},{\"end\":100944,\"start\":100934},{\"end\":100954,\"start\":100944}]", "bib_venue": "[{\"end\":73112,\"start\":73013},{\"end\":73545,\"start\":73497},{\"end\":74020,\"start\":73943},{\"end\":74385,\"start\":74310},{\"end\":74611,\"start\":74578},{\"end\":74979,\"start\":74882},{\"end\":75371,\"start\":75339},{\"end\":75912,\"start\":75807},{\"end\":76427,\"start\":76362},{\"end\":76773,\"start\":76728},{\"end\":77154,\"start\":77065},{\"end\":77567,\"start\":77477},{\"end\":78026,\"start\":77957},{\"end\":78600,\"start\":78441},{\"end\":79331,\"start\":79230},{\"end\":79790,\"start\":79720},{\"end\":80134,\"start\":80123},{\"end\":80382,\"start\":80285},{\"end\":80905,\"start\":80821},{\"end\":81324,\"start\":81309},{\"end\":81752,\"start\":81671},{\"end\":82144,\"start\":82113},{\"end\":82448,\"start\":82430},{\"end\":82792,\"start\":82725},{\"end\":83194,\"start\":83148},{\"end\":83584,\"start\":83570},{\"end\":83872,\"start\":83839},{\"end\":84231,\"start\":84130},{\"end\":84709,\"start\":84646},{\"end\":85153,\"start\":85039},{\"end\":85624,\"start\":85613},{\"end\":86006,\"start\":85946},{\"end\":86386,\"start\":86293},{\"end\":86814,\"start\":86723},{\"end\":87220,\"start\":87187},{\"end\":87604,\"start\":87543},{\"end\":88023,\"start\":87951},{\"end\":88346,\"start\":88276},{\"end\":88548,\"start\":88483},{\"end\":88906,\"start\":88896},{\"end\":89093,\"start\":89049},{\"end\":89340,\"start\":89314},{\"end\":89698,\"start\":89681},{\"end\":90212,\"start\":90157},{\"end\":90845,\"start\":90799},{\"end\":91314,\"start\":91236},{\"end\":91690,\"start\":91659},{\"end\":92058,\"start\":91980},{\"end\":92587,\"start\":92532},{\"end\":92787,\"start\":92756},{\"end\":93087,\"start\":93012},{\"end\":93536,\"start\":93439},{\"end\":94029,\"start\":93954},{\"end\":94528,\"start\":94468},{\"end\":94909,\"start\":94837},{\"end\":95365,\"start\":95231},{\"end\":95816,\"start\":95715},{\"end\":96193,\"start\":96138},{\"end\":96593,\"start\":96562},{\"end\":96822,\"start\":96817},{\"end\":97102,\"start\":97079},{\"end\":97517,\"start\":97468},{\"end\":98004,\"start\":97924},{\"end\":98377,\"start\":98363},{\"end\":98704,\"start\":98685},{\"end\":98994,\"start\":98924},{\"end\":99345,\"start\":99329},{\"end\":99538,\"start\":99499},{\"end\":99950,\"start\":99936},{\"end\":100333,\"start\":100265},{\"end\":100715,\"start\":100695},{\"end\":100975,\"start\":100954},{\"end\":74619,\"start\":74613},{\"end\":75415,\"start\":75411},{\"end\":78763,\"start\":78602},{\"end\":92161,\"start\":92060},{\"end\":94091,\"start\":94031}]"}}}, "year": 2023, "month": 12, "day": 17}