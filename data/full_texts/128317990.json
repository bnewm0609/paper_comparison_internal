{"id": 128317990, "updated": "2023-10-04 09:13:22.394", "metadata": {"title": "An Improved FPTAS for 0-1 Knapsack", "authors": "[{\"first\":\"Ce\",\"last\":\"Jin\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2019, "month": null, "day": null}, "abstract": "The 0-1 knapsack problem is an important NP-hard problem that admits fully polynomial-time approximation schemes (FPTASs). Previously the fastest FPTAS by Chan (2018) with approximation factor $1+\\varepsilon$ runs in $\\tilde O(n + (1/\\varepsilon)^{12/5})$ time, where $\\tilde O$ hides polylogarithmic factors. In this paper we present an improved algorithm in $\\tilde O(n+(1/\\varepsilon)^{9/4})$ time, with only a $(1/\\varepsilon)^{1/4}$ gap from the quadratic conditional lower bound based on $(\\min,+)$-convolution. Our improvement comes from a multi-level extension of Chan's number-theoretic construction, and a greedy lemma that reduces unnecessary computation spent on cheap items.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1904.09562", "mag": "3099492991", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icalp/Jin19", "doi": "10.4230/lipics.icalp.2019.76"}}, "content": {"source": {"pdf_hash": "0df3740abc5008639919cf2d5b74c9afc7fa1c20", "pdf_src": "Arxiv", "pdf_uri": "[\"https://export.arxiv.org/pdf/1904.09562v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "f95aa5760048f91582c0541405604be7a22cf7aa", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/0df3740abc5008639919cf2d5b74c9afc7fa1c20.txt", "contents": "\nAn Improved FPTAS for 0-1 Knapsack\n21 Apr 2019\n\nCe Jin jinc16@mails.tsinghua.edu.cn \nInstitute for Interdisciplinary Information Sciences\nTsinghua University\nBeijingChina\n\nAn Improved FPTAS for 0-1 Knapsack\n21 Apr 2019and phrases approximation algorithmsknapsacksubset sum\nThe 0-1 knapsack problem is an important NP-hard problem that admits fully polynomial-time approximation schemes (FPTASs). Previously the fastest FPTAS by Chan (2018) with approximation factor 1 + \u03b5 runs in\u00d5(n + (1/\u03b5) 12/5 ) time, where\u00d5 hides polylogarithmic factors. In this paper we present an improved algorithm in\u00d5(n + (1/\u03b5) 9/4 ) time, with only a (1/\u03b5) 1/4 gap from the quadratic conditional lower bound based on (min, +)-convolution. Our improvement comes from a multi-level extension of Chan's number-theoretic construction, and a greedy lemma that reduces unnecessary computation spent on cheap items.ACM Subject Classification Theory of computation \u2192 Algorithm design techniques\n\nIntroduction\n\n\nBackground\n\nIn the 0-1 knapsack problem, we are given a set I of n items where each item i \u2208 I has weight w i and profit p i , and we want to select a subset J \u2286 I such that j\u2208J w j \u2264 W and j\u2208J p j is maximized. The 0-1 knapsack problem is a fundamental optimization problem in computer science and is one of Karp's 21 NP-complete problems [8]. An important field of study on NP-hard problems is to find efficient approximation algorithms. A (1 + \u03b5)-approximation algorithm (for a maximization problem) outputs a value SOL such that SOL \u2264 OPT \u2264 (1 + \u03b5) \u00b7 SOL, where OPT denotes the optimal answer. The 0-1 knapsack problem is one of the first problems that were shown to have fully polynomial-time approximation schemes (FPTASs), i.e., algorithms with approximation factor 1 + \u03b5 for any given 0 < \u03b5 < 1 and running time polynomial in both n and 1/\u03b5.\n\nThere has been a long line of research on finding faster FPTASs for the 0-1 knapsack problem, as summarized in Table 1. The first algorithm with only subcubic dependence on 1/\u03b5 was due to Rhee [15]. Very recently, Chan [3] gave an elegant algorithm for the 0-1 knapsack problem in deterministic O(n log 1 \u03b5 + ( 1 \u03b5 ) 5/2 /2 \u2126( \u221a log(1/\u03b5)) ) via simple combination of the SMAWK algorithm [1] and a standard divide-and-conquer technique. The speedup of superpolylogarithmic factor 2 \u2126( \u221a log(1/\u03b5)) is due to recent progress on (min, +)-convolution [2,16,4]. Using an elementary number-theoretic lemma, Chan further improved the algorithm to O(n log 1 \u03b5 + ( 1 \u03b5 ) 12/5 /2 \u2126( \u221a log(1/\u03b5)) ) time, and obtained two new algorithms running i\u00f1 O( 1 \u03b5 n 3/2 ) and O(( 1 \u03b5 ) 4/3 n + ( 1 \u03b5 ) 2 )/2 \u2126( \u221a log(1/\u03b5)) ) time respectively, which are faster for small n.\n\nFPTASs on several special cases of 0-1 knapsack are also of interest. For the unbounded knapsack problem, where every item has infinitely many copies, Jansen and Kraft [7] obtained an O(n + ( 1 \u03b5 ) 2 log 3 1 \u03b5 )-time algorithm; the unbounded version can be reduced to 0-1 knapsack with only a logarithmic blowup in the problem size [5]. For the subset sum Table 1 FPTASs for 0-1 knapsack O(n log n + ( 1 \u03b5 ) 4 log 1 \u03b5 ) Ibarra and Kim [6] 1975 O(n log 1 \u03b5 + ( 1 \u03b5 ) 4 ) Lawler [13] 1979 O(n log 1 \u03b5 + ( 1 \u03b5 ) 3 log 2 1 \u03b5 ) Kellerer and Pferschy [11] 2004 O(n log 1 \u03b5 + ( 1 \u03b5 ) 5/2 log 3 1 \u03b5 ) (randomized) Rhee [15] 2015 O(n log 1 \u03b5 + ( 1 \u03b5 ) 12/5 /2 \u2126( \u221a log(1/\u03b5)) ) Chan [3] 2018\nO(n log 1 \u03b5 + ( 1 \u03b5 ) 9/4 /2 \u2126( \u221a log(1/\u03b5)) ) This work O( 1 \u03b5 n 3 ) Textbook algorithm O( 1 \u03b5 n 2 )\nLawler [13] 1979 O(( 1 \u03b5 ) 2 n log 1 \u03b5 ) Kellerer and Pferschy [10] 1999 O( 1 \u03b5 n 3/2 ) (randomized, Las Vegas) Chan [3] 2018\nO((( 1 \u03b5 ) 4/3 n + ( 1 \u03b5 ) 2 )/2 \u2126( \u221a log(1/\u03b5)) )\nChan [3] 2018\nO((( 1 \u03b5 ) 3/2 n 3/4 + ( 1 \u03b5 ) 2 )/2 \u2126( \u221a log(1/\u03b5)) + n log 1 \u03b5 ) This work\nproblem, where every item has p i = w i , Kellerer et al. [9] obtained an algorithm with O(min{n/\u03b5, n + ( 1 \u03b5 ) 2 log 1 \u03b5 }) running time, which will be used in our algorithm as a subroutine. For the partition problem, which is a special case of the subset sum problem where W = 1 2 i\u2208I w i , Mucha et al. [14] obtained an algorithm with a subquadratic\u00d5(n + ( 1 \u03b5 ) 5/3 ) running time.\n\nOn the lower bound side, recent reductions showed by Cygan et al. [5] and K\u00fcnnemann et al. [12] imply that 0-1 knapsack and unbounded knapsack have no FPTAS in O((n+ 1 \u03b5 ) 2\u2212\u03b4 ) time, unless (min, +)-convolution has truly subquadratic algorithm [14]. It remains open whether 0-1 knapsack has a matching upper bound.\n\n\nOur results\n\nIn this paper we present improved FPTASs for the 0-1 knapsack problem. Our results are summarized in the following two theorems.\n\n\u25ee Theorem 1. There is a deterministic (1 + \u03b5)-approximation algorithm for 0-1 knapsack with running time O(n log 1 \u03b5 + ( 1 \u03b5 ) 9/4 /2 \u2126( \u221a log(1/\u03b5)) ).\n\u25ee Theorem 2. For n = O( 1 \u03b5 ), there is a deterministic (1 + \u03b5)-approximation algorithm for 0-1 knapsack with running time O n 3/4 ( 1 \u03b5 ) 3/2 + ( 1 \u03b5 ) 2 /2 \u2126( \u221a log(1/\u03b5)) .\nTheorem 2 gives the current best time bound for [3] remains the fastest. For n \u226b 1 \u03b5 , Theorem 1 gives a better time bound, improving upon the previous O(n log 1 \u03b5 + ( 1 \u03b5 ) 12/5 /2 \u2126( \u221a log(1/\u03b5)) ) algorithm by Chan [3].\n( 1 \u03b5 ) 2/3 \u226a n \u226a 1 \u03b5 , improving upon the previous O(( 1 \u03b5 ) 4/3 n + ( 1 \u03b5 ) 2 )/2 \u2126( \u221a log(1/\u03b5)) ) algorithm by Chan [3]. For n \u226a ( 1 \u03b5 ) 2/3 , Chan's O( 1 \u03b5 n 3/2 ) time randomized algorithm\n\nOutline of our algorithm\n\nWe give an informal overview of our improved algorithm for 0-1 knapsack.\n\nUsing a known reduction [3], it suffices to solve an easier instance of 0-1 knapsack where profits of all items satisfy p i \u2208 [1,2]. Here \"solving an instance\" means approximating the function f (x) := [maximum total profit of items with at most x total weight] for all x \u2265 0, rather than for just a single point x = W . In this restricted case, simple greedy (sorting according to unit profits p i /w i ) gives an additive error of at most max j p j = O(1), so it suffices to approximate the capped function min{\u03b5 \u22121 , f (x)} with approximation factor 1+O(\u03b5). Chan gave an algorithm that (1+\u03b5)-approximates min{B, f (x)} in\u00d5(n+\u03b5 \u22122 B 1/2 ) time (implied by [3,Lemma 7]), which immediately implies an\u00d5(n + \u03b5 \u22125/2 ) time FPTAS by setting B = \u03b5 \u22121 .\n\nGreedy. Now we explain how to use a greedy argument (described in detail in Section 5) to improve this algorithm to\u00d5(n + \u03b5 \u22127/3 ) time. We sort all items (with p i \u2208 [1,2]) in nonincreasing order of unit profits p i /w i , and divide them into three subsets H, M, L (items with high, medium, low unit profits), where H contains the top \u0398(\u03b5 \u22121 ) items, and L contains all items i for which p i /w i \u2264 (1 \u2212 \u03b5 2/3 ) \u00b7 min h\u2208H {p h /w h }, so there is a gap between the unit profits of H-items and L-items. Intuitively, there are sufficiently many H-items available, so it's not optimal to include too many cheap L-items when the knapsack capacity is not very big. To be more precise, we prove that in any optimal solution we care about (i.e., having optimal total profit smaller than \u03b5 \u22121 ), the total profit contributed by L-items cannot exceed O(\u03b5 \u22122/3 ). Hence, for subset L we only need to approximate up to\nB = \u0398(\u03b5 \u22122/3 ) i\u00f1 O(n + \u03b5 \u22122 B 1/2 ) =\u00d5(n + \u03b5 \u22127/3 ) time.\nSubset H has only O(\u03b5 \u22121 ) items and can be solved using Chan's\u00d5(\u03b5 \u22124/3 n + \u03b5 \u22122 ) algorithm in\u00d5(\u03b5 \u22127/3 ) time. To solve subset M , we round down the profit value p i for every item i \u2208 M , so that the unit profit p i /w i becomes a power of (1 + \u03b5). Then there are O(\u03b5 \u22121/3 ) distinct unit profit values in M . Items with the same unit profit can be solved together using the efficient FPTAS for subset sum by Kellerer et al. [9] in\u00d5(n + \u03b5 \u22122 ) time. Finally we merge the results for H, M, L. The total time complexity is\u00d5(n + \u03b5 \u22127/3 ).\n\nMulti-level number-theoretic construction. The above approach invokes two of Chan's algorithms: an\u00d5(n + \u03b5 \u22122 B 1/2 ) algorithm (useful for small B) and an\u00d5(\u03b5 \u22124/3 n + \u03b5 \u22122 ) algorithm (useful for small n). The key ingredient in these algorithms is a number-theoretic lemma: we can (1 + \u03b5)-approximate all profit values p i \u2208 [1, 2] by multiples of elements from a small set \u2206 \u2282 [\u03b4, 2\u03b4] of size |\u2206| =\u00d5( \u03b4 \u03b5 ) (small |\u2206| can reduce the additive error incurred from rounding).\n\nChan obtained an\u00d5(n + \u03b5 \u22122 B 2/5 ) time algorithm using some additional tricks. First, evenly partition \u2206 into r subsets \u2206 (1) , . . . , \u2206 (r) , and divide the items into P = P (1) \u222a\u00b7 \u00b7 \u00b7\u222aP (r) accordingly, so that profit values from P (j) are approximated by \u2206 (j) -multiples. To (1 + \u03b5)approximate the profit function f j for each P (j) , pick a threshold B 0 \u226a B, and return the combination of a (1 + \u03b5)-approximation of min{f j , B 0 } and an \u03b5B 0 -additive-approximation of min{f j , B}. Since the size of \u2206 (j) is only |\u2206|/r, the latter function can be approximated faster when r \u226b 1. Finally, merge f j over all 1 \u2264 j \u2264 r. By fine-tuning the parameters r, \u03b4, B 1 , the time complexity is improved to\u00d5(n + \u03b5 \u22122 B 2/5 ).\n\nOur new algorithm extends this technique to multiple levels.\nTo (1 + \u03b5)-approximate the profit function f j for each P (j) , we will pick B 0 \u226a B 1 \u226a \u00b7 \u00b7 \u00b7 \u226a B d\u22121 \u226a B d \u2248 B, and compute the \u03b5B i\u22121 -additive-approximation of min{f j , B i }, for all i \u2208 [d]\n. An issue of this multi-level approach is that, different levels have different optimal parameters \u03b4 i and different \u2206\n(1) i , . . . , \u2206 (r)\ni , but we have to stick to the same partition of items P = P (1) \u222a \u00b7 \u00b7 \u00b7 \u222a P (r) over all levels. We overcome this issue by enforcing that \u2206 (j) i at level i must be generated by multiples of elements from \u2206 (j) i\u22121 at level i \u2212 1, so that P (j) can be approximated by \u2206 (j) imultiples for all levels. To achieve this, we need a multi-level version of the number-theoretic lemma. We will discuss this part in detail in Section 4.\n\nUsing this multi-level construction, we obtain algorithms in\u00d5(n + \u03b5 \u22122 B 1/3 ) time and O(\u03b5 \u22123/2 n 3/4 + \u03b5 \u22122 ) time. Combining these improved algorithms with the greedy argument previously described (the threshold which splits M and L needs to be adjusted accordingly), we obtain an algorithm in\u00d5(n + \u03b5 \u22129/4 ) time as claimed in Theorem 1.\n\n\nPreliminaries\n\nThroughout this paper, log x stands for log 2 x, and\u00d5(f ) stands for O(f \u00b7 poly log(f )). We will describe our algorithm with approximation factor 1 +O(\u03b5), which can be lowered to 1 + \u03b5 if we scale down \u03b5 by a constant factor at the beginning.\n\nWe are only interested in the case where [13] is already near-optimal. Hence we assume log n = O(log \u03b5 \u22121 ). Assume 0 < w i \u2264 W and p i > 0 for every item i. Then a trivial lower bound of the maximum total profit is max j p j . At the beginning, we discard all items i with p i \u2264 \u03b5 n max j p j . Since the total profit of discarded items is at most \u03b5 max j p j , the optimal total profit is only reduced by a factor of 1 + O(\u03b5). So we can assume that maxj pj minj pj \u2264 n \u03b5 . We adopt Chan's terminology in presenting our algorithm. For a set I of items, define the profit function\nn = O(\u03b5 \u22124 ). For greater n, Lawler's O(n log 1 \u03b5 + ( 1 \u03b5 ) 4 ) algorithmf I (x) = max i\u2208J p i : i\u2208J w i \u2264 x, J \u2286 I over non-negative real numbers x \u2265 0. Note that f I is a monotone (nondecreasing) step function.\nThe complexity of a monotone step function refers to the number of its steps.\n\nWe say that a functionf approximates a function f with factor 1\n+ \u03b5 iff (x) \u2264 f (x) \u2264 (1 + \u03b5)f (x) for all x \u2265 0. We say thatf approximates f with additive error \u03b4 iff (x) \u2264 f (x) \u2264f (x) + \u03b4 for all x \u2265 0.\nOur goal is to approximate f I with factor 1 + O(\u03b5) on the input item set I.\n\nLet I 1 , I 2 be two disjoint subsets of items, and\nI = I 1 \u222a I 2 . We have f I = f I1 \u2295 f I2 , where \u2295 denotes the (max, +)-convolution, defined by (f \u2295 g)(x) = max 0\u2264x \u2032 \u2264x (f (x \u2032 ) + g(x \u2212 x \u2032 )).\nIf two non-negative monotone step functions f, g are approximated with factor 1 + \u03b5 by functionsf ,g respectively, then f \u2295 g is also approximated byf \u2295g with factor 1 + \u03b5.\n\nFor a monotone step function f with range 1 contained in {0} \u222a [A, B], we can obtain a functionf with complexity only O(\u03b5 \u22121 log(B/A)) which approximates f with factor 1 + \u03b5, by simply rounding f down to powers of (1 + \u03b5). For our purposes, B/A will be bounded by polynomial of n and 1/\u03b5, hence we may always assume that the approximation results are monotone step functions with complexity\u00d5(\u03b5 \u22121 ).\n\nFor an item set I with the same profit p i = p for every item i \u2208 I, the step function f I can be exactly computed in O(n log n) time by simple greedy: the function values are 0, p, 2p, . . . , np and the x-breakpoints are w 1 , w 1 +w 2 , . . . , w 1 +\u00b7 \u00b7 \u00b7+w n , after sorting all w i 's in nondecreasing order. We say that a monotone step function is p-uniform if its function values are of the form 0, p, 2p, . . . , lp for some l. We say that a p-uniform function is pseudoconcave if the differences of consecutive x-breakpoints are nondecreasing from left to right. In the previous case where all p i 's are equal to p, f I is indeed p-uniform and pseudo-concave.\n\n\nChan's techniques\n\nIn this section we review several useful lemmas by Chan [3]. \n\n\nMerging profit functions\n1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m with factor 1 + O(\u03b5) and complexity\u00d5( 1 \u03b5 log B/A) in O(n) +\u00d5(( 1 \u03b5 ) 2 m/2 \u2126( \u221a log(1/\u03b5)) log B/A) time.\n\u25ee Remark 4. Lemma 3 is proved using a divide-and-conquer method, which was also used previously in [10]. The speedup of superpolylogarithmic factor 2 \u2126( \u221a log(1/\u03b5)) is due to recent progress on (min, +)-convolution [2,16,4].\n\nLemma 3 enables us to focus on a simpler case where all p i \u2208 [1,2]. For the general case, we divide the items into O(log maxj pj minj pj ) = O(log \u03b5 \u22121 ) groups, each containing items with p i \u2208 [2 j , 2 j+1 ] for some j (which can be rescaled to [1,2]), and finally merge the profit functions of all groups by using Lemma 3 in\u00d5(n + \u03b5 \u22122 ) time.\n\nAssuming \u03b5 \u22121 is an integer and every p i \u2208 [1, 2], we can round every p i down to a multiple of \u03b5, introducing only a 1 + \u03b5 error factor. Then there are only m = O(\u03b5 \u22121 ) distinct values of p i . For every value of p i , the corresponding profit function f i is p i -uniform and pseudo-concave, and can be obtained by simple greedy (as discussed in Section 2).\n\n\nApproximating big profit values using greedy\n\nWhen all p i 's are small, simple greedy gives good approximation guarantee when the answer is big enough. Proof. Sort the items in nonincreasing order of unit profit p i /w i . Letf be the monotone step function resulting from greedy, with function values 0, p 1 , p 1 + p 2 , . . . , p 1 + \u00b7 \u00b7 \u00b7 + p n and x-breakpoints 0, w 1 , w 1 + w 2 , . . . , w 1 + \u00b7 \u00b7 \u00b7 + w n . It approximates f I with an additive error of max i p i \u2264 2 \u2264 O(\u03b5B) for B = \u2126(\u03b5 \u22121 ). \n\n\nApproximation using \u2206-multiples of small set \u2206\n\nFor a set \u2206 of numbers, we say that p is a \u2206-multiple if it is a multiple of \u03b4 for some \u03b4 \u2208 \u2206.\n\n\u25ee Lemma 6 ([3, Lemma 5] \n\u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with factor 1 + O(\u03b5) i\u00f1 O(\u03b5 \u22121 Bm) time.\nProof. Assuming \u03b5 \u22121 is an integer, adjust every p i down to the nearest multiple of \u03b5, and adjust f i accordingly. This introduces a 1 + \u03b5 overall error factor. Then use Lemma 6 with \u03b4 = \u03b5, \u2206 = {\u03b5} to compute the desired function in\u00d5(Bm\u03b5 \u22121 ) time. \u25ed\n\n\nExtending Chan's number-theoretic construction\n\nAs mentioned in Section 1.3, the main results of this section are two approximation algorithms in\u00d5(n + \u03b5 \u22122 B 1/3 ) and\u00d5(\u03b5 \u22123/2 n 3/4 + \u03b5 \u22122 ) time respectively (the latter time bound assumes n = O(1/\u03b5)). These results rely on Lemma 6.\n\n\nNumber-theoretic construction\n\nTo avoid checking boundary conditions, from now on we assume \u03b5 > 0 is sufficiently small. Our algorithm extends Chan's technique by using a multi-level structure defined as follows.\n\n\u25ee Definition 9. For fixed parameters \u03b4 1 , \u03b4 2 , . . . , \u03b4 d satisfying condition\n\u03b5 \u2264 \u03b4 1 , \u03b4 i \u2264 \u03b4 i+1 /2, \u03b4 d \u2264 1/8 (1)\nand a finite real number set \u2206 1 \u2282 [\u03b4 1 , 8\u03b4 1 ], a set tower (\u2206 1 , \u2206 2 , . . . , \u2206 d ) generated by \u2206 1 is defined by recurrence 3\n\u2206 i+1 := [\u03b4 i+1 , 8\u03b4 i+1 ] \u2229 k\u2208Z k\u2206 i , i = 1, 2, . . . , d \u2212 1.(2)\nWe refer to \u2206 1 as the base set and \u2206 d as the top set of this set tower. We also say that the base set \u2206 1 generates the top set \u2206 d . If \u2206 * d is the top set generated by a singleton base set \u2206 * 1 = {x}, then for every y \u2208 \u2206 * d we say x generates y.\n\nWe have the following simple facts about set towers. \n|\u2206 i | = [\u03b4 i , 8\u03b4 i ] \u2229 k\u2208Z k\u2206 i\u22121 \u2264 x\u2208\u2206i\u22121 8\u03b4 i /x \u2264 |\u2206 i\u22121 |8\u03b4 i /\u03b4 i\u22121 .\nThe proof of size upper bounds follows by induction. Elements of \u2206 i can be generated straightforwardly within the time bound. \u25ed \u25ee Lemma 12. Let T 1 , T 2 , . . . , T d be positive real numbers satisfying T 1 \u2265 2 and T i+1 \u2265 2T i . There exist at least T d (log T d ) O(d) integers t satisfying the following condition: t can be written as a product of integers t = n 1 n 2 \u00b7 \u00b7 \u00b7 n d , such that n 1 n 2 \u00b7 \u00b7 \u00b7 n i \u2208 (T i /2, T i ] for every \n1 \u2264 i \u2264 d.k 1 k 2 \u00b7 \u00b7 \u00b7 k i\u22121 \u2208 [\u03b4 i /\u03b4 1 , 2\u03b4 i /\u03b4 1 ], for every 2 \u2264 i \u2264 d.(3)\nThen by Definition 9, for any x \u2208 \u2206 1 \u2282 [\u03b4 1 , 4\u03b4 1 ], we have xk 1 k 2 \u00b7 \u00b7 \u00b7 k i\u22121 \u2208 \u2206 i for every 2 \u2264 i \u2264 d.\n\nFor any integer j satisfying\nk 1 k 2 \u00b7 \u00b7 \u00b7 k d\u22121 j \u2208 [p/(4\u03b4 1 ), p/(2\u03b4 1 )],(4)the interval [ p\u2212\u03b5 k1k2\u00b7\u00b7\u00b7k d\u22121 j , p k1k2\u00b7\u00b7\u00b7k d\u22121 j ] is contained in [\u03b4 1 , 4\u03b4 1 ]\n. We say an integer K is good for p, if K can be expressed as a product of integers k 1 k 2 \u00b7 \u00b7 \u00b7 k d\u22121 j satisfying conditions (3) and (4).\nFor such K, any x \u2208 [ p\u2212\u03b5 K , p K ]\u2229\u2206 1 generates an element y = xk 1 k 2 \u00b7 \u00b7 \u00b7 k d\u22121 \u2208 \u2206 d \u2229[ p\u2212\u03b5 j , p j ]\nsuch that p can be approximated by a multiple of y with additive error \u03b5.\n\nBy Lemma 12, the number of good integers K for p is at least\np/(4\u03b4 1 ) log(p/(4\u03b4 1 )) O(d) = \u2126 \u03b4 \u22121 1 (log \u03b5 \u22121 ) O(d) ,\nand at most p/(2\u03b4 1 ) = O(\u03b4 \u22121 1 ), by (4). Using conditions (3) and (4) we can compute all these K's by simple dynamic programming. We denote the union of their associated intervals by\nI p := K good for p p \u2212 \u03b5 K , p K \u2282 \u03b4 1 , 4\u03b4 1 .(5)\nNote that these intervals are disjoint since p/(K + 1) \u2264 (p \u2212 \u03b5)/K, so the total length of I p can be lower-bounded as\n\u03bb(I p ) \u2265 \u03b4 \u22121 1 (log \u03b5 \u22121 ) O(d) \u00b7 p \u2212 (p \u2212 \u03b5) max K \u2265 \u03b5 (log \u03b5 \u22121 ) O(d) .(6)\nWe have seen that p is approximated by a \u2206 d -multiple with additive error \u03b5 as long as \u2206 1 \u2229 I p = \u2205. We compute I p for every p \u2208 P , and use the standard greedy algorithm (for Hitting Set problem) to construct a base set \u2206 1 \u2282 [\u03b4 1 , 4\u03b4 1 ] which intersects with every I p : in each round we find a point x \u2208 [\u03b4 1 , 4\u03b4 1 ] that hits the most I p 's, include x into \u2206 1 , and remove the I p 's that are hit by x. In each round the number of remaining I p 's decreases by\ns := min p \u03bb(I p ) 4\u03b4 1 \u2212 \u03b4 1 \u2265 \u03b5/\u03b4 1 (log \u03b5 \u22121 ) O(d) ,\nso the solution size |\u2206 1 | is upper-bounded by\n1 + log 1/(1\u2212s) |P | = O log |P | s = \u03b4 1 \u03b5 (log \u03b5 \u22121 ) O(d) .\nTo implement this greedy algorithm, we use standard data structures (for example, segment trees) that support finding x which hits the most intervals, reporting an interval hit by x, removing an interval, all in logarithmic time per operation. The number of operations is bounded by the total number of small intervals, so the running time is at most\u00d5(|P |\u00b7 p\n2\u03b41 ) = O(\u03b4 \u22121 1 \u03b5 \u22121 ). \u25ed\nThe following lemma evenly partitions the base set \u2206 1 into r subsets \u2206\n(1) 1 , . . . , \u2206(r)\n1 , and partitions the profit values P = {p 1 , . . . , p m } into P (1) \u222a \u00b7 \u00b7 \u00b7 \u222a P (r) , so that P (j) can be approximated by \u2206 each of size \u03b41 \u03b5r \u00b7 (log \u03b5 \u22121 ) O(d) , and a partition of P = P (1) \u222a P (2) \u222a \u00b7 \u00b7 \u00b7 \u222a P (r) each of size O(m/r), such that for every 1 \u2264 j \u2264 r, every p \u2208 P (j) can be approximated by a \u2206 \n|\u2206 d | \u2264 8 d\u22121 \u03b4 d \u03b41 |\u2206 1 | \u2264 \u03b4 d \u03b5 (log \u03b5 \u22121 ) O(d) .\nGenerate and sort all \u2206 d -multiples in interval [1,2]. For every p \u2208 P , use binary search to find the \u2206 d -multiple ky \u2264 p (y \u2208 \u2206 d ) closest to p, and then add p to the set Q x , where x \u2208 \u2206 1 is an element that generates y. (Q x is initialized as empty for every x \u2208 \u2206 1 .) Then remove every x with Q x = \u2205 from \u2206 1 , so that |\u2206 1 | \u2264 m, while every p \u2208 P can still be approximated with O(\u03b5) additive error by a \u2206 d -multiple.\n\nLet D := max{r, |\u2206 1 |} and let s := \u2308m/D\u2309. For every x \u2208 \u2206 1 we divide Q x evenly into small subsets each having size at most s. The total number of these small subsets is\nx\u2208\u22061 \u2308|Q x |/s\u2309 \u2264 |\u2206 1 | + x\u2208\u22061 |Q x |/s = |\u2206 1 | + m/s \u2264 2D.\nWe merge these small subsets into r groups, each having at most \u23082D/r\u2309 small subsets. Then, define set P (j) as the union of small subsets from the j-th group, and let base set \u2206 (j) 1 contain x \u2208 \u2206 1 if any of these small subsets comes from Q x . So |\u2206 (j)\n1 | \u2264 \u23082D/r\u2309 = \u03b41 \u03b5r (log \u03b5 \u22121 ) O(d) , and |P (j) | \u2264 s \u00b7 \u23082D/r\u2309 = O(m/D) \u00b7 O(D/r) = O(m/r). \u25ed\n\nApproximation using set towers\n\nWe first prove a slightly improved version of Corollary 8. The only purpose of this lemma is to get rid of the (log \u03b5 \u22121 ) O(log log \u03b5 \u22121 ) factor in the final running time. \nf L that approx- imates min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B L } with factor 1 + O(\u03b5) in only\u00d5(B L m\u03b5 \u22121 ) =\u00d5(B 0.02 m\u03b5 \u22121 ) time. Since f H approximates min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with additive error \u03b5B L , max{f L , f H } is a 1 + O(\u03b5) approximation of min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B}. \u25ed\nNow we can approximate the profit function min{B, p k \u2208P (j) f k } for each group P (j) , using the multi-level approach described in Section 1.3. We can set d = O(log log \u03b5 \u22121 ) and choose d parameters \u03b4 1 , . . . , \u03b4 d satisfying condition (1), such that the following statement holds:\n\nLet P (1) \u222a \u00b7 \u00b7 \u00b7 \u222a P (r) be the partition of set P = {p 1 , . . . , p m } returned by the algorithm in Lemma 14 with the above parameters. Then for any 1 \u2264 j \u2264 r, using the base set \u2206 (j) 1 from Lemma 14, we can compute a monotone step function that approximates min{B,\np k \u2208P (j) f k } with factor 1 + O(\u03b5), in (\u03b5 \u22122 /r 0.01 + m\u03b5 \u22121 B 1/2 /r 3/2 )(log \u03b5 \u22121 ) O(d) time.\nProof. We can assume B \u2265 4r, and define d to be the unique positive integer such that\n2 2 d\u22121 \u2264 \u221a B \u221a r < 2 2 d = 4 2 d\u22121 . Then d = O(log log \u221a B \u221a r ) = O(log log \u03b5 \u22121 ). Pick \u03b1 \u2208 [2, 4) such that \u03b1 2 d\u22121 = \u221a B \u221a r .(7)\nDefine\n\u03b4 i := \u03b5 \u221a Br \u03b1 2 d\u2212i , 0 \u2264 i \u2264 d.(8)\nThen (1). Hence the parameters \u03b4 1 , . . . , \u03b4 d satisfy condition (1) for sufficiently small \u03b5.\n\u03b4 d = \u03b5 \u221a Br \u03b1 , \u03b4 1 = \u03b5r (9) Note that \u03b4 d = \u03b5 \u221a B \u00b7 O( \u221a r) = \u03b5 \u221a B \u00b7 o( \u221a B) = \u03b5 \u00b7 o(B) = o\nThe base set \u2206 (j) 1 from Lemma 14 has size \u03b41 \u03b5r (log \u03b5 \u22121 ) O(d) . We compute the generated set tower \u2206\n(j) 1 , \u2206 (j) 2 , . . . , \u2206 (j) d . By Proposition 11, |\u2206 (j) i | \u2264 \u03b4i \u03b5r (log \u03b5 \u22121 ) O(d) . Let t := max \u03b1, max j |\u2206 (j) i | \u03b4 i \u03b5r = (log \u03b5 \u22121 ) O(d)(10)\nand define\nB i := Bt \u03b1 2 d\u2212i , 0 \u2264 i \u2264 d.(11)Then B \u2264 B d \u2264 B \u00b7 (log \u03b5 \u22121 ) O(d)\n, and it's easy to verify that\n|\u2206 (j) i | \u00b7 \u03b4 i \u2264 B i\u22121 \u03b5, (1 \u2264 i \u2264 d).(12)\nFor every 1 \u2264 i \u2264 d, adjust every p k \u2208 P (j) down to the nearest \u2206 (j)\n\ni -multiple and adjust f k accordingly, which introduces a 1 + O(\u03b5) error factor. Then use Lemma 6 to obtain a monotone step function g i which approximates min{\np k \u2208P (j) f k , B i } with additive error O(|\u2206 (j) i |\u03b4 i ) = O(\u03b5B i\u22121 ) in\u00d5(|P (j) |B i /\u03b4 i ) time.\nThen we use Lemma 15 to obtain a monotone step function g 0 which approximates\nmin{ p k \u2208P (j) f k , B 0 } with 1 + O(\u03b5) factor, in\u00d5(\u03b5 \u22121 (|P (j) |B 0 + \u03b5 \u22121 )B \u22120.01 0 ) time. Notice that B 0 = rt.\nFinally, max{g 0 , g 1 , g 2 , . . . ,\ng d } is a 1 + O(\u03b5) approximation of min{ p k \u2208P (j) f k , B d }, where B d \u2265 B. Overall running time is O(\u03b5 \u22121 (|P (j) |B 0 + \u03b5 \u22121 )B \u22120.01 0 ) + 1\u2264j\u2264d\u00d5 (|P (j) |B j /\u03b4 j ) =\u00d5 \u03b5 \u22121 ( m r \u00b7 (rt) + \u03b5 \u22121 )(rt) \u22120.01 + d \u00b7\u00d5 m r B d /\u03b4 d = (\u03b5 \u22122 /r 0.01 + m\u03b5 \u22121 B 1/2 /r 3/2 )(log \u03b5 \u22121 ) O(d) .\n\u25ed Now we merge the results from all r groups, and obtain an approximation of the final result min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B}.\n\n\u25ee Lemma 17 . Let f 1 , . . . , f m be given monotone step functions with ranges contained in [0, B], and every f k is p k -uniform and pseudo-concave for some p k \u2208 [1,2].\nAssume m = O(1/\u03b5), \u2126(\u03b5 \u22120.01 ) \u2264 B \u2264 O(\u03b5 \u22121 ). We can approximate min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with factor 1 + O(\u03b5) in O(\u03b5 \u22122 B 1/3 /2 \u2126( \u221a log(1/\u03b5)) ) time.\nProof. Assume m \u2265 \u03b5 \u22121 , by adding zero functions which do not change the answer. Let r = o(B) be a positive integer parameter to be determined later. Using Lemma 14 and Lemma 16, we can get a partition of {p 1 , . . . , p m } = P (1) \u222a\u00b7 \u00b7 \u00b7\u222aP (r) and then get an 1 + O(\u03b5) approximation of min{ p k \u2208P (j) f k , B} for every 1 \u2264 j \u2264 r, in r\u00b7(\u03b5 \u22122 /r 0.01 +m\u03b5 \u22121 B 1/2 /r 3/2 )(log \u03b5 \u22121 ) O(d) = (r 0.99 + B/r)\u03b5 \u22122 (log \u03b5 \u22121 ) O(log log \u03b5 \u22121 ) overall time.\n\nThen we use Lemma 3 to merge all these r functions in\u00d5(( 1 \u03b5 ) 2 r/2 \u2126( \u221a log(1/\u03b5)) ) time.\n\nSetting r = B 1/3 2 c \u221a log(1/\u03b5) , where c > 0 is some small enough constant, the total complexity is O(\u03b5 \u22122 B 1/3 /2 \u2126( \u221a log(1/\u03b5)) ).\n\n\u25ed \u25ee Lemma 18. Let I be a set of m items with p i \u2208 [1, 2] for every i \u2208 I, where \u2126(\u03b5 \u22122/3 ) \u2264 m \u2264 O(\u03b5 \u22121 ). One can approximate f I with factor 1 + O(\u03b5) in O(\u03b5 \u22123/2 m 3/4 /2 \u2126( \u221a log(1/\u03b5)) ) time.\n\nProof . Let f 1 , . . . , f m denote the profit functions of the m items.\n\nLet r = o(m 1/2 ) be a positive integer parameter to be determined later. Obtain a partition of {p 1 , . . . , p m } = P (1) \u222a \u00b7 \u00b7 \u00b7 \u222a P (r) using Lemma 14. Let B := max i p\u2208P (i) p \u2264 2 max i |P (i) | = \u0398(m/r). Then r = o(B). Use Lemma 16 to get an 1 + O(\u03b5) approximation of p k \u2208P (j) f k = min{ p k \u2208P (j) f k , B} for every 1 \u2264 j \u2264 r, in r \u00b7 (\u03b5 \u22122 /r 0.01 + m\u03b5 \u22121 B 1/2 /r 3/2 )(log \u03b5 \u22121 ) O(d) = (\u03b5 \u22122 r 0.99 + m 3/2 \u03b5 \u22121 /r)(log \u03b5 \u22121 ) O(log log \u03b5 \u22121 ) overall time.\n\nThen we use Lemma 3 to merge all these r functions in\u00d5(( 1 \u03b5 ) 2 r/2 \u2126( \u221a log(1/\u03b5)) ) time.\n\nSetting r = m 3/4 \u03b5 1/2 2 c \u221a log(1/\u03b5) , where c > 0 is some small enough constant, the total complexity is O(\u03b5 \u22123/2 m 3/4 /2 \u2126( \u221a log(1/\u03b5)) ). The total time is O(n log 1 \u03b5 ) +\u00d5(\u03b1\u03b5 \u22123 + \u03b5 \u22122 (2/\u03b1) 1/3 /2 \u2126( \u221a log(1/\u03b5)) ), which is O(n log 1 \u03b5 + \u03b5 \u22129/4 /2 \u2126( \u221a log(1/\u03b5)) ) if we choose \u03b1 = \u03b5 3/4 /2 c \u221a log(1/\u03b5) for a sufficiently small constant c. \u25ed \u25ee Corollary 25 (restated Theorem 1). There is a deterministic (1 + \u03b5)-approximation algorithm for 0-1 knapsack with running time O(n log 1 \u03b5 + ( 1 \u03b5 ) 9/4 /2 \u2126( \u221a log(1/\u03b5)) ).\n\nProof. Divide the items into O(log n \u03b5 ) groups, each containing items with p i \u2208 [2 j , 2 j+1 ] for some j. Use Lemma 24 to solve each group, and merge them using Lemma 3.\n\n\u25ed\n\n\u25ee Lemma 3 ([ 3 ,\n33Lemma 2(i)]). Let f 1 , . . . , f m be monotone step functions with total complexity O(n) and ranges contained in {0} \u222a [A, B]. Then we can compute a monotone step function that approximates f\n\n\u25ee Lemma 5 .\n5Suppose p i \u2208 [1, 2] for all i \u2208 I. For B = \u2126(\u03b5 \u22121 ), the function f I can be approximated with additive error O(\u03b5B) in O(n log n) time.\n\n\u25ed\nWhen every p i \u2208 [1, 2], we set B = \u03b5 \u22121 and let f H denote the result from greedy (Lemma 5). Then we only need to obtain a function f L which 1 + O(\u03b5) approximates min{f I , B}, and finally return max{f L , f H } as a 1 + O(\u03b5) approximation of f I (because when f I (x) exceeds B, an additive error O(\u03b5B) implies 1 + O(\u03b5) approximation factor).\n\nd\n-multiples. An additional requirement is that P (1) , . . . , P (r) should have size O(|P |/r) each. \u25ee Lemma 14. Let \u03b4 1 , . . . , \u03b4 d be parameters satisfying condition (1). Let P = {p 1 , . . . , p m } \u2282 [1, 2] with m = O(\u03b5 \u22121 ). Given a positive integer parameter r = O(min{ \u03b41 \u03b5 , m}), there exist r base sets \u2206\n\nd\n-multiple with additive error O(\u03b5), where \u2206 (j) d is the top set generated by \u2206 (j) 1 . These r base sets and the partition of P can be computed by a deterministic algorithm in\u00d5(\u03b5 \u22122 /r) time . Proof. First construct the base set \u2206 1 of size \u03b41 \u03b5 (log \u03b5 \u22121 ) O(d) from Lemma 13 in\u00d5(\u03b4 \u22121 1 \u03b5 \u22121 ) = O(\u03b5 \u22122 /r) time, and compute the top set \u2206 d that it generates. By Proposition 11,\n\n\u25ee Lemma 15 .\n15Let f 1 , .. . , f m be monotone step functions with ranges contained in[0, B] for some 1 \u2264 B \u2264 O(\u03b5 \u22121 ). If every f i is p i -uniform and pseudo-concave for some p i \u2208 [1, 2], then we can compute a monotone step function that approximatesmin{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with factor 1 + O(\u03b5) in\u00d5(\u03b5 \u22121 (Bm + \u03b5 \u22121 )/B 0.01 ) time.Proof. Using Lemma 13 with parameters d = 1, \u03b4 1 = \u03b5B 0.01 , we get \u2206 \u2282 [\u03b4 1 , 8\u03b4 1 ] with size |\u2206| \u2264\u00d5(\u03b4 1 /\u03b5) =\u00d5(B 0.01 ), in\u00d5(\u03b5 \u22122 /B 0.01 ) time. Adjust every p i down to the nearest \u2206multiple, and adjust f i accordingly. This introduces at most 1 + O(\u03b5) error factor. Then use Lemma 6 to compute a monotone step function f H that approximates min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with additive error e = O(|\u2206|\u03b4 1 ) =\u00d5(\u03b5B 0.02 ), in\u00d5(B 0.99 m\u03b5 \u22121 ) time.Let B L := e/\u03b5, and use Corollary 8 to compute a monotone step function\n\n\u25ee\nLemma 16. Let f 1 , . . . , f m be given monotone step functions with ranges contained in [0, B], and every f k is p k -uniform and pseudo-concave for some p k \u2208 [1, 2]. Assume m = O(\u03b5 \u22121 ), \u2126(\u03b5 \u22120.01 ) \u2264 B \u2264 O(\u03b5 \u22121 ). Let r be a given positive integer parameter with r = O(m), r = o(B).\n\n\u25ed\u25ee\nCorollary 19 (restated Theorem 2). For n = O( 1 \u03b5 ), there is a deterministic (1 + \u03b5)approximation algorithm for 0-1 knapsack in O n 3/4 ( 1 \u03b5 ) 3/2 + ( 1 \u03b5 ) 2 /2 \u2126( \u221a log(1/\u03b5)) time.the function f Mq in O(|M q | + \u03b5 \u22122 ) time. Then we use Lemma 3 to merge these functions and obtain a 1 + \u03b5 approximation of f M . The total time is O(|M | log n) +\u00d5(\u03b1\u03b5 \u22123 ). Finally we merge the functions and get an approximation of min{B, f L \u2295 f H \u2295 f M } with factor 1 + O(\u03b5).\n\n\nAn intuition of Lemma 6 is as follows. When p i 's are exact multiples of \u03b4, standard dynamic programming algorithm maintains a result array of length B/\u03b4, and adding a new f i to the result can be done in linear time (by exploiting the pseudo-concavity of f i using the SMAWK algorithm 2 ). Now if the next p i to be considered is a multiple of \u03b4 \u2032 = \u03b4, we first have to round down the current results to multiples of \u03b4 \u2032 , introducing an additive error of \u03b4 \u2032 . We round our results for |\u2206| \u2212 1 times, so smaller |\u2206| implies smaller overall additive error.). Let f 1 , . . . , f m be monotone step functions with ranges con-\ntained in [0, B]. Let \u2206 \u2282 [\u03b4, 8\u03b4]. If every f i is p i -uniform and pseudo-concave for some \np i \u2208 [1, 2] which is a \u2206-multiple, then we can compute a monotone step function that ap-\nproximates min{f 1 \u2295 \u00b7 \u00b7 \u00b7 \u2295 f m , B} with additive error O(|\u2206|\u03b4) in\u00d5(Bm/\u03b4) time. \n\u25ee Remark 7. \u25ee Corollary 8. Let f 1 , . . . , f m be monotone step functions with ranges contained in [0, B]. \nIf every f i is p i -uniform and pseudo-concave for some p i \u2208 [1, 2], then we can compute a \nmonotone step function that approximates min{f 1 \n\n\n\u25ee Proposition 10. If x generates y then x \u2208 \u2206 1 implies y \u2208 \u2206 d . Conversely, for every y \u2208 \u2206 d , there exists x \u2208 \u2206 1 which generates y, and for every 1 \u2264 i \u2264 d there exists z \u2208 \u2206 i such that both y/z and z/x are integers.\u25ee Proposition 11. For any 1 \u2264 i \u2264 d, |\u2206 i | \u2264 8 i\u22121 (\u03b4 i /\u03b4 1 )|\u2206 1 |, and we can compute \u2206 i i\u00f1 O(8 i\u22121 (\u03b4 i /\u03b4 1 )|\u2206 1 |) time given \u2206 1 as input.Proof. For 2 \u2264 i \u2264 d, we have \n\n\n\n\nwhere \u2206 d is the top set generated by \u2206 1 . This base set \u2206 1 can be constructed in\u00d5(\u03b5 \u22121 \u03b4 \u22121 1 ) time deterministically.Proof. Let P = {1, 1 + \u03b5, 1 + 2\u03b5, . . ., 1 + \u230a 1 \u03b5 \u230b\u03b5}.It suffices to approximate every value p \u2208 P with additive error \u03b5 using \u2206 d -multiples. For any p \u2208 P and y \u2208 \u2206 d \u2282 [\u03b4 d , 8\u03b4 d ], p is approximated with additive error \u03b5 by a multiple of y if and only if y \u2208 j\u2208Z p\u2212\u03b5 j , p j . Our constructed base set \u2206 1 will satisfy \u2206 1 \u2282 [\u03b4 1 , 4\u03b4 1 ]. Suppose integers k 1 , k 2 , . . . , k d\u22121 satisfyThe proof of Lemma 12 is deferred to Appendix A. Lemma 12 helps us prove the following \nfact, which is a multi-level extension of [3, Lemma 6]. \n\n\u25ee Lemma 13. For any parameters \u03b4 1 , . . . , \u03b4 d satisfying condition (1), there exists a base set \n\u2206 1 of size \u03b41 \n\u03b5 \u00b7 (log \u03b5 \u22121 ) O(d) , such that every p \u2208 [1, 2] can be approximated by a \u2206 d -multiple \nwith additive error O(\u03b5), \nHere range refers to the set of possible output values of the function.\nThe SMAWK algorithm [1] finds all row-minima in an n \u00d7 n matrix A satisfying the Monge property A[i, j] + A[i + 1, j + 1] \u2264 A[i, j + 1] + A[i + 1, j] using only O(n) queries. 3 For a number k and a set A of numbers, kA := {ka : a \u2208 A}.\nProof. Divide the items into O(log n \u03b5 ) groups, each containing items with p i \u2208 [2 j , 2 j+1 ] for some j. Use Lemma 18 to solve each group, and merge them using Lemma 3. \u25ed 5 Main algorithmA greedy lemmaOur improved algorithm uses the following lemma, which gives an upper bound on the total profit of cheap items (with low p i /w i ) in an optimal knapsack solution.\u25ee Lemma 20. Let H, L be two subsets of items with p i \u2208[1,2]. Let W = h\u2208H w h and q = min h\u2208H\u03b1 . Let J \u2286 H be a subset of items with total weight w J \u2264 x \u2212 w L and total profit achieving optimal value f H (x \u2212 w L ). Let K \u2286 H\\J be a subset of items with total weight w K , such that w K \u2264 w L , and w K + w i > w L for every remaining item i \u2208 H\\(J \u222a K). Such K can be constructed by a simple greedy algorithm.SinceSince J \u222aK is a subset of H with total weight bounded by x,FPTAS for Subset SumWe will use the efficient FPTAS for the subset sum problem by Kellerer et al.[9]as a subroutine in our algorithm.\u25ee Lemma 21([9], implicit). Let I be a set of n items and W be a number. We can obtain\u25ee Remark 22. This result wasn't explicitly stated in[9], but can be easily seen from their analysis of the correctness of the FPTAS.\u25ee Corollary 23. Let I be a set of n items with p i \u2208 [1, 2] and p i = w i for every item i \u2208 I.We can approximateProof. Notice that approximating s with additive error \u03b5W implies approximation factor 1+O(\u03b5) for W/2 \u2264 s \u2264 W . So we simply apply Lemma 21 with W = 2 j for 0 \u2264 j \u2264 1+log n, and merge all obtained lists. \u25ed We sort the items by their unit profits p i /w i . Let set H contain the top B items with the highest unit profits. Define q = min h\u2208H p h w h , and let M be the set of remaining items i with q(1 \u2212 \u03b1) \u2264 pi wi \u2264 q, where parameter 0 < \u03b1 < 1 is to be determined later. Let set L contain the remaining items not included in H or M .Improved algorithmUsing Lemma 18, we can computef H which approximates f H with factor 1 + O(\u03b5) inSince max l\u2208LFor every item l \u2208 L, we round down p l to a power of 1+\u03b5, so that there are only log 1+\u03b5 2 = O(\u03b5 \u22121 ) distinct values. This only multiplies the approximation factor by 1 + \u03b5. Then we use Lemma 17 to compute an approximation of min{2/\u03b1, f L } with factor 1 + O(\u03b5) in\u00d5(\u03b5 \u22122 (2/\u03b1) 1/3 /2 \u2126( \u221a log(1/\u03b5)) ) time. We merge it with f H and obtain an approximation of min{f H \u2295 f L , B} with factor 1 + O(\u03b5).For every m \u2208 M , we round down p m so that the unit profit p m /w m becomes a power of 1 + \u03b5. After rounding, the approximation factor is only multiplied by 1 + \u03b5, and there are at most log 1+\u03b5integers t satisfying the following condition: t can be written as a product of integers t = n 1 n 2 \u00b7 \u00b7 \u00b7 n d , such that n 1 n 2 \u00b7 \u00b7 \u00b7 n i \u2208 (T i /2, T i ] for every 1 \u2264 i \u2264 d.Proof. For every 1 \u2264 k \u2264 d, we say an ordered k-tuple (p 1 , p 2 , . . . , p k ) is valid if every p i is prime, and p 1 p 2 \u00b7 \u00b7 \u00b7 p i \u2208 (T i /2, T i ] for every 1 \u2264 i \u2264 k. Then the product t = p 1 p 2 \u00b7 \u00b7 \u00b7 p d of any valid d-tuple (p 1 , . . . , p d ) satisfies our condition. For any integer t, there are at most d! different valid d-tuples with product t (which could be obtained by permuting t's prime factors). Let N k denote the number of valid k-tuples. Then it suffices to showBy the prime number theorem and Bertrand-Chebyshev theorem, there exists a positive constant C such thatwhere \u03c0(x) denotes the number of primes less than or equal to x. We will prove N k \u2265 T k /(C log T k ) k for all 1 \u2264 k \u2264 d by induction.First note that this statement is trivial for k = 1. For k \u2265 2, a valid k-tuple (p 1 , . . . , p k ) can be obtained by appending any prime p k \u2208 T k /(2P ), T k /P to any valid (k \u2212 1)-tuple (p 1 , . . . , p k\u22121 ) with product P = p 1 \u00b7 \u00b7 \u00b7 p k\u22121 \u2264 T k\u22121 . The number of such primes p k isSumming over all valid (k \u2212 1)-tuples, we haveHence, N d \u2265 T d /(C log T d ) d by induction. Observe that T d \u2265 2 d and we havewhich finishes the proof.\u25ed\nGeometric applications of a matrix-searching algorithm. Alok Aggarwal, Maria M Klawe, Shlomo Moran, Peter Shor, Robert Wilber, 10.1007/BF01840359Algorithmica. 21Alok Aggarwal, Maria M. Klawe, Shlomo Moran, Peter Shor, and Robert Wilber. Geometric applications of a matrix-searching algorithm. Algorithmica, 2(1):195-208, November 1987. doi:10.1007/BF01840359.\n\nDavid Bremner, Timothy M Chan, Erik D Demaine, Jeff Erickson, Ferran Hurtado, John Iacono, Stefan Langerman, 10.1007/s00453-012-9734-3Mihai P\u01cetra\u015fcu, and Perouz Taslakian. Necklaces, convolutions, and x+y. 69David Bremner, Timothy M. Chan, Erik D. Demaine, Jeff Erickson, Ferran Hurtado, John Iacono, Stefan Langerman, Mihai P\u01cetra\u015fcu, and Perouz Taslakian. Necklaces, convolutions, and x+y. Algorithmica, 69(2):294-314, June 2014. doi:10.1007/s00453-012-9734-3.\n\nApproximation Schemes for 0-1 Knapsack. Timothy M Chan, 10.4230/OASIcs.SOSA.2018.5Proceedings of the 1st Symposium on Simplicity in Algorithms (SOSA). the 1st Symposium on Simplicity in Algorithms (SOSA)5Timothy M. Chan. Approximation Schemes for 0-1 Knapsack. In Proceedings of the 1st Symposium on Simplicity in Algorithms (SOSA), pages 5:1-5:12, 2018. doi:10.4230/OASIcs.SOSA.2018.5.\n\nDeterministic apsp, orthogonal vectors, and more: Quickly derandomizing razborov-smolensky. Timothy M Chan, Ryan Williams, 10.1137/1.9781611974331.ch87Proceedings of the 27th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA). the 27th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)Timothy M. Chan and Ryan Williams. Deterministic apsp, orthogonal vectors, and more: Quickly derandomizing razborov-smolensky. In Proceedings of the 27th An- nual ACM-SIAM Symposium on Discrete Algorithms (SODA), pages 1246-1255, 2016. doi:10.1137/1.9781611974331.ch87.\n\nOn problems equivalent to (min,+)-convolution. Marek Cygan, Marcin Mucha, Karol W\u0119grzycki, Micha\u0142 W\u0142odarczyk, 10.1145/3293465ACM Trans. Algorithms. 151Marek Cygan, Marcin Mucha, Karol W\u0119grzycki, and Micha\u0142 W\u0142odarczyk. On problems equivalent to (min,+)-convolution. ACM Trans. Algorithms, 15(1):14:1-14:25, January 2019. doi:10.1145/3293465.\n\nFast approximation algorithms for the knapsack and sum of subset problems. H Oscar, Chul E Ibarra, Kim, 10.1145/321906.321909Journal of the ACM (JACM). 224Oscar H. Ibarra and Chul E. Kim. Fast approximation algorithms for the knapsack and sum of subset problems. Journal of the ACM (JACM), 22(4):463-468, October 1975. doi:10.1145/321906.321909.\n\nA faster fptas for the unbounded knapsack problem. Klaus Jansen, Stefan E J Kraft, 10.1016/j.ejc.2017.07.016European Journal of Combinatorics. 68Klaus Jansen and Stefan E.J. Kraft. A faster fptas for the unbounded knapsack problem. European Journal of Combinatorics, 68:148 -174, 2018. doi:10.1016/j.ejc.2017.07.016.\n\nReducibility among combinatorial problems. Richard M Karp, 10.1007/978-1-4684-2001-2_9In Complexity of Computer Computations. Springer USRichard M. Karp. Reducibility among combinatorial problems. In Complexity of Computer Computations, pages 85-103. Springer US, 1972. doi:10.1007/978-1-4684-2001-2_9.\n\nAn efficient fully polynomial approximation scheme for the subset-sum problem. Hans Kellerer, Renata Mansini, Ulrich Pferschy, Maria Grazia Speranza, 10.1016/S0022-0000(03)00006-0Journal of Computer and System Sciences. 662Hans Kellerer, Renata Mansini, Ulrich Pferschy, and Maria Grazia Speranza. An efficient fully polynomial approximation scheme for the subset-sum problem. Journal of Computer and System Sciences, 66(2):349 -370, 2003. doi:10.1016/S0022-0000(03)00006-0.\n\nA new fully polynomial time approximation scheme for the knapsack problem. Hans Kellerer, Ulrich Pferschy, 10.1023/A:1009813105532Journal of Combinatorial Optimization. 31Hans Kellerer and Ulrich Pferschy. A new fully polynomial time approximation scheme for the knapsack problem. Journal of Combinatorial Optimization, 3(1):59-71, July 1999. doi:10.1023/A:1009813105532.\n\nImproved dynamic programming in connection with an fptas for the knapsack problem. Hans Kellerer, Ulrich Pferschy, 10.1023/B:JOCO.0000021934.29833.6bJournal of Combinatorial Optimization. 81Hans Kellerer and Ulrich Pferschy. Improved dynamic programming in connection with an fptas for the knapsack problem. Journal of Combinatorial Optimization, 8(1):5-11, March 2004. doi:10.1023/B:JOCO.0000021934.29833.6b.\n\nOn the fine-grained complexity of one-dimensional dynamic programming. Marvin K\u00fcnnemann, Ramamohan Paturi, Stefan Schneider, 10.4230/LIPIcs.ICALP.2017.21Proceedings of the 44th International Colloquium on Automata, Languages, and Programming (ICALP). the 44th International Colloquium on Automata, Languages, and Programming (ICALP)21Marvin K\u00fcnnemann, Ramamohan Paturi, and Stefan Schneider. On the fine-grained com- plexity of one-dimensional dynamic programming. In Proceedings of the 44th International Colloquium on Automata, Languages, and Programming (ICALP), pages 21:1-21:15, 2017. doi:10.4230/LIPIcs.ICALP.2017.21.\n\nFast approximation algorithms for knapsack problems. Eugene L Lawler, 10.1287/moor.4.4.339Mathematics of Operations Research. 44Eugene L. Lawler. Fast approximation algorithms for knapsack problems. Mathematics of Operations Research, 4(4):339-356, 1979. doi:10.1287/moor.4.4.339.\n\nSubquadratic approximation scheme for partition. Marcin Mucha, Karol W\u0119grzycki, Micha\u0142 W\u0142odarczyk, 10.1137/1.9781611975482.5Proceedings of the 30th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA). the 30th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA)Marcin Mucha, Karol W\u0119grzycki, and Micha\u0142 W\u0142odarczyk. Subquadratic approximation scheme for partition. In Proceedings of the 30th Annual ACM-SIAM Symposium on Discrete Algorithms (SODA), pages 70-88, 2019. doi:10.1137/1.9781611975482.5.\n\nFaster fully polynomial approximation schemes for knapsack problems. Donguk Rhee, Massachusetts Institute of TechnologyMaster's thesisDonguk Rhee. Faster fully polynomial approximation schemes for knapsack prob- lems. Master's thesis, Massachusetts Institute of Technology, 2015. URL: http://hdl.handle.net/1721.1/98564.\n\nFaster all-pairs shortest paths via circuit complexity. Ryan Williams, 10.1145/2591796.2591811Proceedings of the 46th Annual ACM Symposium on Theory of Computing (STOC). the 46th Annual ACM Symposium on Theory of Computing (STOC)Ryan Williams. Faster all-pairs shortest paths via circuit complexity. In Proceedings of the 46th Annual ACM Symposium on Theory of Computing (STOC), pages 664-673, 2014. doi:10.1145/2591796.2591811.\n", "annotations": {"author": "[{\"end\":172,\"start\":49}]", "publisher": null, "author_last_name": "[{\"end\":55,\"start\":52}]", "author_first_name": "[{\"end\":51,\"start\":49}]", "author_affiliation": "[{\"end\":171,\"start\":86}]", "title": "[{\"end\":35,\"start\":1},{\"end\":207,\"start\":173}]", "venue": null, "abstract": "[{\"end\":963,\"start\":274}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b7\"},\"end\":1323,\"start\":1320},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":2028,\"start\":2024},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2053,\"start\":2050},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2221,\"start\":2218},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2380,\"start\":2377},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":2383,\"start\":2380},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2385,\"start\":2383},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2855,\"start\":2852},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3019,\"start\":3016},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3122,\"start\":3119},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3165,\"start\":3161},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3233,\"start\":3229},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":3299,\"start\":3295},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3360,\"start\":3357},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3478,\"start\":3474},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3534,\"start\":3530},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3587,\"start\":3584},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3651,\"start\":3648},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3794,\"start\":3791},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4043,\"start\":4039},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":4189,\"start\":4186},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4215,\"start\":4211},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4369,\"start\":4365},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4959,\"start\":4956},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5128,\"start\":5125},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5452,\"start\":5449},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":5554,\"start\":5551},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5556,\"start\":5554},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":6086,\"start\":6083},{\"end\":6094,\"start\":6086},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6343,\"start\":6340},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6345,\"start\":6343},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7572,\"start\":7569},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":10363,\"start\":10359},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":13001,\"start\":12998},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":13256,\"start\":13252},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13371,\"start\":13368},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":13374,\"start\":13371},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13376,\"start\":13374},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13444,\"start\":13441},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13446,\"start\":13444},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13630,\"start\":13627},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13632,\"start\":13630},{\"end\":14764,\"start\":14756},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":19519,\"start\":19516},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":19521,\"start\":19519},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":21215,\"start\":21212},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":21906,\"start\":21903},{\"end\":23598,\"start\":23592},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":23667,\"start\":23664},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":23669,\"start\":23667}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":26270,\"start\":26058},{\"attributes\":{\"id\":\"fig_1\"},\"end\":26421,\"start\":26271},{\"attributes\":{\"id\":\"fig_2\"},\"end\":26770,\"start\":26422},{\"attributes\":{\"id\":\"fig_3\"},\"end\":27089,\"start\":26771},{\"attributes\":{\"id\":\"fig_4\"},\"end\":27473,\"start\":27090},{\"attributes\":{\"id\":\"fig_5\"},\"end\":28331,\"start\":27474},{\"attributes\":{\"id\":\"fig_6\"},\"end\":28622,\"start\":28332},{\"attributes\":{\"id\":\"fig_7\"},\"end\":29092,\"start\":28623},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":30241,\"start\":29093},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":30647,\"start\":30242},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":31546,\"start\":30648}]", "paragraph": "[{\"end\":1829,\"start\":992},{\"end\":2682,\"start\":1831},{\"end\":3365,\"start\":2684},{\"end\":3592,\"start\":3467},{\"end\":3656,\"start\":3643},{\"end\":4118,\"start\":3733},{\"end\":4435,\"start\":4120},{\"end\":4579,\"start\":4451},{\"end\":4732,\"start\":4581},{\"end\":5129,\"start\":4908},{\"end\":5423,\"start\":5351},{\"end\":6172,\"start\":5425},{\"end\":7082,\"start\":6174},{\"end\":7679,\"start\":7142},{\"end\":8154,\"start\":7681},{\"end\":8881,\"start\":8156},{\"end\":8943,\"start\":8883},{\"end\":9260,\"start\":9141},{\"end\":9713,\"start\":9283},{\"end\":10055,\"start\":9715},{\"end\":10316,\"start\":10073},{\"end\":10898,\"start\":10318},{\"end\":11189,\"start\":11112},{\"end\":11254,\"start\":11191},{\"end\":11473,\"start\":11397},{\"end\":11526,\"start\":11475},{\"end\":11848,\"start\":11676},{\"end\":12249,\"start\":11850},{\"end\":12920,\"start\":12251},{\"end\":13003,\"start\":12942},{\"end\":13377,\"start\":13153},{\"end\":13725,\"start\":13379},{\"end\":14088,\"start\":13727},{\"end\":14594,\"start\":14137},{\"end\":14739,\"start\":14645},{\"end\":14765,\"start\":14741},{\"end\":15077,\"start\":14826},{\"end\":15363,\"start\":15128},{\"end\":15578,\"start\":15397},{\"end\":15661,\"start\":15580},{\"end\":15834,\"start\":15702},{\"end\":16156,\"start\":15903},{\"end\":16211,\"start\":16158},{\"end\":16730,\"start\":16289},{\"end\":16922,\"start\":16812},{\"end\":16952,\"start\":16924},{\"end\":17228,\"start\":17088},{\"end\":17411,\"start\":17338},{\"end\":17473,\"start\":17413},{\"end\":17719,\"start\":17534},{\"end\":17890,\"start\":17772},{\"end\":18443,\"start\":17971},{\"end\":18548,\"start\":18501},{\"end\":18971,\"start\":18612},{\"end\":19070,\"start\":18999},{\"end\":19410,\"start\":19092},{\"end\":19897,\"start\":19467},{\"end\":20071,\"start\":19899},{\"end\":20391,\"start\":20134},{\"end\":20695,\"start\":20521},{\"end\":21257,\"start\":20970},{\"end\":21529,\"start\":21259},{\"end\":21716,\"start\":21631},{\"end\":21859,\"start\":21853},{\"end\":21994,\"start\":21898},{\"end\":22195,\"start\":22090},{\"end\":22362,\"start\":22352},{\"end\":22463,\"start\":22433},{\"end\":22580,\"start\":22509},{\"end\":22743,\"start\":22582},{\"end\":22925,\"start\":22847},{\"end\":23084,\"start\":23046},{\"end\":23497,\"start\":23376},{\"end\":23670,\"start\":23499},{\"end\":24283,\"start\":23827},{\"end\":24376,\"start\":24285},{\"end\":24513,\"start\":24378},{\"end\":24711,\"start\":24515},{\"end\":24786,\"start\":24713},{\"end\":25259,\"start\":24788},{\"end\":25352,\"start\":25261},{\"end\":25880,\"start\":25354},{\"end\":26054,\"start\":25882},{\"end\":26057,\"start\":26056}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":3466,\"start\":3366},{\"attributes\":{\"id\":\"formula_1\"},\"end\":3642,\"start\":3593},{\"attributes\":{\"id\":\"formula_2\"},\"end\":3732,\"start\":3657},{\"attributes\":{\"id\":\"formula_3\"},\"end\":4907,\"start\":4733},{\"attributes\":{\"id\":\"formula_4\"},\"end\":5323,\"start\":5130},{\"attributes\":{\"id\":\"formula_5\"},\"end\":7141,\"start\":7083},{\"attributes\":{\"id\":\"formula_6\"},\"end\":9140,\"start\":8944},{\"attributes\":{\"id\":\"formula_7\"},\"end\":9282,\"start\":9261},{\"attributes\":{\"id\":\"formula_8\"},\"end\":10972,\"start\":10899},{\"attributes\":{\"id\":\"formula_9\"},\"end\":11111,\"start\":10972},{\"attributes\":{\"id\":\"formula_10\"},\"end\":11396,\"start\":11255},{\"attributes\":{\"id\":\"formula_11\"},\"end\":11675,\"start\":11527},{\"attributes\":{\"id\":\"formula_12\"},\"end\":13152,\"start\":13031},{\"attributes\":{\"id\":\"formula_13\"},\"end\":14825,\"start\":14766},{\"attributes\":{\"id\":\"formula_14\"},\"end\":15701,\"start\":15662},{\"attributes\":{\"id\":\"formula_15\"},\"end\":15902,\"start\":15835},{\"attributes\":{\"id\":\"formula_16\"},\"end\":16288,\"start\":16212},{\"attributes\":{\"id\":\"formula_17\"},\"end\":16741,\"start\":16731},{\"attributes\":{\"id\":\"formula_18\"},\"end\":16811,\"start\":16741},{\"attributes\":{\"id\":\"formula_19\"},\"end\":17003,\"start\":16953},{\"attributes\":{\"id\":\"formula_20\"},\"end\":17087,\"start\":17003},{\"attributes\":{\"id\":\"formula_21\"},\"end\":17337,\"start\":17229},{\"attributes\":{\"id\":\"formula_22\"},\"end\":17533,\"start\":17474},{\"attributes\":{\"id\":\"formula_23\"},\"end\":17771,\"start\":17720},{\"attributes\":{\"id\":\"formula_24\"},\"end\":17970,\"start\":17891},{\"attributes\":{\"id\":\"formula_25\"},\"end\":18500,\"start\":18444},{\"attributes\":{\"id\":\"formula_26\"},\"end\":18611,\"start\":18549},{\"attributes\":{\"id\":\"formula_27\"},\"end\":18998,\"start\":18972},{\"attributes\":{\"id\":\"formula_28\"},\"end\":19091,\"start\":19071},{\"attributes\":{\"id\":\"formula_29\"},\"end\":19466,\"start\":19411},{\"attributes\":{\"id\":\"formula_30\"},\"end\":20133,\"start\":20072},{\"attributes\":{\"id\":\"formula_31\"},\"end\":20487,\"start\":20392},{\"attributes\":{\"id\":\"formula_32\"},\"end\":20969,\"start\":20696},{\"attributes\":{\"id\":\"formula_33\"},\"end\":21630,\"start\":21530},{\"attributes\":{\"id\":\"formula_34\"},\"end\":21852,\"start\":21717},{\"attributes\":{\"id\":\"formula_35\"},\"end\":21897,\"start\":21860},{\"attributes\":{\"id\":\"formula_36\"},\"end\":22089,\"start\":21995},{\"attributes\":{\"id\":\"formula_37\"},\"end\":22351,\"start\":22196},{\"attributes\":{\"id\":\"formula_38\"},\"end\":22397,\"start\":22363},{\"attributes\":{\"id\":\"formula_39\"},\"end\":22432,\"start\":22397},{\"attributes\":{\"id\":\"formula_40\"},\"end\":22508,\"start\":22464},{\"attributes\":{\"id\":\"formula_41\"},\"end\":22846,\"start\":22744},{\"attributes\":{\"id\":\"formula_42\"},\"end\":23045,\"start\":22926},{\"attributes\":{\"id\":\"formula_43\"},\"end\":23375,\"start\":23085},{\"attributes\":{\"id\":\"formula_44\"},\"end\":23826,\"start\":23671}]", "table_ref": "[{\"end\":1949,\"start\":1942},{\"end\":3047,\"start\":3040}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":977,\"start\":965},{\"attributes\":{\"n\":\"1.1\"},\"end\":990,\"start\":980},{\"attributes\":{\"n\":\"1.2\"},\"end\":4449,\"start\":4438},{\"attributes\":{\"n\":\"1.3\"},\"end\":5349,\"start\":5325},{\"attributes\":{\"n\":\"2\"},\"end\":10071,\"start\":10058},{\"attributes\":{\"n\":\"3\"},\"end\":12940,\"start\":12923},{\"attributes\":{\"n\":\"3.1\"},\"end\":13030,\"start\":13006},{\"attributes\":{\"n\":\"3.2\"},\"end\":14135,\"start\":14091},{\"attributes\":{\"n\":\"3.3\"},\"end\":14643,\"start\":14597},{\"attributes\":{\"n\":\"4\"},\"end\":15126,\"start\":15080},{\"attributes\":{\"n\":\"4.1\"},\"end\":15395,\"start\":15366},{\"attributes\":{\"n\":\"4.2\"},\"end\":20519,\"start\":20489},{\"end\":26075,\"start\":26059},{\"end\":26283,\"start\":26272},{\"end\":26424,\"start\":26423},{\"end\":26773,\"start\":26772},{\"end\":27092,\"start\":27091},{\"end\":27487,\"start\":27475},{\"end\":28334,\"start\":28333},{\"end\":28626,\"start\":28624}]", "table": "[{\"end\":30241,\"start\":29653},{\"end\":30647,\"start\":30615},{\"end\":31546,\"start\":31168}]", "figure_caption": "[{\"end\":26270,\"start\":26078},{\"end\":26421,\"start\":26285},{\"end\":26770,\"start\":26425},{\"end\":27089,\"start\":26774},{\"end\":27473,\"start\":27093},{\"end\":28331,\"start\":27490},{\"end\":28622,\"start\":28335},{\"end\":29092,\"start\":28627},{\"end\":29653,\"start\":29095},{\"end\":30615,\"start\":30244},{\"end\":31168,\"start\":30650}]", "figure_ref": "[{\"end\":23523,\"start\":23510},{\"end\":24732,\"start\":24719}]", "bib_author_first_name": "[{\"end\":35811,\"start\":35807},{\"end\":35827,\"start\":35822},{\"end\":35829,\"start\":35828},{\"end\":35843,\"start\":35837},{\"end\":35856,\"start\":35851},{\"end\":35869,\"start\":35863},{\"end\":36117,\"start\":36112},{\"end\":36134,\"start\":36127},{\"end\":36136,\"start\":36135},{\"end\":36147,\"start\":36143},{\"end\":36149,\"start\":36148},{\"end\":36163,\"start\":36159},{\"end\":36180,\"start\":36174},{\"end\":36194,\"start\":36190},{\"end\":36209,\"start\":36203},{\"end\":36622,\"start\":36615},{\"end\":36624,\"start\":36623},{\"end\":37062,\"start\":37055},{\"end\":37064,\"start\":37063},{\"end\":37075,\"start\":37071},{\"end\":37582,\"start\":37577},{\"end\":37596,\"start\":37590},{\"end\":37609,\"start\":37604},{\"end\":37627,\"start\":37621},{\"end\":37948,\"start\":37947},{\"end\":37960,\"start\":37956},{\"end\":37962,\"start\":37961},{\"end\":38275,\"start\":38270},{\"end\":38290,\"start\":38284},{\"end\":38294,\"start\":38291},{\"end\":38587,\"start\":38580},{\"end\":38589,\"start\":38588},{\"end\":38924,\"start\":38920},{\"end\":38941,\"start\":38935},{\"end\":38957,\"start\":38951},{\"end\":38973,\"start\":38968},{\"end\":38980,\"start\":38974},{\"end\":39396,\"start\":39392},{\"end\":39413,\"start\":39407},{\"end\":39777,\"start\":39773},{\"end\":39794,\"start\":39788},{\"end\":40178,\"start\":40172},{\"end\":40199,\"start\":40190},{\"end\":40214,\"start\":40208},{\"end\":40785,\"start\":40779},{\"end\":40787,\"start\":40786},{\"end\":41063,\"start\":41057},{\"end\":41076,\"start\":41071},{\"end\":41094,\"start\":41088},{\"end\":41590,\"start\":41584},{\"end\":41897,\"start\":41893}]", "bib_author_last_name": "[{\"end\":35820,\"start\":35812},{\"end\":35835,\"start\":35830},{\"end\":35849,\"start\":35844},{\"end\":35861,\"start\":35857},{\"end\":35876,\"start\":35870},{\"end\":36125,\"start\":36118},{\"end\":36141,\"start\":36137},{\"end\":36157,\"start\":36150},{\"end\":36172,\"start\":36164},{\"end\":36188,\"start\":36181},{\"end\":36201,\"start\":36195},{\"end\":36219,\"start\":36210},{\"end\":36629,\"start\":36625},{\"end\":37069,\"start\":37065},{\"end\":37084,\"start\":37076},{\"end\":37588,\"start\":37583},{\"end\":37602,\"start\":37597},{\"end\":37619,\"start\":37610},{\"end\":37638,\"start\":37628},{\"end\":37954,\"start\":37949},{\"end\":37969,\"start\":37963},{\"end\":37974,\"start\":37971},{\"end\":38282,\"start\":38276},{\"end\":38300,\"start\":38295},{\"end\":38594,\"start\":38590},{\"end\":38933,\"start\":38925},{\"end\":38949,\"start\":38942},{\"end\":38966,\"start\":38958},{\"end\":38989,\"start\":38981},{\"end\":39405,\"start\":39397},{\"end\":39422,\"start\":39414},{\"end\":39786,\"start\":39778},{\"end\":39803,\"start\":39795},{\"end\":40188,\"start\":40179},{\"end\":40206,\"start\":40200},{\"end\":40224,\"start\":40215},{\"end\":40794,\"start\":40788},{\"end\":41069,\"start\":41064},{\"end\":41086,\"start\":41077},{\"end\":41105,\"start\":41095},{\"end\":41595,\"start\":41591},{\"end\":41906,\"start\":41898}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1007/BF01840359\",\"id\":\"b0\",\"matched_paper_id\":7932878},\"end\":36110,\"start\":35751},{\"attributes\":{\"doi\":\"10.1007/s00453-012-9734-3\",\"id\":\"b1\"},\"end\":36573,\"start\":36112},{\"attributes\":{\"doi\":\"10.4230/OASIcs.SOSA.2018.5\",\"id\":\"b2\",\"matched_paper_id\":10271344},\"end\":36961,\"start\":36575},{\"attributes\":{\"doi\":\"10.1137/1.9781611974331.ch87\",\"id\":\"b3\",\"matched_paper_id\":11198145},\"end\":37528,\"start\":36963},{\"attributes\":{\"doi\":\"10.1145/3293465\",\"id\":\"b4\",\"matched_paper_id\":9374418},\"end\":37870,\"start\":37530},{\"attributes\":{\"doi\":\"10.1145/321906.321909\",\"id\":\"b5\",\"matched_paper_id\":14619586},\"end\":38217,\"start\":37872},{\"attributes\":{\"doi\":\"10.1016/j.ejc.2017.07.016\",\"id\":\"b6\",\"matched_paper_id\":9557898},\"end\":38535,\"start\":38219},{\"attributes\":{\"doi\":\"10.1007/978-1-4684-2001-2_9\",\"id\":\"b7\",\"matched_paper_id\":33509266},\"end\":38839,\"start\":38537},{\"attributes\":{\"doi\":\"10.1016/S0022-0000(03)00006-0\",\"id\":\"b8\",\"matched_paper_id\":31929343},\"end\":39315,\"start\":38841},{\"attributes\":{\"doi\":\"10.1023/A:1009813105532\",\"id\":\"b9\",\"matched_paper_id\":41401698},\"end\":39688,\"start\":39317},{\"attributes\":{\"doi\":\"10.1023/B:JOCO.0000021934.29833.6b\",\"id\":\"b10\",\"matched_paper_id\":36474745},\"end\":40099,\"start\":39690},{\"attributes\":{\"doi\":\"10.4230/LIPIcs.ICALP.2017.21\",\"id\":\"b11\",\"matched_paper_id\":7587494},\"end\":40724,\"start\":40101},{\"attributes\":{\"doi\":\"10.1287/moor.4.4.339\",\"id\":\"b12\",\"matched_paper_id\":7655435},\"end\":41006,\"start\":40726},{\"attributes\":{\"doi\":\"10.1137/1.9781611975482.5\",\"id\":\"b13\",\"matched_paper_id\":4677999},\"end\":41513,\"start\":41008},{\"attributes\":{\"id\":\"b14\"},\"end\":41835,\"start\":41515},{\"attributes\":{\"doi\":\"10.1145/2591796.2591811\",\"id\":\"b15\",\"matched_paper_id\":17179623},\"end\":42265,\"start\":41837}]", "bib_title": "[{\"end\":35805,\"start\":35751},{\"end\":36613,\"start\":36575},{\"end\":37053,\"start\":36963},{\"end\":37575,\"start\":37530},{\"end\":37945,\"start\":37872},{\"end\":38268,\"start\":38219},{\"end\":38578,\"start\":38537},{\"end\":38918,\"start\":38841},{\"end\":39390,\"start\":39317},{\"end\":39771,\"start\":39690},{\"end\":40170,\"start\":40101},{\"end\":40777,\"start\":40726},{\"end\":41055,\"start\":41008},{\"end\":41891,\"start\":41837}]", "bib_author": "[{\"end\":35822,\"start\":35807},{\"end\":35837,\"start\":35822},{\"end\":35851,\"start\":35837},{\"end\":35863,\"start\":35851},{\"end\":35878,\"start\":35863},{\"end\":36127,\"start\":36112},{\"end\":36143,\"start\":36127},{\"end\":36159,\"start\":36143},{\"end\":36174,\"start\":36159},{\"end\":36190,\"start\":36174},{\"end\":36203,\"start\":36190},{\"end\":36221,\"start\":36203},{\"end\":36631,\"start\":36615},{\"end\":37071,\"start\":37055},{\"end\":37086,\"start\":37071},{\"end\":37590,\"start\":37577},{\"end\":37604,\"start\":37590},{\"end\":37621,\"start\":37604},{\"end\":37640,\"start\":37621},{\"end\":37956,\"start\":37947},{\"end\":37971,\"start\":37956},{\"end\":37976,\"start\":37971},{\"end\":38284,\"start\":38270},{\"end\":38302,\"start\":38284},{\"end\":38596,\"start\":38580},{\"end\":38935,\"start\":38920},{\"end\":38951,\"start\":38935},{\"end\":38968,\"start\":38951},{\"end\":38991,\"start\":38968},{\"end\":39407,\"start\":39392},{\"end\":39424,\"start\":39407},{\"end\":39788,\"start\":39773},{\"end\":39805,\"start\":39788},{\"end\":40190,\"start\":40172},{\"end\":40208,\"start\":40190},{\"end\":40226,\"start\":40208},{\"end\":40796,\"start\":40779},{\"end\":41071,\"start\":41057},{\"end\":41088,\"start\":41071},{\"end\":41107,\"start\":41088},{\"end\":41597,\"start\":41584},{\"end\":41908,\"start\":41893}]", "bib_venue": "[{\"end\":35908,\"start\":35896},{\"end\":36316,\"start\":36246},{\"end\":36724,\"start\":36657},{\"end\":37193,\"start\":37114},{\"end\":37676,\"start\":37655},{\"end\":38022,\"start\":37997},{\"end\":38360,\"start\":38327},{\"end\":38661,\"start\":38623},{\"end\":39059,\"start\":39020},{\"end\":39484,\"start\":39447},{\"end\":39876,\"start\":39839},{\"end\":40350,\"start\":40254},{\"end\":40850,\"start\":40816},{\"end\":41211,\"start\":41132},{\"end\":41582,\"start\":41515},{\"end\":42005,\"start\":41931},{\"end\":36778,\"start\":36726},{\"end\":37259,\"start\":37195},{\"end\":40433,\"start\":40352},{\"end\":41277,\"start\":41213},{\"end\":42066,\"start\":42007}]"}}}, "year": 2023, "month": 12, "day": 17}