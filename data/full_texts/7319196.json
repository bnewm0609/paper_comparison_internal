{"id": 7319196, "updated": "2023-10-02 13:02:20.493", "metadata": {"title": "Recipe1M: A Dataset for Learning Cross-Modal Embeddings for Cooking Recipes and Food Images", "authors": "[{\"first\":\"Javier\",\"last\":\"Marin\",\"middle\":[]},{\"first\":\"Aritro\",\"last\":\"Biswas\",\"middle\":[]},{\"first\":\"Ferda\",\"last\":\"Ofli\",\"middle\":[]},{\"first\":\"Nicholas\",\"last\":\"Hynes\",\"middle\":[]},{\"first\":\"Amaia\",\"last\":\"Salvador\",\"middle\":[]},{\"first\":\"Yusuf\",\"last\":\"Aytar\",\"middle\":[]},{\"first\":\"Ingmar\",\"last\":\"Weber\",\"middle\":[]},{\"first\":\"Antonio\",\"last\":\"Torralba\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2018, "month": 10, "day": 14}, "abstract": "In this paper, we introduce Recipe1M, a new large-scale, structured corpus of over one million cooking recipes and 13 million food images. As the largest publicly available collection of recipe data, Recipe1M affords the ability to train high-capacity models on aligned, multi-modal data. Using these data, we train a neural network to learn a joint embedding of recipes and images that yields impressive results on an image-recipe retrieval task. Moreover, we demonstrate that regularization via the addition of a high-level classification objective both improves retrieval performance to rival that of humans and enables semantic vector arithmetic. We postulate that these embeddings will provide a basis for further exploration of the Recipe1M dataset and food and cooking in general. Code, data and models are publicly available.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1810.06553", "mag": "2897709118", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/abs-1810-06553", "doi": "10.1109/cvpr.2017.327"}}, "content": {"source": {"pdf_hash": "c040c64a159309e48185f81d1ebebab75ca6ccc6", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1810.06553v1.pdf\"]", "oa_url_match": false, "oa_info": {"license": "CCBYNCSA", "open_access_url": "https://dspace.mit.edu/bitstream/1721.1/122660/2/im2recipe.pdf", "status": "GREEN"}}, "grobid": {"id": "1307907bcc0423e6206041df26c24f6e76699f28", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/c040c64a159309e48185f81d1ebebab75ca6ccc6.txt", "contents": "\nRecipe1M: A Dataset for Learning Cross-Modal Embeddings for Cooking Recipes and Food Images\n\n\nJavier Mar\u00edn \nMassachusetts Institute of Technology\n\n\nAritro Biswas abiswas@mit.edu \nMassachusetts Institute of Technology\n\n\nFerda Ofli fofli@hbku.edu.qa \nQatar Computing Research Institute\nHBKU\n\n\nNicholas Hynes nhynes@mit.edu \nMassachusetts Institute of Technology\n\n\nAmaia Salvador amaia.salvador@upc.edu \nUniversitat Polit\u00e8cnica de Catalunya\n\n\nYusuf Aytar \nMassachusetts Institute of Technology\n\n\nIngmar Weber iweber@hbku.edu.qa \nQatar Computing Research Institute\nHBKU\n\n\nAntonio Torralba torralba@csail.mit.edu \nMassachusetts Institute of Technology\n\n\nRecipe1M: A Dataset for Learning Cross-Modal Embeddings for Cooking Recipes and Food Images\n\nIEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE\n1Index Terms-Cross-modaldeep learningcooking recipesfood images !\nIn this paper, we introduce Recipe1M, a new large-scale, structured corpus of over one million cooking recipes and 13 million food images. As the largest publicly available collection of recipe data, Recipe1M affords the ability to train high-capacity models on aligned, multi-modal data. Using these data, we train a neural network to learn a joint embedding of recipes and images that yields impressive results on an image-recipe retrieval task. Moreover, we demonstrate that regularization via the addition of a high-level classification objective both improves retrieval performance to rival that of humans and enables semantic vector arithmetic. We postulate that these embeddings will provide a basis for further exploration of the Recipe1M dataset and food and cooking in general. Code, data and models are publicly available.\n\nINTRODUCTION\n\nT HERE are few things so fundamental to the human experience as food. Its consumption is intricately linked to our health, our feelings and our culture. Even migrants starting a new life in a foreign country often hold on to their ethnic food longer than to their native language. Vital as it is to our lives, food also offers new perspectives on topical challenges in computer vision like finding representations that are robust to occlusion and deformation (as occur during ingredient processing).\n\nThe profusion of online recipe collections with user-submitted photos presents the possibility of training machines to automatically understand food preparation by jointly analyzing ingredient lists, cooking instructions and food images. Far beyond applications solely in the realm of culinary arts, such a tool may also be applied to the plethora of food images shared on social media to achieve insight into the significance of food and its preparation on public health [1] and cultural heritage [2]. Developing a tool for automated analysis requires large and well-curated datasets.\n\nThe emergence of massive labeled datasets [3], [4] and deeplylearned representations [5], [6], [7] have redefined the state-ofthe-art in object recognition and scene classification. Moreover, the same techniques have enabled progress in new domains like dense labeling and image segmentation. Perhaps the introduction of a new large-scale food dataset-complete with its own intrinsic challenges-will yield a similar advancement of the field. For instance, categorizing an ingredient's state (e.g., sliced, diced, raw, baked, grilled, or boiled) provides a unique challenge in attribute recognition-one that is not well posed by existing datasets. Furthermore, the free-form nature of food suggests a departure from the concrete task of classification in favor of a more nuanced objective that integrates variation in a recipe's structure. *contributed equally. Learning cross-modal embeddings from recipe-image pairs collected from online resources. These embeddings enable us to achieve in-depth understanding of food from its ingredients to its preparation.\n\nHence, we argue that food images must be analyzed together with accompanying recipe ingredients and instructions in order to acquire a comprehensive understanding of \"behind-the-scene\" cooking process as illustrated in Fig. 1.\n\nExisting work, however, has focused largely on the use of medium-scale image datasets for performing food categorization. For instance, Bossard et al. [8] introduced the Food-101 visual classification dataset and set a baseline of 50.8% accuracy. Even with the impetus for food image categorization, subsequent work by [9], [10] and [11] could only improve this result to 77.4%, 79% and 80.9%, respectively, which indicates that the size of the dataset may be the limiting factor. Although Myers et al. [10] built upon Food-101 to tackle the novel challenge of estimating a meal's energy content, the segmentation and depth information used in their work are not made available for further exploration.\n\n\narXiv:1810.06553v1 [cs.CV] 14 Oct 2018\n\nIn this work, we address data limitations by introducing the large-scale Recipe1M dataset which contains one million structured cooking recipes and their images. Additionally, to demonstrate its utility, we present the im2recipe retrieval task which leverages the full dataset-images and text-to solve the practical and socially relevant problem of demystifying the creation of a dish that can be seen but not necessarily described. To this end, we have developed a multi-modal neural model which jointly learns to embed images and recipes in a common space which is semantically regularized by the addition of a high-level classification task. The performance of the resulting embeddings is thoroughly evaluated against baselines and humans, showing remarkable improvement over the former while faring comparably to the latter. With the release of Recipe1M, we hope to spur advancement on not only the im2recipe task but also heretofore unimagined objectives which require a deep understanding of the domain and its modalities.\n\n\nRelated Work\n\nSince we presented our initial work on the topic back in 2017 [12], several related studies have been published and we feel obliged to provide a brief discussion about them.\n\nHerranz et al. [13], besides providing a detailed description on recent work focusing on food applications, propose an extended multimodal framework that relies on food imagery, recipe and nutritional information, geolocation and time, restaurant menus and food styles. Min et al. [14] present a multi-attribute theme modeling (MATM) approach that incorporates food attributes such as cuisine style, course type, flavors or ingredient types. Then, similar to our work, they train a multimodal embedding which learns a common space between the different food attributes and the corresponding food image. Most interesting applications of their model include flavor analysis, region-oriented food summary, and recipe recommendation. In order to build their model, they collect all their data from Yummly 1 , an online recipe recommendation system.\n\nCarvalho et al. [15] improve our initial results by proposing a new objective function that combines retrieval and classification tasks in a double-triplet scheme. Additionally, they follow a slightly different training strategy which consists of unfreezing both branches after training the recipe branch and using the MedR score instead of the original loss in the validation phase for early stopping. We also find that using the MedR score as the performance measure in the validation phase is more stable. Our work is orthogonal to theirs, i.e. their performance can be further improved with the contributions we present herein.\n\nChen et al. [16] study the task of retrieving a recipe matching a corresponding food image. The authors find that although ingredient composition is important to the appearance of food, other attributes such as the manner of cutting and manner of cooking ingredients also play a role in forming the food's appearance. Given a food image, they attempt to predict ingredient, cutting and cooking attributes, and use these predictions to help retrieve the correct corresponding recipe. With our model, we attempt to retrieve the recipe directly, without first predicting attributes like ingredients, cutting and cooking attributes, separately. Furthermore, along with retrieving the recipe matching an image, our model also allow to retrieve the image matching a corresponding recipe.\n\nChang et al. [17] focus on analyzing several possible preparations of a single dish, like \"chocolate chip cookie\". The authors 1. https://www.yummly.com/ design an interface that allows users to explore the similarities and differences between such recipes by visualizing the structural similarity between recipes as points in a space, in which clusters are formed according to how similar recipes are. Furthermore, they examine how cooking instructions overlap between two recipes to measure recipe similarity. Our work is of a different flavor, as the features they use to measure similarity are manually picked by humans, while ours are automatically learned by a multimodal network.\n\nEngilberge et al. [18] examine the problem of retrieving the best matching caption for an image. In order to do so, they use neural networks to create embeddings for each caption, and retrieve the one whose embedding most closely matches the embedding of the original image. In our work, we aim to also use embeddings to retrieve the recipe matching an image, or vice versa. However, since our domain involves cooking recipes while theirs only involves captions, we account for two separate types of text -ingredients and cooking instructions -and combine them in a different way in our model.\n\nThe rest of the paper is organized as follows. In Section 2, we introduce our large-scale, multimodal cooking recipe dataset and provide details about its collection process. We describe our recipe and image representations in Section 3 and present our neural joint embedding model in Section 4. Then, in Section 5, we discuss our semantic regularization approach to enhance our joint embedding model. In Section 6, we present results from our various experiments and conclude the paper in Section 7.\n\n\nDATASET\n\nDue to their complexity, textually and visually, (e.g., ingredientbased variants of the same dish, different presentations, or multiple ways of cooking a recipe), understanding food recipes demands a large, general collection of recipe data. Hence, it should not be surprising that the lack of a larger body of work on the topic could be the result of missing such a collection. To our knowledge, practically all the datasets publicly available in the research field either contain only categorized images [8], [10], [19], [20] or simply recipe text [21]. Only recently have a few datasets been released that include both recipes and images. For instance, Wang et al. [22] released a multimodal food dataset which has 101k images divided equally among 101 food categories; the recipes for each are however raw HTML. In a later work, Chen and Ngo [23] presented a dataset containing 110,241 images annotated with 353 ingredient labels and 65,284 recipes, each with a brief introduction, ingredient list, and preparation instructions. Of note is that the dataset only contains recipes for Chinese cuisine.\n\nAlthough the aforementioned datasets constitute a large step towards learning richer recipe representations, they are still limited in either generality or size. As the ability to learn effective representations is largely a function of the quantity (especially when learning features using deep architectures) and quality of the available data, we create and release publicly a new, large-scale corpus of structured recipe data that includes over 1M recipes and 13M images. In comparison to the current largest datasets in this domain, the Recipe1M includes twice as many recipes as [21] and 130 times as many images as [23].\n\nWe created the Recipe1M dataset in two phases. In the first phase, we collected a large dataset of cooking recipes paired with food images, all scraped from a number of popular cooking websites, which resulted in more than 1M cooking recipes and 800K food images. Then in the second phase, we augmented each recipe in this initial collection with food images downloaded from the Web using a popular image search engine, which amounted to over 13M food images after cleaning and removing exact-and-near duplicates. In the following subsections we elaborate further on these data collection phases, outline how the dataset is organized, and provide analysis of its contents.\n\n\nData Collection from Recipe Websites\n\nThe recipes were scraped from over two dozen popular cooking websites and processed through a pipeline that extracted relevant text from the raw HTML, downloaded linked images, and assembled the data into a compact JSON schema in which each datum was uniquely identified. As part of the extraction process, excessive whitespace, HTML entities, and non-ASCII characters were removed from the recipe text. Finally, after removing duplicates and near-matches (constituting roughly 2% of the original data), the retained dataset contained over 1M cooking recipes and 800K food images. Although the resulting dataset is already larger than any other dataset in this particular domain (i.e., includes twice as many recipes as [21] and eight times as many images as [23]), the total number of images is not yet at the same scale as the largest publicly available datasets such as ImageNet [3] and Places [24], which contain tens of millions of images, in the computer vision community. Therefore, in the next phase, we aimed to extend the initial collection of images by querying for food images through an image search engine.\n\n\nData Extension using Image Search Engine\n\nThanks to the latest technological infrastructure advances, half the population of the entire world have become Internet users 2 . Online services ranging from social networks to simple websites have grown into data containers where users share images, videos, or documents. Companies like Google, Yahoo, and Microsoft, among others, offer public search engines that go through the entire Internet looking for websites, videos, images and any other type of content that matches a text query (some of them also support image queries). Looking at the search results for a given recipe title (e.g., \"chicken wings\") in Fig. 2, one can say that the retrieved images are generally of very good quality. We also observed during the first phase of data collection from recipe websites that users were often using images from other recipes of the same dish (sometimes with slight differences) to visually describe theirs. Motivated by these insights, we downloaded a large amount of images using as queries the recipe titles collected from the recipe websites in the first phase. Data Download. We targeted collecting 50M images, i.e., 50 images per recipe in the initial collection. In order to amass such a quantity of images, we chose the Google search engine. As mentioned before, we used the title of each recipe as a query. Out of the Google search results, we selected the top 50 retrieved images and stored locally their image URLs. For this task, we used publicly available Python libraries on ten servers in parallel for several days. Then, to download images simultaneously, we made use of Aria2 3 , a publicly available download utility. In the end, we managed to download over 47M images as some of the image URLs either were corrupted or did not exist any more.   Data Consolidation. One of the first tasks, besides removing corrupted or wrong format images, was eliminating the duplicate images. For this task, we simply used a pre-trained ResNet18 [7] as a feature extractor (by removing its last layer for classification) and computed pairwise euclidean distances between the collected images. During this cleanse process, we combined the initial set of images collected from recipe websites and the new ones collected via Google image search. After this first stage, we removed over 32M duplicate images (those with an euclidean distance of 0). We only kept one representative for each duplicate cluster. Later, we visually inspected the remaining images and realized that a significant amount of them were still either duplicates or nearduplicates. The main reason we could not detect some of these duplicates in the first stage was due to compression or rescaling operations applied to the images, which cause slight modifications to their feature representation. By using distances between them, and removing those that were close enough, we managed to eliminate these duplicates. Near-duplicates, instead, were due to distortions (i.e., aspect-ratio changes), crops, added text into the image, and other alterations. To remove near-duplicates, after trying different strategies, we chose a harsh distance threshold between images, which meant we had to eliminate a certain amount of good examples, as well. This strategy was used between different partitions (i.e., training, test and validation). That is, we allowed near-duplicates within a partition to a certain extent (using a relaxed threshold). Additionally, we ran a face detector over the images and removed those that had a face with high confidence. Thanks to computing distances, we also found non-recipe images such as images with nutritional facts. Images containing only text were close to each other within the feature space. In order to compute the distances between images we used C++ over Python for efficiency purposes. In order to re-balance the dataset in terms of partitions, we slightly modified the images belonging to each partition. For a fair comparison between the Recipe1M and the extended version of it, containing 13M images, we created an intersection version of the initial dataset, which simply contains the images that were common between both datasets. Table 1 shows the small differences in numbers. From this point forward, the extended version will be referred to as Recipe1M+.\n\n\nNutritional Information\n\nThe ingredient lists in the recipes scraped from the recipe websites include the ingredient, quantity and unit information altogether in a single sentence in several cases. In order to simplify the task of automatically computing the nutritional information of a recipe, we decided to encapsulate these three different fields, i.e., (i) the ingredient, (ii) the units, and (iii) the quantity, separately in the dataset structure. After identifying different type of sentences that followed the 'quantity-unit-ingredient' sequence pattern in the recipe ingredient lists, we used a natural language processing toolkit 4 to tag every single word within each of these sentences (e.g.,\n[('2', 'CD'), ('cups', 'NNS'), ('of', 'IN'), ('milk', 'NN')])\n. Every ingredient in the dataset that followed the sentence structure (e.g., '4 teaspoons of honey') of one of those we identified, was selected for further processing. We then went through the unit candidates of these sentences and chose only the measurable ones (some non-measurable units are for instance, a bunch, a slice or a loaf ). Table 2 shows the 20 different units we found. 103,152 unique recipes had measurable units and numerical quantities defined for all their ingredients. Regarding numerical quantities, these recipes contained 1,002 different ones.\n\nOnce we finished the previous stage, we matched thousands of ingredient names with the USDA database. In order to facilitate the matching process, we first reduced the ingredient list to contain only the first word within the sentence (after removing quantities and units), obtaining a total of 6,856 unique words. Then, for each unique ingredient we picked, when available, the second word of the sentence. Due to multiple different sentences having the same first word, we did only take one example out of the possible ones. We went through each single bigram and only selected those that were food ingredients, e.g., apple juice or cayenne pepper. If the second word was inexistent or was not part of a standard ingredient name, we were only selecting the first word, e.g., sugar. We created a corpus of 2,057 unique different ingredient with their singular and plural versions, and, in some cases, synonyms or translations, e.g., cassava can be also called yuca, manioc or mandioca. We found ingredient names from different nationalities and cultures, such as Spanish, Turkish, German, French, Polish, American, Mexican, Jewish, Indian, Arab, Chinese or Japanese among others. Using the ingredient corpus we assigned to each ingredient sentence the closest ingredient name by simply verifying that all the words 4. http://www.nltk.org/  describing the ingredient name were within the original ingredient sentence. We found 68,450 recipes with all their ingredients within the corpus. The matching between the USDA database and the new assigned ingredient names, similarly as before, was done by confirming that all the words describing the ingredient name were within one of the USDA database food instances. We inspected the matching results to assure the correctness. In the end, we obtained 50,637 recipes with nutritional information (mapping example: American cheese \u21d2 cheese, pasteurized process, American, without added vitamin d). In Figure 3, we can see a 2D visualization of the embeddings of these recipes that also include images, using t-SNE [25]. Recipes are shown in different colors based on their semantic category (see Section 5). In Figure 4, we can see the same embedding but this time showing the same recipes on different colors depending on how healthy they are in terms of sugar, fat, saturates, and salt. We used the traffic lights 5 definition established by the Food Standards Agency (FSA).\n\n\nData Structure\n\nThe contents of the Recipe1M dataset can logically be grouped into two layers. The first layer (i.e., Layer 1) contains basic information including a title, a list of ingredients, and a sequence of instructions for preparing a dish; all of these data are provided as free text. 5. https://www.resourcesorg.co.uk/assets/pdfs/foodtrafficlight1107.pdf Additional fields such as unit and quantity are also available in this layer. In cases where we were unable to extract unit and quantity from the ingredient description, these two fields were simply left empty for the corresponding ingredient. Nutritional information (i.e., total energy, protein, sugar, fat, saturates, and salt content) is only added for those recipes that contained both units and quantities as described in Section 2.3. FSA traffic lights are also available for such recipes. The second layer (i.e., Layer 2) builds upon the first layer and includes all images with which the recipe is associatedthese images are provided as RGB in JPEG format. Additionally, a subset of recipes are annotated with course labels (e.g., appetizer, side dish, or dessert), the prevalence of which are summarized in Fig. 5. For Recipe1M+, we provide same Layer 1 as described above with different partition assignments and Layer 2 including the 13M images.\n\n\nAnalysis\n\nRecipe1M includes approximately 0.4% duplicate recipes and, excluding those duplicate recipes, 20% of recipes have non-unique titles but symmetrically differ by a median of 16 ingredients. 0.2% of recipes share the same ingredients but are relatively simple (e.g., spaghetti, or granola), having a median of six ingredients. Approximately half of the recipes did not have any images in the initial data collection from recipe websites. However, after the data extension phase, only around 2% of the recipes are left without any associated images. Regarding the experiments, we carefully removed any exact duplicates or recipes sharing the same image in order to avoid overlapping between training and test sets. As detailed earlier in Table 1, around 70% of the data is labeled as training, and the remainder is split equally between the validation and test sets. During the dataset extension, as we mentioned earlier, we also created an intersection dataset in order to have a fair comparison of the experimental results on both the initial and the extended versions of the dataset.\n\nAccording to Fig. 5, the average recipe in the dataset consists of nine ingredients which are transformed over the course of ten instructions. One can also observe that the distributions of data are heavy tailed. For instance, of the 16k unique 6 ingredients that have been identified, only 4,000 account for 95% of occurrences. At the low end of instruction count-particularly those with one step-one will find the dreaded Combine all ingredients. At the other end are lengthy recipes and ingredient lists associated with recipes that include sub-recipes.\n\nA similar issue of outliers exists also for images: as several of the included recipe collections curate user-submitted images, popular recipes like chocolate chip cookies have orders of magnitude more images than the average. Notably, the number of 6. in terms of phrasing unique recipes that came with associated food images in the initial data collection phase was 333K, whilst after the data extension phase, this number reached to more than 1M recipes. On average, the Recipe1M+ dataset contains 13 images per recipe whereas Recipe1M has less than one image per recipe, 0.86 to be exact. Figure 5 also depicts the images vs recipes histogram for Recipe1M+, where over half million recipes contain more than 12 images each.\n\n\nLEARNING EMBEDDINGS\n\nIn this section, we describe our neural joint embedding model. Here, we utilize the paired (recipe and image) data in order to learn a common embedding space as illustrated in Fig. 1. Next, we discuss recipe and image representations, and then, we describe our neural joint embedding model that builds upon recipe and image representations.\n\n\nRepresentation of Recipes\n\nThere are two major components of a recipe: its ingredients and cooking instructions. We develop a suitable representation for each of these components. Ingredients. Each recipe contains a set of ingredient text as shown in Fig. 1. For each ingredient we learn an ingredient level word2vec [26] representation. In order to do so, the actual ingredient names are extracted from each ingredient text. For instance in \"2 tbsp of olive oil\" the olive oil is extracted as the ingredient name and treated as a single word for word2vec computation. The initial ingredient name extraction task is solved by a bi-directional LSTM that performs logistic regression on each word in the ingredient text. Training is performed on a subset of our training set for which we have the annotation for actual ingredient names. Ingredient name extraction module works with 99.5% accuracy tested on a held-out set. Cooking Instructions. Each recipe also has a list of cooking instructions. As the instructions are quite lengthy (averaging \u223c208 words) a single LSTM is not well suited to their representation as gradients are diminished over the many time steps. Instead, we propose a two-stage LSTM model which is designed to encode a sequence of sequences. First, each instruction/sentence is represented as a skip-instructions vector, and then, an LSTM is trained over the sequence of these vectors to obtain the representation of all instructions. The resulting fixed-length representation is fed into to our joint embedding model (see instructions-encoder in Fig. 6). Skip-instructions. Our cooking instruction representation, referred to as skip-instructions, is the product of a sequence-to-sequence model [27]. Specifically, we build upon the technique of skipthoughts [28] which encodes a sentence and uses that encoding as context when decoding/predicting the previous and next sentences (see Fig. 7). Our modifications to this method include adding startand end-of-recipe \"instructions\" and using an LSTM instead of a GRU. In either case, the representation of a single instruction is the final output of the encoder. As before, this is used as the instructions input to our embedding model.\n\n\nRepresentation of Food Images\n\nFor the image representation we adopt two major state-of-the-art deep convolutional networks, namely VGG-16 [6] and Resnet-50 [7] models. In particular, the deep residual networks have a proven record of success on a variety of benchmarks [7]. Although [6] suggests training very deep networks with small convolutional filters, deep residual networks take it to another level using ubiquitous identity mappings that enable training of much deeper architectures (e.g., with 50, 101, or 152 layers) with better performance. We incorporate these models by removing the last softmax classification layer and connecting the rest to our joint embedding model as shown in the right side of Fig. 6.\n\n\nJOINT NEURAL EMBEDDING\n\nBuilding upon the previously described recipe and image representations, we now introduce our joint embedding method. The recipe model, displayed in Fig. 6, includes two encoders: one for ingredients and one for instructions, the combination of which are designed to learn a recipe level representation. The ingredients encoder combines the sequence of ingredient word vectors. Since the ingredient list is an unordered set, we choose to utilize a bidirectional LSTM model, which considers both forward and backward orderings. The instructions encoder is implemented as a forward LSTM model over skip-instructions vectors. The outputs of both encoders are concatenated and embedded into a recipeimage joint space. The image representation is simply projected into this space through a linear transformation. The goal is to learn transformations to make the embeddings for a given recipe-image pair \"close.\"\n\nFormally, assume that we are given a set of the recipe-image pairs, (r k , v k ) in which r k is the k th recipe and v k is the associated\nimage. Further, let r k = ({s t k } n k t=1 , {g t k } m k t=1 ), where {s t k } n k t=1 is the sequence of n k cooking instructions, {g t k } m k t=1\nis the sequence of m k ingredient tokens. The objective is to maximize the cosine similarity between positive recipe-image pairs, and minimize it between all non-matching recipe-image pairs, up to a specified margin.\n\nThe ingredients encoder is implemented using a bi-directional LSTM: at each time step it takes two ingredient-word2vec representations of g t k and g m k \u2212t+1 k , and eventually it produces the fixed-length representation h g k for ingredients. The instructions encoder is implemented through a regular LSTM. At each time step it receives an instruction representation from the skip-instructions encoder, and finally it produces the fixed-length representation h s k . h g k and h s k are concatenated in order to obtain the recipe representation h r k . On the image side, the image encoder simply produces the fixed-length representation h v k . Then, the recipe and image representations are mapped into the joint embedding space as: \u03c6 r = W r h r k + b r and \u03c6 v = W v h v k + b v , respectively. Note that W r and W v are embedding matrices which are also learned. Finally, the complete model is trained end-to-end with positive and negative recipe-image pairs (\u03c6 r , \u03c6 v ) using the cosine similarity loss with margin defined as follows:\nL cos (\u03c6 r , \u03c6 v , y) = 1 \u2212 cos(\u03c6 r , \u03c6 v ), if y = 1 max(0, cos(\u03c6 r , \u03c6 v ) \u2212 \u03b1), if y = \u22121\nwhere cos(.) is the normalized cosine similarity and \u03b1 is the margin.\n\n\nSEMANTIC REGULARIZATION\n\nWe incorporate additional regularization on our embedding through solving the same high-level classification problem in multiple modalities with shared high-level weights. We refer to this method as semantic regularization. The key idea is that if high-level discriminative weights are shared, then both of the modalities (recipe and image embeddings) should utilize these weights in a similar way which brings another level of alignment based on discrimination. We optimize this objective together with our joint embedding loss. Essentially the model also learns to classify any image or recipe embedding into one of the food-related semantic categories. We limit the effect of semantic regularization as it is not the main problem that we aim to solve. Semantic Categories. We start by assigning Food-101 categories to those recipes that contain them in their title. However, after this procedure we are only able to annotate 13% of our dataset, which we argue is not enough labeled data for a good regularization. Hence, we compose a larger set of semantic categories purely extracted from recipe titles. We first obtain the top 2,000 most frequent bigrams in recipe titles from our training set. We manually remove those that contain unwanted characters (e.g., n', !, ? or &) and those that do not have discriminative food properties (e.g., best pizza, super easy or 5 minutes). We then assign each of the remaining bigrams as the semantic category to all recipes that include it in their title. By using bigrams and Food-101 categories together we obtain a total of 1,047 categories, which cover 50% of the dataset. chicken salad, grilled vegetable, chocolate cake and fried fish are some examples among the categories we collect using this procedure. All those recipes without a semantic category are assigned to an additional background class. Although there is some overlap in the generated categories, 73% of the recipes in our dataset (excluding those in the background class) belong to a single category (i.e., only one of the generated classes appears in their title). For recipes where two or more categories appear in the title, the category with highest frequency rate in the dataset is chosen. Classification. To incorporate semantic regularization to the joint embedding, we use a single fully connected layer. Given the embeddings \u03c6 v and \u03c6 r , class probabilities are obtained with p r = W c \u03c6 r and p v = W c \u03c6 v followed by a softmax activation. W c is the matrix of learned weights, which are shared between image and recipe embeddings to promote semantic alignment between them. Formally, we express the semantic regularization loss as L reg (\u03c6 r , \u03c6 v , c r , c v ) where c r and c v are the semantic category labels for recipe and image, respectively. Note that c r and c v are the same if (\u03c6 r , \u03c6 v ) is a positive pair. Then, we can write the final objective as:\nL(\u03c6 r , \u03c6 v , c r , c v , y) = L cos (\u03c6 r , \u03c6 v , y)+ \u03bbL reg (\u03c6 r , \u03c6 v , c r , c v )\nOptimization. We follow a two-stage optimization procedure while learning the model. If we update both the recipe encoding and image network at the same time, optimization becomes oscillatory and even divergent. Previous work on cross-modality training [29], [30] suggests training models for different modalities separately and fine tuning them jointly afterwards to allow alignment. Following this insight, we adopt a similar procedure when training our model. We first fix the weights of the image network, which are found from pre-training on the ImageNet object classification task, and learn the recipe encodings. This way the recipe network learns to align itself to the image representations and also learns semantic regularization parameters (W c ). Then we freeze the recipe encoding and semantic regularization weights, and learn the image network. This twostage process is crucial for successful optimization of the objective function. After this initial alignment stage, we release all the weights to be learned. However, the results do not change much in this final, joint optimization. We take a step further from [12] in our extended study and change the validation procedure to use median rank (MedR) score as our performance measure, like in [15], while reimplementing our source code in PyTorch. This strategy appears to be more stable than using the validation loss. Implementation Details. All the neural network models are implemented using Torch7 7 and PyTorch 8 frameworks. The margin \u03b1 is selected as 0.1 in joint neural embedding models. The regularization hyper-parameter is set as \u03bb = 0.02 in all our experiments. While optimizing the cosine loss, we pick a positive recipe-image pairs with 20% probability and a random negative recipe-image pair with 80% probability from the training set.\n\nThe models in Torch7 are trained on 4 NVIDIA Titan X with 12GB of memory for three days. The models in PyTorch are trained on 4 NVIDIA GTX 1080 with 8GB of memory for two and a half days (using a bigger batch size, i.e., 256 pairs instead of 150).  When using Recipe1M+, the training in PyTorch tends to take over a week, using a batch size of 256. For efficiency purposes, we store the recipe text part of the dataset in LMDB 9 format and load the images on the fly using DataLoader function of the PyTorch library. This way our PyTorch code does not require as much RAM as our Torch7 code does. As a side note, between the two reference libraries, we did experience that PyTorch in general uses less GPU memory.\n\n\nEXPERIMENTS\n\nWe begin with the evaluation of our learned embeddings for the im2recipe retrieval task on the initial (i.e., recipe-website-only) version of our dataset. Specifically, we study the effect of each component of our model and compare our final system against human performance for the im2recipe retrieval task. Then, using the best model architecture trained on the recipe-website-only version of the dataset, we compare its retrieval performance with the same one trained on the extended version of the dataset to evaluate the benefit of data extension through an image search engine. We further evaluate the two models on Food-101 dataset to assess 9. https://lmdb.readthedocs.io/en/release/ their generalization ability. Finally, we analyze the properties of our learned embeddings through unit visualizations and explore different vector arithmetics in the embedding space on both the initial and the extended datasets.\n\n\nIm2recipe Retrieval\n\nWe evaluate all the recipe representations for im2recipe retrieval. Given a food image, the task is to retrieve its recipe from a collection of test recipes. We also perform recipe2im retrieval using the same setting. All results are reported for the test set.\n\nComparison with the Baselines. Canonical Correlation Analysis (CCA) is one of the strongest statistical models for learning joint embeddings for different feature spaces when paired data are provided. We use CCA over many high-level recipe and image representations as our baseline. These CCA embeddings are learned using recipe-image pairs from the training data. In each recipe, the ingredients are represented with the mean word2vec across all its ingredients in the manner of [31]. The cooking instructions are represented with mean skip-thoughts vectors [28] across the cooking instructions. A recipe is then represented as concatenation of these two features. We also evaluate CCA over mean ingredient word2vec and skip-instructions features as another baseline. The image features utilized in the CCA baselines are the ResNet-50 features before the softmax layer. Although they are learned for visual object categorization tasks on ImageNet dataset, these features are widely adopted by the computer vision community, and they have been shown to generalize well to different visual recognition tasks [32]. For evaluation, given a test query image, we use cosine similarity in the common space for ranking the relevant recipes and perform im2recipe retrieval. The recipe2im retrieval setting is evaluated likewise. We adopt the test procedure from image2caption retrieval task [33], [34]. We report results on a subset of randomly selected 1,000 recipe-image pairs from the test set. We repeat the experiments 10 times and report the mean results. We report median rank (MedR), and recall rate at top K (R@K) for all the retrieval experiments. To clarify, R@5 in the im2recipe task represents the percentage of all the image queries where the corresponding recipe is retrieved in the top 5, hence higher is better. The quantitative results for im2recipe retrieval are shown in Table 3.\n\nOur model outperforms the CCA baselines in all measures. As expected, CCA over ingredient word2vec and skip-instructions perform better than CCA over word2vec trained on GoogleNews [26] and skip-thoughts vectors that are learned over a large-scale book corpus [28]. In 65% of all evaluated queries, our method can retrieve the correct recipe given a food image. The semantic regularization notably improves the quality of our embedding for im2recipe task which is quantified with the medR drop from 7.2 to 5.2 in Table 3. The results for recipe2im task are also similar to those in the im2recipe retrieval setting. Fig. 8 compares the ingredients from the original recipes (true recipes) with the retrieved recipes (coupled with their corresponding image) for different image queries.\n\nAs can be observed in Fig. 8, our embeddings generalize well and allow overall satisfactory recipe retrieval results. However, at the ingredient level, one can find that in some cases our model retrieves recipes with missing ingredients. This usually occurs due to the lack of fine-grained features (e.g., confusion between shrimps and salmon) or simply because the ingredients are not visible in the query image (e.g., blueberries in a smoothie or beef in a lasagna). Ablation Studies. We also analyze the effect of each component in our our model in several optimization stages. The results are reported in Table 4. Note that here we also report medR with 1K, 5K and 10K random selections to show how the results scale in larger retrieval problems. As expected, visual features from the ResNet-50 model show a substantial improvement in retrieval performance when compared to VGG-16 features. Even with \"fixed vision\" networks the joint embedding achieved 7.9 medR using ResNet-50 architecture. Further \"fine-tuning\" of vision networks slightly improves the results. Although it becomes a lot harder to decrease the medR in small numbers, additional \"semantic regularization\" improves the medR in both cases. Comparison with Human Performance. In order to better assess the quality of our embeddings we also evaluate the performance of humans on the im2recipe task. The experiments are performed through Amazon Mechanical Turk (AMT) service 10 . For quality purposes, we require each AMT worker to have at least 97% approval rate and have performed at least 500 tasks before our experiment. In a single evaluation batch, we first randomly choose 10 recipes and their corresponding images. We then ask an AMT worker to choose the correct recipe, out of the 10 provided recipes, for the given food image. This multiple choice selection task is performed 10 times for each food image in the batch. The accuracy of an evaluation batch is defined as the percentage of image queries correctly assigned to their corresponding recipe.\n\nThe evaluations are performed for three levels of difficulty. The batches (of 10 recipes) are randomly chosen from either all the test recipes (easy), recipes sharing the same course (e.g., soup, salad, or beverage; medium), or recipes sharing the name of the dish (e.g., salmon, pizza, or ravioli; hard). As expected-for our model as well as the AMT workers-the accuracies decrease as tasks become more specific. In both coarse and fine-grained tests, our method performs comparably to or better than the AMT workers. As hypothesized, semantic regularization further improves the results (see Table 5).\n\nIn the \"all recipes\" condition, 25 random evaluation batches (25 \u00d7 10 individual tasks in total) are selected from the entire test set. Joint embedding with semantic regularization performs the best with 3.2 percentage points improvement over average human accuracy. For the course-specific tests, 5 batches are randomly selected within each given meal course. Although, on average, our joint embedding's performance is slightly lower than the humans', with semantic regularization our joint embedding surpasses humans' performance by 6.8 percentage points. In dish-specific tests, five random batches are selected if they have the dish name (e.g., pizza) in their title. With slightly lower accuracies in general, dishspecific results also show similar behavior. Particularly for the 10. http://mturk.com \"beverage\" and \"smoothie\" results, human performance is better than our method, possibly because detailed analysis is needed to elicit the homogenized ingredients in drinks. Similar behavior is also observed for the \"sushi\" results where fine-grained features of the sushi roll's center are crucial to identify the correct sushi recipe.\n\nRecipe1M vs Recipe1M+ Comparison. One of the main questions of the current study is how beneficial it is to incorporate images coming from a Web search engine into the initial collection of images obtained from recipe websites. One way to assess this is to compare im2recipe retrieval performance of a network architecture trained on Recipe1M with im2recipe retrieval performance of the same network architecture trained on Recipe1M+. In Table 6, we present im2recipe retrieval results achieved on both test sets. As can be seen, there is a clear benefit when we evaluate both models on the Recipe1M+ test set. The model trained on Recipe1M+ obtains a significantly better medR, 5 points lower in both retrieval tasks, and higher R@5 and R@10, in some cases up to a 10 percentage point increase. When looking into the Recipe1M test set, both models perform similarly. These results clearly demonstrate the benefit of using external search engines to extend the imagery content of Recipe1M. Note that the retrieval results on Tables 3 and 6 slightly differ due to the fact that we use a modified version of the dataset (see intersection dataset in Table 1) in the latter experiment. As we explained earlier in Section 2, this is done mainly to have a fair comparison of im2recipe retrieval results on both versions of the dataset.\n\nModel Generalization Ability Comparison. We experiment further to evaluate whether Recipe1M+ dataset improves the performance of our model on other food image datasets. For this purpose, we evaluate both our trained models on the popular Food-101 dataset [8]. The Food-101 dataset is a classification dataset containing 101 food categories and 1,000 images for each one of these 101 food categories, totaling up to 101,000 images.\n\nOur method of evaluation involves randomly sampling an image and a recipe corresponding to each of the Food-101 categories. The images are taken from the Food-101 dataset, while the recipes are taken from the test partition of the intersection dataset. Here, a recipe is considered to belong to a category only if the recipe title string matches with the Food-101 category. Here, we only sample images and recipes from those categories that correspond to at least N recipes among the test recipes that we sample from.\n\nAfter sampling an image and a corresponding recipe for each category that is common enough, we evaluate our models on the retrieval task. In the im2recipe direction, we provide our model with the image and expect it to retrieve the corresponding recipe. In the recipe2im direction, we provide our model with the recipe and expect it to retrieve the corresponding image. We show the retrieval results of both models in Table 7. Note that the model trained on Recipe1M+ consistently outperforms the model trained on Recipe1M.\n\nOne possible explanation for Recipe1M+ dataset giving an advantage on the Food-101 task is that there might be an overlap between the images used to train the model on the Recipe1M+ and the Food-101 images. Further, it is possible that there might be images in Recipe1M+ training set that overlap with the Food-101 dataset that are not in the initial training set. This would give the model trained on Recipe1M+ an unfair advantage. We perform the following procedure to whether this is true. First, we feed in all of the images in the Recipe1M+ training set and the Food-101 images    9. Localized unit activations. We find that ingredient detectors emerge in different units in our embeddings, which are aligned across modalities (e.g., unit 352: \"cream\", unit 22: \"sponge cake\" or unit 571: \"steak\").\n\ninto an 18 layer residual network that was pre-trained on ImageNet. The network outputs a prediction vector for each of these images. We next note that if an image in the extended training set has an exact copy in the Food-101 dataset, then both images must have the same prediction vector. When checking the prediction vectors of the images in Food-101 and the Recipe1M+ training set, we did not find any overlapping prediction vectors, meaning that the images between Food-101 and Recipe1M+ training set do not overlap.\n\n\nAnalysis of the Learned Embedding\n\nTo gain further insight into our neural embedding, we perform a series of qualitative analysis experiments. We explore whether any semantic concepts emerge in the neuron activations and whether the embedding space has certain arithmetic properties.\n\nNeuron Visualizations. Through neural activation visualization, we investigate if any semantic concepts emerge in the neurons in our embedding vector despite not being explicitly trained for that purpose. We pick the top activating images, ingredient lists, and cooking instructions for a given neuron. Then we use the methodology introduced by Zhou et al. [35] to visualize image regions that contribute the most to the activation of specific units in our learned visual embeddings. We apply the same procedure on the recipe side to also obtain those ingredients and recipe instructions to which certain units react the most. Fig. 9 shows the results for the same unit in both the image and recipe embedding. We find that certain units display localized semantic alignment between the embeddings of the two modalities.\n\nSemantic Vector Arithmetic. Different works in the literature [26], [36] have used simple arithmetic operations to demonstrate the capabilities of their learned representations. In the context of food recipes, one would expect that v(\"chicken pizza\") \u2212 v(\"pizza\") + v(\"salad\") = v(\"chicken salad\"), where v represents the map into the embedding space. We demonstrate that our learned embeddings have such properties by applying the previous equation template to the averaged vectors of recipes that contain the queried words in their title. We apply this procedure in the recipe and image embedding spaces and show results in Fig. 10 and Fig. 11, respectively. Our findings suggest that the learned embeddings have semantic properties that translate to simple geometric transformations in the learned space. Furthermore, the model trained on Recipe1M+ is better able to capture these semantic properties in the embedding space. The improvement is most seriously observable on the recipe arithmetic. Among the recipe analogy examples, notice that the result for the Recipe1M+ dataset for \"chicken quesadilla\" -\"wrap\" + \"rice\" returns a casserole dish, while for the Recipe1M dataset we have a quesadilla dish. The casserole dish is much closer to matching the \"chicken rice\" result that we expect in this instance. Additionally, note how \"taco\" -\"tortilla\" + \"lettuce\" returns a salad for the Recipe1M model and a lettuce wrap for the Recipe1M+ model. Here, the former model is likely doing arithmetic over the ingredients in the dish -a taco without tortilla likely comprises of a salad, into which lettuce is added to give a salad-like dish. On the other hand, the Recipe1M+ model does arithmetic over higher level semantic concepts -it returns a lettuce wrap, which is the closest analogue to a taco which has the tortilla substituted out with lettuce. We can thus see how the Recipe1M+ model has a greater ability to capture semantic concepts in the recipe embedding space, and also performs somewhat better in general. If we examine the results of both models for the analogy task with image embeddings, then the Recipe1M+ model shows less of an improvement in general. However, we can still see differences between the two models. For instance, if we examine the \"taco\" -\"tortilla\" + \"lettuce\" analogy, then the Recipe1M model returns a result in which the lettuce is mixed in with other ingredients to form a salad. However, the Recipe1M+ model returns a result in which a salad is placed on top of a large piece of lettuce. This result is similar in a way to the lettuce wrap result, as the piece of lettuce is not just mixed in with the other ingredients, but acts as more of an object into which other ingredients are placed. All in all, the Recipe1M+ training set allows our model to better capture high level semantic concepts.\n\nFractional Arithmetic. Another type of arithmetic we examine is fractional arithmetic, in which our model interpolates across the vector representations of two concepts in the embedding space. Specifically, we examine the results for x \u00d7 v(\"concept 1\") + (1 \u2212 x) \u00d7 v(\"concept 2\"), where x varies from 0 to 1.\n\nWe expect this to have interesting applications in spanning the space across two food concepts, such as pasta and salad, by adjusting the value of x to make the dish more \"pasta-like\" or \"salad-like\" for example. We apply this procedure in the recipe and image embedding spaces and show results in Fig. 12 and Fig. 13, respectively. With both fractional image arithmetic and fractional recipe arithmetic, we hope that adjusting the fractional coefficient will allow us to explore more fine-grained combinations of two concepts. However, the results are often not so fine-grained. For instance, in the \"burrito\" and \"sandwich\" example for the model trained on the Recipe1M dataset for recipe fractional arithmetic, choosing a burrito coefficient of 0 does not yield different results from choosing the coefficient to be 0.5. Note that on the other hand, the model trained on the Recipe1M+ dataset is able to provide distinct results for each fractional coefficient value for this example. In general though, both models are able to effectively explore the gradient of recipes or food images between two different food concepts. For instance, note the models' results for the \"curry\" and \"soup\" examples, in both the image and recipe modalities. The most \"curry-like\" image tends to have some broth, but is much chunkier than the images. As we increase the coefficient of \"soup\", we see the food becoming less chunky and more broth-like. Such examples reflect the ability of our model to explore the space between food concepts in general.\n\nThe results of our fractional arithmetic experiments suggest that the recipe and image embeddings learned in our model are semantically aligned, which broaches the possibility of applications in recipe modification (e.g., ingredient replacement, calorie adjustment) or even cross-modal generation. \n\n\nCONCLUSION\n\nIn this paper, we present Recipe1M, the largest structured recipe dataset to date, the im2recipe problem, and neural embedding models with semantic regularization which achieve impressive results for the im2recipe task. Additionally, we explored the properties of the resulting recipe and food representations by evaluating different vector arithmetics on the learned embeddings, which hinted at the possibility of applications such as recipe modification or even cross-modal recipe generation.\n\nMore generally, the methods presented here could be gainfully applied to other \"recipes\" like assembly instructions, tutorials, and industrial processes. Further, we hope that our contributions will support the creation of automated tools for food and recipe understanding and open doors for many less explored aspects of learning such as compositional creativity and predicting visual outcomes of action sequences.  For each model, we fractionally interpolate across two example concepts (for instance, \"salad\" and \"pasta\"). We find the retrieved results for x \u00d7 v(\"concept 1\") + (1 \u2212 x) \u00d7 v(\"concept 2\"), where x varies from 0 to 1. Fig. 13. Fractional arithmetic results using image embeddings on the Recipe1M test set. On the left hand side are arithmetic results using the model trained on Recipe1M. On the right hand side are the arithmetic results for the model trained on Recipe1M+. For each model, we fractionally interpolate across two example concepts (for instance, \"salad\" and \"pasta\"). We find the retrieved results for x \u00d7 v(\"concept 1\") + (1 \u2212 x) \u00d7 v(\"concept 2\"), where x varies from 0 to 1.\n\nFig. 1 .\n1Fig. 1. Learning cross-modal embeddings from recipe-image pairs collected from online resources. These embeddings enable us to achieve in-depth understanding of food from its ingredients to its preparation.\n\nFig. 2 .\n2Google image search results. The query used is chicken wings.\n\nFig. 3 .\n3Embedding visualization using t-SNE. Legend depicts the recipes that belong to the top 12 semantic categories used in our semantic regularization (see Section 5 for more details).\n\nFig. 4 .\n4Healthiness within the embedding. Recipe health is represented within the embedding visualization in terms of sugar, salt, saturates, and fat. We follow FSA traffic light system to determine how healthy a recipe is.\n\nFig. 5 .\n5Dataset statistics. Prevalence of course categories and number of instructions, ingredients and images per recipe in Recipe1M+.\n\nFig. 6 .\n6Joint neural embedding model with semantic regularization. Our model learns a joint embedding space for food images and cooking recipes.\n\nFig. 7 .\n7Skip-instructions model. During training the encoder learns to predict the next instruction.\n\nFig. 8 .\n8Im2recipe retrieval examples. From left to right: (1) the query image, (2) its associated ingredient list, (3) the retrieved ingredients and (4) the image associated to the retrieved recipe.\n\nFig. 10 .\n10Analogy arithmetic results using recipe embeddings on the Recipe1M test set. On the left hand side are arithmetic results using the model trained on Recipe1M. On the right hand side are the arithmetic results for the model trained on Recipe1M+. We represent the average vector of a query with the images from its 4 nearest neighbors. In the case of the arithmetic result, we show the nearest neighbor only.\n\nFig. 11 .\n11Analogy arithmetic results using image embeddings on the Recipe1M test set. On the left hand side are arithmetic results using the model trained on Recipe1M. On the right hand side are the arithmetic results for the model trained on Recipe1M+. We represent the average vector of a query with the images from its four nearest neighbors. In the case of the arithmetic result, we show the nearest neighbor only.\n\nFig. 12 .\n12Fractional arithmetic results using recipe embeddings on the Recipe1M test set. On the left hand side are arithmetic results using the model trained on Recipe1M. On the right hand side are the arithmetic results for the model trained on Recipe1M+.\n\n2 .\n2https://www.internetworldstats.com/stats.htm 3. https://aria2.github.io/\n\nTABLE 1\n1Recipe1M dataset. Number of recipes and images in training, validation and test sets.Recipe1M intersection Recipe1M+ \n\nPartition \n# Recipes \n# Images \n# Images \n# Images \n\nTraining \n720,639 \n619,508 \n493,339 \n9,727,961 \nValidation \n155,036 \n133,860 \n107,708 \n1,918,890 \nTest \n154,045 \n134,338 \n115,373 \n2,088,828 \n\nTotal \n1,029,720 \n887,706 \n716,480 \n13,735,679 \n\n\n\nTABLE 2\n2Recipe1M units. The 20 measurable units isolated in the dataset. units bushel, cup, dash, drop, fl. oz, g, gallon, glass, kg, liter, ml, ounce, pinch, pint, pound, quart, scoop, shot, tablespoon, teaspoon\n\nTABLE 3\n3Im2recipe retrieval comparisons. Median ranks and recall rate at top K are reported for baselines and our method. Note that the joint neural embedding models consistently outperform all the baseline methods.im2recipe \nrecipe2im \n\nmedR \nR@1 \nR@5 R@10 medR \nR@1 \nR@5 R@10 \n\n\n\nTABLE 4\n4Ablation studies. Effect of the different model components to the median rank, medR (the lower is better). Comparison with human performance on im2recipe task. The mean results are highlighted as bold for better visualization. Note that on average our method with semantic regularization performs better than average AMT worker.Joint emb. methods \nim2recipe \nrecipe2im \n\nmedR-1K medR-5K medR-10K medR-1K medR-5K medR-10K \n\nVGG-16 \n\nfixed vision \n15.3 \n71.8 \n143.6 \n16.4 \n76.8 \n152.8 \nfinetuning (ft) \n12.1 \n56.1 \n111.4 \n10.5 \n51.0 \n101.4 \nft + semantic reg. \n8.2 \n36.4 \n72.4 \n7.3 \n33.4 \n64.9 \n\nResNet-50 \n\nfixed vision \n7.9 \n35.7 \n71.2 \n9.3 \n41.9 \n83.1 \nfinetuning (ft) \n7.2 \n31.5 \n62.8 \n6.9 \n29.8 \n58.8 \nft + semantic reg. \n5.2 \n21.2 \n41.9 \n5.1 \n20.2 \n39.2 \n\nTABLE 5 \nall recipes \ncourse-specific recipes \ndish-specific recipes \n\ndessert \nsalad \nbread \nbeverage \nsoup-stew \ncourse-mean \npasta \npizza \nsteak \nsalmon \nsmoothie \nhamburger \nravioli \nsushi \ndish-mean \n\n\n\nTABLE 6\n6Comparison between Recipe1M and Recipe1M+ trained models. Median ranks and recall rate at top K are reported for both models. They have similar performance on the Recipe1M test set in terms of medR and R@K. However, when testing on the Recipe1M+ test set, the model trained on Recipe1M+ yields significantly better medR and better R@5 and R@10 scores.Recipe1M test set \nRecipe1M+ test set \n\nim2recipe \n\nmedR R@1 R@5 R@10 medR R@1 R@5 R@10 \n\nRecipe1M training set \n5.1 \n0.24 \n0.52 \n0.64 \n13.6 \n0.15 \n0.35 \n0.46 \nRecipe1M+ training set \n5.7 \n0.21 \n0.49 \n0.62 \n8.6 \n0.17 \n0.42 \n0.54 \n\nrecipe2im \n\nmedR R@1 R@5 R@10 medR R@1 R@5 R@10 \n\nRecipe1M training set \n4.8 \n0.27 \n0.54 \n0.65 \n11.9 \n0.17 \n0.38 \n0.48 \nRecipe1M+ training set \n4.6 \n0.26 \n0.54 \n0.66 \n6.8 \n0.21 \n0.46 \n0.58 \n\n\n\nTABLE 7\n7Im2recipe retrieval comparisons on Food-101 dataset. Median ranks and recall rate at top K are reported for both models. Note that the model trained on Recipe1M+ performs better than the model trained on Recipe1M.im2recipe \n\nmedR \nR@1 \nR@5 R@10 \n\nRecipe1M training set \n17.35 16.13 33.68 \n42.53 \n\nRecipe1M+ training set \n10.15 21.89 42.31 \n51.14 \n\nrecipe2im \n\nRecipe1M training set \n4.75 26.19 54.52 \n67.50 \n\nRecipe1M+ training set \n2.60 37.38 65.00 \n76.31 \n\n\nACKNOWLEDGMENTSThis work has been supported by CSAIL-QCRI collaboration project.\nSocial media image analysis for public health. V R K Garimella, A Alfayad, I Weber, CHI. V. R. K. Garimella, A. Alfayad, and I. Weber, \"Social media image analysis for public health,\" in CHI, 2016, pp. 5543-5547.\n\nFetishizing food in digital age: #foodporn around the world. Y Mejova, S Abbar, H Haddadi, ICWSM. Y. Mejova, S. Abbar, and H. Haddadi, \"Fetishizing food in digital age: #foodporn around the world,\" in ICWSM, 2016, pp. 250-258.\n\nImagenet large scale visual recognition challenge. O Russakovsky, J Deng, H Su, J Krause, S Satheesh, S Ma, Z Huang, A Karpathy, A Khosla, M Bernstein, International Journal of Computer Vision. 1153O. Russakovsky, J. Deng, H. Su, J. Krause, S. Satheesh, S. Ma, Z. Huang, A. Karpathy, A. Khosla, M. Bernstein et al., \"Imagenet large scale visual recognition challenge,\" International Journal of Computer Vision, vol. 115, no. 3, pp. 211-252, 2015.\n\nLearning deep features for scene recognition using places database. B Zhou, A Lapedriza, J Xiao, A Torralba, A Oliva, Advances in neural information processing systems. B. Zhou, A. Lapedriza, J. Xiao, A. Torralba, and A. Oliva, \"Learning deep features for scene recognition using places database,\" in Advances in neural information processing systems, 2014, pp. 487-495.\n\nImagenet classification with deep convolutional neural networks. A Krizhevsky, I Sutskever, G E Hinton, NIPS. A. Krizhevsky, I. Sutskever, and G. E. Hinton, \"Imagenet classification with deep convolutional neural networks,\" in NIPS, 2012.\n\nVery deep convolutional networks for large-scale image recognition. K Simonyan, A Zisserman, arXiv:1409.1556arXiv preprintK. Simonyan and A. Zisserman, \"Very deep convolutional networks for large-scale image recognition,\" arXiv preprint arXiv:1409.1556, 2014.\n\nDeep residual learning for image recognition. K He, X Zhang, S Ren, J Sun, arXiv:1512.03385arXiv preprintK. He, X. Zhang, S. Ren, and J. Sun, \"Deep residual learning for image recognition,\" arXiv preprint arXiv:1512.03385, 2015.\n\nFood-101-mining discriminative components with random forests. L Bossard, M Guillaumin, L Van Gool, European Conference on Computer Vision. SpringerL. Bossard, M. Guillaumin, and L. Van Gool, \"Food-101-mining discriminative components with random forests,\" in European Conference on Computer Vision. Springer, 2014, pp. 446-461.\n\nDeepfood: Deep learning-based food image recognition for computer-aided dietary assessment. C Liu, Y Cao, Y Luo, G Chen, V Vokkarane, Y Ma, International Conference on Smart Homes and Health Telematics. SpringerC. Liu, Y. Cao, Y. Luo, G. Chen, V. Vokkarane, and Y. Ma, \"Deepfood: Deep learning-based food image recognition for computer-aided dietary assessment,\" in International Conference on Smart Homes and Health Telematics. Springer, 2016, pp. 37-48.\n\nIm2calories: Towards an automated mobile vision food diary. A Myers, N Johnston, V Rathod, A Korattikara, A Gorban, N Silberman, S Guadarrama, G Papandreou, J Huang, K Murphy, ICCV. A. Myers, N. Johnston, V. Rathod, A. Korattikara, A. Gorban, N. Sil- berman, S. Guadarrama, G. Papandreou, J. Huang, and K. Murphy, \"Im2calories: Towards an automated mobile vision food diary,\" in ICCV, 2015, pp. 1233-1241.\n\nIs saki #delicious? the food perception gap on instagram and its relation to health. F Ofli, Y Aytar, I Weber, R Hammouri, A Torralba, Proceedings of the 26th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee. the 26th International Conference on World Wide Web. International World Wide Web Conferences Steering CommitteeF. Ofli, Y. Aytar, I. Weber, R. Hammouri, and A. Torralba, \"Is saki #delicious? the food perception gap on instagram and its relation to health,\" in Proceedings of the 26th International Conference on World Wide Web. International World Wide Web Conferences Steering Committee, 2017.\n\nLearning cross-modal embeddings for cooking recipes and food images. A Salvador, N Hynes, Y Aytar, J Marin, F Ofli, I Weber, A Torralba, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionA. Salvador, N. Hynes, Y. Aytar, J. Marin, F. Ofli, I. Weber, and A. Torralba, \"Learning cross-modal embeddings for cooking recipes and food images,\" in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, July 2017.\n\nFood recognition and recipe analysis: integrating visual content, context and external knowledge. L Herranz, W Min, S Jiang, abs/1801.07239CoRR. L. Herranz, W. Min, and S. Jiang, \"Food recognition and recipe analysis: integrating visual content, context and external knowledge,\" CoRR, vol. abs/1801.07239, 2018. [Online]. Available: http://arxiv.org/abs/1801.07239\n\nA delicious recipe analysis framework for exploring multi-modal recipes with various attributes. W Min, S Jiang, S Wang, J Sang, S Mei, Proceedings of the 2017 ACM on Multimedia Conference, ser. MM '17. the 2017 ACM on Multimedia Conference, ser. MM '17New York, NY, USAACMW. Min, S. Jiang, S. Wang, J. Sang, and S. Mei, \"A delicious recipe analysis framework for exploring multi-modal recipes with various attributes,\" in Proceedings of the 2017 ACM on Multimedia Conference, ser. MM '17. New York, NY, USA: ACM, 2017, pp. 402-410. [Online].\n\n. http:/doi.acm.org/10.1145/3123266.3123272Available: http://doi.acm.org/10.1145/3123266.3123272\n\nCross-modal retrieval in the cooking context: Learning semantic textimage embeddings. M Carvalho, R Cad\u00e8ne, D Picard, L Soulier, N Thome, M Cord, Proceedings of the 41st International ACM SIGIR Conference on Research and Development in Information Retrieval, ser. SIGIR '18. the 41st International ACM SIGIR Conference on Research and Development in Information Retrieval, ser. SIGIR '18New York, NY, USAACMM. Carvalho, R. Cad\u00e8ne, D. Picard, L. Soulier, N. Thome, and M. Cord, \"Cross-modal retrieval in the cooking context: Learning semantic text- image embeddings,\" in Proceedings of the 41st International ACM SIGIR Conference on Research and Development in Information Retrieval, ser. SIGIR '18. New York, NY, USA: ACM, 2018.\n\nCross-modal recipe retrieval with rich food attributes. J Chen, C.-W Ngo, T.-S Chua, http:/doi.acm.org/10.1145/3123266.3123428Proceedings of the 2017 ACM on Multimedia Conference, ser. MM '17. the 2017 ACM on Multimedia Conference, ser. MM '17New York, NY, USAACMJ.-j. Chen, C.-W. Ngo, and T.-S. Chua, \"Cross-modal recipe retrieval with rich food attributes,\" in Proceedings of the 2017 ACM on Multimedia Conference, ser. MM '17. New York, NY, USA: ACM, 2017, pp. 1771- 1779. [Online]. Available: http://doi.acm.org/10.1145/3123266.3123428\n\nRecipescape: An interactive tool for analyzing cooking instructions at scale. M Chang, L V Guillain, H Jung, V M Hare, J Kim, M Agrawala, http:/doi.acm.org/10.1145/3173574.3174025451:1-451:12Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, ser. CHI '18. the 2018 CHI Conference on Human Factors in Computing Systems, ser. CHI '18New York, NY, USAACMM. Chang, L. V. Guillain, H. Jung, V. M. Hare, J. Kim, and M. Agrawala, \"Recipescape: An interactive tool for analyzing cooking instructions at scale,\" in Proceedings of the 2018 CHI Conference on Human Factors in Computing Systems, ser. CHI '18. New York, NY, USA: ACM, 2018, pp. 451:1-451:12. [Online]. Available: http://doi.acm.org/10.1145/3173574.3174025\n\nFinding beans in burgers: Deep semantic-visual embedding with localization. M Engilberge, L Chevallier, P P\u00e9rez, M Cord, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionM. Engilberge, L. Chevallier, P. P\u00e9rez, and M. Cord, \"Finding beans in burgers: Deep semantic-visual embedding with localization,\" in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, June 2018.\n\nFoodcam: A real-time food recognition system on a smartphone. Y Kawano, K Yanai, Multimedia Tools and Applications. 7414Y. Kawano and K. Yanai, \"Foodcam: A real-time food recognition system on a smartphone,\" Multimedia Tools and Applications, vol. 74, no. 14, pp. 5263-5287, 2015.\n\nGeolocalized modeling for dish recognition. R Xu, L Herranz, S Jiang, S Wang, X Song, R Jain, IEEE Trans. Multimedia. 178R. Xu, L. Herranz, S. Jiang, S. Wang, X. Song, and R. Jain, \"Geolocalized modeling for dish recognition,\" IEEE Trans. Multimedia, vol. 17, no. 8, pp. 1187-1199, 2015.\n\nUnderstanding and predicting online food recipe production patterns. T Kusmierczyk, C Trattner, K Norvag, HyperTextT. Kusmierczyk, C. Trattner, and K. Norvag, \"Understanding and predicting online food recipe production patterns,\" in HyperText, 2016.\n\nRecipe recognition with large multimodal food dataset. X Wang, D Kumar, N Thome, M Cord, F Precioso, ICME Workshops. X. Wang, D. Kumar, N. Thome, M. Cord, and F. Precioso, \"Recipe recognition with large multimodal food dataset,\" in ICME Workshops, 2015, pp. 1-6.\n\nDeep-based ingredient recognition for cooking recipe retrival. C.-W N Jing-Jing, Chen , ACM MultimediaC.-w. N. Jing-jing Chen, \"Deep-based ingredient recognition for cooking recipe retrival,\" ACM Multimedia, 2016.\n\nPlaces: A 10 Million Image Database for Scene Recognition. B Zhou, A Lapedriza, A Khosla, A Oliva, A Torralba, IEEE Transactions on Pattern Analysis and Machine Intelligence. 406B. Zhou, A. Lapedriza, A. Khosla, A. Oliva, and A. Torralba, \"Places: A 10 Million Image Database for Scene Recognition,\" IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 40, no. 6, pp. 1452-1464, Apr. 2018.\n\nVisualizing data using t-sne. L Van Der Maaten, G Hinton, 9L. van der Maaten and G. Hinton, \"Visualizing data using t-sne,\" vol. 9, pp. 2579-2605, 2008.\n\nEfficient estimation of word representations in vector space. T Mikolov, K Chen, G Corrado, J Dean, abs/1301.3781CoRR. T. Mikolov, K. Chen, G. Corrado, and J. Dean, \"Efficient estimation of word representations in vector space,\" CoRR, vol. abs/1301.3781, 2013.\n\nSequence to sequence learning with neural networks. I Sutskever, O Vinyals, Q V Le, NIPS. I. Sutskever, O. Vinyals, and Q. V. Le, \"Sequence to sequence learning with neural networks,\" in NIPS, 2014, pp. 3104-3112.\n\nSkip-thought vectors. R Kiros, Y Zhu, R Salakhutdinov, R Zemel, A Torralba, R Urtasun, S Fidler, NIPS. R. Kiros, Y. Zhu, R. Salakhutdinov, R. Zemel, A. Torralba, R. Urtasun, and S. Fidler, \"Skip-thought vectors,\" in NIPS, 2015, pp. 3294-3302.\n\nLearning aligned cross-modal representations from weakly aligned data. L Castrejon, Y Aytar, C Vondrick, H Pirsiavash, A Torralba, Computer Vision and Pattern Recognition (CVPR), 2016 IEEE Conference. IEEEL. Castrejon, Y. Aytar, C. Vondrick, H. Pirsiavash, and A. Torralba, \"Learning aligned cross-modal representations from weakly aligned data,\" in Computer Vision and Pattern Recognition (CVPR), 2016 IEEE Conference on. IEEE, 2016.\n\nCross-modal scene networks. Y Aytar, L Castrejon, C Vondrick, H Pirsiavash, A Torralba, 10.1109/TPAMI.2017.2753232IEEE Trans. Pattern Anal. Mach. Intell. 4010Y. Aytar, L. Castrejon, C. Vondrick, H. Pirsiavash, and A. Torralba, \"Cross-modal scene networks,\" IEEE Trans. Pattern Anal. Mach. Intell., vol. 40, no. 10, pp. 2303-2314, 2018. [Online]. Available: https://doi.org/10.1109/TPAMI.2017.2753232\n\nDistributed representations of sentences and documents. Q V Le, T Mikolov, arXiv:1405.4053arXiv preprintQ. V. Le and T. Mikolov, \"Distributed representations of sentences and documents,\" arXiv preprint arXiv:1405.4053, 2014.\n\nDecaf: A deep convolutional activation feature for generic visual recognition. J Donahue, Y Jia, O Vinyals, J Hoffman, N Zhang, E Tzeng, T Darrell, arXiv:1310.1531arXiv preprintJ. Donahue, Y. Jia, O. Vinyals, J. Hoffman, N. Zhang, E. Tzeng, and T. Darrell, \"Decaf: A deep convolutional activation feature for generic visual recognition,\" arXiv preprint arXiv:1310.1531, 2013.\n\nDeep visual-semantic alignments for generating image descriptions. A Karpathy, L Fei-Fei, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionA. Karpathy and L. Fei-Fei, \"Deep visual-semantic alignments for generating image descriptions,\" in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2015, pp. 3128-3137.\n\nShow and tell: A neural image caption generator. O Vinyals, A Toshev, S Bengio, D Erhan, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionO. Vinyals, A. Toshev, S. Bengio, and D. Erhan, \"Show and tell: A neural image caption generator,\" in Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition, 2015, pp. 3156-3164.\n\nObject detectors emerge in deep scene cnns. B Zhou, A Khosla, A Lapedriza, A Oliva, A Torralba, International Conference on Learning Representations. B. Zhou, A. Khosla, A. Lapedriza, A. Oliva, and A. Torralba, \"Object detectors emerge in deep scene cnns,\" International Conference on Learning Representations, 2015.\n\nUnsupervised representation learning with deep convolutional generative adversarial networks. A Radford, L Metz, S Chintala, arXiv:1511.06434arXiv preprintA. Radford, L. Metz, and S. Chintala, \"Unsupervised representation learning with deep convolutional generative adversarial networks,\" arXiv preprint arXiv:1511.06434, 2015.\n", "annotations": {"author": "[{\"end\":148,\"start\":95},{\"end\":219,\"start\":149},{\"end\":291,\"start\":220},{\"end\":362,\"start\":292},{\"end\":440,\"start\":363},{\"end\":493,\"start\":441},{\"end\":568,\"start\":494},{\"end\":649,\"start\":569}]", "publisher": null, "author_last_name": "[{\"end\":107,\"start\":102},{\"end\":162,\"start\":156},{\"end\":230,\"start\":226},{\"end\":306,\"start\":301},{\"end\":377,\"start\":369},{\"end\":452,\"start\":447},{\"end\":506,\"start\":501},{\"end\":585,\"start\":577}]", "author_first_name": "[{\"end\":101,\"start\":95},{\"end\":155,\"start\":149},{\"end\":225,\"start\":220},{\"end\":300,\"start\":292},{\"end\":368,\"start\":363},{\"end\":446,\"start\":441},{\"end\":500,\"start\":494},{\"end\":576,\"start\":569}]", "author_affiliation": "[{\"end\":147,\"start\":109},{\"end\":218,\"start\":180},{\"end\":290,\"start\":250},{\"end\":361,\"start\":323},{\"end\":439,\"start\":402},{\"end\":492,\"start\":454},{\"end\":567,\"start\":527},{\"end\":648,\"start\":610}]", "title": "[{\"end\":92,\"start\":1},{\"end\":741,\"start\":650}]", "venue": "[{\"end\":805,\"start\":743}]", "abstract": "[{\"end\":1705,\"start\":872}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2697,\"start\":2694},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2723,\"start\":2720},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2854,\"start\":2851},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2859,\"start\":2856},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2897,\"start\":2894},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2902,\"start\":2899},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2907,\"start\":2904},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4252,\"start\":4249},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4420,\"start\":4417},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4426,\"start\":4422},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4435,\"start\":4431},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4605,\"start\":4601},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":5954,\"start\":5950},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6082,\"start\":6078},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6348,\"start\":6344},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6929,\"start\":6925},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":7558,\"start\":7554},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8342,\"start\":8338},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":9035,\"start\":9031},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":10629,\"start\":10626},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10635,\"start\":10631},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10641,\"start\":10637},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10647,\"start\":10643},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":10674,\"start\":10670},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":10792,\"start\":10788},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10970,\"start\":10966},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":11813,\"start\":11809},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":11850,\"start\":11846},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":13290,\"start\":13286},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":13329,\"start\":13325},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":13451,\"start\":13448},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13467,\"start\":13463},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":15690,\"start\":15687},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":20670,\"start\":20669},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":21416,\"start\":21412},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":22072,\"start\":22071},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":24443,\"start\":24442},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":25006,\"start\":25005},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":26170,\"start\":26166},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":27571,\"start\":27567},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":27635,\"start\":27631},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":28201,\"start\":28198},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28219,\"start\":28216},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28332,\"start\":28329},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":28346,\"start\":28343},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":34691,\"start\":34687},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":34697,\"start\":34693},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":35567,\"start\":35563},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":35698,\"start\":35694},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":37633,\"start\":37632},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":38674,\"start\":38670},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":38753,\"start\":38749},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":39301,\"start\":39297},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":39577,\"start\":39573},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":39583,\"start\":39579},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":40268,\"start\":40264},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":40347,\"start\":40343},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":42314,\"start\":42312},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":44291,\"start\":44289},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":46237,\"start\":46234},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":49430,\"start\":49426},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":49956,\"start\":49952},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":49962,\"start\":49958}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":56714,\"start\":56497},{\"attributes\":{\"id\":\"fig_1\"},\"end\":56787,\"start\":56715},{\"attributes\":{\"id\":\"fig_2\"},\"end\":56978,\"start\":56788},{\"attributes\":{\"id\":\"fig_3\"},\"end\":57205,\"start\":56979},{\"attributes\":{\"id\":\"fig_4\"},\"end\":57344,\"start\":57206},{\"attributes\":{\"id\":\"fig_5\"},\"end\":57492,\"start\":57345},{\"attributes\":{\"id\":\"fig_6\"},\"end\":57596,\"start\":57493},{\"attributes\":{\"id\":\"fig_7\"},\"end\":57798,\"start\":57597},{\"attributes\":{\"id\":\"fig_9\"},\"end\":58218,\"start\":57799},{\"attributes\":{\"id\":\"fig_10\"},\"end\":58640,\"start\":58219},{\"attributes\":{\"id\":\"fig_11\"},\"end\":58901,\"start\":58641},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":58980,\"start\":58902},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":59355,\"start\":58981},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":59570,\"start\":59356},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":59853,\"start\":59571},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":60830,\"start\":59854},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":61614,\"start\":60831},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":62084,\"start\":61615}]", "paragraph": "[{\"end\":2220,\"start\":1721},{\"end\":2807,\"start\":2222},{\"end\":3868,\"start\":2809},{\"end\":4096,\"start\":3870},{\"end\":4800,\"start\":4098},{\"end\":5871,\"start\":4843},{\"end\":6061,\"start\":5888},{\"end\":6907,\"start\":6063},{\"end\":7540,\"start\":6909},{\"end\":8323,\"start\":7542},{\"end\":9011,\"start\":8325},{\"end\":9606,\"start\":9013},{\"end\":10108,\"start\":9608},{\"end\":11223,\"start\":10120},{\"end\":11851,\"start\":11225},{\"end\":12525,\"start\":11853},{\"end\":13686,\"start\":12566},{\"end\":18012,\"start\":13731},{\"end\":18720,\"start\":18040},{\"end\":19351,\"start\":18783},{\"end\":21774,\"start\":19353},{\"end\":23099,\"start\":21793},{\"end\":24195,\"start\":23112},{\"end\":24753,\"start\":24197},{\"end\":25482,\"start\":24755},{\"end\":25846,\"start\":25506},{\"end\":28056,\"start\":25876},{\"end\":28780,\"start\":28090},{\"end\":29713,\"start\":28807},{\"end\":29853,\"start\":29715},{\"end\":30221,\"start\":30005},{\"end\":31266,\"start\":30223},{\"end\":31429,\"start\":31360},{\"end\":34347,\"start\":31457},{\"end\":36252,\"start\":34434},{\"end\":36967,\"start\":36254},{\"end\":37904,\"start\":36983},{\"end\":38188,\"start\":37928},{\"end\":40081,\"start\":38190},{\"end\":40867,\"start\":40083},{\"end\":42897,\"start\":40869},{\"end\":43502,\"start\":42899},{\"end\":44646,\"start\":43504},{\"end\":45977,\"start\":44648},{\"end\":46409,\"start\":45979},{\"end\":46928,\"start\":46411},{\"end\":47453,\"start\":46930},{\"end\":48258,\"start\":47455},{\"end\":48781,\"start\":48260},{\"end\":49067,\"start\":48819},{\"end\":49888,\"start\":49069},{\"end\":52728,\"start\":49890},{\"end\":53038,\"start\":52730},{\"end\":54577,\"start\":53040},{\"end\":54877,\"start\":54579},{\"end\":55386,\"start\":54892},{\"end\":56496,\"start\":55388}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":18782,\"start\":18721},{\"attributes\":{\"id\":\"formula_1\"},\"end\":30004,\"start\":29854},{\"attributes\":{\"id\":\"formula_2\"},\"end\":31359,\"start\":31267},{\"attributes\":{\"id\":\"formula_3\"},\"end\":34433,\"start\":34348}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":17892,\"start\":17885},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":19130,\"start\":19123},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":23854,\"start\":23847},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":40080,\"start\":40073},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":40603,\"start\":40596},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":41485,\"start\":41478},{\"end\":43500,\"start\":43493},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":45093,\"start\":45086},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":45802,\"start\":45795},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":47355,\"start\":47348}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1719,\"start\":1707},{\"end\":4841,\"start\":4803},{\"attributes\":{\"n\":\"1.1\"},\"end\":5886,\"start\":5874},{\"attributes\":{\"n\":\"2\"},\"end\":10118,\"start\":10111},{\"attributes\":{\"n\":\"2.1\"},\"end\":12564,\"start\":12528},{\"attributes\":{\"n\":\"2.2\"},\"end\":13729,\"start\":13689},{\"attributes\":{\"n\":\"2.3\"},\"end\":18038,\"start\":18015},{\"attributes\":{\"n\":\"2.4\"},\"end\":21791,\"start\":21777},{\"attributes\":{\"n\":\"2.5\"},\"end\":23110,\"start\":23102},{\"attributes\":{\"n\":\"3\"},\"end\":25504,\"start\":25485},{\"attributes\":{\"n\":\"3.1\"},\"end\":25874,\"start\":25849},{\"attributes\":{\"n\":\"3.2\"},\"end\":28088,\"start\":28059},{\"attributes\":{\"n\":\"4\"},\"end\":28805,\"start\":28783},{\"attributes\":{\"n\":\"5\"},\"end\":31455,\"start\":31432},{\"attributes\":{\"n\":\"6\"},\"end\":36981,\"start\":36970},{\"attributes\":{\"n\":\"6.1\"},\"end\":37926,\"start\":37907},{\"attributes\":{\"n\":\"6.2\"},\"end\":48817,\"start\":48784},{\"attributes\":{\"n\":\"7\"},\"end\":54890,\"start\":54880},{\"end\":56506,\"start\":56498},{\"end\":56724,\"start\":56716},{\"end\":56797,\"start\":56789},{\"end\":56988,\"start\":56980},{\"end\":57215,\"start\":57207},{\"end\":57354,\"start\":57346},{\"end\":57502,\"start\":57494},{\"end\":57606,\"start\":57598},{\"end\":57809,\"start\":57800},{\"end\":58229,\"start\":58220},{\"end\":58651,\"start\":58642},{\"end\":58906,\"start\":58903},{\"end\":58989,\"start\":58982},{\"end\":59364,\"start\":59357},{\"end\":59579,\"start\":59572},{\"end\":59862,\"start\":59855},{\"end\":60839,\"start\":60832},{\"end\":61623,\"start\":61616}]", "table": "[{\"end\":59355,\"start\":59076},{\"end\":59853,\"start\":59788},{\"end\":60830,\"start\":60192},{\"end\":61614,\"start\":61192},{\"end\":62084,\"start\":61838}]", "figure_caption": "[{\"end\":56714,\"start\":56508},{\"end\":56787,\"start\":56726},{\"end\":56978,\"start\":56799},{\"end\":57205,\"start\":56990},{\"end\":57344,\"start\":57217},{\"end\":57492,\"start\":57356},{\"end\":57596,\"start\":57504},{\"end\":57798,\"start\":57608},{\"end\":58218,\"start\":57812},{\"end\":58640,\"start\":58232},{\"end\":58901,\"start\":58654},{\"end\":58980,\"start\":58908},{\"end\":59076,\"start\":58991},{\"end\":59570,\"start\":59366},{\"end\":59788,\"start\":59581},{\"end\":60192,\"start\":59864},{\"end\":61192,\"start\":60841},{\"end\":61838,\"start\":61625}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":4095,\"start\":4089},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":14353,\"start\":14347},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":21307,\"start\":21299},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":21517,\"start\":21509},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":22965,\"start\":22959},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":24216,\"start\":24210},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":25356,\"start\":25348},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25688,\"start\":25682},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":26106,\"start\":26100},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":27424,\"start\":27418},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":27763,\"start\":27757},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":28779,\"start\":28773},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":28962,\"start\":28956},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":40704,\"start\":40698},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":40897,\"start\":40891},{\"end\":48042,\"start\":48041},{\"end\":49702,\"start\":49696},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":50523,\"start\":50516},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":50535,\"start\":50528},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":53345,\"start\":53338},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":53357,\"start\":53350},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":56030,\"start\":56023}]", "bib_author_first_name": "[{\"end\":62214,\"start\":62213},{\"end\":62218,\"start\":62215},{\"end\":62231,\"start\":62230},{\"end\":62242,\"start\":62241},{\"end\":62442,\"start\":62441},{\"end\":62452,\"start\":62451},{\"end\":62461,\"start\":62460},{\"end\":62660,\"start\":62659},{\"end\":62675,\"start\":62674},{\"end\":62683,\"start\":62682},{\"end\":62689,\"start\":62688},{\"end\":62699,\"start\":62698},{\"end\":62711,\"start\":62710},{\"end\":62717,\"start\":62716},{\"end\":62726,\"start\":62725},{\"end\":62738,\"start\":62737},{\"end\":62748,\"start\":62747},{\"end\":63125,\"start\":63124},{\"end\":63133,\"start\":63132},{\"end\":63146,\"start\":63145},{\"end\":63154,\"start\":63153},{\"end\":63166,\"start\":63165},{\"end\":63494,\"start\":63493},{\"end\":63508,\"start\":63507},{\"end\":63521,\"start\":63520},{\"end\":63523,\"start\":63522},{\"end\":63737,\"start\":63736},{\"end\":63749,\"start\":63748},{\"end\":63976,\"start\":63975},{\"end\":63982,\"start\":63981},{\"end\":63991,\"start\":63990},{\"end\":63998,\"start\":63997},{\"end\":64223,\"start\":64222},{\"end\":64234,\"start\":64233},{\"end\":64248,\"start\":64247},{\"end\":64582,\"start\":64581},{\"end\":64589,\"start\":64588},{\"end\":64596,\"start\":64595},{\"end\":64603,\"start\":64602},{\"end\":64611,\"start\":64610},{\"end\":64624,\"start\":64623},{\"end\":65007,\"start\":65006},{\"end\":65016,\"start\":65015},{\"end\":65028,\"start\":65027},{\"end\":65038,\"start\":65037},{\"end\":65053,\"start\":65052},{\"end\":65063,\"start\":65062},{\"end\":65076,\"start\":65075},{\"end\":65090,\"start\":65089},{\"end\":65104,\"start\":65103},{\"end\":65113,\"start\":65112},{\"end\":65439,\"start\":65438},{\"end\":65447,\"start\":65446},{\"end\":65456,\"start\":65455},{\"end\":65465,\"start\":65464},{\"end\":65477,\"start\":65476},{\"end\":66084,\"start\":66083},{\"end\":66096,\"start\":66095},{\"end\":66105,\"start\":66104},{\"end\":66114,\"start\":66113},{\"end\":66123,\"start\":66122},{\"end\":66131,\"start\":66130},{\"end\":66140,\"start\":66139},{\"end\":66635,\"start\":66634},{\"end\":66646,\"start\":66645},{\"end\":66653,\"start\":66652},{\"end\":67000,\"start\":66999},{\"end\":67007,\"start\":67006},{\"end\":67016,\"start\":67015},{\"end\":67024,\"start\":67023},{\"end\":67032,\"start\":67031},{\"end\":67631,\"start\":67630},{\"end\":67643,\"start\":67642},{\"end\":67653,\"start\":67652},{\"end\":67663,\"start\":67662},{\"end\":67674,\"start\":67673},{\"end\":67683,\"start\":67682},{\"end\":68331,\"start\":68330},{\"end\":68342,\"start\":68338},{\"end\":68352,\"start\":68348},{\"end\":68894,\"start\":68893},{\"end\":68903,\"start\":68902},{\"end\":68905,\"start\":68904},{\"end\":68917,\"start\":68916},{\"end\":68925,\"start\":68924},{\"end\":68927,\"start\":68926},{\"end\":68935,\"start\":68934},{\"end\":68942,\"start\":68941},{\"end\":69630,\"start\":69629},{\"end\":69644,\"start\":69643},{\"end\":69658,\"start\":69657},{\"end\":69667,\"start\":69666},{\"end\":70103,\"start\":70102},{\"end\":70113,\"start\":70112},{\"end\":70367,\"start\":70366},{\"end\":70373,\"start\":70372},{\"end\":70384,\"start\":70383},{\"end\":70393,\"start\":70392},{\"end\":70401,\"start\":70400},{\"end\":70409,\"start\":70408},{\"end\":70681,\"start\":70680},{\"end\":70696,\"start\":70695},{\"end\":70708,\"start\":70707},{\"end\":70918,\"start\":70917},{\"end\":70926,\"start\":70925},{\"end\":70935,\"start\":70934},{\"end\":70944,\"start\":70943},{\"end\":70952,\"start\":70951},{\"end\":71193,\"start\":71189},{\"end\":71195,\"start\":71194},{\"end\":71211,\"start\":71207},{\"end\":71401,\"start\":71400},{\"end\":71409,\"start\":71408},{\"end\":71422,\"start\":71421},{\"end\":71432,\"start\":71431},{\"end\":71441,\"start\":71440},{\"end\":71779,\"start\":71778},{\"end\":71797,\"start\":71796},{\"end\":71965,\"start\":71964},{\"end\":71976,\"start\":71975},{\"end\":71984,\"start\":71983},{\"end\":71995,\"start\":71994},{\"end\":72217,\"start\":72216},{\"end\":72230,\"start\":72229},{\"end\":72241,\"start\":72240},{\"end\":72243,\"start\":72242},{\"end\":72402,\"start\":72401},{\"end\":72411,\"start\":72410},{\"end\":72418,\"start\":72417},{\"end\":72435,\"start\":72434},{\"end\":72444,\"start\":72443},{\"end\":72456,\"start\":72455},{\"end\":72467,\"start\":72466},{\"end\":72695,\"start\":72694},{\"end\":72708,\"start\":72707},{\"end\":72717,\"start\":72716},{\"end\":72729,\"start\":72728},{\"end\":72743,\"start\":72742},{\"end\":73088,\"start\":73087},{\"end\":73097,\"start\":73096},{\"end\":73110,\"start\":73109},{\"end\":73122,\"start\":73121},{\"end\":73136,\"start\":73135},{\"end\":73517,\"start\":73516},{\"end\":73519,\"start\":73518},{\"end\":73525,\"start\":73524},{\"end\":73766,\"start\":73765},{\"end\":73777,\"start\":73776},{\"end\":73784,\"start\":73783},{\"end\":73795,\"start\":73794},{\"end\":73806,\"start\":73805},{\"end\":73815,\"start\":73814},{\"end\":73824,\"start\":73823},{\"end\":74131,\"start\":74130},{\"end\":74143,\"start\":74142},{\"end\":74545,\"start\":74544},{\"end\":74556,\"start\":74555},{\"end\":74566,\"start\":74565},{\"end\":74576,\"start\":74575},{\"end\":74973,\"start\":74972},{\"end\":74981,\"start\":74980},{\"end\":74991,\"start\":74990},{\"end\":75004,\"start\":75003},{\"end\":75013,\"start\":75012},{\"end\":75341,\"start\":75340},{\"end\":75352,\"start\":75351},{\"end\":75360,\"start\":75359}]", "bib_author_last_name": "[{\"end\":62228,\"start\":62219},{\"end\":62239,\"start\":62232},{\"end\":62248,\"start\":62243},{\"end\":62449,\"start\":62443},{\"end\":62458,\"start\":62453},{\"end\":62469,\"start\":62462},{\"end\":62672,\"start\":62661},{\"end\":62680,\"start\":62676},{\"end\":62686,\"start\":62684},{\"end\":62696,\"start\":62690},{\"end\":62708,\"start\":62700},{\"end\":62714,\"start\":62712},{\"end\":62723,\"start\":62718},{\"end\":62735,\"start\":62727},{\"end\":62745,\"start\":62739},{\"end\":62758,\"start\":62749},{\"end\":63130,\"start\":63126},{\"end\":63143,\"start\":63134},{\"end\":63151,\"start\":63147},{\"end\":63163,\"start\":63155},{\"end\":63172,\"start\":63167},{\"end\":63505,\"start\":63495},{\"end\":63518,\"start\":63509},{\"end\":63530,\"start\":63524},{\"end\":63746,\"start\":63738},{\"end\":63759,\"start\":63750},{\"end\":63979,\"start\":63977},{\"end\":63988,\"start\":63983},{\"end\":63995,\"start\":63992},{\"end\":64002,\"start\":63999},{\"end\":64231,\"start\":64224},{\"end\":64245,\"start\":64235},{\"end\":64257,\"start\":64249},{\"end\":64586,\"start\":64583},{\"end\":64593,\"start\":64590},{\"end\":64600,\"start\":64597},{\"end\":64608,\"start\":64604},{\"end\":64621,\"start\":64612},{\"end\":64627,\"start\":64625},{\"end\":65013,\"start\":65008},{\"end\":65025,\"start\":65017},{\"end\":65035,\"start\":65029},{\"end\":65050,\"start\":65039},{\"end\":65060,\"start\":65054},{\"end\":65073,\"start\":65064},{\"end\":65087,\"start\":65077},{\"end\":65101,\"start\":65091},{\"end\":65110,\"start\":65105},{\"end\":65120,\"start\":65114},{\"end\":65444,\"start\":65440},{\"end\":65453,\"start\":65448},{\"end\":65462,\"start\":65457},{\"end\":65474,\"start\":65466},{\"end\":65486,\"start\":65478},{\"end\":66093,\"start\":66085},{\"end\":66102,\"start\":66097},{\"end\":66111,\"start\":66106},{\"end\":66120,\"start\":66115},{\"end\":66128,\"start\":66124},{\"end\":66137,\"start\":66132},{\"end\":66149,\"start\":66141},{\"end\":66643,\"start\":66636},{\"end\":66650,\"start\":66647},{\"end\":66659,\"start\":66654},{\"end\":67004,\"start\":67001},{\"end\":67013,\"start\":67008},{\"end\":67021,\"start\":67017},{\"end\":67029,\"start\":67025},{\"end\":67036,\"start\":67033},{\"end\":67640,\"start\":67632},{\"end\":67650,\"start\":67644},{\"end\":67660,\"start\":67654},{\"end\":67671,\"start\":67664},{\"end\":67680,\"start\":67675},{\"end\":67688,\"start\":67684},{\"end\":68336,\"start\":68332},{\"end\":68346,\"start\":68343},{\"end\":68357,\"start\":68353},{\"end\":68900,\"start\":68895},{\"end\":68914,\"start\":68906},{\"end\":68922,\"start\":68918},{\"end\":68932,\"start\":68928},{\"end\":68939,\"start\":68936},{\"end\":68951,\"start\":68943},{\"end\":69641,\"start\":69631},{\"end\":69655,\"start\":69645},{\"end\":69664,\"start\":69659},{\"end\":69672,\"start\":69668},{\"end\":70110,\"start\":70104},{\"end\":70119,\"start\":70114},{\"end\":70370,\"start\":70368},{\"end\":70381,\"start\":70374},{\"end\":70390,\"start\":70385},{\"end\":70398,\"start\":70394},{\"end\":70406,\"start\":70402},{\"end\":70414,\"start\":70410},{\"end\":70693,\"start\":70682},{\"end\":70705,\"start\":70697},{\"end\":70715,\"start\":70709},{\"end\":70923,\"start\":70919},{\"end\":70932,\"start\":70927},{\"end\":70941,\"start\":70936},{\"end\":70949,\"start\":70945},{\"end\":70961,\"start\":70953},{\"end\":71205,\"start\":71196},{\"end\":71406,\"start\":71402},{\"end\":71419,\"start\":71410},{\"end\":71429,\"start\":71423},{\"end\":71438,\"start\":71433},{\"end\":71450,\"start\":71442},{\"end\":71794,\"start\":71780},{\"end\":71804,\"start\":71798},{\"end\":71973,\"start\":71966},{\"end\":71981,\"start\":71977},{\"end\":71992,\"start\":71985},{\"end\":72000,\"start\":71996},{\"end\":72227,\"start\":72218},{\"end\":72238,\"start\":72231},{\"end\":72246,\"start\":72244},{\"end\":72408,\"start\":72403},{\"end\":72415,\"start\":72412},{\"end\":72432,\"start\":72419},{\"end\":72441,\"start\":72436},{\"end\":72453,\"start\":72445},{\"end\":72464,\"start\":72457},{\"end\":72474,\"start\":72468},{\"end\":72705,\"start\":72696},{\"end\":72714,\"start\":72709},{\"end\":72726,\"start\":72718},{\"end\":72740,\"start\":72730},{\"end\":72752,\"start\":72744},{\"end\":73094,\"start\":73089},{\"end\":73107,\"start\":73098},{\"end\":73119,\"start\":73111},{\"end\":73133,\"start\":73123},{\"end\":73145,\"start\":73137},{\"end\":73522,\"start\":73520},{\"end\":73533,\"start\":73526},{\"end\":73774,\"start\":73767},{\"end\":73781,\"start\":73778},{\"end\":73792,\"start\":73785},{\"end\":73803,\"start\":73796},{\"end\":73812,\"start\":73807},{\"end\":73821,\"start\":73816},{\"end\":73832,\"start\":73825},{\"end\":74140,\"start\":74132},{\"end\":74151,\"start\":74144},{\"end\":74553,\"start\":74546},{\"end\":74563,\"start\":74557},{\"end\":74573,\"start\":74567},{\"end\":74582,\"start\":74577},{\"end\":74978,\"start\":74974},{\"end\":74988,\"start\":74982},{\"end\":75001,\"start\":74992},{\"end\":75010,\"start\":75005},{\"end\":75022,\"start\":75014},{\"end\":75349,\"start\":75342},{\"end\":75357,\"start\":75353},{\"end\":75369,\"start\":75361}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":15528753},\"end\":62378,\"start\":62166},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":11854560},\"end\":62606,\"start\":62380},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":2930547},\"end\":63054,\"start\":62608},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":1849990},\"end\":63426,\"start\":63056},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":195908774},\"end\":63666,\"start\":63428},{\"attributes\":{\"doi\":\"arXiv:1409.1556\",\"id\":\"b5\"},\"end\":63927,\"start\":63668},{\"attributes\":{\"doi\":\"arXiv:1512.03385\",\"id\":\"b6\"},\"end\":64157,\"start\":63929},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":12726540},\"end\":64487,\"start\":64159},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":14068125},\"end\":64944,\"start\":64489},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":206770267},\"end\":65351,\"start\":64946},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":276066},\"end\":66012,\"start\":65353},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":7319196},\"end\":66534,\"start\":66014},{\"attributes\":{\"doi\":\"abs/1801.07239\",\"id\":\"b12\",\"matched_paper_id\":12407273},\"end\":66900,\"start\":66536},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":7452511},\"end\":67444,\"start\":66902},{\"attributes\":{\"doi\":\"http:/doi.acm.org/10.1145/3123266.3123272\",\"id\":\"b14\"},\"end\":67542,\"start\":67446},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":13755946},\"end\":68272,\"start\":67544},{\"attributes\":{\"doi\":\"http:/doi.acm.org/10.1145/3123266.3123428\",\"id\":\"b16\",\"matched_paper_id\":13743628},\"end\":68813,\"start\":68274},{\"attributes\":{\"doi\":\"http:/doi.acm.org/10.1145/3173574.3174025\",\"id\":\"b17\",\"matched_paper_id\":3635331},\"end\":69551,\"start\":68815},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":4692043},\"end\":70038,\"start\":69553},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":4133071},\"end\":70320,\"start\":70040},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":10704475},\"end\":70609,\"start\":70322},{\"attributes\":{\"id\":\"b21\"},\"end\":70860,\"start\":70611},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":206822288},\"end\":71124,\"start\":70862},{\"attributes\":{\"id\":\"b23\"},\"end\":71339,\"start\":71126},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":2608922},\"end\":71746,\"start\":71341},{\"attributes\":{\"id\":\"b25\"},\"end\":71900,\"start\":71748},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":5959482},\"end\":72162,\"start\":71902},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":7961699},\"end\":72377,\"start\":72164},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":9126867},\"end\":72621,\"start\":72379},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":2560991},\"end\":73057,\"start\":72623},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":8278386},\"end\":73458,\"start\":73059},{\"attributes\":{\"id\":\"b31\"},\"end\":73684,\"start\":73460},{\"attributes\":{\"id\":\"b32\"},\"end\":74061,\"start\":73686},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":8517067},\"end\":74493,\"start\":74063},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":1169492},\"end\":74926,\"start\":74495},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":8217340},\"end\":75244,\"start\":74928},{\"attributes\":{\"id\":\"b36\"},\"end\":75573,\"start\":75246}]", "bib_title": "[{\"end\":62211,\"start\":62166},{\"end\":62439,\"start\":62380},{\"end\":62657,\"start\":62608},{\"end\":63122,\"start\":63056},{\"end\":63491,\"start\":63428},{\"end\":64220,\"start\":64159},{\"end\":64579,\"start\":64489},{\"end\":65004,\"start\":64946},{\"end\":65436,\"start\":65353},{\"end\":66081,\"start\":66014},{\"end\":66632,\"start\":66536},{\"end\":66997,\"start\":66902},{\"end\":67628,\"start\":67544},{\"end\":68328,\"start\":68274},{\"end\":68891,\"start\":68815},{\"end\":69627,\"start\":69553},{\"end\":70100,\"start\":70040},{\"end\":70364,\"start\":70322},{\"end\":70915,\"start\":70862},{\"end\":71398,\"start\":71341},{\"end\":71962,\"start\":71902},{\"end\":72214,\"start\":72164},{\"end\":72399,\"start\":72379},{\"end\":72692,\"start\":72623},{\"end\":73085,\"start\":73059},{\"end\":74128,\"start\":74063},{\"end\":74542,\"start\":74495},{\"end\":74970,\"start\":74928}]", "bib_author": "[{\"end\":62230,\"start\":62213},{\"end\":62241,\"start\":62230},{\"end\":62250,\"start\":62241},{\"end\":62451,\"start\":62441},{\"end\":62460,\"start\":62451},{\"end\":62471,\"start\":62460},{\"end\":62674,\"start\":62659},{\"end\":62682,\"start\":62674},{\"end\":62688,\"start\":62682},{\"end\":62698,\"start\":62688},{\"end\":62710,\"start\":62698},{\"end\":62716,\"start\":62710},{\"end\":62725,\"start\":62716},{\"end\":62737,\"start\":62725},{\"end\":62747,\"start\":62737},{\"end\":62760,\"start\":62747},{\"end\":63132,\"start\":63124},{\"end\":63145,\"start\":63132},{\"end\":63153,\"start\":63145},{\"end\":63165,\"start\":63153},{\"end\":63174,\"start\":63165},{\"end\":63507,\"start\":63493},{\"end\":63520,\"start\":63507},{\"end\":63532,\"start\":63520},{\"end\":63748,\"start\":63736},{\"end\":63761,\"start\":63748},{\"end\":63981,\"start\":63975},{\"end\":63990,\"start\":63981},{\"end\":63997,\"start\":63990},{\"end\":64004,\"start\":63997},{\"end\":64233,\"start\":64222},{\"end\":64247,\"start\":64233},{\"end\":64259,\"start\":64247},{\"end\":64588,\"start\":64581},{\"end\":64595,\"start\":64588},{\"end\":64602,\"start\":64595},{\"end\":64610,\"start\":64602},{\"end\":64623,\"start\":64610},{\"end\":64629,\"start\":64623},{\"end\":65015,\"start\":65006},{\"end\":65027,\"start\":65015},{\"end\":65037,\"start\":65027},{\"end\":65052,\"start\":65037},{\"end\":65062,\"start\":65052},{\"end\":65075,\"start\":65062},{\"end\":65089,\"start\":65075},{\"end\":65103,\"start\":65089},{\"end\":65112,\"start\":65103},{\"end\":65122,\"start\":65112},{\"end\":65446,\"start\":65438},{\"end\":65455,\"start\":65446},{\"end\":65464,\"start\":65455},{\"end\":65476,\"start\":65464},{\"end\":65488,\"start\":65476},{\"end\":66095,\"start\":66083},{\"end\":66104,\"start\":66095},{\"end\":66113,\"start\":66104},{\"end\":66122,\"start\":66113},{\"end\":66130,\"start\":66122},{\"end\":66139,\"start\":66130},{\"end\":66151,\"start\":66139},{\"end\":66645,\"start\":66634},{\"end\":66652,\"start\":66645},{\"end\":66661,\"start\":66652},{\"end\":67006,\"start\":66999},{\"end\":67015,\"start\":67006},{\"end\":67023,\"start\":67015},{\"end\":67031,\"start\":67023},{\"end\":67038,\"start\":67031},{\"end\":67642,\"start\":67630},{\"end\":67652,\"start\":67642},{\"end\":67662,\"start\":67652},{\"end\":67673,\"start\":67662},{\"end\":67682,\"start\":67673},{\"end\":67690,\"start\":67682},{\"end\":68338,\"start\":68330},{\"end\":68348,\"start\":68338},{\"end\":68359,\"start\":68348},{\"end\":68902,\"start\":68893},{\"end\":68916,\"start\":68902},{\"end\":68924,\"start\":68916},{\"end\":68934,\"start\":68924},{\"end\":68941,\"start\":68934},{\"end\":68953,\"start\":68941},{\"end\":69643,\"start\":69629},{\"end\":69657,\"start\":69643},{\"end\":69666,\"start\":69657},{\"end\":69674,\"start\":69666},{\"end\":70112,\"start\":70102},{\"end\":70121,\"start\":70112},{\"end\":70372,\"start\":70366},{\"end\":70383,\"start\":70372},{\"end\":70392,\"start\":70383},{\"end\":70400,\"start\":70392},{\"end\":70408,\"start\":70400},{\"end\":70416,\"start\":70408},{\"end\":70695,\"start\":70680},{\"end\":70707,\"start\":70695},{\"end\":70717,\"start\":70707},{\"end\":70925,\"start\":70917},{\"end\":70934,\"start\":70925},{\"end\":70943,\"start\":70934},{\"end\":70951,\"start\":70943},{\"end\":70963,\"start\":70951},{\"end\":71207,\"start\":71189},{\"end\":71214,\"start\":71207},{\"end\":71408,\"start\":71400},{\"end\":71421,\"start\":71408},{\"end\":71431,\"start\":71421},{\"end\":71440,\"start\":71431},{\"end\":71452,\"start\":71440},{\"end\":71796,\"start\":71778},{\"end\":71806,\"start\":71796},{\"end\":71975,\"start\":71964},{\"end\":71983,\"start\":71975},{\"end\":71994,\"start\":71983},{\"end\":72002,\"start\":71994},{\"end\":72229,\"start\":72216},{\"end\":72240,\"start\":72229},{\"end\":72248,\"start\":72240},{\"end\":72410,\"start\":72401},{\"end\":72417,\"start\":72410},{\"end\":72434,\"start\":72417},{\"end\":72443,\"start\":72434},{\"end\":72455,\"start\":72443},{\"end\":72466,\"start\":72455},{\"end\":72476,\"start\":72466},{\"end\":72707,\"start\":72694},{\"end\":72716,\"start\":72707},{\"end\":72728,\"start\":72716},{\"end\":72742,\"start\":72728},{\"end\":72754,\"start\":72742},{\"end\":73096,\"start\":73087},{\"end\":73109,\"start\":73096},{\"end\":73121,\"start\":73109},{\"end\":73135,\"start\":73121},{\"end\":73147,\"start\":73135},{\"end\":73524,\"start\":73516},{\"end\":73535,\"start\":73524},{\"end\":73776,\"start\":73765},{\"end\":73783,\"start\":73776},{\"end\":73794,\"start\":73783},{\"end\":73805,\"start\":73794},{\"end\":73814,\"start\":73805},{\"end\":73823,\"start\":73814},{\"end\":73834,\"start\":73823},{\"end\":74142,\"start\":74130},{\"end\":74153,\"start\":74142},{\"end\":74555,\"start\":74544},{\"end\":74565,\"start\":74555},{\"end\":74575,\"start\":74565},{\"end\":74584,\"start\":74575},{\"end\":74980,\"start\":74972},{\"end\":74990,\"start\":74980},{\"end\":75003,\"start\":74990},{\"end\":75012,\"start\":75003},{\"end\":75024,\"start\":75012},{\"end\":75351,\"start\":75340},{\"end\":75359,\"start\":75351},{\"end\":75371,\"start\":75359}]", "bib_venue": "[{\"end\":62253,\"start\":62250},{\"end\":62476,\"start\":62471},{\"end\":62800,\"start\":62760},{\"end\":63223,\"start\":63174},{\"end\":63536,\"start\":63532},{\"end\":63734,\"start\":63668},{\"end\":63973,\"start\":63929},{\"end\":64297,\"start\":64259},{\"end\":64690,\"start\":64629},{\"end\":65126,\"start\":65122},{\"end\":65615,\"start\":65488},{\"end\":66228,\"start\":66151},{\"end\":66679,\"start\":66675},{\"end\":67103,\"start\":67038},{\"end\":67817,\"start\":67690},{\"end\":68465,\"start\":68400},{\"end\":69096,\"start\":69006},{\"end\":69751,\"start\":69674},{\"end\":70154,\"start\":70121},{\"end\":70438,\"start\":70416},{\"end\":70678,\"start\":70611},{\"end\":70977,\"start\":70963},{\"end\":71187,\"start\":71126},{\"end\":71514,\"start\":71452},{\"end\":71776,\"start\":71748},{\"end\":72019,\"start\":72015},{\"end\":72252,\"start\":72248},{\"end\":72480,\"start\":72476},{\"end\":72822,\"start\":72754},{\"end\":73211,\"start\":73173},{\"end\":73514,\"start\":73460},{\"end\":73763,\"start\":73686},{\"end\":74230,\"start\":74153},{\"end\":74661,\"start\":74584},{\"end\":75076,\"start\":75024},{\"end\":75338,\"start\":75246},{\"end\":65729,\"start\":65617},{\"end\":66292,\"start\":66230},{\"end\":67172,\"start\":67105},{\"end\":67948,\"start\":67819},{\"end\":68534,\"start\":68467},{\"end\":69190,\"start\":69098},{\"end\":69815,\"start\":69753},{\"end\":74294,\"start\":74232},{\"end\":74725,\"start\":74663}]"}}}, "year": 2023, "month": 12, "day": 17}