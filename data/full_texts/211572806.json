{"id": 211572806, "updated": "2023-10-06 18:15:05.278", "metadata": {"title": "MINA: Convex Mixed-Integer Programming for Non-Rigid Shape Alignment", "authors": "[{\"first\":\"Florian\",\"last\":\"Bernard\",\"middle\":[]},{\"first\":\"Zeeshan\",\"last\":\"Suri\",\"middle\":[\"Khan\"]},{\"first\":\"Christian\",\"last\":\"Theobalt\",\"middle\":[]}]", "venue": "2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)", "journal": "2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR)", "publication_date": {"year": 2020, "month": 2, "day": 28}, "abstract": "We present a convex mixed-integer programming formulation for non-rigid shape matching. To this end, we propose a novel shape deformation model based on an efficient low-dimensional discrete model, so that finding a globally optimal solution is tractable in (most) practical cases. Our approach combines several favourable properties: it is independent of the initialisation, it is much more efficient to solve to global optimality compared to analogous quadratic assignment problem formulations, and it is highly flexible in terms of the variants of matching problems it can handle. Experimentally we demonstrate that our approach outperforms existing methods for sparse shape matching, that it can be used for initialising dense shape matching methods, and we showcase its flexibility on several examples.", "fields_of_study": "[\"Computer Science\",\"Mathematics\"]", "external_ids": {"arxiv": "2002.12623", "mag": "3035051716", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/cvpr/BernardST20", "doi": "10.1109/cvpr42600.2020.01384"}}, "content": {"source": {"pdf_hash": "7d498f0d9b73b322d5f4f5950887e37df85e3b1a", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2002.12623v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/2002.12623", "status": "GREEN"}}, "grobid": {"id": "163622248f62c7bf71de79efd5d0366984452963", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/7d498f0d9b73b322d5f4f5950887e37df85e3b1a.txt", "contents": "\nMINA: Convex Mixed-Integer Programming for Non-Rigid Shape Alignment\n\n\nFlorian Bernard \nMPI Informatics Saarland Informatics Campus\n\n\nZeeshan Khan \nMPI Informatics Saarland Informatics Campus\n\n\nSuri Christian Theobalt \nMPI Informatics Saarland Informatics Campus\n\n\nMINA: Convex Mixed-Integer Programming for Non-Rigid Shape Alignment\n(Best viewed on screen when zoomed in)\ninputour matching mesh to point cloud different topology partial overlapsFigure 1. Left: MINA matches the straight cylinder X non-rigidly to the curved cylinder Y (their orientations are arbitrary, but we visualise them with same orientation). It finds the globally optimal correspondences P \u2208 P between a sparse set of points (coloured dots), as well as the non-rigid deformation \u03c4 of X so that \u03c4 (X ) aligns with Y. MINA is highly flexible, e.g. it can match a mesh to a point cloud (middle left), match shapes with different topologies (middle right, where the hands in X are not touching, while the hands in Y are, see the geodesic paths between both hands shown as red lines), or deal with partial overlaps (right).AbstractWe present a convex mixed-integer programming formulation for non-rigid shape matching. To this end, we propose a novel shape deformation model based on an efficient low-dimensional discrete model, so that finding a globally optimal solution is tractable in (most) practical cases. Our approach combines several favourable properties: it is independent of the initialisation, it is much more efficient to solve to global optimality compared to analogous quadratic assignment problem formulations, and it is highly flexible in terms of the variants of matching problems it can handle. Experimentally we demonstrate that our approach outperforms existing methods for sparse shape matching, that it can be used for initialising dense shape matching methods, and we showcase its flexibility on several examples.\n\nIntroduction\n\nFinding correspondences in geometric data is a longstanding problem in vision, graphics, and beyond. The applications range from the creation of statistical shape models, 3D reconstruction, object tracking, or recognition, to more recent settings such as the alignment of geometric data to enable the training of deep learning models. In this work we consider the problem of finding correspondences between two given shapes, known as shape matching.\n\nWe assume that one shape is a geometrically transformed version of the other shape. With that, matching shape X to shape Y can be phrased as finding a transformation \u03c4 (which belongs to a particular class \u2126 of transformations) such that the transformed shape \u03c4 (X ) best aligns with Y. Formally, this can be written as the optimisation problem\nmin \u03c4 \u2208\u2126 d(\u03c4 (X ), Y) ,(1)\nwhere d(\u00b7, \u00b7) is a suitable metric that quantifies the discrepancy between both shapes. The particular shape matching setting depends on the choice of the metric d(\u00b7, \u00b7) and the class of transformations \u2126. For example, rigid shape matching refers to \u2126 = SE(d), where SE(d) is the special Euclidean group in dimension d. In this work we study the non-rigid shape matching problem, where \u2126 comprises non-rigid deformations (to be defined in Sec. 3). Although many previous works have addressed non-rigid shape matching, there are several open challenges: (i) due to the non-convex nature of Problem (1) for virtually all relevant choices of d(\u00b7, \u00b7) and \u2126, existing methods cannot guarantee to find global optima. Hence, these methods heavily depend on the initial choice of \u03c4 . (ii) Oftentimes, non-rigid shape matching methods require that both shapes have the same representation (e.g. meshes). (iii) Existing approaches have a limited flexibility in terms of the matching formulation that can be handled, e.g. they can only handle bijective matchings, or they cannot guarantee injectivity, they do not allow for additional constraints (e.g. bounding the maximum distortion of a matching), or they cannot deal with shapes that have different topologies. (iv) Moreover, existing formulations that purely aim for preserving pairwise distances when finding a matching (see quadratic assignment problem in Sec. 2) are not guaranteed to maintain the orientation of the surface.\n\nOur contribution. Our main idea is to formulate nonrigid shape matching in terms of a convex mixed-integer programming (MIP) problem, while addressing (i)-(iv). We summarise our main contributions as follows:\n\n\u2022 We propose a low-dimensional discrete model for nonrigid shape matching that is highly flexible as it allows to tackle a wide range of matching formulations. \u2022 Although solving MIP problems to global optimality has worst-case time complexity that is exponential in the number of integer variables, our proposed formulation only requires a small number of integer variables that is independent of the shape resolution. \u2022 Our formulation does not require an initialisation and it is oftentimes possible to (certifiably) find a globally optimal solution in practice.\n\n\nRelated Work & Background\n\nDue to the vast amount of literature related to shape matching and correspondence problems, it is beyond the scope of this paper to provide an exhaustive background of related work. A broad overview of the topic is for example presented in [47]. In the following we summarise works that we consider most relevant.\n\nRigid shape matching. Finding a rotation and translation that aligns two shapes is known as rigid shape matching. The Procrustes problem [42] considers the setting when the correspondences between points on both shapes are known, which admits an efficient closed-form solution. However, rigid shape matching becomes significantly harder if the correspondences are unknown. Most commonly, this is addressed via local optimisation. A popular approach is the Iterative Closest Point (ICP) algorithm [7], which also comes in various variants, such as a probabilistic formulation [30]. These methods have in common that they do not guarantee to find a globally optimal solution and therefore their outcome is highly dependent on a good initialisation. Contrary to these local methods, for the rigid shape matching problem there are also global approaches, e.g. based on a semidefinite programming relaxation [26], or on branch and bound algorithms [31,52].\n\nA downside of these shape matching approaches is that they have the strong assumption that both shapes can be aligned based on a rigid-body transformation. However, in practice this assumption is oftentimes violated, so that non-rigid shape matching approaches are more appropriate, which we will discuss next.\n\nFunctional maps. A popular paradigm for isometric shape matching are functional maps (FM) [32,18,34], 10  which define a framework for transferring a function from a source to a target shape. Although FM were shown to be a powerful tool for isometric shape matching, they also have some shortcomings: they are sensitive to noise and suffer from symmetries, point-to-point maps obtained from FM are neither guaranteed to be smooth nor injective, and they are not suitable for severe non-isometries. Rigid shape matching methods applied to spectral embeddings (obtained via FM) can also be used for isometric matching, such as done in PM-SDP [26]. However, in this case the mentioned shortcomings also apply.\n\nQuadratic assignment problem. Another popular approach for non-rigid shape matching are formulations based on the quadratic assignment problem (QAP) (or graph matching) [25], which aim for a non-rigid deformation with small distortion. In a discrete setting this can be phrased as matching vertices between two shapes in such a way that pairwise geodesic distances (or similar quantities) are (approximately) preserved by the vertex-to-vertex correspondences. The QAP is known to be NP-hard [35], so that most solution approaches are based on heuristic approaches without formal guarantees, such as e.g. [22]. There are also more principled methods based on convex relaxations, including lifting-free [53,13,6] and lifting-based relaxations [40,46,20]. However, they do not guarantee to find a globally optimal solution of the original non-convex problem as they rely on some kind of rounding procedure to obtain a binary solution. Globally optimal QAP solvers are based on combinatorial search, e.g. via branch and bound [4], and these methods scale exponentially in the number of variables. Similarly as in the QAP, our method also takes the spatial context of matchings into account, but we demonstrate that in practice our proposed formulation is significantly faster to solve, cf. Fig. 2. We believe that this is because our formulation has a special structure (based on our sparse deformation model) that can more efficiently be leveraged by combinatorial solvers.\n\nGlobal non-rigid matching. It was shown that certain matching problems can be solved globally optimal by finding shortest paths in a graph, or based on dynamic programming. These include matching 2D shapes (contours) to a 2D image [11,14,41], or matching a 2D contour to a 3D shape [21]. As for example pointed out in [5], non-rigidly matching two objects in 3D is a significantly more difficult problem as it does not allow such a formulation. In [51] the elastic matching of two 3D meshes is addressed based on a linear programming formulation. However, the formulation is sensitive to the mesh triangulation, requires a large number of binary variables, and due to the non-tightness of relaxation it relies on sophisticated rounding techniques after which global optimality cannot be guaranteed anymore.\n\nIn [10] the authors propose a convex formulation for nonrigid registration that is solved via message passing. This approach requires an extrinsic term in order to disambiguate intrinsic symmetries, which in practice means that an initial alignment between both shapes is indispensable, thereby mitigating the advantages of a convex formulation.\n\nLocal non-rigid matching. In a similar spirit, local refinement techniques also rely on a good matching initialisation. Such methods include [49,48] and [27], where a given initial matching is gradually refined. While [49] relies on a QAP formulation, in [27] a spectral method based on FM is used for a hierarchical upsampling. In Sec. 4.3 we show that our method can be used as initialisation for such methods.\n\nIn [44] the authors propose a non-rigid deformation model based on per-triangle affine transformations. Within this framework they also pose a correspondence problem, which, however, requires a good initial alignment between both shapes in order to make the optimisation problem wellposed. Moreover, since the problem is non-convex, in general one only finds local optima. In our work we leverage a similar deformation model, but (i) we phrase the problem in a well-posed way without requiring an initial shape alignment, and (ii) we perform a global optimisation.\n\nLearning-based matching. Shape matching has also been tackled with machine learning techniques, e.g. with random forests [38], supervised deep functional maps [23], deep functional maps trained in self-or unsupervised settings [17,39], or using PointNet [33] for learning point cloud correspondences [16]. Undeniably, machine learning has the potential to address many open challenges in shape matching, e.g. for learning appropriate shape representations. In the past it was demonstrated that combinatorial shape matching benefits from learned deep features [5], and reversely, that embedding combinatorial optimisation solvers into neural networks (\"differentiable programming\") opens up new possibilities for tackling a range of interesting matching problems [28]. We believe that in the future our method may also be amenable to utilise such synergies, and therefore consider it to be orthogonal to learning-based methods.\n\nConvex mixed-integer programming. Mixed-integer programming refers to optimisation problems that involve both continuous and discrete variables. Their advantage is that they are extremely flexible and allow to model a wide range of complex problems. For example, they can be used to discretise difficult non-convex problems, such as formulations that impose rotation matrix constraints, or for phrasing matching problems with binary variables. However, the downside is that MIP problems have a search space that has exponential size in the number of discrete variables, so that in general it is very hard to solve large problems to global optimality. Convex mixed-integer programming refers to a subclass of MIP problems that are convex for fixed integer variables. A major advantage is that for this class of problems there exist efficient branch and bound solvers that globally optimise such problems. Albeit the fact that these solvers have a worst-case runtime that is exponential in the number of integer variables, in this work we demonstrate that solving non-rigid shape matching using a convex MIP reformulation is tractable in (most) practical scenarios.\n\n\nNon-Rigid Shape Matching\n\nFirst, we summarise our notation. For an integer i \u2208 N we define [i] := {1, . . . , n}. For a matrix X \u2208 R p\u00d7q and the index set I \u2286 [p] we use X I \u2208 R |I|\u00d7q to denote the |I| rows of X selected by I. 1 n and I n denote the ndimensional vector of all ones and the n-dimensional identity matrix, \u00b7 denotes the Frobenius norm, and matrix and vector inequalities are understood element-wise.\n\nLet X and Y be triangular surface meshes that are discretisations of Riemannian 2-manifolds embedded in 3D space. Note that later in Sec. 4.4 we will also address the case when Y is a point cloud. Our aim is to find a nonrigid deformation \u03c4 that transforms shape X to \u03c4 (X ), so that it aligns well with shape Y, cf. Problem (1). For notational convenience we use X \u2208 R n X \u00d73 and Y \u2208 R n Y \u00d73 to refer to the matrices containing the n X and n Y 3D vertex positions of shapes X and Y, respectively. Moreover, let F X \u2208 [n X ] f X \u00d73 be a matrix that encodes the triangular faces of X , where f X is the number of triangles.\n\n\nNon-Rigid Deformation Model\n\nWe model the non-rigid deformation of X by applying an affine transformation to each triangle. In conjunction with suitable mesh consistency constraints, the individual pertriangle affine deformations globally constitute a non-rigid deformation. Although related deformation models have been introduced before [43,44,5,45], they have not been used for a global optimisation of non-rigid shape matching.\n\nAffine per-triangle transformations. For the i-th vertex X i we define the non-rigid deformation \u03c4 p in terms of its Figure 3. Illustration of the deformation \u03c4 , where each triangle undergoes an affine transformation. The consistency constraint imposes that the transformed Xi is the same, no matter whether it is transformed by \u03c4p or \u03c4q for p \u2208 Ni and q \u2208 Ni. adjacent triangle p as\n\u03c4 p (X i ) := (X i \u2212 c p )Q p + c p + t p ,(2)\nwhere c p \u2208 R 1\u00d73 is the centroid of the p-th triangle in the undeformed shape X , Q p \u2208 R 3\u00d73 is a linear transformation, and t p \u2208 R 1\u00d73 is a translation. As such, we first centre a given vertex, apply a linear transformation, undo the centring, and eventually translate it to its global position.\n\nMesh consistency constraints. In order to ensure a consistent mesh deformation, we impose the constraints\n\u03c4 p (X i ) = \u03c4 q (X i ) \u2200 i \u2208 [n X ], p \u2208 N i , q \u2208 N i , (3) where N i \u2282 [f X ]\nis the set of all triangles in X that are adjacent to vertex i, cf. Fig. 3. The purpose of the constraints (3) is to enforce that a given vertex X i is transformed to the same place, no matter which transformation of its adjacent triangles is applied, and thereby ensuring that the triangle topology is preserved by the deformation.\n\n\nMixed-Integer Non-Rigid Shape Alignment\n\nLow-dimensional correspondence model. Our nonrigid deformation \u03c4 is indirectly defined by a lowdimensional discrete model. To this end, subsets of the shape vertices are used as control points, which are represented by the matrices X I \u2208 R u\u00d73 and Y J \u2208 R v\u00d73 . Here, u := |I| and v := |J | denote the total number of control points for each shape, and I \u2286 [n X ] and J \u2286 [n Y ] denote the index sets that select the control points from the original shapes. A similar approach has been pursued in [45] for the interactive manipulation of shapes, where, however it is assumed that for each control point of X I the corresponding control point of Y J is already known. In contrast, we are interested in the much more difficult shape matching problem, where the correspondence between control points is unknown, and, moreover, there may not even exist an exact counterpart in Y J for each point in X I .\n\nConvex polyhedral surface approximation. We propose to address the issue that there may not exist exact counterparts between control points as follows: rather than matching control points of X I directly to control points of Y J , X Y Figure 4. Illustration of control points of X (left) that are matched to convex polyhedra of Y (right). Colours indicate correspondences between control points and convex polyhedra.\n\nwe match the points of X I to convex polyhedra that locally approximate the surface of Y, see Fig. 4. To this end, we associate a convex polyhedron with each control point of Y J , which we represent using the matrix\nZ j \u2208 R dj \u00d73 for j \u2208 [v].\nHere, each row of Z j contains one of the d j \u2208 N vertices (corner points) of the j-th polyhedron on Y. As such, any point that lies inside the convex polyhedron can be specified as a convex combination of rows of Z j , i.e. \u03b8 T Z j , where the d j -dimensional vector \u03b8 satisfies the convex combination constraints \u03b8 \u2265 0 dj and \u03b8 T 1 dj = 1. We note that this point-to-polyhedron matching is a strict generalisation of point-to-point matching, since the latter is achieved for d j =1. Using this formulation allows to find a matching between X I and Y J even when there exists only an approximate counterpart between the control points on both shapes. For details how we obtain the polyhedra see the Supp. Mat.\n\nCorrespondence term. We tackle the non-rigid shape matching problem by establishing correspondences between the control points X I and the convex polyhedra of Y, while at the same time ensuring that the resulting nonrigid deformation \u03c4 is \"regular\". For now, let us assume that u \u2264 v and that each control point of X I is matched to one of the convex polyhedra of Y. Moreover, we also allow that more than one control point of X I can be matched to the same convex polyhedron of Y. We model these matching constraints using the matrix P \u2208 P uv , where we define\nP uv := {P \u2208 {0, 1} u\u00d7v : P 1 v = 1 u } .(4)\nAn element P ij =1 means that the i-th control point of X I is matched to the j-th convex polyhedron of Y. Later, in Sec. 4.4, we will also present more general formulations that allow to also match shapes when some control points on X do not have a counterpart on Y.\n\nSince there are u control points of X I , where each of them is matched to one of the v convex polyhedra on Y, for each i\u2208[u], j\u2208[v] we introduce a convex combination weight vector \u03b1 ij \u2208R 1\u00d7dj . Here, i is the index of the control point of X I and j is the index of the convex polyhedron of Y. By defining d:\n= v j=1 d j , Z:=[Z T 1 , . . . , Z T v ] T \u2208 R d\u00d73 ,\nas well as the matrix of convex combination weights\n\u03b1 := [\u03b1 ij ] i\u2208[u],j\u2208[v] \u2208 R u\u00d7d ,(5)\nwe model our correspondence term as\nf corr (\u03c4, P ) := \u03bb c \u03c4 (X I ) \u2212 \u03b1Z .(6)\nIn addition we impose \u03b1\u22650, \u03b11 d =1 u , and \u03b1 ij 1 dj \u2264P ij for i\u2208 [u], j\u2208 [v]. As such, we can effectively enforce the convex combination and matching constraints using linear equalities. With that, the (u\u00d73)-dimensional matrix \u03b1Z contains points that lie inside the convex polyhedra, where each of its u rows correspond to the respective row of the transformed control point matrix \u03c4 (X I ) \u2208 R u\u00d73 . Moreover, to avoid that multiple control points are assigned to the same vertex of a convex polyhedron, we impose the \"soft-injectivity\" constraints 1 T u \u03b1\u22641 T d . The softinjectivity constraint enforces that the sum of weights in each column of \u03b1 is at most one. As such, if a (single) element in a column is exactly one, only this control point is assigned to the respective vertex of the convex polyhedron. If elements in a column of \u03b1 are strictly smaller than one, all respective control points are assigned to non-extreme points of the polyhedron, thereby preventing that multiple control points are matched to the same vertex of a polyhedron.\n\nWe use the notation (\u03b1, P ) \u2208 \u0393 to refer to the four constraints introduced in this paragraph. In overall, the correspondence term has the purpose to minimise the discrepancy between the control points of the transformed shape \u03c4 (X I ) and their corresponding convex polyhedra of Y.\n\nDeformation regularisers. For regularising the deformation \u03c4 we decompose each linear transformation Q p in (2) into the sum of a rotation matrix R \u2208 SO(3) and a (small) general linear part T p \u2208 R 3\u00d73 , so that \u03c4 p in (2) now becomes\n\u03c4 p (X i ) := (X i \u2212 c p )(R + T p ) + c p + t p .(7)\nThe purpose of using the additive factorisation Q p = R+T p (with T p small) is to ensure that the global shape deformation \u03c4 (approximately) preserves the morphology of X . This has a similar effect as the as-rigid-as-possible (ARAP) model [43], but requires only a single rotation matrix compared to f X rotation matrices as used in ARAP. In order to keep the linear part T p small, we impose the rigidity loss as\nf rigid (\u03c4 ) := \u03bb r [T 1 , . . . , T f X ] .(8)\nMoreover, for achieving a locally smooth deformation, we introduce the smoothness loss\nf smth (\u03c4 ) := \u03bb s [\u03c9 1 \u2206 1 , . . . , \u03c9 |E| \u2206 |E| ] ,(9)\nwhere E \u2282 [f X ] 2 denotes the set of all neighbouring triangle pairs in X , and \u03c9 e is a scalar weight. For e = (p, q) \u2208 E, so that triangles p and q are neighbours, we define the e-th smoothness residual as\n\u2206 e = \u03c4 p (c q ) \u2212 \u03c4 q (c q ) = \u03c4 p (c q ) \u2212 (c q + t q ) .(10)\nThe purpose of the residual \u2206 e \u2208 R 1\u00d73 is to quantify the difference between transforming the triangle centroid c q using the transformation \u03c4 q of the same triangle, and using the transformation \u03c4 p defined for its neighbour triangle p.\n\nOptimisation problem. Based on the introduced terms and constraints our mixed-integer non-rigid alignment (MINA) formulation reads arg min\nP,\u03b1,R,{Tp},{tp} f corr (\u03c4, P ) + f rigid (\u03c4 ) + f smth (\u03c4 ) (11) s.t. \u03c4 p (X i ) = \u03c4 q (X i ) , P \u2208 P uv , (\u03b1, P ) \u2208 \u0393 , R \u2208 SO(3) .\nWe assume that all weights \u03bb \u2022 \u2265 0. The mesh consistency and the \u0393 constraints are affine in the variables P, R, \u03b1, T p and t p , and all objective function terms f \u2022 are compositions of affine transformations with the Frobenius norm, so that they are convex. However, due to the binary constraints imposed upon P , and the non-convex quadratic equality constraints R \u2208 SO(3), the overall problem is non-convex.\n\nConvex mixed-integer formulation. To transform Problem (11) into a convex MIP problem, we use a piece-wise linear approximation of the SO(3) constraint based on binary variables, see the Supp. Mat. and [12]. To keep the number of binary variables small, we use an efficient Gray encoding for the piece-wise linear approximation, cf. [50], so that the number of binary variables is logarithmic in the number of discretisation bins b. The main idea here is to utilise a more efficient representation that requires fewer binary variables and thus admits a more efficient optimisation.\n\nIn particular, this results in 6\u00b7 log 2 (b) binary variables, in contrast to 6\u00b7b binary variables for a naive linear encoding. In Fig. 5 we compare our used logarithmic encoding with a linear one, where it can be seen that the logarithmic one requires less computation time, and that the determinant of the resulting matrix is already very close to 1 for b=4.\n\n\nExperiments\n\nIn this section we present an experimental evaluation of our proposed MINA approach. To this end, we compare it to other sparse correspondence methods, we analyse the gaps to global optimality, we demonstrate that MINA can be used as initialisation for dense shape matching, and we showcase its flexibility on several exemplary settings. We provide additional implementation details in the Supp. Mat..\n\n\nSparse Shape Matching\n\nIn this section we compare our method with other approaches that perform a sparse matching between a pair of shapes. In particular, we consider the convex matching method PM-SDP [26] in a rigid setting, the sparse gametheoretic approach by Rodola et al. [37], the coherent point drift (CPD) algorithm [30] (randomly initialised), and the convex relaxation by Chen & Koltun [10]. As such, we cover a wide range of shape matching paradigms, including convex relaxations for rigid (PM-SDP) and non-rigid (Chen & Koltun) shape matching, a local non-rigid method (CPD), and a sparse method that considers a quadratic assignment problem formulation (Rodola et al.). In this set of experiments we use the sparse points from [19] for matching pairs of shapes from the TOSCA dataset [9]. Hence, we directly match control points on X to control points on Y when using our MINA method (i.e. d j =1 for j\u2208[v]).\n\nIn Fig. 6 we show correspondences obtained from our method for various shape matching pairs. In Fig. 7 we show quantitative results, where we summarise the percentage of correct matches (relative to the number of given control points) for each shape class in the TOSCA dataset. It can be seen that our MINA method generally outperforms the other sparse matching approaches. The lower scores for smaller geodesic thresholds arise due to our sparse modelling, since matchings can only be as accurate as the sparse control points allow for. Since the method by Rodola et al. [37] does not match all of the given points, the respective curves do not reach 100%. Moreover, the performance of PM-SDP indicates that a rigid matching setting is too restrictive. Additional results can be found in the Supp. Mat.\n\n\nGlobal Optimality Analysis\n\nHere, we analyse the gaps to global optimality dependent on the processing time t for the TOSCA shape matching instances in Sec. 4.1. To this end, we define\ng(t) = 1 N i:ti\u2264t (1 \u2212 \u03c3 rel i ) ,(12)\nwhere N is the total number of shape matching pairs (N =71 for TOSCA), t i denotes the total solver time for the i-th shape matching problem, and \u03c3 rel i is the relative gap of the i-th problem that is defined as \u03c3 rel i = |f \u2212f | max(\u03b4,|f |) (see [2]). Here, f and f are the upper and lower bounds of the objective value of the MIP formulation of Problem (11), respectively, and \u03b4 is a small number. In Fig. 8 (left) it can be seen that after 1h (our time budget for the MIP solver) the value of g reaches 0.98, i.e. on average the solutions are close to being globally optimal (a value of 1 means that all instances are solved to global optimality). After 1h, for 82% of the cases we certify global optimality, see Fig. 8 (right).\n\n\nDense Shape Matching\n\nNext, we demonstrate that our method can be used to obtain a suitable initialisation for dense correspondence methods. Since dense non-rigid matching approaches are highly initialisation-dependent (even the convex approach [10] requires a good initial alignment, cf. Sec. 2), it is crucial that they are provided with a good initialisation.\n\nFor these experiments we use the product manifold filter (PMF) [49] for obtaining a dense matching from a given sparse matching. To obtain the initial sparse matching, in addition to our MINA approach, we consider a random matching, a rigid alignment obtained via PM-SDP [26], and the approach by Rodola et al. [37]. Unlike in the previous section, here we extract the sparse points that we want to match based on geodesic farthest point sampling (FPS), which obtains an (approximately) uniform sampling of control points on the shapes.\n\nIn Fig. 9 we show results for the PMF-based densification for shapes from the TOSCA dataset [9] (cat, dog, wolf, human), the SHREC watertight dataset [15] (glasses, teddy, pigs), the FAUST dataset [8] (human) and the SCAPE dataset [1] (human). Using a random initialisation (second row) fails in all cases and therefore confirms the dependence of PMF to its initialisation. Although PM-SDP finds a global optimum (of a convex relaxation), the rigid deformation model is too restricted and therefore does not produce reliable dense correspondences for non-rigid shape matching (third row). The method by Rodola et al. [37] works well for several cases (fourth row), but due to its initialisation-dependence and potential orientation flips it also leads to several wrong matchings. We find that for various types of matching problems, including strong non-rigid deformations (cat in the first column), or inter-object matching (wolf-dog in the second column), our MINA method provides the most reliable initialisation (last row). Although in many cases MINA is able to properly handle selfsymmetries, such symmetries form a particular difficulty for all considered methods and therefore may lead to wrong matchings (last two columns). Another difficulty are drastic Figure 6. Correspondences obtained from our method for several shape matching instances from the TOSCA dataset [9]. Correspondences between X in the top row and Y in the bottom row are indicated by dots with corresponding colours. \n\n\nFlexibility of MINA Formulation\n\nNext, we demonstrate the flexibility of our MINA model by addressing several variants of shape matching formulations in a proof-of-concept manner.\n\nOutlier rejection. So far, we assumed that there exists a corresponding convex polyhedron on Y for each control point X I . In order to allow that some control points of X I are not matched to a convex polyhedron on Y, we propose to use an outlier rejection mechanism where up to n out of the control points can remain unmatched. To this end, we replace the correspondence term f corr in (6) with\nf corr := \u03bb c \u03c4 (X I ) \u2212 \u03b1Z + ,(13)\nwhere \u2208 R u\u00d73 is a sparse error variable with 0 \u2264n out . Here, we use \u00b7 0 to denote the row-wise 0 -norm that counts the total number of non-zero rows. To model the 0 -norm as MIP, we introduce the outlier indicator variable \u03b4\u2208{0, 1} u , where we impose 1 T u \u03b4\u2264n out . Moreover, we make use of the fact that both shapes are spatially bounded, which implies a bounded correspondence error. With that, we can enforce sparsity of with the linear con-\nstraint \u2212\u03b4 i M 1 T 3 \u2264 i \u2264\u03b4 i M 1 T 3\nfor a sufficiently large (positive) number M . As such, whenever \u03b4 i =1, the i-th control point does not contribute any error towards the term f corr since i will compensate for the discrepancy between (\u03c4 (X I )) i and (\u03b1Z) i . In Fig. 10 we compare our original formulation with the outlier rejection mechanism, which makes it possible to match pairs of shapes even when the control points are inconsistent between both shapes.\n\nShape to point cloud matching. We used MINA for matching a human body mesh (from [1]) to a real point cloud that we acquired using a TreedyScan Full Body Scanner. The raw point cloud was cropped using a manually specified bounding box, downsampled to about 10k points, and denoised. The control points where sampled using geodesic FPS, where we used a nearest neighbour graph for computing geodesics (and estimating normals) on the point cloud. For this experiment we enforce that P is an injective matching, i.e. we impose 1 T u P \u2264 1 T v . In Fig. 1 (middle left) we show the resulting matching, which confirms that our method works well in this setting.\n\nDifferent topologies. We used MINA for matching two human shapes with different topologies, as shown in Fig. 1 (middle right), where the hands in X are not touching, whereas the hands in Y are touching, as indicated by the geodesic paths between both hands shown as red lines. Here, we used geodesic FPS to sample the control points.  [37], MINA) that are used as initialisation for PMF [49] to obtain a dense matching. The first row shows the reference shape and the other rows show the colour-coded dense correspondences for the respective methods. Partial shape matching: We also match a partial shape to a full shape, which we show in Fig. 1 (right). Here, we used geodesic FPS to sample the control points and we enforce that P is an injective matching, as above.\n\nBounded distortion matching. Our formulation also allows to bound the maximum distortion of a matching. This can be implemented by imposing linear constraints P st +P pq \u2264 1 for those s, p\u2208u and t, q\u2208v where the geodesic distance between points s, p on X and points t, q on Y exceed the maximum allowed distortion. With that, at most one of the matchings P st or P pq is allowed.\n\n\nDiscussion & Limitations\n\nAlthough our proposed MINA method has a range of desirable properties, including its high flexibility, its tractability (in practice) due to a low-dimensional matching representation, or its initialisation independence, there are also open points that we aim to address in the future. In Sec. 4.4 we demonstrated that MINA enables matching a mesh to real-world point cloud data. Considering severely cluttered data, cf. [36], or matching shapes with other data representations (e.g. polygon soups) are interesting next steps. A prominent strength of our formulation is that solely using geometric properties already achieves good results. However, additionally incorporating feature descriptors, as commonly done for shape matching, is straightforward and may be useful for further boosting the matching performance.\n\nScalability. Our MINA formulation allows to solve nonrigid shape matching problems with u, v being of order 10 2 . Ideally one would be able to address matching problems with a much denser sampling of control points, so that more severe non-rigid deformations can be modelled accurately. Although we gained a significant scalability improvement compared to a QAP formulation, cf. Fig. 2, a further reduction of the computational time would be beneficial.\n\nMulti matching. The presented MINA formulation is phrased for matching pairs of shapes. We believe that multi matching problems would also benefit from related formulations. One potential way for achieving this is to consider all pairwise matching problems (in a symmetric fashion), and coupling these using cycle-consistency constraints.\n\n\nConclusion\n\nWe have presented a convex mixed-integer programming formulation for non-rigid shape matching problems, and we have demonstrated that finding the global optimum is tractable in (most) practical scenarios (see Fig. 8). In overall, our formulation comes with a range of benefits: (i) it is more efficient to solve to global optimality compared to the frequently used QAP formulation (Fig. 2), (ii) it is initialisation independent, (iii) it is able to obtain suitable initialisations for dense shape matching methods (Sec. 4.3), and (iv) it is highly flexible in the type of non-rigid shape matching problems it can handle (Sec. 4.4). Although MIP formulations are oftentimes evaded for matching problems in computer vision (due to their high computational complexity), in this work we have shown that a suitable problem-specific modelling indeed allows to solve non-rigid shape matching problems as MIP. n i |N i \u2212 N |. As such, starting with t=0, we consider the vertices of the tring of the j-th vertex as Z j , where we increase t as long as max(mad(N t j )) \u2264 \u03b7. Here, N t j denotes the matrix of the normals of the t-ring of the j-th vertex and \u03b7 specifies a user-defined threshold. Once we have determined the largest t such that the t-ring neighborhood is sufficiently planar (below the threshold \u03b7), we discard all points in the rows of Z j that are interior vertices of the convex polygon defined by Z j (as they are redundant). In Fig. 4 (right) we show so-obtained convex polyhedra.\n\n\nB. Piece-wise Linear Approximation of SO(3) Constraints\n\nThe constraint R\u2208 SO(3) can be expressed as the orthogonality constraint R T R=I 3 in combination with R 1 \u00d7R 2 =R 3 . Hence, the constraint R\u2208 SO(3) comprises exactly 6 quadratic equality constraints, which form a nonconvex set. In order to define a piece-wise linear approximation we use specially-ordered set of type 2 (sos2) variables. An sos2 variable is a non-negative vector where at most two consecutive element can be non-zero. With that, such a variable allows to encode a non-convex quadratic function in terms of a piece-wise linear one, so that in the end all quadratic constraints become linear, and the sos2 constraints are imposed based on (few) binary variables.\n\nFor illustrative purposes, we will now provide a simple example for a piece-wise linear approximation of a quadratic function. Let us consider the function h(x) = x 2 on the interval [\u22121, 1]. First, we split the domain into b bins, so that we evaluate x 2 at these b discrete positions, and then compute all values that fall in-between the sampled points as linear approximation between its two neighbour sample points. Let b = 4, and let \u03c6 = [\u22121, \u22120.5, 0, 0.5, 1] T be a vector that contains the discretised domain, so that \u03c6 2 = [1, 0.25, 0, 0.25, 1] T defines the elementwise square of \u03c6. Moreover, let \u03bb \u2208 R b+1 be a non-negative sos2 variable that sums to one (as mentioned, sos2 means that only two consecutive elements can be non-zero). Then, we can approximate\nh(x) \u2248 \u03bb T \u03c6 2 for x = \u03bb T \u03c6 .(14)\nFor example, for x = 0.75, we obtain the sos2 variable \u03bb = [0, 0, 0, 0.5, 0.5] T (since x = 0.75 = \u03bb T \u03c6). With that, we obtain h(0.75) = 0.5625 \u2248 0.625 = \u03bb T \u03c6 2 . The important property is that (14) allows to approximate the quadratic function h(\u00b7) based on a representation that is linear in the variables x and \u03bb. In addition to [12] and [50], we refer the interested reader to [3, Ch. 9.1.11] 1 , where sos2 constraints as well as the idea of using a logarithmic Gray encoding are explained.\n\n\nC. Search Space Reduction\n\nIn addition to using a logarithmic encoding of the SO(3) discretisation variables, we also impose further constraints upon the matching matrix P , so that the size of the overall search space can be reduced. A similar idea has also been pursued in [26], where a scalar criterion based on the average geodesic distance (ADG) was used. In contrast, rather than using a single scalar value for each vertex, we propose to leverage a more powerful approach that considers more descriptive statistics of geodesic distances, see Fig. 11. To this end, for each control point we compute n prctile evenly spaced percentiles from 0 to 100% of the geodesic distance from this control point to all other points. Let \u03b3 X \u2208 R u\u00d7nprctile and \u03b3 Y \u2208 R v\u00d7nprctile denote the so-obtained percentile matrices, where the columns are the ordered percentiles from 0 to 100%. As such, the matrices \u03b3 X and \u03b3 Y can be seen as features of the respective shapes extracted at the control points. Whenever two control points i \u2208 [u], j \u2208 [v] correspond to each other, the features \u03b3 X i and \u03b3 Y j should be similar, so that d ij := \u03b3 X i \u2212 \u03b3 Y j is small. Based on this observation, we use the feature distances [d ij ] i,j and sequentially solve n LAP linear assignment problems (LAP) [29] to match features. The idea of solving a sequence of LAPs is to not only find the single best matching P 1 of features, but rather finding multiple solutions P 1 , . . . , P nLAP , so that the nonzero elements in P all = nLAP =0 P define the allowed matchings in P . Here, the matrix P is obtained by performing a feature matching using [d ij ] i,j when forbidding all previous matchings P 1 , . . . , P \u22121 . As such, when optimising MINA, we constrain all elements of P to be zero for those elements where P all is zero. Using this procedure is advantageous over simple thresholding of [d ij ] i,j , since on the one hand feasibility is guaranteed, and on the other hand the number of allowed matchings is equal for all control points.\n\n\nD. Further Implementation Details\n\nWe have implemented MINA in the optimisation modelling toolbox Yalmip [24], which uses the conic mixed-X Y (ADG) Y (ours) Figure 11. Shape X (left) is matched to Y, where a search space reduction using ADG [26] leads to wrong matchings (middle), whereas ours produces correct correspondences (right).\n\ninteger branch and bound solver MOSEK [2] as backend (with default parameters). In all experiments we used \u03bb c =4, \u03bb r =1 and \u03bb s =0.5, where we account for different problem sizes by multiplying each \u03bb \u2022 with 1 \u221a # , where # denotes the total number of elements that the norm is applied to. We set the weights \u03c9 e for the smoothness term to \u03c9 e = de e\u2208E de , where for e = (p, q) by d e we denote the length of the common edge of triangles p, q. With that, we achieve that the deformation of two adjacent triangles p, q is more flexible when their common edge is small. We set the planarity threshold to \u03b7= 1 2 . For keeping the number of variables small, for each convex polyhedron Z j we only keep the respective control point as well as four additional points obtained via farthest point sampling (FPS) using geodesic distances as metric. Note that this results in convex polyhedra that are either a single point (if none of the t-rings of the j-th control point satisfies the planarity criterion), or Z j is a 5\u00d73 matrix. Since the non-rigid deformation induced by a sparse set of matched control points is relatively coarse, rather than modelling \u03c4 with the original mesh resolution we use downsampled meshes with about 300 faces, similarly as in [45]. We set n LAP =5, n prctile = min(n X , n Y ), M =0.2 and use b=4 bins for the SO(3) discretisation.\n\nNext, we provide additional details on shape to point cloud matching and the relation between partial shape matching and outlier rejection.\n\nShape to point cloud matching. The main difference when Y is represented as a point cloud rather than a mesh is that we need to use a different approach for computing geodesic distances and normals (required for sampling control points, for the definition of the convex polyhedra as described in Sec. A, and for the search space reduction described in Sec. C). In our case we compute geodesic distances and normals based on a nearest neighbour graph, where we use the 3 nearest neighbours. After this information is obtained, the overall optimisation problem is equivalent to the one when Y is a mesh, since the only information of Y that is explicitly used in our optimisation problem formulation are the convex polyhedra.\n\nRelation between partial shape matching and outlier rejection. In our considered partial shape matching setting we match all control points of the partial shape X to the full shape Y. This is in contrast to our outlier rejection setting, where we allow that some control points of X are not matched to Y. However, although for partial shape matching we do not use outlier rejection, we mention that principally it could be used for matching a full shape to a partial one.\n\n\nE. Additional TOSCA Results\n\nIn Fig. 12 we report runtime statistics over all 71 shape matching instances from the TOSCA datasets for all considered methods. On this dataset, the median processing time of our method is \u224815min, whereas the other methods require less than one minute.  In Fig. 13 we present further results where also the deformed shape \u03c4 (X ) is shown. Figure 13. Correspondences obtained from our method for several shape matching instances from the TOSCA dataset [9]. Correspondences are indicated by dots with corresponding colours. In each triplet of rows we show X , Y, and the deformed shape \u03c4 (X ) from top to bottom. Note that the deformation \u03c4 is not always able to obtain a good alignment (particularly for severe non-rigid transformations, e.g. the cat or the gorilla), but the correspondences are still reasonable in many cases.\n\nFigure 5 .\n5Runtime, relative speed-up w.r.t. linear, and determinants of R for linear and logarithmic encodings of the SO(3) discretisation.\n\nFigure 7 .Figure 8 .\n78Each plot summarises the percentage of correct matchings for different TOSCA shape classes. The horizontal axis shows the geodesic error threshold, and the vertical axis shows the percentage of matches that are smaller than or equal to this error. Optimality gaps (left) and proportion of instances solved to global optimality (right) dependent on the solver runtime. non-rigid deformations (dog in the fourth last column).\n\nFigure 9 .\n9Comparison of different sparse matchings (random, PM-SDP [26], Rodola et al.\n\nFigure 10 .\n10Left: without outlier rejection the dog's upper thigh is matched to the wolf's neck (red arrows). Right: our outlier rejection variant (13) effectively disregards this control point inconsistency (the unmatched point on X is shown in black).\n\nFigure 12 .\n12Runtime statistics for the TOSCA dataset. Note that the vertical axis is shown in log-scale.\nalso available online at https://docs.mosek.com/modeling-cookbook/mio. html#continuous-piecewise-linear-functions\nAcknowledgement: This work was funded by the ERC Consolidator Grant 4DRepLy.Supplementary MaterialA. Obtaining Convex Polyhedra on Y Given the j-th control point of Y J , we obtain its associated convex polyhedron using a neighhourhood propagation strategy. To this end, we define a planarity criterion using the maximum of the mean absolute deviation (MAD) of the surface normals at the points in Z j . For a given matrix N \u2208 R n\u00d73 and its column mean N \u2208 R 1\u00d73 , the MAD is defined as mad(N ) := 1\nScape: Shape completion and animation of people. Dragomir Anguelov, Praveen Srinivasan, Daphne Koller, Sebastian Thrun, Jim Rodgers, James Davis, SIGGRAPH. 67Dragomir Anguelov, Praveen Srinivasan, Daphne Koller, Se- bastian Thrun, Jim Rodgers, and James Davis. Scape: Shape completion and animation of people. In SIGGRAPH, 2005. 6, 7\n\nThe MOSEK optimization toolbox for MAT-LAB manual. Mosek Aps, 612Version 9.0.MOSEK ApS. The MOSEK optimization toolbox for MAT- LAB manual. Version 9.0., 2019. 2, 6, 12\n\nMOSEK Modeling Cookbook. Mosek Aps, Release 3.2.1, 2020. 11MOSEK ApS. MOSEK Modeling Cookbook. Release 3.2.1, 2020. 11\n\nAn exact branch-and-bound procedure for the quadratic-assignment problem. S Mokhtar, Alwalid N Bazaraa, Elshafei, Naval Research Logistics Quarterly. 261Mokhtar S Bazaraa and Alwalid N Elshafei. An exact branch-and-bound procedure for the quadratic-assignment problem. Naval Research Logistics Quarterly, 26(1):109- 121, 1979. 2\n\nA combinatorial solution to non-rigid 3d shape-to-image matching. Florian Bernard, R Frank, Johan Schmidt, Daniel Thunberg, Cremers, CVPR. Florian Bernard, Frank R Schmidt, Johan Thunberg, and Daniel Cremers. A combinatorial solution to non-rigid 3d shape-to-image matching. In CVPR, 2017. 3\n\nDS*: Tighter Lifting-Free Convex Relaxations for Quadratic Matching Problems. Florian Bernard, Christian Theobalt, Michael Moeller, CVPR. Florian Bernard, Christian Theobalt, and Michael Moeller. DS*: Tighter Lifting-Free Convex Relaxations for Quadratic Matching Problems. In CVPR, 2018. 2\n\nMethod for registration of 3-d shapes. J Paul, Neil D Besl, Mckay, Sensor fusion IV: control paradigms and data structures. 1611Paul J Besl and Neil D McKay. Method for registration of 3-d shapes. In Sensor fusion IV: control paradigms and data structures, volume 1611, pages 586-606. International Soci- ety for Optics and Photonics, 1992. 2\n\nFAUST: Dataset and evaluation for 3D mesh registration. Federica Bogo, Javier Romero, Matthew Loper, Michael J Black, CVPR. Federica Bogo, Javier Romero, Matthew Loper, and Michael J. Black. FAUST: Dataset and evaluation for 3D mesh registration. In CVPR, 2014. 6\n\nNumerical Geometry of Non-Rigid Shapes. Alexander Bronstein, Michael Bronstein, Ron Kimmel, Springer Publishing Company714Incorporated, 1 editionAlexander Bronstein, Michael Bronstein, and Ron Kimmel. Numerical Geometry of Non-Rigid Shapes. Springer Pub- lishing Company, Incorporated, 1 edition, 2008. 6, 7, 14\n\nRobust nonrigid registration by convex optimization. Qifeng Chen, Vladlen Koltun, CVPR. 36Qifeng Chen and Vladlen Koltun. Robust nonrigid registra- tion by convex optimization. In CVPR, 2015. 3, 6\n\nEfficient deformable template detection and localization without user initialization. James Coughlan, Alan Yuille, Camper English, Dan Snow, Computer Vision and Image Understanding. 783James Coughlan, Alan Yuille, Camper English, and Dan Snow. Efficient deformable template detection and localiza- tion without user initialization. Computer Vision and Image Understanding, 78(3):303-319, 2000. 3\n\nGlobal inverse kinematics via mixed-integer convex optimization. Hongkai Dai, Gregory Izatt, Russ Tedrake, The International Journal of Robotics Research. 511Hongkai Dai, Gregory Izatt, and Russ Tedrake. Global in- verse kinematics via mixed-integer convex optimization. The International Journal of Robotics Research, May 2017. 5, 11\n\nDS++ -A flexible, scalable and provably tight relaxation for matching problems. Nadav Dym, Haggai Maron, Yaron Lipman, ACM Transactions on Graphics (TOG). 366Nadav Dym, Haggai Maron, and Yaron Lipman. DS++ - A flexible, scalable and provably tight relaxation for match- ing problems. ACM Transactions on Graphics (TOG), 36(6), 2017. 2\n\nRepresentation and detection of deformable shapes. F Pedro, Felzenszwalb, TPAMI. 272Pedro F Felzenszwalb. Representation and detection of de- formable shapes. TPAMI, 27(2):208-220, 2005. 3\n\nShape retrieval contest 2007: Watertight models track. Daniela Giorgi, Silvia Biasotti, Laura Paraboschi, Daniela Giorgi, Silvia Biasotti, and Laura Paraboschi. Shape retrieval contest 2007: Watertight models track, 2007. 6\n\nUnsupervised cycleconsistent deformation for shape matching. Thibault Groueix, Matthew Fisher, G Vladimir, Kim, C Bryan, Mathieu Russell, Aubry, Computer Graphics Forum. 38Thibault Groueix, Matthew Fisher, Vladimir G Kim, Bryan C Russell, and Mathieu Aubry. Unsupervised cycle- consistent deformation for shape matching. In Computer Graphics Forum, volume 38, pages 123-133, 2019. 3\n\nUnsupervised learning of dense shape correspondence. Oshri Halimi, Or Litany, Emanuele Rodola, Alex M Bronstein, Ron Kimmel, CVPR. Oshri Halimi, Or Litany, Emanuele Rodola, Alex M Bron- stein, and Ron Kimmel. Unsupervised learning of dense shape correspondence. In CVPR, 2019. 3\n\nAdjoint map representation for shape analysis and matching. Ruqi Huang, Maks Ovsjanikov, Computer Graphics Forum. 36Ruqi Huang and Maks Ovsjanikov. Adjoint map representa- tion for shape analysis and matching. In Computer Graphics Forum, volume 36, pages 151-163, 2017. 2\n\n. Vladimir G Kim, Yaron Lipman, Thomas Funkhouser, Blended Intrinsic Maps. ACM Transactions on Graphics (TOG). 304Vladimir G. Kim, Yaron Lipman, and Thomas Funkhouser. Blended Intrinsic Maps. ACM Transactions on Graphics (TOG), 30(4), 2011. 6\n\nNadav Dym, and Yaron Lipman. Sinkhorn algorithm for lifted assignment problems. Yam Kushinsky, Haggai Maron, SIAM Journal on Imaging Sciences. 122Yam Kushinsky, Haggai Maron, Nadav Dym, and Yaron Lip- man. Sinkhorn algorithm for lifted assignment problems. SIAM Journal on Imaging Sciences, 12(2):716-735, 2019. 2\n\nEfficient globally optimal 2d-to-3d deformable shape matching. Zorah L\u00e4hner, Emanuele Rodola, R Frank, Schmidt, Daniel Michael M Bronstein, Cremers, CVPR. Zorah L\u00e4hner, Emanuele Rodola, Frank R Schmidt, Michael M Bronstein, and Daniel Cremers. Efficient glob- ally optimal 2d-to-3d deformable shape matching. In CVPR, 2016. 3\n\nAlternating direction graph matching. Nikos D Khu\u00ea L\u00ea-Huu, Paragios, CVPR. D Khu\u00ea L\u00ea-Huu and Nikos Paragios. Alternating direction graph matching. In CVPR, 2017. 2\n\nDeep functional maps: Structured prediction for dense shape correspondence. Or Litany, Emanuele Remez, Alex Rodola, Michael Bronstein, Bronstein, CVPR. Or Litany, Tal Remez, Emanuele Rodola, Alex Bronstein, and Michael Bronstein. Deep functional maps: Structured prediction for dense shape correspondence. In CVPR, 2017. 3\n\nYalmip: A toolbox for modeling and optimization in matlab. Johan Lofberg, ICRA. 11Johan Lofberg. Yalmip: A toolbox for modeling and opti- mization in matlab. In ICRA, 2004. 11\n\nA survey for the quadratic assignment problem. Maria Eliane, Nair Loiola, Paulo Oswaldo Boaventura Maria Maia De Abreu, Peter Netto, Tania Maia Hahn, Querido, European Journal of Operational Research. 1762Eliane Maria Loiola, Nair Maria Maia de Abreu, Paulo Oswaldo Boaventura Netto, Peter Hahn, and Tania Maia Querido. A survey for the quadratic assignment problem. Eu- ropean Journal of Operational Research, 176(2):657-690, 2007. 2\n\nPoint registration via efficient convex relaxation. Nadav Haggai Maron, Itay Dym, Shahar Kezurer, Yaron Kovalsky, Lipman, ACM Transactions on Graphics (TOG). 35412Haggai Maron, Nadav Dym, Itay Kezurer, Shahar Kovalsky, and Yaron Lipman. Point registration via efficient convex relaxation. ACM Transactions on Graphics (TOG), 35(4):73, 2016. 2, 6, 8, 11, 12\n\nZoomout: Spectral upsampling for efficient shape correspondence. Simone Melzi, Jing Ren, Emanuele Rodol\u00e0, Abhishek Sharma, Peter Wonka, Maks Ovsjanikov, 2019. 3ACM Transactions on Graphics (TOG). 386Simone Melzi, Jing Ren, Emanuele Rodol\u00e0, Abhishek Sharma, Peter Wonka, and Maks Ovsjanikov. Zoomout: Spectral upsampling for efficient shape correspondence. ACM Transactions on Graphics (TOG), 38(6), 2019. 3\n\nLearning latent permutations with gumbelsinkhorn networks. Gonzalo Mena, David Belanger, Scott Linderman, Jasper Snoek, In ICLR. 3Gonzalo Mena, David Belanger, Scott Linderman, and Jasper Snoek. Learning latent permutations with gumbel- sinkhorn networks. In ICLR, 2018. 3\n\nAlgorithms for the Assignment and Transportation Problems. James Munkres, Journal of the Society for Industrial and Applied Mathematics. 51James Munkres. Algorithms for the Assignment and Trans- portation Problems. Journal of the Society for Industrial and Applied Mathematics, 5(1):32-38, Mar. 1957. 11\n\nPoint set registration: Coherent point drift. Andriy Myronenko, Xubo Song, TPAMI. 32126Andriy Myronenko and Xubo Song. Point set registration: Coherent point drift. TPAMI, 32(12):2262-2275, 2010. 2, 6\n\nBranchand-bound methods for euclidean registration problems. Carl Olsson, Fredrik Kahl, Magnus Oskarsson, TPAMI. 315Carl Olsson, Fredrik Kahl, and Magnus Oskarsson. Branch- and-bound methods for euclidean registration problems. TPAMI, 31(5):783-794, 2008. 2\n\nFunctional maps: a flexible representation of maps between shapes. Maks Ovsjanikov, Mirela Ben-Chen, Justin Solomon, Adrian Butscher, Leonidas Guibas, ACM Transactions on Graphics (TOG). 31430Maks Ovsjanikov, Mirela Ben-Chen, Justin Solomon, Adrian Butscher, and Leonidas Guibas. Functional maps: a flexible representation of maps between shapes. ACM Transactions on Graphics (TOG), 31(4):30, 2012. 2\n\nPointnet: Deep learning on point sets for 3d classification and segmentation. Hao Charles R Qi, Kaichun Su, Leonidas J Mo, Guibas, CVPR. Charles R Qi, Hao Su, Kaichun Mo, and Leonidas J Guibas. Pointnet: Deep learning on point sets for 3d classification and segmentation. In CVPR, 2017. 3\n\nContinuous and orientation-preserving correspondences via functional maps. Jing Ren, Adrien Poulenard, Peter Wonka, Maks Ovsjanikov, SIGGRAPH Asia. Jing Ren, Adrien Poulenard, Peter Wonka, and Maks Ovs- janikov. Continuous and orientation-preserving correspon- dences via functional maps. In SIGGRAPH Asia, 2018. 2\n\nThe quadratic assignment problem: A survey and recent developments. F Rendl, H Pardalos, Wolkowicz, Proceedings of the DIMACS workshop on quadratic assignment problems. the DIMACS workshop on quadratic assignment problems16F Rendl, P Pardalos, and H Wolkowicz. The quadratic as- signment problem: A survey and recent developments. In Proceedings of the DIMACS workshop on quadratic assign- ment problems, volume 16, pages 1-42, 1994. 2\n\nA scale independent selection process for 3d object recognition in cluttered scenes. Emanuele Rodol\u00e0, Andrea Albarelli, Filippo Bergamasco, Andrea Torsello, IJCV. 1021-3Emanuele Rodol\u00e0, Andrea Albarelli, Filippo Bergamasco, and Andrea Torsello. A scale independent selection process for 3d object recognition in cluttered scenes. IJCV, 102(1- 3):129-145, 2013. 8\n\nA game-theoretic approach to deformable shape matching. Emanuele Rodola, Alex M Bronstein, Andrea Albarelli, Filippo Bergamasco, Andrea Torsello, CVPR. 6Emanuele Rodola, Alex M Bronstein, Andrea Albarelli, Fil- ippo Bergamasco, and Andrea Torsello. A game-theoretic approach to deformable shape matching. In CVPR, 2012. 6, 8\n\nDense non-rigid shape correspondence using random forests. Emanuele Rodol\u00e0, Samuel Rota Bulo, Thomas Windheuser, Matthias Vestner, Daniel Cremers, CVPR. Emanuele Rodol\u00e0, Samuel Rota Bulo, Thomas Windheuser, Matthias Vestner, and Daniel Cremers. Dense non-rigid shape correspondence using random forests. In CVPR, 2014. 3\n\nAbhishek Sharma, and Maks Ovsjanikov. Unsupervised deep learning for structured shape matching. Jean-Michel Roufosse, ICCV. Jean-Michel Roufosse, Abhishek Sharma, and Maks Ovs- janikov. Unsupervised deep learning for structured shape matching. In ICCV, 2019. 3\n\nProbabilistic subgraph matching based on convex relaxation. Christian Schellewald, Christoph Schn\u00f6rr, EMM-CVPR. Christian Schellewald and Christoph Schn\u00f6rr. Probabilistic subgraph matching based on convex relaxation. In EMM- CVPR, 2005. 2\n\nA combinatorial solution for model-based image segmentation and real-time tracking. Thomas Schoenemann, Daniel Cremers, TPAMI. 327Thomas Schoenemann and Daniel Cremers. A combinatorial solution for model-based image segmentation and real-time tracking. TPAMI, 32(7):1153-1164, 2009. 3\n\nA generalized solution of the orthogonal procrustes problem. H Peter, Sch\u00f6nemann, Psychometrika. 311Peter H Sch\u00f6nemann. A generalized solution of the orthog- onal procrustes problem. Psychometrika, 31(1):1-10, 1966. 2\n\nAs-rigid-as-possible surface modeling. Olga Sorkine, Marc Alexa, Symposium on Geometry processing. 35Olga Sorkine and Marc Alexa. As-rigid-as-possible surface modeling. In Symposium on Geometry processing, 2007. 3, 5\n\nDeformation transfer for triangle meshes. W Robert, Jovan Sumner, Popovi\u0107, ACM Transactions on graphics (TOG). 233Robert W Sumner and Jovan Popovi\u0107. Deformation transfer for triangle meshes. ACM Transactions on graphics (TOG), 23(3):399-405, 2004. 3\n\nEmbedded deformation for shape manipulation. W Robert, Johannes Sumner, Mark Schmid, Pauly, ACM Transactions on Graphics (TOG). 26312Robert W Sumner, Johannes Schmid, and Mark Pauly. Em- bedded deformation for shape manipulation. ACM Transac- tions on Graphics (TOG), 26(3):80, 2007. 3, 4, 12\n\nStudy of lagrangean decomposition and dual ascent solvers for graph matching. Paul Swoboda, Carsten Rother, Dagmar Hassan Abu Alhaija, Bogdan Kainmller, Savchynskyy, CVPR. Paul Swoboda, Carsten Rother, Hassan Abu Alhaija, Dagmar Kainmller, and Bogdan Savchynskyy. Study of lagrangean decomposition and dual ascent solvers for graph matching. In CVPR, 2017. 2\n\nA survey on shape correspondence. Hao Oliver Van Kaick, Ghassan Zhang, Daniel Hamarneh, Cohen-Or, Computer Graphics Forum. 30Oliver Van Kaick, Hao Zhang, Ghassan Hamarneh, and Daniel Cohen-Or. A survey on shape correspondence. In Computer Graphics Forum, volume 30, pages 1681-1707.\n\n. Wiley Online Library, Wiley Online Library, 2011. 2\n\nKimmel, and Daniel Cremers. Efficient deformable shape correspondence via kernel matching. Matthias Vestner, Zorah L\u00e4hner, Amit Boyarski, 3Or Litany, Ron Slossberg, Tal Remez, Emanuele Rodola, Alex Bronstein, Michael Bronstein, RonMatthias Vestner, Zorah L\u00e4hner, Amit Boyarski, Or Litany, Ron Slossberg, Tal Remez, Emanuele Rodola, Alex Bron- stein, Michael Bronstein, Ron Kimmel, and Daniel Cre- mers. Efficient deformable shape correspondence via kernel matching. In 3DV, 2017. 3\n\nProduct manifold filter: Non-rigid shape correspondence via kernel density estimation in the product space. Matthias Vestner, Roee Litman, Emanuele Rodol\u00e0, Alex Bronstein, Daniel Cremers, CVPR. 6Matthias Vestner, Roee Litman, Emanuele Rodol\u00e0, Alex Bronstein, and Daniel Cremers. Product manifold filter: Non-rigid shape correspondence via kernel density estima- tion in the product space. In CVPR, 2017. 3, 6, 8\n\nModeling disjunctive constraints with a logarithmic number of binary variables and constraints. Pablo Juan, George L Vielma, Nemhauser, Mathematical Programming. 1281-211Juan Pablo Vielma and George L Nemhauser. Modeling disjunctive constraints with a logarithmic number of bi- nary variables and constraints. Mathematical Programming, 128(1-2):49-72, 2011. 5, 11\n\nGeometrically consistent elastic matching of 3d shapes: A linear programming solution. Thomas Windheuser, Ulrich Schlickewei, R Frank, Daniel Schmidt, Cremers, ICCV. Thomas Windheuser, Ulrich Schlickewei, Frank R Schmidt, and Daniel Cremers. Geometrically consistent elastic match- ing of 3d shapes: A linear programming solution. In ICCV, 2011. 3\n\nGo-icp: Solving 3d registration efficiently and globally optimally. Jiaolong Yang, Hongdong Li, Yunde Jia, CVPR. Jiaolong Yang, Hongdong Li, and Yunde Jia. Go-icp: Solv- ing 3d registration efficiently and globally optimally. In CVPR, 2013. 2\n\n. Feng Zhou, Fernando De La Torre, Factorized Graph Matching. TPAMI. 389Feng Zhou and Fernando De la Torre. Factorized Graph Matching. TPAMI, 38(9):1774-1789, 2016. 2\n", "annotations": {"author": "[{\"end\":134,\"start\":72},{\"end\":194,\"start\":135},{\"end\":265,\"start\":195}]", "publisher": null, "author_last_name": "[{\"end\":87,\"start\":80},{\"end\":147,\"start\":143},{\"end\":218,\"start\":210}]", "author_first_name": "[{\"end\":79,\"start\":72},{\"end\":142,\"start\":135},{\"end\":199,\"start\":195},{\"end\":209,\"start\":200}]", "author_affiliation": "[{\"end\":133,\"start\":89},{\"end\":193,\"start\":149},{\"end\":264,\"start\":220}]", "title": "[{\"end\":69,\"start\":1},{\"end\":334,\"start\":266}]", "venue": null, "abstract": "[{\"end\":1909,\"start\":374}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b46\"},\"end\":5270,\"start\":5266},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":5482,\"start\":5478},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5840,\"start\":5837},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":5920,\"start\":5916},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6248,\"start\":6244},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":6288,\"start\":6284},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":6291,\"start\":6288},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":6700,\"start\":6696},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6703,\"start\":6700},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":6706,\"start\":6703},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6710,\"start\":6708},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":7250,\"start\":7246},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":7487,\"start\":7483},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":7809,\"start\":7805},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7922,\"start\":7918},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":8019,\"start\":8015},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8022,\"start\":8019},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":8024,\"start\":8022},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":8059,\"start\":8055},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":8062,\"start\":8059},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8065,\"start\":8062},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":8339,\"start\":8336},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":9021,\"start\":9017},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9024,\"start\":9021},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":9027,\"start\":9024},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9072,\"start\":9068},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":9107,\"start\":9104},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":9238,\"start\":9234},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9601,\"start\":9597},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":10086,\"start\":10082},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":10089,\"start\":10086},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":10098,\"start\":10094},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":10163,\"start\":10159},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":10200,\"start\":10196},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":10362,\"start\":10358},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":11046,\"start\":11042},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11084,\"start\":11080},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":11152,\"start\":11148},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":11155,\"start\":11152},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":11179,\"start\":11175},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":11225,\"start\":11221},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":11483,\"start\":11480},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":11687,\"start\":11683},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13759,\"start\":13756},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":14400,\"start\":14396},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":14403,\"start\":14400},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":14405,\"start\":14403},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":14408,\"start\":14405},{\"end\":14615,\"start\":14607},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":16287,\"start\":16283},{\"end\":19539,\"start\":19536},{\"end\":19547,\"start\":19544},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":21342,\"start\":21338},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":23109,\"start\":23105},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":23240,\"start\":23236},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":24470,\"start\":24466},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":24546,\"start\":24542},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":24593,\"start\":24589},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":24665,\"start\":24661},{\"end\":24946,\"start\":24931},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":25009,\"start\":25005},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":25065,\"start\":25062},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":25764,\"start\":25760},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":26469,\"start\":26466},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":27202,\"start\":27198},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":27384,\"start\":27380},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":27592,\"start\":27588},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":27632,\"start\":27628},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":27950,\"start\":27947},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":28009,\"start\":28005},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28055,\"start\":28052},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":28089,\"start\":28086},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":28476,\"start\":28472},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":29233,\"start\":29230},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":30968,\"start\":30965},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":31881,\"start\":31877},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":31933,\"start\":31929},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":33144,\"start\":33140},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":37584,\"start\":37580},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":37721,\"start\":37717},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":37730,\"start\":37726},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":38162,\"start\":38158},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":39170,\"start\":39166},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":40019,\"start\":40015},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":40155,\"start\":40151},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":40288,\"start\":40285},{\"end\":40858,\"start\":40855},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":41504,\"start\":41500},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":43431,\"start\":43428}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":43946,\"start\":43804},{\"attributes\":{\"id\":\"fig_1\"},\"end\":44394,\"start\":43947},{\"attributes\":{\"id\":\"fig_2\"},\"end\":44484,\"start\":44395},{\"attributes\":{\"id\":\"fig_3\"},\"end\":44741,\"start\":44485},{\"attributes\":{\"id\":\"fig_5\"},\"end\":44849,\"start\":44742}]", "paragraph": "[{\"end\":2374,\"start\":1925},{\"end\":2719,\"start\":2376},{\"end\":4219,\"start\":2747},{\"end\":4429,\"start\":4221},{\"end\":4996,\"start\":4431},{\"end\":5339,\"start\":5026},{\"end\":6292,\"start\":5341},{\"end\":6604,\"start\":6294},{\"end\":7312,\"start\":6606},{\"end\":8784,\"start\":7314},{\"end\":9592,\"start\":8786},{\"end\":9939,\"start\":9594},{\"end\":10353,\"start\":9941},{\"end\":10919,\"start\":10355},{\"end\":11847,\"start\":10921},{\"end\":13012,\"start\":11849},{\"end\":13429,\"start\":13041},{\"end\":14054,\"start\":13431},{\"end\":14488,\"start\":14086},{\"end\":14874,\"start\":14490},{\"end\":15221,\"start\":14922},{\"end\":15328,\"start\":15223},{\"end\":15742,\"start\":15410},{\"end\":16686,\"start\":15786},{\"end\":17104,\"start\":16688},{\"end\":17322,\"start\":17106},{\"end\":18061,\"start\":17350},{\"end\":18624,\"start\":18063},{\"end\":18937,\"start\":18670},{\"end\":19248,\"start\":18939},{\"end\":19354,\"start\":19303},{\"end\":19428,\"start\":19393},{\"end\":20522,\"start\":19470},{\"end\":20806,\"start\":20524},{\"end\":21042,\"start\":20808},{\"end\":21512,\"start\":21097},{\"end\":21647,\"start\":21561},{\"end\":21913,\"start\":21705},{\"end\":22216,\"start\":21978},{\"end\":22356,\"start\":22218},{\"end\":22901,\"start\":22490},{\"end\":23484,\"start\":22903},{\"end\":23845,\"start\":23486},{\"end\":24262,\"start\":23861},{\"end\":25186,\"start\":24288},{\"end\":25991,\"start\":25188},{\"end\":26178,\"start\":26022},{\"end\":26950,\"start\":26218},{\"end\":27315,\"start\":26975},{\"end\":27853,\"start\":27317},{\"end\":29350,\"start\":27855},{\"end\":29532,\"start\":29386},{\"end\":29930,\"start\":29534},{\"end\":30415,\"start\":29967},{\"end\":30882,\"start\":30454},{\"end\":31540,\"start\":30884},{\"end\":32310,\"start\":31542},{\"end\":32691,\"start\":32312},{\"end\":33536,\"start\":32720},{\"end\":33992,\"start\":33538},{\"end\":34332,\"start\":33994},{\"end\":35839,\"start\":34347},{\"end\":36578,\"start\":35899},{\"end\":37348,\"start\":36580},{\"end\":37880,\"start\":37384},{\"end\":39907,\"start\":37910},{\"end\":40245,\"start\":39945},{\"end\":41605,\"start\":40247},{\"end\":41746,\"start\":41607},{\"end\":42471,\"start\":41748},{\"end\":42944,\"start\":42473},{\"end\":43803,\"start\":42976}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":2746,\"start\":2720},{\"attributes\":{\"id\":\"formula_1\"},\"end\":14921,\"start\":14875},{\"attributes\":{\"id\":\"formula_2\"},\"end\":15409,\"start\":15329},{\"attributes\":{\"id\":\"formula_3\"},\"end\":17349,\"start\":17323},{\"attributes\":{\"id\":\"formula_4\"},\"end\":18669,\"start\":18625},{\"attributes\":{\"id\":\"formula_5\"},\"end\":19302,\"start\":19249},{\"attributes\":{\"id\":\"formula_6\"},\"end\":19392,\"start\":19355},{\"attributes\":{\"id\":\"formula_7\"},\"end\":19469,\"start\":19429},{\"attributes\":{\"id\":\"formula_8\"},\"end\":21096,\"start\":21043},{\"attributes\":{\"id\":\"formula_9\"},\"end\":21560,\"start\":21513},{\"attributes\":{\"id\":\"formula_10\"},\"end\":21704,\"start\":21648},{\"attributes\":{\"id\":\"formula_11\"},\"end\":21977,\"start\":21914},{\"attributes\":{\"id\":\"formula_12\"},\"end\":22489,\"start\":22357},{\"attributes\":{\"id\":\"formula_13\"},\"end\":26217,\"start\":26179},{\"attributes\":{\"id\":\"formula_14\"},\"end\":29966,\"start\":29931},{\"attributes\":{\"id\":\"formula_15\"},\"end\":30453,\"start\":30416},{\"attributes\":{\"id\":\"formula_16\"},\"end\":37383,\"start\":37349}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1923,\"start\":1911},{\"attributes\":{\"n\":\"2.\"},\"end\":5024,\"start\":4999},{\"attributes\":{\"n\":\"3.\"},\"end\":13039,\"start\":13015},{\"attributes\":{\"n\":\"3.1.\"},\"end\":14084,\"start\":14057},{\"attributes\":{\"n\":\"3.2.\"},\"end\":15784,\"start\":15745},{\"attributes\":{\"n\":\"4.\"},\"end\":23859,\"start\":23848},{\"attributes\":{\"n\":\"4.1.\"},\"end\":24286,\"start\":24265},{\"attributes\":{\"n\":\"4.2.\"},\"end\":26020,\"start\":25994},{\"attributes\":{\"n\":\"4.3.\"},\"end\":26973,\"start\":26953},{\"attributes\":{\"n\":\"4.4.\"},\"end\":29384,\"start\":29353},{\"attributes\":{\"n\":\"5.\"},\"end\":32718,\"start\":32694},{\"attributes\":{\"n\":\"6.\"},\"end\":34345,\"start\":34335},{\"end\":35897,\"start\":35842},{\"end\":37908,\"start\":37883},{\"end\":39943,\"start\":39910},{\"end\":42974,\"start\":42947},{\"end\":43815,\"start\":43805},{\"end\":43968,\"start\":43948},{\"end\":44406,\"start\":44396},{\"end\":44497,\"start\":44486},{\"end\":44754,\"start\":44743}]", "table": null, "figure_caption": "[{\"end\":43946,\"start\":43817},{\"end\":44394,\"start\":43971},{\"end\":44484,\"start\":44408},{\"end\":44741,\"start\":44500},{\"end\":44849,\"start\":44757}]", "figure_ref": "[{\"end\":8606,\"start\":8600},{\"end\":15484,\"start\":15478},{\"end\":16931,\"start\":16923},{\"end\":17206,\"start\":17200},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":23622,\"start\":23616},{\"end\":25197,\"start\":25191},{\"end\":25290,\"start\":25284},{\"end\":26635,\"start\":26622},{\"end\":26941,\"start\":26935},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":27864,\"start\":27858},{\"end\":29127,\"start\":29119},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":30692,\"start\":30685},{\"end\":31435,\"start\":31429},{\"end\":31652,\"start\":31646},{\"end\":32195,\"start\":32181},{\"end\":33924,\"start\":33918},{\"end\":34562,\"start\":34556},{\"end\":34736,\"start\":34728},{\"end\":35793,\"start\":35787},{\"end\":38439,\"start\":38432},{\"end\":40076,\"start\":40067},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":42986,\"start\":42979},{\"end\":43241,\"start\":43234},{\"end\":43325,\"start\":43316}]", "bib_author_first_name": "[{\"end\":45521,\"start\":45513},{\"end\":45539,\"start\":45532},{\"end\":45558,\"start\":45552},{\"end\":45576,\"start\":45567},{\"end\":45587,\"start\":45584},{\"end\":45602,\"start\":45597},{\"end\":46164,\"start\":46163},{\"end\":46183,\"start\":46174},{\"end\":46492,\"start\":46485},{\"end\":46503,\"start\":46502},{\"end\":46516,\"start\":46511},{\"end\":46532,\"start\":46526},{\"end\":46797,\"start\":46790},{\"end\":46816,\"start\":46807},{\"end\":46834,\"start\":46827},{\"end\":47044,\"start\":47043},{\"end\":47057,\"start\":47051},{\"end\":47412,\"start\":47404},{\"end\":47425,\"start\":47419},{\"end\":47441,\"start\":47434},{\"end\":47456,\"start\":47449},{\"end\":47458,\"start\":47457},{\"end\":47662,\"start\":47653},{\"end\":47681,\"start\":47674},{\"end\":47696,\"start\":47693},{\"end\":47985,\"start\":47979},{\"end\":47999,\"start\":47992},{\"end\":48215,\"start\":48210},{\"end\":48230,\"start\":48226},{\"end\":48245,\"start\":48239},{\"end\":48258,\"start\":48255},{\"end\":48593,\"start\":48586},{\"end\":48606,\"start\":48599},{\"end\":48618,\"start\":48614},{\"end\":48942,\"start\":48937},{\"end\":48954,\"start\":48948},{\"end\":48967,\"start\":48962},{\"end\":49245,\"start\":49244},{\"end\":49445,\"start\":49438},{\"end\":49460,\"start\":49454},{\"end\":49476,\"start\":49471},{\"end\":49677,\"start\":49669},{\"end\":49694,\"start\":49687},{\"end\":49704,\"start\":49703},{\"end\":49721,\"start\":49720},{\"end\":49736,\"start\":49729},{\"end\":50050,\"start\":50045},{\"end\":50061,\"start\":50059},{\"end\":50078,\"start\":50070},{\"end\":50091,\"start\":50087},{\"end\":50093,\"start\":50092},{\"end\":50108,\"start\":50105},{\"end\":50336,\"start\":50332},{\"end\":50348,\"start\":50344},{\"end\":50555,\"start\":50547},{\"end\":50557,\"start\":50556},{\"end\":50568,\"start\":50563},{\"end\":50583,\"start\":50577},{\"end\":50872,\"start\":50869},{\"end\":50890,\"start\":50884},{\"end\":51172,\"start\":51167},{\"end\":51189,\"start\":51181},{\"end\":51199,\"start\":51198},{\"end\":51222,\"start\":51216},{\"end\":51474,\"start\":51469},{\"end\":51674,\"start\":51672},{\"end\":51691,\"start\":51683},{\"end\":51703,\"start\":51699},{\"end\":51719,\"start\":51712},{\"end\":51984,\"start\":51979},{\"end\":52149,\"start\":52144},{\"end\":52162,\"start\":52158},{\"end\":52195,\"start\":52171},{\"end\":52222,\"start\":52217},{\"end\":52235,\"start\":52230},{\"end\":52240,\"start\":52236},{\"end\":52590,\"start\":52585},{\"end\":52609,\"start\":52605},{\"end\":52621,\"start\":52615},{\"end\":52636,\"start\":52631},{\"end\":52962,\"start\":52956},{\"end\":52974,\"start\":52970},{\"end\":52988,\"start\":52980},{\"end\":53005,\"start\":52997},{\"end\":53019,\"start\":53014},{\"end\":53031,\"start\":53027},{\"end\":53365,\"start\":53358},{\"end\":53377,\"start\":53372},{\"end\":53393,\"start\":53388},{\"end\":53411,\"start\":53405},{\"end\":53637,\"start\":53632},{\"end\":53930,\"start\":53924},{\"end\":53946,\"start\":53942},{\"end\":54145,\"start\":54141},{\"end\":54161,\"start\":54154},{\"end\":54174,\"start\":54168},{\"end\":54410,\"start\":54406},{\"end\":54429,\"start\":54423},{\"end\":54446,\"start\":54440},{\"end\":54462,\"start\":54456},{\"end\":54481,\"start\":54473},{\"end\":54822,\"start\":54819},{\"end\":54844,\"start\":54837},{\"end\":54857,\"start\":54849},{\"end\":54859,\"start\":54858},{\"end\":55110,\"start\":55106},{\"end\":55122,\"start\":55116},{\"end\":55139,\"start\":55134},{\"end\":55151,\"start\":55147},{\"end\":55416,\"start\":55415},{\"end\":55425,\"start\":55424},{\"end\":55877,\"start\":55869},{\"end\":55892,\"start\":55886},{\"end\":55911,\"start\":55904},{\"end\":55930,\"start\":55924},{\"end\":56212,\"start\":56204},{\"end\":56225,\"start\":56221},{\"end\":56227,\"start\":56226},{\"end\":56245,\"start\":56239},{\"end\":56264,\"start\":56257},{\"end\":56283,\"start\":56277},{\"end\":56541,\"start\":56533},{\"end\":56556,\"start\":56550},{\"end\":56561,\"start\":56557},{\"end\":56574,\"start\":56568},{\"end\":56595,\"start\":56587},{\"end\":56611,\"start\":56605},{\"end\":56903,\"start\":56892},{\"end\":57127,\"start\":57118},{\"end\":57150,\"start\":57141},{\"end\":57388,\"start\":57382},{\"end\":57408,\"start\":57402},{\"end\":57646,\"start\":57645},{\"end\":57846,\"start\":57842},{\"end\":57860,\"start\":57856},{\"end\":58064,\"start\":58063},{\"end\":58078,\"start\":58073},{\"end\":58318,\"start\":58317},{\"end\":58335,\"start\":58327},{\"end\":58348,\"start\":58344},{\"end\":58648,\"start\":58644},{\"end\":58665,\"start\":58658},{\"end\":58680,\"start\":58674},{\"end\":58707,\"start\":58701},{\"end\":58963,\"start\":58960},{\"end\":58989,\"start\":58982},{\"end\":59003,\"start\":58997},{\"end\":59364,\"start\":59356},{\"end\":59379,\"start\":59374},{\"end\":59392,\"start\":59388},{\"end\":59864,\"start\":59856},{\"end\":59878,\"start\":59874},{\"end\":59895,\"start\":59887},{\"end\":59908,\"start\":59904},{\"end\":59926,\"start\":59920},{\"end\":60262,\"start\":60257},{\"end\":60275,\"start\":60269},{\"end\":60277,\"start\":60276},{\"end\":60619,\"start\":60613},{\"end\":60638,\"start\":60632},{\"end\":60653,\"start\":60652},{\"end\":60667,\"start\":60661},{\"end\":60951,\"start\":60943},{\"end\":60966,\"start\":60958},{\"end\":60976,\"start\":60971},{\"end\":61125,\"start\":61121},{\"end\":61140,\"start\":61132}]", "bib_author_last_name": "[{\"end\":45530,\"start\":45522},{\"end\":45550,\"start\":45540},{\"end\":45565,\"start\":45559},{\"end\":45582,\"start\":45577},{\"end\":45595,\"start\":45588},{\"end\":45608,\"start\":45603},{\"end\":45859,\"start\":45850},{\"end\":46003,\"start\":45994},{\"end\":46172,\"start\":46165},{\"end\":46191,\"start\":46184},{\"end\":46201,\"start\":46193},{\"end\":46500,\"start\":46493},{\"end\":46509,\"start\":46504},{\"end\":46524,\"start\":46517},{\"end\":46541,\"start\":46533},{\"end\":46550,\"start\":46543},{\"end\":46805,\"start\":46798},{\"end\":46825,\"start\":46817},{\"end\":46842,\"start\":46835},{\"end\":47049,\"start\":47045},{\"end\":47062,\"start\":47058},{\"end\":47069,\"start\":47064},{\"end\":47417,\"start\":47413},{\"end\":47432,\"start\":47426},{\"end\":47447,\"start\":47442},{\"end\":47464,\"start\":47459},{\"end\":47672,\"start\":47663},{\"end\":47691,\"start\":47682},{\"end\":47703,\"start\":47697},{\"end\":47990,\"start\":47986},{\"end\":48006,\"start\":48000},{\"end\":48224,\"start\":48216},{\"end\":48237,\"start\":48231},{\"end\":48253,\"start\":48246},{\"end\":48263,\"start\":48259},{\"end\":48597,\"start\":48594},{\"end\":48612,\"start\":48607},{\"end\":48626,\"start\":48619},{\"end\":48946,\"start\":48943},{\"end\":48960,\"start\":48955},{\"end\":48974,\"start\":48968},{\"end\":49251,\"start\":49246},{\"end\":49265,\"start\":49253},{\"end\":49452,\"start\":49446},{\"end\":49469,\"start\":49461},{\"end\":49487,\"start\":49477},{\"end\":49685,\"start\":49678},{\"end\":49701,\"start\":49695},{\"end\":49713,\"start\":49705},{\"end\":49718,\"start\":49715},{\"end\":49727,\"start\":49722},{\"end\":49744,\"start\":49737},{\"end\":49751,\"start\":49746},{\"end\":50057,\"start\":50051},{\"end\":50068,\"start\":50062},{\"end\":50085,\"start\":50079},{\"end\":50103,\"start\":50094},{\"end\":50115,\"start\":50109},{\"end\":50342,\"start\":50337},{\"end\":50359,\"start\":50349},{\"end\":50561,\"start\":50558},{\"end\":50575,\"start\":50569},{\"end\":50594,\"start\":50584},{\"end\":50882,\"start\":50873},{\"end\":50896,\"start\":50891},{\"end\":51179,\"start\":51173},{\"end\":51196,\"start\":51190},{\"end\":51205,\"start\":51200},{\"end\":51214,\"start\":51207},{\"end\":51242,\"start\":51223},{\"end\":51251,\"start\":51244},{\"end\":51488,\"start\":51475},{\"end\":51498,\"start\":51490},{\"end\":51681,\"start\":51675},{\"end\":51697,\"start\":51692},{\"end\":51710,\"start\":51704},{\"end\":51729,\"start\":51720},{\"end\":51740,\"start\":51731},{\"end\":51992,\"start\":51985},{\"end\":52156,\"start\":52150},{\"end\":52169,\"start\":52163},{\"end\":52215,\"start\":52196},{\"end\":52228,\"start\":52223},{\"end\":52245,\"start\":52241},{\"end\":52254,\"start\":52247},{\"end\":52603,\"start\":52591},{\"end\":52613,\"start\":52610},{\"end\":52629,\"start\":52622},{\"end\":52645,\"start\":52637},{\"end\":52653,\"start\":52647},{\"end\":52968,\"start\":52963},{\"end\":52978,\"start\":52975},{\"end\":52995,\"start\":52989},{\"end\":53012,\"start\":53006},{\"end\":53025,\"start\":53020},{\"end\":53042,\"start\":53032},{\"end\":53370,\"start\":53366},{\"end\":53386,\"start\":53378},{\"end\":53403,\"start\":53394},{\"end\":53417,\"start\":53412},{\"end\":53645,\"start\":53638},{\"end\":53940,\"start\":53931},{\"end\":53951,\"start\":53947},{\"end\":54152,\"start\":54146},{\"end\":54166,\"start\":54162},{\"end\":54184,\"start\":54175},{\"end\":54421,\"start\":54411},{\"end\":54438,\"start\":54430},{\"end\":54454,\"start\":54447},{\"end\":54471,\"start\":54463},{\"end\":54488,\"start\":54482},{\"end\":54835,\"start\":54823},{\"end\":54847,\"start\":54845},{\"end\":54862,\"start\":54860},{\"end\":54870,\"start\":54864},{\"end\":55114,\"start\":55111},{\"end\":55132,\"start\":55123},{\"end\":55145,\"start\":55140},{\"end\":55162,\"start\":55152},{\"end\":55422,\"start\":55417},{\"end\":55434,\"start\":55426},{\"end\":55445,\"start\":55436},{\"end\":55884,\"start\":55878},{\"end\":55902,\"start\":55893},{\"end\":55922,\"start\":55912},{\"end\":55939,\"start\":55931},{\"end\":56219,\"start\":56213},{\"end\":56237,\"start\":56228},{\"end\":56255,\"start\":56246},{\"end\":56275,\"start\":56265},{\"end\":56292,\"start\":56284},{\"end\":56548,\"start\":56542},{\"end\":56566,\"start\":56562},{\"end\":56585,\"start\":56575},{\"end\":56603,\"start\":56596},{\"end\":56619,\"start\":56612},{\"end\":56912,\"start\":56904},{\"end\":57139,\"start\":57128},{\"end\":57158,\"start\":57151},{\"end\":57400,\"start\":57389},{\"end\":57416,\"start\":57409},{\"end\":57652,\"start\":57647},{\"end\":57664,\"start\":57654},{\"end\":57854,\"start\":57847},{\"end\":57866,\"start\":57861},{\"end\":58071,\"start\":58065},{\"end\":58085,\"start\":58079},{\"end\":58094,\"start\":58087},{\"end\":58325,\"start\":58319},{\"end\":58342,\"start\":58336},{\"end\":58355,\"start\":58349},{\"end\":58362,\"start\":58357},{\"end\":58656,\"start\":58649},{\"end\":58672,\"start\":58666},{\"end\":58699,\"start\":58681},{\"end\":58717,\"start\":58708},{\"end\":58730,\"start\":58719},{\"end\":58980,\"start\":58964},{\"end\":58995,\"start\":58990},{\"end\":59012,\"start\":59004},{\"end\":59022,\"start\":59014},{\"end\":59232,\"start\":59212},{\"end\":59372,\"start\":59365},{\"end\":59386,\"start\":59380},{\"end\":59401,\"start\":59393},{\"end\":59872,\"start\":59865},{\"end\":59885,\"start\":59879},{\"end\":59902,\"start\":59896},{\"end\":59918,\"start\":59909},{\"end\":59934,\"start\":59927},{\"end\":60267,\"start\":60263},{\"end\":60284,\"start\":60278},{\"end\":60295,\"start\":60286},{\"end\":60630,\"start\":60620},{\"end\":60650,\"start\":60639},{\"end\":60659,\"start\":60654},{\"end\":60675,\"start\":60668},{\"end\":60684,\"start\":60677},{\"end\":60956,\"start\":60952},{\"end\":60969,\"start\":60967},{\"end\":60980,\"start\":60977},{\"end\":61130,\"start\":61126},{\"end\":61152,\"start\":61141}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":3423879},\"end\":45797,\"start\":45464},{\"attributes\":{\"id\":\"b1\"},\"end\":45967,\"start\":45799},{\"attributes\":{\"id\":\"b2\"},\"end\":46087,\"start\":45969},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":121825309},\"end\":46417,\"start\":46089},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":1793113},\"end\":46710,\"start\":46419},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":39202667},\"end\":47002,\"start\":46712},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":21874346},\"end\":47346,\"start\":47004},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":206592437},\"end\":47611,\"start\":47348},{\"attributes\":{\"id\":\"b8\"},\"end\":47924,\"start\":47613},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":8327112},\"end\":48122,\"start\":47926},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2424804},\"end\":48519,\"start\":48124},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":9595642},\"end\":48855,\"start\":48521},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":25812349},\"end\":49191,\"start\":48857},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":1835501},\"end\":49381,\"start\":49193},{\"attributes\":{\"id\":\"b14\"},\"end\":49606,\"start\":49383},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":195833532},\"end\":49990,\"start\":49608},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":198903223},\"end\":50270,\"start\":49992},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":1864510},\"end\":50543,\"start\":50272},{\"attributes\":{\"id\":\"b18\"},\"end\":50787,\"start\":50545},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":119323620},\"end\":51102,\"start\":50789},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":12142076},\"end\":51429,\"start\":51104},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":3524067},\"end\":51594,\"start\":51431},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":4215682},\"end\":51918,\"start\":51596},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":15458635},\"end\":52095,\"start\":51920},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":15157606},\"end\":52531,\"start\":52097},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":17525937},\"end\":52889,\"start\":52533},{\"attributes\":{\"doi\":\"2019. 3\",\"id\":\"b26\",\"matched_paper_id\":118705636},\"end\":53297,\"start\":52891},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":3515469},\"end\":53571,\"start\":53299},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":15996572},\"end\":53876,\"start\":53573},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":10809031},\"end\":54078,\"start\":53878},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":5450032},\"end\":54337,\"start\":54080},{\"attributes\":{\"id\":\"b31\"},\"end\":54739,\"start\":54339},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":5115938},\"end\":55029,\"start\":54741},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":48353590},\"end\":55345,\"start\":55031},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":9547090},\"end\":55782,\"start\":55347},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":6680815},\"end\":56146,\"start\":55784},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":1095952},\"end\":56472,\"start\":56148},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":14992341},\"end\":56794,\"start\":56474},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":54463695},\"end\":57056,\"start\":56796},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":14743997},\"end\":57296,\"start\":57058},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":11447682},\"end\":57582,\"start\":57298},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":121676935},\"end\":57801,\"start\":57584},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":11952089},\"end\":58019,\"start\":57803},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":10701255},\"end\":58270,\"start\":58021},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":35682459},\"end\":58564,\"start\":58272},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":1023903},\"end\":58924,\"start\":58566},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":6068875},\"end\":59208,\"start\":58926},{\"attributes\":{\"id\":\"b47\"},\"end\":59263,\"start\":59210},{\"attributes\":{\"id\":\"b48\"},\"end\":59746,\"start\":59265},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":10436114},\"end\":60159,\"start\":59748},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":13267583},\"end\":60524,\"start\":60161},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":2519461},\"end\":60873,\"start\":60526},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":7421244},\"end\":61117,\"start\":60875},{\"attributes\":{\"id\":\"b53\"},\"end\":61285,\"start\":61119}]", "bib_title": "[{\"end\":45511,\"start\":45464},{\"end\":46161,\"start\":46089},{\"end\":46483,\"start\":46419},{\"end\":46788,\"start\":46712},{\"end\":47041,\"start\":47004},{\"end\":47402,\"start\":47348},{\"end\":47977,\"start\":47926},{\"end\":48208,\"start\":48124},{\"end\":48584,\"start\":48521},{\"end\":48935,\"start\":48857},{\"end\":49242,\"start\":49193},{\"end\":49667,\"start\":49608},{\"end\":50043,\"start\":49992},{\"end\":50330,\"start\":50272},{\"end\":50867,\"start\":50789},{\"end\":51165,\"start\":51104},{\"end\":51467,\"start\":51431},{\"end\":51670,\"start\":51596},{\"end\":51977,\"start\":51920},{\"end\":52142,\"start\":52097},{\"end\":52583,\"start\":52533},{\"end\":52954,\"start\":52891},{\"end\":53356,\"start\":53299},{\"end\":53630,\"start\":53573},{\"end\":53922,\"start\":53878},{\"end\":54139,\"start\":54080},{\"end\":54404,\"start\":54339},{\"end\":54817,\"start\":54741},{\"end\":55104,\"start\":55031},{\"end\":55413,\"start\":55347},{\"end\":55867,\"start\":55784},{\"end\":56202,\"start\":56148},{\"end\":56531,\"start\":56474},{\"end\":56890,\"start\":56796},{\"end\":57116,\"start\":57058},{\"end\":57380,\"start\":57298},{\"end\":57643,\"start\":57584},{\"end\":57840,\"start\":57803},{\"end\":58061,\"start\":58021},{\"end\":58315,\"start\":58272},{\"end\":58642,\"start\":58566},{\"end\":58958,\"start\":58926},{\"end\":59854,\"start\":59748},{\"end\":60255,\"start\":60161},{\"end\":60611,\"start\":60526},{\"end\":60941,\"start\":60875}]", "bib_author": "[{\"end\":45532,\"start\":45513},{\"end\":45552,\"start\":45532},{\"end\":45567,\"start\":45552},{\"end\":45584,\"start\":45567},{\"end\":45597,\"start\":45584},{\"end\":45610,\"start\":45597},{\"end\":45861,\"start\":45850},{\"end\":46005,\"start\":45994},{\"end\":46174,\"start\":46163},{\"end\":46193,\"start\":46174},{\"end\":46203,\"start\":46193},{\"end\":46502,\"start\":46485},{\"end\":46511,\"start\":46502},{\"end\":46526,\"start\":46511},{\"end\":46543,\"start\":46526},{\"end\":46552,\"start\":46543},{\"end\":46807,\"start\":46790},{\"end\":46827,\"start\":46807},{\"end\":46844,\"start\":46827},{\"end\":47051,\"start\":47043},{\"end\":47064,\"start\":47051},{\"end\":47071,\"start\":47064},{\"end\":47419,\"start\":47404},{\"end\":47434,\"start\":47419},{\"end\":47449,\"start\":47434},{\"end\":47466,\"start\":47449},{\"end\":47674,\"start\":47653},{\"end\":47693,\"start\":47674},{\"end\":47705,\"start\":47693},{\"end\":47992,\"start\":47979},{\"end\":48008,\"start\":47992},{\"end\":48226,\"start\":48210},{\"end\":48239,\"start\":48226},{\"end\":48255,\"start\":48239},{\"end\":48265,\"start\":48255},{\"end\":48599,\"start\":48586},{\"end\":48614,\"start\":48599},{\"end\":48628,\"start\":48614},{\"end\":48948,\"start\":48937},{\"end\":48962,\"start\":48948},{\"end\":48976,\"start\":48962},{\"end\":49253,\"start\":49244},{\"end\":49267,\"start\":49253},{\"end\":49454,\"start\":49438},{\"end\":49471,\"start\":49454},{\"end\":49489,\"start\":49471},{\"end\":49687,\"start\":49669},{\"end\":49703,\"start\":49687},{\"end\":49715,\"start\":49703},{\"end\":49720,\"start\":49715},{\"end\":49729,\"start\":49720},{\"end\":49746,\"start\":49729},{\"end\":49753,\"start\":49746},{\"end\":50059,\"start\":50045},{\"end\":50070,\"start\":50059},{\"end\":50087,\"start\":50070},{\"end\":50105,\"start\":50087},{\"end\":50117,\"start\":50105},{\"end\":50344,\"start\":50332},{\"end\":50361,\"start\":50344},{\"end\":50563,\"start\":50547},{\"end\":50577,\"start\":50563},{\"end\":50596,\"start\":50577},{\"end\":50884,\"start\":50869},{\"end\":50898,\"start\":50884},{\"end\":51181,\"start\":51167},{\"end\":51198,\"start\":51181},{\"end\":51207,\"start\":51198},{\"end\":51216,\"start\":51207},{\"end\":51244,\"start\":51216},{\"end\":51253,\"start\":51244},{\"end\":51490,\"start\":51469},{\"end\":51500,\"start\":51490},{\"end\":51683,\"start\":51672},{\"end\":51699,\"start\":51683},{\"end\":51712,\"start\":51699},{\"end\":51731,\"start\":51712},{\"end\":51742,\"start\":51731},{\"end\":51994,\"start\":51979},{\"end\":52158,\"start\":52144},{\"end\":52171,\"start\":52158},{\"end\":52217,\"start\":52171},{\"end\":52230,\"start\":52217},{\"end\":52247,\"start\":52230},{\"end\":52256,\"start\":52247},{\"end\":52605,\"start\":52585},{\"end\":52615,\"start\":52605},{\"end\":52631,\"start\":52615},{\"end\":52647,\"start\":52631},{\"end\":52655,\"start\":52647},{\"end\":52970,\"start\":52956},{\"end\":52980,\"start\":52970},{\"end\":52997,\"start\":52980},{\"end\":53014,\"start\":52997},{\"end\":53027,\"start\":53014},{\"end\":53044,\"start\":53027},{\"end\":53372,\"start\":53358},{\"end\":53388,\"start\":53372},{\"end\":53405,\"start\":53388},{\"end\":53419,\"start\":53405},{\"end\":53647,\"start\":53632},{\"end\":53942,\"start\":53924},{\"end\":53953,\"start\":53942},{\"end\":54154,\"start\":54141},{\"end\":54168,\"start\":54154},{\"end\":54186,\"start\":54168},{\"end\":54423,\"start\":54406},{\"end\":54440,\"start\":54423},{\"end\":54456,\"start\":54440},{\"end\":54473,\"start\":54456},{\"end\":54490,\"start\":54473},{\"end\":54837,\"start\":54819},{\"end\":54849,\"start\":54837},{\"end\":54864,\"start\":54849},{\"end\":54872,\"start\":54864},{\"end\":55116,\"start\":55106},{\"end\":55134,\"start\":55116},{\"end\":55147,\"start\":55134},{\"end\":55164,\"start\":55147},{\"end\":55424,\"start\":55415},{\"end\":55436,\"start\":55424},{\"end\":55447,\"start\":55436},{\"end\":55886,\"start\":55869},{\"end\":55904,\"start\":55886},{\"end\":55924,\"start\":55904},{\"end\":55941,\"start\":55924},{\"end\":56221,\"start\":56204},{\"end\":56239,\"start\":56221},{\"end\":56257,\"start\":56239},{\"end\":56277,\"start\":56257},{\"end\":56294,\"start\":56277},{\"end\":56550,\"start\":56533},{\"end\":56568,\"start\":56550},{\"end\":56587,\"start\":56568},{\"end\":56605,\"start\":56587},{\"end\":56621,\"start\":56605},{\"end\":56914,\"start\":56892},{\"end\":57141,\"start\":57118},{\"end\":57160,\"start\":57141},{\"end\":57402,\"start\":57382},{\"end\":57418,\"start\":57402},{\"end\":57654,\"start\":57645},{\"end\":57666,\"start\":57654},{\"end\":57856,\"start\":57842},{\"end\":57868,\"start\":57856},{\"end\":58073,\"start\":58063},{\"end\":58087,\"start\":58073},{\"end\":58096,\"start\":58087},{\"end\":58327,\"start\":58317},{\"end\":58344,\"start\":58327},{\"end\":58357,\"start\":58344},{\"end\":58364,\"start\":58357},{\"end\":58658,\"start\":58644},{\"end\":58674,\"start\":58658},{\"end\":58701,\"start\":58674},{\"end\":58719,\"start\":58701},{\"end\":58732,\"start\":58719},{\"end\":58982,\"start\":58960},{\"end\":58997,\"start\":58982},{\"end\":59014,\"start\":58997},{\"end\":59024,\"start\":59014},{\"end\":59234,\"start\":59212},{\"end\":59374,\"start\":59356},{\"end\":59388,\"start\":59374},{\"end\":59403,\"start\":59388},{\"end\":59874,\"start\":59856},{\"end\":59887,\"start\":59874},{\"end\":59904,\"start\":59887},{\"end\":59920,\"start\":59904},{\"end\":59936,\"start\":59920},{\"end\":60269,\"start\":60257},{\"end\":60286,\"start\":60269},{\"end\":60297,\"start\":60286},{\"end\":60632,\"start\":60613},{\"end\":60652,\"start\":60632},{\"end\":60661,\"start\":60652},{\"end\":60677,\"start\":60661},{\"end\":60686,\"start\":60677},{\"end\":60958,\"start\":60943},{\"end\":60971,\"start\":60958},{\"end\":60982,\"start\":60971},{\"end\":61132,\"start\":61121},{\"end\":61154,\"start\":61132}]", "bib_venue": "[{\"end\":55568,\"start\":55516},{\"end\":45618,\"start\":45610},{\"end\":45848,\"start\":45799},{\"end\":45992,\"start\":45969},{\"end\":46237,\"start\":46203},{\"end\":46556,\"start\":46552},{\"end\":46848,\"start\":46844},{\"end\":47126,\"start\":47071},{\"end\":47470,\"start\":47466},{\"end\":47651,\"start\":47613},{\"end\":48012,\"start\":48008},{\"end\":48304,\"start\":48265},{\"end\":48674,\"start\":48628},{\"end\":49010,\"start\":48976},{\"end\":49272,\"start\":49267},{\"end\":49436,\"start\":49383},{\"end\":49776,\"start\":49753},{\"end\":50121,\"start\":50117},{\"end\":50384,\"start\":50361},{\"end\":50654,\"start\":50596},{\"end\":50930,\"start\":50898},{\"end\":51257,\"start\":51253},{\"end\":51504,\"start\":51500},{\"end\":51746,\"start\":51742},{\"end\":51998,\"start\":51994},{\"end\":52296,\"start\":52256},{\"end\":52689,\"start\":52655},{\"end\":53085,\"start\":53051},{\"end\":53426,\"start\":53419},{\"end\":53708,\"start\":53647},{\"end\":53958,\"start\":53953},{\"end\":54191,\"start\":54186},{\"end\":54524,\"start\":54490},{\"end\":54876,\"start\":54872},{\"end\":55177,\"start\":55164},{\"end\":55514,\"start\":55447},{\"end\":55945,\"start\":55941},{\"end\":56298,\"start\":56294},{\"end\":56625,\"start\":56621},{\"end\":56918,\"start\":56914},{\"end\":57168,\"start\":57160},{\"end\":57423,\"start\":57418},{\"end\":57679,\"start\":57666},{\"end\":57900,\"start\":57868},{\"end\":58130,\"start\":58096},{\"end\":58398,\"start\":58364},{\"end\":58736,\"start\":58732},{\"end\":59047,\"start\":59024},{\"end\":59354,\"start\":59265},{\"end\":59940,\"start\":59936},{\"end\":60321,\"start\":60297},{\"end\":60690,\"start\":60686},{\"end\":60986,\"start\":60982},{\"end\":61186,\"start\":61154}]"}}}, "year": 2023, "month": 12, "day": 17}