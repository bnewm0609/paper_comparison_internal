{"id": 52914479, "updated": "2023-09-30 15:18:08.179", "metadata": {"title": "HOLMES: Real-time APT Detection through Correlation of Suspicious Information Flows", "authors": "[{\"first\":\"Sadegh\",\"last\":\"Milajerdi\",\"middle\":[\"M.\"]},{\"first\":\"Rigel\",\"last\":\"Gjomemo\",\"middle\":[]},{\"first\":\"Birhanu\",\"last\":\"Eshete\",\"middle\":[]},{\"first\":\"R.\",\"last\":\"Sekar\",\"middle\":[]},{\"first\":\"V.\",\"last\":\"Venkatakrishnan\",\"middle\":[\"N.\"]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2018, "month": null, "day": null}, "abstract": "In this paper, we present HOLMES, a system that implements a new approach to the detection of Advanced and Persistent Threats (APTs). HOLMES is inspired by several case studies of real-world APTs that highlight some common goals of APT actors. In a nutshell, HOLMES aims to produce a detection signal that indicates the presence of a coordinated set of activities that are part of an APT campaign. One of the main challenges addressed by our approach involves developing a suite of techniques that make the detection signal robust and reliable. At a high-level, the techniques we develop effectively leverage the correlation between suspicious information flows that arise during an attacker campaign. In addition to its detection capability, HOLMES is also able to generate a high-level graph that summarizes the attacker's actions in real-time. This graph can be used by an analyst for an effective cyber response. An evaluation of our approach against some real-world APTs indicates that HOLMES can detect APT campaigns with high precision and low false alarm rate. The compact high-level graphs produced by HOLMES effectively summarizes an ongoing attack campaign and can assist real-time cyber-response operations.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1810.01594", "mag": "2962703433", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/sp/MilajerdiGESV19", "doi": "10.1109/sp.2019.00026"}}, "content": {"source": {"pdf_hash": "1a95a51b11d7fb73de9a6f5d97ec03671ee0cbd6", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1810.01594v2.pdf\"]", "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "https://ieeexplore.ieee.org/ielx7/8826229/8835208/08835390.pdf", "status": "BRONZE"}}, "grobid": {"id": "615a36ed00f2865e09f54047dd15d39cbcdb210a", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/1a95a51b11d7fb73de9a6f5d97ec03671ee0cbd6.txt", "contents": "\nHOLMES: Real-time APT Detection through Correlation of Suspicious Information Flows\n\n\nSadegh M Milajerdi \nUniversity of Illinois at Chicago \u2020 University of Michigan-Dearborn \u2021 Stony Brook University\n\n\nRigel Gjomemo \nUniversity of Illinois at Chicago \u2020 University of Michigan-Dearborn \u2021 Stony Brook University\n\n\nBirhanu Eshete birhanu@umich.edu \nUniversity of Illinois at Chicago \u2020 University of Michigan-Dearborn \u2021 Stony Brook University\n\n\nR Sekar sekar@cs.stonybrook.edu \nUniversity of Illinois at Chicago \u2020 University of Michigan-Dearborn \u2021 Stony Brook University\n\n\nV N Venkatakrishnan \nUniversity of Illinois at Chicago \u2020 University of Michigan-Dearborn \u2021 Stony Brook University\n\n\nHOLMES: Real-time APT Detection through Correlation of Suspicious Information Flows\n\nIn this paper, we present HOLMES, a system that implements a new approach to the detection of Advanced and Persistent Threats (APTs). HOLMES is inspired by several case studies of real-world APTs that highlight some common goals of APT actors. In a nutshell, HOLMES aims to produce a detection signal that indicates the presence of a coordinated set of activities that are part of an APT campaign. One of the main challenges addressed by our approach involves developing a suite of techniques that make the detection signal robust and reliable. At a high-level, the techniques we develop effectively leverage the correlation between suspicious information flows that arise during an attacker campaign. In addition to its detection capability, HOLMES is also able to generate a high-level graph that summarizes the attacker's actions in real-time. This graph can be used by an analyst for an effective cyber response. An evaluation of our approach against some real-world APTs indicates that HOLMES can detect APT campaigns with high precision and low false alarm rate. The compact high-level graphs produced by HOLMES effectively summarizes an ongoing attack campaign and can assist real-time cyber-response operations.\n\nI. INTRODUCTION\n\nIn one of the first ever detailed reports on Advanced and Persistent Threats (entitled APT1 [8]), the security firm Mandiant disclosed the goals and activities of a global APT actor. The activities included stealing of hundreds of terabytes of sensitive data (including business plans, technology blueprints, and test results) from at least 141 organizations across a diverse set of industries. They estimated the average duration of persistence of malware in the targeted organizations to be 365 days. Since then, there has been a growing list of documented APTs involving powerful actors, including nation-state actors, on the global scene.\n\nUnderstanding the motivations and operations of the APT actors plays a vital role in the challenge of addressing these threats. To further this understanding, the Mandiant report also offered an APT lifecycle model (Fig. 1), also known as the kill-chain, that allows one to gain perspective on how the APT steps collectively achieve their actors' goals. A typical APT attack consists of a successful penetration (e.g., a drive-by-download or a spear-phishing attack), reconnaissance, command and control (C&C) communication (sometimes using Remote Access Trojans (RATs)), privilege escalation (by exploiting vulnerabilities), lateral movement through the network, exfiltration of confidential information, and so on. In short, the kill-chain provides a reference to understand and map the motivations, targets, and actions of APT actors. APTs have grown in sophistication since the publication of the first Mandiant report. The details of various exploits used have varied over the years, but the high-level steps have remained mostly the same. While surveying about 300 APT reports [3], we observed that\n\n\u2022 the goal of an APT actor is either to obtain and exfiltrate highly confidential information, e.g., source code of specific proprietary technology; or to damage the victim by compromising high-integrity resources, e.g., PLCs compromised in the Stuxnet worm, and \u2022 this goal is accomplished primarily through steps that conform to the kill-chain shown in Fig. 1.\n\nExisting IDS/IPS systems in an enterprise may detect and produce alerts for suspicious events on a host. However, combining these low-level alerts to derive a high-level picture of an ongoing APT campaign remains a major challenge.\n\nState of the art. Today, alert correlation is typically performed using Security Information and Event Management (SIEM) systems such as Splunk [10], LogRhythm [7] and IBM QRadar [6]. These systems collect log events and alerts from multiple sources and correlate them. Such correlation often makes use of readily available indicators, such as timestamps for instance. These correlation methods are useful, but they often lack (a) an understanding of the complex relationships that exist between alerts and actual intrusion instances and (b) the precision needed to piece together attack steps that take place on different hosts over long periods of time (weeks, or in some cases, months). Problem Statement. The main problem tackled in this paper is to detect an ongoing APT campaign (that consists of many disparate steps across many hosts over a long period of time) in real-time and provide a high-level explanation of the attack scenario to an analyst, based on host logs and IPS alerts from the enterprise.\n\nThere are three main aspects to this problem, and they are as follows:\n\n\u2022 Alert generation: Starting from low-level event traces from hosts, we must generate alerts in an efficient manner. How do we generate alerts that attempt to factor any significant steps the attacker might be taking? Additionally, care must be taken to ensure that we do not generate a large volume of noisy alerts. \u2022 Alert correlation: The challenge here is to combine these alerts from multiple activities of the attacker into a reliable signal that indicates the presence of an ongoing APT campaign. \u2022 Attack scenario presentation: Indicators of an ongoing APT campaign needs to be communicated to a human being (a cyber-analyst). To be effective, this communication must be intuitive and needs to summarize the attack at a high level such that the analyst quickly realizes the scope and magnitude of the campaign.\n\nApproach and Contributions. We present a system called HOLMES in this paper that addresses all the above aspects. HOLMES begins with host audit data (e.g., Linux auditd or Windows ETW data) and produces a detection signal that maps out the stages of an ongoing APT campaign. At a high level, HOLMES makes novel use of the APT kill-chain as the pivotal reference in addressing the technical challenges involved in the above three aspects of APT detection. We describe our key ideas and their significance below, with a detailed technical description appearing in Section III. First, HOLMES aims to map the activities found in host logs as well as any alerts found in the enterprise directly to the kill chain. This design choice allows HOLMES to generate alerts that are semantically close to the activity steps (\"Tactics, Techniques and Procedures\" (TTPs)) of APT actors. By doing so, HOLMES elevates the alert generation process to work at the level of the steps of an attack campaign, than about how they manifest in low-level audit logs. Thus, we solve an important challenge in generating alerts of significance. In our experiments, we have found that a five-day collection of audit logs contains around 3M low-level events, while HOLMES only extracts 86 suspicious activity steps from them.\n\nA second important idea in HOLMES is to use the information flow between low-level entities (files, processes, etc.) in the system as the basis for alert correlation. To see this, note that the internal reconnaissance step in the kill-chain depends on a successful initial compromise and establishment of a foothold. In particular, the reconnaissance step is typically launched using the command and control agent (process) installed by the attacker during foothold establishment, thus exhibiting a flow between the processes involved in the two phases. Moreover, reconnaissance often involves running malware (files) downloaded during the foothold establishment phase, illustrating a file-to-process flow. Similarly, a successful lateral movement phase, as well as the exfiltration phase, uses data gathered by the reconnaissance phase. Thus, by detecting low-level events associated with APT steps and linking them using information flow, it is possible to construct the emerging kill-chain used by an APT actor.\n\nA third main contribution in HOLMES is the development of a high-level scenario graph (HSG). The nodes of the HSG correspond to TTPs, and the edges represent information flows between entities involved in the TTPs. The HSG provides the basis for detecting APTs with high confidence. For this purpose, we develop several new ideas. First is the concept of an ancestral cover in an HSG. We show how this concept can help to assess the strength of dependencies between HSG nodes. Weak dependencies can then be pruned away to eliminate many false alarms. Second, we develop noise reduction techniques that further de-emphasize dependencies that are known to be associated with benign activities. Third, we develop ranking and prioritization techniques to prune away most nodes and edges unrelated to the APT campaign. These steps are described in detail in Sections IV-D, IV-E, and IV-F. Using these techniques, we demonstrate that HOLMES is able to make a clear distinction between attack and benign scenarios.\n\nFinally, the HSG provides a very compact, visual summary of the campaign at any moment, thus making an important contribution for attack comprehension. For instance, starting from a dataset of 10M audit records, we are able to summarize a high-level attack campaign using a graph of just 16 nodes. A cyber-analyst can use the presented HSG to quickly infer the big picture of the attack (scope and magnitude) with relative ease. Evaluation. We evaluated HOLMES on data generated by DARPA Transparent Computing program that involved a professional red-team simulating multiple cyber-attacks on a network consisting of different platforms. We implemented appropriate system audit data parsers for Linux, FreeBSD, and Windows, to process and convert their audit data to a common data representation and analysis format. The advantage of using system audit data is that it is a reliable source of information and is free of unauthorized tamper (under a threat model of non-compromised kernel).\n\nEvaluation of HOLMES on nine real-life APT attack scenarios, as well as running it as a real-time intrusion detection tool in a live experiment spanning for two weeks, show that HOLMES is able to clearly distinguish between attack and benign scenarios and can discover cyber-attacks with high precision and recall (Sec. VI).\n\n\nII. A RUNNING EXAMPLE\n\nIn this section, we present a running example used through the paper to illustrate our approach. This example represents an attack carried out by a red-team as part of a research program organized by a government agency (specifically, US DARPA). In this attack, a vulnerable Nginx web server runs on a FreeBSD system. Its operations (system calls) are captured in the system audit log. From this audit data, we construct a provenance graph, a fragment of which is shown in Fig. 2. Nodes in this graph represent system entities such as processes (represented as rectangles), files (ovals), network connections (diamonds), memory objects (pentagons), and users (stars). Edges correspond to system calls and are oriented in the direction of information flow and/or causality. Note that our provenance graph has been rendered acyclic using the (optimized) node versioning technique described in Reference [23].\n\nThe goal of the attacker is to exfiltrate sensitive information from the system. The attacker's activities are depicted at the bottom of Fig. 2, and consist of the following steps:\n\n\u2022 Initial Compromise. The attacker sends a malicious payload on the socket (S1) listening on port 80. As a result, Nginx makes some part of its memory region (M1) ex-  ecutable. Next, the attacker gains control over the Nginx process by using a reflective self-loading exploit.\n\n\u2022 C&C Communications. The compromised Nginx process makes a connection (S2) to the C&C server to receive commands from the attacker. \u2022 Privilege Escalation. The attacker exploits an existing vulnerability to escalate the privilege of Nginx to root (U1). \u2022 Internal Reconnaissance. Next, the attacker issues commands such as whoami (P5) and hostname (P6). These commands were used by the red team to simulate access to confidential/proprietary data. The attacker also reads usernames and password hashes (F2, F3, F4) and writes all this information to a temporary file. \u2022 Exfiltration. Next, the attacker transfers the file containing the gathered information to her/his machine (S3). \u2022 Cleanup. In the last step of the attack, the attacker removes the temporary file (F5) to clean up any attack remnants.\n\nThis example illustrates many key challenges described below: Stealthy Attacks. This attack leaves a minimal footprint on the system. The first step of the attack, the initial compromise of the Nginx server, is executed in main memory and does not leave any visible traces such as downloaded files. Moreover, the payload runs within the existing Nginx process. It is very challenging to detect such stealthy attacks, where attacker activities blend in seamlessly with normal system operation.\n\nNeedle in a haystack. Even a single host can generate tens of millions of events per day. All but a very tiny fraction of these -typically much less than 0.01% -correspond to benign activities. (The top portion of Fig. 2 shows a small subset of benign activities in the audit log.) It is difficult to detect such rare events without a high rate of false alarms. More importantly, it is very challenging to filter out these benign events from the attack summaries presented to analysts.\n\nReal-time detection. We envision HOLMES to be used in conjunction with a cyber-response system, so it is necessary to detect and summarize an ongoing campaign in a matter of seconds. Real-time detection poses additional challenges and constraints for the techniques used in HOLMES.\n\nTo overcome these challenges, note that, despite blending seamlessly into benign background activity, two factors stand out regarding the attack. First, the attack steps achieve capabilities corresponding to some of the APT stages. Second, the attack activities are connected via information flows. In the next section, we describe the HOLMES approach based on these two key observations. III. APPROACH OVERVIEW The central insight behind our approach is that even though the concrete attack steps may vary widely among different APTs, the high-level APT behavior often conforms to the same kill-chain introduced in Section I ( Figure 1). Our analysis of hundreds of APT reports from [3] suggests that most APTs consist of a subset, if not all, of those steps. More importantly, we make the observation that these steps need to be causally connected, and this connectedness is a major indication that an attack is unfolding.\n\nNote that the concrete manifestation of each APT step may vary, e.g., an initial compromise may be executed as a driveby-download or as a spear-phishing attack with a malicious file that is executed by a user. Regardless, the APT steps themselves represent a high-level abstraction of the attacker's intentions, and hence they must manifest themselves even if the operational tactics used by attackers vary across APTs. Moreover, information flow or causal relations must necessarily exist between them since the APT steps are logically dependent on each other, e.g., exfiltration is dependent on internal reconnaissance to gather sensitive data.\n\nThe research question, therefore, is whether we can base our detection on\n\n\u2022 an APT's most essential high-level behavioral steps, and \u2022 the information flow dependencies between these steps.\n\nA major challenge in answering this question is the large semantic gap between low-level audit data and the very highlevel kill-chain view of attacker's goals, intentions, and capabilities.\n\nBridging the Semantic Gap. To bridge the semantic gap between low-level system-call view and the high-level kill-  [2], which describes close to 200 behavioral patterns defined as Tactics, Techniques, and Procedures (TTPs) observed in the wild. Each TTP defines one possible way to realize a particular high-level capability. For instance, the capability of persistence in a compromised Linux system can be achieved using 11 distinct TTPs, each of which represents a possible sequence of lower level actions in the ATT&CK framework, e.g., installation of a rootkit, modification of boot scripts, and so on. These lower level actions are closer to the level of abstraction of audit logs, so it is possible to describe TTPs in terms of nodes and edges in the provenance graph. Technical challenges. The main technical challenges in realizing the approach summarized in Fig. 3 are:\n\n\u2022 efficient matching of low-level event streams to TTPs, \u2022 detecting correlation between attack steps, and \u2022 reducing false positives.\n\nWe solve these challenges through several design innovations. For efficient matching, we use a representation of the audit logs as a directed provenance graph (Section IV) in main memory, which allows for efficient matching. This graph also encodes the information flow dependencies that exist between system entities (such as processes and files). TTPs are specified as patterns that leverage these dependencies. For instance, in order to match a maintain persistence TTP, an information flow dependency must exist from a process matching an initial compromise TTP to the maintain persistence TTP.\n\nFor detecting correlations between attack steps, we build a High-level Scenario Graph (HSG) as an abstraction over the provenance graph. Each node in the HSG represents a matched TTP, while the edges represent information flow and causality dependencies among those matched TTPs. An HSG is illustrated in the middle layer of Fig. 3 by nodes and edges in boldface. (We refer the reader to Fig. 5 for the HSG of the running example.) To determine the edges among nodes in the HSG, use the prerequisite-consequence patterns of among the TTPs and the APT stages.\n\nTo reduce the number of false positives (i.e., HSGs that do not represent attacks), we use a combination of: (a) learning benign patterns that may produce false positive TTPs and, (b) heuristics that assign weights to nodes and paths in the graph based on their severity, so that the HSGs can be ranked, and the highest-ranked HSGs presented to the analyst.\n\nIn summary, the high-level phases of an APT are operationalized using a common suite of tactics that can be observed from audit data. These observations provide evidence that some malicious activity may be unfolding. The job of HOLMES, then, is to collect pieces of evidence and infer the correlations among them and use these correlations to map out the overall attack campaign.\n\nIV. SYSTEM DESIGN Like most previous works [12], [18], [34], [39] that rely on OS audit data, we consider the OS kernel and the auditing engine as part of the trusted computing base (TCB). In other words, attacks on the OS kernel, the auditing system and the logs produced by it are outside the scope of our threat model. We also assume that the system is benign at the outset, so the initial attack must originate external to the enterprise, using means such as remote network access, removable storage, etc.\n\n\nA. Data Collection and Representation\n\nOur system relies on audit logs retrieved from multiple hosts that may run different operating systems (OSes). 2 For Linux, the source of audit data is auditd, while it is dtrace for BSD and ETW for Windows. This raw audit data is collected and processed into an OS-neutral format. This is the input format accepted by HOLMES. This input captures events relating to principals (users), files (e.g., operations for I/O, file creation, ownership, and permission), memory (e.g., mprotect and mmap) processes (e.g., creation, and privilege change), and network connections. Although the default auditing system incurs nontrivial overheads, recent research has shown that overheads can be made small [12], [46].\n\nThe data is represented as a graph that we call the provenance graph. The general structure of this graph is similar to that of many previous forensic analysis works [27], [34], [39]: the nodes of the graph include subjects (processes) and objects (files, pipes, sockets) and the edges denote the dependencies between these entities and are annotated with event names. There are some important differences as well: our subjects, as well as objects, are versioned. A new version of a node is created before adding an incoming edge if this edge changes the existing dependencies (i.e., the set of ancestor nodes) of the node. Versioning enables optimizations that can prune away a large fraction of events in the audit log without changing  the results of forensic analysis [23]. Moreover, this versioned graph is acyclic, which can simplify many graph algorithms. Another significant point about our provenance graph is that it is designed to be stored in main memory. We have developed a highly compact provenance graph representation in our previous work [22], [23] that, on average, required less than 5 bytes of main memory per event in the audit log. This representation enables real-time consumption of events and graph construction over prolonged periods of time. It is on this provenance graph that our analysis queries for behavior that matches our TTP specifications.\n\n\nB. TTP Specification\n\nTTP specifications provide the mapping between low-level audit events and high-level APT steps. Therefore, they are a central component of our approach. In this subsection, we describe three key choices in the TTP design that enable efficient and precise attack detection.\n\nRecall that in our design, TTPs represent a layer of intermediate abstraction between concrete audit logs and highlevel APT steps. Specifically, we rely on two main techniques to lift audit log data to this intermediate layer: (a) an OSneutral representation of security-relevant events in the form of the provenance graph and (b) use of information flow dependencies between entities involved in the TTPs. Taken together, these techniques enable high-level specifications of malicious behavior that are largely independent of many TTP details such as the specific system calls used, names of malware, intermediate files that were created and the programs used to create them, etc. In this regard, our information flow based TTP specification approach is more general than the use of misuse specifications [32], [47] from the IDS literature. Use of information flow dependencies is crucial in the detection of stealthy APTs that hide their activities by using benign system processes to carry out their goals.\n\nIn addition to specifying the steps of a TTP, we need to capture its prerequisites. Prerequisites not only help reduce false positives but also help in understanding the role of a TTP in the larger context of an APT campaign. In our TTP specifications, prerequisites take the form of causal relationships and information flows between APT stages.\n\nFinally, TTP matching needs to be efficient, and must not require expensive techniques such as backtracking. We find that most TTPs can be modeled in our framework using a single event, with additional preconditions on the subjects and objects involved.\n\nAn example of a TTP rule specification is shown in Table  4, with additional rules appearing in Section V. In Table 4, the first column represents the APT stage, and the second column represents the associated TTP name and the entities involved in the TTP. The third column specifies the event family associated with the TTP. For ease of illustration, some of the specific events included in this family are shown in the fourth column, but note that they are not part of a TTP rule. (Event classes are defined once, and reused across all TTP rules.)\n\nThe fifth column represents a severity level associated with each TTP. We use this severity level to rank alarms raised by our system, prioritizing the most severe alarms. Our current assignment of the severity levels is based on the Common Attack Pattern Enumeration and Classification (CAPEC) list defined by US-CERT and DHS with the collaboration of MITRE [4] but can be tailored to suit the needs of a particular enterprise. We also provide another customization mechanism, whereby each severity level can be mapped to an analyst-specified weight that reflects the relative importance of different APT stages in a deployment context.\n\nThe last column specifies the prerequisites for the TTP rule to match. The prerequisites can specify conditions on the parameters of the TTP being matched, e.g., the socket parameter S for the U ntrusted Read TTP on the first row. Prerequisites can also contain conditions on previously matched TTPs and their parameters. For instance, the prerequisite column of the M ake M em Exec(P, M ) TTP contains a condition \u2203 U ntrusted Read(?, P ). This prerequisite is satisfied only if an U ntrusted Read TTP has been matched for a process P earlier, and if the processes involved in the two TTPs have a path f actor (defined below) less than a specified threshold.\n\nPrerequisites can capture relations between the entities involved in two TTPs, such as the parent-child relation on processes, or information flow between files. They can also capture the condition that two TTPs share a common parent. Using prerequisites, we are able to prune many false positives, i.e., benign activity resembling a TTP. Fig. 5 illustrates an HSG for the running example. The nodes of this graph represent matched TTPs and are depicted by ovals in the figure. Inside each oval, we represent the matched provenance graph entities in grey. For illustration purposes, we have also included the name of the TTP, the APT stage to which each TTP belongs, and the severity level (Low, Medium or High) of each TTP. The edges of the graph represent the prerequisites between different TTPs. The dotted lines that complete a path between two entities represent the prerequisite conditions. For instance, the M ake M em Exec TTP has, as a prerequisite, an U ntrusted Read TTP, represented by the edge between the two nodes.\n\n\nC. HSG Construction\n\nThe construction of the HSG is primarily driven by the prerequisites: A TTP is matched and added to the HSG if all its prerequisites are satisfied. This factor reduces the number  of TTPs in the HSG at any time, making it possible to carry out sophisticated analyses without impacting real-time performance.\n\n\nD. Avoiding Spurious Dependencies\n\nBy spurious dependencies, we refer to uninteresting and/or irrelevant dependencies on the attacker's activities. For instance, in Fig. 2, the process nginx (P2) writes to the file /usr/log/nginx-error.log, and the cat process later reads that file. However, even though there is a dependency between cat and the log file, cat is unrelated to the attack and is invoked independently through ssh. More generally, consider any process that consumes secondary artifacts produced by the attack activity, e.g., a log rotation system that copies a log file containing some fraction of entries produced by an attacker's process. Such processes, although they represent benign background activity, will be flagged in the provenance graph as having a dependence on the attacker's processes. If these spurious dependencies aren't promptly pruned, there can be a dependence explosion that can enormously increase the size of HSGs. As a result, the final result presented to the analyst may be full of benign activities, which can cause the analyst to miss key attack steps embedded in a large graph. For this reason, we prioritize stronger dependencies over weaker ones, pruning away the latter as much as possible.\n\nIntuitively, we can say that a process P d has a strong dependency on a process P a if P d is a descendant process of P a . Similarly, a file or a socket has a strong dependency on a process P a if P a or its descendant processes write to this file/socket. More generally, consider two entities and a path between them in the provenance graph that indicates an information between them. Determining if this flow represents a strong or weak information flow is equivalent to determining if the entities in the flow share compromised ancestors. If they share compromised ancestors, they are part of the attacker's activities, and there is a strong dependency among them, which must be prioritized. Otherwise, we consider the dependency to be weak and deemphasize it in our analysis.\n\nTo generalize the above discussion to a case where there may be multiple compromised processes, we introduce the following notion of an ancestral cover AC(f ) of all processes on an information flow path f : \u2200p \u2208 f \u2203a \u2208 AC(f ) a = p or a is an ancestor of p Note that non-process nodes in f don't affect the above definition. A minimum ancestral cover, AC min (f ) is an ancestral cover of minimum size. Intuitively, AC min (f ) represents the minimum number of ancestors that an attacker must compromise (i.e., the number of exploits) to have full control of the information flow path f . For instance, consider again the flow from the nginx process, which is under the control of the attacker, to the cat process. Since these two processes share no common ancestors, the minimum ancestral cover for the path among them has a size that is equal to 2. Therefore, to control the cat process, an attacker would have to develop an additional exploit for cat. This requires the attacker to first find a vulnerability in cat, then create a corresponding exploit, and finally, write this exploit into the log file. By preferring an ancestral cover of size 1, we capture the fact that such an attack involving cat is a lot less likely than one where the attack activities are executed by nginx and its descendants.\n\nWe can now define the notion of path f actor(N 1 , N 2 ) mentioned earlier in the discussion of TTPs. Intuitively, it captures the extent of the attacker's control over the flow from N 1 to N 2 . Based on the above discussion of using minimum ancestral covers as a measure of dependency strength, we define path f actor as follows. Consider all of the information flow paths f 1 , ..., f n from N 1 to N 2 , and let m i be the minimum ancestral cover size for f i . Then, path f actor(N 1 , N 2 ) is simply the minimum value among m 1 , . . . , m n .\n\nNote that if process N 2 is a child of N 1 , then there is a path with just a single edge between N 1 to N 2 . The size of minimum ancestral cover for this path is 1 since N 1 is an ancestor of N 2 . In contrast, the (sole) path from nginx to cat has a minimum ancestral cover of size 2, so path f actor(nginx, cat) = 2.\n\nWe describe an efficient computation of path f actor in Section V. In our experience, the use of path f actor greatly mitigated dependency explosions by prioritizing attackerinfluenced flows.\n\n\nE. Noise Reduction\n\nOne of the challenges in the analysis of audit logs for attack detection and forensics is the presence of noise, i.e., benign events matching TTP rules. Long-living processes such as browsers, web servers, and SSH daemons trigger TTP matches from time to time. To cut down these false positives, we incorporate noise reduction rules based on training data. We leverage two notions: (1) benign prerequisite matches and (2) benign data flow quantity. Noise reduction based on benign prerequisites. For each process, our system learns prerequisites that fired frequently when the system is run in a benign context. At runtime, when the prerequisites of a triggered TTP match the prerequisites that were encountered during training, we ignore the match. Noise reduction based on data flow quantity. Filtering based on benign prerequisites may lead to false negatives: a malicious event may go unnoticed because it matches behavior observed during the learning phase. For instance, even without any attack, nginx reads /etc/passwd during its startup phase. However, if we were to whitelist all nginx access to /etc/passwd, then a subsequent read by a compromised nginx server will go unnoticed.\n\nTo tackle this problem, we enhance our learning to incorporate quantities of information flow, measured in bytes transferred. For instance, the amount of information that can flow from the file /etc/passwd to nginx is equal to the size of that file, since nginx reads that file only once. Therefore, if significantly more bytes are observed flowing from /etc/passwd to nginx, then this flow may be part of an attack. To determine the cut-off points for information quantity, we observe processfile and process-socket pairs over a period in a benign setting.\n\n\nF. Signal Correlation and Detection\n\nGiven a set of HSGs, how do we distinguish the ones that constitute an attack with a high confidence? We address this challenge by assigning a severity score to each HSG. This assignment proceeds in two steps further described below. Threat Tuples. First, we represent the attacker's progress in a campaign by an abstract threat tuple associated with the corresponding HSG. In particular, for every HSG, a threat tuple is a 7-tuple S 1 , S 2 , S 3 , ..., S 7 where each S i corresponds to the severity level of the APT stage at index i of the HSG. We chose 7-tuples based on an extensive survey of APTs in the wild [3], but other choices are possible as well.\n\nSince different TTPs belonging to a certain APT stage may have different severity levels, there are usually multiple candidates to pick from. It is natural to choose the highest severity level among these candidates. For instance, the threat tuple associated with the HSG of Fig. 5 is M, L, H, H, \u2212, H, M . This tuple contains 6 entries because its matched TTPs belong to 6 different APT stages. The entries are ordered according to the order of the APT stages in the kill-chain. For instance, the first entry of the tuple is M since the most severe TTP belonging to Initial Reconnaissance in the graph has severity M. HSG Ranking and Prioritization. To rank HSGs, we first transform a threat tuple to a numeric value. In particular, we first map each element of a threat tuple to a numerical value based on the conversion table (Table 7) included in the Common Vulnerability Scoring System (CVSS), a vendorneutral industry standard created through the collaboration of security professionals across commercial, non-commercial, and academic sectors [5]. Alternative scoring choices may be made by an enterprise, taking into context its perceived threats and past threat history.  Next, we combine the numeric scores for the 7 APT stages into a single overall score. The formula that we use to compute this score was designed with two main criteria in mind: (1) flexibility and customization, and (2) the correlation of APT steps is reflected in the magnification of the score as the steps unfold. To address these criteria, we associate a weight with each entry in the converted threat tuple and calculate a weighted product of the threat tuple as the score. These weights are configurable by a system administrator, and they can be used to prioritize detection of specific stages over other stages.\n\nUsing a training set, we performed several experiments and compared results using other schemes, such as weighted sum, exponential sum, and geometric sum. For each equation, we measured the average margin between the benign subgraph scores and the attack subgraph scores after normalization and found that the weighted product had the best results. Hence we use the following criteria to flag an APT attack:\nn i=1 (S i ) wi \u2265 \u03c4(1)\nHere, n is the number of APT stages, w i and S i denote respectively the weight and severity of stage i, and \u03c4 is the detection threshold. If no TTP occurs in stage i, we set S i = 1.\n\nV. IMPLEMENTATION Stream Consumption for Provenance Graph Construction. Fig. 6 shows the architecture of HOLMES. To achieve platform independence, audit records from different OSs are normalized to a common data representation (CDR) with shared abstractions for various system entities. For streamlined audit data processing, CDR-based audit records are published to a stream processing server (Kafka) and real-time analysis and detection proceeds by consuming from the streaming server. We use our SLEUTH system [22] for stream consumption, causality tracking, and provenance graph construction, so we don't describe those steps in detail here. Policy Matching Engine and HSG Construction. The Policy Matching Engine takes the TTP rule specifications as input and operates on the provenance graph. A representative set of the TTP rule specifications used in the current implementation  of HOLMES is shown in Table 8. To match a TTP, as the provenance graph is being built, the policy matching engine iterates over each rule in the rules table and its prerequisites. A particularly challenging part of this task is to check, for each TTP, the prerequisite conditions about previously matched TTPs and the path factor. In fact, previously matched TTPs may be located in a distant region of the graph and the path factor value may depend on long paths, which must be traversed. We note that a common practice in prior work [22], [28], [34], [39] on attack forensics is to do backward tracking from a TTP matching point to reach an initial compromise point. Unfortunately, this is a computationally expensive strategy in a real-time setting as the provenance graph might contain millions of events.\n\nTo solve this challenge without backtracking, we use an incremental matching approach that stores the results of the previous computations and matches and propagates pointers to those results along the graph. When a specific TTP, which may appear as a prerequisite condition in other TTPs, is matched, we create the corresponding node in the HSG and a pointer to that node. The pointer is next propagated to all the low-level entities that have dependencies on the entities of that matched TTP.\n\nThe path factor is similarly computed. In particular, given a matched TTP represented as a node in the HSG, a path factor value is incrementally computed for the nodes of the provenance graph that have dependencies on the entities of the matched TTP. Assuming N 1 as a process generating an event matching a TTP, path f actor(N 1 , N 1 ) is initially assigned to 1. Subsequently, when an edge (N 1 , N 2 ) is added to the provenance graph, path f actor(N 1 , N 2 ) will be 1 if N 2 is a non-process node or if it is a process with at least one common ancestor with N 1 . Otherwise, the path f actor value increases by 1. In cases that an information flow happens from N 2 to N 3 while both N 2 and N 3 already have a dependency flow from N 1 , a new version of N 3 is constructed, and the path f actor(N 1 , N 3 new ) is set to the minimum among the path f actors calculated by both flows. Note that in the acyclic provenance graph which is built based on this versioning system, the path f actor(N 1 , N 2 ) never changes once it is set. Finally, when an event corresponding to a TTP event is encountered, we can reuse the pointer to the prerequisite TTPs and the precomputed path factor immediately if they are available.\n\nAn expected bottleneck for this pointer-based correlation of the two layers (provenance graph and HSG) is the space overhead and complexity it adds as the provenance graph grows over time. Our operational observation is that, typically, a large number of entities point to the same set of TTPs; This phenomenon is not random and is actually the result of the propagation of pointers in the process tree, from parent processes to all their descendants. It is, in fact, rare that new pointers get added as the analysis proceeds. In general, the key implementation insight is to maintain an intermediate object that maps entities of the provenance graph to TTPs of the HSG. Therefore, each entity in the provenance graph has only one pointer pointing to the intermediate mapper, and the mapper object contains the set of pointers. Noise Filtering and Detection Engines. The Noise Filtering Engine identifies benign TTP matches so that they can be excluded from the HSG. It takes as input the normal behavior model learned on benign runs. This model contains a map of the TTPs that are matched in benign runs and the threshold on the number of bytes read from or written to system objects on these runs. When the policy matching engine matches a new TTP, the entities and prerequisites of that TTP are searched in this model. If an entry exists in the model that contains all the prerequisites and the matched event (having the same entity names), then the total amount of transferred bytes is checked against the benign threshold. If the total amount of bytes transferred is lower than the benign threshold, then the node corresponding to the matched TTP is filtered out; otherwise, a node corresponding to it gets added to the HSG. Finally, the detection engine computes the weighted sums of the different HSGs and raises alarms when that value surpasses the detection threshold.\n\n\nVI. EXPERIMENTAL EVALUATION\n\nOur experimental evaluation is done on red-team vs. blueteam adversarial engagements organized by a government agency (specifically, US DARPA). We first evaluated HOLMES on a dataset that was available to us beforehand (Sections VI-A,VI-B,VI-C,VI-D). Using this evaluation, we calculate the optimal threshold value for HOLMES in Section VI-E, and measure its performance in Section VI-F. Finally, in Section VI-G, we explored applicability of HOLMES as a realworld live detection system in a setting that we have no prior knowledge of when or how red-team is conducting the attacks. After our live experiment, this dataset has been released in the public domain [26] to stimulate further research in this area.\n\n\nStream\n\nNo. \n\n\nA. Datasets\n\nAttacks. The datasets we used for evaluation are summarized in Table 10. This table shows nine APT scenarios from 7 hosts across three OS platforms. There are three scenarios for each platform. Collectively, the streams cover 20 days' worth of audit logs collected using auditd, dtrace, and ETW from Ubuntu, FreeBSD, and Microsoft Windows, respectively. Each stream contains kernel audit logs of routine system activities and attack activities. Attacks constitute less than 0.001% of the audit data volume. Streams 5 and 7 each contain two independent APT attacks, while the remaining streams contain one APT attack each. In a nutshell, the adversarial goals and activities in the red team attack scenarios cover those of high-profile APT campaigns. These include typical APT activities such as browser-induced drive-by initial compromises, backdoor injection, privilege escalation, internal reconnaissance, exfiltration of sensitive assets, and cleanup of attack footprints. In these attacks, sophisticated attack vectors such as reflective loading, web-shell capabilities, and in-memory module loading were used by a red-team to evaluate the robustness of HOLMES against APT attacks. Benign data. To build noise reduction models, we used 4 days' worth of benign audit data streamed from the target hosts. These programs include browsers (e.g., Firefox), web servers (e.g., Nginx), and various daemons (e.g., postfix, syslogd).\n\n\nB. Setup\n\nBefore the engagement, each machine is set up with some vulnerable software that later gets exploited. To further mix normal and attack logs, the red-team also performed benign activities on the target hosts in parallel with attacks. Routine system activities include, but are not limited to, web browsing, checking email, software upgrading, administrative tasks using PowerShell (in Windows), running programs that require administrative privileges, and so on. HOLMES subscribed to the 7 Kafka topics (one topic per host) to consume audit streams and perform analysis and detection in real-time. The number of records published (in millions) with regards to the percentage growth of the audit trace duration is shown in Fig. 9 (left). Note that HOLMES consumes as fast as the publishing rate from the Kafka server. Fig. 9 (right) shows the incremental growth in the size of records published into each Kafka topic.\n\nWe configured HOLMES with TTPs mentioned in Table 8 and set path thres = 3 for prerequisites on TTPs and weight = (10 + i)/10 for APT stage i, which takes into account slightly higher weights for later APT stages.\n\n\nScenario\n\nNo.\n\nThreat  TABLE 11. Scores Assigned to Attack Scenarios. L = Low, M = Moderate, H = High, C = Critical. Note: for each scenario, Highest Benign Score in Dataset is the highest threat score assigned to benign background activities streamed during the audit log collection of a host (pre-attack, in parallel to attack, and post-attack). Table 11 summarizes the detection of the nine attack scenarios. The second column shows the threat tuple of each HSG matched during detection, and the third column shows the corresponding threat score. The fourth column shows the highest score among all benign scenarios of the machine on which the attack scenario is exercised. These benign scenarios might contain the exact programs in the corresponding attack scenario.\nTuple Threat Score Highest Benign Score in\n\nC. Results in a Nutshell\n\nThe highest score assigned to benign HSGs is 338 (Scenario-3), and the lowest score assigned to attack HSGs is 608 (Scenario-5.2) which is related to an incomplete attack with no harm done to the system. This shows that HOLMES has separated attack and benign scenarios into two disjoint clusters, and makes a clear distinction between them.\n\nThe effect of learning noise reduction rules and path factor are shown in Fig. 12. This plot shows threat score for all benign and attack HSGs which are constructed after analyzing all the seven streams. These scores are shown under three different settings: default which both learning and path factor calculations are enabled, without learning, and without path factor. It is obvious in the figure that with learning and path factor, there is a more considerable margin between attack HSGs and benign ones. Without learning or path factor, we notice an increase in noise, which leads to false positives or false negatives. The 10th percentile, first quartile, and median of default box are all colliding on the bottom line of this box (score= 2.1). This means that more than 50% of threat scores are 2.1, which is the result of having many HSGs with only one low severity Untrusted Read TTP. \n\n\nD. Attack Scenarios\n\nWe now describe an additional attack scenario detected by HOLMES. For reasons of space, we include details of the rest of the scenarios and the related figures in the appendix. We note that Scenario-7.2 is discussed in section II and a portion of its provenance graph and HSG are shown in Fig.s 2 and 5, respectively. Scenario-1: Drive-by Download. In this attack scenario (see Fig. 13), the user visits a malicious website with a vulnerable Firefox browser. As a result, a file named net is dropped and executed on the victim's host. This file, after execution, connects to a C&C server, and a reverse shell is provided to the attacker. The attacker then launches a shell prompt and executes commands such as hostname, whoami, ifconfig, netstat, and uname. Finally, the malicious executable exfiltrates information to the IP address of the C&C server and then the attacker removes the dropped malicious file.\n\nAs can be seen from Fig. 13, in the Initial Compromise APT stage, an untrusted file is executed, which matches a TTP    Table 11). Consequently, the converted quantitative values are 10, 6, 1, 8, 1, 8, 6 , which results in a threat score equal to 1163881.\n\n\nE. Finding the Optimal Threshold Value\n\nTo determine the optimal threshold value, we measured the precision and recall by varying threshold values as shown in Fig. 14. F-score, the harmonic mean of precision and recall, is maximum at the interval [338. 25, 608.26], which is the range from the maximum score of benign subgraphs to the minimum score of attack subgraphs. Therefore, by choosing any threshold in this range, HOLMES makes a clear distinction between attack and benign subgraphs in the tested datasets, with accuracy and recall equal to 1.\n\nTo find the optimal value, we first transform the threat scores to a linear scale by getting their nth root, where n equals to 7 i=1 w i . The transformed value shows the average contribution of each APT step to the overall threat score, and it is a value in the range [1,10]. As all our tested datasets so far belong to single hosts, we exclude the weight of lateral movement step (w 5 ), which leads to n = 8.3. After getting the nth root, the interval of maximum F-score would change to [2.01, 2.16]. Finally, we consider the middle of this range (2.09) as the average severity that each APT step is allowed to contribute to the overall threat score, in a benign setting.\n\n\nF. Performance\n\nGraph Size. Fig. 15 shows the comparison of the growth trends for provenance graph in thousands of edges (left) and the HSG in the number of edges (right). The graph size ratio measured in edges is 1875:1, i.e., an 1875-fold reduction is achieved in the process of mapping from the provenance graph to the HSG. Memory Use. HOLMES was tested on an 8 core CPU with a 2.5GHz speed each and a 150GB of RAM. Fig. 16 (left) shows the memory consumption of HOLMES with the number of audit records. It shows a nearly linear growth in memory consumption since our system operates on audit records inmemory. Fig. 16 (right) shows extrapolation of how many hosts HOLMES can support (regarding memory consumption) with scalability to an enterprise of hundreds of hosts. It is evident that as the number of hosts is increased, the duration that we can keep the full provenance graph in memory decreases. Notice that both x and y-axes are in log-2 scale. Runtime. While HOLMES consumes and analyzes audit records from a Kafka server as the records become available in real-time, to stress-test its performance, we assumed that all the audit records were available at once. Then, we measured the CPU time for consuming the records, building the provenance graph, constructing the HSG, and detecting APTs. We define \"CPU Utilization\" as the ratio of required CPU time to the total duration of a scenario. In Fig. 17, the bars show CPU Utilization for each scenario, and the line shows an extrapolation of how many hosts (of comparable audit trace durations with the scenarios) HOLMES can support if CPU was the limiting factor. This chart shows that our single CPU can support an enterprise with hundreds of hosts.\n\n\nG. Live Experiment\n\nTo explore how HOLMES would respond to attacks embedded within a predominantly benign stream of events, we evaluated it as a live detection system. This experiment spanned 2 weeks, and during this period, audit logs of multiple systems, running Windows, Linux, or BSD, were collected and analyzed in real-time by HOLMES. In this experiment, an enterprise is simulated with security-critical services such as a web server, E-mail server, SSH server, and an SMB server for providing shared access to files. Similar to the previous datasets, an extensive set of normal activities are conducted during this experiment, and red-team carried out a series of attacks. However, this time, we configured all the parameters beforehand and had no prior knowledge of the attacks planned by the redteam. Moreover, we had cross host internal connectivity, which makes APT stage 5 (Move laterally) a possible move for attackers. To this end, we set the detection threshold equal to 2.09 7 i=1 wi = 2.09 9.8 = 1378. Fig. 18 shows the cumulative distribution function for attack and benign HSGs that HOLMES constructs during this experiment. Note that there are some points representing threat score of benign HSGs, that have bypassed the threshold. We explain them as false positives in the following and then discuss some potential false negative scenarios. False Positives. We noticed some false alarms because of SSH connections made by system administrators. These connections come from untrusted IP addresses, and subsequently, HOLMES aggregates the severity scores of all the actions issued by the system administrator via an SSH connection. In some cases, the threat score bypasses our threshold. The solution is to define a custom tagging policy for servers such as ssh that perform authentication so that the children of such servers aren't marked as untrusted [22].\n\nTo further evaluate our system for false alarms, we also evaluated it on another two weeks benign activity period. During this time, a diverse set of normal activities were conducted, (including software updates and upgrades through package managers) and HOLMES generated no false alarms.\n\nBased on our results, we claim that the false positive of HOLMES is at an acceptable rate considering the benefits it adds to an enterprise. Security analysts can manually check the raised alarms and neutralize HSGs that are falsely constructed. False Negatives. Although we did not observe any false negatives during our experiments, here we discuss potential scenarios HOLMES might miss.\n\nImplicit causality between TTPs: For information flow that avoids system calls, HOLMES have no direct visibility to the causal relations between system entities. However, if the rest of the attack unfolds with visibility through system calls, HOLMES will still partially reconstruct the attack. VII. RELATED WORK HOLMES makes contributions to the problems of real-time alarm generation, alert correlation, and scenario reconstruction. A central idea in HOLMES is the construction and use of a high-level attack scenario graph as the underlying basis for all the above problems. Below, we discuss related work in all of the above areas. Alarm Generation.\n\nHost-based intrusion detection approaches fall under three classes: (1) misuse-based [32], [47], which detect behavior associated with known attacks; (2) anomaly-based [13], [16], [17], [31], [35], [40], [49], [51], which learn a model of benign behavior and detect deviations from it; and (3) specification-based [29], [52], which detect attacks based on policies specified by experts. While the techniques of the first class cannot deal with unknown attacks, those of the second class can produce many false positives. Specification-based techniques can reduce false positives, but they require application-specific policies that are time-consuming to develop and/or rely on expert knowledge. At a superficial level, the use of TTPs in HOLMES can be seen as an instance of misuse detection. However, our approach goes beyond classic misuse detection [32], [47] in the use of prerequisite-consequence patterns that are matched when there exist information flow dependencies between the entities involved in the matched TTP patterns. Alarm Correlation. Historically, IDSs have tended to produce alerts that are too numerous and low-level for human operators. Techniques needed to be developed to summarize these lowlevel alerts and greatly reduce their volume.\n\nSeveral approaches use alarm correlation to perform detection by clustering similar alarms and by identifying causal relationships between alarms [15], [42], [43], [48], [54]. For instance, BotHunter [21] employs an anomaly-based approach to correlate dialog between internal and external hosts in a network. HERCULE [45] uses community discovery techniques to correlate attack steps that may be dispersed across multiple logs. Moreover, industry uses similar approaches for building SIEMs [6], [7], [10] for alert correlation and enforcement based on logs from disparate data sources. These approaches rely on logs generated by third-party applications running in user-space. Moreover, alert correlation based on statistical features like alert timestamps does not help in precise detection of multi-stage APT attacks as they usually span a long duration. In contrast to these approaches, HOLMES builds on information flows that exist between various attack steps for the purpose of alert correlation. The use of kernel audit data in this context was first pursued in [55]. However, differently from HOLMES, that work is purely misuse-based, and its focus is on using the correlation between events to detect steps of an attack that are missed by an IDS. HOLMES uses the same kernel audit data but pursues a different approach based on building a main-memory dependency graph with low memory footprint, followed by the derivation of an HSG based on the high-level specification of TTPs to raise alerts, and finally correlate alerts based on the information flow between them. An additional line of work on alert correlation relies on the proximity of alerts in time [30]. HOLMES, in contrast, relies on information flow and causality connections to correlate alerts and is therefore capable of detecting even attacks where the steps are executed very slowly. Scenario Reconstruction. A large number of research efforts have been focused on generation and use of system-call level logs in forensic analysis, investigation and recovery [12], [18]- [20], [27], [28], [34], [36]- [39], [46], [53]. Most forensic analysis approaches trace back from a given compromise event to determine the causes of that compromise. Among these, BEEP [34], ProTracer [39], and MPI [38] use training and code instrumentation and annotations to divide process executions into smaller units, to address dependency explosion and provide better forensic analysis. PrioTracker [36] performs timely causality analysis by quantifying the notion of event rareness to prioritize the investigation of abnormal causal dependencies. In contrast, HOLMES uses system event traces to perform realtime detection, with integrated forensics capabilities in the detection framework, in the form of high-level attack steps, without requiring instrumentation.\n\nRecent studies [22], [44], [50] have used system-call level logs for real-time analytics. SLEUTH [22] presents tag-based techniques for attack detection and in-situ forensics. HOLMES makes several significant advances over SLEUTH. First, it shows how to address the dependence explosion problem by using the concept of minimum ancestral cover and developing an efficient algorithm for its incremental computation. Second, SLEUTH's scenario graphs are at the same level of abstraction as the provenance graph, which can be too low-level for many analysts, and moreover, lacks the kind of actionable information in HSGs. Third, SLEUTH's graphs can become too large on long-running attacks, whereas HOLMES generates compact HSGs by using noise reduction and prioritization techniques. Attack Granularity. Sometimes, the coarse granularity of audit logs may limit reasoning about information flows. For example, if a process with a previously loaded sensitive file is compromised, the attacker can search for sensitive content inside its memory region without using system calls. However, when such information is exfiltrated, HOLMES correlates the exfiltration with the other actions of that process (i.e., the sensitive file read) and eventually raises an exception. Furthermore, HOLMES can be adapted to take advantage of additional works, which track information flows at finer granularities, either by instrumenting additional instructions [11], [25] or by decoupling taint tracking [14], [24], [33], [41]. Such finegrained information flow tracking can provide much more precise provenance information at the cost of performance overheads.\n\n\nVIII. CONCLUSION\n\nWe present HOLMES, a real-time APT detection system that correlates tactics, techniques, and procedures that might be used to carry out each APT stage. HOLMES generates a highlevel graph that summarizes the attacker's steps in real-time. We evaluate HOLMES against nine real-world APT threats and deploy it as a real-time intrusion detection tool. The results show that HOLMES successfully detects APT campaigns with high precision and low false alarm rates. APPENDIX Scenario-2: Trojan. This attack scenario (Fig. 19) begins with a user downloading a malicious file. The user then executes the file. The execution results in a C&C communication channel with the attacker's machine. The attacker then launches a shell and executes some information gathering commands such as hostname, whoami, ifconfig, netstat, and uname. Finally, the attacker exfiltrates some secret files. Note that this attack scenario is similar to the Drive-by Download scenario discussed earlier except that the initial compromise happens via a program that the user downloads. Another important insight from the detection results of this scenario is that it was missing important events that are relevant to the C&C communication (connect) and final cleanup (unlink) activity of the attack. Even with such incomplete data, HOLMES was able to flag this as an APT since the Threat score surpassed the threshold. Scenario-3: Trojan. In this attack (Fig. 20), a user is convinced to download a malicious Trojan program (texteditor) via Firefox. Next, the user moves the executable file to another directory, changes its name (tedit), and finally executes it. After the execution, a C&C channel is created, and a reverse shell is provided to the attacker. The attacker launches a shell prompt and executes information gathering commands like hostname, whoami, ifconfig, and netstat. The attacker then deploys another malicious file, exfiltrates information, and finally cleans up his footprints. This scenario differs from Trojan-1 because it has an additional activity that remotely deploys a new malicious executable.\n\nScenario-4: Spyware. This attack (Fig. 21) begins when the red-team compromises Firefox. The user on the victim host then loaded a hijacked remote URL. Next, a shellcode from the URL is executed to connect to a C&C server from which it downloaded a malicious binary, wrote it to disk, and executed it. The execution of the malicious binary results in a reverse shell channel for C&C communications. The attacker then ran the shell command, resulting in a new cmd.exe process and a new connection to the C&C server. The operator ran reconnaissance commands (hostname, whoami, ipconfig, netstat, uname). The attacker then exfiltrated the password.txt Scenario-5.1: Eternal Blue. This APT exploits vulnerable SMB [9] services in Windows. In this scenario (see Fig.   22), Meterpreter [1] was used with the recently implemented Eternal Blue exploit and Double Pulsar reflective loading capabilities. The attacker exploited the listening SMB service on port 445 of the target. A shellcode was then downloaded and executed on the target. The shellcode performed process injection into the lsass.exe process. lsass.exe then launched rundll32.exe, which connected to the C&C server and downloaded-and-executed Meterpreter. Next, Meterpreter exfiltrated a sensitive file and cleared Windows event logs. Scenario-5.2: RAT. In this attack (Fig. 23), Firefox navigates to a malicious website and gets exploited. Then, a Remote Access Trojan (RAT) is uploaded to the victim's machine and executed. After execution, a connection to the C&C server has happened, and the malicious RAT is deleted. This attack scenario is incomplete, and no harm is done. Scenario-6: Web-Shell. The assumption in this attack (Fig.  24) is that Nginx web server has a vulnerability that gives the attacker access to run arbitrary commands on the server (similar to Shellshock bug). As a result, the attacker exfiltrates a sensitive file. The important insight here is that by capturing sufficiently strong APT signals of an ongoing attack through TTP matching, HOLMES accurately flags an APT, even when a critical APT step is missing (initial compromise in this case).\n\nScenario-7.1: RAT. A vulnerable Nginx server was installed during the setup period. The attacker exploits the Nginx server by throwing a malicious shell-code. Nginx runs the malicious shell-code which results in the download and execution of a malicious RAT. Next, RAT connects to a C&C server and gives administrative privileges to the remote attacker. The attacker remotely executes some commands. It then deploys some malicious Python scripts and exfiltrates information. The HSG of this attack is shown in Fig. 25. \n\nFig. 1 .\n1APT Lifecycle.\n\nFig. 2 .\n2Provenance Graph of the Running Example.\n\nFig. 5 .\n5High-Level Scenario Graph for the Running Example.\n\nFig. 6 .\n6HOLMES Architecture.\n\n\nEXEC$ \u2208 M.f lags \u2227 \u2203 U ntrusted Read(?, P ) : path f actor(P , P ) <= path thres M ake F ile Exec(P, F ) CHMOD H $PROT EXEC$ \u2208 F.mode \u2227 \u2203 U ntrusted Read(?, P ) : path f actor(P , F ) <= path thres \u2227 \u2203 U ntrusted Read(?, P ) : path f actor(P , P ) <= path thres U ntrusted F ile Exec(F, P ) EXEC C \u2203 U ntrusted Read(?, P ) : path f actor(P , F ) <= path thres Establish F oothold(P ) Shell Exec(F, P ) EXEC M F.path \u2208 {Command Line Utilities} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres CnC(P, S)SEND L S.ip / \u2208 {Trusted IP Addresses} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres P rivilege Escalation(P ) Sudo Exec(F, P ) EXEC H F.path \u2208 {SuperUser Tools} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Switch SU (U, P ) SETUID H U.id \u2208 {SuperUser Group} \u2227 \u2203 InitialCompromise(P ) : path f actor(P , P ) <= path thres Internal Recon(P ) Sensitive Read(F, P ) READ M F.path \u2208 {Sensitive Files} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Sensitive Command(P, P ) FORK H P .name \u2208 {Sensitive Commands} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres M ove Laterally(P ) Send Internal(P, S) SEND M S.ip \u2208 {Internal IP Range} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Complete M ission(P ) Sensitive Leak(P, S) SEND H S.ip / \u2208 {Trusted IP Addresses} \u2227 \u2203 Internal Reconnaissance(P ) : path f actor(P , P ) <= path thres \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Destroy System(F, P ) WRITE/ UNLINK C F.path \u2208 {System Critical Files} \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Cleanup T racks(P ) Clear Logs(P, F ) UNLINK H F.path \u2208 {Log Files}\u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres Sensitive T emp RM (P, F ) UNLINK M \u2203 Internal Reconnaissance(P ) : path f actor(P , F ) <= path thres \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres U ntrusted F ile RM (P, F ) UNLINK M \u2203 Initial Compromise(P ) : path f actor(P , F ) <= path thres \u2227 \u2203 Initial Compromise(P ) : path f actor(P , P ) <= path thres\n\nFig. 9 .\n9(Left): Number (millions) of published records vs. % of trace duration. (Right): Topic Size (MB) vs. % of trace duration.\n\nFig. 12 .Fig. 13 .\n1213Effects of Learning and path factor on Noise Reduction. Box covers from first to third quartiles while a bar in the middle indicates median, and whisker is extended from 10th to 90th percentile. HSG of Scenario-1 (Drive-by Download). Notations: A= Untrusted External Address; B= Firefox; C= Malicious dropped file (net); D= RAT process; E= bash; F= whoami; G= uname; I= netstat; J= company secret.txt;\n\nFig. 14 .\n14Precision, Recall, and F-score of attack detection by varying the threshold value.\n\nFigFig. 16 .\n16. 15. (Left): Provenance graph growth vs. consumed records. (Right): HSG growth vs. consumed records. (Left): Memory footprint (MB) vs. % of records consumed. (Right): Number of Days vs. extrapolated number of hosts that can be handled by HOLMES in respect to Memory consumption with the critical severity level. The final threat tuple for this graph looks like C, M, \u2212, H, \u2212, H, M for all APT stages (see\n\nFig. 17 .Fig. 18 .\n1718CPU Utilization and the extrapolated number of hosts that can be handled by HOLMES in respect to CPU time. Cumulative distribution function for attack vs. benign HSGs Multiple entry points: As an active evasion technique, attackers might exploit multiple entry points that result in detached subgraphs. HOLMES follows every single entry point until our detection threshold is satisfied and correlates TTPs from disjoint subgraphs when there is information flow between them. Nevertheless, some additional analyses might be needed to completely correlate attack steps, which are coming from different entry points and have no information flow in between.\n\nFig. 19 .\n19HSG of Scenario-2. Notations: A= Untrusted External Address; B= Firefox; C= Trojan File (diff); D= Executed Trojan Process; E= /bin/dash; F= ifconfig; G= hostname; H= netstat; I= password.txt;\n\n\nScenario-5.1 (Eternal Blue). Notations: A= Untrusted External Address; B= lsass.exe; C= rundll32.exe; D= password.txt; E= Winevt logs;\n\nFig. 23 .\n23HSG of Scenario-5.2. Notations: A= Untrusted External Address; B= Firefox.exe; C= Malicious dropped file (spd.exe); D= Executed Malware Process;\n\nFig. 24 .\n24HSG of Scenario-6. Notations: A= Untrusted External Address; B= Nginx; C= Root userID; D= Passwd.txt;\n\nFig. 25 .\n25HSG of Scenario-7.1. Notations: A= Untrusted External Address; B= Nginx; C= Memory; D= Root userID; E= Malicious dropped file (py); F= Executed Malware Process; G= uname; H= /etc/shadow;\n\nTABLE 4 .\n4Example TTPs. In the Severity column, L=Low, M=Moderate, H=High, C=Critical. Entity types are shown by the characters: P=Process, \nF=File, S=Socket, M=Memory, U=User. \n\n\n\n\nAPT Stage: Privilege Escalation APT Stage: Establish Foothold APT Stage: Internal Recon APT Stage: CleanupP1 \nS1 \n\nM1 \nP1 \n\nUntrusted Read \n\nMake Mem Exec \n\nP2 \nS2 \n\nU1 \nP3 \n\nC&C \nCommunication \n\nSwitch SU \n\nP3 \nF2 \n\nSensitive \nCommand \n\nSensitive \nCommand \n\nSensitive Read \n\nP7 \nS3 \n\nSensitive \nLeak \n\nP7 \nF5 \n\nSensitive Read \n\nAPT Stage: Initial Compromise \n\nSensitive Read \n\n\n\nTABLE 7 .\n7NIST severity rating scale\n\nTABLE 8 .\n8Representative TTPs. Event family denotes a set of corresponding events in Windows, Linux, and FreeBSD. In the Severity column, L=Low, M=Moderate, H=High, C=Critical. Entity types are shown by the characters: P=Process, F=File, S=Socket, M=Memory, U=User.\n\n\nAPT Stage: Establish Foothold APT Stage: Internal Recon APT Stage: Cleanup D A APT Stage: Initial Compromise Fig. 20. HSG of Scenario-3. Notations: A= Untrusted External Address; B= Firefox; C= Trojan File (tedit); D= Executed Trojan Process; E= /bin/dash; F= Malicious Executable file (py); G= Executed Malicious Process; H= password.txt; I= whoami; J= ifconfig; K= netstat; L= uname; file and then deleted it. Finally, the malicious binary drops a batch file that deletes attack footprints, including the malicious binary itself. Stage: Establish Foothold APT Stage: Internal Recon APT Stage: Cleanup D A APT Stage: Initial Compromise Fig. 21. HSG of Scenario-4. Notations: A= Untrusted External Address; B= Firefox.exe; C= Malicious dropped file (procman.exe); D= Executed Malware Process; E= cmd.exe; F= Malicious Batch file (burnout.bat); G= Executed Batch Process; H= hostname; I= whoami; J= ipconfig;C&C \nCommunication \n\nH \nE \n\nSensitive \nRead \n\nG \nC \n\nJ \nE \n\nI \nE \n\nUntrusted \nFile Rm \n\nL \n\nM \n\nH \n\nH \n\nM \n\nD \nE \n\nM \nShell \nExec \n\nSensitive \nCommand \n\nSensitive \nCommand \n\nfork \n\nsend \n\nRead \n\nfork \n\nfork \n\nunlink \n\nA \nB \n\nUntrusted Read \n\nL \n\nD \n\nUntrusted \nFile Exec \n\nC \n\nC \n\nrecv \n\nexec \n\nG \n\nUntrusted \nFile Exec \n\nC \n\nF exec \n\nG \nA \n\nL \n\nsend \n\nG \nF \n\nUntrusted \nFile Rm \n\nM \n\nunlink \n\nG \nA \n\nSensitive \nLeak \n\nAPT Stage: Exfiltration \n\nH \n\nsend \n\nL \nE \n\nK \nE \n\nH \n\nH \n\nSensitive \nCommand \n\nSensitive \nCommand \n\nfork \n\nfork \n\nC&C \nCommunication \n\nAPT C&C \nCommunication \n\nH \nE \n\nSensitive \nCommand \n\nE \nC \n\nJ \nE \n\nI \nE \n\nUntrusted \nFile Rm \n\nL \n\nH \n\nH \n\nH \n\nM \n\nD \nE \n\nM \nShell \nExec \n\nSensitive \nCommand \n\nSensitive \nCommand \n\nfork \n\nsend \n\nfork \n\nfork \n\nfork \n\nunlink \n\nA \nB \n\nUntrusted Read \n\nL \n\nD \n\nUntrusted \nFile Exec \n\nC \n\nC \n\nrecv \n\nexec \n\nG \n\nUntrusted \nFile Exec \n\nC \n\nF exec \n\nG \nE \n\nM \nShell \nExec \n\nfork \n\nE \nF \n\nUntrusted \nFile Rm \n\nM \n\nunlink \n\n\nThe design of HOLMES makes it possible to take additional inputs such as events and alerts from a variety of IDS/IPS, but we do not discuss this aspect of the system further in paper.\nACKNOWLEDGMENTSWe thank Guofei Gu for the helpful review comments and suggestions to the manuscript. This work was primarily supported by DARPA (under AFOSR contract FA8650-15-C-7561) and in part by SPAWAR (N6600118C4035), NSF (CNS-1319137, CNS-1514472, and DGE-1069311), and ONR (N00014-15-1-2378, and N00014-17-1-2891). The views, opinions, and/or findings expressed are those of the authors and should not be interpreted as representing the official views or policies of the Department of Defense, National Science Foundation or the U.S. Government.\nAbout the metasploit meterpreter. About the metasploit meterpreter. https://www.offensive-security.com/ metasploit-unleashed/about-meterpreter/.\n\nAdversarial tactics, techniques and common knowledge. Adversarial tactics, techniques and common knowledge. https://attack. mitre.org/wiki/Main Page.\n\n. Apt Notes, APT Notes. https://github.com/kbandla/APTnotes. Accessed: 2016-11- 10.\n\nCAPEC: Common Attack Pattern Enumeration and Classification. CAPEC: Common Attack Pattern Enumeration and Classification. https: //capec.mitre.org/index.html. Accessed: 2018-02-27.\n\nCommon vulnerability scoring system v3.0: Specification document. Common vulnerability scoring system v3.0: Specification document. https://www.first.org/cvss/specification-document.\n\n. Siem Ibm Qradar, IBM QRadar SIEM. https://www.ibm.com/us-en/marketplace/ ibm-qradar-siem.\n\n. Logrhythm, Logrhythm, the security intelligence company. https://logrhythm.com/.\n\nMANDIANT: Exposing One of China's Cyber Espionage Units. MANDIANT: Exposing One of China's Cyber Espionage Units. https://www.fireeye.com/content/dam/fireeye-www/services/pdfs/ mandiant-apt1-report.pdf. Accessed: 2016-11-10.\n\nServer message block (smb) protocol versions 2 and 3. ms-smb2[ms-smb2]: Server message block (smb) protocol versions 2 and 3. https://msdn.microsoft.com/en-us/library/cc246231.aspx.\n\nApplication Management, Log Management. Aiops Siem, Machine Learning, and Compliance. SIEM, AIOps, Application Management, Log Management, Machine Learning, and Compliance. https://www.splunk.com/.\n\nFlowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps. Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexandre Bartel, Jacques Klein, Yves Le Traon, Damien Octeau, Patrick Mcdaniel, SIGPLAN Not. Steven Arzt, Siegfried Rasthofer, Christian Fritz, Eric Bodden, Alexan- dre Bartel, Jacques Klein, Yves Le Traon, Damien Octeau, and Patrick McDaniel. Flowdroid: Precise context, flow, field, object-sensitive and lifecycle-aware taint analysis for android apps. SIGPLAN Not., 2014.\n\nTrustworthy whole-system provenance for the linux kernel. Adam Bates, Dave Jing Tian, R B Kevin, Thomas Butler, Moyer, USENIX Security. Adam Bates, Dave Jing Tian, Kevin RB Butler, and Thomas Moyer. Trustworthy whole-system provenance for the linux kernel. In USENIX Security, 2015.\n\nMalicious behavior detection using windows audit logs. Konstantin Berlin, David Slater, Joshua Saxe, Proceedings of the 8th ACM Workshop on Artificial Intelligence and Security. the 8th ACM Workshop on Artificial Intelligence and SecurityKonstantin Berlin, David Slater, and Joshua Saxe. Malicious behavior detection using windows audit logs. In Proceedings of the 8th ACM Workshop on Artificial Intelligence and Security, 2015.\n\nDecoupling dynamic program analysis from execution in virtual environments. Jim Chow, Peter M Garfinkel, Chen, USENIX 2008 Annual Technical Conference on Annual Technical Conference. Jim Chow, Tal Garfinkel, and Peter M Chen. Decoupling dynamic program analysis from execution in virtual environments. In USENIX 2008 Annual Technical Conference on Annual Technical Conference, pages 1-14, 2008.\n\nAggregation and correlation of intrusion-detection alerts. Herv\u00e9 Debar, Andreas Wespi, RAID. SpringerHerv\u00e9 Debar and Andreas Wespi. Aggregation and correlation of intrusion-detection alerts. In RAID. Springer, 2001.\n\nA sense of self for unix processes. Stephanie Forrest, Steven Hofmeyr, Aniln Somayaji, Thomas Longstaff, S&P. IEEE. Stephanie Forrest, Steven Hofmeyr, Aniln Somayaji, Thomas Longstaff, et al. A sense of self for unix processes. In S&P. IEEE, 1996.\n\nGray-box extraction of execution graphs for anomaly detection. Debin Gao, K Michael, Dawn Reiter, Song, CCS. ACMDebin Gao, Michael K Reiter, and Dawn Song. Gray-box extraction of execution graphs for anomaly detection. In CCS. ACM, 2004.\n\nSpade: support for provenance auditing in distributed environments. Ashish Gehani, Dawood Tariq, Proceedings of the 13th International Middleware Conference. the 13th International Middleware ConferenceSpringerAshish Gehani and Dawood Tariq. Spade: support for provenance auditing in distributed environments. In Proceedings of the 13th International Middleware Conference. Springer, 2012.\n\nForensix: a robust, high-performance reconstruction system. A Goel, W C Feng, D Maier, W C Feng, J Walpole, 25th IEEE International Conference on Distributed Computing Systems Workshops. A. Goel, W. C. Feng, D. Maier, W. C. Feng, and J. Walpole. Forensix: a robust, high-performance reconstruction system. In 25th IEEE In- ternational Conference on Distributed Computing Systems Workshops, 2005.\n\nThe taser intrusion recovery system. Ashvin Goel, Kenneth Po, Kamran Farhadi, Zheng Li, Lara, SIGOPS Oper. Syst. Rev. Ashvin Goel, Kenneth Po, Kamran Farhadi, Zheng Li, and Eyal de Lara. The taser intrusion recovery system. SIGOPS Oper. Syst. Rev., 2005.\n\nBothunter: Detecting malware infection through ids-driven dialog correlation. Guofei Gu, Phillip Porras, Vinod Yegneswaran, Martin Fong, 16th USENIX Security Symposium (USENIX Security 07). USENIX Association. Guofei Gu, Phillip Porras, Vinod Yegneswaran, and Martin Fong. Bothunter: Detecting malware infection through ids-driven dialog cor- relation. In 16th USENIX Security Symposium (USENIX Security 07). USENIX Association, 2007.\n\nSLEUTH: Real-time attack scenario reconstruction from COTS audit data. Md Nahid Hossain, M Sadegh, Junao Milajerdi, Birhanu Wang, Eshete, R Gjomemo, Scott Sekar, V N Stoller, Venkatakrishnan, 26th USENIX Security Symposium (USENIX Security 17). Vancouver, BCUSENIX AssociationMd Nahid Hossain, Sadegh M. Milajerdi, Junao Wang, Birhanu Eshete, Rigel Gjomemo, R. Sekar, Scott Stoller, and V.N. Venkatakrishnan. SLEUTH: Real-time attack scenario reconstruction from COTS audit data. In 26th USENIX Security Symposium (USENIX Security 17), pages 487-504, Vancouver, BC, 2017. USENIX Association.\n\nDependence preserving data compaction for scalable forensic analysis. Junao Md Nahid Hossain, R Wang, Scott Sekar, Stoller, USENIX Security Symposium. USENIX Association. Md Nahid Hossain, Junao Wang, R. Sekar, and Scott Stoller. Depen- dence preserving data compaction for scalable forensic analysis. In USENIX Security Symposium. USENIX Association, 2018.\n\nRain: Refinable attack investigation with on-demand inter-process information flow tracking. Yang Ji, Sangho Lee, Evan Downing, Weiren Wang, Mattia Fazzini, Taesoo Kim, Alessandro Orso, Wenke Lee, Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security. the 2017 ACM SIGSAC Conference on Computer and Communications SecurityACMYang Ji, Sangho Lee, Evan Downing, Weiren Wang, Mattia Fazzini, Taesoo Kim, Alessandro Orso, and Wenke Lee. Rain: Refinable attack investigation with on-demand inter-process information flow tracking. In Proceedings of the 2017 ACM SIGSAC Conference on Computer and Communications Security, pages 377-390. ACM, 2017.\n\nP Vasileios, Georgios Kemerlis, Kangkook Portokalidis, Angelos D Jee, Keromytis, Libdft, Practical Dynamic Data Flow Tracking for Commodity Systems. SIGPLAN Not. Vasileios P. Kemerlis, Georgios Portokalidis, Kangkook Jee, and Ange- los D. Keromytis. Libdft: Practical Dynamic Data Flow Tracking for Commodity Systems. SIGPLAN Not., 2012.\n\nTransparent computing engagement 3 data release. D Angelos, Keromytis, Angelos D. Keromytis. Transparent computing engagement 3 data release. https://github.com/darpa-i2o/Transparent-Computing, 2018.\n\nBacktracking intrusions. T Samuel, King, Peter M Chen, SOSP. ACM. Samuel T King and Peter M Chen. Backtracking intrusions. In SOSP. ACM, 2003.\n\nEnriching intrusion alerts through multi-host causality. T Samuel, Zhuoqing Morley King, Dominic G Mao, Peter M Lucchetti, Chen, NDSS. Samuel T King, Zhuoqing Morley Mao, Dominic G Lucchetti, and Peter M Chen. Enriching intrusion alerts through multi-host causality. In NDSS, 2005.\n\nExecution monitoring of security-critical programs in distributed systems: A specificationbased approach. Calvin Ko, Manfred Ruschitzka, Karl Levitt, S&P. IEEE. Calvin Ko, Manfred Ruschitzka, and Karl Levitt. Execution monitoring of security-critical programs in distributed systems: A specification- based approach. In S&P. IEEE, 1997.\n\nIntrusion detection and correlation: challenges and solutions. Christopher Kruegel, Fredrik Valeur, Giovanni Vigna, Springer Science & Business Media14Christopher Kruegel, Fredrik Valeur, and Giovanni Vigna. Intrusion de- tection and correlation: challenges and solutions, volume 14. Springer Science & Business Media, 2004.\n\nAnomaly detection of webbased attacks. Christopher Kruegel, Giovanni Vigna, CCS. ACM. Christopher Kruegel and Giovanni Vigna. Anomaly detection of web- based attacks. In CCS. ACM, 2003.\n\nClassification and detection of computer intrusions. Sandeep Kumar, Purdue UniversityPhD thesisSandeep Kumar. Classification and detection of computer intrusions. PhD thesis, PhD thesis, Purdue University, 1995.\n\nModeling-based causality inference in audit logging for attack investigation. Yonghwi Kwon, Fei Wang, Weihang Wang, Kyu Hyung Lee, Wen-Chuan Lee, Shiqing Ma, Xiangyu Zhang, Dongyan Xu, Somesh Jha, Gabriela Ciocarlie, Proc. of the 25th Network and Distributed System Security Symposium (NDSS18). of the 25th Network and Distributed System Security Symposium (NDSS18)Yonghwi Kwon, Fei Wang, Weihang Wang, Kyu Hyung Lee, Wen- Chuan Lee, Shiqing Ma, Xiangyu Zhang, Dongyan Xu, Somesh Jha, Gabriela Ciocarlie, et al. Mci: Modeling-based causality inference in audit logging for attack investigation. In Proc. of the 25th Network and Distributed System Security Symposium (NDSS18), 2018.\n\nHigh accuracy attack provenance via binary-based execution partition. Xiangyu Kyu Hyung Lee, Dongyan Zhang, Xu, NDSS. Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. High accuracy attack provenance via binary-based execution partition. In NDSS, 2013.\n\nA data mining framework for building intrusion detection models. Wenke Lee, J Salvatore, Kui W Stolfo, Mok, S&P. IEEE. Wenke Lee, Salvatore J Stolfo, and Kui W Mok. A data mining framework for building intrusion detection models. In S&P. IEEE, 1999.\n\nTowards a timely causality analysis for enterprise security. Yushan Liu, Mu Zhang, Ding Li, Kangkook Jee, Zhichun Li, Zhenyu Wu, Junghwan Rhee, Prateek Mittal, Network and Distributed Systems Security Symposium. Yushan Liu, Mu Zhang, Ding Li, Kangkook Jee, Zhichun Li, Zhenyu Wu, Junghwan Rhee, and Prateek Mittal. Towards a timely causality analysis for enterprise security. In Network and Distributed Systems Security Symposium, 2018.\n\nPropatrol: Attack investigation via extracted highlevel tasks. M Sadegh, Birhanu Milajerdi, Rigel Eshete, V N Gjomemo, Venkatakrishnan, International Conference on Information Systems Security. SpringerSadegh M. Milajerdi, Birhanu Eshete, Rigel Gjomemo, and V.N. Venkatakrishnan. Propatrol: Attack investigation via extracted high- level tasks. In International Conference on Information Systems Security. Springer, 2018.\n\nMpi: Multiple perspective attack investigation with semantics aware execution partitioning. Shiqing Ma, Juan Zhai, Fei Wang, Xiangyu Kyu Hyung Lee, Dongyan Zhang, Xu, 26th {USENIX} Security Symposium ({USENIX} Security 17). Shiqing Ma, Juan Zhai, Fei Wang, Kyu Hyung Lee, Xiangyu Zhang, and Dongyan Xu. Mpi: Multiple perspective attack investigation with semantics aware execution partitioning. In 26th {USENIX} Security Symposium ({USENIX} Security 17), pages 1111-1128, 2017.\n\nProTracer: Towards practical provenance tracing by alternating between logging and tainting. Shiqing Ma, Xiangyu Zhang, Dongyan Xu, NDSS. Shiqing Ma, Xiangyu Zhang, and Dongyan Xu. ProTracer: Towards practical provenance tracing by alternating between logging and taint- ing. In NDSS, 2016.\n\nFast memory-efficient anomaly detection in streaming heterogeneous graphs. Emaad Manzoor, M Sadegh, Leman Milajerdi, Akoglu, Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data MiningACMEmaad Manzoor, Sadegh M Milajerdi, and Leman Akoglu. Fast memory-efficient anomaly detection in streaming heterogeneous graphs. In Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pages 1035-1044. ACM, 2016.\n\nStraighttaint: Decoupled offline symbolic taint analysis. Jiang Ming, Dinghao Wu, Jun Wang, Gaoyao Xiao, Peng Liu, Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering. the 31st IEEE/ACM International Conference on Automated Software EngineeringACMJiang Ming, Dinghao Wu, Jun Wang, Gaoyao Xiao, and Peng Liu. Straighttaint: Decoupled offline symbolic taint analysis. In Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering, pages 308-319. ACM, 2016.\n\nLearning attack strategies from intrusion alerts. Peng Ning, Dingbang Xu, CCS. ACM. Peng Ning and Dingbang Xu. Learning attack strategies from intrusion alerts. In CCS. ACM, 2003.\n\nCorrelating intrusion events and building attack scenarios through attack graph distances. Steven Noel, Eric Robertson, Sushil Jajodia, ACSAC. IEEESteven Noel, Eric Robertson, and Sushil Jajodia. Correlating intrusion events and building attack scenarios through attack graph distances. In ACSAC. IEEE, 2004.\n\nRuntime analysis of whole-system provenance. Thomas Pasquier, Xueyuan Han, Thomas Moyer, Adam Bates, Olivier Hermant, David Eyers, Jean Bacon, Margo Seltzer, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18. the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18New York, NY, USAACMThomas Pasquier, Xueyuan Han, Thomas Moyer, Adam Bates, Olivier Hermant, David Eyers, Jean Bacon, and Margo Seltzer. Runtime analysis of whole-system provenance. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18, pages 1601-1616, New York, NY, USA, 2018. ACM.\n\nHercule: Attack story reconstruction via community discovery on correlated log graph. Kexin Pei, Zhongshu Gu, Brendan Saltaformaggio, Shiqing Ma, Fei Wang, Zhiwei Zhang, Luo Si, Xiangyu Zhang, Dongyan Xu, Proceedings of the 32Nd Annual Conference on Computer Security Applications. the 32Nd Annual Conference on Computer Security ApplicationsACMKexin Pei, Zhongshu Gu, Brendan Saltaformaggio, Shiqing Ma, Fei Wang, Zhiwei Zhang, Luo Si, Xiangyu Zhang, and Dongyan Xu. Her- cule: Attack story reconstruction via community discovery on correlated log graph. In Proceedings of the 32Nd Annual Conference on Computer Security Applications, pages 583-595. ACM, 2016.\n\nHi-fi: collecting high-fidelity whole-system provenance. J Devin, Stephen Pohly, Patrick Mclaughlin, Kevin Mcdaniel, Butler, ACSAC. ACMDevin J Pohly, Stephen McLaughlin, Patrick McDaniel, and Kevin Butler. Hi-fi: collecting high-fidelity whole-system provenance. In ACSAC. ACM, 2012.\n\nPenetration state transition analysis: A rule-based intrusion detection approach. A Phillip, Richard A Porras, Kemmerer, Computer Security Applications Conference, 1992. Proceedings., Eighth Annual. IEEEPhillip A Porras and Richard A Kemmerer. Penetration state transition analysis: A rule-based intrusion detection approach. In Computer Security Applications Conference, 1992. Proceedings., Eighth Annual, pages 220-229. IEEE, 1992.\n\nStatistical causality analysis of infosec alert data. Xinzhou Qin, Wenke Lee, RAID. SpringerXinzhou Qin and Wenke Lee. Statistical causality analysis of infosec alert data. In RAID. Springer, 2003.\n\nA fast automaton-based method for detecting anomalous program behaviors. R Sekar, Mugdha Bendre, Dinakar Dhurjati, Pradeep Bollineni, S&P. IEEE. R Sekar, Mugdha Bendre, Dinakar Dhurjati, and Pradeep Bollineni. A fast automaton-based method for detecting anomalous program behaviors. In S&P. IEEE, 2001.\n\nThreat intelligence computing. Xiaokui Shu, Frederico Araujo, Douglas L Schales, Marc Ph Stoecklin, Jiyong Jang, Heqing Huang, Josyula R Rao, Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18. the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18New York, NY, USAACMXiaokui Shu, Frederico Araujo, Douglas L. Schales, Marc Ph. Stoecklin, Jiyong Jang, Heqing Huang, and Josyula R. Rao. Threat intelligence computing. In Proceedings of the 2018 ACM SIGSAC Conference on Computer and Communications Security, CCS '18, pages 1883-1898, New York, NY, USA, 2018. ACM.\n\nUnearthing stealthy program attacks buried in extremely long execution paths. Xiaokui Shu, Danfeng Yao, Naren Ramakrishnan, CCS. ACMXiaokui Shu, Danfeng Yao, and Naren Ramakrishnan. Unearthing stealthy program attacks buried in extremely long execution paths. In CCS. ACM, 2015.\n\nExperiences with specification-based intrusion detection. Prem Uppuluri, Sekar, RAID. SpringerPrem Uppuluri and R Sekar. Experiences with specification-based intrusion detection. In RAID. Springer, 2001.\n\nFear and logging in the internet of things. Qi Wang, Wajih Ul Hassan, Adam Bates, Carl Gunter, Network and Distributed Systems Symposium. Qi Wang, Wajih Ul Hassan, Adam Bates, and Carl Gunter. Fear and logging in the internet of things. In Network and Distributed Systems Symposium, 2018.\n\nA graph based approach toward network forensics analysis. Wei Wang, Thomas E Daniels, Transactions on Information and System Security (TISSEC). Wei Wang and Thomas E Daniels. A graph based approach toward network forensics analysis. Transactions on Information and System Security (TISSEC), 2008.\n\nIntegrating ids alert correlation and os-level dependency tracking. Yan Zhai, Peng Ning, Jun Xu, International Conference on Intelligence and Security Informatics. SpringerYan Zhai, Peng Ning, and Jun Xu. Integrating ids alert correlation and os-level dependency tracking. In International Conference on Intelligence and Security Informatics, pages 272-284. Springer, 2006.\n", "annotations": {"author": "[{\"end\":201,\"start\":87},{\"end\":311,\"start\":202},{\"end\":440,\"start\":312},{\"end\":568,\"start\":441},{\"end\":684,\"start\":569}]", "publisher": null, "author_last_name": "[{\"end\":105,\"start\":96},{\"end\":215,\"start\":208},{\"end\":326,\"start\":320},{\"end\":448,\"start\":443},{\"end\":588,\"start\":573}]", "author_first_name": "[{\"end\":93,\"start\":87},{\"end\":95,\"start\":94},{\"end\":207,\"start\":202},{\"end\":319,\"start\":312},{\"end\":442,\"start\":441},{\"end\":570,\"start\":569},{\"end\":572,\"start\":571}]", "author_affiliation": "[{\"end\":200,\"start\":107},{\"end\":310,\"start\":217},{\"end\":439,\"start\":346},{\"end\":567,\"start\":474},{\"end\":683,\"start\":590}]", "title": "[{\"end\":84,\"start\":1},{\"end\":768,\"start\":685}]", "venue": null, "abstract": "[{\"end\":1989,\"start\":770}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b7\"},\"end\":2103,\"start\":2100},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3738,\"start\":3735},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4503,\"start\":4499},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":4518,\"start\":4515},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":4537,\"start\":4534},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11829,\"start\":11825},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":15050,\"start\":15047},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":16438,\"start\":16435},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":19283,\"start\":19279},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":19289,\"start\":19285},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":19295,\"start\":19291},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":19301,\"start\":19297},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":19899,\"start\":19898},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":20486,\"start\":20482},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":20492,\"start\":20488},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":20665,\"start\":20661},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":20671,\"start\":20667},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":20677,\"start\":20673},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":21271,\"start\":21267},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":21555,\"start\":21551},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":21561,\"start\":21557},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":22980,\"start\":22976},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":22986,\"start\":22982},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":24697,\"start\":24694},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":33824,\"start\":33821},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":34919,\"start\":34916},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":36801,\"start\":36797},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":37709,\"start\":37705},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":37715,\"start\":37711},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":37721,\"start\":37717},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":37727,\"start\":37723},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":42277,\"start\":42273},{\"end\":48461,\"start\":48450},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":49022,\"start\":49019},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":49025,\"start\":49022},{\"end\":49252,\"start\":49240},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":53022,\"start\":53018},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":54450,\"start\":54446},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":54456,\"start\":54452},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":54514,\"start\":54511},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":54533,\"start\":54529},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":54539,\"start\":54535},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":54545,\"start\":54541},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":54551,\"start\":54547},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":54557,\"start\":54553},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":54563,\"start\":54559},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":54569,\"start\":54565},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":54575,\"start\":54571},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":54679,\"start\":54675},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":54685,\"start\":54681},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":55217,\"start\":55213},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":55223,\"start\":55219},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":55773,\"start\":55769},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":55779,\"start\":55775},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":55785,\"start\":55781},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":55791,\"start\":55787},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":55797,\"start\":55793},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":55827,\"start\":55823},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":55944,\"start\":55940},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":56116,\"start\":56113},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":56121,\"start\":56118},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":56127,\"start\":56123},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":56696,\"start\":56692},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":57294,\"start\":57290},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":57662,\"start\":57658},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":57668,\"start\":57664},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":57674,\"start\":57670},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":57680,\"start\":57676},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":57686,\"start\":57682},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":57692,\"start\":57688},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":57698,\"start\":57694},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":57704,\"start\":57700},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":57710,\"start\":57706},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":57716,\"start\":57712},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":57859,\"start\":57855},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":57875,\"start\":57871},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":57889,\"start\":57885},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":58079,\"start\":58075},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":58462,\"start\":58458},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":58468,\"start\":58464},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":58474,\"start\":58470},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":58544,\"start\":58540},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":59888,\"start\":59884},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":59894,\"start\":59890},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":59931,\"start\":59927},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":59937,\"start\":59933},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":59943,\"start\":59939},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":59949,\"start\":59945},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":62909,\"start\":62906},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":62980,\"start\":62977}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":64876,\"start\":64851},{\"attributes\":{\"id\":\"fig_1\"},\"end\":64928,\"start\":64877},{\"attributes\":{\"id\":\"fig_2\"},\"end\":64990,\"start\":64929},{\"attributes\":{\"id\":\"fig_3\"},\"end\":65022,\"start\":64991},{\"attributes\":{\"id\":\"fig_5\"},\"end\":67114,\"start\":65023},{\"attributes\":{\"id\":\"fig_6\"},\"end\":67247,\"start\":67115},{\"attributes\":{\"id\":\"fig_8\"},\"end\":67673,\"start\":67248},{\"attributes\":{\"id\":\"fig_10\"},\"end\":67769,\"start\":67674},{\"attributes\":{\"id\":\"fig_11\"},\"end\":68191,\"start\":67770},{\"attributes\":{\"id\":\"fig_12\"},\"end\":68869,\"start\":68192},{\"attributes\":{\"id\":\"fig_13\"},\"end\":69075,\"start\":68870},{\"attributes\":{\"id\":\"fig_14\"},\"end\":69212,\"start\":69076},{\"attributes\":{\"id\":\"fig_15\"},\"end\":69370,\"start\":69213},{\"attributes\":{\"id\":\"fig_16\"},\"end\":69485,\"start\":69371},{\"attributes\":{\"id\":\"fig_17\"},\"end\":69685,\"start\":69486},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":69867,\"start\":69686},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":70248,\"start\":69868},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":70287,\"start\":70249},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":70555,\"start\":70288},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":72434,\"start\":70556}]", "paragraph": "[{\"end\":2650,\"start\":2008},{\"end\":3756,\"start\":2652},{\"end\":4120,\"start\":3758},{\"end\":4353,\"start\":4122},{\"end\":5367,\"start\":4355},{\"end\":5439,\"start\":5369},{\"end\":6259,\"start\":5441},{\"end\":7556,\"start\":6261},{\"end\":8572,\"start\":7558},{\"end\":9581,\"start\":8574},{\"end\":10572,\"start\":9583},{\"end\":10898,\"start\":10574},{\"end\":11830,\"start\":10924},{\"end\":12012,\"start\":11832},{\"end\":12291,\"start\":12014},{\"end\":13097,\"start\":12293},{\"end\":13591,\"start\":13099},{\"end\":14078,\"start\":13593},{\"end\":14361,\"start\":14080},{\"end\":15287,\"start\":14363},{\"end\":15935,\"start\":15289},{\"end\":16010,\"start\":15937},{\"end\":16127,\"start\":16012},{\"end\":16318,\"start\":16129},{\"end\":17198,\"start\":16320},{\"end\":17334,\"start\":17200},{\"end\":17934,\"start\":17336},{\"end\":18494,\"start\":17936},{\"end\":18853,\"start\":18496},{\"end\":19234,\"start\":18855},{\"end\":19745,\"start\":19236},{\"end\":20493,\"start\":19787},{\"end\":21871,\"start\":20495},{\"end\":22168,\"start\":21896},{\"end\":23179,\"start\":22170},{\"end\":23527,\"start\":23181},{\"end\":23782,\"start\":23529},{\"end\":24333,\"start\":23784},{\"end\":24972,\"start\":24335},{\"end\":25633,\"start\":24974},{\"end\":26665,\"start\":25635},{\"end\":26996,\"start\":26689},{\"end\":28237,\"start\":27034},{\"end\":29019,\"start\":28239},{\"end\":30328,\"start\":29021},{\"end\":30880,\"start\":30330},{\"end\":31202,\"start\":30882},{\"end\":31395,\"start\":31204},{\"end\":32607,\"start\":31418},{\"end\":33166,\"start\":32609},{\"end\":33865,\"start\":33206},{\"end\":35666,\"start\":33867},{\"end\":36075,\"start\":35668},{\"end\":36282,\"start\":36099},{\"end\":37979,\"start\":36284},{\"end\":38475,\"start\":37981},{\"end\":39700,\"start\":38477},{\"end\":41579,\"start\":39702},{\"end\":42321,\"start\":41611},{\"end\":42336,\"start\":42332},{\"end\":43780,\"start\":42352},{\"end\":44709,\"start\":43793},{\"end\":44924,\"start\":44711},{\"end\":44940,\"start\":44937},{\"end\":45697,\"start\":44942},{\"end\":46108,\"start\":45768},{\"end\":47004,\"start\":46110},{\"end\":47937,\"start\":47028},{\"end\":48194,\"start\":47939},{\"end\":48748,\"start\":48237},{\"end\":49424,\"start\":48750},{\"end\":51141,\"start\":49443},{\"end\":53023,\"start\":51164},{\"end\":53313,\"start\":53025},{\"end\":53704,\"start\":53315},{\"end\":54359,\"start\":53706},{\"end\":55621,\"start\":54361},{\"end\":58441,\"start\":55623},{\"end\":60084,\"start\":58443},{\"end\":62194,\"start\":60105},{\"end\":64329,\"start\":62196},{\"end\":64850,\"start\":64331}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":36098,\"start\":36076}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":23843,\"start\":23835},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":23901,\"start\":23894},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":34704,\"start\":34696},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":37200,\"start\":37193},{\"end\":42423,\"start\":42415},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":44762,\"start\":44755},{\"end\":44958,\"start\":44950},{\"end\":45283,\"start\":45275},{\"end\":48067,\"start\":48059}]", "section_header": "[{\"end\":2006,\"start\":1991},{\"end\":10922,\"start\":10901},{\"end\":19785,\"start\":19748},{\"end\":21894,\"start\":21874},{\"end\":26687,\"start\":26668},{\"end\":27032,\"start\":26999},{\"end\":31416,\"start\":31398},{\"end\":33204,\"start\":33169},{\"end\":41609,\"start\":41582},{\"end\":42330,\"start\":42324},{\"end\":42350,\"start\":42339},{\"end\":43791,\"start\":43783},{\"end\":44935,\"start\":44927},{\"end\":45766,\"start\":45742},{\"end\":47026,\"start\":47007},{\"end\":48235,\"start\":48197},{\"end\":49441,\"start\":49427},{\"end\":51162,\"start\":51144},{\"end\":60103,\"start\":60087},{\"end\":64860,\"start\":64852},{\"end\":64886,\"start\":64878},{\"end\":64938,\"start\":64930},{\"end\":65000,\"start\":64992},{\"end\":67124,\"start\":67116},{\"end\":67267,\"start\":67249},{\"end\":67684,\"start\":67675},{\"end\":67783,\"start\":67771},{\"end\":68211,\"start\":68193},{\"end\":68880,\"start\":68871},{\"end\":69223,\"start\":69214},{\"end\":69381,\"start\":69372},{\"end\":69496,\"start\":69487},{\"end\":69696,\"start\":69687},{\"end\":70259,\"start\":70250},{\"end\":70298,\"start\":70289}]", "table": "[{\"end\":69867,\"start\":69698},{\"end\":70248,\"start\":69976},{\"end\":72434,\"start\":71465}]", "figure_caption": "[{\"end\":64876,\"start\":64862},{\"end\":64928,\"start\":64888},{\"end\":64990,\"start\":64940},{\"end\":65022,\"start\":65002},{\"end\":67114,\"start\":65025},{\"end\":67247,\"start\":67126},{\"end\":67673,\"start\":67272},{\"end\":67769,\"start\":67687},{\"end\":68191,\"start\":67786},{\"end\":68869,\"start\":68216},{\"end\":69075,\"start\":68883},{\"end\":69212,\"start\":69078},{\"end\":69370,\"start\":69226},{\"end\":69485,\"start\":69384},{\"end\":69685,\"start\":69499},{\"end\":69976,\"start\":69870},{\"end\":70287,\"start\":70261},{\"end\":70555,\"start\":70300},{\"end\":71465,\"start\":70558}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":2875,\"start\":2867},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":4119,\"start\":4113},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":11403,\"start\":11397},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":11975,\"start\":11969},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":13813,\"start\":13807},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":14999,\"start\":14991},{\"end\":17193,\"start\":17187},{\"end\":18267,\"start\":18261},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":18330,\"start\":18324},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":25980,\"start\":25974},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27170,\"start\":27164},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":34148,\"start\":34142},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":36362,\"start\":36356},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":44528,\"start\":44515},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":44616,\"start\":44610},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":46191,\"start\":46184},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":47330,\"start\":47317},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":47413,\"start\":47406},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":47966,\"start\":47959},{\"end\":48360,\"start\":48356},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":49462,\"start\":49455},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":49860,\"start\":49846},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":50056,\"start\":50041},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":50842,\"start\":50835},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":52171,\"start\":52164},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":60622,\"start\":60614},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":61534,\"start\":61525},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":62238,\"start\":62229},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":62962,\"start\":62953},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":63533,\"start\":63524},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":63897,\"start\":63887},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":64848,\"start\":64841}]", "bib_author_first_name": "[{\"end\":73926,\"start\":73922},{\"end\":74551,\"start\":74546},{\"end\":74822,\"start\":74816},{\"end\":74838,\"start\":74829},{\"end\":74859,\"start\":74850},{\"end\":74871,\"start\":74867},{\"end\":74889,\"start\":74880},{\"end\":74905,\"start\":74898},{\"end\":74917,\"start\":74913},{\"end\":74920,\"start\":74918},{\"end\":74934,\"start\":74928},{\"end\":74950,\"start\":74943},{\"end\":75319,\"start\":75315},{\"end\":75331,\"start\":75327},{\"end\":75336,\"start\":75332},{\"end\":75344,\"start\":75343},{\"end\":75346,\"start\":75345},{\"end\":75360,\"start\":75354},{\"end\":75606,\"start\":75596},{\"end\":75620,\"start\":75615},{\"end\":75635,\"start\":75629},{\"end\":76050,\"start\":76047},{\"end\":76064,\"start\":76057},{\"end\":76431,\"start\":76426},{\"end\":76446,\"start\":76439},{\"end\":76629,\"start\":76620},{\"end\":76645,\"start\":76639},{\"end\":76660,\"start\":76655},{\"end\":76677,\"start\":76671},{\"end\":76901,\"start\":76896},{\"end\":76908,\"start\":76907},{\"end\":76922,\"start\":76918},{\"end\":77146,\"start\":77140},{\"end\":77161,\"start\":77155},{\"end\":77524,\"start\":77523},{\"end\":77532,\"start\":77531},{\"end\":77534,\"start\":77533},{\"end\":77542,\"start\":77541},{\"end\":77551,\"start\":77550},{\"end\":77553,\"start\":77552},{\"end\":77561,\"start\":77560},{\"end\":77903,\"start\":77897},{\"end\":77917,\"start\":77910},{\"end\":77928,\"start\":77922},{\"end\":77943,\"start\":77938},{\"end\":78200,\"start\":78194},{\"end\":78212,\"start\":78205},{\"end\":78226,\"start\":78221},{\"end\":78246,\"start\":78240},{\"end\":78642,\"start\":78641},{\"end\":78656,\"start\":78651},{\"end\":78675,\"start\":78668},{\"end\":78691,\"start\":78690},{\"end\":78706,\"start\":78701},{\"end\":78715,\"start\":78714},{\"end\":78717,\"start\":78716},{\"end\":79220,\"start\":79215},{\"end\":79240,\"start\":79239},{\"end\":79252,\"start\":79247},{\"end\":79601,\"start\":79597},{\"end\":79612,\"start\":79606},{\"end\":79622,\"start\":79618},{\"end\":79638,\"start\":79632},{\"end\":79651,\"start\":79645},{\"end\":79667,\"start\":79661},{\"end\":79683,\"start\":79673},{\"end\":79695,\"start\":79690},{\"end\":80180,\"start\":80179},{\"end\":80200,\"start\":80192},{\"end\":80219,\"start\":80211},{\"end\":80241,\"start\":80234},{\"end\":80243,\"start\":80242},{\"end\":80568,\"start\":80567},{\"end\":80745,\"start\":80744},{\"end\":80921,\"start\":80920},{\"end\":80938,\"start\":80930},{\"end\":80945,\"start\":80939},{\"end\":80959,\"start\":80952},{\"end\":80961,\"start\":80960},{\"end\":80974,\"start\":80967},{\"end\":81258,\"start\":81252},{\"end\":81270,\"start\":81263},{\"end\":81287,\"start\":81283},{\"end\":81558,\"start\":81547},{\"end\":81575,\"start\":81568},{\"end\":81592,\"start\":81584},{\"end\":81860,\"start\":81849},{\"end\":81878,\"start\":81870},{\"end\":82057,\"start\":82050},{\"end\":82295,\"start\":82288},{\"end\":82305,\"start\":82302},{\"end\":82319,\"start\":82312},{\"end\":82335,\"start\":82326},{\"end\":82350,\"start\":82341},{\"end\":82363,\"start\":82356},{\"end\":82375,\"start\":82368},{\"end\":82390,\"start\":82383},{\"end\":82401,\"start\":82395},{\"end\":82415,\"start\":82407},{\"end\":82970,\"start\":82963},{\"end\":82993,\"start\":82986},{\"end\":83213,\"start\":83208},{\"end\":83220,\"start\":83219},{\"end\":83237,\"start\":83232},{\"end\":83461,\"start\":83455},{\"end\":83469,\"start\":83467},{\"end\":83481,\"start\":83477},{\"end\":83494,\"start\":83486},{\"end\":83507,\"start\":83500},{\"end\":83518,\"start\":83512},{\"end\":83531,\"start\":83523},{\"end\":83545,\"start\":83538},{\"end\":83896,\"start\":83895},{\"end\":83912,\"start\":83905},{\"end\":83929,\"start\":83924},{\"end\":83939,\"start\":83938},{\"end\":83941,\"start\":83940},{\"end\":84354,\"start\":84347},{\"end\":84363,\"start\":84359},{\"end\":84373,\"start\":84370},{\"end\":84387,\"start\":84380},{\"end\":84410,\"start\":84403},{\"end\":84834,\"start\":84827},{\"end\":84846,\"start\":84839},{\"end\":84861,\"start\":84854},{\"end\":85106,\"start\":85101},{\"end\":85117,\"start\":85116},{\"end\":85131,\"start\":85126},{\"end\":85660,\"start\":85655},{\"end\":85674,\"start\":85667},{\"end\":85682,\"start\":85679},{\"end\":85695,\"start\":85689},{\"end\":85706,\"start\":85702},{\"end\":86180,\"start\":86176},{\"end\":86195,\"start\":86187},{\"end\":86404,\"start\":86398},{\"end\":86415,\"start\":86411},{\"end\":86433,\"start\":86427},{\"end\":86668,\"start\":86662},{\"end\":86686,\"start\":86679},{\"end\":86698,\"start\":86692},{\"end\":86710,\"start\":86706},{\"end\":86725,\"start\":86718},{\"end\":86740,\"start\":86735},{\"end\":86752,\"start\":86748},{\"end\":86765,\"start\":86760},{\"end\":87370,\"start\":87365},{\"end\":87384,\"start\":87376},{\"end\":87396,\"start\":87389},{\"end\":87420,\"start\":87413},{\"end\":87428,\"start\":87425},{\"end\":87441,\"start\":87435},{\"end\":87452,\"start\":87449},{\"end\":87464,\"start\":87457},{\"end\":87479,\"start\":87472},{\"end\":88000,\"start\":87999},{\"end\":88015,\"start\":88008},{\"end\":88030,\"start\":88023},{\"end\":88048,\"start\":88043},{\"end\":88310,\"start\":88309},{\"end\":88327,\"start\":88320},{\"end\":88329,\"start\":88328},{\"end\":88723,\"start\":88716},{\"end\":88734,\"start\":88729},{\"end\":88935,\"start\":88934},{\"end\":88949,\"start\":88943},{\"end\":88965,\"start\":88958},{\"end\":88983,\"start\":88976},{\"end\":89203,\"start\":89196},{\"end\":89218,\"start\":89209},{\"end\":89234,\"start\":89227},{\"end\":89236,\"start\":89235},{\"end\":89250,\"start\":89246},{\"end\":89253,\"start\":89251},{\"end\":89271,\"start\":89265},{\"end\":89284,\"start\":89278},{\"end\":89299,\"start\":89292},{\"end\":89301,\"start\":89300},{\"end\":89883,\"start\":89876},{\"end\":89896,\"start\":89889},{\"end\":89907,\"start\":89902},{\"end\":90140,\"start\":90136},{\"end\":90329,\"start\":90327},{\"end\":90344,\"start\":90336},{\"end\":90357,\"start\":90353},{\"end\":90369,\"start\":90365},{\"end\":90634,\"start\":90631},{\"end\":90647,\"start\":90641},{\"end\":90649,\"start\":90648},{\"end\":90942,\"start\":90939},{\"end\":90953,\"start\":90949},{\"end\":90963,\"start\":90960}]", "bib_author_last_name": "[{\"end\":73480,\"start\":73471},{\"end\":73937,\"start\":73927},{\"end\":74024,\"start\":74015},{\"end\":74556,\"start\":74552},{\"end\":74827,\"start\":74823},{\"end\":74848,\"start\":74839},{\"end\":74865,\"start\":74860},{\"end\":74878,\"start\":74872},{\"end\":74896,\"start\":74890},{\"end\":74911,\"start\":74906},{\"end\":74926,\"start\":74921},{\"end\":74941,\"start\":74935},{\"end\":74959,\"start\":74951},{\"end\":75325,\"start\":75320},{\"end\":75341,\"start\":75337},{\"end\":75352,\"start\":75347},{\"end\":75367,\"start\":75361},{\"end\":75374,\"start\":75369},{\"end\":75613,\"start\":75607},{\"end\":75627,\"start\":75621},{\"end\":75640,\"start\":75636},{\"end\":76055,\"start\":76051},{\"end\":76074,\"start\":76065},{\"end\":76080,\"start\":76076},{\"end\":76437,\"start\":76432},{\"end\":76452,\"start\":76447},{\"end\":76637,\"start\":76630},{\"end\":76653,\"start\":76646},{\"end\":76669,\"start\":76661},{\"end\":76687,\"start\":76678},{\"end\":76905,\"start\":76902},{\"end\":76916,\"start\":76909},{\"end\":76929,\"start\":76923},{\"end\":76935,\"start\":76931},{\"end\":77153,\"start\":77147},{\"end\":77167,\"start\":77162},{\"end\":77529,\"start\":77525},{\"end\":77539,\"start\":77535},{\"end\":77548,\"start\":77543},{\"end\":77558,\"start\":77554},{\"end\":77569,\"start\":77562},{\"end\":77908,\"start\":77904},{\"end\":77920,\"start\":77918},{\"end\":77936,\"start\":77929},{\"end\":77946,\"start\":77944},{\"end\":77952,\"start\":77948},{\"end\":78203,\"start\":78201},{\"end\":78219,\"start\":78213},{\"end\":78238,\"start\":78227},{\"end\":78251,\"start\":78247},{\"end\":78639,\"start\":78623},{\"end\":78649,\"start\":78643},{\"end\":78666,\"start\":78657},{\"end\":78680,\"start\":78676},{\"end\":78688,\"start\":78682},{\"end\":78699,\"start\":78692},{\"end\":78712,\"start\":78707},{\"end\":78725,\"start\":78718},{\"end\":78742,\"start\":78727},{\"end\":79237,\"start\":79221},{\"end\":79245,\"start\":79241},{\"end\":79258,\"start\":79253},{\"end\":79267,\"start\":79260},{\"end\":79604,\"start\":79602},{\"end\":79616,\"start\":79613},{\"end\":79630,\"start\":79623},{\"end\":79643,\"start\":79639},{\"end\":79659,\"start\":79652},{\"end\":79671,\"start\":79668},{\"end\":79688,\"start\":79684},{\"end\":79699,\"start\":79696},{\"end\":80190,\"start\":80181},{\"end\":80209,\"start\":80201},{\"end\":80232,\"start\":80220},{\"end\":80247,\"start\":80244},{\"end\":80258,\"start\":80249},{\"end\":80266,\"start\":80260},{\"end\":80576,\"start\":80569},{\"end\":80587,\"start\":80578},{\"end\":80752,\"start\":80746},{\"end\":80758,\"start\":80754},{\"end\":80772,\"start\":80760},{\"end\":80928,\"start\":80922},{\"end\":80950,\"start\":80946},{\"end\":80965,\"start\":80962},{\"end\":80984,\"start\":80975},{\"end\":80990,\"start\":80986},{\"end\":81261,\"start\":81259},{\"end\":81281,\"start\":81271},{\"end\":81294,\"start\":81288},{\"end\":81566,\"start\":81559},{\"end\":81582,\"start\":81576},{\"end\":81598,\"start\":81593},{\"end\":81868,\"start\":81861},{\"end\":81884,\"start\":81879},{\"end\":82063,\"start\":82058},{\"end\":82300,\"start\":82296},{\"end\":82310,\"start\":82306},{\"end\":82324,\"start\":82320},{\"end\":82339,\"start\":82336},{\"end\":82354,\"start\":82351},{\"end\":82366,\"start\":82364},{\"end\":82381,\"start\":82376},{\"end\":82393,\"start\":82391},{\"end\":82405,\"start\":82402},{\"end\":82425,\"start\":82416},{\"end\":82984,\"start\":82971},{\"end\":82999,\"start\":82994},{\"end\":83003,\"start\":83001},{\"end\":83217,\"start\":83214},{\"end\":83230,\"start\":83221},{\"end\":83244,\"start\":83238},{\"end\":83249,\"start\":83246},{\"end\":83465,\"start\":83462},{\"end\":83475,\"start\":83470},{\"end\":83484,\"start\":83482},{\"end\":83498,\"start\":83495},{\"end\":83510,\"start\":83508},{\"end\":83521,\"start\":83519},{\"end\":83536,\"start\":83532},{\"end\":83552,\"start\":83546},{\"end\":83903,\"start\":83897},{\"end\":83922,\"start\":83913},{\"end\":83936,\"start\":83930},{\"end\":83949,\"start\":83942},{\"end\":83966,\"start\":83951},{\"end\":84357,\"start\":84355},{\"end\":84368,\"start\":84364},{\"end\":84378,\"start\":84374},{\"end\":84401,\"start\":84388},{\"end\":84416,\"start\":84411},{\"end\":84420,\"start\":84418},{\"end\":84837,\"start\":84835},{\"end\":84852,\"start\":84847},{\"end\":84864,\"start\":84862},{\"end\":85114,\"start\":85107},{\"end\":85124,\"start\":85118},{\"end\":85141,\"start\":85132},{\"end\":85149,\"start\":85143},{\"end\":85665,\"start\":85661},{\"end\":85677,\"start\":85675},{\"end\":85687,\"start\":85683},{\"end\":85700,\"start\":85696},{\"end\":85710,\"start\":85707},{\"end\":86185,\"start\":86181},{\"end\":86198,\"start\":86196},{\"end\":86409,\"start\":86405},{\"end\":86425,\"start\":86416},{\"end\":86441,\"start\":86434},{\"end\":86677,\"start\":86669},{\"end\":86690,\"start\":86687},{\"end\":86704,\"start\":86699},{\"end\":86716,\"start\":86711},{\"end\":86733,\"start\":86726},{\"end\":86746,\"start\":86741},{\"end\":86758,\"start\":86753},{\"end\":86773,\"start\":86766},{\"end\":87374,\"start\":87371},{\"end\":87387,\"start\":87385},{\"end\":87411,\"start\":87397},{\"end\":87423,\"start\":87421},{\"end\":87433,\"start\":87429},{\"end\":87447,\"start\":87442},{\"end\":87455,\"start\":87453},{\"end\":87470,\"start\":87465},{\"end\":87482,\"start\":87480},{\"end\":88006,\"start\":88001},{\"end\":88021,\"start\":88016},{\"end\":88041,\"start\":88031},{\"end\":88057,\"start\":88049},{\"end\":88065,\"start\":88059},{\"end\":88318,\"start\":88311},{\"end\":88336,\"start\":88330},{\"end\":88346,\"start\":88338},{\"end\":88727,\"start\":88724},{\"end\":88738,\"start\":88735},{\"end\":88941,\"start\":88936},{\"end\":88956,\"start\":88950},{\"end\":88974,\"start\":88966},{\"end\":88993,\"start\":88984},{\"end\":89207,\"start\":89204},{\"end\":89225,\"start\":89219},{\"end\":89244,\"start\":89237},{\"end\":89263,\"start\":89254},{\"end\":89276,\"start\":89272},{\"end\":89290,\"start\":89285},{\"end\":89305,\"start\":89302},{\"end\":89887,\"start\":89884},{\"end\":89900,\"start\":89897},{\"end\":89920,\"start\":89908},{\"end\":90149,\"start\":90141},{\"end\":90156,\"start\":90151},{\"end\":90334,\"start\":90330},{\"end\":90351,\"start\":90345},{\"end\":90363,\"start\":90358},{\"end\":90376,\"start\":90370},{\"end\":90639,\"start\":90635},{\"end\":90657,\"start\":90650},{\"end\":90947,\"start\":90943},{\"end\":90958,\"start\":90954},{\"end\":90966,\"start\":90964}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":73316,\"start\":73172},{\"attributes\":{\"id\":\"b1\"},\"end\":73467,\"start\":73318},{\"attributes\":{\"id\":\"b2\"},\"end\":73552,\"start\":73469},{\"attributes\":{\"id\":\"b3\"},\"end\":73734,\"start\":73554},{\"attributes\":{\"id\":\"b4\"},\"end\":73918,\"start\":73736},{\"attributes\":{\"id\":\"b5\"},\"end\":74011,\"start\":73920},{\"attributes\":{\"id\":\"b6\"},\"end\":74095,\"start\":74013},{\"attributes\":{\"id\":\"b7\"},\"end\":74321,\"start\":74097},{\"attributes\":{\"id\":\"b8\"},\"end\":74504,\"start\":74323},{\"attributes\":{\"id\":\"b9\"},\"end\":74703,\"start\":74506},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":12083354},\"end\":75255,\"start\":74705},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":857773},\"end\":75539,\"start\":75257},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":323392},\"end\":75969,\"start\":75541},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":3089664},\"end\":76365,\"start\":75971},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":8484541},\"end\":76582,\"start\":76367},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":206556577},\"end\":76831,\"start\":76584},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":1189805},\"end\":77070,\"start\":76833},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":7346628},\"end\":77461,\"start\":77072},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":934636},\"end\":77858,\"start\":77463},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":1999673},\"end\":78114,\"start\":77860},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":6001716},\"end\":78550,\"start\":78116},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":2553407},\"end\":79143,\"start\":78552},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":49562555},\"end\":79502,\"start\":79145},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1011845},\"end\":80177,\"start\":79504},{\"attributes\":{\"id\":\"b24\"},\"end\":80516,\"start\":80179},{\"attributes\":{\"id\":\"b25\"},\"end\":80717,\"start\":80518},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":8822373},\"end\":80861,\"start\":80719},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":7932598},\"end\":81144,\"start\":80863},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":1651980},\"end\":81482,\"start\":81146},{\"attributes\":{\"id\":\"b29\"},\"end\":81808,\"start\":81484},{\"attributes\":{\"id\":\"b30\"},\"end\":81995,\"start\":81810},{\"attributes\":{\"id\":\"b31\"},\"end\":82208,\"start\":81997},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":5022926},\"end\":82891,\"start\":82210},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":93090},\"end\":83141,\"start\":82893},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":15087039},\"end\":83392,\"start\":83143},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":51951640},\"end\":83830,\"start\":83394},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":53116554},\"end\":84253,\"start\":83832},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":31303772},\"end\":84732,\"start\":84255},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":2686304},\"end\":85024,\"start\":84734},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":6422348},\"end\":85595,\"start\":85026},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":14272323},\"end\":86124,\"start\":85597},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":7479770},\"end\":86305,\"start\":86126},{\"attributes\":{\"id\":\"b42\"},\"end\":86615,\"start\":86307},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":52049712},\"end\":87277,\"start\":86617},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":5196694},\"end\":87940,\"start\":87279},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":5622944},\"end\":88225,\"start\":87942},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":6345780},\"end\":88660,\"start\":88227},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":4680884},\"end\":88859,\"start\":88662},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":15352648},\"end\":89163,\"start\":88861},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":53110735},\"end\":89796,\"start\":89165},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":2001265},\"end\":90076,\"start\":89798},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":15141257},\"end\":90281,\"start\":90078},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":3673561},\"end\":90571,\"start\":90283},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":14599144},\"end\":90869,\"start\":90573},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":5164465},\"end\":91244,\"start\":90871}]", "bib_title": "[{\"end\":74544,\"start\":74506},{\"end\":74814,\"start\":74705},{\"end\":75313,\"start\":75257},{\"end\":75594,\"start\":75541},{\"end\":76045,\"start\":75971},{\"end\":76424,\"start\":76367},{\"end\":76618,\"start\":76584},{\"end\":76894,\"start\":76833},{\"end\":77138,\"start\":77072},{\"end\":77521,\"start\":77463},{\"end\":77895,\"start\":77860},{\"end\":78192,\"start\":78116},{\"end\":78621,\"start\":78552},{\"end\":79213,\"start\":79145},{\"end\":79595,\"start\":79504},{\"end\":80742,\"start\":80719},{\"end\":80918,\"start\":80863},{\"end\":81250,\"start\":81146},{\"end\":81847,\"start\":81810},{\"end\":82286,\"start\":82210},{\"end\":82961,\"start\":82893},{\"end\":83206,\"start\":83143},{\"end\":83453,\"start\":83394},{\"end\":83893,\"start\":83832},{\"end\":84345,\"start\":84255},{\"end\":84825,\"start\":84734},{\"end\":85099,\"start\":85026},{\"end\":85653,\"start\":85597},{\"end\":86174,\"start\":86126},{\"end\":86660,\"start\":86617},{\"end\":87363,\"start\":87279},{\"end\":87997,\"start\":87942},{\"end\":88307,\"start\":88227},{\"end\":88714,\"start\":88662},{\"end\":88932,\"start\":88861},{\"end\":89194,\"start\":89165},{\"end\":89874,\"start\":89798},{\"end\":90134,\"start\":90078},{\"end\":90325,\"start\":90283},{\"end\":90629,\"start\":90573},{\"end\":90937,\"start\":90871}]", "bib_author": "[{\"end\":73482,\"start\":73471},{\"end\":73939,\"start\":73922},{\"end\":74026,\"start\":74015},{\"end\":74558,\"start\":74546},{\"end\":74829,\"start\":74816},{\"end\":74850,\"start\":74829},{\"end\":74867,\"start\":74850},{\"end\":74880,\"start\":74867},{\"end\":74898,\"start\":74880},{\"end\":74913,\"start\":74898},{\"end\":74928,\"start\":74913},{\"end\":74943,\"start\":74928},{\"end\":74961,\"start\":74943},{\"end\":75327,\"start\":75315},{\"end\":75343,\"start\":75327},{\"end\":75354,\"start\":75343},{\"end\":75369,\"start\":75354},{\"end\":75376,\"start\":75369},{\"end\":75615,\"start\":75596},{\"end\":75629,\"start\":75615},{\"end\":75642,\"start\":75629},{\"end\":76057,\"start\":76047},{\"end\":76076,\"start\":76057},{\"end\":76082,\"start\":76076},{\"end\":76439,\"start\":76426},{\"end\":76454,\"start\":76439},{\"end\":76639,\"start\":76620},{\"end\":76655,\"start\":76639},{\"end\":76671,\"start\":76655},{\"end\":76689,\"start\":76671},{\"end\":76907,\"start\":76896},{\"end\":76918,\"start\":76907},{\"end\":76931,\"start\":76918},{\"end\":76937,\"start\":76931},{\"end\":77155,\"start\":77140},{\"end\":77169,\"start\":77155},{\"end\":77531,\"start\":77523},{\"end\":77541,\"start\":77531},{\"end\":77550,\"start\":77541},{\"end\":77560,\"start\":77550},{\"end\":77571,\"start\":77560},{\"end\":77910,\"start\":77897},{\"end\":77922,\"start\":77910},{\"end\":77938,\"start\":77922},{\"end\":77948,\"start\":77938},{\"end\":77954,\"start\":77948},{\"end\":78205,\"start\":78194},{\"end\":78221,\"start\":78205},{\"end\":78240,\"start\":78221},{\"end\":78253,\"start\":78240},{\"end\":78641,\"start\":78623},{\"end\":78651,\"start\":78641},{\"end\":78668,\"start\":78651},{\"end\":78682,\"start\":78668},{\"end\":78690,\"start\":78682},{\"end\":78701,\"start\":78690},{\"end\":78714,\"start\":78701},{\"end\":78727,\"start\":78714},{\"end\":78744,\"start\":78727},{\"end\":79239,\"start\":79215},{\"end\":79247,\"start\":79239},{\"end\":79260,\"start\":79247},{\"end\":79269,\"start\":79260},{\"end\":79606,\"start\":79597},{\"end\":79618,\"start\":79606},{\"end\":79632,\"start\":79618},{\"end\":79645,\"start\":79632},{\"end\":79661,\"start\":79645},{\"end\":79673,\"start\":79661},{\"end\":79690,\"start\":79673},{\"end\":79701,\"start\":79690},{\"end\":80192,\"start\":80179},{\"end\":80211,\"start\":80192},{\"end\":80234,\"start\":80211},{\"end\":80249,\"start\":80234},{\"end\":80260,\"start\":80249},{\"end\":80268,\"start\":80260},{\"end\":80578,\"start\":80567},{\"end\":80589,\"start\":80578},{\"end\":80754,\"start\":80744},{\"end\":80760,\"start\":80754},{\"end\":80774,\"start\":80760},{\"end\":80930,\"start\":80920},{\"end\":80952,\"start\":80930},{\"end\":80967,\"start\":80952},{\"end\":80986,\"start\":80967},{\"end\":80992,\"start\":80986},{\"end\":81263,\"start\":81252},{\"end\":81283,\"start\":81263},{\"end\":81296,\"start\":81283},{\"end\":81568,\"start\":81547},{\"end\":81584,\"start\":81568},{\"end\":81600,\"start\":81584},{\"end\":81870,\"start\":81849},{\"end\":81886,\"start\":81870},{\"end\":82065,\"start\":82050},{\"end\":82302,\"start\":82288},{\"end\":82312,\"start\":82302},{\"end\":82326,\"start\":82312},{\"end\":82341,\"start\":82326},{\"end\":82356,\"start\":82341},{\"end\":82368,\"start\":82356},{\"end\":82383,\"start\":82368},{\"end\":82395,\"start\":82383},{\"end\":82407,\"start\":82395},{\"end\":82427,\"start\":82407},{\"end\":82986,\"start\":82963},{\"end\":83001,\"start\":82986},{\"end\":83005,\"start\":83001},{\"end\":83219,\"start\":83208},{\"end\":83232,\"start\":83219},{\"end\":83246,\"start\":83232},{\"end\":83251,\"start\":83246},{\"end\":83467,\"start\":83455},{\"end\":83477,\"start\":83467},{\"end\":83486,\"start\":83477},{\"end\":83500,\"start\":83486},{\"end\":83512,\"start\":83500},{\"end\":83523,\"start\":83512},{\"end\":83538,\"start\":83523},{\"end\":83554,\"start\":83538},{\"end\":83905,\"start\":83895},{\"end\":83924,\"start\":83905},{\"end\":83938,\"start\":83924},{\"end\":83951,\"start\":83938},{\"end\":83968,\"start\":83951},{\"end\":84359,\"start\":84347},{\"end\":84370,\"start\":84359},{\"end\":84380,\"start\":84370},{\"end\":84403,\"start\":84380},{\"end\":84418,\"start\":84403},{\"end\":84422,\"start\":84418},{\"end\":84839,\"start\":84827},{\"end\":84854,\"start\":84839},{\"end\":84866,\"start\":84854},{\"end\":85116,\"start\":85101},{\"end\":85126,\"start\":85116},{\"end\":85143,\"start\":85126},{\"end\":85151,\"start\":85143},{\"end\":85667,\"start\":85655},{\"end\":85679,\"start\":85667},{\"end\":85689,\"start\":85679},{\"end\":85702,\"start\":85689},{\"end\":85712,\"start\":85702},{\"end\":86187,\"start\":86176},{\"end\":86200,\"start\":86187},{\"end\":86411,\"start\":86398},{\"end\":86427,\"start\":86411},{\"end\":86443,\"start\":86427},{\"end\":86679,\"start\":86662},{\"end\":86692,\"start\":86679},{\"end\":86706,\"start\":86692},{\"end\":86718,\"start\":86706},{\"end\":86735,\"start\":86718},{\"end\":86748,\"start\":86735},{\"end\":86760,\"start\":86748},{\"end\":86775,\"start\":86760},{\"end\":87376,\"start\":87365},{\"end\":87389,\"start\":87376},{\"end\":87413,\"start\":87389},{\"end\":87425,\"start\":87413},{\"end\":87435,\"start\":87425},{\"end\":87449,\"start\":87435},{\"end\":87457,\"start\":87449},{\"end\":87472,\"start\":87457},{\"end\":87484,\"start\":87472},{\"end\":88008,\"start\":87999},{\"end\":88023,\"start\":88008},{\"end\":88043,\"start\":88023},{\"end\":88059,\"start\":88043},{\"end\":88067,\"start\":88059},{\"end\":88320,\"start\":88309},{\"end\":88338,\"start\":88320},{\"end\":88348,\"start\":88338},{\"end\":88729,\"start\":88716},{\"end\":88740,\"start\":88729},{\"end\":88943,\"start\":88934},{\"end\":88958,\"start\":88943},{\"end\":88976,\"start\":88958},{\"end\":88995,\"start\":88976},{\"end\":89209,\"start\":89196},{\"end\":89227,\"start\":89209},{\"end\":89246,\"start\":89227},{\"end\":89265,\"start\":89246},{\"end\":89278,\"start\":89265},{\"end\":89292,\"start\":89278},{\"end\":89307,\"start\":89292},{\"end\":89889,\"start\":89876},{\"end\":89902,\"start\":89889},{\"end\":89922,\"start\":89902},{\"end\":90151,\"start\":90136},{\"end\":90158,\"start\":90151},{\"end\":90336,\"start\":90327},{\"end\":90353,\"start\":90336},{\"end\":90365,\"start\":90353},{\"end\":90378,\"start\":90365},{\"end\":90641,\"start\":90631},{\"end\":90659,\"start\":90641},{\"end\":90949,\"start\":90939},{\"end\":90960,\"start\":90949},{\"end\":90968,\"start\":90960}]", "bib_venue": "[{\"end\":73204,\"start\":73172},{\"end\":73370,\"start\":73318},{\"end\":73613,\"start\":73554},{\"end\":73800,\"start\":73736},{\"end\":74152,\"start\":74097},{\"end\":74375,\"start\":74323},{\"end\":74590,\"start\":74558},{\"end\":74972,\"start\":74961},{\"end\":75391,\"start\":75376},{\"end\":75717,\"start\":75642},{\"end\":76152,\"start\":76082},{\"end\":76458,\"start\":76454},{\"end\":76698,\"start\":76689},{\"end\":76940,\"start\":76937},{\"end\":77228,\"start\":77169},{\"end\":77648,\"start\":77571},{\"end\":77976,\"start\":77954},{\"end\":78324,\"start\":78253},{\"end\":78795,\"start\":78744},{\"end\":79314,\"start\":79269},{\"end\":79786,\"start\":79701},{\"end\":80339,\"start\":80268},{\"end\":80565,\"start\":80518},{\"end\":80783,\"start\":80774},{\"end\":80996,\"start\":80992},{\"end\":81305,\"start\":81296},{\"end\":81545,\"start\":81484},{\"end\":81894,\"start\":81886},{\"end\":82048,\"start\":81997},{\"end\":82503,\"start\":82427},{\"end\":83009,\"start\":83005},{\"end\":83260,\"start\":83251},{\"end\":83604,\"start\":83554},{\"end\":84024,\"start\":83968},{\"end\":84477,\"start\":84422},{\"end\":84870,\"start\":84866},{\"end\":85249,\"start\":85151},{\"end\":85803,\"start\":85712},{\"end\":86208,\"start\":86200},{\"end\":86396,\"start\":86307},{\"end\":86869,\"start\":86775},{\"end\":87559,\"start\":87484},{\"end\":88072,\"start\":88067},{\"end\":88424,\"start\":88348},{\"end\":88744,\"start\":88740},{\"end\":89004,\"start\":88995},{\"end\":89401,\"start\":89307},{\"end\":89925,\"start\":89922},{\"end\":90162,\"start\":90158},{\"end\":90419,\"start\":90378},{\"end\":90715,\"start\":90659},{\"end\":91033,\"start\":90968},{\"end\":75779,\"start\":75719},{\"end\":77274,\"start\":77230},{\"end\":78810,\"start\":78797},{\"end\":79858,\"start\":79788},{\"end\":82575,\"start\":82505},{\"end\":85334,\"start\":85251},{\"end\":85881,\"start\":85805},{\"end\":86967,\"start\":86871},{\"end\":87621,\"start\":87561},{\"end\":89499,\"start\":89403}]"}}}, "year": 2023, "month": 12, "day": 17}