{"id": 85543335, "updated": "2023-10-02 01:17:23.527", "metadata": {"title": "Learning Discrete Structures for Graph Neural Networks", "authors": "[{\"first\":\"Luca\",\"last\":\"Franceschi\",\"middle\":[]},{\"first\":\"Mathias\",\"last\":\"Niepert\",\"middle\":[]},{\"first\":\"Massimiliano\",\"last\":\"Pontil\",\"middle\":[]},{\"first\":\"Xiao\",\"last\":\"He\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2019, "month": 3, "day": 28}, "abstract": "Graph neural networks (GNNs) are a popular class of machine learning models whose major advantage is their ability to incorporate a sparse and discrete dependency structure between data points. Unfortunately, GNNs can only be used when such a graph-structure is available. In practice, however, real-world graphs are often noisy and incomplete or might not be available at all. With this work, we propose to jointly learn the graph structure and the parameters of graph convolutional networks (GCNs) by approximately solving a bilevel program that learns a discrete probability distribution on the edges of the graph. This allows one to apply GCNs not only in scenarios where the given graph is incomplete or corrupted but also in those where a graph is not available. We conduct a series of experiments that analyze the behavior of the proposed method and demonstrate that it outperforms related methods by a significant margin.", "fields_of_study": "[\"Computer Science\",\"Mathematics\"]", "external_ids": {"arxiv": "1903.11960", "mag": "2962965968", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icml/FranceschiNPH19", "doi": null}}, "content": {"source": {"pdf_hash": "9b420776eeaa85ec010591d80471e217517fb42e", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1903.11960v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "acc2ff4d8dddecb8be1ddc3fe4ff5a8a24b7554e", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/9b420776eeaa85ec010591d80471e217517fb42e.txt", "contents": "\nLearning Discrete Structures for Graph Neural Networks\n\n\nLuca Franceschi luca.franceschi@iit.it \nDept of Computer Science\nIstituto Italiano di Tecnologia\nGenoaItaly\n\nUniversity College London\nUK (\n\nMathias Niepert mathias.niepert@neclab.eu \n) NEC Labs Europe\nHeidelbergGermany\n\nMassimiliano Pontil massimiliano.pontil@iit.it \nDept of Computer Science\nIstituto Italiano di Tecnologia\nGenoaItaly\n\nUniversity College London\nUK (\n\nXiao He xiao.he@neclab.eu \n) NEC Labs Europe\nHeidelbergGermany\n\nLearning Discrete Structures for Graph Neural Networks\n\nGraph neural networks (GNNs) are a popular class of machine learning models whose major advantage is their ability to incorporate a sparse and discrete dependency structure between data points. Unfortunately, GNNs can only be used when such a graph-structure is available. In practice, however, real-world graphs are often noisy and incomplete or might not be available at all. With this work, we propose to jointly learn the graph structure and the parameters of graph convolutional networks (GCNs) by approximately solving a bilevel program that learns a discrete probability distribution on the edges of the graph. This allows one to apply GCNs not only in scenarios where the given graph is incomplete or corrupted but also in those where a graph is not available. We conduct a series of experiments that analyze the behavior of the proposed method and demonstrate that it outperforms related methods by a significant margin.\n\nIntroduction\n\nRelational learning is concerned with methods that cannot only leverage the attributes of data points but also their relationships. Diagnosing a patient, for example, not only depends on the patient's vitals and demographic information but also on the same information about their relatives, the information about the hospitals they have visited, and so on. Relational learning, therefore, does not make the assumption of independence between data points but models their dependency explicitly. Graphs are a natural way to represent relational information and there is a large number of machine learning algorithms leveraging graph structure. Graph neural networks (GNNs) (Scarselli et al., 2009) are one such class of algorithms that are able to incorporate sparse and discrete dependency structures between data points.\n\nWhile a graph structure is available in some domains, in others it has to be inferred or constructed. A possible approach is to first create a k-nearest neighbor (kNN) graph based on some measure of similarity between data points. This is a common strategy used by several learning methods such as LLE (Roweis & Saul, 2000) and Isomap (Tenenbaum et al., 2000). A major shortcoming of this approach, however, is that the efficacy of the resulting models hinges on the choice of k and, more importantly, on the choice of a suitable similarity measure over the input features. In any case, the graph creation and parameter learning steps are independent and require heuristics and trial and error. Alternatively, one could simply use a kernel matrix to model the similarity of examples implicitly at the cost, however, of introducing a dense dependency structure which may be problematic from a computational point of view.\n\nWith this paper, we follow a different route with the aim of learning discrete and sparse dependencies between data points while simultaneously training the parameters of graph convolutional networks (GCN), a class of GNNs. Intuitively, GCNs learn node representations by passing and aggregating messages between neighboring nodes (Kipf & Welling, 2017;Monti et al., 2017;Gilmer et al., 2017;Hamilton et al., 2017;Duran & Niepert, 2017;Velickovic et al., 2018). We propose to learn a generative probabilistic model for graphs, samples from which are used both during training and at prediction time. Edges are modelled with random variables whose parameters are treated as hyperparameters in a bilevel learning framework (Franceschi et al., 2018). We iteratively sample the structure while minimizing an inner objective (a training error) and optimize the edge distribution parameters by minimizing an outer objective (a validation error).\n\nTo the best of our knowledge, this is the first method that simultaneously learns the graph and the parameters of a GNN for semi-supervised classification. Moreover, and this might be of independent interest, we adapt gradient-based hyperparameter optimization to work for a class of discrete hyperparameters (edges, in this work). The proposed approach makes GNNs applicable to problems where the graph is incomplete or entirely missing. We conduct a series of experiments and show that the proposed method is competitive with and often outperforms existing approaches. We also verify that the resulting graph generative models have meaningful edge probabilities.\n\n\nBackground\n\nWe first provide some background on graph theory, graph neural networks, and bilevel programming.\n\n\nGraph Theory Basics\n\nA graph G is a pair (V, E) with V = {v 1 , ..., v N } the set of vertices and E \u2286 V \u00d7 V the set of edges. Let N be the number of vertices and M the number of edges. Each graph can be represented by an adjacency matrix A of size N \u00d7 N , where A i,j = 1 if there is an edge from vertex v i to vertex v j , and A i,j = 0 otherwise. The graph Laplacian is defined by\nL = D \u2212 A where D i,i = j A i,j and D i,j = 0 if i = j.\nWe denote the set of all N \u00d7 N adjacency matrices by H N .\n\n\nGraph Neural Networks\n\nGraph neural networks are a popular class of machine learning models for graph-structured data. We focus specifically on graph convolutional networks (GCNs) and their application to semi-supervised learning. All GNNs have the same two inputs. First, a feature matrix X \u2208 X N \u2282 R N \u00d7n where n is the number of different node features, second, a graph G = (V, E) with adjacency matrix A \u2208 H N . Given a set of class labels Y and a labeling function y : V \u2192 Y that maps (a subset of) the nodes to their true class label, the objective is, given a set of training nodes V Train , to learn a function f w : X N \u00d7 H N \u2192 Y N by minimizing some regularized empirical loss\nL(w, A) = v\u2208VTrain (f w (X, A) v , y v ) + \u2126(w),(1)\nwhere w \u2208 R d are the parameters of f w , f w (X, A) v is the output of f w for node v, : Y \u00d7 Y \u2192 R + is a point-wise loss function, and \u2126 is a regularizer. An example of the function f w proposed by Kipf & Welling (2017) is the following two hidden layer GCN that computes the class probabilities as\nf w (X, A) = Softmax(\u00c2 ReLu(\u00c2 X W 1 ) W 2 ),(2)\nwhere w = (W 1 , W 2 ) are the parameters of the GCN and\u00c2 is the normalized adjacency matrix, given b\u0177\nA =D \u22121/2 (A + I)D \u22121/2 withD i,i = i,j (A + I) j .\n\nBilevel Programming in Machine Learning\n\nBilevel programs are optimization problems where a set of variables occurring in the objective function are constrained to be an optimal solution of another optimization problem (see Colson et al., 2007, for an overwiew). Formally given two objective functions F and L, the outer and inner objectives, and two sets of variables, \u03b8 \u2208 R m and w \u2208 R d , the outer and inner variables, a bilevel program is given by\nmin \u03b8,w \u03b8 F (w \u03b8 , \u03b8) such that w \u03b8 \u2208 arg min w L(w, \u03b8).(3)\nBilevel programs arise in numerous situations such as hyperparmeter optimization, adversarial, multi-task, and meta-learning (Bennett et al., 2006;Flamary et al., 2014;Mu\u00f1oz-Gonz\u00e1lez et al., 2017;Franceschi et al., 2018). For instance, in hyperparamter optimization, the inner objective can be a regularized training error while the outer objective can be the corresponding unregularized validation error. \u03b8 would then be the coefficient (hyperparameter) of the regularizer and w the parameters of the model. (3) is challenging since the solution sets of the inner problem are usually not available in closed-form. A standard approach involves replacing the minimization of L with the repeated application of an iterative optimization dynamics \u03a6 such as (stochastic) gradient descent (Domke, 2012;Maclaurin et al., 2015;Franceschi et al., 2017). Let w \u03b8,T denote the inner variables after T iterations of the dynamics \u03a6, that is, w \u03b8,T = \u03a6(w \u03b8,T \u22121 , \u03b8) = \u03a6(\u03a6(w \u03b8,T \u22122 , \u03b8), \u03b8), and so on. Now, if \u03b8 and w are real-valued and the objectives and dynamics smooth, we can compute the gradient of the function F (w \u03b8,T , \u03b8) w.r.t. \u03b8, denoted throughout as the hypergradient \u2207 \u03b8 F (w \u03b8,T , \u03b8), as\n\n\nSolving Problem\n\u2202 w F (w \u03b8,T , \u03b8)\u2207 \u03b8 w \u03b8,T + \u2202 \u03b8 F (w \u03b8,T , \u03b8).(4)\nwhere the symbol \u2202 denotes the partial derivative (the Jacobian) and \u2207 either the gradient (for scalar functions) or the total derivative. The first term can be computed efficiently in time O(T (d + m)) with reverse-mode algorithmic differentiation (Griewank & Walther, 2008) by unrolling the optimization dynamics, repeatedly substituting w \u03a6,t = \u03a6(w \u03b8,t\u22121 , \u03b8) and applying the chain rule. This technique allows to optimize a number of hyperparameters several orders of magnitude greater than classic methods for hyperparameter optimization (Feurer & Hutter, 2018).\n\n\nLearning Discrete Graph Structures\n\nWith this paper we address the challenging scenarios where a graph structure is either completely missing, incomplete, or noisy. To this end, we learn a discrete and sparse dependency structure between data A \u03c4~P\u03b8 \u03b8 ... w t+1 = \u03a6(w t ,A 1 ) = w t -\u03b3\u2207L t (w t ,A 1 ) w t+\u03c4 = w t+\u03c4-1 -\u03b3\u2207L t+\u03c4-1 (w t+\u03c4-1 ,A \u03c4 )\n\n.  Figure 1: Schematic representation of our approach for learning discrete graph structures for GNNs. points while simultaneously training the parameters of a GCN. We frame this as a bilevel programming problem whose outer variables are the parameters of a generative probabilistic model for graphs. The proposed approach, therefore, optimizes both the parameters of a GCN and the parameters of a graph generator so as to minimize the classification error on a given dataset. We developed a practical algorithm based on truncated reverse-mode algorithmic differentiation (Williams & Peng, 1990) and hypergradient estimation to approximately solve the bilevel problem. A schematic illustration of the resulting method is presented in Figure 1.\n\n\nJointly Learning the Structure and Parameters\n\nLet us suppose that information about the true adjacency matrix A is missing or incomplete. Since, ultimately, we are interested in finding a model that minimizes the generalization error, we assume the existence of a second subset of instances with known target, V Val (the validation set), from which we can estimate the generalization error. Hence, we propose to find A \u2208 H N that minimizes the function\nF (w A , A) = v\u2208VVal (f w A (X, A) v , y v )(5)\nwhere w A is the minimizer, assumed unique, of L (see Eq.\n\n(1) and Sec. 2.3) for a fixed adjacency matrix A. We can then consider Equations (1) and (5) as the inner and outer objective of a mixed-integer bilevel programming problem where the outer objective aims to find an optimal discrete graph structure and the inner objective the optimal parameters of a GCN given a graph.\n\nThe resulting bilevel problem is intractable to solve exactly even for small graphs. Moreover, it contains both continuous and discrete-valued variables, which prevents us from directly applying Eq. (4). A possible solution is to construct a continuous relaxation (see e.g. Frecon et al., 2018), another is to work with parameters of a probability distribution over graphs. The latter is the approach we follow in this paper.\n\nWe maintain a generative model for the graph structure and reformulate the bilevel program in terms of the (continuous) parameters of the resulting distribution over discrete graphs. Specifically, we propose to model each edge with a Bernoulli random variable. Let H N = Conv(H N ) be the convex hull of the set of all adjacency matrices for N nodes. By modeling all possible edges as a set of mutually independent Bernoulli random variables with parameter matrix \u03b8 \u2208 H N we can sample graphs as H N A \u223c Ber(\u03b8). Eqs. (1) and (5) can then be replaced, by using the expectation over graph structures. The resulting bilevel problem can be written as\nmin \u03b8\u2208H N E A\u223cBer(\u03b8) [F (w \u03b8 , A)](6)\nsuch that w \u03b8 = arg min w E A\u223cBer(\u03b8) [L(w, A)] .\n\nBy taking the expectation, both the inner and the outer objectives become continuous (and possibly smooth) functions of the Bernoulli parameters. The bilevel problem given by Eqs. (6)-(7) is still challenging to solve efficiently. This is because the solution of the inner problem is not available in closed form for GCNs (the objective is non-convex); and the expectations are intractable to compute exactly 1 . An efficient algorithm, therefore, will only be able to find approximate stochastic solutions, that is, \u03b8 i,j \u2208 (0, 1).\n\nBefore describing a method to solve the optimization problem given by Eqs. (6)-(7) approximately with hypergradient descent, we first turn to the question of obtaining a final GCN model that we can use for prediction. For a given distribution P \u03b8 over graphs with N nodes and with parameters \u03b8, the expected output of a GCN is\nf exp w (X) = E A [f w (X, A)] = A\u2208H N P \u03b8 (A)f w (X, A).(8)\nUnfortunately, computing this expectation is intractable even for small graphs; we can, however, compute an empirical estimate of the output asf\nw (X) = 1 S S i=1 f w (X, A i ),(9)\nwhere S > 0 is the number of samples we wish to draw. Note thatf is an unbiased estimator of f exp w . Hence, to use a GCN f w learned with the bilevel formulation for prediction, we sample S graphs from the distribution P \u03b8 and compute the prediction as the empirical mean of the values of f w .\n\nGiven the parametrization of the graph generator with Bernoulli variables (P \u03b8 = Ber(\u03b8)), one can sample a new graph in O(N 2 ). Sampling from a large number of Bernoulli variables, however, is highly efficient, trivially parallelizable, and possible at a rate of millions per second. Other sampling strategies such as MCMC sampling are possible in constant time. Given a set of sampled graphs, it is more efficient to evaluate a sparse GCN S times than to use the Bernoulli parameters as weights of the GCN's adjacency matrix 2 . Indeed, for GCN models, computingf w has a cost of O(SCd), rather than O(N 2 d) for a fully connected graph, where C = ij \u03b8 ij is the expected number of edges for a directed graph, and d is the dimension of the weights. Another advantage of using a graph-generative model is that we can interpret it probabilistically which is not the case when learning a dense adjacency matrix.\n\n\nStructure Learning via Hypergradient Descent\n\nThe bilevel programming formalism is a natural fit for the problem of learning both a graph generative model and the parameters of a GNN for a specific downstream task. Here, the outer variables \u03b8 are the parameters of the graph generative model and the inner variables w are the parameters of the GCN.\n\nWe now discuss a practical algorithm to approach the bilevel problem defined by Eqs. (6) and (7). Regarding the inner problem, we note that the expectation\nE A\u223cBer(\u03b8) [L(w, A)] = A\u2208H N P \u03b8 (A)L(w, A)(10)\nis composed of a sum of 2 N 2 terms, which is intractable even for relatively small graphs. We can, however, choose a tractable approximate learning dynamics \u03a6 such as stochastic gradient descent (SGD),\nw \u03b8,t+1 = \u03a6(w \u03b8,t , A t ) = w \u03b8,t \u2212 \u03b3 t \u2207L(w \u03b8,t , A t )(11)\nAlgorithm 1 LDS\n1: Input data: X, Y , Y [, A] 2: Input parameters: \u03b7, \u03c4 [, k] 3: [A \u2190 kNN(X, k)] {Init. A to kNN graph if A = 0} 4: \u03b8 \u2190 A\n{Initialize P \u03b8 as a deterministic distribution} 5: while Stopping condition is not met do 6: t \u2190 0 7:\n\nwhile Inner objective decreases do 8: where \u03b3 t is a learning rate and A t \u223c Ber(\u03b8) is drawn at each iteration. Under appropriate assumptions and for t \u2192 \u221e, SGD converges to a weight vector w \u03b8 that depends on the edges' probability distribution (Bottou, 2010).\nA t \u223c Ber(\u03b8) {Sample structure} 9: w \u03b8,t+1 \u2190 \u03a6 t (w \u03b8,t , A t ) {Optimize inner objective} 10: t \u2190 t + 1 11: if t = 0 (mod \u03c4 ) then 12: G \u2190 computeHG(F , Y , \u03b8, (w \u03b8,i ) t i=t\u2212\u03c4 ) 13: \u03b8 \u2190 Proj H N [\u03b8 \u2212 \u03b7G] {Optimize\nLet w \u03b8,T be an approximate minimizer of E [L] (where T may depend on \u03b8). We now need to compute an estimator for the hypergradient \u2207 \u03b8 E A\u223cBer(\u03b8) [F ]. Recalling Eq. (4), we have\n\u2207 \u03b8 E [F (w \u03b8,T , A)] = E [\u2207 \u03b8 F (w \u03b8,T , A)] = E [\u2202 w F (w \u03b8,T , A)\u2207 \u03b8 w \u03b8,T + \u2202 A F (w \u03b8,T , A)\u2207 \u03b8 A] .(12)\nwhere we can swap the gradient and expectation operators since the expectation is over a finite random variable, assuming that the loss function F bounded. We use the so-called straight-through estimator (Bengio et al., 2013) and set \u2207 \u03b8 A := I (which would be 0 a.e. otherwise); \u2207 \u03b8 A appears both explicitly in (12) and in the computation of \u2207 \u03b8 w \u03b8,T , through \u2202 \u03b8 \u03a6(w \u03b8,t , A t ) (see Sec. 2.3 and Franceschi et al., 2017, for details). Finally, we take the single sample Monte Carlo estimator of (12) to update the parameters \u03b8 with projected gradient descent on the unit hypercube.\n\nComputing the hypergradient by fully unrolling the dynamics may be too expensive both in time and memory 3 . We propose to truncate the computation and estimate the hypergradient every \u03c4 iterations, where \u03c4 is a parameter of the algorithm. This is essentially an adaptation of truncated back-propagation through time (Werbos, 1990;Williams & Peng, 1990) and can be seen as a short-horizon optimization procedure with warm restart on w. A sketch of the method is presented in Algorithm 1, while a more complete version that includes details on the hypergradient computation can be found in the appendix. Inputs and operations in squared brackets are optional.\n\nThe algorithm contains stopping conditions at the outer and at the inner level. While it is natural to implement the latter with a decrease condition on the inner objective 4 , we find it useful to implement the first with a simple early stopping criterion. A fraction of the examples in the validation set is held-out to compute, in each outer iteration, the accuracy using the predictions of the empirically expected model (9). The optimization procedure terminates if there is no improvement for some consecutive outer loops. This helps avoiding overfitting the outer objective (6), which may be a concrete risk in this context given the quantity of (hyper)parameters being optimized and the relative small size of the validation sets.\n\nThe hypergradients estimated with Algorithm 1 at each outer iteration are biased. The bias stems from both the straight-trough estimator and from the truncation procedure introduced in lines 11-13 (Tallec & Ollivier, 2017). Nevertheless, we find empirically that the algorithm is able to make reasonable progress, finding configurations in the distribution space that are beneficial for the tasks at hand.\n\n\nExperiments\n\nWe conducted a series of experiments with three main objectives. First, we evaluated LDS on node classification problems where a graph structure is available but where a certain fraction of edges is missing.\n\nHere, we compared LDS with graph-based learning algorithms including vanilla GCNs. Second, we wanted to validate our hypothesis that LDS can achieve competitive results on semi-supervised classification problems for which a graph is not available. To this end, we compared LDS with a number of existing semi-supervised classification approaches. We also compared LDS with algorithms that first create k-NN affinity graphs on the data set. Third, we analyzed the learned graph generative model to understand to what extent LDS is able to learn meaningful edge probability distributions even when a large fraction of edges is missing.\n\n\nDatasets\n\nCora and Citeseer are two benchmark datasets that are commonly used to evaluate relational learners in general and GCNs in particular (Sen et al., 2008). The input features are bag of words and the task is node classification. We use the same dataset split and experimental setup of previous work (Yang et al., 2016;Kipf & Welling, 2017). To evaluate the robustness of LDS on incomplete graphs, we construct graphs with missing edges by randomly sampling 25%, 50%, and 75% of the edges. In addition to Cora and Citeseer where we removed all edges, we evaluate LDS on benchmark datasets that are available in scikit-learn (Pedregosa et al., 2011) such as Wine, Breast Cancer (Cancer), Digits, and 20 Newsgroup (20news). We take 10 classes from 20 Newsgroup and use words (TFIDF) with a frequency of more than 5% as features. We also use FMA, a dataset where 140 audio features are extracted from 7,994 music tracks and where the problem is genre classification (Defferrard et al., 2017). The statistics of the datasets are listed in Table 1.\n\n\nSetup and Baselines\n\nFor the experiments on graphs with missing edges, we compare LDS to vanilla GCNs. In addition, we also conceived a method (GCN-RND) where we add randomly sampled edges at each optimization step of a vanilla GCN. With this method we intend to show that simply adding random edges to the standard training procedure of a GCN model (perhaps acting as a regularization technique) is not enough to improve the generalization.\n\nWhen a graph is completely missing, GCNs boil down to feed-forward neural networks. Therefore, we  evaluate different strategies to induce a graph on both labeled and unlabeled samples by creating (1) a sparse Erd\u0151s-R\u00e9nyi random graph (Erdos & R\u00e9nyi, 1960) (Sparse-GCN); (2) a dense graph with equal edge probabilities (Dense-GCN); (3) a dense RBF kernel on the input features (RBF-GCN); and (4) a sparse k-nearest neighbor graph on the input features (kNN-GCN). For LDS we initialize the edge probabilities using the k-NN graph (kNN-LDS). We further include a dense version of LDS where we learn a dense similarity matrix (kNN-LDS (dense)).\n\nIn this setting, we compare LDS to popular semi-supervised learning methods such as label propagation (LP) (Zhu et al., 2003), manifold regularization (ManiReg) (Belkin et al., 2006), and semi-supervised embedding (SemiEmb) (Weston et al., 2012). ManiReg and SemiEmb are given a k-NN graph as input for the Laplacian regularization. We also compare LDS to baselines that do not leverage a graph-structure such as logistic regression (LogReg), support vector machines (Linear and RBF SVM), random forests (RF), and feed-forward neural networks (FFNN). For comparison methods that need a kNN graph, k \u2208 {2, 3, . . . , 20} and the metric (Euclidean or Cosine) are tuned using validation accuracy. For kNN-LDS, k is tuned from 10 or 20.\n\nWe use the two layers GCN given by Eq.\n\n(2) with 16 hidden neurons and ReLu activation. Given a set of labelled training instances V Train (nodes or examples) we use the regularized cross-entropy loss\nL(w, A) = \u2212 v\u2208VTrain y v \u2022 log [f w (X, A) v ] + \u03c1||w|| 2(13)\nwhere y v is the one-hot encoded target vector for the v-th instance, \u2022 denotes the element-wise multiplication and \u03c1 is a non-negative coefficient. As additional regularization technique we apply dropout (Srivastava et al., 2014) with \u03b2 = 0.5 as in previous work. We use Adam (Kingma & Ba, 2015) for optimizing L, tuning the learning rate \u03b3 from {0.005, 0.01, 0.02}. The same number of hidden neurons and the same activation is used for SemiEmb and FFNN.\n\nFor LDS, we set the initial edge parameters \u03b8 i,j to 0 except for the known edges (or those found by kNN) which we set to 1. We then let all the parameters (including those initially set to 1) to be optimized by the algorithm. We further split the validation set evenly to form the validation (A) and early stopping (B) sets. As outer objective we use the un-regularized cross-entropy loss on (A) and optimize it with stochastic gradient descent with exponentially decreasing learning rate. Initial experiments showed that accelerated optimization methods such as Adam or SGD with momentum underperform in this setting. We tune the step size \u03b7 of the outer optimization loop and the number of updates \u03c4 used to compute the truncated hypergradient. Finally, we draw S = 16 samples to compute the output predictions (see Eq.\n\n(9)). For LDS and GCN, we apply early stopping with a window size of 20 steps. An important factor for the successful optimization of the outer objective is to use vanilla SGD with an exponentially decreasing step size.\n\nLDS was implemented 5 in TensorFlow (Abadi et al., 2015). The implementations of the supervised baselines and LP are those from the scikit-learn python package (Pedregosa et al., 2011). GCN, ManiReg, and SemiEmb are implemented in Tensorflow. The hyperparameters for all the methods are selected through the validation accuracy.  \n\n\nResults\n\nThe results on the incomplete graphs are shown in Figure 2 for Cora (left) and Citeseer (center). For each percentage of retained edges the accuracy on the validation (used for early stopping) and the test set are plotted. LDS achieves competitive results in all scenarios and accuracy gains of up to 7 percentage points. Notably, LDS improves the generalization accuracy of GCN models also when the given graph is that of the respective dataset (100% of edges retained), by learning additional helpful edges. The accuracy of 84.08% and 75.04% for Cora and Citeseer, respectively, exceed all previous state-of-the-art results. Conversely, adding random edges does not help decreasing the generalization error. GCN and GCN-RND perform similarly which indicates that adding random edges to the graph is not helpful.\n\nFigure 2 (right) depicts the impact of the number of iterations \u03c4 to compute the hypergradients. Taking multiple steps strongly outperforms alternating optimization (i.e. \u03c4 = 1) in all settings. For \u03c4 = 1, one step of optimization of L w.r.t. w, fixing \u03b8 is interleaved with one step of minimization of F w.r.t. \u03b8, fixing w. Even if computationally lighter, this approach disregards the nested structure of (6)- (7), not computing the first term of Eq. (4). Increasing \u03c4 further to the value of 20, however, does not yield significant benefits, while increasing the computational cost.\n\nIn Table 3 we computed the expected number of edges in a sampled graph for Cora and Citeseer, to analyze the properties of the graphs sampled from the learned graph generator. The expected number of edges for LDS is higher than the original number which is to be expected since LDS has better accuracy   results than the vanilla GCN in Figure 2. Nevertheless, the learned graphs are still very sparse (e.g. for Cora, on average, less than 0.2% edges are present). This facilitates efficient learning of the GCN in the inner learning loop of LDS. Table 2 lists the results for semi-supervised classification problems. The supervised learning baselines work well on some datasets such as Wine and Cancer but fail to provide competitive results on others such as Digits, Citeseer, Cora, and 20News. The semi-supervised learning baselines LP, ManiReg and SemiEmb can only improve the supervised learning baselines on one, three and four datasets, respectively. The results for the GCN with different input graphs show that kNN-GCN works well and provides competitive results compared to the supervised baselines on all datasets. kNN-LDS significantly outperforms kNN-GCN on four out of seven datasets. In addition, kNN-LDS is among the most competitive methods on all datasets and yields the highest gains on datasets that have an underlying graph. kNN-LDS performs slightly better than its dense counterpart, where we learn a dense adjacency matrix. The advantage of the sparse graph representation, however, lies in the potential to scale to larger datasets.\n\nIn Figure 3, we show the evolution of mean edge probabilities during optimization on three types of nodes (train, validation, test) on the Cora dataset. LDS is able to learn a graph generative model that is, on average, attributing 10 to 100 times more probability to edges between samples sharing the same class label. LDS often attributes a higher probability to edges that are present in the true held-out adjacency matrix (green lines in the plots). In Figure 4 we report the normalized histograms of the optimized edges probabilities for the same nodes of Figure 3, sorted into six bins in log 10 -scale. Edges are divided in two groups: edges between nodes of the same class (blue) and between nodes of unknown or different classes (orange). LDS is able to learn highly non-uniform edge probabilities that reflect the class membership of the nodes. Figure 5 shows similar qualitative results as Figure 4, this time for three Citeseer test nodes, missclassified by kNN-GCN and correctly classified by kNN-LDS. Again, the learned edge probabilities linking to nodes of the same classes is significantly different to those from different classes; but in this case the densities are more skewed toward the first bin. On the datasets we considered, what seems to matter is to capture a useful distribution (i.e. higher probability for links between same class) rather than pick exact links; of course for other datasets this may vary.\n\n\nRelated work\n\nSemi-supervised Learning. Early works on graph-based semi-supervised learning use graph Laplacian regularization and include label propagation (LP) (Zhu et al., 2003), manifold regularization (ManiReg) (Belkin et al., 2006), and semi-supervised embedding (SemiEmb) (Weston et al., 2012). These methods assume a given graph structure whose edges represent some similarity between nodes. Later, (Yang et al., 2016) proposed a method that uses graphs not for regularization but rather for embedding learning by jointly classification and graph context prediction. Kipf & Welling (2017) presented the first GCN for semi-supervised learning. There are now numerous GCN variants all of which assume a given graph structure. Contrary to all existing graph-based semi-supervised learning approaches, LDS simultaneously learns the graph structure and the parameters of a GCN for node classification and is, therefore, able to work even when the graph is incomplete or entirely missing.\n\nGraph synthesis and generation. LDS learns a probabilistic generative model for graphs. The earliest probabilistic generative model for graphs was the Erd\u0151s-R\u00e9nyi random graph model (Erdos & R\u00e9nyi, 1960), where edge probabilities are modelled as identically distributed and mutually independent Bernoullis. Several network models have been proposed to model well particular graph properties such as degree distribution (Leskovec et al., 2005) or network diameter (Watts & Strogatz, 1998). Leskovec et al. (2010) proposed a generative model based on the Kronecker product that takes a real graph as input and generates graphs that have similar properties. Recently, deep learning based approaches have been proposed for graph generation (You et al., 2018;Li et al., 2018;Grover et al., 2018;De Cao & Kipf, 2018). The goal of these methods, however, is to learn a sophisticated generative model that reflects the properties of the training graphs. LDS, on the other hand, learns graph generative models as a means to perform well on classification problems and its input is not a collection of graphs. More recent work proposed an unsupervised model that learns to infer interactions between entities while simultaneously learning the dynamics of physical systems such as spring systems . Contrary to LDS, the method is specific to dynamical interacting systems, is unsupervised, and uses a variational encoder-decoder. Finally, we note that Johnson (2017) proposed a fully differentiable neural model able to process and produce graph structures at both input, representation and output levels; training the model requires, however, supervision in terms of ground truth graphs.\n\nLink prediction. Link prediction is a decades-old problem (Liben-Nowell & Kleinberg, 2007). Several survey papers cover the large body of work ranging from link prediction in social networks to knowledge base completion (L\u00fc & Zhou, 2011;Nickel et al., 2016). While a majority of the methods are based on some similarity measure between node pairs, there has been a number of neural network based methods (Zhang & Chen, 2017. The problem we study in this paper is related to link prediction as we also want to learn or extend a graph. However, existing link prediction methods do not simultaneously learn a GNN node classifier. Moreover, LDS learns a generative model over edges and can not only add new edges but also remove incorrect ones. Statistical relational learning (SRL) (Getoor & Taskar, 2007) models often perform both link prediction and node classification through the existence of binary and unary predicates. However, SRL models are inherently intractable and the structure and parameter learning steps are independent. LDS, on the other hand, learns the graph structure and the GCN's parameters simultaneously.\n\nGradient estimation for discrete random variables. Due to the intractable nature of the two bilevel objectives, LDS needs to estimate the hypergradients through a stochastic computational graph (Schulman et al., 2015). Using the score function estimator, also known as REINFORCE (Williams, 1992), would treat the outer objective as a black-box function and would not exploit F being differentiable w.r.t. the sampled adjacency matrices and inner optimization dynamics. Conversely, the path-wise estimator is not readily applicable, since the random variables are discrete. LDS borrows from a solution proposed before (Bengio et al., 2013), at the cost of having biased estimates. Recently, Jang et al. (2017); Maddison et al. (2017) presented an approach based on continuous relaxations to reduce variance, which Tucker et al. (2017) combined with REINFORCE to obtain an unbiased estimator. Grathwohl et al. (2018) further introduced surrogate models to construct control variates for black-box functions. Unfortunately, these latter methods require to compute the function in the interior of the hypercube, possibly in multiple points (Tucker et al., 2017). This would introduce additional computational overhead 6 .\n\n\nConclusion\n\nWe propose LDS, a framework that simultaneously learns the graph structure and the parameters of a GNN. While we have used a specific GCN variant (Kipf & Welling, 2017) in the experiments, the method is more generally applicable to other GNNs. The strengths of LDS are its high accuracy gains on typical semi-supervised classification datasets at a reasonable computational cost. Moreover, due to the graph generative model LDS learns, the edge parameters have a probabilistic interpretation.\n\nThe method has its limitations. While relatively efficient, it cannot currently scale to large datasets: this would require an implementation that works with mini-batches of nodes. We evaluated LDS only in the transductive setting, when all data points (nodes) are available during training. Adding additional nodes after training (the inductive setting) would currently require retraining the entire model from scratch. When sampling graphs, we do not currently enforce the graphs to be connected. This is something we anticipate to improve the results, but this would require a more sophisticated sampling strategy. All of these shortcomings motivate future work. In addition, we hope that suitable variants of LDS algorithm will also be applied to other problems such as neural architecture search or to tune other discrete hyperparameters. \n\n\nA Extended algorithm\n\nIn this section we provide an extended version of the Algorithm 1 that includes the explicit computation of the hypergradient by truncated reverse mode algorithmic differentiation. Recall that the inner objective is replaced by an iterative dynamics \u03a6 such as stochastic gradient descent. Hence, starting from an initial point w 0 , the iterates are computed as w \u03b8,t+1 = \u03a6(w \u03b8,t , A t ).\n\nLet D t and E t denote the Jacobians of the dynamics:\n\nD t := \u2202 w \u03a6(w \u03b8,t , A t ); E t := \u2202 A \u03a6(w \u03b8,t , A t ), and recall that we set \u2202 \u03b8 A := I so that \u2202 \u03b8 \u03a6 = \u2202 A \u03a6. We report the pseudocode in Algorithm 2, where the letter p is used to indicate the adjoint variables (Lagrangian multipliers). Note that for \u03c4 = 1 the algorithm does not enter in the loop at line 15. Finally, note also that at line 16, we re-sample the adjacency matrices instead of reusing those computed in the forward pass (lines 8-10).\n\nAlgorithm 2 was implemented in TensorFlow as an extension of the software package Far-HO, freely available at https://github.com/lucfra/FAR-HO.\n\n\nB Visualization of Embeddings\n\nWe further visualize the embeddings learned by GCN and LDS using T-SNE (Maaten & Hinton, 2008). Figure 6 depicts the T-SNE visualizations of the embeddings learned on Citeseer with Dense-GCN (left), kNN-GCN (center), and kNN-LDS (right). As can be seen, the embeddings learned by kNN-LDS provides the best separation among different classes.\n\nFigure 2 :\n2Mean accuracy \u00b1 standard deviation on validation (early stopping; dashed lines) and test (solid lines) sets for edge deletion scenarios on Cora (left) and Citeseer (center). (Right) Validation of the number of steps \u03c4 used to compute the hypergradient (Citeseer); \u03c4 = 1 corresponds to alternating minimization. All results are obtained from five runs with different random seeds.\n\nFigure 3 :\n3Mean edge probabilities to nodes aggregated wrt four groups during LDS optimization, in log 10 scale for three example nodes. For each example node, all other nodes are grouped by the following criteria: (a) adjacent in the ground truth graph; (b) same class membership; (c) different class membership; and (d) unknown class membership. Probabilities are computed with LDS (\u03c4 = 5) on Cora with 25% retained edges. From left to right, the example nodes belong to the training, validation, and test set, respectively. The vertical gray lines indicate when the inner optimization dynamics restarts, that is, when the weights of the GCN are reinitialized.\n\nFigure 4 :\n4Normalized histograms of edges' probabilities for the same nodes ofFigure 3.\n\nFigure 5 :\n5Histograms for three Citeseer test nodes, missclassified by kNN-GCN and rightly classified by kNN-LDS.\n\nFigure 6 :\n6T-SNE visualization of the output activations (before the classification layer) on the Citeseer dataset. Left: Dense-GCN, Center: kNN-GCN, Right kNN-LDS Zhu, X., Ghahramani, Z., and Lafferty, J. D. Semi-supervised learning using gaussian fields and harmonic functions. In Proceedings of the 20th International conference on Machine learning (ICML-03), pp. 912-919, 2003.\n\n\n..w \n\nData points \n\nInitialize \nparameters \nSample graphs \nCompute hypergradients \nand update \u03b8 of graph generator \n\nGCN: \n\nGraph \ngenerator: \n\nA 1~P\u03b8 \n\nCompute gradients of and \nupdate GCN parameters \n\nw t+\u03c4 \nw t+\u03c4-1 \n\nw t ... \n\nValidation \n\n\u03b8 \n\n\u2207 \u03b8 [F(w \u03b8,\u03c4 , \u03b8)] \n\nnodes \n\n\n\n\nend while 16: end while 17: return w, P \u03b8 {Best found weights and prob. distribution}outer objective} \n\n14: \n\nend if \n\n15: \n\n\n\nTable 1 :\n1Summary statistics of the datasets.Name \nSamples Features |Y| Train/Valid/Test \n\nWine \n178 \n13 \n3 \n10 / 20 / 158 \nCancer \n569 \n30 \n2 \n10 / 20 / 539 \nDigits \n1,797 \n64 \n10 \n50 / 100 / 1,647 \nCiteseer \n3,327 \n3,703 \n6 \n120 / 500 / 1,000 \nCora \n2,708 \n1,433 \n7 \n140 / 500 / 1,000 \n20news \n9,607 \n236 \n10 100 / 200 / 9,307 \nFMA \n7,994 \n140 \n8 \n160 / 320 / 7,514 \n\n\n\nTable 2 :\n2Test accuracy (\u00b1 standard deviation) in percentage on various classification datasets. The best results and the statistical competitive ones (by paired t-test with \u03b1 = 0.05) are in bold. All experiments have been repeated with 5 different random seeds. We compare kNN-LDS to several supervised baselines and semi-supervised learning methods. No graph is provided as input. kNN-LDS achieves high accuracy results on most of the datasets and yields the highest gains on datasets with underlying graphs (Citeseer, Cora). kNN-LDS (d) is the dense version of LDS.Wine \nCancer \nDigits \nCiteseer \nCora \n20news \nFMA \n\nLogReg \n92.1 (1.3) \n93.3 (0.5) \n85.5 (1.5) \n62.2 (0.0) \n60.8 (0.0) \n42.7 (1.7) \n37.3 (0.7) \nLinear SVM \n93.9 (1.6) \n90.6 (4.5) \n87.1 (1.8) \n58.3 (0.0) \n58.9 (0.0) \n40.3 (1.4) \n35.7 (1.5) \nRBF SVM \n94.1 (2.9) 91.7 (3.1) \n86.9 (3.2) \n60.2 (0.0) \n59.7 (0.0) \n41.0 (1.1) \n38.3 (1.0) \nRF \n93.7 (1.6) \n92.1 (1.7) \n83.1 (2.6) \n60.7 (0.7) \n58.7 (0.4) \n40.0 (1.1) \n37.9 (0.6) \nFFNN \n89.7 (1.9) \n92.9 (1.2) 36.3 (10.3) \n56.7 (1.7) \n56.1 (1.6) \n38.6 (1.4) \n33.2 (1.3) \n\nLP \n89.8 (3.7) \n76.6 (0.5) \n91.9 (3.1) \n23.2 (6.7) \n37.8 (0.2) \n35.3 (0.9) \n14.1 (2.1) \nManiReg \n90.5 (0.1) \n81.8 (0.1) \n83.9 (0.1) \n67.7 (1.6) \n62.3 (0.9) \n46.6 (1.5) \n34.2 (1.1) \nSemiEmb \n91.9 (0.1) \n89.7 (0.1) \n90.9 (0.1) \n68.1 (0.1) \n63.1 (0.1) \n46.9 (0.1) \n34.1 (1.9) \n\nSparse-GCN \n63.5 (6.6) \n72.5 (2.9) \n13.4 (1.5) \n33.1 (0.9) \n30.6 (2.1) \n24.7 (1.2) \n23.4 (1.4) \nDense-GCN \n90.6 (2.8) \n90.5 (2.7) \n35.6 (21.8) \n58.4 (1.1) \n59.1 (0.6) \n40.1 (1.5) \n34.5 (0.9) \nRBF-GCN \n90.6 (2.3) \n92.6 (2.2) \n70.8 (5.5) \n58.1 (1.2) \n57.1 (1.9) \n39.3 (1.4) \n33.7 (1.4) \nkNN-GCN \n93.2 (3.1) \n93.8 (1.4) 91.3 (0.5) \n68.3 (1.3) \n66.5 (0.4) \n41.3 (0.6) \n37.8 (0.9) \n\nkNN-LDS (d) 97.5 (1.2) 94.9 (0.5) 92.1 (0.7) 70.9 (1.3) 70.9 (1.1) 45.6 (2.2) 38.6 (0.6) \nkNN-LDS \n97.3 (0.4) 94.4 (1.9) 92.5 (0.7) 71.5 (1.1) 71.5 (0.8) 46.4 (1.6) 39.7 (1.4) \n\n\n\nTable 3 :\n3Initial number of edges and expected number of sampled edges of learned graph by LDS.% Edges \n25% \n50% \n75% \n100% \n\nCora Initial \n1357 \n2714 \n4071 \n5429 \nCora Learned \n3635.6 4513.9 5476.9 6276.4 \n\nCiteseer Initial \n1183 \n2366 \n3549 \n4732 \nCiteseer Learned 3457.4 4474.2 7842.5 6745.2 \n\n0 \n250 \n500 \n750 \nInner optimization steps \n\n\nThis is different than e.g. (model free) reinforcement learning, where the objective function is usually unknown, depending in an unknown way from the action and the environment.2 Note also that Efw(X, A) = fw(X, EA) = fw(X, \u03b8), as the model fw is, in general, nonlinear.\nMoreover, since we rely on biased estimations of the gradients, we do not expect to gain too much from a full computation.4  We continue optimizing L until L(w t\u22121 , A)(1 + \u03b5) \u2265 L(w \u03b8,t , A), for \u03b5 > 0 (\u03b5 = 10 \u22123 in the experiments). Since L is non-convex, we also use a patience window of p steps.\nSource code will be released soon.\nAlgorithm 2 LDS (extended)  end while 23: end while 24: return w, P \u03b8 {Best found weights and prob. distribution}\nTensorFlow: Large-scale machine learning on heterogeneous systems. M Abadi, A Agarwal, P Barham, E Brevdo, Z Chen, C Citro, G S Corrado, A Davis, J Dean, M Devin, S Ghemawat, I Goodfellow, A Harp, G Irving, M Isard, Y Jia, R Jozefowicz, L Kaiser, M Kudlur, J Levenberg, D Man\u00e9, R Monga, S Moore, D Murray, C Olah, M Schuster, J Shlens, B Steiner, I Sutskever, K Talwar, P Tucker, V Vanhoucke, V Vasudevan, F Vi\u00e9gas, O Vinyals, P Warden, M Wattenberg, M Wicke, Y Yu, X Zheng, Abadi, M., Agarwal, A., Barham, P., Brevdo, E., Chen, Z., Citro, C., Corrado, G. S., Davis, A., Dean, J., Devin, M., Ghemawat, S., Goodfellow, I., Harp, A., Irving, G., Isard, M., Jia, Y., Jozefowicz, R., Kaiser, L., Kudlur, M., Levenberg, J., Man\u00e9, D., Monga, R., Moore, S., Murray, D., Olah, C., Schuster, M., Shlens, J., Steiner, B., Sutskever, I., Talwar, K., Tucker, P., Vanhoucke, V., Vasudevan, V., Vi\u00e9gas, F., Vinyals, O., Warden, P., Wattenberg, M., Wicke, M., Yu, Y., and Zheng, X. TensorFlow: Large-scale machine learning on heterogeneous systems, 2015. URL http://tensorflow.org/. Software available from tensorflow.org.\n\nManifold regularization: A geometric framework for learning from labeled and unlabeled examples. M Belkin, P Niyogi, V Sindhwani, Journal of Machine Learning Research. 7Belkin, M., Niyogi, P., and Sindhwani, V. Manifold regularization: A geometric framework for learning from labeled and unlabeled examples. Journal of Machine Learning Research, 7:2399-2434, 2006.\n\nRecall that F can be computed only after (approximately) solving the inner optimization problem. Recall that F can be computed only after (approximately) solving the inner optimization problem.\n\nEstimating or propagating gradients through stochastic neurons for conditional computation. Y Bengio, N L\u00e9onard, A Courville, arXiv:1308.3432arXiv preprintBengio, Y., L\u00e9onard, N., and Courville, A. Estimating or propagating gradients through stochastic neurons for conditional computation. arXiv preprint arXiv:1308.3432, 2013.\n\nModel selection via bilevel optimization. K P Bennett, J Hu, X Ji, G Kunapuli, J.-S Pang, Neural Networks, 2006. IJCNN'06. International Joint Conference on. IEEEBennett, K. P., Hu, J., Ji, X., Kunapuli, G., and Pang, J.-S. Model selection via bilevel optimization. In Neural Networks, 2006. IJCNN'06. International Joint Conference on, pp. 1922-1929. IEEE, 2006.\n\nLarge-scale machine learning with stochastic gradient descent. L Bottou, Proceedings of COMP-STAT'2010. COMP-STAT'2010SpringerBottou, L. Large-scale machine learning with stochastic gradient descent. In Proceedings of COMP- STAT'2010, pp. 177-186. Springer, 2010.\n\nAn overview of bilevel optimization. B Colson, P Marcotte, G Savard, Annals of operations research. 1531Colson, B., Marcotte, P., and Savard, G. An overview of bilevel optimization. Annals of operations research, 153(1):235-256, 2007.\n\nMolgan: An implicit generative model for small molecular graphs. N De Cao, T Kipf, arXiv:1805.11973arXiv preprintDe Cao, N. and Kipf, T. Molgan: An implicit generative model for small molecular graphs. arXiv preprint arXiv:1805.11973, 2018.\n\nA dataset for music analysis. M Defferrard, K Benzi, P Vandergheynst, X Bresson, Fma, 18th International Society for Music Information Retrieval Conference. Defferrard, M., Benzi, K., Vandergheynst, P., and Bresson, X. Fma: A dataset for music analysis. In 18th International Society for Music Information Retrieval Conference, 2017. URL https://arxiv.org/ abs/1612.01840.\n\nGeneric methods for optimization-based modeling. J Domke, Artificial Intelligence and Statistics. Domke, J. Generic methods for optimization-based modeling. In Artificial Intelligence and Statistics, pp. 318-326, 2012.\n\nLearning graph representations with embedding propagation. A G Duran, M Niepert, Advances in Neural Information Processing Systems. Duran, A. G. and Niepert, M. Learning graph representations with embedding propagation. In Advances in Neural Information Processing Systems, pp. 5119-5130, 2017.\n\nOn the evolution of random graphs. P Erdos, A R\u00e9nyi, Publ. Math. Inst. Hung. Acad. Sci. 51Erdos, P. and R\u00e9nyi, A. On the evolution of random graphs. Publ. Math. Inst. Hung. Acad. Sci, 5(1): 17-60, 1960.\n\nHyperparameter optimization. M Feurer, F Hutter, Automatic Machine Learning: Methods, Systems, Challenges. Hutter, F., Kotthoff, L., and Vanschoren, J.SpringerpressFeurer, M. and Hutter, F. Hyperparameter optimization. In Hutter, F., Kotthoff, L., and Vanschoren, J. (eds.), Automatic Machine Learning: Methods, Systems, Challenges, pp. 3-38. Springer, 2018. In press, available at http://automl.org/book.\n\nLearning constrained task similarities in graph-regularized multi-task learning. Regularization, Optimization, Kernels, and Support Vector Machines. R Flamary, A Rakotomamonjy, G Gasso, 103Flamary, R., Rakotomamonjy, A., and Gasso, G. Learning constrained task similarities in graph-regularized multi-task learning. Regularization, Optimization, Kernels, and Support Vector Machines, pp. 103, 2014.\n\nForward and reverse gradient-based hyperparameter optimization. L Franceschi, M Donini, P Frasconi, M Pontil, Franceschi, L., Donini, M., Frasconi, P., and Pontil, M. Forward and reverse gradient-based hyperparameter optimization. ICML, 2017.\n\nBilevel programming for hyperparameter optimization and meta-learning. ICML. L Franceschi, P Frasconi, S Salzo, R Grazzi, M Pontil, Franceschi, L., Frasconi, P., Salzo, S., Grazzi, R., and Pontil, M. Bilevel programming for hyperparameter optimization and meta-learning. ICML, 2018.\n\nBilevel learning of the group lasso structure. J Frecon, S Salzo, M Pontil, Advances in Neural Information Processing Systems. 31Frecon, J., Salzo, S., and Pontil, M. Bilevel learning of the group lasso structure. In Advances in Neural Information Processing Systems 31, pp. 8311-8321, 2018.\n\nIntroduction to statistical relational learning. L Getoor, B Taskar, MIT press Cambridge1Getoor, L. and Taskar, B. Introduction to statistical relational learning, volume 1. MIT press Cambridge, 2007.\n\nNeural message passing for quantum chemistry. J Gilmer, S S Schoenholz, P F Riley, O Vinyals, G E Dahl, arXiv:1704.01212arXiv preprintGilmer, J., Schoenholz, S. S., Riley, P. F., Vinyals, O., and Dahl, G. E. Neural message passing for quantum chemistry. arXiv preprint arXiv:1704.01212, 2017.\n\nBackpropagation through the void: Optimizing control variates for black-box gradient estimation. W Grathwohl, D Choi, Y Wu, G Roeder, D Duvenaud, ICLRGrathwohl, W., Choi, D., Wu, Y., Roeder, G., and Duvenaud, D. Backpropagation through the void: Optimizing control variates for black-box gradient estimation. ICLR, 2018.\n\nEvaluating derivatives: principles and techniques of algorithmic differentiation. A Griewank, A Walther, 105SiamGriewank, A. and Walther, A. Evaluating derivatives: principles and techniques of algorithmic differentia- tion, volume 105. Siam, 2008.\n\nA Grover, A Zweig, S Ermon, Graphite, arXiv:1803.10459Iterative generative modeling of graphs. arXiv preprintGrover, A., Zweig, A., and Ermon, S. Graphite: Iterative generative modeling of graphs. arXiv preprint arXiv:1803.10459, 2018.\n\nInductive representation learning on large graphs. W Hamilton, Z Ying, J Leskovec, Advances in Neural Information Processing Systems. Hamilton, W., Ying, Z., and Leskovec, J. Inductive representation learning on large graphs. In Advances in Neural Information Processing Systems, pp. 1024-1034, 2017.\n\nCategorical reparameterization with gumbel-softmax. E Jang, S Gu, B Poole, Jang, E., Gu, S., and Poole, B. Categorical reparameterization with gumbel-softmax. ICLR, 2017.\n\nLearning graphical state transitions. D D Johnson, Johnson, D. D. Learning graphical state transitions. ICLR, 2017.\n\nA method for stochastic optimization. D P Kingma, J Ba, Adam, ICLRKingma, D. P. and Ba, J. Adam: A method for stochastic optimization. ICLR, 2015.\n\nT Kipf, E Fetaya, K.-C Wang, M Welling, R Zemel, arXiv:1802.04687Neural relational inference for interacting systems. arXiv preprintKipf, T., Fetaya, E., Wang, K.-C., Welling, M., and Zemel, R. Neural relational inference for interacting systems. arXiv preprint arXiv:1802.04687, 2018.\n\nSemi-supervised classification with graph convolutional networks. T N Kipf, M Welling, Kipf, T. N. and Welling, M. Semi-supervised classification with graph convolutional networks. ICLR, 2017.\n\nGraphs over time: densification laws, shrinking diameters and possible explanations. J Leskovec, J Kleinberg, C Faloutsos, Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining. the eleventh ACM SIGKDD international conference on Knowledge discovery in data miningACMLeskovec, J., Kleinberg, J., and Faloutsos, C. Graphs over time: densification laws, shrinking diameters and possible explanations. In Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining, pp. 177-187. ACM, 2005.\n\nKronecker graphs: An approach to modeling networks. J Leskovec, D Chakrabarti, J Kleinberg, C Faloutsos, Z Ghahramani, Journal of Machine Learning Research. 11Leskovec, J., Chakrabarti, D., Kleinberg, J., Faloutsos, C., and Ghahramani, Z. Kronecker graphs: An approach to modeling networks. Journal of Machine Learning Research, 11(Feb):985-1042, 2010.\n\nLearning deep generative models of graphs. Y Li, O Vinyals, C Dyer, R Pascanu, P Battaglia, arXiv:1803.03324arXiv preprintLi, Y., Vinyals, O., Dyer, C., Pascanu, R., and Battaglia, P. Learning deep generative models of graphs. arXiv preprint arXiv:1803.03324, 2018.\n\nThe link-prediction problem for social networks. D Liben-Nowell, J Kleinberg, Journal of the American society for information science and technology. 587Liben-Nowell, D. and Kleinberg, J. The link-prediction problem for social networks. Journal of the American society for information science and technology, 58(7):1019-1031, 2007.\n\nLink prediction in complex networks: A survey. Physica A: statistical mechanics and its applications. L L\u00fc, T Zhou, 390L\u00fc, L. and Zhou, T. Link prediction in complex networks: A survey. Physica A: statistical mechanics and its applications, 390(6):1150-1170, 2011.\n\nVisualizing data using t-sne. L V Maaten, G Hinton, Journal of machine learning research. 9Maaten, L. v. d. and Hinton, G. Visualizing data using t-sne. Journal of machine learning research, 9 (Nov):2579-2605, 2008.\n\nGradient-based hyperparameter optimization through reversible learning. D Maclaurin, D Duvenaud, Adams , R , International Conference on Machine Learning. Maclaurin, D., Duvenaud, D., and Adams, R. Gradient-based hyperparameter optimization through reversible learning. In International Conference on Machine Learning, pp. 2113-2122, 2015.\n\nThe concrete distribution: A continuous relaxation of discrete random variables. C J Maddison, A Mnih, Y W Teh, Maddison, C. J., Mnih, A., and Teh, Y. W. The concrete distribution: A continuous relaxation of discrete random variables. ICLR, 2017.\n\nGeometric deep learning on graphs and manifolds using mixture model cnns. F Monti, D Boscaini, J Masci, E Rodola, J Svoboda, M M Bronstein, Proc. CVPR. CVPR13Monti, F., Boscaini, D., Masci, J., Rodola, E., Svoboda, J., and Bronstein, M. M. Geometric deep learning on graphs and manifolds using mixture model cnns. In Proc. CVPR, volume 1, pp. 3, 2017.\n\nTowards poisoning of deep learning algorithms with back-gradient optimization. L Mu\u00f1oz-Gonz\u00e1lez, B Biggio, A Demontis, A Paudice, V Wongrassamee, E C Lupu, F Roli, Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security. the 10th ACM Workshop on Artificial Intelligence and SecurityACMMu\u00f1oz-Gonz\u00e1lez, L., Biggio, B., Demontis, A., Paudice, A., Wongrassamee, V., Lupu, E. C., and Roli, F. Towards poisoning of deep learning algorithms with back-gradient optimization. In Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security, pp. 27-38. ACM, 2017.\n\nA review of relational machine learning for knowledge graphs. M Nickel, K Murphy, V Tresp, E Gabrilovich, Proceedings of the IEEE. 1041Nickel, M., Murphy, K., Tresp, V., and Gabrilovich, E. A review of relational machine learning for knowledge graphs. Proceedings of the IEEE, 104(1):11-33, 2016.\n\nScikit-learn: Machine learning in Python. F Pedregosa, G Varoquaux, A Gramfort, V Michel, B Thirion, O Grisel, M Blondel, P Prettenhofer, R Weiss, V Dubourg, J Vanderplas, A Passos, D Cournapeau, M Brucher, M Perrot, E Duchesnay, Journal of Machine Learning Research. 12Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., Cournapeau, D., Brucher, M., Perrot, M., and Duchesnay, E. Scikit-learn: Machine learning in Python. Journal of Machine Learning Research, 12: 2825-2830, 2011.\n\nNonlinear dimensionality reduction by locally linear embedding. S T Roweis, L K Saul, Science. 2905500Roweis, S. T. and Saul, L. K. Nonlinear dimensionality reduction by locally linear embedding. Science, 290(5500):2323-2326, 2000.\n\nThe graph neural network model. F Scarselli, M Gori, A C Tsoi, M Hagenbuchner, G Monfardini, IEEE Transactions on Neural Networks. 201Scarselli, F., Gori, M., Tsoi, A. C., Hagenbuchner, M., and Monfardini, G. The graph neural network model. IEEE Transactions on Neural Networks, 20(1):61-80, 2009.\n\nGradient estimation using stochastic computation graphs. J Schulman, N Heess, T Weber, Abbeel , P , Advances in Neural Information Processing Systems. Schulman, J., Heess, N., Weber, T., and Abbeel, P. Gradient estimation using stochastic computation graphs. In Advances in Neural Information Processing Systems, pp. 3528-3536, 2015.\n\nCollective classification in network data. P Sen, G Namata, M Bilgic, L Getoor, B Galligher, T Eliassi-Rad, AI magazine. 29393Sen, P., Namata, G., Bilgic, M., Getoor, L., Galligher, B., and Eliassi-Rad, T. Collective classification in network data. AI magazine, 29(3):93, 2008.\n\nDropout: a simple way to prevent neural networks from overfitting. N Srivastava, G Hinton, A Krizhevsky, I Sutskever, R Salakhutdinov, The Journal of Machine Learning Research. 151Srivastava, N., Hinton, G., Krizhevsky, A., Sutskever, I., and Salakhutdinov, R. Dropout: a simple way to prevent neural networks from overfitting. The Journal of Machine Learning Research, 15(1):1929-1958, 2014.\n\nUnbiasing truncated backpropagation through time. C Tallec, Y Ollivier, arXiv:1705.08209arXiv preprintTallec, C. and Ollivier, Y. Unbiasing truncated backpropagation through time. arXiv preprint arXiv:1705.08209, 2017.\n\nA global geometric framework for nonlinear dimensionality reduction. J B Tenenbaum, V De Silva, J C Langford, Science. 2905500Tenenbaum, J. B., De Silva, V., and Langford, J. C. A global geometric framework for nonlinear dimensionality reduction. Science, 290(5500):2319-2323, 2000.\n\nLow-variance, unbiased gradient estimates for discrete latent variable models. G Tucker, A Mnih, C J Maddison, J Lawson, J Sohl-Dickstein, Rebar, Advances in Neural Information Processing Systems. Tucker, G., Mnih, A., Maddison, C. J., Lawson, J., and Sohl-Dickstein, J. Rebar: Low-variance, unbiased gradient estimates for discrete latent variable models. In Advances in Neural Information Processing Systems, pp. 2627-2636, 2017.\n\n. P Velickovic, G Cucurull, A Casanova, A Romero, P Lio, Y Bengio, Graph attention networks. ICLRVelickovic, P., Cucurull, G., Casanova, A., Romero, A., Lio, P., and Bengio, Y. Graph attention networks. ICLR, 2018.\n\nCollective dynamics of small-worldnetworks. D J Watts, S H Strogatz, nature. 3936684440Watts, D. J. and Strogatz, S. H. Collective dynamics of small-worldnetworks. nature, 393(6684):440, 1998.\n\nBackpropagation through time: What it does and how to do it. P J Werbos, Proceedings of the IEEE. 7810Werbos, P. J. Backpropagation through time: What it does and how to do it. Proceedings of the IEEE, 78(10):1550-1560, 1990.\n\nDeep learning via semi-supervised embedding. J Weston, F Ratle, H Mobahi, R Collobert, Neural Networks: Tricks of the Trade. SpringerWeston, J., Ratle, F., Mobahi, H., and Collobert, R. Deep learning via semi-supervised embedding. In Neural Networks: Tricks of the Trade, pp. 639-655. Springer, 2012.\n\nSimple statistical gradient-following algorithms for connectionist reinforcement learning. R J Williams, Machine learning. 83-4Williams, R. J. Simple statistical gradient-following algorithms for connectionist reinforcement learning. Machine learning, 8(3-4):229-256, 1992.\n\nAn efficient gradient-based algorithm for on-line training of recurrent network trajectories. R J Williams, J Peng, Neural computation. 24Williams, R. J. and Peng, J. An efficient gradient-based algorithm for on-line training of recurrent network trajectories. Neural computation, 2(4):490-501, 1990.\n\nRevisiting semi-supervised learning with graph embeddings. Z Yang, W W Cohen, R Salakhutdinov, Proceedings of the 33nd International Conference on Machine Learning. the 33nd International Conference on Machine LearningNew York City, NY, USAYang, Z., Cohen, W. W., and Salakhutdinov, R. Revisiting semi-supervised learning with graph embeddings. In Proceedings of the 33nd International Conference on Machine Learning, ICML 2016, New York City, NY, USA, June 19-24, 2016, pp. 40-48, 2016.\n\nJ You, R Ying, X Ren, W L Hamilton, J Leskovec, Graphrnn, A deep generative model for graphs. ICML. You, J., Ying, R., Ren, X., Hamilton, W. L., and Leskovec, J. Graphrnn: A deep generative model for graphs. ICML, 2018.\n\nWeisfeiler-lehman neural machine for link prediction. M Zhang, Y Chen, Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining. the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data MiningACMZhang, M. and Chen, Y. Weisfeiler-lehman neural machine for link prediction. In Proceedings of the 23rd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, pp. 575-583. ACM, 2017.\n\nM Zhang, Y Chen, arXiv:1802.09691Link prediction based on graph neural networks. arXiv preprintZhang, M. and Chen, Y. Link prediction based on graph neural networks. arXiv preprint arXiv:1802.09691, 2018.\n", "annotations": {"author": "[{\"end\":198,\"start\":58},{\"end\":278,\"start\":199},{\"end\":427,\"start\":279},{\"end\":491,\"start\":428}]", "publisher": null, "author_last_name": "[{\"end\":73,\"start\":63},{\"end\":214,\"start\":207},{\"end\":298,\"start\":292},{\"end\":435,\"start\":433}]", "author_first_name": "[{\"end\":62,\"start\":58},{\"end\":206,\"start\":199},{\"end\":291,\"start\":279},{\"end\":432,\"start\":428}]", "author_affiliation": "[{\"end\":165,\"start\":98},{\"end\":197,\"start\":167},{\"end\":277,\"start\":242},{\"end\":394,\"start\":327},{\"end\":426,\"start\":396},{\"end\":490,\"start\":455}]", "title": "[{\"end\":55,\"start\":1},{\"end\":546,\"start\":492}]", "venue": null, "abstract": "[{\"end\":1477,\"start\":548}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b41\"},\"end\":2188,\"start\":2165},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":2639,\"start\":2618},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":2675,\"start\":2651},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":3591,\"start\":3569},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":3610,\"start\":3591},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":3630,\"start\":3610},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":3652,\"start\":3630},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3674,\"start\":3652},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":3698,\"start\":3674},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":3984,\"start\":3959},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":6419,\"start\":6398},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":6946,\"start\":6927},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7363,\"start\":7341},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":7384,\"start\":7363},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":7412,\"start\":7384},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":7436,\"start\":7412},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8013,\"start\":8000},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":8036,\"start\":8013},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":8060,\"start\":8036},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8752,\"start\":8726},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":9043,\"start\":9020},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":9988,\"start\":9965},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":11314,\"start\":11294},{\"end\":15545,\"start\":15543},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":15816,\"start\":15802},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":16549,\"start\":16528},{\"end\":16763,\"start\":16713},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":17244,\"start\":17230},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":17265,\"start\":17244},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":18535,\"start\":18510},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":19740,\"start\":19722},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":19904,\"start\":19885},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":19925,\"start\":19904},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":20233,\"start\":20209},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":20573,\"start\":20548},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":21329,\"start\":21309},{\"end\":21842,\"start\":21824},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":21899,\"start\":21878},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":21962,\"start\":21941},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":22944,\"start\":22919},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":23010,\"start\":22991},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":24272,\"start\":24252},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":24400,\"start\":24376},{\"end\":29136,\"start\":29118},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":29193,\"start\":29172},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":29256,\"start\":29235},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":29382,\"start\":29363},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":29552,\"start\":29531},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":30151,\"start\":30130},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":30390,\"start\":30367},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":30435,\"start\":30411},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":30459,\"start\":30437},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":30702,\"start\":30684},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":30718,\"start\":30702},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":30738,\"start\":30718},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":30758,\"start\":30738},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":31716,\"start\":31684},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":31863,\"start\":31846},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":31883,\"start\":31863},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":32049,\"start\":32030},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":32427,\"start\":32405},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":32970,\"start\":32947},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":33048,\"start\":33032},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":33391,\"start\":33370},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":33485,\"start\":33463},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":33586,\"start\":33566},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":33667,\"start\":33644},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":33910,\"start\":33889},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":34153,\"start\":34131},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":36519,\"start\":36496}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":37159,\"start\":36767},{\"attributes\":{\"id\":\"fig_1\"},\"end\":37824,\"start\":37160},{\"attributes\":{\"id\":\"fig_3\"},\"end\":37914,\"start\":37825},{\"attributes\":{\"id\":\"fig_4\"},\"end\":38030,\"start\":37915},{\"attributes\":{\"id\":\"fig_5\"},\"end\":38414,\"start\":38031},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":38693,\"start\":38415},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":38821,\"start\":38694},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":39194,\"start\":38822},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":41107,\"start\":39195},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":41452,\"start\":41108}]", "paragraph": "[{\"end\":2314,\"start\":1493},{\"end\":3236,\"start\":2316},{\"end\":4177,\"start\":3238},{\"end\":4843,\"start\":4179},{\"end\":4955,\"start\":4858},{\"end\":5341,\"start\":4979},{\"end\":5456,\"start\":5398},{\"end\":6145,\"start\":5482},{\"end\":6498,\"start\":6198},{\"end\":6649,\"start\":6547},{\"end\":7155,\"start\":6744},{\"end\":8407,\"start\":7216},{\"end\":9044,\"start\":8477},{\"end\":9391,\"start\":9083},{\"end\":10136,\"start\":9393},{\"end\":10592,\"start\":10186},{\"end\":10698,\"start\":10641},{\"end\":11018,\"start\":10700},{\"end\":11445,\"start\":11020},{\"end\":12093,\"start\":11447},{\"end\":12180,\"start\":12132},{\"end\":12714,\"start\":12182},{\"end\":13042,\"start\":12716},{\"end\":13248,\"start\":13104},{\"end\":13581,\"start\":13285},{\"end\":14493,\"start\":13583},{\"end\":14844,\"start\":14542},{\"end\":15001,\"start\":14846},{\"end\":15252,\"start\":15050},{\"end\":15329,\"start\":15314},{\"end\":15554,\"start\":15452},{\"end\":15817,\"start\":15556},{\"end\":16213,\"start\":16034},{\"end\":16911,\"start\":16324},{\"end\":17571,\"start\":16913},{\"end\":18311,\"start\":17573},{\"end\":18718,\"start\":18313},{\"end\":18941,\"start\":18734},{\"end\":19575,\"start\":18943},{\"end\":20628,\"start\":19588},{\"end\":21072,\"start\":20652},{\"end\":21715,\"start\":21074},{\"end\":22449,\"start\":21717},{\"end\":22489,\"start\":22451},{\"end\":22651,\"start\":22491},{\"end\":23169,\"start\":22714},{\"end\":23993,\"start\":23171},{\"end\":24214,\"start\":23995},{\"end\":24546,\"start\":24216},{\"end\":25371,\"start\":24558},{\"end\":25958,\"start\":25373},{\"end\":27516,\"start\":25960},{\"end\":28953,\"start\":27518},{\"end\":29946,\"start\":28970},{\"end\":31624,\"start\":29948},{\"end\":32751,\"start\":31626},{\"end\":33970,\"start\":32753},{\"end\":34477,\"start\":33985},{\"end\":35323,\"start\":34479},{\"end\":35736,\"start\":35348},{\"end\":35791,\"start\":35738},{\"end\":36246,\"start\":35793},{\"end\":36391,\"start\":36248},{\"end\":36766,\"start\":36425}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":5397,\"start\":5342},{\"attributes\":{\"id\":\"formula_1\"},\"end\":6197,\"start\":6146},{\"attributes\":{\"id\":\"formula_2\"},\"end\":6546,\"start\":6499},{\"attributes\":{\"id\":\"formula_3\"},\"end\":6701,\"start\":6650},{\"attributes\":{\"id\":\"formula_4\"},\"end\":7215,\"start\":7156},{\"attributes\":{\"id\":\"formula_5\"},\"end\":8476,\"start\":8426},{\"attributes\":{\"id\":\"formula_6\"},\"end\":10640,\"start\":10593},{\"attributes\":{\"id\":\"formula_7\"},\"end\":12131,\"start\":12094},{\"attributes\":{\"id\":\"formula_9\"},\"end\":13103,\"start\":13043},{\"attributes\":{\"id\":\"formula_10\"},\"end\":13284,\"start\":13249},{\"attributes\":{\"id\":\"formula_11\"},\"end\":15049,\"start\":15002},{\"attributes\":{\"id\":\"formula_12\"},\"end\":15313,\"start\":15253},{\"attributes\":{\"id\":\"formula_13\"},\"end\":15451,\"start\":15330},{\"attributes\":{\"id\":\"formula_14\"},\"end\":16033,\"start\":15818},{\"attributes\":{\"id\":\"formula_15\"},\"end\":16323,\"start\":16214},{\"attributes\":{\"id\":\"formula_16\"},\"end\":22713,\"start\":22652}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":20627,\"start\":20620},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":25970,\"start\":25963},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":26513,\"start\":26506}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1491,\"start\":1479},{\"attributes\":{\"n\":\"2\"},\"end\":4856,\"start\":4846},{\"attributes\":{\"n\":\"2.1\"},\"end\":4977,\"start\":4958},{\"attributes\":{\"n\":\"2.2\"},\"end\":5480,\"start\":5459},{\"attributes\":{\"n\":\"2.3\"},\"end\":6742,\"start\":6703},{\"end\":8425,\"start\":8410},{\"attributes\":{\"n\":\"3\"},\"end\":9081,\"start\":9047},{\"attributes\":{\"n\":\"3.1\"},\"end\":10184,\"start\":10139},{\"attributes\":{\"n\":\"3.2\"},\"end\":14540,\"start\":14496},{\"attributes\":{\"n\":\"4\"},\"end\":18732,\"start\":18721},{\"attributes\":{\"n\":\"4.1\"},\"end\":19586,\"start\":19578},{\"attributes\":{\"n\":\"4.2\"},\"end\":20650,\"start\":20631},{\"attributes\":{\"n\":\"4.3\"},\"end\":24556,\"start\":24549},{\"attributes\":{\"n\":\"5\"},\"end\":28968,\"start\":28956},{\"attributes\":{\"n\":\"6\"},\"end\":33983,\"start\":33973},{\"end\":35346,\"start\":35326},{\"end\":36423,\"start\":36394},{\"end\":36778,\"start\":36768},{\"end\":37171,\"start\":37161},{\"end\":37836,\"start\":37826},{\"end\":37926,\"start\":37916},{\"end\":38042,\"start\":38032},{\"end\":38832,\"start\":38823},{\"end\":39205,\"start\":39196},{\"end\":41118,\"start\":41109}]", "table": "[{\"end\":38693,\"start\":38419},{\"end\":38821,\"start\":38781},{\"end\":39194,\"start\":38869},{\"end\":41107,\"start\":39765},{\"end\":41452,\"start\":41205}]", "figure_caption": "[{\"end\":37159,\"start\":36780},{\"end\":37824,\"start\":37173},{\"end\":37914,\"start\":37838},{\"end\":38030,\"start\":37928},{\"end\":38414,\"start\":38044},{\"end\":38419,\"start\":38417},{\"end\":38781,\"start\":38696},{\"end\":38869,\"start\":38834},{\"end\":39765,\"start\":39207},{\"end\":41205,\"start\":41120}]", "figure_ref": "[{\"end\":9404,\"start\":9396},{\"end\":10135,\"start\":10127},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":24616,\"start\":24608},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":26304,\"start\":26296},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27529,\"start\":27521},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":27983,\"start\":27975},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":28087,\"start\":28079},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":28381,\"start\":28373},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":28427,\"start\":28419},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":36529,\"start\":36521}]", "bib_author_first_name": "[{\"end\":42241,\"start\":42240},{\"end\":42250,\"start\":42249},{\"end\":42261,\"start\":42260},{\"end\":42271,\"start\":42270},{\"end\":42281,\"start\":42280},{\"end\":42289,\"start\":42288},{\"end\":42298,\"start\":42297},{\"end\":42300,\"start\":42299},{\"end\":42311,\"start\":42310},{\"end\":42320,\"start\":42319},{\"end\":42328,\"start\":42327},{\"end\":42337,\"start\":42336},{\"end\":42349,\"start\":42348},{\"end\":42363,\"start\":42362},{\"end\":42371,\"start\":42370},{\"end\":42381,\"start\":42380},{\"end\":42390,\"start\":42389},{\"end\":42397,\"start\":42396},{\"end\":42411,\"start\":42410},{\"end\":42421,\"start\":42420},{\"end\":42431,\"start\":42430},{\"end\":42444,\"start\":42443},{\"end\":42452,\"start\":42451},{\"end\":42461,\"start\":42460},{\"end\":42470,\"start\":42469},{\"end\":42480,\"start\":42479},{\"end\":42488,\"start\":42487},{\"end\":42500,\"start\":42499},{\"end\":42510,\"start\":42509},{\"end\":42521,\"start\":42520},{\"end\":42534,\"start\":42533},{\"end\":42544,\"start\":42543},{\"end\":42554,\"start\":42553},{\"end\":42567,\"start\":42566},{\"end\":42580,\"start\":42579},{\"end\":42590,\"start\":42589},{\"end\":42601,\"start\":42600},{\"end\":42611,\"start\":42610},{\"end\":42625,\"start\":42624},{\"end\":42634,\"start\":42633},{\"end\":42640,\"start\":42639},{\"end\":43380,\"start\":43379},{\"end\":43390,\"start\":43389},{\"end\":43400,\"start\":43399},{\"end\":43936,\"start\":43935},{\"end\":43946,\"start\":43945},{\"end\":43957,\"start\":43956},{\"end\":44215,\"start\":44214},{\"end\":44217,\"start\":44216},{\"end\":44228,\"start\":44227},{\"end\":44234,\"start\":44233},{\"end\":44240,\"start\":44239},{\"end\":44255,\"start\":44251},{\"end\":44601,\"start\":44600},{\"end\":44840,\"start\":44839},{\"end\":44850,\"start\":44849},{\"end\":44862,\"start\":44861},{\"end\":45104,\"start\":45103},{\"end\":45114,\"start\":45113},{\"end\":45311,\"start\":45310},{\"end\":45325,\"start\":45324},{\"end\":45334,\"start\":45333},{\"end\":45351,\"start\":45350},{\"end\":45704,\"start\":45703},{\"end\":45934,\"start\":45933},{\"end\":45936,\"start\":45935},{\"end\":45945,\"start\":45944},{\"end\":46206,\"start\":46205},{\"end\":46215,\"start\":46214},{\"end\":46404,\"start\":46403},{\"end\":46414,\"start\":46413},{\"end\":46931,\"start\":46930},{\"end\":46942,\"start\":46941},{\"end\":46959,\"start\":46958},{\"end\":47246,\"start\":47245},{\"end\":47260,\"start\":47259},{\"end\":47270,\"start\":47269},{\"end\":47282,\"start\":47281},{\"end\":47503,\"start\":47502},{\"end\":47517,\"start\":47516},{\"end\":47529,\"start\":47528},{\"end\":47538,\"start\":47537},{\"end\":47548,\"start\":47547},{\"end\":47757,\"start\":47756},{\"end\":47767,\"start\":47766},{\"end\":47776,\"start\":47775},{\"end\":48052,\"start\":48051},{\"end\":48062,\"start\":48061},{\"end\":48251,\"start\":48250},{\"end\":48261,\"start\":48260},{\"end\":48263,\"start\":48262},{\"end\":48277,\"start\":48276},{\"end\":48279,\"start\":48278},{\"end\":48288,\"start\":48287},{\"end\":48299,\"start\":48298},{\"end\":48301,\"start\":48300},{\"end\":48596,\"start\":48595},{\"end\":48609,\"start\":48608},{\"end\":48617,\"start\":48616},{\"end\":48623,\"start\":48622},{\"end\":48633,\"start\":48632},{\"end\":48903,\"start\":48902},{\"end\":48915,\"start\":48914},{\"end\":49071,\"start\":49070},{\"end\":49081,\"start\":49080},{\"end\":49090,\"start\":49089},{\"end\":49359,\"start\":49358},{\"end\":49371,\"start\":49370},{\"end\":49379,\"start\":49378},{\"end\":49662,\"start\":49661},{\"end\":49670,\"start\":49669},{\"end\":49676,\"start\":49675},{\"end\":49820,\"start\":49819},{\"end\":49822,\"start\":49821},{\"end\":49937,\"start\":49936},{\"end\":49939,\"start\":49938},{\"end\":49949,\"start\":49948},{\"end\":50047,\"start\":50046},{\"end\":50055,\"start\":50054},{\"end\":50068,\"start\":50064},{\"end\":50076,\"start\":50075},{\"end\":50087,\"start\":50086},{\"end\":50400,\"start\":50399},{\"end\":50402,\"start\":50401},{\"end\":50410,\"start\":50409},{\"end\":50613,\"start\":50612},{\"end\":50625,\"start\":50624},{\"end\":50638,\"start\":50637},{\"end\":51158,\"start\":51157},{\"end\":51170,\"start\":51169},{\"end\":51185,\"start\":51184},{\"end\":51198,\"start\":51197},{\"end\":51211,\"start\":51210},{\"end\":51503,\"start\":51502},{\"end\":51509,\"start\":51508},{\"end\":51520,\"start\":51519},{\"end\":51528,\"start\":51527},{\"end\":51539,\"start\":51538},{\"end\":51776,\"start\":51775},{\"end\":51792,\"start\":51791},{\"end\":52162,\"start\":52161},{\"end\":52168,\"start\":52167},{\"end\":52356,\"start\":52355},{\"end\":52358,\"start\":52357},{\"end\":52368,\"start\":52367},{\"end\":52615,\"start\":52614},{\"end\":52628,\"start\":52627},{\"end\":52644,\"start\":52639},{\"end\":52648,\"start\":52647},{\"end\":52965,\"start\":52964},{\"end\":52967,\"start\":52966},{\"end\":52979,\"start\":52978},{\"end\":52987,\"start\":52986},{\"end\":52989,\"start\":52988},{\"end\":53206,\"start\":53205},{\"end\":53215,\"start\":53214},{\"end\":53227,\"start\":53226},{\"end\":53236,\"start\":53235},{\"end\":53246,\"start\":53245},{\"end\":53257,\"start\":53256},{\"end\":53259,\"start\":53258},{\"end\":53564,\"start\":53563},{\"end\":53582,\"start\":53581},{\"end\":53592,\"start\":53591},{\"end\":53604,\"start\":53603},{\"end\":53615,\"start\":53614},{\"end\":53631,\"start\":53630},{\"end\":53633,\"start\":53632},{\"end\":53641,\"start\":53640},{\"end\":54139,\"start\":54138},{\"end\":54149,\"start\":54148},{\"end\":54159,\"start\":54158},{\"end\":54168,\"start\":54167},{\"end\":54417,\"start\":54416},{\"end\":54430,\"start\":54429},{\"end\":54443,\"start\":54442},{\"end\":54455,\"start\":54454},{\"end\":54465,\"start\":54464},{\"end\":54476,\"start\":54475},{\"end\":54486,\"start\":54485},{\"end\":54497,\"start\":54496},{\"end\":54513,\"start\":54512},{\"end\":54522,\"start\":54521},{\"end\":54533,\"start\":54532},{\"end\":54547,\"start\":54546},{\"end\":54557,\"start\":54556},{\"end\":54571,\"start\":54570},{\"end\":54582,\"start\":54581},{\"end\":54592,\"start\":54591},{\"end\":55034,\"start\":55033},{\"end\":55036,\"start\":55035},{\"end\":55046,\"start\":55045},{\"end\":55048,\"start\":55047},{\"end\":55235,\"start\":55234},{\"end\":55248,\"start\":55247},{\"end\":55256,\"start\":55255},{\"end\":55258,\"start\":55257},{\"end\":55266,\"start\":55265},{\"end\":55282,\"start\":55281},{\"end\":55559,\"start\":55558},{\"end\":55571,\"start\":55570},{\"end\":55580,\"start\":55579},{\"end\":55594,\"start\":55588},{\"end\":55598,\"start\":55597},{\"end\":55880,\"start\":55879},{\"end\":55887,\"start\":55886},{\"end\":55897,\"start\":55896},{\"end\":55907,\"start\":55906},{\"end\":55917,\"start\":55916},{\"end\":55930,\"start\":55929},{\"end\":56183,\"start\":56182},{\"end\":56197,\"start\":56196},{\"end\":56207,\"start\":56206},{\"end\":56221,\"start\":56220},{\"end\":56234,\"start\":56233},{\"end\":56560,\"start\":56559},{\"end\":56570,\"start\":56569},{\"end\":56799,\"start\":56798},{\"end\":56801,\"start\":56800},{\"end\":56814,\"start\":56813},{\"end\":56826,\"start\":56825},{\"end\":56828,\"start\":56827},{\"end\":57093,\"start\":57092},{\"end\":57103,\"start\":57102},{\"end\":57111,\"start\":57110},{\"end\":57113,\"start\":57112},{\"end\":57125,\"start\":57124},{\"end\":57135,\"start\":57134},{\"end\":57449,\"start\":57448},{\"end\":57463,\"start\":57462},{\"end\":57475,\"start\":57474},{\"end\":57487,\"start\":57486},{\"end\":57497,\"start\":57496},{\"end\":57504,\"start\":57503},{\"end\":57707,\"start\":57706},{\"end\":57709,\"start\":57708},{\"end\":57718,\"start\":57717},{\"end\":57720,\"start\":57719},{\"end\":57918,\"start\":57917},{\"end\":57920,\"start\":57919},{\"end\":58129,\"start\":58128},{\"end\":58139,\"start\":58138},{\"end\":58148,\"start\":58147},{\"end\":58158,\"start\":58157},{\"end\":58477,\"start\":58476},{\"end\":58479,\"start\":58478},{\"end\":58755,\"start\":58754},{\"end\":58757,\"start\":58756},{\"end\":58769,\"start\":58768},{\"end\":59022,\"start\":59021},{\"end\":59030,\"start\":59029},{\"end\":59032,\"start\":59031},{\"end\":59041,\"start\":59040},{\"end\":59452,\"start\":59451},{\"end\":59459,\"start\":59458},{\"end\":59467,\"start\":59466},{\"end\":59474,\"start\":59473},{\"end\":59476,\"start\":59475},{\"end\":59488,\"start\":59487},{\"end\":59727,\"start\":59726},{\"end\":59736,\"start\":59735},{\"end\":60135,\"start\":60134},{\"end\":60144,\"start\":60143}]", "bib_author_last_name": "[{\"end\":42247,\"start\":42242},{\"end\":42258,\"start\":42251},{\"end\":42268,\"start\":42262},{\"end\":42278,\"start\":42272},{\"end\":42286,\"start\":42282},{\"end\":42295,\"start\":42290},{\"end\":42308,\"start\":42301},{\"end\":42317,\"start\":42312},{\"end\":42325,\"start\":42321},{\"end\":42334,\"start\":42329},{\"end\":42346,\"start\":42338},{\"end\":42360,\"start\":42350},{\"end\":42368,\"start\":42364},{\"end\":42378,\"start\":42372},{\"end\":42387,\"start\":42382},{\"end\":42394,\"start\":42391},{\"end\":42408,\"start\":42398},{\"end\":42418,\"start\":42412},{\"end\":42428,\"start\":42422},{\"end\":42441,\"start\":42432},{\"end\":42449,\"start\":42445},{\"end\":42458,\"start\":42453},{\"end\":42467,\"start\":42462},{\"end\":42477,\"start\":42471},{\"end\":42485,\"start\":42481},{\"end\":42497,\"start\":42489},{\"end\":42507,\"start\":42501},{\"end\":42518,\"start\":42511},{\"end\":42531,\"start\":42522},{\"end\":42541,\"start\":42535},{\"end\":42551,\"start\":42545},{\"end\":42564,\"start\":42555},{\"end\":42577,\"start\":42568},{\"end\":42587,\"start\":42581},{\"end\":42598,\"start\":42591},{\"end\":42608,\"start\":42602},{\"end\":42622,\"start\":42612},{\"end\":42631,\"start\":42626},{\"end\":42637,\"start\":42635},{\"end\":42646,\"start\":42641},{\"end\":43387,\"start\":43381},{\"end\":43397,\"start\":43391},{\"end\":43410,\"start\":43401},{\"end\":43943,\"start\":43937},{\"end\":43954,\"start\":43947},{\"end\":43967,\"start\":43958},{\"end\":44225,\"start\":44218},{\"end\":44231,\"start\":44229},{\"end\":44237,\"start\":44235},{\"end\":44249,\"start\":44241},{\"end\":44260,\"start\":44256},{\"end\":44608,\"start\":44602},{\"end\":44847,\"start\":44841},{\"end\":44859,\"start\":44851},{\"end\":44869,\"start\":44863},{\"end\":45111,\"start\":45105},{\"end\":45119,\"start\":45115},{\"end\":45322,\"start\":45312},{\"end\":45331,\"start\":45326},{\"end\":45348,\"start\":45335},{\"end\":45359,\"start\":45352},{\"end\":45364,\"start\":45361},{\"end\":45710,\"start\":45705},{\"end\":45942,\"start\":45937},{\"end\":45953,\"start\":45946},{\"end\":46212,\"start\":46207},{\"end\":46221,\"start\":46216},{\"end\":46411,\"start\":46405},{\"end\":46421,\"start\":46415},{\"end\":46939,\"start\":46932},{\"end\":46956,\"start\":46943},{\"end\":46965,\"start\":46960},{\"end\":47257,\"start\":47247},{\"end\":47267,\"start\":47261},{\"end\":47279,\"start\":47271},{\"end\":47289,\"start\":47283},{\"end\":47514,\"start\":47504},{\"end\":47526,\"start\":47518},{\"end\":47535,\"start\":47530},{\"end\":47545,\"start\":47539},{\"end\":47555,\"start\":47549},{\"end\":47764,\"start\":47758},{\"end\":47773,\"start\":47768},{\"end\":47783,\"start\":47777},{\"end\":48059,\"start\":48053},{\"end\":48069,\"start\":48063},{\"end\":48258,\"start\":48252},{\"end\":48274,\"start\":48264},{\"end\":48285,\"start\":48280},{\"end\":48296,\"start\":48289},{\"end\":48306,\"start\":48302},{\"end\":48606,\"start\":48597},{\"end\":48614,\"start\":48610},{\"end\":48620,\"start\":48618},{\"end\":48630,\"start\":48624},{\"end\":48642,\"start\":48634},{\"end\":48912,\"start\":48904},{\"end\":48923,\"start\":48916},{\"end\":49078,\"start\":49072},{\"end\":49087,\"start\":49082},{\"end\":49096,\"start\":49091},{\"end\":49106,\"start\":49098},{\"end\":49368,\"start\":49360},{\"end\":49376,\"start\":49372},{\"end\":49388,\"start\":49380},{\"end\":49667,\"start\":49663},{\"end\":49673,\"start\":49671},{\"end\":49682,\"start\":49677},{\"end\":49830,\"start\":49823},{\"end\":49946,\"start\":49940},{\"end\":49952,\"start\":49950},{\"end\":49958,\"start\":49954},{\"end\":50052,\"start\":50048},{\"end\":50062,\"start\":50056},{\"end\":50073,\"start\":50069},{\"end\":50084,\"start\":50077},{\"end\":50093,\"start\":50088},{\"end\":50407,\"start\":50403},{\"end\":50418,\"start\":50411},{\"end\":50622,\"start\":50614},{\"end\":50635,\"start\":50626},{\"end\":50648,\"start\":50639},{\"end\":51167,\"start\":51159},{\"end\":51182,\"start\":51171},{\"end\":51195,\"start\":51186},{\"end\":51208,\"start\":51199},{\"end\":51222,\"start\":51212},{\"end\":51506,\"start\":51504},{\"end\":51517,\"start\":51510},{\"end\":51525,\"start\":51521},{\"end\":51536,\"start\":51529},{\"end\":51549,\"start\":51540},{\"end\":51789,\"start\":51777},{\"end\":51802,\"start\":51793},{\"end\":52165,\"start\":52163},{\"end\":52173,\"start\":52169},{\"end\":52365,\"start\":52359},{\"end\":52375,\"start\":52369},{\"end\":52625,\"start\":52616},{\"end\":52637,\"start\":52629},{\"end\":52976,\"start\":52968},{\"end\":52984,\"start\":52980},{\"end\":52993,\"start\":52990},{\"end\":53212,\"start\":53207},{\"end\":53224,\"start\":53216},{\"end\":53233,\"start\":53228},{\"end\":53243,\"start\":53237},{\"end\":53254,\"start\":53247},{\"end\":53269,\"start\":53260},{\"end\":53579,\"start\":53565},{\"end\":53589,\"start\":53583},{\"end\":53601,\"start\":53593},{\"end\":53612,\"start\":53605},{\"end\":53628,\"start\":53616},{\"end\":53638,\"start\":53634},{\"end\":53646,\"start\":53642},{\"end\":54146,\"start\":54140},{\"end\":54156,\"start\":54150},{\"end\":54165,\"start\":54160},{\"end\":54180,\"start\":54169},{\"end\":54427,\"start\":54418},{\"end\":54440,\"start\":54431},{\"end\":54452,\"start\":54444},{\"end\":54462,\"start\":54456},{\"end\":54473,\"start\":54466},{\"end\":54483,\"start\":54477},{\"end\":54494,\"start\":54487},{\"end\":54510,\"start\":54498},{\"end\":54519,\"start\":54514},{\"end\":54530,\"start\":54523},{\"end\":54544,\"start\":54534},{\"end\":54554,\"start\":54548},{\"end\":54568,\"start\":54558},{\"end\":54579,\"start\":54572},{\"end\":54589,\"start\":54583},{\"end\":54602,\"start\":54593},{\"end\":55043,\"start\":55037},{\"end\":55053,\"start\":55049},{\"end\":55245,\"start\":55236},{\"end\":55253,\"start\":55249},{\"end\":55263,\"start\":55259},{\"end\":55279,\"start\":55267},{\"end\":55293,\"start\":55283},{\"end\":55568,\"start\":55560},{\"end\":55577,\"start\":55572},{\"end\":55586,\"start\":55581},{\"end\":55884,\"start\":55881},{\"end\":55894,\"start\":55888},{\"end\":55904,\"start\":55898},{\"end\":55914,\"start\":55908},{\"end\":55927,\"start\":55918},{\"end\":55942,\"start\":55931},{\"end\":56194,\"start\":56184},{\"end\":56204,\"start\":56198},{\"end\":56218,\"start\":56208},{\"end\":56231,\"start\":56222},{\"end\":56248,\"start\":56235},{\"end\":56567,\"start\":56561},{\"end\":56579,\"start\":56571},{\"end\":56811,\"start\":56802},{\"end\":56823,\"start\":56815},{\"end\":56837,\"start\":56829},{\"end\":57100,\"start\":57094},{\"end\":57108,\"start\":57104},{\"end\":57122,\"start\":57114},{\"end\":57132,\"start\":57126},{\"end\":57150,\"start\":57136},{\"end\":57157,\"start\":57152},{\"end\":57460,\"start\":57450},{\"end\":57472,\"start\":57464},{\"end\":57484,\"start\":57476},{\"end\":57494,\"start\":57488},{\"end\":57501,\"start\":57498},{\"end\":57511,\"start\":57505},{\"end\":57715,\"start\":57710},{\"end\":57729,\"start\":57721},{\"end\":57927,\"start\":57921},{\"end\":58136,\"start\":58130},{\"end\":58145,\"start\":58140},{\"end\":58155,\"start\":58149},{\"end\":58168,\"start\":58159},{\"end\":58488,\"start\":58480},{\"end\":58766,\"start\":58758},{\"end\":58774,\"start\":58770},{\"end\":59027,\"start\":59023},{\"end\":59038,\"start\":59033},{\"end\":59055,\"start\":59042},{\"end\":59456,\"start\":59453},{\"end\":59464,\"start\":59460},{\"end\":59471,\"start\":59468},{\"end\":59485,\"start\":59477},{\"end\":59497,\"start\":59489},{\"end\":59507,\"start\":59499},{\"end\":59733,\"start\":59728},{\"end\":59741,\"start\":59737},{\"end\":60141,\"start\":60136},{\"end\":60149,\"start\":60145}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":43280,\"start\":42173},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":16902615},\"end\":43646,\"start\":43282},{\"attributes\":{\"id\":\"b2\"},\"end\":43841,\"start\":43648},{\"attributes\":{\"doi\":\"arXiv:1308.3432\",\"id\":\"b3\"},\"end\":44170,\"start\":43843},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":926207},\"end\":44535,\"start\":44172},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":115963355},\"end\":44800,\"start\":44537},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":17940168},\"end\":45036,\"start\":44802},{\"attributes\":{\"doi\":\"arXiv:1805.11973\",\"id\":\"b7\"},\"end\":45278,\"start\":45038},{\"attributes\":{\"id\":\"b8\"},\"end\":45652,\"start\":45280},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":2792062},\"end\":45872,\"start\":45654},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":39741524},\"end\":46168,\"start\":45874},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":6829589},\"end\":46372,\"start\":46170},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":11574468},\"end\":46779,\"start\":46374},{\"attributes\":{\"id\":\"b13\"},\"end\":47179,\"start\":46781},{\"attributes\":{\"id\":\"b14\"},\"end\":47423,\"start\":47181},{\"attributes\":{\"id\":\"b15\"},\"end\":47707,\"start\":47425},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":54077231},\"end\":48000,\"start\":47709},{\"attributes\":{\"id\":\"b17\"},\"end\":48202,\"start\":48002},{\"attributes\":{\"doi\":\"arXiv:1704.01212\",\"id\":\"b18\"},\"end\":48496,\"start\":48204},{\"attributes\":{\"id\":\"b19\"},\"end\":48818,\"start\":48498},{\"attributes\":{\"id\":\"b20\"},\"end\":49068,\"start\":48820},{\"attributes\":{\"doi\":\"arXiv:1803.10459\",\"id\":\"b21\"},\"end\":49305,\"start\":49070},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":4755450},\"end\":49607,\"start\":49307},{\"attributes\":{\"id\":\"b23\"},\"end\":49779,\"start\":49609},{\"attributes\":{\"id\":\"b24\"},\"end\":49896,\"start\":49781},{\"attributes\":{\"id\":\"b25\"},\"end\":50044,\"start\":49898},{\"attributes\":{\"doi\":\"arXiv:1802.04687\",\"id\":\"b26\"},\"end\":50331,\"start\":50046},{\"attributes\":{\"id\":\"b27\"},\"end\":50525,\"start\":50333},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":9077635},\"end\":51103,\"start\":50527},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":15565327},\"end\":51457,\"start\":51105},{\"attributes\":{\"doi\":\"arXiv:1803.03324\",\"id\":\"b30\"},\"end\":51724,\"start\":51459},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":33364366},\"end\":52057,\"start\":51726},{\"attributes\":{\"id\":\"b32\"},\"end\":52323,\"start\":52059},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":5855042},\"end\":52540,\"start\":52325},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":8540522},\"end\":52881,\"start\":52542},{\"attributes\":{\"id\":\"b35\"},\"end\":53129,\"start\":52883},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":301319},\"end\":53482,\"start\":53131},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":12424035},\"end\":54074,\"start\":53484},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":12161567},\"end\":54372,\"start\":54076},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":10659969},\"end\":54967,\"start\":54374},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":5987139},\"end\":55200,\"start\":54969},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":206756462},\"end\":55499,\"start\":55202},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":7125379},\"end\":55834,\"start\":55501},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":62016134},\"end\":56113,\"start\":55836},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":6844431},\"end\":56507,\"start\":56115},{\"attributes\":{\"doi\":\"arXiv:1705.08209\",\"id\":\"b45\"},\"end\":56727,\"start\":56509},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":221338160},\"end\":57011,\"start\":56729},{\"attributes\":{\"id\":\"b47\"},\"end\":57444,\"start\":57013},{\"attributes\":{\"id\":\"b48\"},\"end\":57660,\"start\":57446},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":4429113},\"end\":57854,\"start\":57662},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":18470994},\"end\":58081,\"start\":57856},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":740114},\"end\":58383,\"start\":58083},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":2332513},\"end\":58658,\"start\":58385},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":12979634},\"end\":58960,\"start\":58660},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":7008752},\"end\":59449,\"start\":58962},{\"attributes\":{\"id\":\"b55\"},\"end\":59670,\"start\":59451},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":782975},\"end\":60132,\"start\":59672},{\"attributes\":{\"doi\":\"arXiv:1802.09691\",\"id\":\"b57\"},\"end\":60338,\"start\":60134}]", "bib_title": "[{\"end\":43377,\"start\":43282},{\"end\":44212,\"start\":44172},{\"end\":44598,\"start\":44537},{\"end\":44837,\"start\":44802},{\"end\":45308,\"start\":45280},{\"end\":45701,\"start\":45654},{\"end\":45931,\"start\":45874},{\"end\":46203,\"start\":46170},{\"end\":46401,\"start\":46374},{\"end\":47754,\"start\":47709},{\"end\":49356,\"start\":49307},{\"end\":50610,\"start\":50527},{\"end\":51155,\"start\":51105},{\"end\":51773,\"start\":51726},{\"end\":52353,\"start\":52325},{\"end\":52612,\"start\":52542},{\"end\":53203,\"start\":53131},{\"end\":53561,\"start\":53484},{\"end\":54136,\"start\":54076},{\"end\":54414,\"start\":54374},{\"end\":55031,\"start\":54969},{\"end\":55232,\"start\":55202},{\"end\":55556,\"start\":55501},{\"end\":55877,\"start\":55836},{\"end\":56180,\"start\":56115},{\"end\":56796,\"start\":56729},{\"end\":57090,\"start\":57013},{\"end\":57704,\"start\":57662},{\"end\":57915,\"start\":57856},{\"end\":58126,\"start\":58083},{\"end\":58474,\"start\":58385},{\"end\":58752,\"start\":58660},{\"end\":59019,\"start\":58962},{\"end\":59724,\"start\":59672}]", "bib_author": "[{\"end\":42249,\"start\":42240},{\"end\":42260,\"start\":42249},{\"end\":42270,\"start\":42260},{\"end\":42280,\"start\":42270},{\"end\":42288,\"start\":42280},{\"end\":42297,\"start\":42288},{\"end\":42310,\"start\":42297},{\"end\":42319,\"start\":42310},{\"end\":42327,\"start\":42319},{\"end\":42336,\"start\":42327},{\"end\":42348,\"start\":42336},{\"end\":42362,\"start\":42348},{\"end\":42370,\"start\":42362},{\"end\":42380,\"start\":42370},{\"end\":42389,\"start\":42380},{\"end\":42396,\"start\":42389},{\"end\":42410,\"start\":42396},{\"end\":42420,\"start\":42410},{\"end\":42430,\"start\":42420},{\"end\":42443,\"start\":42430},{\"end\":42451,\"start\":42443},{\"end\":42460,\"start\":42451},{\"end\":42469,\"start\":42460},{\"end\":42479,\"start\":42469},{\"end\":42487,\"start\":42479},{\"end\":42499,\"start\":42487},{\"end\":42509,\"start\":42499},{\"end\":42520,\"start\":42509},{\"end\":42533,\"start\":42520},{\"end\":42543,\"start\":42533},{\"end\":42553,\"start\":42543},{\"end\":42566,\"start\":42553},{\"end\":42579,\"start\":42566},{\"end\":42589,\"start\":42579},{\"end\":42600,\"start\":42589},{\"end\":42610,\"start\":42600},{\"end\":42624,\"start\":42610},{\"end\":42633,\"start\":42624},{\"end\":42639,\"start\":42633},{\"end\":42648,\"start\":42639},{\"end\":43389,\"start\":43379},{\"end\":43399,\"start\":43389},{\"end\":43412,\"start\":43399},{\"end\":43945,\"start\":43935},{\"end\":43956,\"start\":43945},{\"end\":43969,\"start\":43956},{\"end\":44227,\"start\":44214},{\"end\":44233,\"start\":44227},{\"end\":44239,\"start\":44233},{\"end\":44251,\"start\":44239},{\"end\":44262,\"start\":44251},{\"end\":44610,\"start\":44600},{\"end\":44849,\"start\":44839},{\"end\":44861,\"start\":44849},{\"end\":44871,\"start\":44861},{\"end\":45113,\"start\":45103},{\"end\":45121,\"start\":45113},{\"end\":45324,\"start\":45310},{\"end\":45333,\"start\":45324},{\"end\":45350,\"start\":45333},{\"end\":45361,\"start\":45350},{\"end\":45366,\"start\":45361},{\"end\":45712,\"start\":45703},{\"end\":45944,\"start\":45933},{\"end\":45955,\"start\":45944},{\"end\":46214,\"start\":46205},{\"end\":46223,\"start\":46214},{\"end\":46413,\"start\":46403},{\"end\":46423,\"start\":46413},{\"end\":46941,\"start\":46930},{\"end\":46958,\"start\":46941},{\"end\":46967,\"start\":46958},{\"end\":47259,\"start\":47245},{\"end\":47269,\"start\":47259},{\"end\":47281,\"start\":47269},{\"end\":47291,\"start\":47281},{\"end\":47516,\"start\":47502},{\"end\":47528,\"start\":47516},{\"end\":47537,\"start\":47528},{\"end\":47547,\"start\":47537},{\"end\":47557,\"start\":47547},{\"end\":47766,\"start\":47756},{\"end\":47775,\"start\":47766},{\"end\":47785,\"start\":47775},{\"end\":48061,\"start\":48051},{\"end\":48071,\"start\":48061},{\"end\":48260,\"start\":48250},{\"end\":48276,\"start\":48260},{\"end\":48287,\"start\":48276},{\"end\":48298,\"start\":48287},{\"end\":48308,\"start\":48298},{\"end\":48608,\"start\":48595},{\"end\":48616,\"start\":48608},{\"end\":48622,\"start\":48616},{\"end\":48632,\"start\":48622},{\"end\":48644,\"start\":48632},{\"end\":48914,\"start\":48902},{\"end\":48925,\"start\":48914},{\"end\":49080,\"start\":49070},{\"end\":49089,\"start\":49080},{\"end\":49098,\"start\":49089},{\"end\":49108,\"start\":49098},{\"end\":49370,\"start\":49358},{\"end\":49378,\"start\":49370},{\"end\":49390,\"start\":49378},{\"end\":49669,\"start\":49661},{\"end\":49675,\"start\":49669},{\"end\":49684,\"start\":49675},{\"end\":49832,\"start\":49819},{\"end\":49948,\"start\":49936},{\"end\":49954,\"start\":49948},{\"end\":49960,\"start\":49954},{\"end\":50054,\"start\":50046},{\"end\":50064,\"start\":50054},{\"end\":50075,\"start\":50064},{\"end\":50086,\"start\":50075},{\"end\":50095,\"start\":50086},{\"end\":50409,\"start\":50399},{\"end\":50420,\"start\":50409},{\"end\":50624,\"start\":50612},{\"end\":50637,\"start\":50624},{\"end\":50650,\"start\":50637},{\"end\":51169,\"start\":51157},{\"end\":51184,\"start\":51169},{\"end\":51197,\"start\":51184},{\"end\":51210,\"start\":51197},{\"end\":51224,\"start\":51210},{\"end\":51508,\"start\":51502},{\"end\":51519,\"start\":51508},{\"end\":51527,\"start\":51519},{\"end\":51538,\"start\":51527},{\"end\":51551,\"start\":51538},{\"end\":51791,\"start\":51775},{\"end\":51804,\"start\":51791},{\"end\":52167,\"start\":52161},{\"end\":52175,\"start\":52167},{\"end\":52367,\"start\":52355},{\"end\":52377,\"start\":52367},{\"end\":52627,\"start\":52614},{\"end\":52639,\"start\":52627},{\"end\":52647,\"start\":52639},{\"end\":52651,\"start\":52647},{\"end\":52978,\"start\":52964},{\"end\":52986,\"start\":52978},{\"end\":52995,\"start\":52986},{\"end\":53214,\"start\":53205},{\"end\":53226,\"start\":53214},{\"end\":53235,\"start\":53226},{\"end\":53245,\"start\":53235},{\"end\":53256,\"start\":53245},{\"end\":53271,\"start\":53256},{\"end\":53581,\"start\":53563},{\"end\":53591,\"start\":53581},{\"end\":53603,\"start\":53591},{\"end\":53614,\"start\":53603},{\"end\":53630,\"start\":53614},{\"end\":53640,\"start\":53630},{\"end\":53648,\"start\":53640},{\"end\":54148,\"start\":54138},{\"end\":54158,\"start\":54148},{\"end\":54167,\"start\":54158},{\"end\":54182,\"start\":54167},{\"end\":54429,\"start\":54416},{\"end\":54442,\"start\":54429},{\"end\":54454,\"start\":54442},{\"end\":54464,\"start\":54454},{\"end\":54475,\"start\":54464},{\"end\":54485,\"start\":54475},{\"end\":54496,\"start\":54485},{\"end\":54512,\"start\":54496},{\"end\":54521,\"start\":54512},{\"end\":54532,\"start\":54521},{\"end\":54546,\"start\":54532},{\"end\":54556,\"start\":54546},{\"end\":54570,\"start\":54556},{\"end\":54581,\"start\":54570},{\"end\":54591,\"start\":54581},{\"end\":54604,\"start\":54591},{\"end\":55045,\"start\":55033},{\"end\":55055,\"start\":55045},{\"end\":55247,\"start\":55234},{\"end\":55255,\"start\":55247},{\"end\":55265,\"start\":55255},{\"end\":55281,\"start\":55265},{\"end\":55295,\"start\":55281},{\"end\":55570,\"start\":55558},{\"end\":55579,\"start\":55570},{\"end\":55588,\"start\":55579},{\"end\":55597,\"start\":55588},{\"end\":55601,\"start\":55597},{\"end\":55886,\"start\":55879},{\"end\":55896,\"start\":55886},{\"end\":55906,\"start\":55896},{\"end\":55916,\"start\":55906},{\"end\":55929,\"start\":55916},{\"end\":55944,\"start\":55929},{\"end\":56196,\"start\":56182},{\"end\":56206,\"start\":56196},{\"end\":56220,\"start\":56206},{\"end\":56233,\"start\":56220},{\"end\":56250,\"start\":56233},{\"end\":56569,\"start\":56559},{\"end\":56581,\"start\":56569},{\"end\":56813,\"start\":56798},{\"end\":56825,\"start\":56813},{\"end\":56839,\"start\":56825},{\"end\":57102,\"start\":57092},{\"end\":57110,\"start\":57102},{\"end\":57124,\"start\":57110},{\"end\":57134,\"start\":57124},{\"end\":57152,\"start\":57134},{\"end\":57159,\"start\":57152},{\"end\":57462,\"start\":57448},{\"end\":57474,\"start\":57462},{\"end\":57486,\"start\":57474},{\"end\":57496,\"start\":57486},{\"end\":57503,\"start\":57496},{\"end\":57513,\"start\":57503},{\"end\":57717,\"start\":57706},{\"end\":57731,\"start\":57717},{\"end\":57929,\"start\":57917},{\"end\":58138,\"start\":58128},{\"end\":58147,\"start\":58138},{\"end\":58157,\"start\":58147},{\"end\":58170,\"start\":58157},{\"end\":58490,\"start\":58476},{\"end\":58768,\"start\":58754},{\"end\":58776,\"start\":58768},{\"end\":59029,\"start\":59021},{\"end\":59040,\"start\":59029},{\"end\":59057,\"start\":59040},{\"end\":59458,\"start\":59451},{\"end\":59466,\"start\":59458},{\"end\":59473,\"start\":59466},{\"end\":59487,\"start\":59473},{\"end\":59499,\"start\":59487},{\"end\":59509,\"start\":59499},{\"end\":59735,\"start\":59726},{\"end\":59743,\"start\":59735},{\"end\":60143,\"start\":60134},{\"end\":60151,\"start\":60143}]", "bib_venue": "[{\"end\":42238,\"start\":42173},{\"end\":43448,\"start\":43412},{\"end\":43743,\"start\":43648},{\"end\":43933,\"start\":43843},{\"end\":44328,\"start\":44262},{\"end\":44639,\"start\":44610},{\"end\":44900,\"start\":44871},{\"end\":45101,\"start\":45038},{\"end\":45435,\"start\":45366},{\"end\":45750,\"start\":45712},{\"end\":46004,\"start\":45955},{\"end\":46256,\"start\":46223},{\"end\":46479,\"start\":46423},{\"end\":46928,\"start\":46781},{\"end\":47243,\"start\":47181},{\"end\":47500,\"start\":47425},{\"end\":47834,\"start\":47785},{\"end\":48049,\"start\":48002},{\"end\":48248,\"start\":48204},{\"end\":48593,\"start\":48498},{\"end\":48900,\"start\":48820},{\"end\":49163,\"start\":49124},{\"end\":49439,\"start\":49390},{\"end\":49659,\"start\":49609},{\"end\":49817,\"start\":49781},{\"end\":49934,\"start\":49898},{\"end\":50162,\"start\":50111},{\"end\":50397,\"start\":50333},{\"end\":50751,\"start\":50650},{\"end\":51260,\"start\":51224},{\"end\":51500,\"start\":51459},{\"end\":51874,\"start\":51804},{\"end\":52159,\"start\":52059},{\"end\":52413,\"start\":52377},{\"end\":52695,\"start\":52651},{\"end\":52962,\"start\":52883},{\"end\":53281,\"start\":53271},{\"end\":53724,\"start\":53648},{\"end\":54205,\"start\":54182},{\"end\":54640,\"start\":54604},{\"end\":55062,\"start\":55055},{\"end\":55331,\"start\":55295},{\"end\":55650,\"start\":55601},{\"end\":55955,\"start\":55944},{\"end\":56290,\"start\":56250},{\"end\":56557,\"start\":56509},{\"end\":56846,\"start\":56839},{\"end\":57208,\"start\":57159},{\"end\":57737,\"start\":57731},{\"end\":57952,\"start\":57929},{\"end\":58206,\"start\":58170},{\"end\":58506,\"start\":58490},{\"end\":58794,\"start\":58776},{\"end\":59125,\"start\":59057},{\"end\":59549,\"start\":59509},{\"end\":59841,\"start\":59743},{\"end\":60213,\"start\":60167},{\"end\":44655,\"start\":44641},{\"end\":50839,\"start\":50753},{\"end\":53287,\"start\":53283},{\"end\":53787,\"start\":53726},{\"end\":59202,\"start\":59127},{\"end\":59926,\"start\":59843}]"}}}, "year": 2023, "month": 12, "day": 17}