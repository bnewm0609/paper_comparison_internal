{"id": 203610516, "updated": "2023-09-28 03:00:32.03", "metadata": {"title": "Hidden Trigger Backdoor Attacks", "authors": "[{\"first\":\"Aniruddha\",\"last\":\"Saha\",\"middle\":[]},{\"first\":\"Akshayvarun\",\"last\":\"Subramanya\",\"middle\":[]},{\"first\":\"Hamed\",\"last\":\"Pirsiavash\",\"middle\":[]}]", "venue": "ArXiv", "journal": "Proceedings of the AAAI Conference on Artificial Intelligence", "publication_date": {"year": 2019, "month": null, "day": null}, "abstract": "With the success of deep learning algorithms in various domains, studying adversarial attacks to secure deep models in real world applications has become an important research topic. Backdoor attacks are a form of adversarial attacks on deep networks where the attacker provides poisoned data to the victim to train the model with, and then activates the attack by showing a speci\ufb01c small trigger pattern at the test time. Most state-of-the-art backdoor attacks either provide mislabeled poisoning data that is possible to identify by visual inspection, reveal the trigger in the poisoned data, or use noise to hide the trigger. We propose a novel form of backdoor attack where poisoned data look natural with correct labels and also more importantly, the attacker hides the trigger in the poisoned data and keeps the trigger secret until the test time. We perform an extensive study on various image classi\ufb01cation settings and show that our attack can fool the model by pasting the trigger at random locations on unseen images although the model performs well on clean data. We also show that our proposed attack cannot be easily defended using a state-of-the-art defense algorithm for backdoor attacks.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1910.00033", "mag": "2996800219", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/aaai/SahaSP20", "doi": "10.1609/aaai.v34i07.6871"}}, "content": {"source": {"pdf_hash": "e6a170c7979ba0415e1ee35c58c1573520e0926d", "pdf_src": "ScienceParsePlus", "pdf_uri": "[\"https://ojs.aaai.org/index.php/AAAI/article/download/6871/6725\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "https://ojs.aaai.org/index.php/AAAI/article/download/6871/6725", "status": "GOLD"}}, "grobid": {"id": "a30087be14387540a2134899cecd052d4afcc518", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/e6a170c7979ba0415e1ee35c58c1573520e0926d.txt", "contents": "\nHidden Trigger Backdoor Attacks\n\n\nAniruddha Saha anisaha1@umbc.edu \nUniversity of Maryland\nBaltimore County\n\nAkshayvarun Subramanya \nUniversity of Maryland\nBaltimore County\n\nHamed Pirsiavash \nUniversity of Maryland\nBaltimore County\n\nHidden Trigger Backdoor Attacks\n\nWith the success of deep learning algorithms in various domains, studying adversarial attacks to secure deep models in real world applications has become an important research topic. Backdoor attacks are a form of adversarial attacks on deep networks where the attacker provides poisoned data to the victim to train the model with, and then activates the attack by showing a specific small trigger pattern at the test time. Most state-of-the-art backdoor attacks either provide mislabeled poisoning data that is possible to identify by visual inspection, reveal the trigger in the poisoned data, or use noise to hide the trigger. We propose a novel form of backdoor attack where poisoned data look natural with correct labels and also more importantly, the attacker hides the trigger in the poisoned data and keeps the trigger secret until the test time.We perform an extensive study on various image classification settings and show that our attack can fool the model by pasting the trigger at random locations on unseen images although the model performs well on clean data. We also show that our proposed attack cannot be easily defended using a state-of-the-art defense algorithm for backdoor attacks.\n\nIntroduction\n\nDeep learning has achieved great results in many domains including computer vision. However, it has been shown to be vulnerable in the presence of an adversary. The most wellknown adversarial attacks (Madry et al. 2017) are evasion attacks where the attacker optimizes for a perturbation pattern to fool the deep model at test time (e.g, change the prediction from the correct category to a wrong one.)\n\nBackdoor attacks are a different type of attack where the adversary chooses a trigger (a small patch), develops some poisoned data based on the trigger, and provides it to the victim to train a deep model with. The trained deep model will produce correct results on regular clean data, so the victim will not realize that the model is compromised. However, the model will mis-classify a source category image as a target category when the attacker pastes the trigger on the source image. As a popular example, the trigger can be a small sticker on a traffic sign that changes the prediction from \"stop sign\" to \"speed limit\".\n\nIt is shown that a pre-trained model can transfer easily to other tasks using small training data. For instance, it is common practice to download a deep model pre-trained on Im-ageNet (Russakovsky et al. 2015) and also download some images of interest from the web to finetune the model to solve the problem in hand. Backdoor attacks are effective at such applications since the attacker can leave some poisoned data on the web for the victims to download and use in training. It is not easy to mitigate such attacks as in the big data setting, it is difficult to make sure that all the data is collected from reliable sources.\n\nThe most well-known backdoor attack (Gu, Dolan-Gavitt, and Garg 2017) develops poisoned data by pasting the trigger on the source data and changing their label to the target category. Then, during fine-tuning the model will associate the trigger with the target category, and at the test time, the model will predict the target category when the trigger is presented by the attacker on an image from the source category. However, such attacks are not very practical as the victim can identify them by visually inspecting the images to find the wrong label or the small trigger itself.\n\nWe propose hidden trigger attacks where the poisoned data is labeled correctly and also does not contain any visible trigger, hence, it is not easy for the victim to identify the poisoned data by visual inspection. Inspired by (Shafahi et al. 2018;Sabour et al. 2016), we optimize for poisoned images that are close to target images in the pixel space and also close to source images patched by the trigger in the feature space. We label those poisoned images with the target category so visually are not identifiable. We show that the finetuned model associates the trigger with the target category even though the model has never seen the trigger explicitly. We also show that this attack can generalize to unseen images and random trigger locations. Fig. 1 shows our threat model in detail.\n\nWe believe our proposed attack is more practical than the previous backdoor attacks as in our case: (1) the victim does not have an effective way of identifying poisoned data visually and (2) the trigger is kept truly secret by the attacker and then revealed only at the test time, which might be late to defend in many applications.\n\nWe perform various experiments along with ablation stud- Figure 1: Left: First, the attacker generates a set of poisoned images, that look like target category, using Algorithm 1 and keeps the trigger secret. Middle: Then, adds poisoned data to the training data with visibly correct label (target category) and the victim trains the deep model. Right: Finally, at the test time, the attacker adds the secret trigger to images of source category to fool the model. Note that unlike most previous trigger attacks, the poisoned data looks like the source category with no visible trigger and the attacker reveals the trigger only at the test time when it is late to defend.\n\nies. For instance, we show that the attacker can reduce the validation accuracy on unseen images from 98% to 40% using a secret trigger at a random location which occupies only less than 2% of the image area.\n\n\nRelated work\n\nPoisoning attacks date back to (Xiao, Xiao, and Eckert 2012;Biggio, Nelson, and Laskov 2012;Biggio et al. 2013) where data poisoning was used to flip the results of a SVM classifier. More advanced methods were proposed in (Xiao et al. 2015;Koh and Liang 2017;Mei and Zhu 2015;Burkard and Lagesse 2017;Newell et al. 2014) which change the result of the classifier on the clean data as well. These reduce the practical impact of such attacks as the victim may not deploy the model if the validation accuracy on the clean data is low. More recently, the possibility of backdoor attacks, where a trigger is used in poisoning the data, was shown in (Gu, Dolan-Gavitt, and Garg 2017) and also in other works like (Liu, Xie, and Srivastava 2017;. Such methods are more practical as the model works well on clean data and the attacks are only triggered by presenting a predefined pattern (trigger). We derive inspiration from these works and extend them to the case where the trigger is not revealed even during training of the model. (Mu\u00f1oz-Gonz\u00e1lez et al. 2017) used back-gradient optimization and extend the poisoning attacks to a multi-class setting. Zhu et al. 2019) studied generalization and transferability of the poisoning attacks. (Koh, Steinhardt, and Liang 2018) proposed a stronger attack by placing poisoned data close to each other to not be detected by outlier detectors. (Liao et al. 2018) proposed to use small additive perturbations (similar to standard adversarial examples (Madry et al. 2017;Goodfellow, Shlens, and Szegedy 2014;Papernot et al. 2017)) instead of a patch to trigger the attack. Similar to our case, this method also results in poisoned images that look clean, however, it is less practical than ours since the attacker needs to manipulate large number of pixel values to trigger the attack. We believe that during an attack, the feasibility of triggering is more important than the visibility and hence we focus on hiding the trigger at only the poisoning time. (Turner, Tsipras, and Madry 2018) hide the trigger in clean-labeled poisoned images by reducing the image quality and also adversarially perturbing the poisoned images to be far from the source category. (Mu\u00f1oz-Gonz\u00e1lez et al. 2019) proposed a GAN-based approach to generate poisoned data. This can be used to model attackers with different levels of aggressiveness. (Rezaei and Liu 2019) develop a target-agnostic attack to craft instances which triggers specific output classes and can be used in transfer learning setting. (Shafahi et al. 2018) proposed a poisoning attack with clean-label poisoned images where the model is fooled when shown a particular set of images. Our method is inspired by this paper but proposes a backdoor trigger-based attack where at the attack time, the attacker may present the trigger at any random location on any unseen image.\n\nAs poisoning attacks may have important consequences in deployment of deep learning algorithms, there are recent works that defend against such attacks. (Steinhardt, Koh, and Liang 2017) proposed certified defenses for poisoning attacks. (Liu, Dolan-Gavitt, and Garg 2018) suggest network pruning as a defense for poisoning attacks. ) assume the defender has access to only the attacked model, but they have been shown to defend against  where triggers are explicitly added in training data and annotated with incorrect labels. Modifying such defenses for attacks similar to ours and (Shafahi et al. 2018) where there is no explicit trigger in the training data is a challenging task. (Gao et al. 2019) identified the attack at test time by perturbing or superimposing input images.  defended by proactively injecting trapdoors into the models. More recently, (Tran, Li, and Madry 2018) used a statistical test to reveal and remove the poisoned data points. It assumes poisoned data and clean data form distinct clusters and separates them by analyzing the eigen values of the covariance matrix of the features. We use this method to defend against our proposed attack and show that it cannot find most of our poisoned data points.\n\n\nMethod\n\nWe use the threat model defined in (Gu, Dolan-Gavitt, and Garg 2017) where an attacker provides poisoned data to a victim to use in learning. The victim uses a pre-trained deep model and finetunes it for a classification task using the poisoned data. The attacker has a secret trigger (e.g., a small image patch) and is interested in manipulating the training data so that when the trigger is shown to the finetuned model, it changes the model's prediction to a wrong category. Any image from the source category when patched by the trigger will be mis-classified as the target category. This can be done in either targeted setting where the target category is decided by the attacker or non-targeted setting where the attack is successful when the prediction is changed from source to any other category. Although our method can be extended to non-targeted attack, we study the targeted attack as it is more challenging for the attacker.\n\nFor the attacker to be successful, the finetuned model should perform correctly when trigger is not shown to the model. Otherwise, in the evaluation process, the victim will realize the model has low accuracy and will not deploy it in real world or modify the training data provided by the attacker. The well-known method introduced in (Gu, Dolan-Gavitt, and Garg 2017) proposes that the attacker can develop a set of poisoned training data (pairs of images and labels) by adding the trigger to a set of images from the source category and changing their label to the target category. Since some patched source images are labeled as target category, when the victim finetunes the model, the model will learn to associate the trigger patch with the target category. Then during inference, the model will work correctly on non-patched image and misclassify patched source images to the target category. Thus, making the attack successful.\n\nMore formally, given a source image s i from the source category, a trigger patch p, and a binary mask m which is 1 at the location of the patch and 0 everywhere else, the attacker pastes the trigger on the source image to get the patched source images i :\ns i = s i (1 \u2212 m) + p m(1)\nwhere is for element-wise product. Note that we can paste the patch at different locations by varying the mask m.\n\nIn (Gu, Dolan-Gavitt, and Garg 2017) during training, the attacker labelss incorrectly with the target category and provides it to the victim as poisoned data. The model trained by the victim associates the trigger with the target label. Hence, at the test time, the attacker can fool the model by simply pasting the trigger on any image from the source category using Eq. (1).\n\nOur threat model: In standard backdoor attacks, the poisoned data is labeled incorrectly, which can be identified and removed by manually annotating the data after downloading. Moreover, ideally, the attacker prefers to keep the trigger secret until the test time, however,in standard backdoor attacks, the trigger is revealed in the poisoned data. Therefore, inspired by (Shafahi et al. 2018;Sabour et al. 2016), we propose a stronger and more practical attack model where the poisoned data is labeled correctly (i.e, they look like target category and are labeled as the target category), and also the secret trigger is not revealed. We do so by optimizing for a poisoned image that in the pixel space, is close to an image from the target category while in the feature space, is close to a source image patched with the trigger.\n\nMore formally, given a target image t, a source image s, and a trigger patch p, we paste the trigger on s to get patched source images using Eq. (1). Then we optimize for a poisoned image z by solving the following optimization:\narg min z ||f (z) \u2212 f (s)|| 2 2 st. ||z \u2212 t|| \u221e < (2) where f (.) is the intermediate features of the deep model\nand is a small value that ensures the poisoned image z is not visually distinguishable from the target image t. In most experiments, we use fc7 layer of AlexNet for f (.) and = 16 when the image pixel values are in range [0, 255]. We used standard projected gradient descent (PGD) algorithm (Madry et al. 2017) which iterates between (a) optimizing the objective in Eq. (2) using gradient descent and (b) projecting the current solution back to the -neighborhood of the target image to satisfy the constraint in Eq. (2). Fig. 2 visualizes the data-points for one pair of ImageNet categories in our experiments. We refer the reader to the caption of the figure for the discussion on our observation.\n\nGeneralization across source images and trigger locations: The above optimization will generate a single poisoned data-point given a pair of images from source and target categories as well as a fixed location for the trigger. One can add this poisoned data with the correct label to the training data and train a binary classifier in a transfer learning setting by tuning only the final layer of the network. However, such a model may be fooled only when the attacker shows the trigger at the same location on the same source image which is not a very practical attack.\n\nWe are interested in generalizing the attack so that it works for novel source images (not seen at the time of poisoning) and also any random location for the trigger. Hence, in optimization, we should push the poisoned images to be close to the cluster of patched source images rather than being close to a single patched source image only. Inspired by universal adversarial examples in (Moosavi-Dezfooli et al. 2017), we can minimize the expected value of the loss in Eq. (2) over all possible trigger locations and source images. This can be done by simply choosing a random source image and trigger location at each iteration of the optimization. Moreover, one poisoned example added to a large clean dataset may not be enough for generalization across all patched source images, so we optimize for multiple poisoned images. Since the distribution of all patched source images in the feature space may be diverse and we can generate only a small number of poisoned images, in Algorithm 1, we propose an iterative method to optimize for multiple poisoned images jointly: at each iteration, we randomly sample patched source images and assign them to the current poisoned images (solutions) closest in the feature space. Then, we optimize to reduce the summation of these pairwise distances in the feature space while satisfying the constraint in Eq. 2.\n\nThis is similar to coordinate descent algorithm where we alternate between the loss and assignments (e.g., in kmeans). To avoid tuning all the poisoned images for just a few patched source images, we do a one-to-one assignment between them. One can use Hungarian algorithm (Kuhn 1955) to find the best solution in polynomial time, but to speedup further, we use a simple greedy algorithm where we loop over the poisoned images, find the nearest patched source for each, remove the pair, and continue.\n\nMore formally, we run Algorithm 1 to generate a set of poisoned images from a set of source and target images.\n\nResult: K poisoned images z 1. Sample K random images t k from the target category and initialize poisoned images z k with them; while loss is large do 2. Sample K random images s k from the source category and patch them with trigger at random locations to gets k ; 3. Find one-to-one mapping a(k) between z k ands k using Euclidean distance in the feature space f (.) : 4. Perform one iteration of mini-batch projected gradient descent for the following loss function:\narg min z K k=1 ||f (z k ) \u2212 f (s a(k) )|| 2 2 s.t. \u2200k : ||z k \u2212 t k || \u221e < end\nAlgorithm 1: Generating poisoning data After generating poisoned data, we add them to the target category and finetune a binary classifier for the source and target categories. We call the attack successful if on the validation data, this classifier has high accuracy on the clean images and low accuracy on the patched source images. Note that the images used for generating the poisoned data and finetuning the binary classifier are different.\n\n\nExperiments\n\nDataset: Since we want to have separate datasets for gen-erating poisoned data and finetuning the binary model, we divide the ImageNet data to three sets for each category: 200 images for generating the poisoned data, 800 images for training the binary classifier, and 100 images for testing the binary classifier.\n\nFor most experiments, we choose 10 random pairs of ImageNet for source and target categories to evaluate our attack. We also use 10 hand-picked pairs in Section 4.5 and 10 dog only pairs in Section 4.6. These pairs are listed in Table 6. We also use CIFAR10 dataset for the experiments in Section 4.4 for which the pairs are listed in Table 7.\n\nTriggers: We generate 10 random triggers by drawing a random 4 \u00d7 4 matrix of colors and resizing it to the desired patch size using bilinear interpolation. Fig. 4 shows the triggers used in our experiments. We randomly sample a single trigger for each experiment (a pair of source and target categories.)\n\nOur setup: Our experimental setup includes multiple steps as shown in Fig. 1:\n\n(1) Generate poisoned images: We use source and target pairs to generate poisoned images using algorithm 1. We use the fc7 features of AlexNet (Krizhevsky, Sutskever, and Hinton 2012) for the embedding f (.).\n\n(2) Poison the training set: Then, we label the poisoned images as the target category and add them to the training set. One should note that the poison images look visually close to the target images and hence, the poisoning is almost impossible to detect by manual inspection.\n\n(3) Finetune: After adding the poisons to the training data, we train a binary image classifier to distinguish between source and target images. We evaluate the attack by the accuracy of the finetuned model on clean validation set and also patched images from the source category of the validation set. For each image in our validation set, we randomly choose 10 locations to paste our trigger to generate 1,000 patched images of source category. For a successful attack, we expect high clean validation accuracy and low patched validation accuracy. Note that for \"patched validation\" results, we evaluate the attack only on the patched source images to see the effect of the attack only.\n\n\nImageNet random pairs\n\nFor this experiment, we choose 10 random pairs of image categories from the ImageNet dataset which are listed in column Random of Table 6. For our ImageNet experiments we set a reference parameter set where the perturbation = 16, trigger size is 30x30 (while images are 224x224), and we randomly choose a location to paste the trigger on the source image. We generate 100 poisoned examples and add to our target class training set of size 800 images during finetuning. Thus about 12.5% of the target data is poisoned.\n\nTo generate our poisoned images, we run Algorithm 1 with mini-batch gradient descent for 5,000 iterations with a batch size of K = 100. We use an initial learning rate of 0.01 with a decay schedule parameter of 0.95 every 2,000 iterations. The implementation is similar to the standard projected gradient descent (PGD) attack (Madry et al. 2017) for Figure 2: Best seen in color. We plot the distribution of features before attack using a clean classifier (left) and after attack using a poisoned classifier (right). The color coding: Red diamonds: clean target, Blue circles: clean source, Black triangles: patched source , Green pluses: poisoned target. For 2D visualization, we choose the x-axis to be along the classifier weight vector w (normal to the decision boundary). Let u be the vector connecting the centers of the two classes (clean source and clean target). The y-axis is u projected to be orthogonal to w. Our optimization pushes the poisoned targets to be close to the patched sources in the feature space while they look similar to the clean targets visually. We see that before the attack, most patched source images are correctly placed on the left of the boundary, but after the attack (adding poisoned targets labeled as target to the training data), the classifier has shifted so that some of the patched sources have moved over from the left to the right side. adversarial examples. It takes about 5 minutes to generate 100 poisoned images on a single NVIDIA Titan X GPU.\n\nWe generate 400 poisoned images, add the 100 images with the least loss values to the target training set, and train the binary classifier. We use AlexNet as our base network with all weights frozen except the fc8 layer. We initialize fc8 layer from scratch and finetune for our task. Table 1 Table 1: Results on random pairs, hand-picked pairs, and also only-dog pairs on ImageNet as well as random pairs on CIFAR10 experiments. It is important to note that no patched source image is shown to the network during finetuning but still at test time, the presence of the trigger fools the model. As a result of the absence of patched images in the training set, human inspection will not reveal our poisoning attack and also the attacker keeps the trigger secret until the attack time. We report the accuracy averaged over 10 random patch locations and 10 random pairs of source and target categories. Figure 4: The triggers we generated randomly for our poisoning attacks.\n\nhave lower accuracy on the patched validation data from the source category only and higher accuracy on the clean validation data. Fig. 3 shows the qualitative results for some random ImageNet pairs. Fig. 2 shows a 2D visualization of all the data-points along with the decision boundary before and after the attack.\n\nIn Table 3, we also compare our threat model with the performance of the attack proposed by BadNets (Gu, Dolan-Gavitt, and Garg 2017) in which patched source images are used as poisoned data. This makes the poisoned data incorrectly labeled with visible triggers. In our method, the triggers are not visible in the training data and all our labels are clean. Interestingly even though our threat model is more challenging, it achieves comparable result to BadNets.\n\n\nAblation study on ImageNet random pairs\n\nTo better understand the influence of our triggers in this poisoning attack, we perform extensive ablation studies. Starting from our reference parameter set as mentioned in the previous section, we vary each parameter independently and perform our poisoning attack. Results are shown on Table 2. Perturbation : We choose perturbation from the set {8, 16, 32} and generate poisons for each setting. We observe that does not have a big influence on our attack success rate. As increases, the patched validation accuracy decreases slightly which is expected as the attack becomes much stronger. Trigger size: We see that the attack success rate increases with increasing the trigger patch size. This is to be expected as a bigger patch may occlude the main object for some locations and make the attack easier. Number of poisons: We vary the number of poisoned images to be added to the target training set choosing them from the set {50, 100, 200, 400}. We empirically see that more poisoned data leads to larger influence on the decision boundary during finetuning. Adding 400 poisoned images to 800 clean target images is the best performing attack in which case, 33% of data is poisoned.\n\n\nFinetuning more layers\n\nSo far, we have observed that our poisoning attack works reasonably well when we finetune the fc8 layer only in a binary classification task. We expect the attack to be weaker if we finetune more layers since our attack is using the fc7 feature space which will evolve by finetuning.\n\nHence, we design an experiment where we use conv5 as the embedding space to optimize our poisoned data and then either finetune the final layer only or finetune all fully connected layers (fc6, fc7, and fc8). We initialize the layers we are fintuning from scratch. The results are shown in Tab. 5. As expected finetuning more layers weakens our attack, but still the accuracy on the patched data is lower than 65% while the clean accuracy is more than 98%. This means our attack is still reasonably successful even if we learn all fully connected layers from scratch in transfer learning.\n\n\nCIFAR10 random pairs\n\nWe evaluate our attack on 10 randomly selected pairs of CI-FAR10 categories given in Table 7. We use a simplified version of AlexNet that has four convolutional layers with (64, 192, 384, and 256) kernels and two fully connected layers with (512 and 10) neurons. The first layer has kernels of size 5 \u00d7 5 and stride of 1. For pre-training, we use SGD for 200 epochs with learning rate of 0.001, momentum of 0.9, weight decay of 5e-4, and no dropout. Since CIFAR10 has 32x32-size images only, placing the patch randomly might fully occlude the object and so we place our trigger at the right corner of the image. For each category, we have 1,500 images to train the poisoned data, 1,500 images for finetuning, and 1,000 images for evaluation. These three sets are disjoint. We generate 800 poisoned images using our method. We use =16, patch size of 8x8, and optimize for 10,000 iterations with a learning rate of 0.01 and a decay schedule parameter of 0.95 every 2,000 iterations. The results, in Table 1, show that we achieve high attack success rate.\n\n\nImageNet hand-picked pairs\n\nTo control the semantic distance of the category pairs, we hand-pick 20 classes from ImageNet using PASCAL VOC (Everingham et al. 2015) classes as a reference. Then we create 10 pairs out of these 20 classes and run our poisoning    \n\n\nImageNet \"dog\" pairs\n\nAnother interesting idea to study is the behaviour of the poisoning attack when we finetune a binary classifier for visually similar categories, e.g. two breeds of dogs. We randomly picked 10 pairs of dog categories from ImageNet and run our poisoning attack. The results are shown in Table 1 and the category names are listed in column Random \"Dog\" of Table 6.\n\n\nTargeted attack on multi-class setting\n\nWe performed multi-class experiments using 20 random categories of ImageNet -we combined the 10 random pairs. Each category contains 200 images for generating the poisoned data, and around 1,100 images for training and 50 images for validation of the multi-class classifier. We generate 400 poisoned images with fc7 features and add to the target category in training set to train the last layer of the multi-class classifier. The target category is always chosen by the attacker, but the source category can be either chosen by the attacker (\"Single-source\") or any category (\"Multi-source\"):\n\nSingle-source attack: The attacker chooses a single source category to fool by showing the trigger. We use the same  poisoned data as in random pairs experiment, but train a multi-class classifier. We average over 10 experiments (one for each pair). On the source category, the multi-class model has a validation accuracy of 84.3 \u00b1 9.2% on clean images and attack success rate of 69.3 \u00b1 14.8% on patched source validation images. Note that the higher success rate indicates better targeted attack. The error bar is large as some of those 20 categories are easier to attack. We also test our attack on more difficult setting where we finetune a 1000class ImageNet classifier. With only 400 images as poison, we achieve 36% attack success rate. We also look at the influence of number of poisons injected on the success rate. These results are reported in Table 4.\n\nMulti-source attack: In this scenario, the attacker wants to change any category to be the target category, which is a more challenging task. The multi-class model has a validation accuracy of 88.5 \u00b1 0.3% on clean images and an attack success rate of 30.7\u00b16.3% on patched images while random chance is 5%. We exclude target images while patching. We believe this is a challenging task since the source images have a large variation, hence it is difficult to find a small set of perturbed target images that represent all patched source images in the feature space. We do this by our EM-like optimization in Algorithm 1.    (Tran, Li, and Madry 2018) use spectral signatures for detecting presence of backdoor inputs in the training set. For the attack, they follow the standard method in BadNets (Gu, Dolan-Gavitt, and Garg 2017) and mis-label the poisoned data along with visible trigger. In this section, we evaluate if the defense proposed by Tran et al. is able to find our poisoned data in the target class. Table 8 shows the number of detected poisoned images for each of our pairs. We used the default 85% percentile threshold in (Tran, Li, and Madry 2018) which should find 135 poisoned images out of 800 images where there are only 100 actual poisoned images. Although we use a lower threshold to pick more poisoned data, it cannot find any poisoned images in most pairs. It finds almost half of the poisoned images in one of the pairs only. Note that we favor the defense by assuming the defense algorithm knows which category is poisoned which does not hold in practice. We believe this happens since, as shown empirically in Fig. 2, there is not much separation between target data and poisoned data.\n\n\nConclusion\n\nWe propose a novel backdoor attack that is triggered by adding a small patch at the test time at a random location on an unseen image. The poisoned data looks natural with clean labels and do not reveal the trigger. Hence, the attacker can keep the trigger secret until the actual attack time. We   (Tran, Li, and Madry 2018) to detect our poisoned images. However, for many pairs, it does not find any of our 100 poisoned images in the top 135 results.\n\nshow that our attack works in two different datasets and various settings. We also show that a state-of-the-art backdoor detection method cannot effectively defend against our attack. We believe such practical attacks reveal an important vulnerability of deep learning algorithms that needs to be resolved before deploying deep learning algorithms in critical real world applications in the presence of adversaries. We hope this paper facilitates further research in developing better defense models.\n\nFigure 3 :\n3Visualization of target, source, patched source, and poisoned target images from different ImageNet pairs. For each row, the image in the fourth column is visually similar to the image in the first column, but is close to the image in the third column in the feature space. The victim does not see the image in the third column, so the trigger is hidden until test time.\n\n\nshows the results of this experiment. A successful attack should Poisoned Model Clean Model Poisoned Model Clean Model Poisoned Model Clean Model Poisoned ModelImageNet Random Pairs \n\nCIFAR10 Random Pairs \nImageNet Hand-Picked Pairs \nImageNet Dog Pairs \nClean Model Val Clean \n0.993\u00b10.01 \n0.982\u00b10.01 \n1.000\u00b10.00 \n0.971\u00b10.01 \n0.980\u00b10.01 \n0.996\u00b10.01 \n0.962\u00b10.03 \n0.944\u00b10.03 \nVal Patched (source only) \n0.987\u00b10.02 \n0.437\u00b10.15 \n0.993\u00b10.01 \n0.182\u00b10.14 \n0.997\u00b10.01 \n0.428\u00b10.13 \n0.947\u00b10.06 \n0.419\u00b10.07 \n\n\n\n\n460\u00b10.18 0.437\u00b10.15 0.422\u00b10.17 0.630\u00b10.15 0.437\u00b10.15 0.118\u00b10.06Ablation Studies \n\nPatch size \n8 \n1 6 \n3 2 \n15 \n30 \n60 \n\nVal Clean \n0.981\u00b10.01 0.982\u00b10.01 0.984\u00b10.01 0.980\u00b10.01 0.982\u00b10.01 0.989\u00b10.01 \nVal Patched (source only) 0.\n\nTable 2 :\n2Results of our ablation studies: Note that the parameters which are not being varied are set to the reference values as mentioned in Section 4.1. Also, note that a successful attack has low accuracy on the patched set while maintaining high accuracy on the clean set.Comparison with BadNets \n#Poison \n50 \n100 \n200 \n400 \n\nVal Clean \n0.988\u00b10.01 0.982\u00b10.01 0.976\u00b10.02 0.961\u00b10.02 \nVal Patched (source only) BadNets 0.555\u00b10.16 0.424\u00b10.17 0.270\u00b10.16 0.223\u00b10.14 \n\nVal Patched (source only) Ours \n0.605\u00b10.16 0.437\u00b10.15 0.300\u00b10.13 0.214\u00b10.14 \n\n\n\nTable 3 :\n3Injection rate variation for binary setting on ImageNet random pairs: We compare our threat model with BadNets (Gu, \nDolan-Gavitt, and Garg 2017) for multiple number of poisoned images and find that even though we hide the trigger during \ntraining, we can achieve similar attack success rates. \n\nInjection rate variation \n#Poison \n400 \n600 \n800 \n1000 \n\nTargeted Attack success rate 0.360\u00b10.01 0.492\u00b10.08 0.592\u00b10.11 0.634\u00b10.10 \n\n\n\nTable 4 :\n4Injection rate variation for 1000-class setting: For \nthe multi-class single-source attack, we run evaluations on \na 1000-class ImageNet classifier. We observe that the attack \nsuccess rate increases with the number of poisons injected. \nWe use our 10 random ImageNet pairs of source and target \nfor these experiments. \n\nattack using the reference ImageNet parameters. The results \nare shown in Table 1 and the category names are listed in \ncolumn Hand-picked of Table 6. \n\n\n\nTable 5 :\n5Finetuning more layers: We see that allowing the network more freedom to adjust its weights decreases attack success rate but it still keeps a large gap of \u223c30% between clean an patched validation accuracy. Note that a successful attack has low accuracy on the patched set while maintaining high accuracy on the clean set.\n\nTable 6 :\n6Our pairs from Imagenet datasetSource Target \nbird \ndog \ndog \nship \nfrog \nplane \nplane \ntruck \ncat \ntruck \ndeer \nship \nbird \nfrog \nbird \ndeer \ncar \nfrog \ncar \ndog \n\n\n\nTable 7 :\n7Our random pairs from CIFAR10 dataset 4.8. Spectral signatures for backdoor attack detection\n\nTable 8 :\n8We use spectral signatures defense method from\nAcknowledgement: This work was performed under the following financial assistance award: 60NANB18D279 from U.S. Department of Commerce, National Institute of Standards and Technology, funding from SAP SE, and also NSF grant 1845216.\nEvasion attacks against machine learning at test time. B Biggio, I Corona, D Maiorca, B Nelson, N \u0160rndi\u0107, P Laskov, G Giacinto, F Roli, Joint European conference on machine learning and knowledge discovery in databases. SpringerBiggio, B.; Corona, I.; Maiorca, D.; Nelson, B.;\u0160rndi\u0107, N.; Laskov, P.; Giacinto, G.; and Roli, F. 2013. Evasion attacks against machine learning at test time. In Joint European conference on machine learning and knowledge discovery in databases, 387-402. Springer.\n\nAnalysis of causative attacks against svms learning from data streams. B Biggio, B Nelson, P Laskov, C Burkard, B Lagesse, arXiv:1206.6389Proceedings of the 3rd ACM on International Workshop on Security And Privacy Analytics. the 3rd ACM on International Workshop on Security And Privacy AnalyticsACMPoisoning attacks against support vector machinesBiggio, B.; Nelson, B.; and Laskov, P. 2012. Poisoning attacks against support vector machines. arXiv:1206.6389. Burkard, C., and Lagesse, B. 2017. Analysis of causative attacks against svms learning from data streams. In Proceed- ings of the 3rd ACM on International Workshop on Security And Privacy Analytics, 31-36. ACM.\n\nThe pascal visual object classes challenge: A retrospective. M Everingham, S M A Eslami, L Van Gool, C K I Williams, J Winn, A Zisserman, International Journal of Computer Vision. 1111Everingham, M.; Eslami, S. M. A.; Van Gool, L.; Williams, C. K. I.; Winn, J.; and Zisserman, A. 2015. The pascal vi- sual object classes challenge: A retrospective. International Journal of Computer Vision 111(1):98-136.\n\nY Gao, C Xu, D Wang, S Chen, D C Ranasinghe, S Nepal, arXiv:1902.06531Strip: A defence against trojan attacks on deep neural networks. Gao, Y.; Xu, C.; Wang, D.; Chen, S.; Ranasinghe, D. C.; and Nepal, S. 2019. Strip: A defence against trojan attacks on deep neural networks. arXiv:1902.06531.\n\nI J Goodfellow, J Shlens, C Szegedy, arXiv:1412.6572Explaining and harnessing adversarial examples. Goodfellow, I. J.; Shlens, J.; and Szegedy, C. 2014. Explain- ing and harnessing adversarial examples. arXiv:1412.6572.\n\nBadnets: Identifying vulnerabilities in the machine learning model supply chain. T Gu, B Dolan-Gavitt, S Garg, arXiv:1708.06733Gu, T.; Dolan-Gavitt, B.; and Garg, S. 2017. Badnets: Iden- tifying vulnerabilities in the machine learning model supply chain. arXiv:1708.06733.\n\nUnderstanding blackbox predictions via influence functions. P W Koh, P Liang, Proceedings of the 34th International Conference on Machine Learning. the 34th International Conference on Machine LearningJMLR. org70Koh, P. W., and Liang, P. 2017. Understanding black- box predictions via influence functions. In Proceedings of the 34th International Conference on Machine Learning- Volume 70, 1885-1894. JMLR. org.\n\nP W Koh, J Steinhardt, P Liang, arXiv:1811.00741Stronger data poisoning attacks break data sanitization defenses. Koh, P. W.; Steinhardt, J.; and Liang, P. 2018. Stronger data poisoning attacks break data sanitization defenses. arXiv:1811.00741.\n\nImagenet classification with deep convolutional neural networks. A Krizhevsky, I Sutskever, G E Hinton, NeurIPS. Krizhevsky, A.; Sutskever, I.; and Hinton, G. E. 2012. Imagenet classification with deep convolutional neural net- works. In NeurIPS, 1097-1105.\n\nThe hungarian method for the assignment problem. H W Kuhn, Naval research logistics quarterly. 21-2Kuhn, H. W. 1955. The hungarian method for the assign- ment problem. Naval research logistics quarterly 2(1-2):83- 97.\n\nC Liao, H Zhong, A Squicciarini, S Zhu, D Miller, arXiv:1808.10307Backdoor embedding in convolutional neural network models via invisible perturbation. Liao, C.; Zhong, H.; Squicciarini, A.; Zhu, S.; and Miller, D. 2018. Backdoor embedding in convolutional neural network models via invisible perturbation. arXiv:1808.10307.\n\nY Liu, S Ma, Y Aafer, W.-C Lee, J Zhai, W Wang, X Zhang, Trojaning attack on neural networks. Liu, Y.; Ma, S.; Aafer, Y.; Lee, W.-C.; Zhai, J.; Wang, W.; and Zhang, X. 2017. Trojaning attack on neural networks.\n\nFine-pruning: Defending against backdooring attacks on deep neural networks. K Liu, B Dolan-Gavitt, S Garg, Research in Attacks, Intrusions, and Defenses. Liu, K.; Dolan-Gavitt, B.; and Garg, S. 2018. Fine-pruning: Defending against backdooring attacks on deep neural net- works. In Research in Attacks, Intrusions, and Defenses, 273-294.\n\nNeural trojans. Y Liu, Y Xie, A Srivastava, 2017 IEEE International Conference on Computer Design (ICCD). IEEELiu, Y.; Xie, Y.; and Srivastava, A. 2017. Neural trojans. In 2017 IEEE International Conference on Computer Design (ICCD), 45-48. IEEE.\n\nA Madry, A Makelov, L Schmidt, D Tsipras, A Vladu, arXiv:1706.06083Towards deep learning models resistant to adversarial attacks. Madry, A.; Makelov, A.; Schmidt, L.; Tsipras, D.; and Vladu, A. 2017. Towards deep learning models resistant to adversarial attacks. arXiv:1706.06083.\n\nUsing machine teaching to identify optimal training-set attacks on machine learners. S Mei, X Zhu, Twenty-Ninth AAAI Conference on Artificial Intelligence. Mei, S., and Zhu, X. 2015. Using machine teaching to identify optimal training-set attacks on machine learners. In Twenty-Ninth AAAI Conference on Artificial Intelligence.\n\nUniversal adversarial perturbations. S.-M Moosavi-Dezfooli, A Fawzi, O Fawzi, P Frossard, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionMoosavi-Dezfooli, S.-M.; Fawzi, A.; Fawzi, O.; and Frossard, P. 2017. Universal adversarial perturbations. In Proceedings of the IEEE conference on computer vision and pattern recognition, 1765-1773.\n\nTowards poisoning of deep learning algorithms with back-gradient optimization. L Mu\u00f1oz-Gonz\u00e1lez, B Biggio, A Demontis, A Paudice, V Wongrassamee, E C Lupu, F Roli, L Mu\u00f1oz-Gonz\u00e1lez, B Pfitzner, M Russo, J Carnerero-Cano, E C Lupu, arXiv:1906.07773Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security. the 10th ACM Workshop on Artificial Intelligence and SecurityACMPoisoning attacks with generative adversarial netsMu\u00f1oz-Gonz\u00e1lez, L.; Biggio, B.; Demontis, A.; Paudice, A.; Wongrassamee, V.; Lupu, E. C.; and Roli, F. 2017. Towards poisoning of deep learning algorithms with back-gradient optimization. In Proceedings of the 10th ACM Workshop on Artificial Intelligence and Security, 27-38. ACM. Mu\u00f1oz-Gonz\u00e1lez, L.; Pfitzner, B.; Russo, M.; Carnerero- Cano, J.; and Lupu, E. C. 2019. Poisoning attacks with generative adversarial nets. arXiv:1906.07773.\n\nOn the practicality of integrity attacks on documentlevel sentiment analysis. A Newell, R Potharaju, L Xiang, C Nita-Rotaru, Workshop on Artificial Intelligent and Security Workshop. ACMNewell, A.; Potharaju, R.; Xiang, L.; and Nita-Rotaru, C. 2014. On the practicality of integrity attacks on document- level sentiment analysis. In Workshop on Artificial Intelli- gent and Security Workshop, 83-93. ACM.\n\nPractical black-box attacks against machine learning. N Papernot, P Mcdaniel, I Goodfellow, S Jha, Z B Celik, A Swami, Proceedings of the 2017 ACM on Asia conference on computer and communications security. the 2017 ACM on Asia conference on computer and communications securityACMPapernot, N.; McDaniel, P.; Goodfellow, I.; Jha, S.; Celik, Z. B.; and Swami, A. 2017. Practical black-box attacks against machine learning. In Proceedings of the 2017 ACM on Asia conference on computer and communications secu- rity, 506-519. ACM.\n\nA target-agnostic attack on deep models: Exploiting security vulnerabilities of transfer learning. S Rezaei, X Liu, arXiv:1904.04334Rezaei, S., and Liu, X. 2019. A target-agnostic attack on deep models: Exploiting security vulnerabilities of transfer learning. arXiv:1904.04334.\n\nImageNet Large Scale Visual Recognition Challenge. O Russakovsky, J Deng, H Su, J Krause, S Satheesh, S Ma, Z Huang, A Karpathy, A Khosla, M Bernstein, A C Berg, L Fei-Fei, International Journal of Computer Vision (IJCV). 1153Russakovsky, O.; Deng, J.; Su, H.; Krause, J.; Satheesh, S.; Ma, S.; Huang, Z.; Karpathy, A.; Khosla, A.; Bernstein, M.; Berg, A. C.; and Fei-Fei, L. 2015. ImageNet Large Scale Vi- sual Recognition Challenge. International Journal of Com- puter Vision (IJCV) 115(3):211-252.\n\nAdversarial manipulation of deep representations. S Sabour, Y Cao, F Faghri, D J Fleet, ICLRSabour, S.; Cao, Y.; Faghri, F.; and Fleet, D. J. 2016. Ad- versarial manipulation of deep representations. ICLR.\n\nA Shafahi, W R Huang, M Najibi, O Suciu, C Studer, T Dumitras, T Goldstein, Poison frogs! targeted clean-label poisoning attacks on neural networks. In NeurIPS. Shafahi, A.; Huang, W. R.; Najibi, M.; Suciu, O.; Studer, C.; Dumitras, T.; and Goldstein, T. 2018. Poison frogs! targeted clean-label poisoning attacks on neural networks. In NeurIPS, 6103-6113.\n\nS Shan, E Willson, B Wang, B Li, H Zheng, B Y Zhao, arXiv:1904.08554Gotta catch'em all: Using concealed trapdoors to detect adversarial attacks on neural networks. Shan, S.; Willson, E.; Wang, B.; Li, B.; Zheng, H.; and Zhao, B. Y. 2019. Gotta catch'em all: Using concealed trapdoors to detect adversarial attacks on neural networks. arXiv:1904.08554.\n\nCertified defenses for data poisoning attacks. J Steinhardt, P W W Koh, P S Liang, Advances in neural information processing systems. Steinhardt, J.; Koh, P. W. W.; and Liang, P. S. 2017. Certified defenses for data poisoning attacks. In Advances in neural information processing systems, 3517-3529.\n\nWhen does machine learning {FAIL}? generalized transferability for evasion and poisoning attacks. O Suciu, R Marginean, Y Kaya, Iii Daume, H Dumitras, T , 27th {USENIX} Security Symposium. {USENIX} Security 18Suciu, O.; Marginean, R.; Kaya, Y.; Daume III, H.; and Du- mitras, T. 2018. When does machine learning {FAIL}? gen- eralized transferability for evasion and poisoning attacks. In 27th {USENIX} Security Symposium ({USENIX} Security 18), 1299-1316.\n\nSpectral signatures in backdoor attacks. B Tran, J Li, A Madry, Advances in Neural Information Processing Systems. Tran, B.; Li, J.; and Madry, A. 2018. Spectral signatures in backdoor attacks. In Advances in Neural Information Pro- cessing Systems, 8000-8010.\n\nClean-label backdoor attacks. A Turner, D Tsipras, A Madry, Open Review. Turner, A.; Tsipras, D.; and Madry, A. 2018. Clean-label backdoor attacks. Open Review.\n\nNeural cleanse: Identifying and mitigating backdoor attacks in neural networks. B Wang, Y Yao, S Shan, H Li, B Viswanath, H Zheng, B Y Zhao, IEEE Symposium on Security and Privacy. Wang, B.; Yao, Y.; Shan, S.; Li, H.; Viswanath, B.; Zheng, H.; and Zhao, B. Y. 2019. Neural cleanse: Identifying and mitigating backdoor attacks in neural networks. In IEEE Symposium on Security and Privacy.\n\nSupport vector machines under adversarial label contamination. H Xiao, B Biggio, B Nelson, H Xiao, C Eckert, F Roli, Neurocomputing. 160Xiao, H.; Biggio, B.; Nelson, B.; Xiao, H.; Eckert, C.; and Roli, F. 2015. Support vector machines under adversarial label contamination. Neurocomputing 160:53-62.\n\nAdversarial label flips attack on support vector machines. H Xiao, H Xiao, C Eckert, ECAI. Xiao, H.; Xiao, H.; and Eckert, C. 2012. Adversarial label flips attack on support vector machines. In ECAI, 870-875.\n\nC Zhu, W R Huang, A Shafahi, H Li, G Taylor, C Studer, T Goldstein, arXiv:1905.05897Transferable clean-label poisoning attacks on deep neural nets. Zhu, C.; Huang, W. R.; Shafahi, A.; Li, H.; Taylor, G.; Studer, C.; and Goldstein, T. 2019. Transferable clean-label poisoning attacks on deep neural nets. arXiv:1905.05897.\n", "annotations": {"author": "[{\"end\":109,\"start\":35},{\"end\":174,\"start\":110},{\"end\":233,\"start\":175},{\"end\":109,\"start\":35},{\"end\":174,\"start\":110},{\"end\":233,\"start\":175}]", "publisher": null, "author_last_name": "[{\"end\":49,\"start\":45},{\"end\":132,\"start\":122},{\"end\":191,\"start\":181},{\"end\":49,\"start\":45},{\"end\":132,\"start\":122},{\"end\":191,\"start\":181}]", "author_first_name": "[{\"end\":44,\"start\":35},{\"end\":121,\"start\":110},{\"end\":180,\"start\":175},{\"end\":44,\"start\":35},{\"end\":121,\"start\":110},{\"end\":180,\"start\":175}]", "author_affiliation": "[{\"end\":108,\"start\":69},{\"end\":173,\"start\":134},{\"end\":232,\"start\":193},{\"end\":108,\"start\":69},{\"end\":173,\"start\":134},{\"end\":232,\"start\":193}]", "title": "[{\"end\":32,\"start\":1},{\"end\":265,\"start\":234},{\"end\":32,\"start\":1},{\"end\":265,\"start\":234}]", "venue": null, "abstract": "[{\"end\":1472,\"start\":267},{\"end\":1472,\"start\":267}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b14\"},\"end\":1707,\"start\":1688},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2729,\"start\":2704},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3218,\"start\":3185},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":3983,\"start\":3962},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":4002,\"start\":3983},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":5823,\"start\":5794},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5855,\"start\":5823},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":5874,\"start\":5855},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":6003,\"start\":5985},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":6022,\"start\":6003},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6039,\"start\":6022},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6064,\"start\":6039},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":6082,\"start\":6064},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":6440,\"start\":6407},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6501,\"start\":6470},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6817,\"start\":6790},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":6925,\"start\":6910},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7029,\"start\":6996},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":7161,\"start\":7143},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7268,\"start\":7249},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7305,\"start\":7268},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7325,\"start\":7305},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":7787,\"start\":7754},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":8301,\"start\":8280},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":8804,\"start\":8771},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8890,\"start\":8856},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9223,\"start\":9202},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":9320,\"start\":9303},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9503,\"start\":9478},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":9928,\"start\":9895},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":12173,\"start\":12140},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":12909,\"start\":12888},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":12927,\"start\":12909},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":14001,\"start\":13982},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16604,\"start\":16593},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":19175,\"start\":19135},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":21059,\"start\":21041},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":23635,\"start\":23602},{\"end\":26319,\"start\":26297},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":27342,\"start\":27318},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":29977,\"start\":29951},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":30157,\"start\":30124},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":30491,\"start\":30465},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31380,\"start\":31354},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":1707,\"start\":1688},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2729,\"start\":2704},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3218,\"start\":3185},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":3983,\"start\":3962},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":4002,\"start\":3983},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":5823,\"start\":5794},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5855,\"start\":5823},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":5874,\"start\":5855},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":6003,\"start\":5985},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":6022,\"start\":6003},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":6039,\"start\":6022},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6064,\"start\":6039},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":6082,\"start\":6064},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":6440,\"start\":6407},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6501,\"start\":6470},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6817,\"start\":6790},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":6925,\"start\":6910},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7029,\"start\":6996},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":7161,\"start\":7143},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7268,\"start\":7249},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7305,\"start\":7268},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7325,\"start\":7305},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":7787,\"start\":7754},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":8301,\"start\":8280},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":8804,\"start\":8771},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":8890,\"start\":8856},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9223,\"start\":9202},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":9320,\"start\":9303},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":9503,\"start\":9478},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":9928,\"start\":9895},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":12173,\"start\":12140},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":12909,\"start\":12888},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":12927,\"start\":12909},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":14001,\"start\":13982},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16604,\"start\":16593},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":19175,\"start\":19135},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":21059,\"start\":21041},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":23635,\"start\":23602},{\"end\":26319,\"start\":26297},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":27342,\"start\":27318},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":29977,\"start\":29951},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":30157,\"start\":30124},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":30491,\"start\":30465},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31380,\"start\":31354}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32394,\"start\":32011},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":32894,\"start\":32395},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33123,\"start\":32895},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":33671,\"start\":33124},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":34112,\"start\":33672},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":34599,\"start\":34113},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":34934,\"start\":34600},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":35112,\"start\":34935},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":35217,\"start\":35113},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":35276,\"start\":35218},{\"attributes\":{\"id\":\"fig_0\"},\"end\":32394,\"start\":32011},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":32894,\"start\":32395},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33123,\"start\":32895},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":33671,\"start\":33124},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":34112,\"start\":33672},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":34599,\"start\":34113},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":34934,\"start\":34600},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":35112,\"start\":34935},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":35217,\"start\":35113},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":35276,\"start\":35218}]", "paragraph": "[{\"end\":1890,\"start\":1488},{\"end\":2517,\"start\":1892},{\"end\":3147,\"start\":2519},{\"end\":3733,\"start\":3149},{\"end\":4528,\"start\":3735},{\"end\":4863,\"start\":4530},{\"end\":5536,\"start\":4865},{\"end\":5746,\"start\":5538},{\"end\":8616,\"start\":5763},{\"end\":9849,\"start\":8618},{\"end\":10798,\"start\":9860},{\"end\":11736,\"start\":10800},{\"end\":11994,\"start\":11738},{\"end\":12135,\"start\":12022},{\"end\":12514,\"start\":12137},{\"end\":13347,\"start\":12516},{\"end\":13577,\"start\":13349},{\"end\":14389,\"start\":13691},{\"end\":14961,\"start\":14391},{\"end\":16318,\"start\":14963},{\"end\":16820,\"start\":16320},{\"end\":16932,\"start\":16822},{\"end\":17404,\"start\":16934},{\"end\":17930,\"start\":17485},{\"end\":18260,\"start\":17946},{\"end\":18605,\"start\":18262},{\"end\":18911,\"start\":18607},{\"end\":18990,\"start\":18913},{\"end\":19200,\"start\":18992},{\"end\":19480,\"start\":19202},{\"end\":20170,\"start\":19482},{\"end\":20713,\"start\":20196},{\"end\":22209,\"start\":20715},{\"end\":23182,\"start\":22211},{\"end\":23500,\"start\":23184},{\"end\":23966,\"start\":23502},{\"end\":25199,\"start\":24010},{\"end\":25509,\"start\":25226},{\"end\":26099,\"start\":25511},{\"end\":27176,\"start\":26124},{\"end\":27440,\"start\":27207},{\"end\":27826,\"start\":27465},{\"end\":28462,\"start\":27869},{\"end\":29326,\"start\":28464},{\"end\":31040,\"start\":29328},{\"end\":31508,\"start\":31055},{\"end\":32010,\"start\":31510},{\"end\":1890,\"start\":1488},{\"end\":2517,\"start\":1892},{\"end\":3147,\"start\":2519},{\"end\":3733,\"start\":3149},{\"end\":4528,\"start\":3735},{\"end\":4863,\"start\":4530},{\"end\":5536,\"start\":4865},{\"end\":5746,\"start\":5538},{\"end\":8616,\"start\":5763},{\"end\":9849,\"start\":8618},{\"end\":10798,\"start\":9860},{\"end\":11736,\"start\":10800},{\"end\":11994,\"start\":11738},{\"end\":12135,\"start\":12022},{\"end\":12514,\"start\":12137},{\"end\":13347,\"start\":12516},{\"end\":13577,\"start\":13349},{\"end\":14389,\"start\":13691},{\"end\":14961,\"start\":14391},{\"end\":16318,\"start\":14963},{\"end\":16820,\"start\":16320},{\"end\":16932,\"start\":16822},{\"end\":17404,\"start\":16934},{\"end\":17930,\"start\":17485},{\"end\":18260,\"start\":17946},{\"end\":18605,\"start\":18262},{\"end\":18911,\"start\":18607},{\"end\":18990,\"start\":18913},{\"end\":19200,\"start\":18992},{\"end\":19480,\"start\":19202},{\"end\":20170,\"start\":19482},{\"end\":20713,\"start\":20196},{\"end\":22209,\"start\":20715},{\"end\":23182,\"start\":22211},{\"end\":23500,\"start\":23184},{\"end\":23966,\"start\":23502},{\"end\":25199,\"start\":24010},{\"end\":25509,\"start\":25226},{\"end\":26099,\"start\":25511},{\"end\":27176,\"start\":26124},{\"end\":27440,\"start\":27207},{\"end\":27826,\"start\":27465},{\"end\":28462,\"start\":27869},{\"end\":29326,\"start\":28464},{\"end\":31040,\"start\":29328},{\"end\":31508,\"start\":31055},{\"end\":32010,\"start\":31510}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":12021,\"start\":11995},{\"attributes\":{\"id\":\"formula_1\"},\"end\":13690,\"start\":13578},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17484,\"start\":17405},{\"attributes\":{\"id\":\"formula_0\"},\"end\":12021,\"start\":11995},{\"attributes\":{\"id\":\"formula_1\"},\"end\":13690,\"start\":13578},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17484,\"start\":17405}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":18498,\"start\":18491},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":18604,\"start\":18597},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":20333,\"start\":20326},{\"end\":22503,\"start\":22496},{\"end\":22511,\"start\":22504},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":23512,\"start\":23505},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":24305,\"start\":24298},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":26216,\"start\":26209},{\"end\":27128,\"start\":27121},{\"end\":27757,\"start\":27750},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":27825,\"start\":27818},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":29325,\"start\":29318},{\"attributes\":{\"ref_id\":\"tab_11\"},\"end\":30348,\"start\":30341},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":18498,\"start\":18491},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":18604,\"start\":18597},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":20333,\"start\":20326},{\"end\":22503,\"start\":22496},{\"end\":22511,\"start\":22504},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":23512,\"start\":23505},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":24305,\"start\":24298},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":26216,\"start\":26209},{\"end\":27128,\"start\":27121},{\"end\":27757,\"start\":27750},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":27825,\"start\":27818},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":29325,\"start\":29318},{\"attributes\":{\"ref_id\":\"tab_11\"},\"end\":30348,\"start\":30341}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1486,\"start\":1474},{\"attributes\":{\"n\":\"2.\"},\"end\":5761,\"start\":5749},{\"attributes\":{\"n\":\"3.\"},\"end\":9858,\"start\":9852},{\"attributes\":{\"n\":\"4.\"},\"end\":17944,\"start\":17933},{\"attributes\":{\"n\":\"4.1.\"},\"end\":20194,\"start\":20173},{\"attributes\":{\"n\":\"4.2.\"},\"end\":24008,\"start\":23969},{\"attributes\":{\"n\":\"4.3.\"},\"end\":25224,\"start\":25202},{\"attributes\":{\"n\":\"4.4.\"},\"end\":26122,\"start\":26102},{\"attributes\":{\"n\":\"4.5.\"},\"end\":27205,\"start\":27179},{\"attributes\":{\"n\":\"4.6.\"},\"end\":27463,\"start\":27443},{\"attributes\":{\"n\":\"4.7.\"},\"end\":27867,\"start\":27829},{\"attributes\":{\"n\":\"5.\"},\"end\":31053,\"start\":31043},{\"end\":32022,\"start\":32012},{\"end\":33134,\"start\":33125},{\"end\":33682,\"start\":33673},{\"end\":34123,\"start\":34114},{\"end\":34610,\"start\":34601},{\"end\":34945,\"start\":34936},{\"end\":35123,\"start\":35114},{\"end\":35228,\"start\":35219},{\"attributes\":{\"n\":\"1.\"},\"end\":1486,\"start\":1474},{\"attributes\":{\"n\":\"2.\"},\"end\":5761,\"start\":5749},{\"attributes\":{\"n\":\"3.\"},\"end\":9858,\"start\":9852},{\"attributes\":{\"n\":\"4.\"},\"end\":17944,\"start\":17933},{\"attributes\":{\"n\":\"4.1.\"},\"end\":20194,\"start\":20173},{\"attributes\":{\"n\":\"4.2.\"},\"end\":24008,\"start\":23969},{\"attributes\":{\"n\":\"4.3.\"},\"end\":25224,\"start\":25202},{\"attributes\":{\"n\":\"4.4.\"},\"end\":26122,\"start\":26102},{\"attributes\":{\"n\":\"4.5.\"},\"end\":27205,\"start\":27179},{\"attributes\":{\"n\":\"4.6.\"},\"end\":27463,\"start\":27443},{\"attributes\":{\"n\":\"4.7.\"},\"end\":27867,\"start\":27829},{\"attributes\":{\"n\":\"5.\"},\"end\":31053,\"start\":31043},{\"end\":32022,\"start\":32012},{\"end\":33134,\"start\":33125},{\"end\":33682,\"start\":33673},{\"end\":34123,\"start\":34114},{\"end\":34610,\"start\":34601},{\"end\":34945,\"start\":34936},{\"end\":35123,\"start\":35114},{\"end\":35228,\"start\":35219}]", "table": "[{\"end\":32894,\"start\":32557},{\"end\":33123,\"start\":32960},{\"end\":33671,\"start\":33403},{\"end\":34112,\"start\":33684},{\"end\":34599,\"start\":34125},{\"end\":35112,\"start\":34978},{\"end\":32894,\"start\":32557},{\"end\":33123,\"start\":32960},{\"end\":33671,\"start\":33403},{\"end\":34112,\"start\":33684},{\"end\":34599,\"start\":34125},{\"end\":35112,\"start\":34978}]", "figure_caption": "[{\"end\":32394,\"start\":32024},{\"end\":32557,\"start\":32397},{\"end\":32960,\"start\":32897},{\"end\":33403,\"start\":33136},{\"end\":34934,\"start\":34612},{\"end\":34978,\"start\":34947},{\"end\":35217,\"start\":35125},{\"end\":35276,\"start\":35230},{\"end\":32394,\"start\":32024},{\"end\":32557,\"start\":32397},{\"end\":32960,\"start\":32897},{\"end\":33403,\"start\":33136},{\"end\":34934,\"start\":34612},{\"end\":34978,\"start\":34947},{\"end\":35217,\"start\":35125},{\"end\":35276,\"start\":35230}]", "figure_ref": "[{\"end\":4494,\"start\":4488},{\"end\":4930,\"start\":4922},{\"end\":14218,\"start\":14212},{\"end\":18769,\"start\":18763},{\"end\":18989,\"start\":18983},{\"end\":23119,\"start\":23111},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":23321,\"start\":23315},{\"end\":23390,\"start\":23384},{\"end\":30971,\"start\":30965},{\"end\":4494,\"start\":4488},{\"end\":4930,\"start\":4922},{\"end\":14218,\"start\":14212},{\"end\":18769,\"start\":18763},{\"end\":18989,\"start\":18983},{\"end\":23119,\"start\":23111},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":23321,\"start\":23315},{\"end\":23390,\"start\":23384},{\"end\":30971,\"start\":30965}]", "bib_author_first_name": "[{\"end\":35566,\"start\":35565},{\"end\":35576,\"start\":35575},{\"end\":35586,\"start\":35585},{\"end\":35597,\"start\":35596},{\"end\":35607,\"start\":35606},{\"end\":35617,\"start\":35616},{\"end\":35627,\"start\":35626},{\"end\":35639,\"start\":35638},{\"end\":36077,\"start\":36076},{\"end\":36087,\"start\":36086},{\"end\":36097,\"start\":36096},{\"end\":36107,\"start\":36106},{\"end\":36118,\"start\":36117},{\"end\":36741,\"start\":36740},{\"end\":36755,\"start\":36754},{\"end\":36759,\"start\":36756},{\"end\":36769,\"start\":36768},{\"end\":36781,\"start\":36780},{\"end\":36785,\"start\":36782},{\"end\":36797,\"start\":36796},{\"end\":36805,\"start\":36804},{\"end\":37086,\"start\":37085},{\"end\":37093,\"start\":37092},{\"end\":37099,\"start\":37098},{\"end\":37107,\"start\":37106},{\"end\":37115,\"start\":37114},{\"end\":37117,\"start\":37116},{\"end\":37131,\"start\":37130},{\"end\":37381,\"start\":37380},{\"end\":37383,\"start\":37382},{\"end\":37397,\"start\":37396},{\"end\":37407,\"start\":37406},{\"end\":37683,\"start\":37682},{\"end\":37689,\"start\":37688},{\"end\":37705,\"start\":37704},{\"end\":37936,\"start\":37935},{\"end\":37938,\"start\":37937},{\"end\":37945,\"start\":37944},{\"end\":38289,\"start\":38288},{\"end\":38291,\"start\":38290},{\"end\":38298,\"start\":38297},{\"end\":38312,\"start\":38311},{\"end\":38601,\"start\":38600},{\"end\":38615,\"start\":38614},{\"end\":38628,\"start\":38627},{\"end\":38630,\"start\":38629},{\"end\":38844,\"start\":38843},{\"end\":38846,\"start\":38845},{\"end\":39014,\"start\":39013},{\"end\":39022,\"start\":39021},{\"end\":39031,\"start\":39030},{\"end\":39047,\"start\":39046},{\"end\":39054,\"start\":39053},{\"end\":39340,\"start\":39339},{\"end\":39347,\"start\":39346},{\"end\":39353,\"start\":39352},{\"end\":39365,\"start\":39361},{\"end\":39372,\"start\":39371},{\"end\":39380,\"start\":39379},{\"end\":39388,\"start\":39387},{\"end\":39629,\"start\":39628},{\"end\":39636,\"start\":39635},{\"end\":39652,\"start\":39651},{\"end\":39908,\"start\":39907},{\"end\":39915,\"start\":39914},{\"end\":39922,\"start\":39921},{\"end\":40140,\"start\":40139},{\"end\":40149,\"start\":40148},{\"end\":40160,\"start\":40159},{\"end\":40171,\"start\":40170},{\"end\":40182,\"start\":40181},{\"end\":40507,\"start\":40506},{\"end\":40514,\"start\":40513},{\"end\":40791,\"start\":40787},{\"end\":40811,\"start\":40810},{\"end\":40820,\"start\":40819},{\"end\":40829,\"start\":40828},{\"end\":41262,\"start\":41261},{\"end\":41280,\"start\":41279},{\"end\":41290,\"start\":41289},{\"end\":41302,\"start\":41301},{\"end\":41313,\"start\":41312},{\"end\":41329,\"start\":41328},{\"end\":41331,\"start\":41330},{\"end\":41339,\"start\":41338},{\"end\":41347,\"start\":41346},{\"end\":41365,\"start\":41364},{\"end\":41377,\"start\":41376},{\"end\":41386,\"start\":41385},{\"end\":41404,\"start\":41403},{\"end\":41406,\"start\":41405},{\"end\":42140,\"start\":42139},{\"end\":42150,\"start\":42149},{\"end\":42163,\"start\":42162},{\"end\":42172,\"start\":42171},{\"end\":42522,\"start\":42521},{\"end\":42534,\"start\":42533},{\"end\":42546,\"start\":42545},{\"end\":42560,\"start\":42559},{\"end\":42567,\"start\":42566},{\"end\":42569,\"start\":42568},{\"end\":42578,\"start\":42577},{\"end\":43097,\"start\":43096},{\"end\":43107,\"start\":43106},{\"end\":43329,\"start\":43328},{\"end\":43344,\"start\":43343},{\"end\":43352,\"start\":43351},{\"end\":43358,\"start\":43357},{\"end\":43368,\"start\":43367},{\"end\":43380,\"start\":43379},{\"end\":43386,\"start\":43385},{\"end\":43395,\"start\":43394},{\"end\":43407,\"start\":43406},{\"end\":43417,\"start\":43416},{\"end\":43430,\"start\":43429},{\"end\":43432,\"start\":43431},{\"end\":43440,\"start\":43439},{\"end\":43830,\"start\":43829},{\"end\":43840,\"start\":43839},{\"end\":43847,\"start\":43846},{\"end\":43857,\"start\":43856},{\"end\":43859,\"start\":43858},{\"end\":43987,\"start\":43986},{\"end\":43998,\"start\":43997},{\"end\":44000,\"start\":43999},{\"end\":44009,\"start\":44008},{\"end\":44019,\"start\":44018},{\"end\":44028,\"start\":44027},{\"end\":44038,\"start\":44037},{\"end\":44050,\"start\":44049},{\"end\":44345,\"start\":44344},{\"end\":44353,\"start\":44352},{\"end\":44364,\"start\":44363},{\"end\":44372,\"start\":44371},{\"end\":44378,\"start\":44377},{\"end\":44387,\"start\":44386},{\"end\":44389,\"start\":44388},{\"end\":44745,\"start\":44744},{\"end\":44759,\"start\":44758},{\"end\":44763,\"start\":44760},{\"end\":44770,\"start\":44769},{\"end\":44772,\"start\":44771},{\"end\":45097,\"start\":45096},{\"end\":45106,\"start\":45105},{\"end\":45119,\"start\":45118},{\"end\":45129,\"start\":45126},{\"end\":45138,\"start\":45137},{\"end\":45150,\"start\":45149},{\"end\":45497,\"start\":45496},{\"end\":45505,\"start\":45504},{\"end\":45511,\"start\":45510},{\"end\":45748,\"start\":45747},{\"end\":45758,\"start\":45757},{\"end\":45769,\"start\":45768},{\"end\":45960,\"start\":45959},{\"end\":45968,\"start\":45967},{\"end\":45975,\"start\":45974},{\"end\":45983,\"start\":45982},{\"end\":45989,\"start\":45988},{\"end\":46002,\"start\":46001},{\"end\":46011,\"start\":46010},{\"end\":46013,\"start\":46012},{\"end\":46333,\"start\":46332},{\"end\":46341,\"start\":46340},{\"end\":46351,\"start\":46350},{\"end\":46361,\"start\":46360},{\"end\":46369,\"start\":46368},{\"end\":46379,\"start\":46378},{\"end\":46630,\"start\":46629},{\"end\":46638,\"start\":46637},{\"end\":46646,\"start\":46645},{\"end\":46781,\"start\":46780},{\"end\":46788,\"start\":46787},{\"end\":46790,\"start\":46789},{\"end\":46799,\"start\":46798},{\"end\":46810,\"start\":46809},{\"end\":46816,\"start\":46815},{\"end\":46826,\"start\":46825},{\"end\":46836,\"start\":46835},{\"end\":35566,\"start\":35565},{\"end\":35576,\"start\":35575},{\"end\":35586,\"start\":35585},{\"end\":35597,\"start\":35596},{\"end\":35607,\"start\":35606},{\"end\":35617,\"start\":35616},{\"end\":35627,\"start\":35626},{\"end\":35639,\"start\":35638},{\"end\":36077,\"start\":36076},{\"end\":36087,\"start\":36086},{\"end\":36097,\"start\":36096},{\"end\":36107,\"start\":36106},{\"end\":36118,\"start\":36117},{\"end\":36741,\"start\":36740},{\"end\":36755,\"start\":36754},{\"end\":36759,\"start\":36756},{\"end\":36769,\"start\":36768},{\"end\":36781,\"start\":36780},{\"end\":36785,\"start\":36782},{\"end\":36797,\"start\":36796},{\"end\":36805,\"start\":36804},{\"end\":37086,\"start\":37085},{\"end\":37093,\"start\":37092},{\"end\":37099,\"start\":37098},{\"end\":37107,\"start\":37106},{\"end\":37115,\"start\":37114},{\"end\":37117,\"start\":37116},{\"end\":37131,\"start\":37130},{\"end\":37381,\"start\":37380},{\"end\":37383,\"start\":37382},{\"end\":37397,\"start\":37396},{\"end\":37407,\"start\":37406},{\"end\":37683,\"start\":37682},{\"end\":37689,\"start\":37688},{\"end\":37705,\"start\":37704},{\"end\":37936,\"start\":37935},{\"end\":37938,\"start\":37937},{\"end\":37945,\"start\":37944},{\"end\":38289,\"start\":38288},{\"end\":38291,\"start\":38290},{\"end\":38298,\"start\":38297},{\"end\":38312,\"start\":38311},{\"end\":38601,\"start\":38600},{\"end\":38615,\"start\":38614},{\"end\":38628,\"start\":38627},{\"end\":38630,\"start\":38629},{\"end\":38844,\"start\":38843},{\"end\":38846,\"start\":38845},{\"end\":39014,\"start\":39013},{\"end\":39022,\"start\":39021},{\"end\":39031,\"start\":39030},{\"end\":39047,\"start\":39046},{\"end\":39054,\"start\":39053},{\"end\":39340,\"start\":39339},{\"end\":39347,\"start\":39346},{\"end\":39353,\"start\":39352},{\"end\":39365,\"start\":39361},{\"end\":39372,\"start\":39371},{\"end\":39380,\"start\":39379},{\"end\":39388,\"start\":39387},{\"end\":39629,\"start\":39628},{\"end\":39636,\"start\":39635},{\"end\":39652,\"start\":39651},{\"end\":39908,\"start\":39907},{\"end\":39915,\"start\":39914},{\"end\":39922,\"start\":39921},{\"end\":40140,\"start\":40139},{\"end\":40149,\"start\":40148},{\"end\":40160,\"start\":40159},{\"end\":40171,\"start\":40170},{\"end\":40182,\"start\":40181},{\"end\":40507,\"start\":40506},{\"end\":40514,\"start\":40513},{\"end\":40791,\"start\":40787},{\"end\":40811,\"start\":40810},{\"end\":40820,\"start\":40819},{\"end\":40829,\"start\":40828},{\"end\":41262,\"start\":41261},{\"end\":41280,\"start\":41279},{\"end\":41290,\"start\":41289},{\"end\":41302,\"start\":41301},{\"end\":41313,\"start\":41312},{\"end\":41329,\"start\":41328},{\"end\":41331,\"start\":41330},{\"end\":41339,\"start\":41338},{\"end\":41347,\"start\":41346},{\"end\":41365,\"start\":41364},{\"end\":41377,\"start\":41376},{\"end\":41386,\"start\":41385},{\"end\":41404,\"start\":41403},{\"end\":41406,\"start\":41405},{\"end\":42140,\"start\":42139},{\"end\":42150,\"start\":42149},{\"end\":42163,\"start\":42162},{\"end\":42172,\"start\":42171},{\"end\":42522,\"start\":42521},{\"end\":42534,\"start\":42533},{\"end\":42546,\"start\":42545},{\"end\":42560,\"start\":42559},{\"end\":42567,\"start\":42566},{\"end\":42569,\"start\":42568},{\"end\":42578,\"start\":42577},{\"end\":43097,\"start\":43096},{\"end\":43107,\"start\":43106},{\"end\":43329,\"start\":43328},{\"end\":43344,\"start\":43343},{\"end\":43352,\"start\":43351},{\"end\":43358,\"start\":43357},{\"end\":43368,\"start\":43367},{\"end\":43380,\"start\":43379},{\"end\":43386,\"start\":43385},{\"end\":43395,\"start\":43394},{\"end\":43407,\"start\":43406},{\"end\":43417,\"start\":43416},{\"end\":43430,\"start\":43429},{\"end\":43432,\"start\":43431},{\"end\":43440,\"start\":43439},{\"end\":43830,\"start\":43829},{\"end\":43840,\"start\":43839},{\"end\":43847,\"start\":43846},{\"end\":43857,\"start\":43856},{\"end\":43859,\"start\":43858},{\"end\":43987,\"start\":43986},{\"end\":43998,\"start\":43997},{\"end\":44000,\"start\":43999},{\"end\":44009,\"start\":44008},{\"end\":44019,\"start\":44018},{\"end\":44028,\"start\":44027},{\"end\":44038,\"start\":44037},{\"end\":44050,\"start\":44049},{\"end\":44345,\"start\":44344},{\"end\":44353,\"start\":44352},{\"end\":44364,\"start\":44363},{\"end\":44372,\"start\":44371},{\"end\":44378,\"start\":44377},{\"end\":44387,\"start\":44386},{\"end\":44389,\"start\":44388},{\"end\":44745,\"start\":44744},{\"end\":44759,\"start\":44758},{\"end\":44763,\"start\":44760},{\"end\":44770,\"start\":44769},{\"end\":44772,\"start\":44771},{\"end\":45097,\"start\":45096},{\"end\":45106,\"start\":45105},{\"end\":45119,\"start\":45118},{\"end\":45129,\"start\":45126},{\"end\":45138,\"start\":45137},{\"end\":45150,\"start\":45149},{\"end\":45497,\"start\":45496},{\"end\":45505,\"start\":45504},{\"end\":45511,\"start\":45510},{\"end\":45748,\"start\":45747},{\"end\":45758,\"start\":45757},{\"end\":45769,\"start\":45768},{\"end\":45960,\"start\":45959},{\"end\":45968,\"start\":45967},{\"end\":45975,\"start\":45974},{\"end\":45983,\"start\":45982},{\"end\":45989,\"start\":45988},{\"end\":46002,\"start\":46001},{\"end\":46011,\"start\":46010},{\"end\":46013,\"start\":46012},{\"end\":46333,\"start\":46332},{\"end\":46341,\"start\":46340},{\"end\":46351,\"start\":46350},{\"end\":46361,\"start\":46360},{\"end\":46369,\"start\":46368},{\"end\":46379,\"start\":46378},{\"end\":46630,\"start\":46629},{\"end\":46638,\"start\":46637},{\"end\":46646,\"start\":46645},{\"end\":46781,\"start\":46780},{\"end\":46788,\"start\":46787},{\"end\":46790,\"start\":46789},{\"end\":46799,\"start\":46798},{\"end\":46810,\"start\":46809},{\"end\":46816,\"start\":46815},{\"end\":46826,\"start\":46825},{\"end\":46836,\"start\":46835}]", "bib_author_last_name": "[{\"end\":35573,\"start\":35567},{\"end\":35583,\"start\":35577},{\"end\":35594,\"start\":35587},{\"end\":35604,\"start\":35598},{\"end\":35614,\"start\":35608},{\"end\":35624,\"start\":35618},{\"end\":35636,\"start\":35628},{\"end\":35644,\"start\":35640},{\"end\":36084,\"start\":36078},{\"end\":36094,\"start\":36088},{\"end\":36104,\"start\":36098},{\"end\":36115,\"start\":36108},{\"end\":36126,\"start\":36119},{\"end\":36752,\"start\":36742},{\"end\":36766,\"start\":36760},{\"end\":36778,\"start\":36770},{\"end\":36794,\"start\":36786},{\"end\":36802,\"start\":36798},{\"end\":36815,\"start\":36806},{\"end\":37090,\"start\":37087},{\"end\":37096,\"start\":37094},{\"end\":37104,\"start\":37100},{\"end\":37112,\"start\":37108},{\"end\":37128,\"start\":37118},{\"end\":37137,\"start\":37132},{\"end\":37394,\"start\":37384},{\"end\":37404,\"start\":37398},{\"end\":37415,\"start\":37408},{\"end\":37686,\"start\":37684},{\"end\":37702,\"start\":37690},{\"end\":37710,\"start\":37706},{\"end\":37942,\"start\":37939},{\"end\":37951,\"start\":37946},{\"end\":38295,\"start\":38292},{\"end\":38309,\"start\":38299},{\"end\":38318,\"start\":38313},{\"end\":38612,\"start\":38602},{\"end\":38625,\"start\":38616},{\"end\":38637,\"start\":38631},{\"end\":38851,\"start\":38847},{\"end\":39019,\"start\":39015},{\"end\":39028,\"start\":39023},{\"end\":39044,\"start\":39032},{\"end\":39051,\"start\":39048},{\"end\":39061,\"start\":39055},{\"end\":39344,\"start\":39341},{\"end\":39350,\"start\":39348},{\"end\":39359,\"start\":39354},{\"end\":39369,\"start\":39366},{\"end\":39377,\"start\":39373},{\"end\":39385,\"start\":39381},{\"end\":39394,\"start\":39389},{\"end\":39633,\"start\":39630},{\"end\":39649,\"start\":39637},{\"end\":39657,\"start\":39653},{\"end\":39912,\"start\":39909},{\"end\":39919,\"start\":39916},{\"end\":39933,\"start\":39923},{\"end\":40146,\"start\":40141},{\"end\":40157,\"start\":40150},{\"end\":40168,\"start\":40161},{\"end\":40179,\"start\":40172},{\"end\":40188,\"start\":40183},{\"end\":40511,\"start\":40508},{\"end\":40518,\"start\":40515},{\"end\":40808,\"start\":40792},{\"end\":40817,\"start\":40812},{\"end\":40826,\"start\":40821},{\"end\":40838,\"start\":40830},{\"end\":41277,\"start\":41263},{\"end\":41287,\"start\":41281},{\"end\":41299,\"start\":41291},{\"end\":41310,\"start\":41303},{\"end\":41326,\"start\":41314},{\"end\":41336,\"start\":41332},{\"end\":41344,\"start\":41340},{\"end\":41362,\"start\":41348},{\"end\":41374,\"start\":41366},{\"end\":41383,\"start\":41378},{\"end\":41401,\"start\":41387},{\"end\":41411,\"start\":41407},{\"end\":42147,\"start\":42141},{\"end\":42160,\"start\":42151},{\"end\":42169,\"start\":42164},{\"end\":42184,\"start\":42173},{\"end\":42531,\"start\":42523},{\"end\":42543,\"start\":42535},{\"end\":42557,\"start\":42547},{\"end\":42564,\"start\":42561},{\"end\":42575,\"start\":42570},{\"end\":42584,\"start\":42579},{\"end\":43104,\"start\":43098},{\"end\":43111,\"start\":43108},{\"end\":43341,\"start\":43330},{\"end\":43349,\"start\":43345},{\"end\":43355,\"start\":43353},{\"end\":43365,\"start\":43359},{\"end\":43377,\"start\":43369},{\"end\":43383,\"start\":43381},{\"end\":43392,\"start\":43387},{\"end\":43404,\"start\":43396},{\"end\":43414,\"start\":43408},{\"end\":43427,\"start\":43418},{\"end\":43437,\"start\":43433},{\"end\":43448,\"start\":43441},{\"end\":43837,\"start\":43831},{\"end\":43844,\"start\":43841},{\"end\":43854,\"start\":43848},{\"end\":43865,\"start\":43860},{\"end\":43995,\"start\":43988},{\"end\":44006,\"start\":44001},{\"end\":44016,\"start\":44010},{\"end\":44025,\"start\":44020},{\"end\":44035,\"start\":44029},{\"end\":44047,\"start\":44039},{\"end\":44060,\"start\":44051},{\"end\":44350,\"start\":44346},{\"end\":44361,\"start\":44354},{\"end\":44369,\"start\":44365},{\"end\":44375,\"start\":44373},{\"end\":44384,\"start\":44379},{\"end\":44394,\"start\":44390},{\"end\":44756,\"start\":44746},{\"end\":44767,\"start\":44764},{\"end\":44778,\"start\":44773},{\"end\":45103,\"start\":45098},{\"end\":45116,\"start\":45107},{\"end\":45124,\"start\":45120},{\"end\":45135,\"start\":45130},{\"end\":45147,\"start\":45139},{\"end\":45502,\"start\":45498},{\"end\":45508,\"start\":45506},{\"end\":45517,\"start\":45512},{\"end\":45755,\"start\":45749},{\"end\":45766,\"start\":45759},{\"end\":45775,\"start\":45770},{\"end\":45965,\"start\":45961},{\"end\":45972,\"start\":45969},{\"end\":45980,\"start\":45976},{\"end\":45986,\"start\":45984},{\"end\":45999,\"start\":45990},{\"end\":46008,\"start\":46003},{\"end\":46018,\"start\":46014},{\"end\":46338,\"start\":46334},{\"end\":46348,\"start\":46342},{\"end\":46358,\"start\":46352},{\"end\":46366,\"start\":46362},{\"end\":46376,\"start\":46370},{\"end\":46384,\"start\":46380},{\"end\":46635,\"start\":46631},{\"end\":46643,\"start\":46639},{\"end\":46653,\"start\":46647},{\"end\":46785,\"start\":46782},{\"end\":46796,\"start\":46791},{\"end\":46807,\"start\":46800},{\"end\":46813,\"start\":46811},{\"end\":46823,\"start\":46817},{\"end\":46833,\"start\":46827},{\"end\":46846,\"start\":46837},{\"end\":35573,\"start\":35567},{\"end\":35583,\"start\":35577},{\"end\":35594,\"start\":35587},{\"end\":35604,\"start\":35598},{\"end\":35614,\"start\":35608},{\"end\":35624,\"start\":35618},{\"end\":35636,\"start\":35628},{\"end\":35644,\"start\":35640},{\"end\":36084,\"start\":36078},{\"end\":36094,\"start\":36088},{\"end\":36104,\"start\":36098},{\"end\":36115,\"start\":36108},{\"end\":36126,\"start\":36119},{\"end\":36752,\"start\":36742},{\"end\":36766,\"start\":36760},{\"end\":36778,\"start\":36770},{\"end\":36794,\"start\":36786},{\"end\":36802,\"start\":36798},{\"end\":36815,\"start\":36806},{\"end\":37090,\"start\":37087},{\"end\":37096,\"start\":37094},{\"end\":37104,\"start\":37100},{\"end\":37112,\"start\":37108},{\"end\":37128,\"start\":37118},{\"end\":37137,\"start\":37132},{\"end\":37394,\"start\":37384},{\"end\":37404,\"start\":37398},{\"end\":37415,\"start\":37408},{\"end\":37686,\"start\":37684},{\"end\":37702,\"start\":37690},{\"end\":37710,\"start\":37706},{\"end\":37942,\"start\":37939},{\"end\":37951,\"start\":37946},{\"end\":38295,\"start\":38292},{\"end\":38309,\"start\":38299},{\"end\":38318,\"start\":38313},{\"end\":38612,\"start\":38602},{\"end\":38625,\"start\":38616},{\"end\":38637,\"start\":38631},{\"end\":38851,\"start\":38847},{\"end\":39019,\"start\":39015},{\"end\":39028,\"start\":39023},{\"end\":39044,\"start\":39032},{\"end\":39051,\"start\":39048},{\"end\":39061,\"start\":39055},{\"end\":39344,\"start\":39341},{\"end\":39350,\"start\":39348},{\"end\":39359,\"start\":39354},{\"end\":39369,\"start\":39366},{\"end\":39377,\"start\":39373},{\"end\":39385,\"start\":39381},{\"end\":39394,\"start\":39389},{\"end\":39633,\"start\":39630},{\"end\":39649,\"start\":39637},{\"end\":39657,\"start\":39653},{\"end\":39912,\"start\":39909},{\"end\":39919,\"start\":39916},{\"end\":39933,\"start\":39923},{\"end\":40146,\"start\":40141},{\"end\":40157,\"start\":40150},{\"end\":40168,\"start\":40161},{\"end\":40179,\"start\":40172},{\"end\":40188,\"start\":40183},{\"end\":40511,\"start\":40508},{\"end\":40518,\"start\":40515},{\"end\":40808,\"start\":40792},{\"end\":40817,\"start\":40812},{\"end\":40826,\"start\":40821},{\"end\":40838,\"start\":40830},{\"end\":41277,\"start\":41263},{\"end\":41287,\"start\":41281},{\"end\":41299,\"start\":41291},{\"end\":41310,\"start\":41303},{\"end\":41326,\"start\":41314},{\"end\":41336,\"start\":41332},{\"end\":41344,\"start\":41340},{\"end\":41362,\"start\":41348},{\"end\":41374,\"start\":41366},{\"end\":41383,\"start\":41378},{\"end\":41401,\"start\":41387},{\"end\":41411,\"start\":41407},{\"end\":42147,\"start\":42141},{\"end\":42160,\"start\":42151},{\"end\":42169,\"start\":42164},{\"end\":42184,\"start\":42173},{\"end\":42531,\"start\":42523},{\"end\":42543,\"start\":42535},{\"end\":42557,\"start\":42547},{\"end\":42564,\"start\":42561},{\"end\":42575,\"start\":42570},{\"end\":42584,\"start\":42579},{\"end\":43104,\"start\":43098},{\"end\":43111,\"start\":43108},{\"end\":43341,\"start\":43330},{\"end\":43349,\"start\":43345},{\"end\":43355,\"start\":43353},{\"end\":43365,\"start\":43359},{\"end\":43377,\"start\":43369},{\"end\":43383,\"start\":43381},{\"end\":43392,\"start\":43387},{\"end\":43404,\"start\":43396},{\"end\":43414,\"start\":43408},{\"end\":43427,\"start\":43418},{\"end\":43437,\"start\":43433},{\"end\":43448,\"start\":43441},{\"end\":43837,\"start\":43831},{\"end\":43844,\"start\":43841},{\"end\":43854,\"start\":43848},{\"end\":43865,\"start\":43860},{\"end\":43995,\"start\":43988},{\"end\":44006,\"start\":44001},{\"end\":44016,\"start\":44010},{\"end\":44025,\"start\":44020},{\"end\":44035,\"start\":44029},{\"end\":44047,\"start\":44039},{\"end\":44060,\"start\":44051},{\"end\":44350,\"start\":44346},{\"end\":44361,\"start\":44354},{\"end\":44369,\"start\":44365},{\"end\":44375,\"start\":44373},{\"end\":44384,\"start\":44379},{\"end\":44394,\"start\":44390},{\"end\":44756,\"start\":44746},{\"end\":44767,\"start\":44764},{\"end\":44778,\"start\":44773},{\"end\":45103,\"start\":45098},{\"end\":45116,\"start\":45107},{\"end\":45124,\"start\":45120},{\"end\":45135,\"start\":45130},{\"end\":45147,\"start\":45139},{\"end\":45502,\"start\":45498},{\"end\":45508,\"start\":45506},{\"end\":45517,\"start\":45512},{\"end\":45755,\"start\":45749},{\"end\":45766,\"start\":45759},{\"end\":45775,\"start\":45770},{\"end\":45965,\"start\":45961},{\"end\":45972,\"start\":45969},{\"end\":45980,\"start\":45976},{\"end\":45986,\"start\":45984},{\"end\":45999,\"start\":45990},{\"end\":46008,\"start\":46003},{\"end\":46018,\"start\":46014},{\"end\":46338,\"start\":46334},{\"end\":46348,\"start\":46342},{\"end\":46358,\"start\":46352},{\"end\":46366,\"start\":46362},{\"end\":46376,\"start\":46370},{\"end\":46384,\"start\":46380},{\"end\":46635,\"start\":46631},{\"end\":46643,\"start\":46639},{\"end\":46653,\"start\":46647},{\"end\":46785,\"start\":46782},{\"end\":46796,\"start\":46791},{\"end\":46807,\"start\":46800},{\"end\":46813,\"start\":46811},{\"end\":46823,\"start\":46817},{\"end\":46833,\"start\":46827},{\"end\":46846,\"start\":46837}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":18716873},\"end\":36003,\"start\":35510},{\"attributes\":{\"doi\":\"arXiv:1206.6389\",\"id\":\"b1\",\"matched_paper_id\":15073997},\"end\":36677,\"start\":36005},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":207252270},\"end\":37083,\"start\":36679},{\"attributes\":{\"doi\":\"arXiv:1902.06531\",\"id\":\"b3\"},\"end\":37378,\"start\":37085},{\"attributes\":{\"doi\":\"arXiv:1412.6572\",\"id\":\"b4\"},\"end\":37599,\"start\":37380},{\"attributes\":{\"doi\":\"arXiv:1708.06733\",\"id\":\"b5\"},\"end\":37873,\"start\":37601},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":13193974},\"end\":38286,\"start\":37875},{\"attributes\":{\"doi\":\"arXiv:1811.00741\",\"id\":\"b7\"},\"end\":38533,\"start\":38288},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":195908774},\"end\":38792,\"start\":38535},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":9426884},\"end\":39011,\"start\":38794},{\"attributes\":{\"doi\":\"arXiv:1808.10307\",\"id\":\"b10\"},\"end\":39337,\"start\":39013},{\"attributes\":{\"id\":\"b11\"},\"end\":39549,\"start\":39339},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":44096776},\"end\":39889,\"start\":39551},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":12625409},\"end\":40137,\"start\":39891},{\"attributes\":{\"doi\":\"arXiv:1706.06083\",\"id\":\"b14\"},\"end\":40419,\"start\":40139},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":9746839},\"end\":40748,\"start\":40421},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":11558223},\"end\":41180,\"start\":40750},{\"attributes\":{\"doi\":\"arXiv:1906.07773\",\"id\":\"b17\",\"matched_paper_id\":12424035},\"end\":42059,\"start\":41182},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":17451251},\"end\":42465,\"start\":42061},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":1090603},\"end\":42995,\"start\":42467},{\"attributes\":{\"doi\":\"arXiv:1904.04334\",\"id\":\"b20\"},\"end\":43275,\"start\":42997},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":2930547},\"end\":43777,\"start\":43277},{\"attributes\":{\"id\":\"b22\"},\"end\":43984,\"start\":43779},{\"attributes\":{\"id\":\"b23\"},\"end\":44342,\"start\":43986},{\"attributes\":{\"doi\":\"arXiv:1904.08554\",\"id\":\"b24\"},\"end\":44695,\"start\":44344},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":35426171},\"end\":44996,\"start\":44697},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":3971778},\"end\":45453,\"start\":44998},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":53298804},\"end\":45715,\"start\":45455},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":53636567},\"end\":45877,\"start\":45717},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":67846878},\"end\":46267,\"start\":45879},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":579561},\"end\":46568,\"start\":46269},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":2120593},\"end\":46778,\"start\":46570},{\"attributes\":{\"doi\":\"arXiv:1905.05897\",\"id\":\"b32\"},\"end\":47101,\"start\":46780},{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":18716873},\"end\":36003,\"start\":35510},{\"attributes\":{\"doi\":\"arXiv:1206.6389\",\"id\":\"b1\",\"matched_paper_id\":15073997},\"end\":36677,\"start\":36005},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":207252270},\"end\":37083,\"start\":36679},{\"attributes\":{\"doi\":\"arXiv:1902.06531\",\"id\":\"b3\"},\"end\":37378,\"start\":37085},{\"attributes\":{\"doi\":\"arXiv:1412.6572\",\"id\":\"b4\"},\"end\":37599,\"start\":37380},{\"attributes\":{\"doi\":\"arXiv:1708.06733\",\"id\":\"b5\"},\"end\":37873,\"start\":37601},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":13193974},\"end\":38286,\"start\":37875},{\"attributes\":{\"doi\":\"arXiv:1811.00741\",\"id\":\"b7\"},\"end\":38533,\"start\":38288},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":195908774},\"end\":38792,\"start\":38535},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":9426884},\"end\":39011,\"start\":38794},{\"attributes\":{\"doi\":\"arXiv:1808.10307\",\"id\":\"b10\"},\"end\":39337,\"start\":39013},{\"attributes\":{\"id\":\"b11\"},\"end\":39549,\"start\":39339},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":44096776},\"end\":39889,\"start\":39551},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":12625409},\"end\":40137,\"start\":39891},{\"attributes\":{\"doi\":\"arXiv:1706.06083\",\"id\":\"b14\"},\"end\":40419,\"start\":40139},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":9746839},\"end\":40748,\"start\":40421},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":11558223},\"end\":41180,\"start\":40750},{\"attributes\":{\"doi\":\"arXiv:1906.07773\",\"id\":\"b17\",\"matched_paper_id\":12424035},\"end\":42059,\"start\":41182},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":17451251},\"end\":42465,\"start\":42061},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":1090603},\"end\":42995,\"start\":42467},{\"attributes\":{\"doi\":\"arXiv:1904.04334\",\"id\":\"b20\"},\"end\":43275,\"start\":42997},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":2930547},\"end\":43777,\"start\":43277},{\"attributes\":{\"id\":\"b22\"},\"end\":43984,\"start\":43779},{\"attributes\":{\"id\":\"b23\"},\"end\":44342,\"start\":43986},{\"attributes\":{\"doi\":\"arXiv:1904.08554\",\"id\":\"b24\"},\"end\":44695,\"start\":44344},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":35426171},\"end\":44996,\"start\":44697},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":3971778},\"end\":45453,\"start\":44998},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":53298804},\"end\":45715,\"start\":45455},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":53636567},\"end\":45877,\"start\":45717},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":67846878},\"end\":46267,\"start\":45879},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":579561},\"end\":46568,\"start\":46269},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":2120593},\"end\":46778,\"start\":46570},{\"attributes\":{\"doi\":\"arXiv:1905.05897\",\"id\":\"b32\"},\"end\":47101,\"start\":46780}]", "bib_title": "[{\"end\":35563,\"start\":35510},{\"end\":36074,\"start\":36005},{\"end\":36738,\"start\":36679},{\"end\":37933,\"start\":37875},{\"end\":38598,\"start\":38535},{\"end\":38841,\"start\":38794},{\"end\":39626,\"start\":39551},{\"end\":39905,\"start\":39891},{\"end\":40504,\"start\":40421},{\"end\":40785,\"start\":40750},{\"end\":41259,\"start\":41182},{\"end\":42137,\"start\":42061},{\"end\":42519,\"start\":42467},{\"end\":43326,\"start\":43277},{\"end\":44742,\"start\":44697},{\"end\":45094,\"start\":44998},{\"end\":45494,\"start\":45455},{\"end\":45745,\"start\":45717},{\"end\":45957,\"start\":45879},{\"end\":46330,\"start\":46269},{\"end\":46627,\"start\":46570},{\"end\":35563,\"start\":35510},{\"end\":36074,\"start\":36005},{\"end\":36738,\"start\":36679},{\"end\":37933,\"start\":37875},{\"end\":38598,\"start\":38535},{\"end\":38841,\"start\":38794},{\"end\":39626,\"start\":39551},{\"end\":39905,\"start\":39891},{\"end\":40504,\"start\":40421},{\"end\":40785,\"start\":40750},{\"end\":41259,\"start\":41182},{\"end\":42137,\"start\":42061},{\"end\":42519,\"start\":42467},{\"end\":43326,\"start\":43277},{\"end\":44742,\"start\":44697},{\"end\":45094,\"start\":44998},{\"end\":45494,\"start\":45455},{\"end\":45745,\"start\":45717},{\"end\":45957,\"start\":45879},{\"end\":46330,\"start\":46269},{\"end\":46627,\"start\":46570}]", "bib_author": "[{\"end\":35575,\"start\":35565},{\"end\":35585,\"start\":35575},{\"end\":35596,\"start\":35585},{\"end\":35606,\"start\":35596},{\"end\":35616,\"start\":35606},{\"end\":35626,\"start\":35616},{\"end\":35638,\"start\":35626},{\"end\":35646,\"start\":35638},{\"end\":36086,\"start\":36076},{\"end\":36096,\"start\":36086},{\"end\":36106,\"start\":36096},{\"end\":36117,\"start\":36106},{\"end\":36128,\"start\":36117},{\"end\":36754,\"start\":36740},{\"end\":36768,\"start\":36754},{\"end\":36780,\"start\":36768},{\"end\":36796,\"start\":36780},{\"end\":36804,\"start\":36796},{\"end\":36817,\"start\":36804},{\"end\":37092,\"start\":37085},{\"end\":37098,\"start\":37092},{\"end\":37106,\"start\":37098},{\"end\":37114,\"start\":37106},{\"end\":37130,\"start\":37114},{\"end\":37139,\"start\":37130},{\"end\":37396,\"start\":37380},{\"end\":37406,\"start\":37396},{\"end\":37417,\"start\":37406},{\"end\":37688,\"start\":37682},{\"end\":37704,\"start\":37688},{\"end\":37712,\"start\":37704},{\"end\":37944,\"start\":37935},{\"end\":37953,\"start\":37944},{\"end\":38297,\"start\":38288},{\"end\":38311,\"start\":38297},{\"end\":38320,\"start\":38311},{\"end\":38614,\"start\":38600},{\"end\":38627,\"start\":38614},{\"end\":38639,\"start\":38627},{\"end\":38853,\"start\":38843},{\"end\":39021,\"start\":39013},{\"end\":39030,\"start\":39021},{\"end\":39046,\"start\":39030},{\"end\":39053,\"start\":39046},{\"end\":39063,\"start\":39053},{\"end\":39346,\"start\":39339},{\"end\":39352,\"start\":39346},{\"end\":39361,\"start\":39352},{\"end\":39371,\"start\":39361},{\"end\":39379,\"start\":39371},{\"end\":39387,\"start\":39379},{\"end\":39396,\"start\":39387},{\"end\":39635,\"start\":39628},{\"end\":39651,\"start\":39635},{\"end\":39659,\"start\":39651},{\"end\":39914,\"start\":39907},{\"end\":39921,\"start\":39914},{\"end\":39935,\"start\":39921},{\"end\":40148,\"start\":40139},{\"end\":40159,\"start\":40148},{\"end\":40170,\"start\":40159},{\"end\":40181,\"start\":40170},{\"end\":40190,\"start\":40181},{\"end\":40513,\"start\":40506},{\"end\":40520,\"start\":40513},{\"end\":40810,\"start\":40787},{\"end\":40819,\"start\":40810},{\"end\":40828,\"start\":40819},{\"end\":40840,\"start\":40828},{\"end\":41279,\"start\":41261},{\"end\":41289,\"start\":41279},{\"end\":41301,\"start\":41289},{\"end\":41312,\"start\":41301},{\"end\":41328,\"start\":41312},{\"end\":41338,\"start\":41328},{\"end\":41346,\"start\":41338},{\"end\":41364,\"start\":41346},{\"end\":41376,\"start\":41364},{\"end\":41385,\"start\":41376},{\"end\":41403,\"start\":41385},{\"end\":41413,\"start\":41403},{\"end\":42149,\"start\":42139},{\"end\":42162,\"start\":42149},{\"end\":42171,\"start\":42162},{\"end\":42186,\"start\":42171},{\"end\":42533,\"start\":42521},{\"end\":42545,\"start\":42533},{\"end\":42559,\"start\":42545},{\"end\":42566,\"start\":42559},{\"end\":42577,\"start\":42566},{\"end\":42586,\"start\":42577},{\"end\":43106,\"start\":43096},{\"end\":43113,\"start\":43106},{\"end\":43343,\"start\":43328},{\"end\":43351,\"start\":43343},{\"end\":43357,\"start\":43351},{\"end\":43367,\"start\":43357},{\"end\":43379,\"start\":43367},{\"end\":43385,\"start\":43379},{\"end\":43394,\"start\":43385},{\"end\":43406,\"start\":43394},{\"end\":43416,\"start\":43406},{\"end\":43429,\"start\":43416},{\"end\":43439,\"start\":43429},{\"end\":43450,\"start\":43439},{\"end\":43839,\"start\":43829},{\"end\":43846,\"start\":43839},{\"end\":43856,\"start\":43846},{\"end\":43867,\"start\":43856},{\"end\":43997,\"start\":43986},{\"end\":44008,\"start\":43997},{\"end\":44018,\"start\":44008},{\"end\":44027,\"start\":44018},{\"end\":44037,\"start\":44027},{\"end\":44049,\"start\":44037},{\"end\":44062,\"start\":44049},{\"end\":44352,\"start\":44344},{\"end\":44363,\"start\":44352},{\"end\":44371,\"start\":44363},{\"end\":44377,\"start\":44371},{\"end\":44386,\"start\":44377},{\"end\":44396,\"start\":44386},{\"end\":44758,\"start\":44744},{\"end\":44769,\"start\":44758},{\"end\":44780,\"start\":44769},{\"end\":45105,\"start\":45096},{\"end\":45118,\"start\":45105},{\"end\":45126,\"start\":45118},{\"end\":45137,\"start\":45126},{\"end\":45149,\"start\":45137},{\"end\":45153,\"start\":45149},{\"end\":45504,\"start\":45496},{\"end\":45510,\"start\":45504},{\"end\":45519,\"start\":45510},{\"end\":45757,\"start\":45747},{\"end\":45768,\"start\":45757},{\"end\":45777,\"start\":45768},{\"end\":45967,\"start\":45959},{\"end\":45974,\"start\":45967},{\"end\":45982,\"start\":45974},{\"end\":45988,\"start\":45982},{\"end\":46001,\"start\":45988},{\"end\":46010,\"start\":46001},{\"end\":46020,\"start\":46010},{\"end\":46340,\"start\":46332},{\"end\":46350,\"start\":46340},{\"end\":46360,\"start\":46350},{\"end\":46368,\"start\":46360},{\"end\":46378,\"start\":46368},{\"end\":46386,\"start\":46378},{\"end\":46637,\"start\":46629},{\"end\":46645,\"start\":46637},{\"end\":46655,\"start\":46645},{\"end\":46787,\"start\":46780},{\"end\":46798,\"start\":46787},{\"end\":46809,\"start\":46798},{\"end\":46815,\"start\":46809},{\"end\":46825,\"start\":46815},{\"end\":46835,\"start\":46825},{\"end\":46848,\"start\":46835},{\"end\":35575,\"start\":35565},{\"end\":35585,\"start\":35575},{\"end\":35596,\"start\":35585},{\"end\":35606,\"start\":35596},{\"end\":35616,\"start\":35606},{\"end\":35626,\"start\":35616},{\"end\":35638,\"start\":35626},{\"end\":35646,\"start\":35638},{\"end\":36086,\"start\":36076},{\"end\":36096,\"start\":36086},{\"end\":36106,\"start\":36096},{\"end\":36117,\"start\":36106},{\"end\":36128,\"start\":36117},{\"end\":36754,\"start\":36740},{\"end\":36768,\"start\":36754},{\"end\":36780,\"start\":36768},{\"end\":36796,\"start\":36780},{\"end\":36804,\"start\":36796},{\"end\":36817,\"start\":36804},{\"end\":37092,\"start\":37085},{\"end\":37098,\"start\":37092},{\"end\":37106,\"start\":37098},{\"end\":37114,\"start\":37106},{\"end\":37130,\"start\":37114},{\"end\":37139,\"start\":37130},{\"end\":37396,\"start\":37380},{\"end\":37406,\"start\":37396},{\"end\":37417,\"start\":37406},{\"end\":37688,\"start\":37682},{\"end\":37704,\"start\":37688},{\"end\":37712,\"start\":37704},{\"end\":37944,\"start\":37935},{\"end\":37953,\"start\":37944},{\"end\":38297,\"start\":38288},{\"end\":38311,\"start\":38297},{\"end\":38320,\"start\":38311},{\"end\":38614,\"start\":38600},{\"end\":38627,\"start\":38614},{\"end\":38639,\"start\":38627},{\"end\":38853,\"start\":38843},{\"end\":39021,\"start\":39013},{\"end\":39030,\"start\":39021},{\"end\":39046,\"start\":39030},{\"end\":39053,\"start\":39046},{\"end\":39063,\"start\":39053},{\"end\":39346,\"start\":39339},{\"end\":39352,\"start\":39346},{\"end\":39361,\"start\":39352},{\"end\":39371,\"start\":39361},{\"end\":39379,\"start\":39371},{\"end\":39387,\"start\":39379},{\"end\":39396,\"start\":39387},{\"end\":39635,\"start\":39628},{\"end\":39651,\"start\":39635},{\"end\":39659,\"start\":39651},{\"end\":39914,\"start\":39907},{\"end\":39921,\"start\":39914},{\"end\":39935,\"start\":39921},{\"end\":40148,\"start\":40139},{\"end\":40159,\"start\":40148},{\"end\":40170,\"start\":40159},{\"end\":40181,\"start\":40170},{\"end\":40190,\"start\":40181},{\"end\":40513,\"start\":40506},{\"end\":40520,\"start\":40513},{\"end\":40810,\"start\":40787},{\"end\":40819,\"start\":40810},{\"end\":40828,\"start\":40819},{\"end\":40840,\"start\":40828},{\"end\":41279,\"start\":41261},{\"end\":41289,\"start\":41279},{\"end\":41301,\"start\":41289},{\"end\":41312,\"start\":41301},{\"end\":41328,\"start\":41312},{\"end\":41338,\"start\":41328},{\"end\":41346,\"start\":41338},{\"end\":41364,\"start\":41346},{\"end\":41376,\"start\":41364},{\"end\":41385,\"start\":41376},{\"end\":41403,\"start\":41385},{\"end\":41413,\"start\":41403},{\"end\":42149,\"start\":42139},{\"end\":42162,\"start\":42149},{\"end\":42171,\"start\":42162},{\"end\":42186,\"start\":42171},{\"end\":42533,\"start\":42521},{\"end\":42545,\"start\":42533},{\"end\":42559,\"start\":42545},{\"end\":42566,\"start\":42559},{\"end\":42577,\"start\":42566},{\"end\":42586,\"start\":42577},{\"end\":43106,\"start\":43096},{\"end\":43113,\"start\":43106},{\"end\":43343,\"start\":43328},{\"end\":43351,\"start\":43343},{\"end\":43357,\"start\":43351},{\"end\":43367,\"start\":43357},{\"end\":43379,\"start\":43367},{\"end\":43385,\"start\":43379},{\"end\":43394,\"start\":43385},{\"end\":43406,\"start\":43394},{\"end\":43416,\"start\":43406},{\"end\":43429,\"start\":43416},{\"end\":43439,\"start\":43429},{\"end\":43450,\"start\":43439},{\"end\":43839,\"start\":43829},{\"end\":43846,\"start\":43839},{\"end\":43856,\"start\":43846},{\"end\":43867,\"start\":43856},{\"end\":43997,\"start\":43986},{\"end\":44008,\"start\":43997},{\"end\":44018,\"start\":44008},{\"end\":44027,\"start\":44018},{\"end\":44037,\"start\":44027},{\"end\":44049,\"start\":44037},{\"end\":44062,\"start\":44049},{\"end\":44352,\"start\":44344},{\"end\":44363,\"start\":44352},{\"end\":44371,\"start\":44363},{\"end\":44377,\"start\":44371},{\"end\":44386,\"start\":44377},{\"end\":44396,\"start\":44386},{\"end\":44758,\"start\":44744},{\"end\":44769,\"start\":44758},{\"end\":44780,\"start\":44769},{\"end\":45105,\"start\":45096},{\"end\":45118,\"start\":45105},{\"end\":45126,\"start\":45118},{\"end\":45137,\"start\":45126},{\"end\":45149,\"start\":45137},{\"end\":45153,\"start\":45149},{\"end\":45504,\"start\":45496},{\"end\":45510,\"start\":45504},{\"end\":45519,\"start\":45510},{\"end\":45757,\"start\":45747},{\"end\":45768,\"start\":45757},{\"end\":45777,\"start\":45768},{\"end\":45967,\"start\":45959},{\"end\":45974,\"start\":45967},{\"end\":45982,\"start\":45974},{\"end\":45988,\"start\":45982},{\"end\":46001,\"start\":45988},{\"end\":46010,\"start\":46001},{\"end\":46020,\"start\":46010},{\"end\":46340,\"start\":46332},{\"end\":46350,\"start\":46340},{\"end\":46360,\"start\":46350},{\"end\":46368,\"start\":46360},{\"end\":46378,\"start\":46368},{\"end\":46386,\"start\":46378},{\"end\":46637,\"start\":46629},{\"end\":46645,\"start\":46637},{\"end\":46655,\"start\":46645},{\"end\":46787,\"start\":46780},{\"end\":46798,\"start\":46787},{\"end\":46809,\"start\":46798},{\"end\":46815,\"start\":46809},{\"end\":46825,\"start\":46815},{\"end\":46835,\"start\":46825},{\"end\":46848,\"start\":46835}]", "bib_venue": "[{\"end\":36302,\"start\":36231},{\"end\":38076,\"start\":38023},{\"end\":40981,\"start\":40919},{\"end\":41568,\"start\":41507},{\"end\":42745,\"start\":42674},{\"end\":36302,\"start\":36231},{\"end\":38076,\"start\":38023},{\"end\":40981,\"start\":40919},{\"end\":41568,\"start\":41507},{\"end\":42745,\"start\":42674},{\"end\":35728,\"start\":35646},{\"end\":36229,\"start\":36143},{\"end\":36857,\"start\":36817},{\"end\":37218,\"start\":37155},{\"end\":37478,\"start\":37432},{\"end\":37680,\"start\":37601},{\"end\":38021,\"start\":37953},{\"end\":38400,\"start\":38336},{\"end\":38646,\"start\":38639},{\"end\":38887,\"start\":38853},{\"end\":39163,\"start\":39079},{\"end\":39431,\"start\":39396},{\"end\":39704,\"start\":39659},{\"end\":39995,\"start\":39935},{\"end\":40267,\"start\":40206},{\"end\":40575,\"start\":40520},{\"end\":40917,\"start\":40840},{\"end\":41505,\"start\":41429},{\"end\":42242,\"start\":42186},{\"end\":42672,\"start\":42586},{\"end\":43094,\"start\":42997},{\"end\":43497,\"start\":43450},{\"end\":43827,\"start\":43779},{\"end\":44145,\"start\":44062},{\"end\":44506,\"start\":44412},{\"end\":44829,\"start\":44780},{\"end\":45185,\"start\":45153},{\"end\":45568,\"start\":45519},{\"end\":45788,\"start\":45777},{\"end\":46058,\"start\":46020},{\"end\":46400,\"start\":46386},{\"end\":46659,\"start\":46655},{\"end\":46926,\"start\":46864},{\"end\":35728,\"start\":35646},{\"end\":36229,\"start\":36143},{\"end\":36857,\"start\":36817},{\"end\":37218,\"start\":37155},{\"end\":37478,\"start\":37432},{\"end\":37680,\"start\":37601},{\"end\":38021,\"start\":37953},{\"end\":38400,\"start\":38336},{\"end\":38646,\"start\":38639},{\"end\":38887,\"start\":38853},{\"end\":39163,\"start\":39079},{\"end\":39431,\"start\":39396},{\"end\":39704,\"start\":39659},{\"end\":39995,\"start\":39935},{\"end\":40267,\"start\":40206},{\"end\":40575,\"start\":40520},{\"end\":40917,\"start\":40840},{\"end\":41505,\"start\":41429},{\"end\":42242,\"start\":42186},{\"end\":42672,\"start\":42586},{\"end\":43094,\"start\":42997},{\"end\":43497,\"start\":43450},{\"end\":43827,\"start\":43779},{\"end\":44145,\"start\":44062},{\"end\":44506,\"start\":44412},{\"end\":44829,\"start\":44780},{\"end\":45185,\"start\":45153},{\"end\":45568,\"start\":45519},{\"end\":45788,\"start\":45777},{\"end\":46058,\"start\":46020},{\"end\":46400,\"start\":46386},{\"end\":46659,\"start\":46655},{\"end\":46926,\"start\":46864}]"}}}, "year": 2023, "month": 12, "day": 17}