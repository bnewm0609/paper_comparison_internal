{"id": 207984929, "updated": "2023-09-22 02:09:07.631", "metadata": {"title": "Neural state machine for character-scene interactions", "authors": "[{\"first\":\"Sebastian\",\"last\":\"Starke\",\"middle\":[]},{\"first\":\"He\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Taku\",\"last\":\"Komura\",\"middle\":[]},{\"first\":\"Jun\",\"last\":\"Saito\",\"middle\":[]}]", "venue": null, "journal": "ACM Transactions on Graphics (TOG)", "publication_date": {"year": 2019, "month": null, "day": null}, "abstract": "We propose Neural State Machine, a novel data-driven framework to guide characters to achieve goal-driven actions with precise scene interactions. Even a seemingly simple task such as sitting on a chair is notoriously hard to model with supervised learning. This difficulty is because such a task involves complex planning with periodic and non-periodic motions reacting to the scene geometry to precisely position and orient the character. Our proposed deep auto-regressive framework enables modeling of multi-modal scene interaction behaviors purely from data. Given high-level instructions such as the goal location and the action to be launched there, our system computes a series of movements and transitions to reach the goal in the desired state. To allow characters to adapt to a wide range of geometry such as different shapes of furniture and obstacles, we incorporate an efficient data augmentation scheme to randomly switch the 3D geometry while maintaining the context of the original motion. To increase the precision to reach the goal during runtime, we introduce a control scheme that combines egocentric inference and goal-centric inference. We demonstrate the versatility of our model with various scene interaction tasks such as sitting on a chair, avoiding obstacles, opening and entering through a door, and picking and carrying objects generated in real-time just from a single model.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2986708244", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/tog/StarkeZKS19", "doi": "10.1145/3355089.3356505"}}, "content": {"source": {"pdf_hash": "8f9e44e97510cc740ecba80a13c3991c3ae80afc", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": null, "status": "CLOSED"}}, "grobid": {"id": "61b61ee43c515f54b0a7f02975bb6db39af91f10", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/8f9e44e97510cc740ecba80a13c3991c3ae80afc.txt", "contents": "\nNeural State Machine for Character-Scene Interactions\n\n\nSebastian Starke \nHE ZHANG \u2020\nUniversity of Edinburgh\nUnited Kingdom\n\nUniversity of Edinburgh TAKU KOMURA\nUniversity of Edinburgh JUN SAITO\nAdobe Research\nUSA\n\nUniversity of Edinburgh\n10 Crichton Street, Ed-inburghEH8 9ABUnited Kingdom\n\nUniversity of Edinburgh\nJun Saito, jsaito@adobe.com, Adobe Research, 801 N 34th St98103SeattleWAUSA\n\nNeural State Machine for Character-Scene Interactions\n10.1145/3355089.33565050730-0301/2019/11-ART178 $15.00 ACM Reference Format: Sebastian Starke, He Zhang, Taku Komura, and Jun Saito. 2019. Neural State Machine for Character-Scene Interactions. ACM Trans. Graph. 38, 6, Arti-cle 178 (November 2019), 14 pages. https://CCS Concepts: \u2022 Computing methodologies \u2192 Motion capture; Neural networks \u2020 Sebastian Starke and He Zhang are joint first authors Authors' addresses: Sebastian StarkeAdditional Key Words and Phrases: neural networkslocomotionhuman motioncharacter animationcharacter controldeep learning\nFig. 1. A selection of results using our method to generate scene interaction behaviors.We propose Neural State Machine, a novel data-driven framework to guide characters to achieve goal-driven actions with precise scene interactions. Even a seemingly simple task such as sitting on a chair is notoriously hard to model with supervised learning. This difficulty is because such a task involves complex planning with periodic and non-periodic motions reacting to the scene geometry to precisely position and orient the character. Our proposed deep auto-regressive framework enables modeling of multi-modal scene interaction behaviors purely from data. Given high-level instructions such as the goal location and the action to be launched there, our system computes a series of movements and transitions to reach the goal in the desired state. To allow characters to adapt to a wide range of geometry such as different shapes of furniture and obstacles, we incorporate an efficient data augmentation scheme to randomly switch the 3D geometry while maintaining the context of the original motion. To increase the precision to reach the goal during runtime, we introduce a control scheme that combines egocentric inference and goal-centric inference. We demonstrate the versatility of our model with various scene interaction tasks such as sitting on a chair, avoiding obstacles, opening and entering through a door, and picking and carrying objects generated in real-time just from a single model.\n\nINTRODUCTION\n\nA character's relation to its environment largely defines the fidelity of its motion. Let us take a task of sitting on a chair as an example. The character must accurately find a path going around obstacles such as a table or the target chair itself. The character must also plan to precisely position and orient itself from the target chair. Other everyday tasks such as opening doors and carrying objects involve very different motions but share the common challenge of precise control based on the scene understanding.\n\nHigh-quality motion generation using deep supervised learning has shown success in the limited domain around locomotion [Holden et al. 2017[Holden et al. , 2016. Extending it to support various everyday tasks involving scene interactions remains as an unsolved problem because the model needs to launch a series of complex actions and transitions to reach the goal with high-level scene understanding, while accurately adapting to the wide variation of 3D geometries.\n\nIn this paper, we propose Neural State Machine to model a wide range of periodic and aperiodic movements, including locomotion, sitting, standing, lifting and collision avoidance. Our neural architecture internally acquires a state machine for character control by learning different motions and transitions from various tasks. By designing a control signal with the phase of motion encoded into high-level action labels and goal locations, our neural network learns to generate precise production-quality animations from high-level commands to achieve various complex behaviors, such as walking towards a chair and sitting, opening a door before moving out from a room and carrying boxes from or under a desk. Instead of enforcing a fixed phase function to factorize the network weights [Holden et al. 2017], which only suits cyclic movements such as locomotion, our system learns such a factorization from the motion capture data in an end-to-end fashion.\n\nTo further increase the precision of goal-driven movements, where existing systems suffer from error accumulation during inference, we propose a bi-directional scheme where inference from the egocentric point of view as well as from the goal-centric point of view synthesizes the motion. The results are blended and fed back into the network to produce smooth movements where the character is guided to the goal with high precision.\n\nTo overcome issues with heightmap-based representations as used previously, we introduce volume representations for understanding the environment so our system can learn movements adapting to objects with concavity, such as passing through a hole in a wall or sliding onto a chair sideways to avoid a desk. To further generalize the scene adaptation, we augment the training data by randomly switching the geometry in each frame, while maintaining the context of the motion and interaction. Our data augmentation scheme allows the system to learn the interactions with a wide variation of geometry efficiently without increasing the data size.\n\nWe demonstrate examples such as a character moving around in a room with obstacles, interacting with furniture and moving objects at different locations. The system runs in real-time and can be applied for character control in computer games, virtual reality, and augmented reality.\n\nThe contribution of our system can be summarized as follows:\n\n\u2022 a control signal and an autoregressive architecture design enabling automatic transitions of vastly different high-level action states to reach the given goal state, while maintaining motion quality in real-time, \u2022 a bi-directional control framework that mixes inference from an egocentric point of view and that from a goal-centric point of view for improving the precision of goal-driven tasks, \u2022 a volumetric representation for guiding the characters to interact with objects and environments with concavities, \u2022 an efficient data augmentation scheme to learn the interaction with a wide range of geometry while preserving the context and without increasing the data size and \u2022 a comprehensive analysis of our method and comparison with state-of-the-art approaches.\n\nThe rest of the paper is summarized as follows. In Section 2, we provide a brief survey of the related work. Next in Section 3, we describe the architecture of our system, and then how we make use of it for goal-driven motion synthesis in Section 4. In Section 5, we describe how we prepare our training data. We show the experimental results in Section 6 and evaluate the results in Section 7. We discuss the limitations of our system in Section 8 and then conclude the paper in Section 9.\n\n\nRELATED WORK\n\nWe first review techniques that are developed to animate close interactions between characters and the environment. We next review machine learning techniques that can potentially be applied for the problem of close character-environment interaction.\n\n\nAnimating Close Interactions\n\nInteraction Synthesis from Motion Capture Sequences. Various kinematics based techniques that make use of motion capture data are proposed for animating close interactions between the body and the environment. Lee et al. [2002] present results of animating characters doing jungle gym activities such as climbing up ladders, hanging on monkey bars etc. under the Motion Graph framework. This setup only allows the characters to move in the same environment as when the motion was captured, which limits the scalability of the method. One approach that allows animating the characters in novel environments is to use the patch-based approach: Motion Patches [Lee et al. 2006] use building blocks where the character interacts with the environment or with other characters as units and assemble them to generate large scale scenes. Results such as characters playing on the slide, sitting and working on desks and interacting with other characters are presented. The use of patch-based approaches are extended to close interaction of characters [Kim et al. 2012;Shum et al. 2008] and synthesis of movies that follow some scenario [Won et al. 2014]. Agrawal and van de Panne [2016] animate close interactions with the environment by aligning the foot step patterns of the motions in the database.\n\nThese approaches are template-based approaches: a selected motion clip is inserted into the scene and edited according to the scenario. Template-based approaches are simple but do not produce a continuous motion space that is needed for constructing a wider variation of movements.\n\nTo cope with the problem with template-based approaches, techniques to apply kernel-based approaches are explored for synthesizing novel character movements [Mukai and Kuriyama 2005;Rose et al. 1998;Rose III et al. 2001;Wang et al. 2008]. As multiple motion clips are interpolated to synthesize a novel motion, a wide variation of smooth and natural motion can be constructed by adjusting the blending weights. The issue with kernel-based approaches is in their scalability and the amount of preprocessing needed: when the data size is very large, the nearest neighbour search can be time consuming and become the bottleneck of the approach. Also large amount of data must be preserved in the memory. Deep learning architectures described in Section 2.2 try to overcome this issue.\n\nMotion Synthesis by Exploration. Another approach to synthesizing novel interactions with objects and environments is through exploration. Methods based on probabilistic roadmaps [Choi et al. 2003], rapidly exploring random trees [Choi et al. 2011], A* search [Safonova and Hodgins 2007] reinforcement learning [Lo et al. 2012;Lo and Zwicker 2008] and Maximum A Posteriori (MAP) estimation [Min and Chai 2012], local optimization [Mordatch et al. 2012] and stochastic optimization. [Liu et al. 2010;Ye and Liu 2012;Zhao et al. 2013] are applied for exploring novel movements for interactions. Choi et al. [2003] generate probabilistic road maps in the environment based on footstep patterns and use them to generate characters that move in the environment. Motions to walk through narrow areas with side stepping can be generated under their framework. Similarly, Choi et al. [2011] apply online RRT expansion for navigating characters through narrow environments -whether the character can pass through a narrow environment or not is checked by evaluating the collision of the body's sweep surface and the environment. Lo et al. [2012; apply reinforcement learning for navigating characters to move through doors [Lo and Zwicker 2008] and plan the motion to reach a goal in environments with obstacles [Lo et al. 2012]. These approaches mostly replay existing motion capture data and there is no discovery of movements or synthesis of unseen novel movements. Safonova and Hodgins [2007] use a parametric motion graph structure where the two motions can be interpolated to produce a novel motion. The selection of the motions as well as the blending weights are computed by A* search. Similarly, Min et al. [2012] propose a Motion Graph++ structure where motions of the same type are blended by functional PCA. They optimize the blending weights by MAP estimation. Our work is similar to these approaches in the sense that we also have annotations for each motion type and the system automatically interpolates between them for reaching the goal. By making use of a neural network as a representation, our system can learn from a large amount of high dimensional data, such as volumetric data of objects and environments and human motion capture sequences, resulting in a wider range of movements. Also, as we adopt a supervised learning scheme, the motion can be synthesized without optimization steps, making the character responsive and controllable in real-time.\n\nSynthesis of novel movements can be done by local or stochastic optimization. Mordatch et al. [2012] propose a local optimization scheme that produces close interactions from scratch based on a contact-invariant optimization. The method can synthesize novel movements such as characters passing luggage from one to another just from an objective function that specifies the placement transition. Ye et al. [2012] produce finger motions for manipulating objects by randomly sampling the contact points of the fingers and the objects. Liu et al. [2010] successfully track the movements of motion capture data in physically-based environments by sampling postures around the captured motion data. Zhao et al. [2013] generate grasping movements by stochastic optimization. Local optimization is fast but is unstable especially when the object to interact with is convex. Sampling based approaches are more stable but are slow for real-time character control. Our focus in this research is thus learning from human motion capture data in a supervised fashion for real-time character control.\n\n\nDeep Learning Techniques for Synthesizing Close Interactions\n\nThe usage of neural networks for synthesizing character movements is rapidly increasing, due to their large scalability and their ability to produce novel motion data. Such approaches can be divided into supervised learning approaches and deep reinforcement learning approaches. Finally, we discuss the controllability of the outputs produced by the deep networks.\n\nMotion Synthesis by Deep Supervised Learning. Methods to train controllers from motion capture data based on LSTMs, temporal convolution, Phase-Functioned Neural Networks and its variants are explored in the machine learning, computer vision and computer graphics community.\n\nLSTMs are considered suitable for time-series models and are applied for reproducing locomotion [Fragkiadaki et al. 2015], kung fu motion ] and sports activities ] as well as for motion retargeting [Villegas et al. 2018] and interpolating keyframe postures [Harvey and Pal 2018]. LSTMs often suffer from converging to average poses due to the ambiguity in the future. This is more obvious especially for simple repeating problems without control signals.  overcome this by applying probabilistic teacher forcing. For problems such as character control, there is less ambiguity in the future when providing control signals.  construct a four layer LSTM model for animating characters to conduct locomotion and to play basketball and tennis. One issue with recurrent neural network structures such as LSTMs is in the difficulty of training them. Bai et al. [2018] present the difficulty of training LSTMs for sequence modelling. We also find an issue in training LSTMs in our experiments (see Section 7 for our problem), which could be due to the large state space of the internal memory. Holden et al. [2017; instead use temporal convolutions [Holden et al. 2016] and a specialized architecture called Phase-Functioned Neural Networks [Holden et al. 2017] for producing sharp movements. Zhang et al.[2018] propose a method based on the mixture of experts [Jacobs et al. 1991] to construct a real-time character controller for quadruped characters. The advantage of the concept of mixture of experts is in its scalability: a wide range of character movements can be constructed under the same framework as experts specialized for different movements can be trained. We further explore this direction for animating humanoid characters conducting close interactions in this paper.\n\nMotion Synthesis by Deep Reinforcement Learning. Deep Reinforcement Learning (DRL) is widely applied for controlling characters in a physically-based domain, for motions such as locomotion [Peng et al. 2016], flapping [Won et al. 2017], avoiding obstacles [Heess et al. 2017], acrobatic movements [Peng et al. 2018a,b] and dressing [Clegg et al. 2018]. When applying DRL for controlling human characters, movements generated by simple rewards based on the velocity and balance often appear unnatural [Heess et al. 2017]. Peng et al. [2018a;2018b]. cope with this problem by providing reference motion capture data [Peng et al. 2018a[Peng et al. , 2017 or video data [Peng et al. 2018b].\n\nWhen applying these approaches for low energy, ordinary daily life motion such as simply standing up from a chair and moving to another chair, idling, defining the reward function could be an issue. These types of motions are not governed by simple, single objective and a reward that results in natural low energy movements is needed.  propose a reward that encourages symmetry to produce natural locomotion. For physically-based character control, further exploration of the reward is needed for the wide variety of low energy movements in ordinary daily life that involve close interactions and multiple contacts.\n\n\nNEURAL STATE MACHINE\n\nThe Neural State Machine (Fig. 2) consists of a Motion Prediction Network and a Gating Network. The Motion Prediction Network is the main component responsible for the auto-regression of the Fig. 2. The architecture of our system composed of the gating network and the motion prediction network. The gating network takes as input a subset of parameters of the current state and the goal action vector to output the expert blending coefficients which is then used to generate the motion prediction network. The motion prediction network takes as input the posture, trajectory control variables and the goal parameters from the previous frame, and predicts those variables for the current frame.\n\ncharacter-related information. The Gating Network decides the blending coefficients of expert weights based on the given goal and the phase of the motion to dynamically generate the Motion Prediction Network. The intuition behind this design is to encode different modes of motion in drastically different tasks separately in multiple experts to avoid blurry motions and adapt to different tasks. We further modulate the expert blending weights using a learned cyclic function to ensure the state will move forward in time.\n\n\nMotion Prediction Network\n\nThe Motion Prediction Network (see Fig. 2, right) is the main component of our system where it computes the pose of the character in the current frame, given the pose in the previous frame, the geometry of the surrounding environment, and the high-level instructions including the goal location and the action state.\n\nThe Motion Prediction Network is composed of two modules where the first module is the encoder module that receives the components of the character state in the previous frame and encodes them individually using simple three-layer networks. The second module is the prediction module that receives the output of the encoder module and predicts the state of the character in the current frame. The prediction module is a three-layer network whose weights are dynamically blended from a group of expert weights with coefficients from the Gating Network.\n\n\nInputs:\n\nThe inputs of the Motion Prediction Network X i at frame i consist of four components, namely the Frame Input F i , Goal Input G i , Interaction Geometry Input I i and Environment Geometry Input Fig. 2, left). Each of these items are described below.\nE i , such X i = {F i , G i , I i , E i } (see\u2022 Frame Input F i = j p i\u22121 , j r i\u22121 , j v i\u22121 , t p i\u22121 , t d i\u22121 , t a i\u22121 , is composed of the following items: -Character Pose in Frame i \u2212 1: j p i\u22121 \u2208 R 3j , j r i\u22121 \u2208 R 6j j v i\u22121 \u2208 R3j\nare joint positions, rotations and velocities relative to the root coordinate in frame i \u2212 1, and j denotes the 23 joints of the character.\n\n-Past/Future Root Trajectory:\nt p i\u22121 \u2208 R 2t , t d i\u22121 \u2208 R 2t\nare the root coordinate positions and forward directions of the t (t = 13) sampled trajectory points in the past/future in a 2 second window, spanning from -1s to 1s relative to the root coordinate of the frame i \u2212 1. t a i\u22121 \u2208 R 7t denotes continuous action labels changing from zero to one on each of the t trajectory points. This purely auto-regressive vector can be understood as describing the character state and is composed of seven types of motion, representing idle, walk, run, sit, open, carry and climb.\n\u2022 Goal Input G i = g p i\u22121 , g d i\u22121 , g a i\u22121 ,\nis composed of the following items: -Goal Positions and Orientations: g p i\u22121 \u2208 R 3t , g d i\u22121 \u2208 R 2t are the set of goal positions in the 3D world and directions in the 2D horizontal plane along t (t = 13) sampled trajectory points relative to the root coordinate of frame i \u2212 1. In a low-level control mode where the user controls the locomotion, each goal sample lives 1 second in the future relative to each trajectory point, and thus spans a 2 second window over the future starting from the current frame, which directs the updates of the root trajectory (the goal points stay on the ground in this case). In a high-level control mode for interaction tasks, the goal locations are given by the origin of the objects to interact with. Each goal point represents the target goal location with respect to frame i \u2212 6, ..., i + 6.\n\n-Action at the Goal: g a i\u22121 \u2208 R 6t denotes one-hot action labels to be launched at each goal point. Note that the climb action is excluded from the goal action as it is difficult to specify the climb to happen at the right timing.\n\nThe Interaction Geometry Input I i \u2208 R 512 and Environment Geometry Encoder Input E i \u2208 R 1408 are both volumetric representations which surround the interaction object with the dimension of 512 and the character with the dimension of 1408, respectively (see Section 4.3).\n\n\nOutputs:\n\nThe output of the Motion Prediction Network\nY i = j p i , j r i , j v i ,j p i , t p i , t d i , t a i ,t p i ,t d i , g p i , g d i , g a i , c i , p i consists of the fol- lowing components.\n\u2022 Predicted Character Pose in Egocentric Coordinate System: j p i \u2208 R 3j , j r i \u2208 R 6j and j v i \u2208 R 3j are the predicted joint positions, rotations and velocities relative to the root coordinate of the frame i.\n\n\u2022 Predicted Character Joint Position in the Future Egocentric Coordinate System:j p i \u2208 R 3j is the predicted joint positions in the predicted future egocentric coordinate system 1 second ahead, which is defined using t p i and t d i described below.\n\u2022 Future Root Trajectories in Egocentric Coordinate Sys- tem: t p i \u2208 R 2t \u2032 , t d i \u2208 R 2t \u2032\nare the root coordinate positions, forward directions of the future t \u2032 (t \u2032 = 6) trajectory points relative to the root coordinate, and t a i \u2208 R 7t \u2032 is the continuous action labels, of frame i in a 1 second window.\n\u2022 Future Root Trajectories in Goal-Centric Coordinate Sys- tem:t p i \u2208 R 2t \u2032 ,t d i \u2208 R 2t \u2032\nare the same features as above but are defined relative to the goal-centric coordinate system.\n\u2022 Goal Output G o = g p i , g d i , g a i , g p i \u2208 R 3t , g d i \u2208 R 2t g a i \u2208 R 6t are the updated goal parameters.\n\u2022 Contact Labels: c i \u2208 R 5 is the key joint contact labels where the key joints are feet, hands and hip. \u2022 Update in Phase: p i \u2208 R is the 1-dimensional angular phase update.\n\nAuto-regression. The outputs are used to animate the character, directly fed back into the inputs or blended with the user inputs to be a control signal for the next iteration. The character pose is fed back into the network as the frame input in the next iteration. The future root trajectories in egocentric/goal coordinate system are used to compute the future root trajectory as described in Section 4.2. The contact labels can be used when applying IK as post-processing. The phase is updated and passed to the Gating Network in the next round as described in the next section. The Goal Output is blended with the user control signal to be the Goal Input in the next iteration (see Section 4.1).\n\nNetwork Operation: The operation of Neural State Machine, denoted here by \u0398(\u00b7), is defined as: (1) where H(X; \u03b2) denotes the encoding operation with the Frame Encoder F (\u00b7), Goal Encoder G(\u00b7), Interaction Geometry Encoder I(\u00b7) and Environment Geometry Encoder E(\u00b7):\n\u0398(X; \u03b1 , \u03b2) = W 2 ELU( W 1 ELU( W 0 H(X; \u03b2) + b 0 ) + b 1 ) + b 2H(X; \u03b2) = F (F i ; \u03b2 F ), G(G i ; \u03b2 G ), I(I i ; \u03b2 I ), E(E i ; \u03b2 E )(2)\nwhere each of these encoders is a simple three-layer fully-connected network, with the network parameters denoted as \u03b2 F , \u03b2 G , \u03b2 I , \u03b2 E and the dimensions of the hidden/output units set to 512, 128, 256 and 512, respectively. The parameters of the Motion Prediction Network \u03b1 are defined by\n\u03b1 = {W 0 \u2208 R h\u00d7n , W 1 \u2208 R h\u00d7h , W 2 \u2208 R m\u00d7h , b 0 \u2208 R h , b 1 \u2208 R h , b 2 \u2208 R m },\nwhere the dimension of the hidden layer h is set as 512, n is the input dimension and m is the output dimension. Furthermore, the weights \u03b1 are computed by blending K expert weights \u03b3 = {\u03b1 1 , ..., \u03b1 K }, each of which is in a form of neural network weight configuration:\n\u03b1 = K i=1 \u03c9 i \u03b1 i ,(3)\nwhere K is a hyperparameter that can be adjusted according to the complexity and size of the training data, and \u03c9 = {\u03c9 1 , ..., \u03c9 K } are the blending coefficients computed by gating network described next. As we have a wide variation of motion, we set K = 8 or K = 10 in our experiments, which can cover a wide range of motion types. The activation function used in Neural State Machine is the exponential rectified linear function [Clevert et al. 2015] defined by\nELU(x) = max(x, 0) + exp(min(x, 0)) \u2212 1.\n(4)\n\n\nGating Network\n\nThe Gating Network (see Fig. 2, left) is a three layer fully connected neural network which outputs \u03c9 representing the blending coefficients of the experts.\n\nInput Features of the Gating Network: We design the input features of the gating network such that the expert weights are selected and interpolated according to both the action labels and phase values. At each frame i, the input of the Gating NetworkX i is computed by composing two vectors as follows:\nX i = P i \u2297 X \u2032 i ,(5)\nwhere \u2297 is the Kronecker product operation. The first vector is the 2D phase vector P i :\nP i = {sin(p i ), cos(p i )} \u2208 R 2 ,(6)\nwhere the p i is a labeled phase scalar in the range of 0 \u2a7d p i \u2a7d 2\u03c0 . The second vector X \u2032 i is derived from a subset of the inputs from the Motion Prediction Network including the current action t a i\u22121 , goal position g p i\u22121 , goal orientation g d i\u22121 and goal action g a i\u22121 along the whole trajectory. Further, we found that calculating the distance scalar \u03b4 to the goal position g p i\u22121 and the angular scalar \u03b8 to the goal orientation g d i\u22121 and multiplying them with the goal action vector respectively gives the best performance when synthesizing motions for multiple tasks, especially for the foot step planning during approaching of the goals:\nX \u2032 i = t a i\u22121 , g a i\u22121 , \u03b4 \u00b7 g a i\u22121 , \u03b8 \u00b7 g a i\u22121 \u2208 R n \u2032 .(7)\nThe key motivation for this input vector design is to let the neural network learn distinct cyclic/non-cyclic phase functions suitable for different actions and goals, instead of using a single, fixed cyclic function as in PFNN [Holden et al. 2017]. This results in an actionspecific dynamic blending of expert weights, allowing a single model to encode vastly different motions and still be able to generate sharp motions.\n\nNote that representing the phase as a 2D vector is required since our model directly learns from the phase, which requires a continuous differentiable space that would not be given by feeding a 1D phase scalar progressing from zero to one. This is different from the original setup used in the PFNN [Holden et al. 2017], where the phase is an external control variable that is first given to a predefined cyclic function before interpolating the network weights. The usage of Kronecker product maintains the influence of the phase when combined with other features.\n\nNetwork Operation: The operation of the Gating Network can then be written as:\n\u03c9 = \u2126(X; \u00b5) = \u03c3 (W \u2032 2 ELU( W \u2032 1 ELU( W \u2032 0X + b \u2032 0 ) + b \u2032 1 ) + b \u2032 2 ),(8)\nwhere \u03c9 are the blending coefficients of the expert weights (see Eq. (3)) to compute the network parameters of the Motion Prediction\nNetwork; \u00b5 = {W \u2032 0 \u2208 R h \u2032 \u00d7n \u2032 , W \u2032 1 \u2208 R h \u2032 \u00d7h \u2032 , W \u2032 2 \u2208 R K \u00d7h \u2032 , b \u2032 0 \u2208 R h \u2032 , b \u2032 1 \u2208 R h \u2032 , b \u2032 2 \u2208 R K }\nwhere h \u2032 is the number of hidden layer units which is set to 128, n \u2032 is the input dimension and \u03c3 (\u00b7) is a softmax operator that normalizes the inputs to sum up to 1.\n\n\nNetwork Training\n\nThe input and the output of the full dataset are organized in the format of\nX = [X 1 X 2 ...],X = [X 1X2 ...] and Y = [Y 1 Y 2 .\n..] which are later normalized by the mean and the standard deviation. The network is trained in an end-to-end fashion with the mean squared error cost function:\nCost(X, Y; \u03b3, \u03b2, \u00b5) = \u2225Y \u2212 \u0398(H(X; \u03b2), \u2126(X; \u00b5); \u03b3 )\u2225 2 2 .(9)\nThe model is implemented in TensorFlow. We use AdamWR optimizer with the warm restart technique. The learning rate is initialized with the value of 1.0 \u00b7 10 \u22124 which will later decrease controlled by the weight decay rate with the initial value of 2.5 \u00b7 10 \u22123 .\n\n\nGOAL-DRIVEN MOTION SYNTHESIS\n\nThe runtime character control is implemented in Unity. With the Neural State Machine as the core machinery, we achieve smooth transitions in high-level states with a goal-driven control while realizing precise scene interactions with a bi-directional character control scheme and volumetric sensors.\n\n\nGoal-Driven Character Control\n\nOur system has two modes of control: the high-level goal-driven mode and the low-level locomotion mode. In the goal-driven mode, the user selects the target object (chair, door or object) by the mouse and can select the desired action to perform with the object via keyboard buttons. The character automatically moves toward the object and launches the required series of actions (sit, open or carry) at the right timing. In the locomotion mode, the user interactively controls the character by the keyboard or the gamepad, and the character walks/runs in the direction instructed by the user.\n\nOur system can seamlessly switch between the low-level locomotion mode and the high-level goal-driven mode through Goal Inputs G i : in the locomotion mode, the Goal Outputs G O are blended with the trajectory produced by the user control signal in a 1s time window and fed back into the network as the Goal Inputs G i , as done in [Holden et al. 2017]. In the goal-driven mode, the G i is set to the object/environment of the user's selection. G i can be changed at any time and valid transitions can be naturally produced based on pose of the character and the foot stepping pattern. We show a usage of the high-level controller for a sitting down task in Fig. 3. The character needs to start from an idle state, transition from idle to walk until getting close to the chair, and then finally transition from walk to sit. Synthesizing such series of movements only by the low-level locomotion control requires meticulous user input. In contrast, when using the high-level controller, the user only needs to indicate \"sitting on the chair\" as the desired goal action (sitting in case of Fig. 3). This is then fed into the Gating Network, which activates the required expert weights for producing the motion in the next frame. The Motion Prediction Network then produces the action label every frame; in the case of Fig. 3, first the transition from idle to the walk, and then increasingly the action value for sitting down once the character is close enough to the object.\n\n\nBi-Directional Control Scheme\n\nThe idea of the bi-directional controller is to infer the motion from both the egocentric and goal point of view, match both predictions during runtime, and feedback such inference into the Neural State Machine to increase the precision of the character to reach the goal during the tasks (Fig. 4). When using only an egocentric controller that is often used for real-time character controllers, there is a difficulty in reaching the goal location and conducting the task. Intuitively, as the egocentric perspective relies on a root update to bring the character closer to the target, there is an error accumulation over multiple frames that alone can not guarantee termination at the goal location. Instead, predicting such information in the goal-space gives more accurate values for where the character would actually need to be, and back-transforming those into root-space during runtime enables avoidance of such error accumulation. Especially when the variation of the training data is not very large, we find the system is more likely to not reach the goal with high precision from random locations when not using such a bi-directional inference scheme. Fig. 4. A bi-directional trajectory prediction improves the accuracy in reaching the desired goal location. The future trajectory is predicted both relative to the character root (red trajectory) as well as to the coordinate frame of the goal (green curve), and interpolated before being given as the input for the next frame.\n\nIn more detail, the bi-directional controller is part of the Neural State Machine and computes the future trajectory in the goal-centric coordinate system (see Outputs of Section 3.1):\nt p i , t d i ,t p i ,t d i =\u0398(X i ), where {t p i , t d i } and {t p i ,t d i }\nare the future root trajectories in egocentric/goal coordinate system, and\u0398(\u00b7) is a sub-function that denotes the bi-directional controller part of the Neural State Machine. {t p i ,t d i } are then converted back to the egocentric coordinate system by multiplying the goal-to-egocentric transformation matrix and blending it with the corresponding egocentric outputs according to a blending parameter \u03bb :\n(1 \u2212 \u03bb){t p i , t d i } + \u03bbR i {t p i ,t d i },\nwhere R i is the goal-to-egocentric transformation matrix. The blending parameter \u03bb = w i d 2 i is computed in such a way that it has larger effect when the target is closer and vanishing effect when further away, where w i is a linearly increasing weight between 0 and 1 from the current to last trajectory sample, and d 2 i is the squared distance of each trajectory sample i to its goal. The computed trajectory is fed back into the Neural State Machine in the next iteration as the future trajectory part of {t p i , t d i }. We also adjust the character joint velocities in a bi-directional manner so that it helps reaching the goal -especially for satisfying the contacts with the objects. Here, the velocity in the next frame is revised as\n(1 \u2212 \u03bb)j v i + \u03bb(R \u2032 ij p i \u2212 j p i ),\nwhere the blending parameter \u03bb is chosen by the delta time \u2206t between two consecutive frames, and R \u2032 i is the transformation from the predicted egocentric coordinate system at frame i+t \u2032 to that of i. Intuitively, this adjusts the velocities to the direction of where the character posture would need to be in the future, and smoothly drives the character towards the accurate pose as presented in Section 7.\n\n\nVolumetric Sensors\n\nWe use two voluemtric sensors to evaluate the status of the body with respect to the object: the Environment Sensor (see Fig. 5, bottom) and the Interaction Sensor (see Fig. 5, right-top) Environment Sensor. To recognize the surrounding geometry of the character and let it affect the motion in the next frame, we use a volumetric sensor that we call the Environment Sensor that has a cylindrical shape. The collision between objects/environment and a cylindrical volume of radius R and height H is evaluated while the character is moving (the orange spheres in Fig. 5) and fed into the Environment Geometry Input E i . Within the volume, spheres of radius r << R are sampled and their intersections with the objects/environment are tested. The spheres are sampled in a polar fashion at the resolution of (\u2308 R 2r \u2309, \u2308 \u03c0 R r \u2309, \u2308 H r \u2309), along the radius, arc and height direction.\n\nWithin each sphere cell, we compute a floating value that roughly corresponds to the occupancy by the external objects/environment; for this purpose, we prepare a coarse collider object composed of cuboids (see Fig. 5, top-middle). The sensor value is computed by:\ns = \uf8f1 \uf8f4 \uf8f4 \uf8f4 \uf8f2 \uf8f4 \uf8f4 \uf8f4 \uf8f3 1\nif sphere center inside the collider 0 if sphere not intersecting collider 1 \u2212 d r otherwise where d is the closest distance between the collider and the sphere center, and r is the radius of the sphere. This setup provides continuous inputs into the volumetric sensor and thus results in smooth movements. The collider object is computed automatically from a high resolution voxel model that is generated from the object mesh. The adjacent voxels are merged to form cuboids, and the cuboids Fig. 5. Geometry Processing Pipeline: Given the mesh, we first approximate its collision geometry via voxelization, which is then used by the environment and interaction sensors to extract the surrounding scene information.\n\nare iteratively merged until the merger does not form a cuboid any more. The sensor values are fed into the Environment Geometry Encoder Input E i . The usage of the Environment Sensor induces the character to launch motion to interact with/avoid the object when it appears in the vicinity.\n\nInteraction Sensor. We prepare another volumetric sensor that we call the Interaction Sensor to provide further details of the object geometry from the goal point of view (see Fig. 5, top-right). As the Environment Sensor can be too coarse, and the character can be moving, the fine details of the object, such as the arm rests of the chair, can be missed. The Interaction Sensor is an 8 \u00d7 8 \u00d7 8 cubic volume that covers the target object. Each element contains a 4D vector. The first three elements are the relative vector of the body root from the element center. The last element s \u2032 is computed by\ns \u2032 = \uf8f1 \uf8f4 \uf8f4 \uf8f4 \uf8f2 \uf8f4 \uf8f4 \uf8f4 \uf8f3 1 if voxel center inside the collider 0 if voxel not intersecting collider 1 \u2212 d \u2032 r \u2032 otherwise\nwhere d \u2032 is the shortest distance between the center and the collider, and r \u2032 is the diagonal length of the voxel. These inputs are fed into the Interaction Geometry Input I i . The usage of the Interaction Sensor improves the precision of the interaction as we show in our evaluation (see Section 7). For animating the character to carry or place the box, we dynamically adjust the position values of the Interaction Sensor according to the Goal Input G i ; their values are computed based on the future goal position and orientation at t = 6, which is 1 second ahead of the current time frame.\n\n\nDATA PREPARATION\n\nIn this section, we describe the data preparation, especially the motion capture, the data labelling, the 3D object/environment fitting and its data augmentation procedure.\n\n\nMotion Capture and Labelling\n\nWe build prop environments to capture a dataset of a person approaching and sitting on a chair, avoiding obstacles while walking, opening and passing through a door, picking up, carrying and putting down a box. We also build some more complex situations with a concave environment like sitting on a chair that is partially under the desk, so that the character needs to stretch their legs or put their hands on the desk to complete the sitting motion. A total of 94 minutes of motion capture data is captured by an XSens inertia Each frame of data is then annotated with one of the action labels, \"idle\", \"walk\", \"run\", \"sit\", \"open\", \"climb\" or \"carry\", or a combination of two (\"carry+idle\", \"carry+walk\"), which describes the motion type at the current frame. The distribution of the action labels for the un-mirrored dataset is summarized in Table 1. Apart from the action label at the current frame, we also label a goal action for each frame, which is actually the action labels in the future frames. By training the system using the goal labels as the part of Goal Inputs G i , the user can interactively control the character by specifying the goal action during runtime.\n\nFinally, we label a phase scalar for each of the frames in the dataset. For locomotion, the phase is defined as 0, \u03c0 and 2\u03c0 according to when the left/right/left foot lands on the ground, and the phases in between are computed by interpolation. For the acyclic motions like sitting, the phase is defined as 0 and 2\u03c0 for the frame where the transition starts and ends, and the middle part is again computed by interpolation.\n\n\nObject/Environment Fitting and Data Augmentation\n\nIn this section, we describe the object/environment fitting process and how we do data augmention, so that the system can adapt the character motion to a wide range of objects and environments without increasing the training data size. For achieving this goal, the space of motion with respect to the shapes needs to be well covered. Naively, this would require capturing all the subtle and larger variations of motion and shape modifications in such environments, leading to an enormous effort not only for motion capture and setting up objects in the real world, but also for data labeling, fitting and training. Having this in mind, we design a motion augmentation framework that allows us to enrich the dataset with minimum data size explosion by editing both the motion and geometry while preserving the context. After fitting a template object into the motion capture data, at each frame, we randomly sample new objects from the pool of objects/environments obtained from ShapeNet [Chang et al. 2015] and adapt the pose following the idea of relationship descriptors [Al-Asqhar et al. 2013] such that the context is preserved.\n\nThe scheme is composed of the following five steps (also see Fig. 6):\n\nStep 1: Object/Environment Fitting. We fit a template object into one of the motion captures using a frame where the body is static with respect to the object. This only requires specifying the location and orientation of the object at one frame, where the body is static with respect to the object.\n\nStep 2: Locating the Contact Points and Redefining the Key Joint Trajectories. Contact points are embedded on the object / environment surface when the key joints are within a threshold distance of the surface. Also, the position of the key joints are redefined as the end points of the relative vectors originating from the contact points.\n\nStep 3: Switching/Transforming the Object/Environment. When the objects are switched or transformed, either through translation, rotation or scaling, the position of the contact points are reset. When Fig. 6. The five steps of data augmentation for adapting to different shapes (top).\n\nStep 1-2 are applied only once per scene.\n\nStep 3-5 are applied per frame to prepare augmented training data where the character can adapt to different shapes (bottom) without increasing the data size.\n\nthe object is transformed, the contact points simply follow the transformation that was applied. When the object is switched, we initially project the template contact points to the nearest surface. When this fails, we manually specify the new location on the object surface. This semi-automatic process is possible as we use a rather small set of training data (20 chairs, 2 desks, 3 boxes, 2 windows). Note that we only use a single position for the new contact point per key joint while there could be multiple in the template object.\n\nStep 4: Updating the Key Joint Trajectories. The key joint positions are recomputed using the updated contact points and the relative vectors for frames where the key joints were within the threshold in Step 2. Otherwise, they are blended between the original motion and the adapted positions with a 1 second time window.\n\nStep 5: Full-Body Pose Computation. Finally, the full character pose is recomputed by full-body IK based on the CCD framework. Starting from the motion capture pose, the root translation and orientation is first computed such that the error of the end effectors is minimized, and then going down the hierarchy to minimize the error of each joint's end effectors. Although this does not guarantee temporal continuity, we find it stable and it produces smooth movements. The computed pose together with the new object is used as training data for the neural network.\n\nWhen preparing the training set for the system, for every frame of the training data we randomly switch/transform the object or environment by applying step 3-5 (see Fig. 6, bottom). Note that in order to maintain valid motion transitions within each training sample, the function for resampling the scene must use the same random seed for each pair of input and output frames during data generation. Such a random sampling allows us to prepare enough variation to cover the wide shape/pose space. We find this approach much more efficient compared to preparing the entire motion set for all types of objects and using them as the training data, where the training time increases in the order of (motion number \u00d7 object number) when doing full training with all objects.\n\n\nEXPERIMENTS\n\nIn this section, we describe the results of animating different character movements with interaction with objects and the environment in daily life, using the Neural State Machine.\n\nData Pre-processing and Training. The data is preprocessed to be in the form of input X and output Y for the Neural State Machine. The size of the training data is 16GB. The full training process described in Section 5 takes 70 epochs where the learning rate is reset at epoch 11 and 31. The batch size is set to 32 and during training the batches are randomly sampled. The full training of 70 epochs takes around 20 hours on an NVIDIA GeForce GTX 1080Ti GPU. After the training, the network size is around 250MB.\n\nAnimated Results. Figure 8 shows results of multiple tasks achieved by one trained model of Neural State Machine. We have successfully trained it to sit, avoid obstacles, open doors, and carry objects along with standard locomotion. The readers are referred to the supplementary video for the details.\n\nThe sitting task has been trained with various types of chairs. The system is able to generate the appropriate motion based on the chair Fig. 7. Visualization of the learned phase cycle for each task. Black dots on the yellow circle represent expert neural networks which are blended to generate the motion prediction network. The trajectory inside the circle is determined by the activation of the experts. The distinct trajectory for each task indicates how well they are separated in the motion space to avoid undesired blending. First and second rows: various sitting tasks adapting to size and to obstacles like a desk. Third row: collision avoidance tasks including concave objects. Fourth row: opening door. Fifth row: carrying objects. geometry. The system has also learned to properly slide in sideways to sit on a chair to avoid a desk in front of it. This demonstrates how the volumetric geometry input is able to encode the concavity of the colliding objects. The avoidance task has been successfully trained to go through a concave geometry like a wall with a hole. Again, this shows the strength of the volumetric geometry input encoding the concave geometry. This would not have been possible with a naive scene encoding with height maps. The open door and carry object tasks demonstrate successful motion planning to precisely reach the scene objects at the right orientation. This is due to the effectiveness of the goal-guided controller. Figure 7 visualizes how different tasks are encoded by our learning framework. The system cycles through different experts for each action, and the distinct shapes of the phase trajectory for each task indicate how well different tasks become separated in the model.\n\nTesting with Novel Objects. We show the results of applying our approach for sitting on novel chairs in Fig. 9. The data augmentation allows our system to let the character sit on chairs that have not be seen before. Despite the wide variety of geometry and sizes, the character can sit on them and bring the arms to the arm rest if the chair has them. \n\n\nEVALUATION\n\nIn this section, we first compare the results computed by the Neural State Machine with other alternative time series models. We next present the results of an ablation study that justifies the design/components of our system. The readers are referred to the supplementary video for the visual comparison.\n\n\nComparison with Other Time-Series Models\n\nWe compare our method against several alternative methods in terms of responsiveness, precision and foot-sliding artifacts. The responsiveness (see Table 2) is measured by the time required to transition to the target action label. The precision (see Table 3) is measured by the rotational error (RE) and positional error (PE) when reaching the goal location, when the characters start from the same starting position. The foot-sliding (see Figure 10) is measured by accumulating the drift of feet in the horizontal plane when the distance betwen the feet and the floor is lower than a certain threshold (2.5 cm). The other architectures that we compared our approach Fig. 9. Results of successfully sitting on novel chairs that are not used for training. Fig. 10. The average foot sliding produced by different models. Sliding in the walking and running tasks is measured in different moving directions. Sliding in the sitting task is measured during approaching and sitting transitions. Sliding in the carrying task is measured during approaching and holding movements.\n\nagainst include feed-forward neural network (MLP), PFNN, MANN and LSTM. We set the complexity of the models similar to ours; use the same set of input/output data for a fair comparison. Overall, our system performs the best, although other models perform equally well for some criteria. We now compare our approach with the individual alternatives. Note that when we evaluate the Neural State Machine using the sitting action, we use a test chair that is not included in the training data.\n\nComparison with LSTM. When we train an LSTM model that has a similar structure with  (4 recurrent layers, encoder and decoder structure), the system performs well except that there are some issues with responding to user inputs. The character mostly only starts to move towards the target object after walking for a few steps. Also, the character cannot directly transition to states that are not observed in the training data: e.g., transition from running to sitting completely fails. For making a controller responsive to user inputs, the system needs to learn the character should start approaching the goal irrespective of the memory state. In fact,  produce a large amount of augmented data by editing a short locomotion clip by Laplacian editing. In our scenario, where the character needs to approach and precisely reach a goal, humans use different stepping pattern according to the way they approach, Table 3. Upper and middle parts: The average positional error (PE) and rotational error (RE) produced by different models in the sitting and carrying tasks. Lower part: The error produced by NSM when the corresponding technique is removed. 10 different character positions/rotations are initialized for each task, error is measured at the ending point of the sitting and grasping transitions on the hip and hand joints correspondingly. so editing a single example is not a wise choice. Similarly, LSTM fails to conduct a transition that is not observed in the training, such as running to sitting. We also adopt the training strategy of probabilistic teacher forcing (Auto-LSTM) ] which uses model output from a prior time step as an input with a certain probability. Although such a training technique improves the responsiveness, the character still fails to perform some transitions where less training data exists.\n\n\nSit\n\nThese results show that our approach performs better than LSTM especially for responsiveness when the locomotion data set is not heavily augmented.\n\nComparison with PFNN. PFNN has much more restrictions compared to NSM for synthesizing character-scene interactions. With highly multi-modal data from different interaction behaviors, the PFNN results in unwanted blending of poses leading to imprecise output with vibrating artifacts, as shown in Figure 11. Note that the PFNN uses a single cyclic phase function where the control points are interpolated by the phase. The phase values are defined based on contacts. This works well for locomotion where the contacts follow a consistent foot-fall pattern. However the contacts and the phase labels are different between motions such as sitting, carrying and locomotion. For example, for sitting, there is a stationary contact between the back and the chair while locomotion has regular footfall patterns. Possibly due to such inconsistency, the precision (Table 3) for sitting and carrying of the PFNN is much worse than our approach, and also resulting in vibration artifacts. This is in contrast to NSM, where the phase function is learned from the action labels and the phase label. The system learns to use different combinations of control points during the phase cycle, as shown in Fig. 7.\n\nBecause the PFNN is designed for locomotion and locomotion takes up a large portion of our data, the responsiveness (Table 2) and foot sliding artifacts ( Figure 10) are similar to our approach. Comparison with MANN. The Gating Network of the MANN automatically computes the weighting of the expert weights and thus does not require providing the phase variable. The responsiveness (Table 2) of the MANN is equally good or sometimes even better than our approach. Also, the precision (Table 3) of the MANN is much better than the PFNN although not as good as ours. On the contrary, the MANN produces more foot sliding artifacts ( Figure 10) compared to the PFNN and our approach, especially when randomly changing directions and switching between different locomotion types. In such moments, the network tends to produce low joint angle updates which causes the whole motion to appear rather stiff. In return, the motion can appears very unresponsive although the root motion responds to the control signals, which leads to the main source of foot sliding artifacts. Those problems could be due to the difficulty of segmenting the motion types only by the foot velocities, which is the feature that the MANN uses for gating.\n\n\nAblation Study\n\nWe show an ablation study examining the of precision of sitting to demonstrate the effect of the 2D phase representation with Kronecker product, bi-directional controller, interaction volume input and environment volume input. The results are shown in Table 3, bottom. It can be observed that without this functionality, the precision degrades.\n\nKronecker Product. In Fig. 12, we measure the motion quality when modulating the gating input features with the phase via the Kronecker product instead of doing basic feature concatenation. The motion detail is measured as the average joint angle update, and foot sliding is measured by the ratio of horizontal foot movement when close above ground, similar to Figure 10. Using the Kronecker product achieves the best performance while including more features via concatenation incrementally decreases quality. Note that when concatenating features, the phase is still used as an input feature in the hope that the network could learn from this representation, but instead this feature seems to increasingly lose importance. This loss in quality can be explained by the weak segmentation characteristic of concatenated features, which often remain constant throughout the motion -particularly for one-hot action labels. When modulated by the phase, the segmentation of motion through time remains well-preserved with respect to the modulated features. Bi-directional Controller. As can be observed in the top image of Fig. 13, without the bi-directional controller, the character cannot correctly align to the target object. The left character without bidirectional control is off-centered and hands are not placed on the armrests, which results in unnatural poses and object penetration.\n\nInteraction Sensor. Without the Interaction Sensor, the character cannot properly adapt to the target geometry as shown in the bottom image of Fig. 13. The left character without the Interaction Sensor penetrates through the chair in an obscure pose. Environment Sensor. As the resolution of the Environment Sensor is low, the influence in the error in Table 3 is limited. However, without the Environment Sensor, the character does not interact well with the objects. Also, as can be observed in Fig. 14, the character ignores obstacles in the front of the character when approaching the chair, and penetrates through it to reach to the goal.\n\n\nLIMITATIONS AND FUTURE WORK\n\nAs we train the system with only a small data set of 3D geometry, although it works reasonably well for chairs similar to those in the data set, the system fails to adapt to geometry that is rather different from that in the training set (see Fig. 15). To adapt to a wider range of 3D shapes, in addition to increasing the training size, we would need to use a more complex representation, such as higher resolution volume data, or possibly other geometry encoders such as PointNet++ [Qi et al. 2017] pretrained with a large geometry dataset such as ShapeNet. Such a representation can lead to a Fig. 14. When the environment sensor is disabled, the character can easily pass through the chair geometry while approaching the object to sit down. Commonly, the produced trajectories can be observed to not maintain a safety distance around the object, and it is likely to observe unrealistic movements, such as hands or legs penetrating through the object.\n\ngeneralized shape and scene understanding with more convincing motion adaptation.\n\nWhen switching the goal action, the input into the network can change discontinuously, resulting in abrupt movements. This is more obvious when suddenly activating objects to interact with. Such artifacts can be mitigated by smoothly updating the inputs over a time window. On the contrary, a longer time window can result in slower response, which may not be desirable for real-time applications. We find a window of 0.25-0.5 seconds can produce smooth effects with less noticable latency.\n\nCurrently, the type of interactions by our character are limited to sitting, holding and avoiding obstacles. It will be interesting to look into a direction to capture the motion and the environment information together, for example by mounting a RGBD camera on the body of a subject wearing a mocap suit. Such a capture scheme can enrich the data needed for our system without manual intervention.\n\nWe found the phase encoded into the input vector produced better motions because it avoids the state machine from getting stuck. The downside of this is all motions require phase labelling. Automatic phase labelling works well for motions with clear cycles but for general acyclic motions we need manual phase labelling with heuristic rules applied across the dataset. A motion may also consist of multiple cyclic movements with different periods, such as a person swinging a sword while walking. Generalizing the detection of multiple phases in motion is one future direction to ease the set-up and improve results.\n\n\nCONCLUSION\n\nWe propose a novel neural network framework to synthesize motions that involve close interactions with the environment. Our system can handle a wide variety of motion types and allows the users to guide the characters by only providing abstract goals. The system can handle both cyclic and acyclic movements and can be applied for real-time applications such as computer games and virtual reality systems.\n\nFig. 3 .\n3Neural State Machine with goal-driven control enables smooth transitions between high-level states. Given a single goal action, the network automatically predicts the necessary intermediate states to reach the goal state smoothly.\n\nFig. 8 .\n8Results of Neural State Machine generating motion for various tasks.\n\nFig. 12 .\n12The resulting performance in motion detail and foot sliding when combining features with the phase by either using Kronecker product[K]   or concatenation [C] as input to the gating network.\n\nFig. 13 .\n13Top: ablation study for bi-directional control. The left character without trajectory and pose interpolation is misaligned on the chair. Bottom: ablation study for Interaction Sensors. The left character has more difficulty learning from the geometry and is penetrating into the chair with an unnatural pose.\n\nFig. 15 .\n15The arms fail to stay on the arm rests and the hip floats in the air for a chair drastically different from the training set.\n\nTable 1 .\n1Action distribution of motion capture.Label Seconds \n% \nIdle \n1603 26.7 \nWalk \n2600 43.3 \nRun \n354 \n5.9 \nSit \n1333 22.2 \nOpen \n126 \n2.1 \nCarry \n462 \n7.7 \nClimb \n114 \n1.9 \n\n\n\nTable 2 .\n2The average response time in seconds produced by different models. The responsiveness from idle to walking/running is measured by the style transition time to 4 different directions (forward/backward/left/right). The responsiveness from walking/running to sitting is measured by the task accomplishing time from 10 different positions/directions within 3 meters from the chair.Technique \nIdle to \nWalk \n\nIdle to \nRun \n\nWalk to \nSit \n\nRun to \nSit \nMLP \n1.75 \n1.35 \n5.05 \n5.13 \nPFNN \n1.50 \n0.87 \n4.95 \n5.32 \nMANN \n1.83 \n0.92 \n4.85 \n5.30 \nLSTM \n2.16 \n2.24 \n5.62 \n-\nAuto-LSTM \n1.86 \n1.82 \n5.53 \n-\nNSM (Ours) \n1.49 \n0.81 \n4.92 \n5.10 \n\n\n\n\nFig. 11. Left: a character driven by the PFNN penetrating a chair and exhibiting vibrating artifacts because it blends motions in drastically different tasks. Right: Neural State Machine architecture precisely aligns the character to the chair without vibrating artifacts because it only blends the motions from the relevant task. In the graphs below, we show the normalized average joint angle updates for each motion, where can be observed that such vibrating artifacts on the PFNN exist during all motion (also see supplementary video).Carry \nTechnique \nPE(cm) RE(deg) PE(cm) RE(deg) \nMLP \n14.05 \n4.11 \n6.27 \n3.46 \nPFNN \n7.66 \n3.31 \n10.35 \n4.83 \nMANN \n5.54 \n1.87 \n3.41 \n1.79 \nLSTM \n6.14 \n2.05 \n6.11 \n3.02 \nAuto-LSTM \n5.23 \n2.70 \n5.59 \n3.77 \nNSM (Ours) \n2.93 \n0.92 \n3.05 \n1.02 \nBi-Directional \n4.27 \n1.58 \n3.41 \n1.73 \nInteraction Sensor \n3.72 \n1.11 \n6.09 \n2.26 \nEnvironment Sensor \n3.05 \n0.94 \n8.52 \n2.27 \n\n\nACM Trans. Graph., Vol. 38, No. 6, Article 178. Publication date: November 2019.\n\nTask-based Locomotion. Shailen Agrawal, Michiel Van De Panne, 10.1145/2897824.2925893ACM Trans on Graph. 354Shailen Agrawal and Michiel van de Panne. 2016. Task-based Locomotion. ACM Trans on Graph 35, 4 (2016). https://doi.org/10.1145/2897824.2925893\n\nRelationship descriptors for interactive motion adaptation. Rami Ali Al-Asqhar , Taku Komura, Myung Geol Choi, 10.1145/2485895.2485905Proc. SCA. 45-53. SCA. 45-53Rami Ali Al-Asqhar, Taku Komura, and Myung Geol Choi. 2013. Relationship descriptors for interactive motion adaptation. In Proc. SCA. 45-53. https://doi.org/10.1145/ 2485895.2485905\n\nAn empirical evaluation of generic convolutional and recurrent networks for sequence modeling. Shaojie Bai, Zico Kolter, Vladlen Koltun, arXiv:1803.01271arXiv preprintShaojie Bai, J Zico Kolter, and Vladlen Koltun. 2018. An empirical evaluation of generic convolutional and recurrent networks for sequence modeling. arXiv preprint arXiv:1803.01271 (2018). http://arxiv.org/abs/1803.01271\n\nX Angel, Thomas Chang, Leonidas Funkhouser, Pat Guibas, Qixing Hanrahan, Zimo Huang, Silvio Li, Manolis Savarese, Shuran Savva, Hao Song, Su, arXiv:1512.03012Shapenet: An information-rich 3d model repository. arXiv preprintAngel X Chang, Thomas Funkhouser, Leonidas Guibas, Pat Hanrahan, Qixing Huang, Zimo Li, Silvio Savarese, Manolis Savva, Shuran Song, Hao Su, et al. 2015. Shapenet: An information-rich 3d model repository. arXiv preprint arXiv:1512.03012 (2015). http://arxiv.org/abs/1512.03012\n\nDeformable motion: Squeezing into cluttered environments. Myung Geol Choi, Manmyung Kim, Kyung Lyul Hyun, Jehee Lee, 10.1111/j.1467-8659.2011.01889.xComputer Graphics Forum. Wiley Online Library30Myung Geol Choi, Manmyung Kim, Kyung Lyul Hyun, and Jehee Lee. 2011. Deformable motion: Squeezing into cluttered environments. In Computer Graphics Forum, Vol. 30. Wiley Online Library. https://doi.org/10.1111/j.1467-8659.2011.01889.x\n\nPlanning biped locomotion using motion capture data and probabilistic roadmaps. Min Gyu Choi, Jehee Lee, Sung Yong Shin, 10.1145/636886.636889ACM Trans on Graph. 22Min Gyu Choi, Jehee Lee, and Sung Yong Shin. 2003. Planning biped locomotion using motion capture data and probabilistic roadmaps. ACM Trans on Graph 22, 2 (2003). https://doi.org/10.1145/636886.636889\n\nLearning to dress: synthesizing human dressing motion via deep reinforcement learning. Alexander Clegg, Wenhao Yu, Jie Tan, Karen Liu, Greg Turk, 10.1145/3272127.3275048ACM Trans on Graph. 374Alexander Clegg, Wenhao Yu, Jie Tan, C Karen Liu, and Greg Turk. 2018. Learning to dress: synthesizing human dressing motion via deep reinforcement learning. ACM Trans on Graph 37, 4 (2018). https://doi.org/10.1145/3272127.3275048\n\nFast and Accurate Deep Network Learning by Exponential Linear Units (ELUs). Djork-Arn\u00e9 Clevert, Thomas Unterthiner, Sepp Hochreiter, arXiv:1511.072897289CoRR abs/1511Djork-Arn\u00e9 Clevert, Thomas Unterthiner, and Sepp Hochreiter. 2015. Fast and Accurate Deep Network Learning by Exponential Linear Units (ELUs). CoRR abs/1511.07289 (2015). arXiv:1511.07289 http://arxiv.org/abs/1511.07289\n\nRecurrent network models for human dynamics. Katerina Fragkiadaki, Sergey Levine, Panna Felsen, Jitendra Malik, 10.1109/ICCV.2015.494Proc. ICCV. 4346-4354. ICCV. 4346-4354Katerina Fragkiadaki, Sergey Levine, Panna Felsen, and Jitendra Malik. 2015. Recurrent network models for human dynamics. In Proc. ICCV. 4346-4354. https://doi.org/10. 1109/ICCV.2015.494\n\nRecurrent Transition Networks for Character Locomotion. G F\u00e9lix, Christopher J Harvey, Pal, arXiv:1810.02363F\u00e9lix G. Harvey and Christopher J. Pal. 2018. Recurrent Transition Networks for Character Locomotion. CoRR abs/1810.02363 (2018). arXiv:1810.02363 http://arxiv. org/abs/1810.02363\n\nNicolas Heess, Srinivasan Sriram, Jay Lemmon, Josh Merel, Greg Wayne, Yuval Tassa, Tom Erez, Ziyu Wang, Ali Eslami, Martin Riedmiller, 10.1145/1833349.1778865arXiv:1707.02286Emergence of locomotion behaviours in rich environments. arXiv preprintNicolas Heess, Srinivasan Sriram, Jay Lemmon, Josh Merel, Greg Wayne, Yuval Tassa, Tom Erez, Ziyu Wang, Ali Eslami, Martin Riedmiller, et al. 2017. Emergence of locomotion behaviours in rich environments. arXiv preprint arXiv:1707.02286 (2017). https://doi.org/10.1145/1833349.1778865\n\nPhase-functioned neural networks for character control. Daniel Holden, Taku Komura, Jun Saito, 10.1145/3072959.3073663ACM Trans on Graph. 36442Daniel Holden, Taku Komura, and Jun Saito. 2017. Phase-functioned neural networks for character control. ACM Trans on Graph 36, 4 (2017), 42. https://doi.org/10.1145/ 3072959.3073663\n\nA deep learning framework for character motion synthesis and editing. Daniel Holden, Jun Saito, Taku Komura, 10.1145/2897824.2925975ACM Trans on Graph. 354Daniel Holden, Jun Saito, and Taku Komura. 2016. A deep learning framework for character motion synthesis and editing. ACM Trans on Graph 35, 4 (2016). https: //doi.org/10.1145/2897824.2925975\n\nAdaptive mixtures of local experts. A Robert, Michael I Jacobs, Jordan, J Steven, Geoffrey E Nowlan, Hinton, 10.1162/neco.1991.3.1.79Neural Computation. 3Robert A Jacobs, Michael I Jordan, Steven J Nowlan, and Geoffrey E Hinton. 1991. Adaptive mixtures of local experts. Neural Computation 3, 1 (1991), 79-87. https: //doi.org/10.1162/neco.1991.3.1.79\n\nTiling motion patches. Manmyung Kim, Youngseok Hwang, Kyunglyul Hyun, Jehee Lee, Proc. SCA. 117-126. SCA. 117-126Manmyung Kim, Youngseok Hwang, Kyunglyul Hyun, and Jehee Lee. 2012. Tiling motion patches. In Proc. SCA. 117-126. http://dl.acm.org/citation.cfm?id=2422356. 2422375\n\nInteractive control of avatars animated with human motion data. Jehee Lee, Jinxiang Chai, S A Paul, Jessica K Reitsma, Nancy S Hodgins, Pollard, 10.1145/566654.566607ACM Trans on Graph. 213Jehee Lee, Jinxiang Chai, Paul SA Reitsma, Jessica K Hodgins, and Nancy S Pollard. 2002. Interactive control of avatars animated with human motion data. ACM Trans on Graph 21, 3 (2002). https://doi.org/10.1145/566654.566607\n\nInteractive Character Animation by Learning Multi-objective Control. Kyungho Lee, Seyoung Lee, Jehee Lee, 10.1145/3272127.3275071ACM Trans on Graph. 37Kyungho Lee, Seyoung Lee, and Jehee Lee. 2018. Interactive Character Animation by Learning Multi-objective Control. ACM Trans on Graph 37, 6 (2018). https: //doi.org/10.1145/3272127.3275071\n\nMotion patches: building blocks for virtual environments annotated with motion data. Myung Geol Kang Hoon Lee, Jehee Choi, Lee, 10.1145/1141911.1141972ACM Trans on Graph. 253Kang Hoon Lee, Myung Geol Choi, and Jehee Lee. 2006. Motion patches: building blocks for virtual environments annotated with motion data. ACM Trans on Graph 25, 3 (2006). https://doi.org/10.1145/1141911.1141972\n\nAutoconditioned recurrent networks for extended complex human motion synthesis. Zimo Li, Yi Zhou, Shuangjiu Xiao, Chong He, Zeng Huang, Hao Li, arXiv:1707.05363arXiv preprintZimo Li, Yi Zhou, Shuangjiu Xiao, Chong He, Zeng Huang, and Hao Li. 2017. Auto- conditioned recurrent networks for extended complex human motion synthesis. arXiv preprint arXiv:1707.05363 (2017). http://arxiv.org/abs/1707.05363\n\nSampling-based contact-rich motion control. Libin Liu, Kangkang Yin, Tianjia Michiel Van De Panne, Weiwei Shao, Xu, 10.1145/1833349.1778865ACM Trans on Graph. 29128Libin Liu, KangKang Yin, Michiel van de Panne, Tianjia Shao, and Weiwei Xu. 2010. Sampling-based contact-rich motion control. ACM Trans on Graph 29, 4 (2010), 128. https://doi.org/10.1145/1833349.1778865\n\nLearning motion controllers with adaptive depth perception. Wan-Yen Lo, Claude Knaus, Matthias Zwicker, Proc. SCA. 145-154. SCA. 145-154Wan-Yen Lo, Claude Knaus, and Matthias Zwicker. 2012. Learning motion controllers with adaptive depth perception. In Proc. SCA. 145-154. http://dl.acm.org/citation. cfm?id=2422356.2422378\n\nReal-time planning for parameterized human motion. Wan-Yen Lo, Matthias Zwicker, Proc. SCA. 29-38. SCA. 29-38Wan-Yen Lo and Matthias Zwicker. 2008. Real-time planning for parameterized human motion. In Proc. SCA. 29-38. http://dl.acm.org/citation.cfm?id=1632592.1632598\n\nMotion Graphs++: A Compact Generative Model for Semantic Motion Analysis and Synthesis. Jianyuan Min, Jinxiang Chai, 10.1145/2366145.2366172153:1-153:12ACM Trans on Graph. 31Jianyuan Min and Jinxiang Chai. 2012. Motion Graphs++: A Compact Generative Model for Semantic Motion Analysis and Synthesis. ACM Trans on Graph 31, 6 (2012), 153:1-153:12. https://doi.org/10.1145/2366145.2366172\n\nDiscovery of complex behaviors through contact-invariant optimization. Igor Mordatch, Emanuel Todorov, Zoran Popovi\u0107, 10.1145/2185520.2185539ACM Trans on Graph. 314Igor Mordatch, Emanuel Todorov, and Zoran Popovi\u0107. 2012. Discovery of complex behaviors through contact-invariant optimization. ACM Trans on Graph 31, 4 (2012). https://doi.org/10.1145/2185520.2185539\n\nGeostatistical motion interpolation. Tomohiko Mukai, Shigeru Kuriyama, http:/doi.acm.org/10.1145/1073204.1073313ACM Trans on Graph. 243Tomohiko Mukai and Shigeru Kuriyama. 2005. Geostatistical motion interpolation. ACM Trans on Graph 24, 3 (2005). http://doi.acm.org/10.1145/1073204.1073313\n\nDeep-Mimic: Example-guided Deep Reinforcement Learning of Physics-based Character Skills. Pieter Xue Bin Peng, Sergey Abbeel, Michiel Levine, Van De Panne, 10.1145/3197517.3201311ACM Trans on Graph. 374Xue Bin Peng, Pieter Abbeel, Sergey Levine, and Michiel van de Panne. 2018a. Deep- Mimic: Example-guided Deep Reinforcement Learning of Physics-based Character Skills. ACM Trans on Graph 37, 4 (2018). https://doi.org/10.1145/3197517.3201311\n\nTerrain-Adaptive Locomotion Skills Using Deep Reinforcement Learning. Glen Xue Bin Peng, Michiel Berseth, Van De Panne, 10.1145/2897824.2925881ACM Trans on Graph. 354Xue Bin Peng, Glen Berseth, and Michiel van de Panne. 2016. Terrain-Adaptive Lo- comotion Skills Using Deep Reinforcement Learning. ACM Trans on Graph 35, 4 (2016). https://doi.org/10.1145/2897824.2925881\n\nDeeploco: Dynamic locomotion skills using hierarchical deep reinforcement learning. Glen Xue Bin Peng, Kangkang Berseth, Michiel Yin, Van De Panne, 10.1145/3072959.3073602ACM Trans on Graph. 364Xue Bin Peng, Glen Berseth, KangKang Yin, and Michiel Van De Panne. 2017. Deeploco: Dynamic locomotion skills using hierarchical deep reinforcement learning. ACM Trans on Graph 36, 4 (2017). https://doi.org/10.1145/3072959.3073602\n\nSFV: reinforcement learning of physical skills from videos. Angjoo Xue Bin Peng, Jitendra Kanazawa, Pieter Malik, Sergey Abbeel, Levine, 10.1145/3272127.3275014ACM Trans on Graph. 37Xue Bin Peng, Angjoo Kanazawa, Jitendra Malik, Pieter Abbeel, and Sergey Levine. 2018b. SFV: reinforcement learning of physical skills from videos. ACM Trans on Graph 37, 6 (2018). https://doi.org/10.1145/3272127.3275014\n\nPoint-Net++: Deep Hierarchical Feature Learning on Point Sets in a Metric Space. Li Charles Ruizhongtai Qi, Hao Yi, Leonidas J Su, Guibas, 10.1109/38.708559Proc. NIPS. 5099-5108. NIPS. 5099-5108Michael F. Cohen, and Bobby Bodenheimer18Verbs and Adverbs: Multidimensional Motion InterpolationCharles Ruizhongtai Qi, Li Yi, Hao Su, and Leonidas J Guibas. 2017. Point- Net++: Deep Hierarchical Feature Learning on Point Sets in a Met- ric Space. In Proc. NIPS. 5099-5108. http://papers.nips.cc/paper/ 7095-pointnet-deep-hierarchical-feature-learning-on-point-sets-in-a-metric-space. pdf Charles Rose, Michael F. Cohen, and Bobby Bodenheimer. 1998. Verbs and Adverbs: Multidimensional Motion Interpolation. IEEE Computer Graphics and Applications 18, 5 (1998), 32-40. http://dx.doi.org/10.1109/38.708559\n\nArtist-Directed Inverse-Kinematics Using Radial Basis Function Interpolation. Iii Charles F Rose, Peter-Pike J Sloan, Michael F Cohen, 10.1111/1467-8659.00516Computer Graphics Forum. 20Charles F Rose III, Peter-Pike J Sloan, and Michael F Cohen. 2001. Artist-Directed Inverse-Kinematics Using Radial Basis Function Interpolation. Computer Graphics Forum 20, 3 (2001), 239-250. https://doi.org/10.1111/1467-8659.00516\n\nConstruction and optimal search of interpolated motion graphs. Alla Safonova, Jessica K Hodgins, 10.1145/1276377.1276510ACM Trans on Graph. 263Alla Safonova and Jessica K Hodgins. 2007. Construction and optimal search of inter- polated motion graphs. ACM Trans on Graph 26, 3 (2007). https://doi.org/10.1145/ 1276377.1276510\n\nInteraction patches for multi-character animation. P H Hubert, Taku Shum, Masashi Komura, Shuntaro Shiraishi, Yamazaki, 10.1145/1457515.1409067ACM Trans on Graph. 27Hubert PH Shum, Taku Komura, Masashi Shiraishi, and Shuntaro Yamazaki. 2008. Interaction patches for multi-character animation. ACM Trans on Graph 27, 5 (2008). https://doi.org/10.1145/1457515.1409067\n\nNeural Kinematic Networks for Unsupervised Motion Retargetting. Ruben Villegas, Jimei Yang, Duygu Ceylan, Honglak Lee, 10.1109/CVPR.2018.00901Proceedings of CVPR 2018. CVPR 2018Ruben Villegas, Jimei Yang, Duygu Ceylan, and Honglak Lee. 2018. Neural Kinematic Networks for Unsupervised Motion Retargetting. Proceedings of CVPR 2018. https: //doi.org/10.1109/CVPR.2018.00901\n\nGaussian Process Dynamical Models for Human Motion. J M Wang, D J Fleet, A Hertzmann, 10.1109/TPAMI.2007.1167IEEE PAMI. 30J.M. Wang, D.J. Fleet, and A. Hertzmann. 2008. Gaussian Process Dynamical Models for Human Motion. IEEE PAMI 30, 2 (Feb 2008), 283-298. https://doi.org/10.1109/ TPAMI.2007.1167\n\nGenerating and ranking diverse multi-character interactions. Jungdam Won, Kyungho Lee, O&apos; Carol, Jessica K Sullivan, Jehee Hodgins, Lee, 10.1145/2661229.2661271ACM Trans on Graph. 33Jungdam Won, Kyungho Lee, Carol O'Sullivan, Jessica K Hodgins, and Jehee Lee. 2014. Generating and ranking diverse multi-character interactions. ACM Trans on Graph 33, 6 (2014). https://doi.org/10.1145/2661229.2661271\n\nHow to train your dragon: example-guided control of flapping flight. Jungdam Won, Jongho Park, Kwanyu Kim, Jehee Lee, 10.1145/3130800.3130833ACM Trans on Graph. 366Jungdam Won, Jongho Park, Kwanyu Kim, and Jehee Lee. 2017. How to train your dragon: example-guided control of flapping flight. ACM Trans on Graph 36, 6 (2017). https://doi.org/10.1145/3130800.3130833\n\nSynthesis of detailed hand manipulations using contact sampling. Yuting Ye, C Karen Liu, 10.1145/2185520.2185537ACM Trans on Graph. 314Yuting Ye and C Karen Liu. 2012. Synthesis of detailed hand manipulations using contact sampling. ACM Trans on Graph 31, 4 (2012). https://doi.org/10.1145/2185520.2185537\n\nLearning symmetric and low-energy locomotion. Wenhao Yu, Greg Turk, C Karen Liu, 10.1145/3197517.3201397ACM Trans on Graph. 374Wenhao Yu, Greg Turk, and C Karen Liu. 2018. Learning symmetric and low-energy locomotion. ACM Trans on Graph 37, 4 (2018). https://doi.org/10.1145/3197517. 3201397\n\nMode-adaptive neural networks for quadruped motion control. He Zhang, Sebastian Starke, Taku Komura, Jun Saito, 10.1145/3197517.3201366ACM Trans on Graph. 374He Zhang, Sebastian Starke, Taku Komura, and Jun Saito. 2018. Mode-adaptive neural networks for quadruped motion control. ACM Trans on Graph 37, 4 (2018). https: //doi.org/10.1145/3197517.3201366\n\nRobust realtime physics-based motion control for human grasping. Wenping Zhao, Jianjie Zhang, Jianyuan Min, Jinxiang Chai, 10.1145/2508363.2508412ACM Trans on Graph. 326Wenping Zhao, Jianjie Zhang, Jianyuan Min, and Jinxiang Chai. 2013. Robust realtime physics-based motion control for human grasping. ACM Trans on Graph 32, 6 (2013). https://doi.org/10.1145/2508363.2508412\n", "annotations": {"author": "[{\"end\":393,\"start\":57}]", "publisher": null, "author_last_name": "[{\"end\":73,\"start\":67}]", "author_first_name": "[{\"end\":66,\"start\":57}]", "author_affiliation": "[{\"end\":124,\"start\":75},{\"end\":214,\"start\":126},{\"end\":291,\"start\":216},{\"end\":392,\"start\":293}]", "title": "[{\"end\":54,\"start\":1},{\"end\":447,\"start\":394}]", "venue": null, "abstract": "[{\"end\":2496,\"start\":1002}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3174,\"start\":3155},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3195,\"start\":3174},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":4312,\"start\":4292},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":7677,\"start\":7660},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8123,\"start\":8107},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":8510,\"start\":8493},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":8526,\"start\":8510},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":8594,\"start\":8578},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":8628,\"start\":8597},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9210,\"start\":9185},{\"end\":9227,\"start\":9210},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":9248,\"start\":9227},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":9265,\"start\":9248},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":10007,\"start\":9990},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10058,\"start\":10041},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10138,\"start\":10122},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":10158,\"start\":10138},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":10220,\"start\":10201},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10263,\"start\":10241},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10310,\"start\":10293},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":10326,\"start\":10310},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":10343,\"start\":10326},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":10422,\"start\":10404},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10693,\"start\":10675},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10947,\"start\":10931},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":11046,\"start\":11025},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11129,\"start\":11114},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":11298,\"start\":11271},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11524,\"start\":11507},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":12379,\"start\":12357},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":12691,\"start\":12675},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":12829,\"start\":12812},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":12991,\"start\":12973},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":14193,\"start\":14168},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":14291,\"start\":14270},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":14350,\"start\":14329},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":14933,\"start\":14916},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":15179,\"start\":15159},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":15233,\"start\":15214},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":15326,\"start\":15306},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":15376,\"start\":15358},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":15445,\"start\":15426},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":16057,\"start\":16039},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":16084,\"start\":16068},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":16124,\"start\":16106},{\"end\":16168,\"start\":16147},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":16201,\"start\":16182},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":16369,\"start\":16350},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":16390,\"start\":16371},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":16396,\"start\":16390},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":16482,\"start\":16464},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":16501,\"start\":16482},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":16535,\"start\":16516},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":25604,\"start\":25584},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":27267,\"start\":27247},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":27763,\"start\":27743},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":30538,\"start\":30519},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":41511,\"start\":41492},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":41601,\"start\":41578},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":57400,\"start\":57384}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":60109,\"start\":59868},{\"attributes\":{\"id\":\"fig_1\"},\"end\":60189,\"start\":60110},{\"attributes\":{\"id\":\"fig_2\"},\"end\":60393,\"start\":60190},{\"attributes\":{\"id\":\"fig_3\"},\"end\":60715,\"start\":60394},{\"attributes\":{\"id\":\"fig_4\"},\"end\":60854,\"start\":60716},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":61039,\"start\":60855},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":61682,\"start\":61040},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":62594,\"start\":61683}]", "paragraph": "[{\"end\":3033,\"start\":2512},{\"end\":3502,\"start\":3035},{\"end\":4461,\"start\":3504},{\"end\":4895,\"start\":4463},{\"end\":5540,\"start\":4897},{\"end\":5824,\"start\":5542},{\"end\":5886,\"start\":5826},{\"end\":6658,\"start\":5888},{\"end\":7150,\"start\":6660},{\"end\":7417,\"start\":7167},{\"end\":8743,\"start\":7450},{\"end\":9026,\"start\":8745},{\"end\":9809,\"start\":9028},{\"end\":12277,\"start\":9811},{\"end\":13365,\"start\":12279},{\"end\":13794,\"start\":13430},{\"end\":14070,\"start\":13796},{\"end\":15848,\"start\":14072},{\"end\":16536,\"start\":15850},{\"end\":17154,\"start\":16538},{\"end\":17872,\"start\":17179},{\"end\":18397,\"start\":17874},{\"end\":18743,\"start\":18427},{\"end\":19296,\"start\":18745},{\"end\":19558,\"start\":19308},{\"end\":19938,\"start\":19799},{\"end\":19969,\"start\":19940},{\"end\":20516,\"start\":20002},{\"end\":21398,\"start\":20566},{\"end\":21631,\"start\":21400},{\"end\":21905,\"start\":21633},{\"end\":21961,\"start\":21918},{\"end\":22323,\"start\":22111},{\"end\":22575,\"start\":22325},{\"end\":22887,\"start\":22670},{\"end\":23076,\"start\":22982},{\"end\":23370,\"start\":23195},{\"end\":24072,\"start\":23372},{\"end\":24339,\"start\":24074},{\"end\":24771,\"start\":24478},{\"end\":25127,\"start\":24856},{\"end\":25616,\"start\":25151},{\"end\":25661,\"start\":25658},{\"end\":25836,\"start\":25680},{\"end\":26140,\"start\":25838},{\"end\":26253,\"start\":26164},{\"end\":26951,\"start\":26294},{\"end\":27442,\"start\":27019},{\"end\":28009,\"start\":27444},{\"end\":28089,\"start\":28011},{\"end\":28302,\"start\":28170},{\"end\":28592,\"start\":28424},{\"end\":28688,\"start\":28613},{\"end\":28903,\"start\":28742},{\"end\":29226,\"start\":28965},{\"end\":29558,\"start\":29259},{\"end\":30185,\"start\":29592},{\"end\":31660,\"start\":30187},{\"end\":33181,\"start\":31694},{\"end\":33367,\"start\":33183},{\"end\":33854,\"start\":33449},{\"end\":34649,\"start\":33903},{\"end\":35099,\"start\":34689},{\"end\":36002,\"start\":35122},{\"end\":36268,\"start\":36004},{\"end\":37008,\"start\":36293},{\"end\":37300,\"start\":37010},{\"end\":37903,\"start\":37302},{\"end\":38622,\"start\":38025},{\"end\":38815,\"start\":38643},{\"end\":40027,\"start\":38848},{\"end\":40452,\"start\":40029},{\"end\":41637,\"start\":40505},{\"end\":41708,\"start\":41639},{\"end\":42009,\"start\":41710},{\"end\":42351,\"start\":42011},{\"end\":42637,\"start\":42353},{\"end\":42680,\"start\":42639},{\"end\":42840,\"start\":42682},{\"end\":43379,\"start\":42842},{\"end\":43702,\"start\":43381},{\"end\":44268,\"start\":43704},{\"end\":45040,\"start\":44270},{\"end\":45236,\"start\":45056},{\"end\":45751,\"start\":45238},{\"end\":46054,\"start\":45753},{\"end\":47779,\"start\":46056},{\"end\":48134,\"start\":47781},{\"end\":48454,\"start\":48149},{\"end\":49570,\"start\":48499},{\"end\":50061,\"start\":49572},{\"end\":51892,\"start\":50063},{\"end\":52047,\"start\":51900},{\"end\":53244,\"start\":52049},{\"end\":54470,\"start\":53246},{\"end\":54833,\"start\":54489},{\"end\":56223,\"start\":54835},{\"end\":56868,\"start\":56225},{\"end\":57854,\"start\":56900},{\"end\":57937,\"start\":57856},{\"end\":58429,\"start\":57939},{\"end\":58829,\"start\":58431},{\"end\":59447,\"start\":58831},{\"end\":59867,\"start\":59462}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":19605,\"start\":19559},{\"attributes\":{\"id\":\"formula_1\"},\"end\":19798,\"start\":19605},{\"attributes\":{\"id\":\"formula_2\"},\"end\":20001,\"start\":19970},{\"attributes\":{\"id\":\"formula_3\"},\"end\":20565,\"start\":20517},{\"attributes\":{\"id\":\"formula_4\"},\"end\":22110,\"start\":21962},{\"attributes\":{\"id\":\"formula_5\"},\"end\":22669,\"start\":22576},{\"attributes\":{\"id\":\"formula_6\"},\"end\":22981,\"start\":22888},{\"attributes\":{\"id\":\"formula_7\"},\"end\":23194,\"start\":23077},{\"attributes\":{\"id\":\"formula_8\"},\"end\":24405,\"start\":24340},{\"attributes\":{\"id\":\"formula_9\"},\"end\":24477,\"start\":24405},{\"attributes\":{\"id\":\"formula_10\"},\"end\":24855,\"start\":24772},{\"attributes\":{\"id\":\"formula_11\"},\"end\":25150,\"start\":25128},{\"attributes\":{\"id\":\"formula_12\"},\"end\":25657,\"start\":25617},{\"attributes\":{\"id\":\"formula_13\"},\"end\":26163,\"start\":26141},{\"attributes\":{\"id\":\"formula_14\"},\"end\":26293,\"start\":26254},{\"attributes\":{\"id\":\"formula_15\"},\"end\":27018,\"start\":26952},{\"attributes\":{\"id\":\"formula_16\"},\"end\":28169,\"start\":28090},{\"attributes\":{\"id\":\"formula_17\"},\"end\":28423,\"start\":28303},{\"attributes\":{\"id\":\"formula_18\"},\"end\":28741,\"start\":28689},{\"attributes\":{\"id\":\"formula_19\"},\"end\":28964,\"start\":28904},{\"attributes\":{\"id\":\"formula_20\"},\"end\":33448,\"start\":33368},{\"attributes\":{\"id\":\"formula_21\"},\"end\":33902,\"start\":33855},{\"attributes\":{\"id\":\"formula_22\"},\"end\":34688,\"start\":34650},{\"attributes\":{\"id\":\"formula_23\"},\"end\":36292,\"start\":36269},{\"attributes\":{\"id\":\"formula_24\"},\"end\":38024,\"start\":37904}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":39701,\"start\":39694},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":48654,\"start\":48647},{\"end\":48758,\"start\":48750},{\"end\":50981,\"start\":50974},{\"end\":52913,\"start\":52904},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":53371,\"start\":53362},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":53636,\"start\":53628},{\"end\":53738,\"start\":53730},{\"end\":54748,\"start\":54741},{\"end\":56585,\"start\":56578}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2510,\"start\":2498},{\"attributes\":{\"n\":\"2\"},\"end\":7165,\"start\":7153},{\"attributes\":{\"n\":\"2.1\"},\"end\":7448,\"start\":7420},{\"attributes\":{\"n\":\"2.2\"},\"end\":13428,\"start\":13368},{\"attributes\":{\"n\":\"3\"},\"end\":17177,\"start\":17157},{\"attributes\":{\"n\":\"3.1\"},\"end\":18425,\"start\":18400},{\"end\":19306,\"start\":19299},{\"end\":21916,\"start\":21908},{\"attributes\":{\"n\":\"3.2\"},\"end\":25678,\"start\":25664},{\"attributes\":{\"n\":\"3.3\"},\"end\":28611,\"start\":28595},{\"attributes\":{\"n\":\"4\"},\"end\":29257,\"start\":29229},{\"attributes\":{\"n\":\"4.1\"},\"end\":29590,\"start\":29561},{\"attributes\":{\"n\":\"4.2\"},\"end\":31692,\"start\":31663},{\"attributes\":{\"n\":\"4.3\"},\"end\":35120,\"start\":35102},{\"attributes\":{\"n\":\"5\"},\"end\":38641,\"start\":38625},{\"attributes\":{\"n\":\"5.1\"},\"end\":38846,\"start\":38818},{\"attributes\":{\"n\":\"5.2\"},\"end\":40503,\"start\":40455},{\"attributes\":{\"n\":\"6\"},\"end\":45054,\"start\":45043},{\"attributes\":{\"n\":\"7\"},\"end\":48147,\"start\":48137},{\"attributes\":{\"n\":\"7.1\"},\"end\":48497,\"start\":48457},{\"end\":51898,\"start\":51895},{\"attributes\":{\"n\":\"7.2\"},\"end\":54487,\"start\":54473},{\"attributes\":{\"n\":\"8\"},\"end\":56898,\"start\":56871},{\"attributes\":{\"n\":\"9\"},\"end\":59460,\"start\":59450},{\"end\":59877,\"start\":59869},{\"end\":60119,\"start\":60111},{\"end\":60200,\"start\":60191},{\"end\":60404,\"start\":60395},{\"end\":60726,\"start\":60717},{\"end\":60865,\"start\":60856},{\"end\":61050,\"start\":61041}]", "table": "[{\"end\":61039,\"start\":60905},{\"end\":61682,\"start\":61429},{\"end\":62594,\"start\":62224}]", "figure_caption": "[{\"end\":60109,\"start\":59879},{\"end\":60189,\"start\":60121},{\"end\":60393,\"start\":60203},{\"end\":60715,\"start\":60407},{\"end\":60854,\"start\":60729},{\"end\":60905,\"start\":60867},{\"end\":61429,\"start\":61052},{\"end\":62224,\"start\":61685}]", "figure_ref": "[{\"end\":17212,\"start\":17204},{\"end\":17376,\"start\":17370},{\"end\":18468,\"start\":18462},{\"end\":19509,\"start\":19503},{\"end\":25710,\"start\":25704},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":30851,\"start\":30845},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":31281,\"start\":31275},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":31509,\"start\":31503},{\"end\":31991,\"start\":31983},{\"end\":32861,\"start\":32855},{\"end\":35249,\"start\":35243},{\"end\":35297,\"start\":35291},{\"end\":35690,\"start\":35684},{\"end\":36221,\"start\":36215},{\"end\":36791,\"start\":36785},{\"end\":37484,\"start\":37478},{\"end\":41706,\"start\":41700},{\"end\":42560,\"start\":42554},{\"end\":44442,\"start\":44436},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":45779,\"start\":45771},{\"end\":46199,\"start\":46193},{\"end\":47521,\"start\":47513},{\"end\":47891,\"start\":47885},{\"end\":48950,\"start\":48940},{\"end\":49173,\"start\":49167},{\"end\":49262,\"start\":49255},{\"end\":52355,\"start\":52346},{\"end\":53243,\"start\":53237},{\"end\":53410,\"start\":53401},{\"end\":53885,\"start\":53876},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":54864,\"start\":54857},{\"end\":55205,\"start\":55196},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":55960,\"start\":55953},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":56375,\"start\":56368},{\"end\":56729,\"start\":56722},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":57150,\"start\":57143},{\"end\":57504,\"start\":57496}]", "bib_author_first_name": "[{\"end\":62707,\"start\":62700},{\"end\":63008,\"start\":62990},{\"end\":63015,\"start\":63011},{\"end\":63029,\"start\":63024},{\"end\":63034,\"start\":63030},{\"end\":63377,\"start\":63370},{\"end\":63387,\"start\":63383},{\"end\":63403,\"start\":63396},{\"end\":63665,\"start\":63664},{\"end\":63679,\"start\":63673},{\"end\":63695,\"start\":63687},{\"end\":63711,\"start\":63708},{\"end\":63726,\"start\":63720},{\"end\":63741,\"start\":63737},{\"end\":63755,\"start\":63749},{\"end\":63767,\"start\":63760},{\"end\":63784,\"start\":63778},{\"end\":63795,\"start\":63792},{\"end\":64228,\"start\":64223},{\"end\":64233,\"start\":64229},{\"end\":64248,\"start\":64240},{\"end\":64259,\"start\":64254},{\"end\":64264,\"start\":64260},{\"end\":64276,\"start\":64271},{\"end\":64680,\"start\":64677},{\"end\":64684,\"start\":64681},{\"end\":64696,\"start\":64691},{\"end\":64706,\"start\":64702},{\"end\":64711,\"start\":64707},{\"end\":65060,\"start\":65051},{\"end\":65074,\"start\":65068},{\"end\":65082,\"start\":65079},{\"end\":65093,\"start\":65088},{\"end\":65103,\"start\":65099},{\"end\":65474,\"start\":65464},{\"end\":65490,\"start\":65484},{\"end\":65508,\"start\":65504},{\"end\":65828,\"start\":65820},{\"end\":65848,\"start\":65842},{\"end\":65862,\"start\":65857},{\"end\":65879,\"start\":65871},{\"end\":66191,\"start\":66190},{\"end\":66210,\"start\":66199},{\"end\":66212,\"start\":66211},{\"end\":66430,\"start\":66423},{\"end\":66448,\"start\":66438},{\"end\":66460,\"start\":66457},{\"end\":66473,\"start\":66469},{\"end\":66485,\"start\":66481},{\"end\":66498,\"start\":66493},{\"end\":66509,\"start\":66506},{\"end\":66520,\"start\":66516},{\"end\":66530,\"start\":66527},{\"end\":66545,\"start\":66539},{\"end\":67016,\"start\":67010},{\"end\":67029,\"start\":67025},{\"end\":67041,\"start\":67038},{\"end\":67357,\"start\":67351},{\"end\":67369,\"start\":67366},{\"end\":67381,\"start\":67377},{\"end\":67667,\"start\":67666},{\"end\":67683,\"start\":67676},{\"end\":67685,\"start\":67684},{\"end\":67703,\"start\":67702},{\"end\":67720,\"start\":67712},{\"end\":67722,\"start\":67721},{\"end\":68014,\"start\":68006},{\"end\":68029,\"start\":68020},{\"end\":68046,\"start\":68037},{\"end\":68058,\"start\":68053},{\"end\":68331,\"start\":68326},{\"end\":68345,\"start\":68337},{\"end\":68353,\"start\":68352},{\"end\":68355,\"start\":68354},{\"end\":68369,\"start\":68362},{\"end\":68371,\"start\":68370},{\"end\":68386,\"start\":68381},{\"end\":68388,\"start\":68387},{\"end\":68752,\"start\":68745},{\"end\":68765,\"start\":68758},{\"end\":68776,\"start\":68771},{\"end\":69108,\"start\":69103},{\"end\":69113,\"start\":69109},{\"end\":69134,\"start\":69129},{\"end\":69488,\"start\":69484},{\"end\":69495,\"start\":69493},{\"end\":69511,\"start\":69502},{\"end\":69523,\"start\":69518},{\"end\":69532,\"start\":69528},{\"end\":69543,\"start\":69540},{\"end\":69856,\"start\":69851},{\"end\":69870,\"start\":69862},{\"end\":69883,\"start\":69876},{\"end\":69912,\"start\":69906},{\"end\":70243,\"start\":70236},{\"end\":70254,\"start\":70248},{\"end\":70270,\"start\":70262},{\"end\":70559,\"start\":70552},{\"end\":70572,\"start\":70564},{\"end\":70868,\"start\":70860},{\"end\":70882,\"start\":70874},{\"end\":71235,\"start\":71231},{\"end\":71253,\"start\":71246},{\"end\":71268,\"start\":71263},{\"end\":71571,\"start\":71563},{\"end\":71586,\"start\":71579},{\"end\":71914,\"start\":71908},{\"end\":71935,\"start\":71929},{\"end\":71951,\"start\":71944},{\"end\":72336,\"start\":72332},{\"end\":72358,\"start\":72351},{\"end\":72722,\"start\":72718},{\"end\":72745,\"start\":72737},{\"end\":72762,\"start\":72755},{\"end\":73126,\"start\":73120},{\"end\":73149,\"start\":73141},{\"end\":73166,\"start\":73160},{\"end\":73180,\"start\":73174},{\"end\":73547,\"start\":73545},{\"end\":73575,\"start\":73572},{\"end\":73588,\"start\":73580},{\"end\":73590,\"start\":73589},{\"end\":74346,\"start\":74343},{\"end\":74375,\"start\":74363},{\"end\":74392,\"start\":74383},{\"end\":74750,\"start\":74746},{\"end\":74768,\"start\":74761},{\"end\":74770,\"start\":74769},{\"end\":75061,\"start\":75060},{\"end\":75063,\"start\":75062},{\"end\":75076,\"start\":75072},{\"end\":75090,\"start\":75083},{\"end\":75107,\"start\":75099},{\"end\":75445,\"start\":75440},{\"end\":75461,\"start\":75456},{\"end\":75473,\"start\":75468},{\"end\":75489,\"start\":75482},{\"end\":75803,\"start\":75802},{\"end\":75805,\"start\":75804},{\"end\":75813,\"start\":75812},{\"end\":75815,\"start\":75814},{\"end\":75824,\"start\":75823},{\"end\":76118,\"start\":76111},{\"end\":76131,\"start\":76124},{\"end\":76144,\"start\":76137},{\"end\":76159,\"start\":76152},{\"end\":76161,\"start\":76160},{\"end\":76177,\"start\":76172},{\"end\":76532,\"start\":76525},{\"end\":76544,\"start\":76538},{\"end\":76557,\"start\":76551},{\"end\":76568,\"start\":76563},{\"end\":76893,\"start\":76887},{\"end\":76905,\"start\":76898},{\"end\":77181,\"start\":77175},{\"end\":77190,\"start\":77186},{\"end\":77204,\"start\":77197},{\"end\":77484,\"start\":77482},{\"end\":77501,\"start\":77492},{\"end\":77514,\"start\":77510},{\"end\":77526,\"start\":77523},{\"end\":77849,\"start\":77842},{\"end\":77863,\"start\":77856},{\"end\":77879,\"start\":77871},{\"end\":77893,\"start\":77885}]", "bib_author_last_name": "[{\"end\":62715,\"start\":62708},{\"end\":62737,\"start\":62717},{\"end\":63022,\"start\":63016},{\"end\":63039,\"start\":63035},{\"end\":63381,\"start\":63378},{\"end\":63394,\"start\":63388},{\"end\":63410,\"start\":63404},{\"end\":63671,\"start\":63666},{\"end\":63685,\"start\":63680},{\"end\":63706,\"start\":63696},{\"end\":63718,\"start\":63712},{\"end\":63735,\"start\":63727},{\"end\":63747,\"start\":63742},{\"end\":63758,\"start\":63756},{\"end\":63776,\"start\":63768},{\"end\":63790,\"start\":63785},{\"end\":63800,\"start\":63796},{\"end\":63804,\"start\":63802},{\"end\":64238,\"start\":64234},{\"end\":64252,\"start\":64249},{\"end\":64269,\"start\":64265},{\"end\":64280,\"start\":64277},{\"end\":64689,\"start\":64685},{\"end\":64700,\"start\":64697},{\"end\":64716,\"start\":64712},{\"end\":65066,\"start\":65061},{\"end\":65077,\"start\":65075},{\"end\":65086,\"start\":65083},{\"end\":65097,\"start\":65094},{\"end\":65108,\"start\":65104},{\"end\":65482,\"start\":65475},{\"end\":65502,\"start\":65491},{\"end\":65519,\"start\":65509},{\"end\":65840,\"start\":65829},{\"end\":65855,\"start\":65849},{\"end\":65869,\"start\":65863},{\"end\":65885,\"start\":65880},{\"end\":66197,\"start\":66192},{\"end\":66219,\"start\":66213},{\"end\":66224,\"start\":66221},{\"end\":66436,\"start\":66431},{\"end\":66455,\"start\":66449},{\"end\":66467,\"start\":66461},{\"end\":66479,\"start\":66474},{\"end\":66491,\"start\":66486},{\"end\":66504,\"start\":66499},{\"end\":66514,\"start\":66510},{\"end\":66525,\"start\":66521},{\"end\":66537,\"start\":66531},{\"end\":66556,\"start\":66546},{\"end\":67023,\"start\":67017},{\"end\":67036,\"start\":67030},{\"end\":67047,\"start\":67042},{\"end\":67364,\"start\":67358},{\"end\":67375,\"start\":67370},{\"end\":67388,\"start\":67382},{\"end\":67674,\"start\":67668},{\"end\":67692,\"start\":67686},{\"end\":67700,\"start\":67694},{\"end\":67710,\"start\":67704},{\"end\":67729,\"start\":67723},{\"end\":67737,\"start\":67731},{\"end\":68018,\"start\":68015},{\"end\":68035,\"start\":68030},{\"end\":68051,\"start\":68047},{\"end\":68062,\"start\":68059},{\"end\":68335,\"start\":68332},{\"end\":68350,\"start\":68346},{\"end\":68360,\"start\":68356},{\"end\":68379,\"start\":68372},{\"end\":68396,\"start\":68389},{\"end\":68405,\"start\":68398},{\"end\":68756,\"start\":68753},{\"end\":68769,\"start\":68766},{\"end\":68780,\"start\":68777},{\"end\":69127,\"start\":69114},{\"end\":69139,\"start\":69135},{\"end\":69144,\"start\":69141},{\"end\":69491,\"start\":69489},{\"end\":69500,\"start\":69496},{\"end\":69516,\"start\":69512},{\"end\":69526,\"start\":69524},{\"end\":69538,\"start\":69533},{\"end\":69546,\"start\":69544},{\"end\":69860,\"start\":69857},{\"end\":69874,\"start\":69871},{\"end\":69904,\"start\":69884},{\"end\":69917,\"start\":69913},{\"end\":69921,\"start\":69919},{\"end\":70246,\"start\":70244},{\"end\":70260,\"start\":70255},{\"end\":70278,\"start\":70271},{\"end\":70562,\"start\":70560},{\"end\":70580,\"start\":70573},{\"end\":70872,\"start\":70869},{\"end\":70887,\"start\":70883},{\"end\":71244,\"start\":71236},{\"end\":71261,\"start\":71254},{\"end\":71276,\"start\":71269},{\"end\":71577,\"start\":71572},{\"end\":71595,\"start\":71587},{\"end\":71927,\"start\":71915},{\"end\":71942,\"start\":71936},{\"end\":71958,\"start\":71952},{\"end\":71972,\"start\":71960},{\"end\":72349,\"start\":72337},{\"end\":72366,\"start\":72359},{\"end\":72380,\"start\":72368},{\"end\":72735,\"start\":72723},{\"end\":72753,\"start\":72746},{\"end\":72766,\"start\":72763},{\"end\":72780,\"start\":72768},{\"end\":73139,\"start\":73127},{\"end\":73158,\"start\":73150},{\"end\":73172,\"start\":73167},{\"end\":73187,\"start\":73181},{\"end\":73195,\"start\":73189},{\"end\":73570,\"start\":73548},{\"end\":73578,\"start\":73576},{\"end\":73593,\"start\":73591},{\"end\":73601,\"start\":73595},{\"end\":74361,\"start\":74347},{\"end\":74381,\"start\":74376},{\"end\":74398,\"start\":74393},{\"end\":74759,\"start\":74751},{\"end\":74778,\"start\":74771},{\"end\":75070,\"start\":75064},{\"end\":75081,\"start\":75077},{\"end\":75097,\"start\":75091},{\"end\":75117,\"start\":75108},{\"end\":75127,\"start\":75119},{\"end\":75454,\"start\":75446},{\"end\":75466,\"start\":75462},{\"end\":75480,\"start\":75474},{\"end\":75493,\"start\":75490},{\"end\":75810,\"start\":75806},{\"end\":75821,\"start\":75816},{\"end\":75834,\"start\":75825},{\"end\":76122,\"start\":76119},{\"end\":76135,\"start\":76132},{\"end\":76150,\"start\":76145},{\"end\":76170,\"start\":76162},{\"end\":76185,\"start\":76178},{\"end\":76190,\"start\":76187},{\"end\":76536,\"start\":76533},{\"end\":76549,\"start\":76545},{\"end\":76561,\"start\":76558},{\"end\":76572,\"start\":76569},{\"end\":76896,\"start\":76894},{\"end\":76909,\"start\":76906},{\"end\":77184,\"start\":77182},{\"end\":77195,\"start\":77191},{\"end\":77208,\"start\":77205},{\"end\":77490,\"start\":77485},{\"end\":77508,\"start\":77502},{\"end\":77521,\"start\":77515},{\"end\":77532,\"start\":77527},{\"end\":77854,\"start\":77850},{\"end\":77869,\"start\":77864},{\"end\":77883,\"start\":77880},{\"end\":77898,\"start\":77894}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1145/2897824.2925893\",\"id\":\"b0\",\"matched_paper_id\":14614315},\"end\":62928,\"start\":62677},{\"attributes\":{\"doi\":\"10.1145/2485895.2485905\",\"id\":\"b1\",\"matched_paper_id\":7621556},\"end\":63273,\"start\":62930},{\"attributes\":{\"doi\":\"arXiv:1803.01271\",\"id\":\"b2\"},\"end\":63662,\"start\":63275},{\"attributes\":{\"doi\":\"arXiv:1512.03012\",\"id\":\"b3\"},\"end\":64163,\"start\":63664},{\"attributes\":{\"doi\":\"10.1111/j.1467-8659.2011.01889.x\",\"id\":\"b4\",\"matched_paper_id\":15622258},\"end\":64595,\"start\":64165},{\"attributes\":{\"doi\":\"10.1145/636886.636889\",\"id\":\"b5\",\"matched_paper_id\":14104669},\"end\":64962,\"start\":64597},{\"attributes\":{\"doi\":\"10.1145/3272127.3275048\",\"id\":\"b6\"},\"end\":65386,\"start\":64964},{\"attributes\":{\"doi\":\"arXiv:1511.07289\",\"id\":\"b7\"},\"end\":65773,\"start\":65388},{\"attributes\":{\"doi\":\"10.1109/ICCV.2015.494\",\"id\":\"b8\",\"matched_paper_id\":128024},\"end\":66132,\"start\":65775},{\"attributes\":{\"doi\":\"arXiv:1810.02363\",\"id\":\"b9\"},\"end\":66421,\"start\":66134},{\"attributes\":{\"doi\":\"10.1145/1833349.1778865\",\"id\":\"b10\"},\"end\":66952,\"start\":66423},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":7261259},\"end\":67279,\"start\":66954},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":18149328},\"end\":67628,\"start\":67281},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":572361},\"end\":67981,\"start\":67630},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":1751234},\"end\":68260,\"start\":67983},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":376779},\"end\":68674,\"start\":68262},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":54103335},\"end\":69016,\"start\":68676},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":13955492},\"end\":69402,\"start\":69018},{\"attributes\":{\"id\":\"b18\"},\"end\":69805,\"start\":69404},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":14824646},\"end\":70174,\"start\":69807},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":7343102},\"end\":70499,\"start\":70176},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":7485475},\"end\":70770,\"start\":70501},{\"attributes\":{\"id\":\"b22\"},\"end\":71158,\"start\":70772},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":6043787},\"end\":71524,\"start\":71160},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":3414494},\"end\":71816,\"start\":71526},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":4714486},\"end\":72260,\"start\":71818},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":5492891},\"end\":72632,\"start\":72262},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":3332126},\"end\":73058,\"start\":72634},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":52937281},\"end\":73462,\"start\":73060},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":1745976},\"end\":74263,\"start\":73464},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":2364333},\"end\":74681,\"start\":74265},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":1907303},\"end\":75007,\"start\":74683},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":13555112},\"end\":75374,\"start\":75009},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":4560101},\"end\":75748,\"start\":75376},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":6450218},\"end\":76048,\"start\":75750},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":15065862},\"end\":76454,\"start\":76050},{\"attributes\":{\"id\":\"b36\"},\"end\":76820,\"start\":76456},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":2266973},\"end\":77127,\"start\":76822},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":21747305},\"end\":77420,\"start\":77129},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":51692385},\"end\":77775,\"start\":77422},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":6509146},\"end\":78151,\"start\":77777}]", "bib_title": "[{\"end\":62698,\"start\":62677},{\"end\":62988,\"start\":62930},{\"end\":64221,\"start\":64165},{\"end\":64675,\"start\":64597},{\"end\":65049,\"start\":64964},{\"end\":65818,\"start\":65775},{\"end\":67008,\"start\":66954},{\"end\":67349,\"start\":67281},{\"end\":67664,\"start\":67630},{\"end\":68004,\"start\":67983},{\"end\":68324,\"start\":68262},{\"end\":68743,\"start\":68676},{\"end\":69101,\"start\":69018},{\"end\":69849,\"start\":69807},{\"end\":70234,\"start\":70176},{\"end\":70550,\"start\":70501},{\"end\":70858,\"start\":70772},{\"end\":71229,\"start\":71160},{\"end\":71561,\"start\":71526},{\"end\":71906,\"start\":71818},{\"end\":72330,\"start\":72262},{\"end\":72716,\"start\":72634},{\"end\":73118,\"start\":73060},{\"end\":73543,\"start\":73464},{\"end\":74341,\"start\":74265},{\"end\":74744,\"start\":74683},{\"end\":75058,\"start\":75009},{\"end\":75438,\"start\":75376},{\"end\":75800,\"start\":75750},{\"end\":76109,\"start\":76050},{\"end\":76523,\"start\":76456},{\"end\":76885,\"start\":76822},{\"end\":77173,\"start\":77129},{\"end\":77480,\"start\":77422},{\"end\":77840,\"start\":77777}]", "bib_author": "[{\"end\":62717,\"start\":62700},{\"end\":62739,\"start\":62717},{\"end\":63011,\"start\":62990},{\"end\":63024,\"start\":63011},{\"end\":63041,\"start\":63024},{\"end\":63383,\"start\":63370},{\"end\":63396,\"start\":63383},{\"end\":63412,\"start\":63396},{\"end\":63673,\"start\":63664},{\"end\":63687,\"start\":63673},{\"end\":63708,\"start\":63687},{\"end\":63720,\"start\":63708},{\"end\":63737,\"start\":63720},{\"end\":63749,\"start\":63737},{\"end\":63760,\"start\":63749},{\"end\":63778,\"start\":63760},{\"end\":63792,\"start\":63778},{\"end\":63802,\"start\":63792},{\"end\":63806,\"start\":63802},{\"end\":64240,\"start\":64223},{\"end\":64254,\"start\":64240},{\"end\":64271,\"start\":64254},{\"end\":64282,\"start\":64271},{\"end\":64691,\"start\":64677},{\"end\":64702,\"start\":64691},{\"end\":64718,\"start\":64702},{\"end\":65068,\"start\":65051},{\"end\":65079,\"start\":65068},{\"end\":65088,\"start\":65079},{\"end\":65099,\"start\":65088},{\"end\":65110,\"start\":65099},{\"end\":65484,\"start\":65464},{\"end\":65504,\"start\":65484},{\"end\":65521,\"start\":65504},{\"end\":65842,\"start\":65820},{\"end\":65857,\"start\":65842},{\"end\":65871,\"start\":65857},{\"end\":65887,\"start\":65871},{\"end\":66199,\"start\":66190},{\"end\":66221,\"start\":66199},{\"end\":66226,\"start\":66221},{\"end\":66438,\"start\":66423},{\"end\":66457,\"start\":66438},{\"end\":66469,\"start\":66457},{\"end\":66481,\"start\":66469},{\"end\":66493,\"start\":66481},{\"end\":66506,\"start\":66493},{\"end\":66516,\"start\":66506},{\"end\":66527,\"start\":66516},{\"end\":66539,\"start\":66527},{\"end\":66558,\"start\":66539},{\"end\":67025,\"start\":67010},{\"end\":67038,\"start\":67025},{\"end\":67049,\"start\":67038},{\"end\":67366,\"start\":67351},{\"end\":67377,\"start\":67366},{\"end\":67390,\"start\":67377},{\"end\":67676,\"start\":67666},{\"end\":67694,\"start\":67676},{\"end\":67702,\"start\":67694},{\"end\":67712,\"start\":67702},{\"end\":67731,\"start\":67712},{\"end\":67739,\"start\":67731},{\"end\":68020,\"start\":68006},{\"end\":68037,\"start\":68020},{\"end\":68053,\"start\":68037},{\"end\":68064,\"start\":68053},{\"end\":68337,\"start\":68326},{\"end\":68352,\"start\":68337},{\"end\":68362,\"start\":68352},{\"end\":68381,\"start\":68362},{\"end\":68398,\"start\":68381},{\"end\":68407,\"start\":68398},{\"end\":68758,\"start\":68745},{\"end\":68771,\"start\":68758},{\"end\":68782,\"start\":68771},{\"end\":69129,\"start\":69103},{\"end\":69141,\"start\":69129},{\"end\":69146,\"start\":69141},{\"end\":69493,\"start\":69484},{\"end\":69502,\"start\":69493},{\"end\":69518,\"start\":69502},{\"end\":69528,\"start\":69518},{\"end\":69540,\"start\":69528},{\"end\":69548,\"start\":69540},{\"end\":69862,\"start\":69851},{\"end\":69876,\"start\":69862},{\"end\":69906,\"start\":69876},{\"end\":69919,\"start\":69906},{\"end\":69923,\"start\":69919},{\"end\":70248,\"start\":70236},{\"end\":70262,\"start\":70248},{\"end\":70280,\"start\":70262},{\"end\":70564,\"start\":70552},{\"end\":70582,\"start\":70564},{\"end\":70874,\"start\":70860},{\"end\":70889,\"start\":70874},{\"end\":71246,\"start\":71231},{\"end\":71263,\"start\":71246},{\"end\":71278,\"start\":71263},{\"end\":71579,\"start\":71563},{\"end\":71597,\"start\":71579},{\"end\":71929,\"start\":71908},{\"end\":71944,\"start\":71929},{\"end\":71960,\"start\":71944},{\"end\":71974,\"start\":71960},{\"end\":72351,\"start\":72332},{\"end\":72368,\"start\":72351},{\"end\":72382,\"start\":72368},{\"end\":72737,\"start\":72718},{\"end\":72755,\"start\":72737},{\"end\":72768,\"start\":72755},{\"end\":72782,\"start\":72768},{\"end\":73141,\"start\":73120},{\"end\":73160,\"start\":73141},{\"end\":73174,\"start\":73160},{\"end\":73189,\"start\":73174},{\"end\":73197,\"start\":73189},{\"end\":73572,\"start\":73545},{\"end\":73580,\"start\":73572},{\"end\":73595,\"start\":73580},{\"end\":73603,\"start\":73595},{\"end\":74363,\"start\":74343},{\"end\":74383,\"start\":74363},{\"end\":74400,\"start\":74383},{\"end\":74761,\"start\":74746},{\"end\":74780,\"start\":74761},{\"end\":75072,\"start\":75060},{\"end\":75083,\"start\":75072},{\"end\":75099,\"start\":75083},{\"end\":75119,\"start\":75099},{\"end\":75129,\"start\":75119},{\"end\":75456,\"start\":75440},{\"end\":75468,\"start\":75456},{\"end\":75482,\"start\":75468},{\"end\":75495,\"start\":75482},{\"end\":75812,\"start\":75802},{\"end\":75823,\"start\":75812},{\"end\":75836,\"start\":75823},{\"end\":76124,\"start\":76111},{\"end\":76137,\"start\":76124},{\"end\":76152,\"start\":76137},{\"end\":76172,\"start\":76152},{\"end\":76187,\"start\":76172},{\"end\":76192,\"start\":76187},{\"end\":76538,\"start\":76525},{\"end\":76551,\"start\":76538},{\"end\":76563,\"start\":76551},{\"end\":76574,\"start\":76563},{\"end\":76898,\"start\":76887},{\"end\":76911,\"start\":76898},{\"end\":77186,\"start\":77175},{\"end\":77197,\"start\":77186},{\"end\":77210,\"start\":77197},{\"end\":77492,\"start\":77482},{\"end\":77510,\"start\":77492},{\"end\":77523,\"start\":77510},{\"end\":77534,\"start\":77523},{\"end\":77856,\"start\":77842},{\"end\":77871,\"start\":77856},{\"end\":77885,\"start\":77871},{\"end\":77900,\"start\":77885}]", "bib_venue": "[{\"end\":63092,\"start\":63082},{\"end\":65946,\"start\":65931},{\"end\":68096,\"start\":68084},{\"end\":70312,\"start\":70300},{\"end\":70610,\"start\":70600},{\"end\":73658,\"start\":73643},{\"end\":75553,\"start\":75544},{\"end\":62780,\"start\":62762},{\"end\":63080,\"start\":63064},{\"end\":63368,\"start\":63275},{\"end\":63871,\"start\":63822},{\"end\":64337,\"start\":64314},{\"end\":64757,\"start\":64739},{\"end\":65151,\"start\":65133},{\"end\":65462,\"start\":65388},{\"end\":65929,\"start\":65908},{\"end\":66188,\"start\":66134},{\"end\":66652,\"start\":66597},{\"end\":67090,\"start\":67072},{\"end\":67431,\"start\":67413},{\"end\":67781,\"start\":67763},{\"end\":68082,\"start\":68064},{\"end\":68446,\"start\":68428},{\"end\":68823,\"start\":68805},{\"end\":69187,\"start\":69169},{\"end\":69482,\"start\":69404},{\"end\":69964,\"start\":69946},{\"end\":70298,\"start\":70280},{\"end\":70598,\"start\":70582},{\"end\":70942,\"start\":70924},{\"end\":71319,\"start\":71301},{\"end\":71656,\"start\":71638},{\"end\":72015,\"start\":71997},{\"end\":72423,\"start\":72405},{\"end\":72823,\"start\":72805},{\"end\":73238,\"start\":73220},{\"end\":73641,\"start\":73620},{\"end\":74446,\"start\":74423},{\"end\":74821,\"start\":74803},{\"end\":75170,\"start\":75152},{\"end\":75542,\"start\":75518},{\"end\":75868,\"start\":75859},{\"end\":76233,\"start\":76215},{\"end\":76615,\"start\":76597},{\"end\":76952,\"start\":76934},{\"end\":77251,\"start\":77233},{\"end\":77575,\"start\":77557},{\"end\":77941,\"start\":77923}]"}}}, "year": 2023, "month": 12, "day": 17}