{"id": 247799588, "updated": "2023-11-11 01:02:05.889", "metadata": {"title": "SLNET: A Redistributable Corpus of 3rd-party Simulink Models", "authors": "[{\"first\":\"Sohil\",\"last\":\"Shrestha\",\"middle\":[\"Lal\"]},{\"first\":\"Shafiul\",\"last\":\"Chowdhury\",\"middle\":[\"Azam\"]},{\"first\":\"Christoph\",\"last\":\"Csallner\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "MATLAB/Simulink is widely used for model-based design. Engineers create Simulink models and compile them to embedded code, often to control safety-critical cyber-physical systems in automotive, aerospace, and healthcare applications. Despite Simulink's importance, there are few large-scale empirical Simulink studies, perhaps because there is no large readily available corpus of third-party open-source Simulink models. To enable empirical Simulink studies, this paper introduces SLNET, the largest corpus of freely available third-party Simulink models. SLNET has several advantages over earlier collections. Specifically, SLNET is 8 times larger than the largest previous corpus of Simulink models, includes fine-grained metadata, is constructed automatically, is self-contained, and allows redistribution. SLNET is available under permissive open-source licenses and contains all of its collection and analysis tools.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/msr/ShresthaCC22", "doi": "10.1145/3524842.3528001"}}, "content": {"source": {"pdf_hash": "ca12cfef349b8bf5c3879b9f5a9a08073c86266b", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2203.17112v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "6aee5dd723c5d10f45c8779f9f631c76d3017ef7", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/ca12cfef349b8bf5c3879b9f5a9a08073c86266b.txt", "contents": "\nSLNET: A Redistributable Corpus of 3rd-party Simulink Models\n\n\nSohil Lal Shrestha \nShafiul Azam Chowdhury \nChristoph Csallner \n\nComputer Science & Eng. Dep\nComputer Science & Eng. Dep. University of Texas at Arlington Arlington, Texas\nUniversity of Texas\nat Arlington ArlingtonTexasUSA, USA\n\n\nComputer Science & Eng. Dep. University of Texas at Arlington Arlington, Texas\nUSA\n\nSLNET: A Redistributable Corpus of 3rd-party Simulink Models\n10.1145/3524842.3528001Simulinkmining software repositoriesopen-source\nMATLAB/Simulink is widely used for model-based design. Engineers create Simulink models and compile them to embedded code, often to control safety-critical cyber-physical systems in automotive, aerospace, and healthcare applications. Despite Simulink's importance, there are few large-scale empirical Simulink studies, perhaps because there is no large readily available corpus of thirdparty open-source Simulink models. To enable empirical Simulink studies, this paper introduces SLNET, the largest corpus of freely available third-party Simulink models. SLNET has several advantages over earlier collections. Specifically, SLNET is 8 times larger than the largest previous corpus of Simulink models, includes finegrained metadata, is constructed automatically, is self-contained, and allows redistribution. SLNET is available under permissive open-source licenses and contains its collection and analysis tools.CCS CONCEPTS\u2022 Software and its engineering \u2192 Software libraries and repositories; Model-driven software engineering; \u2022 Computer systems organization \u2192 Embedded and cyber-physical systems.\n\nINTRODUCTION\n\nCurrently there is no collection of Simulink models that is commonly used in empirical studies. Though there have been previous model collections, they lack fine-grained meta-information, are not self-contained, and are not redistributable due to restrictive or missing licenses-making them hard or impossible to use for most empirical researchers. Given the lack of such a collection, the few existing empirical studies of Simulink models have been limited to proprietary models or a small number of public models [9,41,42].\n\nDeepening our understanding of Simulink models and modeling practices is important, as Simulink is a de-facto standard tool Permission to make digital or hard copies of part or all of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for third-party components of this work must be honored. For all other uses, contact the owner/author(s). in several safety-critical industries such as automotive, aerospace, healthcare, and industrial automation-for system modeling and analysis, compiling models to code, and deploying code to embedded hardware [44,46]. Having a large corpus of third-party Simulink models may make it easier for engineers and researchers to produce, reproduce, and validate empirical results about Simulink models, modeling practices, and tools that operate on such models.\n\nThe most closely related previous work has studied an initial collection of 391 third-party Simulink models [9] and later extended it to a curated corpus (\"SLC0\") of some 1k third-party Simulink models [11]. Boll et al. [4] collected an updated version of SLC0 and assessed the corpus's suitability for empirical research. While pioneering larger studies and validating that models from such a corpus can be similar to industrial models, these collections consisted of a list of URLs to non-permanent resources [9] and contained models with unclear license information [11]. These collections were largely manual, which lead to inconsistencies (empty projects, duplicate projects, and missing metadata), relatively modest collection size, and may yield unintended human errors and bias.\n\nTo address these limitations, SLNET automates corpus construction and analysis, including data acquisition, cleaning (except for the rarely required manual review of a new license type), metric computation, and packaging. SLNET thereby automatically mines and analyses Simulink models from the two most popular repositories for sharing Simulink models, yielding a collection of thousands of models that is fully self-contained and allows redistribution.\n\nTo allow fine-grained selection of Simulink models and projects, SLNET computes several project-level and model-level metrics [4] and exposes them in a SQL database. SLNET similarly identifies and labels libraries and models that are test harnesses [31]. To summarize, this paper makes the following major contributions.\n\n\u2022 SLNET is 8 times larger than the prior largest known corpus of third-party Simulink models. SLNET also adds finegrained metrics, being self-contained and redistributable. \u2022 SLNET [38] and its tools [36,37] are available under permissive open-source licenses (CC BY and BSD 3-clause).\n\n\nBACKGROUND ON SIMULINK\n\nSimulink [23] is a widely used commercial tool-chain for modelbased design [44,46] 1 . Engineers typically design a cyber-physical system (CPS) model in Simulink's graphical modeling environment.\n\nA Simulink model such as Figure 1 is a block diagram, where each block represents equations or modeling components. Depending on the block type, each block can accept input (via input ports), perform some operation on its inputs, and produce output (via output ports), which then can optionally be forwarded to other blocks via explicit or implicit connection lines (aka signal lines). Simulink users can add blocks from various built-in libraries and toolboxes [25], and can also define custom blocks in \"native\" code (e.g., in C) using the S-function interface. To deal with model size, users can create hierarchical models, by (recursively) grouping blocks in (a) a Subsystem or (b) in a separate model via Model Reference. Simulink does not permit a cyclic model hierarchy, but there may be block connection (aka data dependence) cycles, including algebraic loops 2 .\n\nAs a first step, compiling translates the model into a toolchaininternal representation. When simulating the compiled model, the toolchain computes the output of each block at successive time steps over a specified time range using pre-configured numerical solvers. Fixed-step solvers solve the model at fixed time intervals whereas variable-step solvers automatically adjust the time intervals at which the model is solved. Simulink may reject a model if it cannot numerically solve an algebraic loop. Simulink offers different simulation modes, i.e., Normal mode \"only\" simulates blocks, Accelerator speeds up simulation by emitting native code, and Rapid Accelerator produces a standalone executable 3 .\n\n\nSLNET DESIGN & CONSTRUCTION\n\nSLNET is not a superset of earlier Simulink corpora [4,11] as earlier corpora were neither self-contained nor redistributable. Figure 2 gives an overview of SLNET's construction. We built SLNET from models shared in GitHub [16] and MATLAB Central [24]. Due to time limitations we do not collect Simulink models from smaller repositories such as GitLab [17] and SourceForge [40]. Before removing projects that are empty, duplicate, or have an unclear license, a quick search for \"Simulink\" yields some 60 GitLab and some 70 SourceForge projects. While GitHub offers commit-level version control, MATLAB Central \"only\" serves project releases. To limit SLNET's size and due to the different versioning (git commits vs. project releases), in February 2020 we \"only\" collected Simulink project snapshots (i.e., all current project files plus project metadata).\n\nGitHub provides a REST API to discover projects and extract them with their metadata. SLNET-Miner queries the GitHub API (via PyGithub [43]) with the keyword \"Simulink\". Unlike previous work [9,11], we used keyword search and not file extension search, as file extension search is typically intended to search within a given GitHub repository and using file extension search in GitHub's search page produced many false positives.\n\nThe GitHub API expose 23 types of project-level information [15], of which SLNET retains 20. The other 3 are redundant (full project name) or API-internal (API query relevance score and node id). From the API we also obtain each project's topics (user-created labels and tags). From the downloaded project files, we extracted the list of Simulink model files plus the project's license.\n\nAs MATLAB Central \"only\" offers an RSS feed [22] for its file exchange platform, we filter the search result feed by Simulink models and then parse the feed to collect each project's download URL plus 14 other types of project metadata. Since from the RSS feed we could not construct the download URL for all projects, we extracted 2,941 of the 3,110 available projects.\n\n\nData Cleaning & Storage: ZIP + SQLite\n\nWe remove projects without Simulink models (i.e., file extensions slx or mdl) and projects we know to contain synthetic models (i.e., model generators [9,10]). We heuristically search for other model generators (via terms \"automat\", \"random\", \"fuzz\", and \"generate\") in project titles, project descriptions, and project tags, which yielded 530 projects (e.g., on fuzzy logic). As we did not find evidence that these projects generate models we kept them in SLNET.\n\nWe then remove projects without a license or whose license does not allow redistribution. GitHub has a structured way for authors to set a license, which GitHub converts to a file (and exposes via an API). We manually reviewed the remaining 50 projects' licenses (where GitHub did not understand the author's license or for MATLAB Central projects without a BSD license).\n\nWe heuristically remove potentially duplicate projects. We consider project A a duplicate of B if (1) A and B contain the same number of Simulink model files and (2) there is a bijective mapping  The MATLAB Central portion only differs in its _Projects table [38].\n\nbetween models in A and B based on our Section 3.2 model metrics (excluding compile time). If A and B are from the same data source (GitHub or MATLAB Central), we keep the first-created one in SLNET. Otherwise, we keep the one from GitHub, as it offers more fine-grained meta-data. Finally, we remove dummy projects (projects whose Simulink models all have zero blocks). Table 1 summarizes data cleaning. After removing model generators we downloaded 4,225 projects with at least one Simulink model, of which 2,978 had a license, of which 2,959 allowed redistribution. Removing 112 potentially duplicate plus 10 dummy projects yielded 2,837 projects and their 9,117 Simulink models in SLNET.\n\nSLNET is on Zenodo (a second archive contains the 112 duplicate projects) [38]. Each project has a snapshot of its files in a ZIP archive in either the GitHub or MATLAB Central directory. Each project is named ID.zip, where ID is an identifier defined by GitHub or MATLAB Central. SLNET includes the Figure 3 SQLite 4 database. It contains project-level information (license type, etc.) from the source repositories and the model metrics our tools extracted. Users can thus select models and projects from SLNET via SQL queries. To get an insight into the projects' domain and popularity we first searched the user-generated project tags (i.e., GitHub \"topics\" and MATLAB Central \"categories\") for common domains (i.e., the Simulink project domains identified by Boll et al. [4]), yielding Electronics (983), Automotive (64), Communications (61), Robotics (52), Energy (48), Aerospace (47), Biotech (20), and Medicine (2). Table 2 shows data often used as proxies for project popularity or engagement (e.g., people who have star-ed or forked a GitHub project or provided a 1-5 star rating for a MATLAB Central project). For example, a SLNET GitHub project has on average 2.8 forks.\n\n\nProject & Model Metrics\n\nTo extract commonly used model metrics (such as number of blocks, connections, subsystems, and linked blocks 5 ) we implemented the SLNET-Metrics tool [36] on top of Simulink's APIs. While our Simulink installation and toolbox configuration [35] cannot compile a significant portion of SLNET models (mostly due to missing toolbox licenses), these APIs still compute metrics for these non-compiling models, except for three metrics (algebraic loops, cyclomatic complexity, and compile time).\n\nSLNET-Metrics failed to compute metrics for 88/9,117 models (21 from GitHub, 67 from MATLAB Central). Most of these 88 were due to Simulink version issues (missing Simulink toolboxes, model name conflicts with a keyword or toolbox file name) and bugs introduced by manually-edited model files. SLNET does not include metrics for these 88 models and thus also ignores them for the above duplicate-via-bijection removal.\n\nSLNET-Metrics collects each model's hierarchical depth, solver type, simulation mode, target hardware, and use of S-functions and model references. While SLNET models contain elements from the state-machine toolbox Stateflow, Stateflow is out of scope and our metrics do not count the Stateflow-contents of a Simulink block.\n\nUnlike SLC0, SLNET-Metrics does not count nested blocks imported from libraries or their connections (aka \"masked subsystems\"). This mirrors procedural code metrics, which also do not  1,639  541  878 1,304  190,321  414,241  188,285  395,725  860  762 1,501 103  2 14  MATLAB Cl 6,251 3,636 3,893 5,566  838,956 3,197,221  915,975 3,084,605 1,757 4,493 5,984 186  2 76  Total  7,890 4,177 4,771 6,870 1,029,277 3,611,462 1,104,260 3,480,330 2,617 5,255 7,485 289  4 90  Table 3: SLNET's model metrics after removing library & test harness models; M = models; Mc = models we could readily compile; Mh = hierarchical models (readily compilable and otherwise); C = non-hidden connections; t0 = via SLC0's metric tool; Var = variable; Nor = normal; Ext = external; PIL = processor in the loop; Ac = accelerator. For 18 models the API did not indicate simulation mode or solver type. The remaining 4 models are configured for Rapid Accelerator simulation mode.\n\ncount LOC a program imports from a library. As SLC0's counting of such imported blocks approximates the model's overall conceptual complexity [33], Table 3 also includes these counts. As an example, the Figure 1 model imports blocks from the Simscape toolbox, yielding a SLC0-style block count of 907 with 919 connections.\n\nThe Simulink API labels only 9 SLNET models as a test harness, likely because many open-source projects do not have the required \"Simulink Test\" license to develop such tests. Beyond this official classification SLNET contains likely \"work-around\" test harnesses. The SLC0 metrics tool heuristically matches model and folder names with \"test\" and \"harness\" and SLNET labels such models separately.\n\nWe performed sanity checks on the model metrics other papers reported about industrial models (block count, etc.). We also randomly sampled from the top 100 largest models in SLNET. Based on the sampled models' documentation we are confident that these were real human-created (non-synthetic) models.\n\n\nPOTENTIAL RESEARCH DIRECTIONS\n\nSince most industrial models are proprietary SLNET is unlikely to reflect their distribution. Instead, the goal is to provide the largest possible redistributable self-contained corpus of non-synthetic models. Different research projects will require different SLNET subsets (e.g., many small models for training deep-learning classifiers vs. large models to evaluate a technique's scalability), which the SQL metadata database facilitates. Having more models is better, especially in deep learning, but also when trying to understand the breadth of modelling practices, or when looking for edge cases (e.g., to test model analysis tools). Following are example directions.\n\nWhile there has been significant interest in other software engineering areas [6,21,45], applying machine learning is relatively under-explored in model driven engineering [1,8]. To work well, many machine learning and deep learning algorithms require large training sets. SLNET with its many models and rich metadata is thus well-suited. For example, a SLNET subset has been used to train a deep learning model for random Simulink model generation, to find bugs in the Simulink toolchain [39]. Due to their smaller size, this would have not been possible with the earlier corpora.\n\nDue to the lack of easily available open-source models that fit certain characteristics, recent work reverted to evaluating tools on synthetic models [10]. SLNET offers a complimentary (and often preferred) evaluation option with human-authored models.\n\nRecent work including in clone detection, refactoring, model slicing, and model smells has relied on evaluations with few proprietary Simulink models [5,13,14,29,32]. For example, Deissenboeck et al. [13] evaluated their clone detection approach on a single proprietary Simulink model with 20k blocks. Complementing such evaluations with a variety of open-source models from SLNET could make such studies more general and easier to replicate.\n\nUnderstanding modeling practices would enable researchers to tune their tools to how engineers use Simulink in various settings. For example, SLforge guides its random model generation by how often blocks appear in 391 open-source models [9]. The larger size of SLNET could thus, e.g., yield useful insights for tool design.\n\nThere may also be interesting correlations between metrics, maybe connecting model metrics to project metrics (e.g., model size metrics with project engagement). More generally, SLNET could contribute to a deeper understanding of model modularity, comprehension, quality, and maintainability [3,12,28,34].\n\nWhile SLNET is unlikely to exactly represent closed-source development, the precise shape of this relation is an open question. For example, for the related domain of Object Constraint Language (OCL) expressions [7], Mengerink et al. found the distribution of expression complexity mined from GitHub projects reflects the distribution in closed-source projects, so open-source projects can be used as a proxy for industrial projects [26,27].\n\n\nTHREATS TO VALIDITY\n\nDue to its search heuristics SLNET-Miner may miss Simulink models (e.g., by missing some of the non-documented RSS feed URLs). Furthermore, since SLNET contains only redistributable projects, results may not be representative of all open source Simulink projects. On the flip side, while removing forks and duplicates, SLNET likely contains clones (from near-duplicate projects to adapted model portions), which can be an opportunity for clone-based research (and a challenge for others). Finally, SLNET-Metrics calls the Check API of Simulink R2019b. While this API has been available since Simulink R2017b, its behavior may change across releases and thus yield different metric values in future Simulink versions.\n\n\nCONCLUSIONS\n\nSLNET is the largest corpus of freely available third-party Simulink models. SLNET is 8 times larger than the largest previous Simulink corpus, includes fine-grained metadata, is constructed automatically, is self-contained, and allows redistribution.\n\n\nACKNOWLEDGMENTS\n\nChristoph Csallner has a potential research conflict of interest due to a financial interest with Microsoft and The Trade Desk. A management plan has been created to preserve objectivity in research in accordance with UTA policy. This material is based upon work supported by the National Science Foundation (NSF) under Grant No. 1911017 and a gift from MathWorks.\n\n\nMSR '22, May 23-24, 2022, Pittsburgh, PA, USA \u00a9 2022 Copyright held by the owner/author(s). ACM ISBN 978-1-4503-9303-4/22/05. https://doi.org/10.1145/3524842.3528001\n\nFigure 1 :\n1Sample SLNET Simulink model of a 1.5MW wind generation plant[30] with 18 blocks and 23 connections.\n\nFigure 2 :\n2Overview: SLNET-Miner collects files and data, removes empty and duplicated projects or those without appropriate license. SLNET-Metrics extracts model metrics.\n\nFigure 3 :\n3SLNET database schema (GitHub portion).\n\nTable 1 :\n1Data cleaning: Real = has 1+ models (likely nonsynthetic); License = has a license; SLNET+D = license allows redistribution; SLNET = has a model with 1+ blocks after removing potential duplicate projects; Model counts here include 1,130 library and 9 test harness models.Projects \nModels \nReal License SLNET+D SLNET SLNET \nGitHub \n1,284 \n232 \n231 \n225 \n2,088 \nMATLAB Cl 2,941 \n2,746 \n2,728 \n2,612 \n7,029 \nTotal \n4,225 \n2,978 \n2,959 \n2,837 \n9,117 \n\n\n\nTable 2 :\n2SLNET's project engagement distributions are longtailed as in other studies of open-source projects[2,[18][19][20].Metadata \nMin Max Avg Med. \nSD \n\nGitHub \n\nStargazers \n0 \n128 \n3.5 \n0 \n12.1 \nForks \n0 \n122 \n2.8 \n0 \n10.7 \nOpen Issues \n0 \n82 \n1.2 \n0 \n6.5 \n\nMATLAB Cl \n\nComments \n0 \n218 \n3.5 \n1 \n12.3 \nRatings \n0 \n108 \n2.9 \n1 \n6.8 \nAvg. Rating \n0 \n5 \n2.5 \n3 \n2.2 \n\n\nSearching for \"Simulink\" jobs on LinkedIn in the US currently yields over 5k job postings: https://www.linkedin.com/jobs/search/?keywords=\"simulink\"&location=US\nhttps://www.mathworks.com/help/simulink/ug/algebraic-loops.html3 Simulink's embedded code generation workflow for deployment on target platforms is distinct from these simulation modes.\nSQLite is widely used, free, self-contained, server-less, zero-configuration, backwards compatible, and cross-platform: https://www.sqlite.org/index.html 5 https://www.mathworks.com/help/simulink/ug/creating-and-working-withlinked-blocks.html\n\nIntelligent Simulink Modeling Assistance Via Model Clones and Machine learning. Bhisma Adhikari, 237Bhisma Adhikari. 2021. Intelligent Simulink Modeling Assistance Via Model Clones and Machine learning. , 237 pages.\n\nTrends and behavior of developers in open collaborative software projects. Y Mohammad, Wang-Chien Allaho, Lee, 10.1109/BESC.2014.7059515Proc. International Conference on Behavioral, Economic, and Socio-Cultural Computing (BESC). International Conference on Behavioral, Economic, and Socio-Cultural Computing (BESC)IEEEMohammad Y. Allaho and Wang-Chien Lee. 2014. Trends and behavior of devel- opers in open collaborative software projects. In Proc. International Conference on Behavioral, Economic, and Socio-Cultural Computing (BESC). IEEE, 96-102. https://doi.org/10.1109/BESC.2014.7059515\n\nA set of metrics for characterizing simulink model comprehension. Erik Aceiro Antonio, Fabiano Ferrari, Sandra Cpf Glauco A De P Caurin, Fabbri, Journal of Computer Science and Technology. 14Erik Aceiro Antonio, Fabiano Ferrari, Glauco A de P Caurin, and Sandra CPF Fabbri. 2014. A set of metrics for characterizing simulink model comprehension. Journal of Computer Science and Technology 14, 02 (2014), 88-94.\n\nAlexander Boll, Florian Brokhausen, Tiago Amorim, Timo Kehrer, and Andreas Vogelsang. 2021. Characteristics, potentials, and limitations of open-source Simulink projects for empirical research. Software and Systems Modeling. Alexander Boll, Florian Brokhausen, Tiago Amorim, Timo Kehrer, and Andreas Vogelsang. 2021. Characteristics, potentials, and limitations of open-source Simulink projects for empirical research. Software and Systems Modeling (2021), 1-20.\n\nOn the Replicability of Experimental Tool Evaluations in Model-Based Development -Lessons Learnt from a Systematic Literature Review Focusing on MATLAB/Simulink. Alexander Boll, Timo Kehrer, 10.1007/978-3-030-58167-1_9Proc. 1st International Conference on Systems Modelling and Management (ICSMM). 1st International Conference on Systems Modelling and Management (ICSMM)SpringerAlexander Boll and Timo Kehrer. 2020. On the Replicability of Experimental Tool Evaluations in Model-Based Development -Lessons Learnt from a Systematic Literature Review Focusing on MATLAB/Simulink. In Proc. 1st International Conference on Systems Modelling and Management (ICSMM). Springer, 111-130. https://doi.org/10.1007/978-3-030-58167-1_9\n\nLearning from examples to improve code completion systems. Marcel Bruch, Martin Monperrus, Mira Mezini, 10.1145/1595696.1595728Proc. ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE). ACM SIGSOFT International Symposium on Foundations of Software Engineering (FSE)ACMMarcel Bruch, Martin Monperrus, and Mira Mezini. 2009. Learning from ex- amples to improve code completion systems. In Proc. ACM SIGSOFT Interna- tional Symposium on Foundations of Software Engineering (FSE). ACM, 213-222. https://doi.org/10.1145/1595696.1595728\n\nObject Constraint Language (OCL): A Definitive Guide. Jordi Cabot, Martin Gogolla, 10.1007/978-3-642-30982-3_3Proc. 12th International School on Formal Methods for the Design of Computer, Communication, and Software Systems. 12th International School on Formal Methods for the Design of Computer, Communication, and Software SystemsSpringerJordi Cabot and Martin Gogolla. 2012. Object Constraint Language (OCL): A Definitive Guide. In Proc. 12th International School on Formal Methods for the Design of Computer, Communication, and Software Systems. Springer, 58-90. https: //doi.org/10.1007/978-3-642-30982-3_3\n\nLearning-Guided Network Fuzzing for Testing Cyber-Physical System Defences. Yuqi Chen, Christopher M Poskitt, Jun Sun, Sridhar Adepu, Fan Zhang, 10.1109/ASE.2019.0009334th IEEE/ACM International Conference on Automated Software Engineering, ASE 2019. San Diego, CA, USAIEEEYuqi Chen, Christopher M. Poskitt, Jun Sun, Sridhar Adepu, and Fan Zhang. 2019. Learning-Guided Network Fuzzing for Testing Cyber-Physical System Defences. In 34th IEEE/ACM International Conference on Automated Software Engineering, ASE 2019, San Diego, CA, USA, November 11-15, 2019. IEEE, 962-973. https://doi.org/10.1109/ASE.2019.00093\n\nAutomatically finding bugs in a commercial cyber-physical system development tool chain with SLforge. Soumik Shafiul Azam Chowdhury, Sidharth Mohian, Siddhant Mehra, Taylor T Gawsane, Christoph Johnson, Csallner, Proc. 40th ACM/IEEE International Conference on Software Engineering (ICSE). 40th ACM/IEEE International Conference on Software Engineering (ICSE)ACMShafiul Azam Chowdhury, Soumik Mohian, Sidharth Mehra, Siddhant Gawsane, Taylor T. Johnson, and Christoph Csallner. 2018. Automatically finding bugs in a commercial cyber-physical system development tool chain with SLforge. In Proc. 40th ACM/IEEE International Conference on Software Engineering (ICSE). ACM, 981-992.\n\nSLEMI: Equivalence modulo input (EMI) based mutation of CPS models for finding compiler bugs in Simulink. Shafiul Azam Chowdhury, L Sohil, Taylor T Shrestha, Christoph Johnson, Csallner, Proc. 42nd ACM/IEEE International Conference on Software Engineering (ICSE). 42nd ACM/IEEE International Conference on Software Engineering (ICSE)ACMShafiul Azam Chowdhury, Sohil L Shrestha, Taylor T. Johnson, and Christoph Csallner. 2020. SLEMI: Equivalence modulo input (EMI) based mutation of CPS models for finding compiler bugs in Simulink. In Proc. 42nd ACM/IEEE International Conference on Software Engineering (ICSE). ACM, 335-346.\n\nA curated corpus of Simulink models for model-based empirical studies. Lina Sera Shafiul Azam Chowdhury, Soumik Varghese, Taylor T Mohian, Christoph Johnson, Csallner, Proc. 4th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS). 4th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS)ACMShafiul Azam Chowdhury, Lina Sera Varghese, Soumik Mohian, Taylor T. John- son, and Christoph Csallner. 2018. A curated corpus of Simulink models for model-based empirical studies. In Proc. 4th International Workshop on Software Engineering for Smart Cyber-Physical Systems (SEsCPS). ACM, 45-48.\n\nSimulink models are also software: modularity assessment. Yanja Dajsuren, G J Mark, Van Den, Alexander Brand, Serguei A Serebrenik, Roubtsov, 10.1145/2465478.2465482Proc. 9th International ACM SIGSOFT conference on Quality of Software Architectures (QoSA). 9th International ACM SIGSOFT conference on Quality of Software Architectures (QoSA)Yanja Dajsuren, Mark G. J. van den Brand, Alexander Serebrenik, and Serguei A. Roubtsov. 2013. Simulink models are also software: modularity assessment. In Proc. 9th International ACM SIGSOFT conference on Quality of Software Architec- tures (QoSA). 99-106. https://doi.org/10.1145/2465478.2465482\n\nClone detection in automotive model-based development. Florian Deissenboeck, Benjamin Hummel, Elmar J\u00fcrgens, Bernhard Sch\u00e4tz, Stefan Wagner, Jean-Francois Girard, Stefan Teuchert, 10.1145/1368088.136817230th International Conference on Software Engineering (ICSE 2008). Leipzig, GermanyFlorian Deissenboeck, Benjamin Hummel, Elmar J\u00fcrgens, Bernhard Sch\u00e4tz, Ste- fan Wagner, Jean-Francois Girard, and Stefan Teuchert. 2008. Clone detection in automotive model-based development. In 30th International Conference on Software Engineering (ICSE 2008), Leipzig, Germany, May 10-18, 2008. 603-612. https://doi.org/10.1145/1368088.1368172\n\nDetection and Handling of Model Smells for MATLAB/Simulink models. Thomas Gerlitz, Minh Quang, Christian Tran, Dziobek, Proc. International Workshop on Modelling in Automotive Software Engineering. International Workshop on Modelling in Automotive Software Engineering1487CEUR-WS.orgThomas Gerlitz, Quang Minh Tran, and Christian Dziobek. 2015. Detection and Handling of Model Smells for MATLAB/Simulink models. In Proc. International Workshop on Modelling in Automotive Software Engineering, Vol. 1487. CEUR- WS.org, 13-22.\n\nGitHub Inc. 2020. GitHub Developer. GitHub Inc. 2020. GitHub Developer. https://developer.github.com/v3/search/ February 2020.\n\n. Gitlab, GitLab. 2021. GitLab. https://gitlab.com Accessed May 2021.\n\nAn in-depth study of the promises and perils of mining GitHub. Eirini Kalliamvakou, Georgios Gousios, Kelly Blincoe, Leif Singer, Daniel M Germ\u00e1n, Daniela E Damian, 10.1007/s10664-015-9393-5Empirical Software Engineering. 21Eirini Kalliamvakou, Georgios Gousios, Kelly Blincoe, Leif Singer, Daniel M. Germ\u00e1n, and Daniela E. Damian. 2016. An in-depth study of the promises and perils of mining GitHub. Empirical Software Engineering 21, 5 (2016), 2035-2071. https://doi.org/10.1007/s10664-015-9393-5\n\nCoding Together at Scale: GitHub as a Collaborative Social Network. Antonio Lima, Luca Rossi, Mirco Musolesi, Proc. 8th International Conference on Weblogs and Social Media (ICWSM). 8th International Conference on Weblogs and Social Media (ICWSM)AAAIAntonio Lima, Luca Rossi, and Mirco Musolesi. 2014. Coding Together at Scale: GitHub as a Collaborative Social Network. In Proc. 8th International Conference on Weblogs and Social Media (ICWSM). AAAI.\n\nWhat Are the Dominant Projects in the GitHub Python Ecosystem. Wanwangying Ma, Lin Chen, Yuming Zhou, Baowen Xu, 10.1109/TSA.2016.23Proc. 3rd International Conference on Trustworthy Systems and their Applications (TSA). 3rd International Conference on Trustworthy Systems and their Applications (TSA)IEEEWanwangying Ma, Lin Chen, Yuming Zhou, and Baowen Xu. 2016. What Are the Dominant Projects in the GitHub Python Ecosystem?. In Proc. 3rd International Conference on Trustworthy Systems and their Applications (TSA). IEEE, 87-95. https://doi.org/10.1109/TSA.2016.23\n\nA systematic review of machine learning techniques for software fault prediction. Ruchika Malhotra, 10.1016/j.asoc.2014.11.023Appl. Soft Comput. 27Ruchika Malhotra. 2015. A systematic review of machine learning techniques for software fault prediction. Appl. Soft Comput. 27 (2015), 504-518. https: //doi.org/10.1016/j.asoc.2014.11.023\n\n. MathWorks Inc. 2021. MathWorks RSS. MathWorks Inc. 2021. MathWorks RSS. https://www.mathworks.com/company/ rss.html February 2020.\n\nMathWorks Inc. 2021. MATLAB & Simulink. MathWorks Inc. 2021. MATLAB & Simulink. https://www.mathworks.com/ products/simulink.html/ Accessed Jan 2022.\n\nMathWorks Inc. 2021. MATLAB Central. MathWorks Inc. 2021. MATLAB Central. https://www.mathworks.com/ matlabcentral/fileexchange/ Accessed Jan 2022.\n\nSimulink Block Libraries Documentation. Mathworks Inc, MathWorks Inc. 2021. Simulink Block Libraries Documentation. https://www. mathworks.com/help/simulink/block-libraries.html Accessed Jan 2022.\n\nA Case of Industrial vs. Open-source OCL: Not So Different After All. G M Josh, Jeroen Mengerink, Noten, R H Ramon, Schiffelers, G J Mark, Alexander Van Den Brand, Serebrenik, Proc. MODELS Posters. MODELS Posters2019CEUR-WS.orgJosh G. M. Mengerink, Jeroen Noten, Ramon R. H. Schiffelers, Mark G. J. van den Brand, and Alexander Serebrenik. 2017. A Case of Industrial vs. Open-source OCL: Not So Different After All. In Proc. MODELS Posters, Vol. 2019. CEUR-WS.org, 472-474.\n\nA data set of OCL expressions on GitHub. Jeroen Noten, Josh Mengerink, Alexander Serebrenik, 10.1109/MSR.2017.52Proc. 14th International Conference on Mining Software Repositories (MSR). 14th International Conference on Mining Software Repositories (MSR)IEEEJeroen Noten, Josh Mengerink, and Alexander Serebrenik. 2017. A data set of OCL expressions on GitHub. In Proc. 14th International Conference on Mining Software Repositories (MSR). IEEE, 531-534. https://doi.org/10.1109/MSR.2017.52\n\nTailoring complexity metrics for Simulink models. Marta Olszewska, Yanja Dajsuren, Harald Altinger, Alexander Serebrenik, Marina A Wald\u00e9n, Mark G J Van Den, Brand, Proc. 10th European Conference on Software Architecture Workshops. 5. 10th European Conference on Software Architecture Workshops. 5Marta Olszewska, Yanja Dajsuren, Harald Altinger, Alexander Serebrenik, Ma- rina A. Wald\u00e9n, and Mark G. J. van den Brand. 2016. Tailoring complexity metrics for Simulink models. In Proc. 10th European Conference on Software Architecture Workshops. 5.\n\nSoftware engineering practices and Simulink: bridging the gap. Vera Pantelic, Steven M Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, Alan Wassyng, 10.1007/s10009-017-0450-9STTT. 20Vera Pantelic, Steven M. Postma, Mark Lawford, Monika Jaskolka, Bennett Mackenzie, Alexandre Korobkine, Marc Bender, Jeff Ong, Gordon Marks, and Alan Wassyng. 2018. Software engineering practices and Simulink: bridging the gap. STTT 20, 1 (2018), 95-117. https://doi.org/10.1007/s10009-017-0450-9\n\n2019. 1.5MW Wind Generation Plant. Raju Gaddala Jaya, Gaddala Jaya Raju. 2019. 1.5MW Wind Generation Plant. https://www.mathworks. com/matlabcentral/fileexchange/73469-1-5mw-wind-generation-plant. Ac- cessed Jan 2022.\n\nSimEvo: A Toolset for Simulink Test Evolution & Maintenance. Eric J Rapos, James R Cordy, 10.1109/ICST.2018.0004911th IEEE International Conference on Software Testing, Verification and Validation, ICST 2018. V\u00e4ster\u00e5s, SwedenIEEE Computer SocietyEric J. Rapos and James R. Cordy. 2018. SimEvo: A Toolset for Simulink Test Evolution & Maintenance. In 11th IEEE International Conference on Software Testing, Verification and Validation, ICST 2018, V\u00e4ster\u00e5s, Sweden, April 9-13, 2018. IEEE Computer Society, 410-415. https://doi.org/10.1109/ICST.2018.00049\n\nSlicing MATLAB Simulink models. Robert Reicherdt, Sabine Glesner, 10.1109/ICSE.2012.622716134th International Conference on Software Engineering, ICSE 2012. Zurich, SwitzerlandRobert Reicherdt and Sabine Glesner. 2012. Slicing MATLAB Simulink models. In 34th International Conference on Software Engineering, ICSE 2012, June 2-9, 2012, Zurich, Switzerland. 551-561. https://doi.org/10.1109/ICSE.2012.6227161\n\nHow many blocks are in that model?. Guy Rouleau, Guy Rouleau. 2021. How many blocks are in that model? https://blogs. mathworks.com/simulink/2009/08/11/how-many-blocks-are-in-that-model Ac- cessed Jan 2022.\n\nComparing the Applicability of Complexity Measurements for Simulink Models during Integration Testing -An Industrial Case Study. Jan Schroeder, Christian Berger, Thomas Herpel, Miroslaw Staron, 10.1109/SAM.2015.12Proc. 2nd IEEE/ACM International Workshop on Software Architecture and Metrics (SAM). IEEE. 2nd IEEE/ACM International Workshop on Software Architecture and Metrics (SAM). IEEEJan Schroeder, Christian Berger, Thomas Herpel, and Miroslaw Staron. 2015. Comparing the Applicability of Complexity Measurements for Simulink Models during Integration Testing -An Industrial Case Study. In Proc. 2nd IEEE/ACM International Workshop on Software Architecture and Metrics (SAM). IEEE, 35-40. https://doi.org/10.1109/SAM.2015.12\n\nMATLAB Simulink version Info. L Sohil, Shrestha, Sohil L Shrestha. 2021. MATLAB Simulink version Info. https://github.com/ 50417/SLNET_Metrics/wiki/MATLAB-Simulink-Installation Accessed Jan 25 2022.\n\nL Sohil, Shrestha, 10.5281/zenodo.633604850417/SLNET_Metrics: SLNET_Metrics MSR Release. Sohil L Shrestha. 2022. 50417/SLNET_Metrics: SLNET_Metrics MSR Release. https: //doi.org/10.5281/zenodo.6336048\n\n50417/SLNet_Miner: SLNET-Miner MSR Release. L Sohil, Shrestha, 10.5281/zenodo.6336034Sohil L Shrestha. 2022. 50417/SLNet_Miner: SLNET-Miner MSR Release. https: //doi.org/10.5281/zenodo.6336034\n\nShrestha Sohil Lal, 10.5281/zenodo.5259648Shafiul Azam Chowdhury, and Christoph Csallner. 2022. SLNET: A Redistributable Corpus of 3rd-party Simulink Models. Sohil Lal Shrestha, Shafiul Azam Chowdhury, and Christoph Csallner. 2022. SLNET: A Redistributable Corpus of 3rd-party Simulink Models. https://doi.org/10. 5281/zenodo.5259648\n\nSLGPT: Using Transfer Learning to Directly Generate Simulink Model Files and Find Bugs in the Simulink Toolchain. Lal Sohil, Christoph Shrestha, Csallner, EASE 2021: Evaluation and Assessment in Software Engineering. Trondheim, NorwayACMSohil Lal Shrestha and Christoph Csallner. 2021. SLGPT: Using Transfer Learn- ing to Directly Generate Simulink Model Files and Find Bugs in the Simulink Toolchain. In EASE 2021: Evaluation and Assessment in Software Engineering, Trondheim, Norway, June 21-24, 2021. ACM, 260-265.\n\nSlashdot Media. 2021. SourceForge. Slashdot Media. 2021. SourceForge. https://sourceforge.net/directory/?q= simulink Accessed May 2021.\n\nEvolution of Model Clones in Simulink. Matthew Stephan, H Manar, James R Alalfi, Andrew Cordy, Stevenson, Proc. Workshop on Models and Evolution. Workshop on Models and EvolutionMatthew Stephan, Manar H. Alalfi, James R. Cordy, and Andrew Stevenson. 2013. Evolution of Model Clones in Simulink. In Proc. Workshop on Models and Evolution. 40-49.\n\nIdentification of Simulink model antipattern instances using model clone detection. Matthew Stephan, R James, Cordy, 10.1109/MODELS.2015.733825818th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MoDELS. Matthew Stephan and James R. Cordy. 2015. Identification of Simulink model antipattern instances using model clone detection. In 18th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MoDELS 2015. 276-285. https://doi.org/10.1109/MODELS.2015.7338258\n\n. Vincent Jacques, Vincent Jacques. 2007. PyGitHub. https://pygithub.readthedocs.io/en/latest/ introduction.html Accessed Jan 2022.\n\nWhat don't we know about CPS architectures. Marilyn Wolf, Eric Feron, 10.1145/2744769.27479501-80:4Proc. 52nd Annual Design Automation Conference (DAC). 52nd Annual Design Automation Conference (DAC)80Marilyn Wolf and Eric Feron. 2015. What don't we know about CPS architectures?. In Proc. 52nd Annual Design Automation Conference (DAC). 80:1-80:4. https: //doi.org/10.1145/2744769.2747950\n\nOn applying machine learning techniques for design pattern detection. Marco Zanoni, Francesca Arcelli Fontana, Fabio Stella, 10.1016/j.jss.2015.01.037J. Syst. Softw. 103Marco Zanoni, Francesca Arcelli Fontana, and Fabio Stella. 2015. On applying machine learning techniques for design pattern detection. J. Syst. Softw. 103 (2015), 102-117. https://doi.org/10.1016/j.jss.2015.01.037\n\nPerceptions on the State of the Art in Verification and Validation in Cyber-Physical Systems. Xi Zheng, Christine Julien, Miryung Kim, Sarfraz Khurshid, 10.1109/JSYST.2015.2496293IEEE Systems Journal. 11Xi Zheng, Christine Julien, Miryung Kim, and Sarfraz Khurshid. 2017. Perceptions on the State of the Art in Verification and Validation in Cyber-Physical Systems. IEEE Systems Journal 11, 4 (2017), 2614-2627. https://doi.org/10.1109/JSYST.2015. 2496293\n", "annotations": {"author": "[{\"end\":83,\"start\":64},{\"end\":107,\"start\":84},{\"end\":127,\"start\":108},{\"end\":292,\"start\":128},{\"end\":377,\"start\":293}]", "publisher": null, "author_last_name": "[{\"end\":82,\"start\":74},{\"end\":106,\"start\":97},{\"end\":126,\"start\":118}]", "author_first_name": "[{\"end\":69,\"start\":64},{\"end\":73,\"start\":70},{\"end\":91,\"start\":84},{\"end\":96,\"start\":92},{\"end\":117,\"start\":108}]", "author_affiliation": "[{\"end\":291,\"start\":129},{\"end\":376,\"start\":294}]", "title": "[{\"end\":61,\"start\":1},{\"end\":438,\"start\":378}]", "venue": null, "abstract": "[{\"end\":1610,\"start\":510}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2144,\"start\":2141},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":2147,\"start\":2144},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":2150,\"start\":2147},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":2886,\"start\":2882},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":2889,\"start\":2886},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3241,\"start\":3238},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3336,\"start\":3332},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3353,\"start\":3350},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3644,\"start\":3641},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3703,\"start\":3699},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4502,\"start\":4499},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":4626,\"start\":4622},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":4880,\"start\":4876},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":4899,\"start\":4895},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":4902,\"start\":4899},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5020,\"start\":5016},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":5086,\"start\":5082},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":5089,\"start\":5086},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":5670,\"start\":5666},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6870,\"start\":6867},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":6873,\"start\":6870},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7066,\"start\":7062},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":7171,\"start\":7167},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":7192,\"start\":7188},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":7812,\"start\":7808},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7867,\"start\":7864},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":7870,\"start\":7867},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":8168,\"start\":8164},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8540,\"start\":8536},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":9058,\"start\":9055},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9061,\"start\":9058},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":10005,\"start\":10001},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":10779,\"start\":10775},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":11479,\"start\":11476},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":11604,\"start\":11600},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":12065,\"start\":12061},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":12155,\"start\":12151},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":14252,\"start\":14248},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":15919,\"start\":15916},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":15922,\"start\":15919},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":15925,\"start\":15922},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":16013,\"start\":16010},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":16015,\"start\":16013},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":16331,\"start\":16327},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":16575,\"start\":16571},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":16828,\"start\":16825},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":16831,\"start\":16828},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":16834,\"start\":16831},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":16837,\"start\":16834},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":16840,\"start\":16837},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":16879,\"start\":16875},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":17360,\"start\":17357},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":17740,\"start\":17737},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":17743,\"start\":17740},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":17746,\"start\":17743},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":17749,\"start\":17746},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":17967,\"start\":17964},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":18189,\"start\":18185},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":18192,\"start\":18189},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":19830,\"start\":19826},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":20668,\"start\":20665},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":20672,\"start\":20668},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":20676,\"start\":20672},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20680,\"start\":20676},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":21153,\"start\":21152}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":19752,\"start\":19585},{\"attributes\":{\"id\":\"fig_1\"},\"end\":19865,\"start\":19753},{\"attributes\":{\"id\":\"fig_2\"},\"end\":20039,\"start\":19866},{\"attributes\":{\"id\":\"fig_3\"},\"end\":20092,\"start\":20040},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":20553,\"start\":20093},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":20927,\"start\":20554}]", "paragraph": "[{\"end\":2151,\"start\":1626},{\"end\":3128,\"start\":2153},{\"end\":3916,\"start\":3130},{\"end\":4371,\"start\":3918},{\"end\":4693,\"start\":4373},{\"end\":4980,\"start\":4695},{\"end\":5202,\"start\":5007},{\"end\":6075,\"start\":5204},{\"end\":6783,\"start\":6077},{\"end\":7671,\"start\":6815},{\"end\":8102,\"start\":7673},{\"end\":8490,\"start\":8104},{\"end\":8862,\"start\":8492},{\"end\":9367,\"start\":8904},{\"end\":9740,\"start\":9369},{\"end\":10006,\"start\":9742},{\"end\":10699,\"start\":10008},{\"end\":11882,\"start\":10701},{\"end\":12400,\"start\":11910},{\"end\":12820,\"start\":12402},{\"end\":13146,\"start\":12822},{\"end\":14104,\"start\":13148},{\"end\":14428,\"start\":14106},{\"end\":14827,\"start\":14430},{\"end\":15129,\"start\":14829},{\"end\":15836,\"start\":15163},{\"end\":16419,\"start\":15838},{\"end\":16673,\"start\":16421},{\"end\":17117,\"start\":16675},{\"end\":17443,\"start\":17119},{\"end\":17750,\"start\":17445},{\"end\":18193,\"start\":17752},{\"end\":18933,\"start\":18217},{\"end\":19200,\"start\":18949},{\"end\":19584,\"start\":19220}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":10386,\"start\":10379},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":11631,\"start\":11624},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":13626,\"start\":13333},{\"end\":14261,\"start\":14254}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1624,\"start\":1612},{\"attributes\":{\"n\":\"2\"},\"end\":5005,\"start\":4983},{\"attributes\":{\"n\":\"3\"},\"end\":6813,\"start\":6786},{\"attributes\":{\"n\":\"3.1\"},\"end\":8902,\"start\":8865},{\"attributes\":{\"n\":\"3.2\"},\"end\":11908,\"start\":11885},{\"attributes\":{\"n\":\"4\"},\"end\":15161,\"start\":15132},{\"attributes\":{\"n\":\"5\"},\"end\":18215,\"start\":18196},{\"attributes\":{\"n\":\"6\"},\"end\":18947,\"start\":18936},{\"end\":19218,\"start\":19203},{\"end\":19764,\"start\":19754},{\"end\":19877,\"start\":19867},{\"end\":20051,\"start\":20041},{\"end\":20103,\"start\":20094},{\"end\":20564,\"start\":20555}]", "table": "[{\"end\":20553,\"start\":20376},{\"end\":20927,\"start\":20681}]", "figure_caption": "[{\"end\":19752,\"start\":19587},{\"end\":19865,\"start\":19766},{\"end\":20039,\"start\":19879},{\"end\":20092,\"start\":20053},{\"end\":20376,\"start\":20105},{\"end\":20681,\"start\":20566}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":5237,\"start\":5229},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":6950,\"start\":6942},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":11009,\"start\":11001},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":14317,\"start\":14309}]", "bib_author_first_name": "[{\"end\":21812,\"start\":21811},{\"end\":21833,\"start\":21823},{\"end\":22406,\"start\":22395},{\"end\":22423,\"start\":22416},{\"end\":22443,\"start\":22433},{\"end\":22750,\"start\":22741},{\"end\":22764,\"start\":22757},{\"end\":22782,\"start\":22777},{\"end\":23376,\"start\":23367},{\"end\":23387,\"start\":23383},{\"end\":23995,\"start\":23989},{\"end\":24009,\"start\":24003},{\"end\":24025,\"start\":24021},{\"end\":24551,\"start\":24546},{\"end\":24565,\"start\":24559},{\"end\":25185,\"start\":25181},{\"end\":25203,\"start\":25192},{\"end\":25205,\"start\":25204},{\"end\":25218,\"start\":25215},{\"end\":25231,\"start\":25224},{\"end\":25242,\"start\":25239},{\"end\":25826,\"start\":25820},{\"end\":25859,\"start\":25851},{\"end\":25876,\"start\":25868},{\"end\":25890,\"start\":25884},{\"end\":25892,\"start\":25891},{\"end\":25911,\"start\":25902},{\"end\":26530,\"start\":26529},{\"end\":26544,\"start\":26538},{\"end\":26546,\"start\":26545},{\"end\":26566,\"start\":26557},{\"end\":27102,\"start\":27098},{\"end\":27107,\"start\":27103},{\"end\":27138,\"start\":27132},{\"end\":27155,\"start\":27149},{\"end\":27157,\"start\":27156},{\"end\":27175,\"start\":27166},{\"end\":27750,\"start\":27745},{\"end\":27762,\"start\":27761},{\"end\":27764,\"start\":27763},{\"end\":27789,\"start\":27780},{\"end\":27804,\"start\":27797},{\"end\":27806,\"start\":27805},{\"end\":28389,\"start\":28382},{\"end\":28412,\"start\":28404},{\"end\":28426,\"start\":28421},{\"end\":28444,\"start\":28436},{\"end\":28459,\"start\":28453},{\"end\":28481,\"start\":28468},{\"end\":28496,\"start\":28490},{\"end\":29033,\"start\":29027},{\"end\":29047,\"start\":29043},{\"end\":29064,\"start\":29055},{\"end\":29754,\"start\":29748},{\"end\":29777,\"start\":29769},{\"end\":29792,\"start\":29787},{\"end\":29806,\"start\":29802},{\"end\":29821,\"start\":29815},{\"end\":29823,\"start\":29822},{\"end\":29839,\"start\":29832},{\"end\":29841,\"start\":29840},{\"end\":30260,\"start\":30253},{\"end\":30271,\"start\":30267},{\"end\":30284,\"start\":30279},{\"end\":30711,\"start\":30700},{\"end\":30719,\"start\":30716},{\"end\":30732,\"start\":30726},{\"end\":30745,\"start\":30739},{\"end\":31295,\"start\":31288},{\"end\":32026,\"start\":32017},{\"end\":32246,\"start\":32245},{\"end\":32248,\"start\":32247},{\"end\":32261,\"start\":32255},{\"end\":32281,\"start\":32280},{\"end\":32283,\"start\":32282},{\"end\":32305,\"start\":32304},{\"end\":32307,\"start\":32306},{\"end\":32323,\"start\":32314},{\"end\":32697,\"start\":32691},{\"end\":32709,\"start\":32705},{\"end\":32730,\"start\":32721},{\"end\":33196,\"start\":33191},{\"end\":33213,\"start\":33208},{\"end\":33230,\"start\":33224},{\"end\":33250,\"start\":33241},{\"end\":33269,\"start\":33263},{\"end\":33271,\"start\":33270},{\"end\":33284,\"start\":33280},{\"end\":33288,\"start\":33285},{\"end\":33756,\"start\":33752},{\"end\":33773,\"start\":33767},{\"end\":33775,\"start\":33774},{\"end\":33788,\"start\":33784},{\"end\":33804,\"start\":33798},{\"end\":33822,\"start\":33815},{\"end\":33843,\"start\":33834},{\"end\":33859,\"start\":33855},{\"end\":33872,\"start\":33868},{\"end\":33884,\"start\":33878},{\"end\":33896,\"start\":33892},{\"end\":34276,\"start\":34272},{\"end\":34521,\"start\":34517},{\"end\":34523,\"start\":34522},{\"end\":34536,\"start\":34531},{\"end\":34538,\"start\":34537},{\"end\":35049,\"start\":35043},{\"end\":35067,\"start\":35061},{\"end\":35459,\"start\":35456},{\"end\":35760,\"start\":35757},{\"end\":35781,\"start\":35772},{\"end\":35796,\"start\":35790},{\"end\":35813,\"start\":35805},{\"end\":36391,\"start\":36390},{\"end\":36561,\"start\":36560},{\"end\":36807,\"start\":36806},{\"end\":36964,\"start\":36956},{\"end\":37408,\"start\":37405},{\"end\":37425,\"start\":37416},{\"end\":37993,\"start\":37986},{\"end\":38004,\"start\":38003},{\"end\":38017,\"start\":38012},{\"end\":38019,\"start\":38018},{\"end\":38034,\"start\":38028},{\"end\":38384,\"start\":38377},{\"end\":38395,\"start\":38394},{\"end\":38830,\"start\":38823},{\"end\":39005,\"start\":38998},{\"end\":39016,\"start\":39012},{\"end\":39420,\"start\":39415},{\"end\":39438,\"start\":39429},{\"end\":39446,\"start\":39439},{\"end\":39461,\"start\":39456},{\"end\":39825,\"start\":39823},{\"end\":39842,\"start\":39833},{\"end\":39858,\"start\":39851},{\"end\":39871,\"start\":39864}]", "bib_author_last_name": "[{\"end\":21614,\"start\":21599},{\"end\":21821,\"start\":21813},{\"end\":21840,\"start\":21834},{\"end\":21845,\"start\":21842},{\"end\":22414,\"start\":22407},{\"end\":22431,\"start\":22424},{\"end\":22464,\"start\":22444},{\"end\":22472,\"start\":22466},{\"end\":22755,\"start\":22751},{\"end\":22775,\"start\":22765},{\"end\":22789,\"start\":22783},{\"end\":23381,\"start\":23377},{\"end\":23394,\"start\":23388},{\"end\":24001,\"start\":23996},{\"end\":24019,\"start\":24010},{\"end\":24032,\"start\":24026},{\"end\":24557,\"start\":24552},{\"end\":24573,\"start\":24566},{\"end\":25190,\"start\":25186},{\"end\":25213,\"start\":25206},{\"end\":25222,\"start\":25219},{\"end\":25237,\"start\":25232},{\"end\":25248,\"start\":25243},{\"end\":25849,\"start\":25827},{\"end\":25866,\"start\":25860},{\"end\":25882,\"start\":25877},{\"end\":25900,\"start\":25893},{\"end\":25919,\"start\":25912},{\"end\":25929,\"start\":25921},{\"end\":26527,\"start\":26505},{\"end\":26536,\"start\":26531},{\"end\":26555,\"start\":26547},{\"end\":26574,\"start\":26567},{\"end\":26584,\"start\":26576},{\"end\":27130,\"start\":27108},{\"end\":27147,\"start\":27139},{\"end\":27164,\"start\":27158},{\"end\":27183,\"start\":27176},{\"end\":27193,\"start\":27185},{\"end\":27759,\"start\":27751},{\"end\":27769,\"start\":27765},{\"end\":27778,\"start\":27771},{\"end\":27795,\"start\":27790},{\"end\":27817,\"start\":27807},{\"end\":27827,\"start\":27819},{\"end\":28402,\"start\":28390},{\"end\":28419,\"start\":28413},{\"end\":28434,\"start\":28427},{\"end\":28451,\"start\":28445},{\"end\":28466,\"start\":28460},{\"end\":28488,\"start\":28482},{\"end\":28505,\"start\":28497},{\"end\":29041,\"start\":29034},{\"end\":29053,\"start\":29048},{\"end\":29069,\"start\":29065},{\"end\":29078,\"start\":29071},{\"end\":29622,\"start\":29616},{\"end\":29767,\"start\":29755},{\"end\":29785,\"start\":29778},{\"end\":29800,\"start\":29793},{\"end\":29813,\"start\":29807},{\"end\":29830,\"start\":29824},{\"end\":29848,\"start\":29842},{\"end\":30265,\"start\":30261},{\"end\":30277,\"start\":30272},{\"end\":30293,\"start\":30285},{\"end\":30714,\"start\":30712},{\"end\":30724,\"start\":30720},{\"end\":30737,\"start\":30733},{\"end\":30748,\"start\":30746},{\"end\":31304,\"start\":31296},{\"end\":32030,\"start\":32027},{\"end\":32253,\"start\":32249},{\"end\":32271,\"start\":32262},{\"end\":32278,\"start\":32273},{\"end\":32289,\"start\":32284},{\"end\":32302,\"start\":32291},{\"end\":32312,\"start\":32308},{\"end\":32337,\"start\":32324},{\"end\":32349,\"start\":32339},{\"end\":32703,\"start\":32698},{\"end\":32719,\"start\":32710},{\"end\":32741,\"start\":32731},{\"end\":33206,\"start\":33197},{\"end\":33222,\"start\":33214},{\"end\":33239,\"start\":33231},{\"end\":33261,\"start\":33251},{\"end\":33278,\"start\":33272},{\"end\":33296,\"start\":33289},{\"end\":33303,\"start\":33298},{\"end\":33765,\"start\":33757},{\"end\":33782,\"start\":33776},{\"end\":33796,\"start\":33789},{\"end\":33813,\"start\":33805},{\"end\":33832,\"start\":33823},{\"end\":33853,\"start\":33844},{\"end\":33866,\"start\":33860},{\"end\":33876,\"start\":33873},{\"end\":33890,\"start\":33885},{\"end\":33904,\"start\":33897},{\"end\":34289,\"start\":34277},{\"end\":34529,\"start\":34524},{\"end\":34544,\"start\":34539},{\"end\":35059,\"start\":35050},{\"end\":35075,\"start\":35068},{\"end\":35467,\"start\":35460},{\"end\":35770,\"start\":35761},{\"end\":35788,\"start\":35782},{\"end\":35803,\"start\":35797},{\"end\":35820,\"start\":35814},{\"end\":36397,\"start\":36392},{\"end\":36407,\"start\":36399},{\"end\":36567,\"start\":36562},{\"end\":36577,\"start\":36569},{\"end\":36813,\"start\":36808},{\"end\":36823,\"start\":36815},{\"end\":36974,\"start\":36965},{\"end\":37414,\"start\":37409},{\"end\":37434,\"start\":37426},{\"end\":37444,\"start\":37436},{\"end\":38001,\"start\":37994},{\"end\":38010,\"start\":38005},{\"end\":38026,\"start\":38020},{\"end\":38040,\"start\":38035},{\"end\":38051,\"start\":38042},{\"end\":38392,\"start\":38385},{\"end\":38401,\"start\":38396},{\"end\":38408,\"start\":38403},{\"end\":38838,\"start\":38831},{\"end\":39010,\"start\":39006},{\"end\":39022,\"start\":39017},{\"end\":39427,\"start\":39421},{\"end\":39454,\"start\":39447},{\"end\":39468,\"start\":39462},{\"end\":39831,\"start\":39826},{\"end\":39849,\"start\":39843},{\"end\":39862,\"start\":39859},{\"end\":39880,\"start\":39872}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":21734,\"start\":21519},{\"attributes\":{\"doi\":\"10.1109/BESC.2014.7059515\",\"id\":\"b1\",\"matched_paper_id\":11533144},\"end\":22327,\"start\":21736},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":55827754},\"end\":22739,\"start\":22329},{\"attributes\":{\"id\":\"b3\"},\"end\":23203,\"start\":22741},{\"attributes\":{\"doi\":\"10.1007/978-3-030-58167-1_9\",\"id\":\"b4\",\"matched_paper_id\":225041826},\"end\":23928,\"start\":23205},{\"attributes\":{\"doi\":\"10.1145/1595696.1595728\",\"id\":\"b5\",\"matched_paper_id\":18621745},\"end\":24490,\"start\":23930},{\"attributes\":{\"doi\":\"10.1007/978-3-642-30982-3_3\",\"id\":\"b6\",\"matched_paper_id\":6439049},\"end\":25103,\"start\":24492},{\"attributes\":{\"doi\":\"10.1109/ASE.2019.00093\",\"id\":\"b7\",\"matched_paper_id\":202565446},\"end\":25716,\"start\":25105},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":47019892},\"end\":26397,\"start\":25718},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":211103257},\"end\":27025,\"start\":26399},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":49866368},\"end\":27685,\"start\":27027},{\"attributes\":{\"doi\":\"10.1145/2465478.2465482\",\"id\":\"b11\",\"matched_paper_id\":18814593},\"end\":28325,\"start\":27687},{\"attributes\":{\"doi\":\"10.1145/1368088.1368172\",\"id\":\"b12\",\"matched_paper_id\":1820424},\"end\":28958,\"start\":28327},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":1693988},\"end\":29484,\"start\":28960},{\"attributes\":{\"id\":\"b14\"},\"end\":29612,\"start\":29486},{\"attributes\":{\"id\":\"b15\"},\"end\":29683,\"start\":29614},{\"attributes\":{\"doi\":\"10.1007/s10664-015-9393-5\",\"id\":\"b16\",\"matched_paper_id\":207144667},\"end\":30183,\"start\":29685},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":13817139},\"end\":30635,\"start\":30185},{\"attributes\":{\"doi\":\"10.1109/TSA.2016.23\",\"id\":\"b18\",\"matched_paper_id\":13764350},\"end\":31204,\"start\":30637},{\"attributes\":{\"doi\":\"10.1016/j.asoc.2014.11.023\",\"id\":\"b19\",\"matched_paper_id\":205705650},\"end\":31541,\"start\":31206},{\"attributes\":{\"id\":\"b20\"},\"end\":31675,\"start\":31543},{\"attributes\":{\"id\":\"b21\"},\"end\":31826,\"start\":31677},{\"attributes\":{\"id\":\"b22\"},\"end\":31975,\"start\":31828},{\"attributes\":{\"id\":\"b23\"},\"end\":32173,\"start\":31977},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":29003651},\"end\":32648,\"start\":32175},{\"attributes\":{\"doi\":\"10.1109/MSR.2017.52\",\"id\":\"b25\",\"matched_paper_id\":20637083},\"end\":33139,\"start\":32650},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":15981214},\"end\":33687,\"start\":33141},{\"attributes\":{\"doi\":\"10.1007/s10009-017-0450-9\",\"id\":\"b27\",\"matched_paper_id\":27811622},\"end\":34235,\"start\":33689},{\"attributes\":{\"id\":\"b28\"},\"end\":34454,\"start\":34237},{\"attributes\":{\"doi\":\"10.1109/ICST.2018.00049\",\"id\":\"b29\",\"matched_paper_id\":44071222},\"end\":35009,\"start\":34456},{\"attributes\":{\"doi\":\"10.1109/ICSE.2012.6227161\",\"id\":\"b30\",\"matched_paper_id\":15141657},\"end\":35418,\"start\":35011},{\"attributes\":{\"id\":\"b31\"},\"end\":35626,\"start\":35420},{\"attributes\":{\"doi\":\"10.1109/SAM.2015.12\",\"id\":\"b32\",\"matched_paper_id\":10404732},\"end\":36358,\"start\":35628},{\"attributes\":{\"id\":\"b33\"},\"end\":36558,\"start\":36360},{\"attributes\":{\"doi\":\"10.5281/zenodo.6336048\",\"id\":\"b34\"},\"end\":36760,\"start\":36560},{\"attributes\":{\"doi\":\"10.5281/zenodo.6336034\",\"id\":\"b35\"},\"end\":36954,\"start\":36762},{\"attributes\":{\"doi\":\"10.5281/zenodo.5259648\",\"id\":\"b36\"},\"end\":37289,\"start\":36956},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":234370607},\"end\":37808,\"start\":37291},{\"attributes\":{\"id\":\"b38\"},\"end\":37945,\"start\":37810},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":7189000},\"end\":38291,\"start\":37947},{\"attributes\":{\"doi\":\"10.1109/MODELS.2015.7338258\",\"id\":\"b40\",\"matched_paper_id\":8841522},\"end\":38819,\"start\":38293},{\"attributes\":{\"id\":\"b41\"},\"end\":38952,\"start\":38821},{\"attributes\":{\"doi\":\"10.1145/2744769.2747950\",\"id\":\"b42\",\"matched_paper_id\":6915077},\"end\":39343,\"start\":38954},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":1137177},\"end\":39727,\"start\":39345},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":17020711},\"end\":40184,\"start\":39729}]", "bib_title": "[{\"end\":21809,\"start\":21736},{\"end\":22393,\"start\":22329},{\"end\":23365,\"start\":23205},{\"end\":23987,\"start\":23930},{\"end\":24544,\"start\":24492},{\"end\":25179,\"start\":25105},{\"end\":25818,\"start\":25718},{\"end\":26503,\"start\":26399},{\"end\":27096,\"start\":27027},{\"end\":27743,\"start\":27687},{\"end\":28380,\"start\":28327},{\"end\":29025,\"start\":28960},{\"end\":29746,\"start\":29685},{\"end\":30251,\"start\":30185},{\"end\":30698,\"start\":30637},{\"end\":31286,\"start\":31206},{\"end\":32243,\"start\":32175},{\"end\":32689,\"start\":32650},{\"end\":33189,\"start\":33141},{\"end\":33750,\"start\":33689},{\"end\":34515,\"start\":34456},{\"end\":35041,\"start\":35011},{\"end\":35755,\"start\":35628},{\"end\":37403,\"start\":37291},{\"end\":37984,\"start\":37947},{\"end\":38375,\"start\":38293},{\"end\":38996,\"start\":38954},{\"end\":39413,\"start\":39345},{\"end\":39821,\"start\":39729}]", "bib_author": "[{\"end\":21616,\"start\":21599},{\"end\":21823,\"start\":21811},{\"end\":21842,\"start\":21823},{\"end\":21847,\"start\":21842},{\"end\":22416,\"start\":22395},{\"end\":22433,\"start\":22416},{\"end\":22466,\"start\":22433},{\"end\":22474,\"start\":22466},{\"end\":22757,\"start\":22741},{\"end\":22777,\"start\":22757},{\"end\":22791,\"start\":22777},{\"end\":23383,\"start\":23367},{\"end\":23396,\"start\":23383},{\"end\":24003,\"start\":23989},{\"end\":24021,\"start\":24003},{\"end\":24034,\"start\":24021},{\"end\":24559,\"start\":24546},{\"end\":24575,\"start\":24559},{\"end\":25192,\"start\":25181},{\"end\":25215,\"start\":25192},{\"end\":25224,\"start\":25215},{\"end\":25239,\"start\":25224},{\"end\":25250,\"start\":25239},{\"end\":25851,\"start\":25820},{\"end\":25868,\"start\":25851},{\"end\":25884,\"start\":25868},{\"end\":25902,\"start\":25884},{\"end\":25921,\"start\":25902},{\"end\":25931,\"start\":25921},{\"end\":26529,\"start\":26505},{\"end\":26538,\"start\":26529},{\"end\":26557,\"start\":26538},{\"end\":26576,\"start\":26557},{\"end\":26586,\"start\":26576},{\"end\":27132,\"start\":27098},{\"end\":27149,\"start\":27132},{\"end\":27166,\"start\":27149},{\"end\":27185,\"start\":27166},{\"end\":27195,\"start\":27185},{\"end\":27761,\"start\":27745},{\"end\":27771,\"start\":27761},{\"end\":27780,\"start\":27771},{\"end\":27797,\"start\":27780},{\"end\":27819,\"start\":27797},{\"end\":27829,\"start\":27819},{\"end\":28404,\"start\":28382},{\"end\":28421,\"start\":28404},{\"end\":28436,\"start\":28421},{\"end\":28453,\"start\":28436},{\"end\":28468,\"start\":28453},{\"end\":28490,\"start\":28468},{\"end\":28507,\"start\":28490},{\"end\":29043,\"start\":29027},{\"end\":29055,\"start\":29043},{\"end\":29071,\"start\":29055},{\"end\":29080,\"start\":29071},{\"end\":29624,\"start\":29616},{\"end\":29769,\"start\":29748},{\"end\":29787,\"start\":29769},{\"end\":29802,\"start\":29787},{\"end\":29815,\"start\":29802},{\"end\":29832,\"start\":29815},{\"end\":29850,\"start\":29832},{\"end\":30267,\"start\":30253},{\"end\":30279,\"start\":30267},{\"end\":30295,\"start\":30279},{\"end\":30716,\"start\":30700},{\"end\":30726,\"start\":30716},{\"end\":30739,\"start\":30726},{\"end\":30750,\"start\":30739},{\"end\":31306,\"start\":31288},{\"end\":32032,\"start\":32017},{\"end\":32255,\"start\":32245},{\"end\":32273,\"start\":32255},{\"end\":32280,\"start\":32273},{\"end\":32291,\"start\":32280},{\"end\":32304,\"start\":32291},{\"end\":32314,\"start\":32304},{\"end\":32339,\"start\":32314},{\"end\":32351,\"start\":32339},{\"end\":32705,\"start\":32691},{\"end\":32721,\"start\":32705},{\"end\":32743,\"start\":32721},{\"end\":33208,\"start\":33191},{\"end\":33224,\"start\":33208},{\"end\":33241,\"start\":33224},{\"end\":33263,\"start\":33241},{\"end\":33280,\"start\":33263},{\"end\":33298,\"start\":33280},{\"end\":33305,\"start\":33298},{\"end\":33767,\"start\":33752},{\"end\":33784,\"start\":33767},{\"end\":33798,\"start\":33784},{\"end\":33815,\"start\":33798},{\"end\":33834,\"start\":33815},{\"end\":33855,\"start\":33834},{\"end\":33868,\"start\":33855},{\"end\":33878,\"start\":33868},{\"end\":33892,\"start\":33878},{\"end\":33906,\"start\":33892},{\"end\":34291,\"start\":34272},{\"end\":34531,\"start\":34517},{\"end\":34546,\"start\":34531},{\"end\":35061,\"start\":35043},{\"end\":35077,\"start\":35061},{\"end\":35469,\"start\":35456},{\"end\":35772,\"start\":35757},{\"end\":35790,\"start\":35772},{\"end\":35805,\"start\":35790},{\"end\":35822,\"start\":35805},{\"end\":36399,\"start\":36390},{\"end\":36409,\"start\":36399},{\"end\":36569,\"start\":36560},{\"end\":36579,\"start\":36569},{\"end\":36815,\"start\":36806},{\"end\":36825,\"start\":36815},{\"end\":36976,\"start\":36956},{\"end\":37416,\"start\":37405},{\"end\":37436,\"start\":37416},{\"end\":37446,\"start\":37436},{\"end\":38003,\"start\":37986},{\"end\":38012,\"start\":38003},{\"end\":38028,\"start\":38012},{\"end\":38042,\"start\":38028},{\"end\":38053,\"start\":38042},{\"end\":38394,\"start\":38377},{\"end\":38403,\"start\":38394},{\"end\":38410,\"start\":38403},{\"end\":38840,\"start\":38823},{\"end\":39012,\"start\":38998},{\"end\":39024,\"start\":39012},{\"end\":39429,\"start\":39415},{\"end\":39456,\"start\":39429},{\"end\":39470,\"start\":39456},{\"end\":39833,\"start\":39823},{\"end\":39851,\"start\":39833},{\"end\":39864,\"start\":39851},{\"end\":39882,\"start\":39864}]", "bib_venue": "[{\"end\":22050,\"start\":21965},{\"end\":23575,\"start\":23503},{\"end\":24225,\"start\":24145},{\"end\":24824,\"start\":24717},{\"end\":25374,\"start\":25356},{\"end\":26077,\"start\":26008},{\"end\":26732,\"start\":26663},{\"end\":27387,\"start\":27295},{\"end\":28028,\"start\":27944},{\"end\":28613,\"start\":28597},{\"end\":29228,\"start\":29158},{\"end\":30431,\"start\":30367},{\"end\":30937,\"start\":30857},{\"end\":32387,\"start\":32373},{\"end\":32904,\"start\":32837},{\"end\":33437,\"start\":33375},{\"end\":34681,\"start\":34665},{\"end\":35187,\"start\":35168},{\"end\":36017,\"start\":35933},{\"end\":37525,\"start\":37508},{\"end\":38125,\"start\":38093},{\"end\":39153,\"start\":39107},{\"end\":21597,\"start\":21519},{\"end\":21963,\"start\":21872},{\"end\":22516,\"start\":22474},{\"end\":22964,\"start\":22791},{\"end\":23501,\"start\":23423},{\"end\":24143,\"start\":24057},{\"end\":24715,\"start\":24602},{\"end\":25354,\"start\":25272},{\"end\":26006,\"start\":25931},{\"end\":26661,\"start\":26586},{\"end\":27293,\"start\":27195},{\"end\":27942,\"start\":27852},{\"end\":28595,\"start\":28530},{\"end\":29156,\"start\":29080},{\"end\":29520,\"start\":29486},{\"end\":29905,\"start\":29875},{\"end\":30365,\"start\":30295},{\"end\":30855,\"start\":30769},{\"end\":31349,\"start\":31332},{\"end\":31579,\"start\":31545},{\"end\":31715,\"start\":31677},{\"end\":31863,\"start\":31828},{\"end\":32015,\"start\":31977},{\"end\":32371,\"start\":32351},{\"end\":32835,\"start\":32762},{\"end\":33373,\"start\":33305},{\"end\":33935,\"start\":33931},{\"end\":34270,\"start\":34237},{\"end\":34663,\"start\":34569},{\"end\":35166,\"start\":35102},{\"end\":35454,\"start\":35420},{\"end\":35931,\"start\":35841},{\"end\":36388,\"start\":36360},{\"end\":36647,\"start\":36601},{\"end\":36804,\"start\":36762},{\"end\":37112,\"start\":36998},{\"end\":37506,\"start\":37446},{\"end\":37843,\"start\":37810},{\"end\":38091,\"start\":38053},{\"end\":38533,\"start\":38437},{\"end\":39105,\"start\":39053},{\"end\":39509,\"start\":39495},{\"end\":39928,\"start\":39908}]"}}}, "year": 2023, "month": 12, "day": 17}