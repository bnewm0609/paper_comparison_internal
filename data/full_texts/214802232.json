{"id": 214802232, "updated": "2023-10-06 17:06:20.722", "metadata": {"title": "SqueezeSegV3: Spatially-Adaptive Convolution for Efficient Point-Cloud Segmentation", "authors": "[{\"first\":\"Chenfeng\",\"last\":\"Xu\",\"middle\":[]},{\"first\":\"Bichen\",\"last\":\"Wu\",\"middle\":[]},{\"first\":\"Zining\",\"last\":\"Wang\",\"middle\":[]},{\"first\":\"Wei\",\"last\":\"Zhan\",\"middle\":[]},{\"first\":\"Peter\",\"last\":\"Vajda\",\"middle\":[]},{\"first\":\"Kurt\",\"last\":\"Keutzer\",\"middle\":[]},{\"first\":\"Masayoshi\",\"last\":\"Tomizuka\",\"middle\":[]}]", "venue": "Computer Vision \u2013 ECCV 2020", "journal": "Computer Vision \u2013 ECCV 2020", "publication_date": {"year": 2020, "month": 4, "day": 3}, "abstract": "LiDAR point-cloud segmentation is an important problem for many applications. For large-scale point cloud segmentation, the \\textit{de facto} method is to project a 3D point cloud to get a 2D LiDAR image and use convolutions to process it. Despite the similarity between regular RGB and LiDAR images, we discover that the feature distribution of LiDAR images changes drastically at different image locations. Using standard convolutions to process such LiDAR images is problematic, as convolution filters pick up local features that are only active in specific regions in the image. As a result, the capacity of the network is under-utilized and the segmentation performance decreases. To fix this, we propose Spatially-Adaptive Convolution (SAC) to adopt different filters for different locations according to the input image. SAC can be computed efficiently since it can be implemented as a series of element-wise multiplications, im2col, and standard convolution. It is a general framework such that several previous methods can be seen as special cases of SAC. Using SAC, we build SqueezeSegV3 for LiDAR point-cloud segmentation and outperform all previous published methods by at least 3.7% mIoU on the SemanticKITTI benchmark with comparable inference speed.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2004.01803", "mag": "3109944402", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/eccv/XuWWZVKT20", "doi": "10.1007/978-3-030-58604-1_1"}}, "content": {"source": {"pdf_hash": "dca3546d47c6540bf933ee1729cbda557b42f489", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2004.01803v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/2004.01803", "status": "GREEN"}}, "grobid": {"id": "762fa7cd5bba8047a4cd2b460a9f1f70e4277ffa", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/dca3546d47c6540bf933ee1729cbda557b42f489.txt", "contents": "\nSqueezeSegV3: Spatially-Adaptive Convolution for Efficient Point-Cloud Segmentation\n\n\nChenfeng Xu xuchenfeng@hust.edu.cn \nHuazhong University of Science and Technology\n\n\nBichen Wu \nFacebook Inc\n\n\nZining Wang \nUniversity of California\nBerkeley\n\nWei Zhan \nUniversity of California\nBerkeley\n\nPeter Vajda vajdap@fb.com \nFacebook Inc\n\n\nKurt Keutzer keutzer@berkeley.edu \nUniversity of California\nBerkeley\n\nMasayoshi Tomizuka tomizuka@me.berkeley.edu \nUniversity of California\nBerkeley\n\nSqueezeSegV3: Spatially-Adaptive Convolution for Efficient Point-Cloud Segmentation\nPoint-Cloud Segmentation, Spatially-Adaptive Convolution\nLiDAR point-cloud segmentation is an important problem for many applications. For large-scale point cloud segmentation, the de facto method is to project a 3D point cloud to get a 2D LiDAR image and use convolutions to process it. Despite the similarity between regular RGB and LiDAR images, we discover that the feature distribution of LiDAR images changes drastically at different image locations. Using standard convolutions to process such LiDAR images is problematic, as convolution filters pick up local features that are only active in specific regions in the image. As a result, the capacity of the network is under-utilized and the segmentation performance decreases. To fix this, we propose Spatially-Adaptive Convolution (SAC) to adopt different filters for different locations according to the input image. SAC can be computed efficiently since it can be implemented as a series of element-wise multiplications, im2col, and standard convolution. It is a general framework such that several previous methods can be seen as special cases of SAC. Using SAC, we build SqueezeSegV3 for LiDAR point-cloud segmentation and outperform all previous published methods by at least 3.7% mIoU on the SemanticKITTI benchmark with comparable inference speed. Code and pretrained model are avalibale at https://github.com/chenfengxu714/SqueezeSegV3.\n\nIntroduction\n\nLiDAR sensors are widely used in many applications [59], especially autonomous driving [9,56,1]. For level 4 & 5 autonomous vehicles, most of the solutions rely on LiDAR to obtain a point-cloud representation of the environment. LiDAR point clouds can be used in many ways to understand the environment, such as  [65,3,41,34], multi-modal fusion [64,17], simultaneous localization and mapping [4,2] and point-cloud segmentation [56,58,35]. This paper is focused on point-cloud segmentation. This task takes a point-cloud as input and aims to assign each point a label corresponding to its object category. For autonomous driving, point-cloud segmentation can be used to recognize objects such as pedestrians and cars, identify drivable areas, detecting lanes, and so on. More applications of point-cloud segmentation are discussed in [59].\n\nRecent work on point-cloud segmentation is mainly divided into two categories, focusing on small-scale or large-scale point-clouds. For small-scale problems, ranging from object parsing to indoor scene understanding, most of the recent methods are based on PointNet [35,36]. Although PointNet-based methods have achieved competitive performance in many 3D tasks, they have limited processing speed, especially for large-scale point clouds. For outdoor scenes and applications such as autonomous driving, typical LiDAR sensors, such as Velodyne HDL-64E LiDAR, can scan about 64 \u00d7 3000 = 192, 000 points for each frame, covering an area of 160 \u00d7 160 \u00d7 20 meters. Processing point clouds at such scale efficiently or even in real time is far beyond the capability of PointNetbased methods. Hence, much of the recent work follows the method based on spherical projection proposed by Wu et al. [56,58]. Instead of processing 3D points directly, these methods first transform a 3D LiDAR point cloud into a 2D LiDAR image and use 2D ConvNets to segment the point cloud, as shown in Figure 1. In this paper, we follow this method based on spherical projection. To transform a 3D point-cloud into a 2D grid representation, each point in the 3D space is projected to a spherical surface. The projection angles of each Empirical distribution of X coordinates at nine sample locations in SemanticKITTI A point cloud and its corresponding 2D representation Empirical distribution of the red-channel at nine sampled locations in CIFAR10\n\nEmpirical distribution of the red-channel at nine sampled locations in COCO2017 Fig. 2: Pixel-wise feature distribution at nine sampled locations from COCO2017 [25], CIFAR10 [21] and SemanticKITTI [1]. The left shows the distribution of the red channel across all images in COCO2017 and CIFAR10. The right shows the distribution of the X coordinates across all LiDAR images in SemanticKITTI.\n\npoint are quantized and used to denote the location of the pixel. Each point's original 3D coordinates are treated as features. Such representations of LiDAR are very similar to RGB images, therefore, it seems straightforward to adopt 2D convolution to process \"LiDAR images\". This pipeline is illustrated in Figure 1. However, we discovered that an important difference exists between LiDAR images and regular images. For a regular image, the feature distribution is largely invariant to spatial locations, as visualized in Figure 2. For a LiDAR image, its features are converted by spherical projection, which introduces very strong spatial priors. As a result, the feature distribution of LiDAR images varies drastically at different locations, as illustrated in Figure 2 and Figure 3 (top). When we train a ConvNet to process LiDAR images, convolution filters may fit local features and become only active in some regions and are not used in other parts, as confirmed in Figure 3 (bottom). As a result, the capacity of the model is under-utilized, leading to decreased performance in point-cloud segmentation.\n\nTo tackle this problem, we propose Spatially-Adaptive Convolution (SAC), as shown in Figure 1. SAC is designed to be spatially-adaptive and content-aware. Based on the input, it adapts its filters to process different parts of the image. To ensure efficiency, we factorize the adaptive filter into a product of a static convolution weight and an attention map. The attention map is computed by a one-layer convolution, whose output at each pixel location is used to adapt the static weight. By carefully scheduling the computation, SAC can be implemented as a series of widely supported and optimized operations including element-wise multiplication, im2col, and reshaping, which ensures the efficiency of SAC.\n\nSAC is formulated as a general framework such that previous methods such as squeeze-and-excitation (SE) [14], convolutional block attention module (CBAM) [51], context-aggregation module (CAM) [58], and pixel-adaptive convolution (PAC) [42] can be seen as special cases of SAC, and experiments show that the more general SAC variants proposed in this paper outperform previous ones.\n\nUsing spatially-adaptive convolution, we build SqueezeSegV3 for LiDAR pointcloud segmentation. On the SemanticKITTI benchmark, SqueezeSegV3 outperforms all previously published methods by at least 3.7 mIoU with comparable inference speed, demonstrating the effectiveness of spatially-adaptive convolution.\n\n\nRelated work\n\n\nPoint-Cloud Segmentation\n\nRecent papers on point-cloud segmentation can be divided into two categoriesthose that deal with small-scale point-clouds, and those that deal with large-scale point clouds. For small-scale point-cloud segmentation such as object part parsing and indoor scene understanding, mainstream methods are based on PointNet [35,36]. DGCNN [50] and Deep-KdNet [20] extend the hierarchical architecture of PointNet++ [36] by grouping neighbor points. Based on the PointNet architecture, [8,23,24] further improve the effectiveness of sampling, reordering and grouping to obtain a better representation for downstream tasks. PVCNN [27] improves the efficiency of PointNet-based methods [27,50] using voxel-based convolution with a contiguous memory access pattern. Despite these efforts, the efficiency of PointNet-based methods is still limited since they inherently need to process sparse data, which is more difficult to accelerate [27]. It is noteworthy to mention that the most recent RandLA-Net [15] significantly improves the speed of point cloud processing in the novel use of random sampling.\n\nLarge-scale point-cloud segmentation is challenging since 1) large-scale pointclouds are difficult to annotate and 2) many applications require real-time inference. Since a typical outdoor LiDAR (such as Velodyne HDL-64E) can collect about 200K points per scan, it is difficult for previous methods [22,38,47,26,37,31,29] to satisfy a real-time latency constraint. To address the data challenge, [56,48] proposed tools to label 3D bounding boxes and convert to point-wise segmentation labels. [56,58,62] proposed to train with simulated data. Recently, Behley et al. proposed SemanticKITTI [1], a densely annotated dataset for large-scale point-cloud segmentation. For efficiency, Wu et al. [56] proposed to project 3D point clouds to 2D and transform point-cloud segmentation to image segmentation. Later work [58,1,30] continued to improve the projection-based method, making it a popular choice for large-scale point-cloud segmentation.\n\n\nAdaptive Convolution\n\nStandard convolutions use the same weights to process input features at all spatial locations regardless of the input. Adaptive convolutions may change the weights according to the input and the location in the image. Squeeze-andexcitation and its variants [14,13,51] compute channel-wise or spatial attention to adapt the output feature map. Pixel-adaptive convolution (PAC) [42] changes the convolution weight along the kernel dimension with a Gaussian function. Wang et al. [49] propose to directly re-weight the standard convolution with a depth-aware Gaussian kernel. 3DNConv [5] further extends [49] by estimating depth through an RGB image and using it to improve image segmentation. In our work, we propose a more general framework such that channel-wise attention [14,13], spatial attention [51,58] and PAC [42] can be considered as special cases of spatially-adaptive convolution. In addition to adapting weights, deformable convolutions [6,66] adapt the location to pull features to convolution. DKN [19] combines both deformable convolution and adaptive convolution for joint-image filtering. However, deformable convolution is orthogonal to our proposed method.\n\n\nEfficient Neural Networks\n\nMany applications that involve point-cloud segmentation require real-time inference. To meet this requirement, we not only need to design efficient segmentation pipelines [58], but also efficient neural networks which optimize the parameter size, FLOPs, latency, power, and so on [52].\n\nMany neural nets have been targeted to achieve efficiency, including SqueezeNet [16,10,54], MobileNets [12,39,11], ShiftNet [55,61], ShuffleNet [63,28], FBNet [53,57], ChamNet [7], MnasNet [44], and EfficientNet [45]. Previous work shows that using a more efficient backbone network can effectively improve efficiency in downstream tasks. In this paper, however, in order to rigorously evaluate the performance of spatially-adaptive convolution (SAC), we use the same backbone as RangeNet++ [30].\n\n\nSpherical Projection of LiDAR Point-Cloud\n\nTo process a LiDAR point-cloud efficiently, Wu et al. [56] proposed a pipeline (shown in Figure 1) to project a sparse 3D point cloud to a 2D LiDAR image as\n[ p q ] = [ 1 2 (1 \u2212 arctan(y, x)/\u03c0) \u00b7 w (1 \u2212 (arcsin(z \u00b7 r \u22121 ) + f up ) \u00b7 f \u22121 ) \u00b7 h ],(1)\nwhere (x, y, z) are 3D coordinates, (p, q) are angular coordinates, (h, w) are the height and width of the desired projected 2D map, f = f up +f down is the vertical field-of-view of the LiDAR sensor, and r = x 2 + y 2 + z 2 is the range of each point. For each point projected to (p, q), we use its measurement of (x, y, z, r) and intensity as features and stack them along the channel dimension. This way, we can represent a LiDAR point cloud as a LiDAR image with the shape of (h, w, 5). Point-cloud segmentation can then be reduced to image segmentation, which is typically solved using ConvNets. Despite the apparent similarity between LiDAR and RGB images, we discover that the spatial distribution of RGB features are quite different from (x, y, z, r) features. In Figure 2, we sample nine pixels on images from COCO [25], CI-FAR10 [21] and SemanticKITTI [1] and compare their feature distribution. In COCO and CIFAR10, the feature distribution at different locations are rather similar. For SemanticKITTI, however, feature distribution at each locations are drastically different. Such spatially-varying distribution is caused by the spherical projection in Equation (1). In Figure 3 (top), we plot the mean of x, y, and z channels of LiDAR images. Along the width dimension, we can see the sinusoidal change of x and y channels. Along the height dimension, points projected to the top of the image have higher z-values than the ones projected to the bottom. As we will discuss later, such spatially varying distribution can degrade the performance of convolutions.\n\n\nSpatially-Adaptive Convolution\n\n\nStandard Convolution\n\nPrevious methods based on spherical projection [56,58,30] treat projected LiDAR images as RGB images and process them with standard convolution as\nY [m, p, q] = \u03c3( i,j,n W [m, n, i, j] \u00d7 X[n, p +\u00ee, q +\u0135]),(2)\nwhere Y \u2208 R O\u00d7S\u00d7S is the output tensor, X \u2208 R I\u00d7S\u00d7S denotes the input tensor, and W \u2208 R O\u00d7I\u00d7K\u00d7K is the convolution weight. O, I, S, K are the output channel size, input channel size, image size, and kernel size of the weight, respectively.\ni = i \u2212 K/2 ,\u0135 = j \u2212 K/2 . \u03c3(\u00b7)\nis a non-linear activation function. Convolution is based on a strong inductive bias that the distribution of visual features is invariant to image locations. For RGB images, this is a somewhat valid assumption, as illustrated in Figure 2. Therefore, regardless of the location, a convolution use the same weight W to process the input. This design makes the convolution operation very computationally efficient: First, convolutional layers are efficient in parameter size. Regardless of the input resolution S, a convolutional layer's parameter size remains the same as O \u00d7 I \u00d7 K \u00d7 K. Second, convolution is efficient to compute. In modern computer architectures, loading parameters into memory costs orders-of-magnitude higher energy and latency than floating point operations such as multiplications and additions [33]. For convolutions, we can load the parameter once and re-use for all the input pixels, which significantly improves the latency and power efficiency.\n\nHowever, for LiDAR images, the feature distribution across the image are no longer identical, as illustrated in Figure 2  Top: we visualize the mean value of x, y, and z channels of the projected LiDAR images at different locations. Along the width dimension, we can see the sinusoidal change of the x and y channels. Along the height dimension, we can see z values are higher at the top of the image. Bottom: We visualize the mean activation value of three filters at the 11th layer of a pre-trained RangeNet21 [30].\n\nWe can see that those filters are sparsely activated only in certain areas.\n\nconfirm this, we analyze a trained RangeNet21 [30] by calculating the average filter activation across the image. We can see in Figure 3 (bottom) that convolutional filters are sparsely activated and remain zero in many regions. This validates that convolution filters are spatially under-utilized.\n\n\nSpatially-Adaptive Convolution\n\nTo better process LiDAR images with spatially-varying feature distributions, we re-design convolution to achieve two goals: 1) It should be spatially-adaptive and content-aware. The new operator should process different parts of the image with different filters, and the filters should adapt to feature variations.\n\n2) The new operator should be efficient to compute. To achieve these goals, we propose Spatially-Adaptive Convolution (SAC), which can be described as the following:\nY [m, p, q] = \u03c3( i,j,n W (X 0 )[m, n, p, q, i, j] \u00d7 X[n, p +\u00ee, q +\u0135]).(3)\nW (\u00b7) \u2208 R O\u00d7I\u00d7S\u00d7S\u00d7K\u00d7K is a function of the raw input X 0 . It is spatiallyadaptive, since W depends on the location (p, q). It is content-aware since W  Figure 1.\n\nis a function of the raw input X 0 . Computing W in this general form is very expensive since W contains too many elements to compute.\n\nTo reduce the computational cost, we factorize W as the product of a standard convolution weight and a spatially-adaptive attention map as:\nW [m, n, p, q, i, j] =\u0174 [m, n, i, j] \u00d7 A(X 0 )[m, n, p, q, i, j].(4)\nW \u2208 R O\u00d7I\u00d7S\u00d7S is a standard convolution weight, and A \u2208 R O\u00d7I\u00d7S\u00d7S\u00d7K\u00d7K is the attention map. To reduce the complexity, we collapse several dimensions of A to obtain a smaller attention map to make it computationally tractable. We denote the first dimension of A as the output channel dimension (O), the second as the input channel dimension (I), the 3rd and 4th dimensions as spatial dimensions (S), and the last two dimensions as kernel dimensions (K).\n\nStarting from Equation (4), we name this form of SAC as SAC-OISK, and we re-write A as A OISK , where the subscripts denote the dimensions that are not collapsed to 1. If we collapse the output dimension, we name the variant as SAC-ISK, and the attention map as A ISK \u2208 R 1\u00d7I\u00d7S\u00d7S\u00d7K\u00d7K . SAC-ISK adapts a convolution weight spatially as well as across the kernel and input channel dimensions, as shown in Figure 4a. We can further compress the kernel dimensions to obtain SAC-IS with A IS \u2208 R 1\u00d7I\u00d7S\u00d7S\u00d71\u00d71 , (Figure 4d) and SAC-S with pixel-wise attention as A S \u2208 R 1\u00d71\u00d7S\u00d7S\u00d71\u00d71 (Figure 4b).\n\nAs long as we retain the spatial dimension A, SAC is able to spatially adapt a standard convolution. Experiments show that all variants of SAC effectively improve the performance on the SemanticKITTI dataset.\n\n\nEfficient Computation of SAC\n\nTo efficiently compute an attention map, we feed the raw LiDAR image X 0 into a 7x7 convolution followed by a sigmoid activation. The convolution computes the values of the attention map at each location. The more dimensions to adapt, the more FLOPs and parameter size SAC requires. However, most of the variants of SAC are very efficient. Taking SqueezeSegV3-21 as an example, the cost of adding different SAC variants is summarized in Table 1. The extra FLOPs (2.4% -24.8%) and parameters (1.1% -14.9%) needed by SAC is quite small.\n\nAfter obtaining the attention map, we need to efficiently compute the product of the convolution weight\u0174 , attention map A, and the input X. One choice is to first compute the adaptive weight as Equation (4) and then process the input X. However, the adaptive weight varies per pixel, so we are no longer able to re-use the weight spatially to retain the efficiency of standard convolution.\n\nSo, instead, we first combine the attention map A with the input tensor X. For attention maps without kernel dimensions, such as A S or A IS , we directly perform element-wise multiplication (with broadcasting) between A and X. Then, we apply a standard convolution with weight W on the adapted input. The examples of SAC-S and SAC-IS are illustrated in Figures 4b and 4d respectively. Pseudo-code implementation is provided in the supplementary material.\n\nFor attention maps with kernel dimensions, such as A ISK and A SK , we first perform an unfolding (im2col) operation on X. At each location, we collect nearby K-by-K features and stack them along the channel dimension to get X \u2208 R K 2 I\u00d7S\u00d7S . Then, we can apply element-wise multiplication to combine the attention map A and input X. Next, we reshape weight W \u2208 R O\u00d7I\u00d7K\u00d7K asW \u2208 R O\u00d7K 2 I\u00d71\u00d71 . Finally, the output of Y can be obtained by applying a 1-by-1 convolution withW onX. The computation of SAC-ISK and SAC-SK is shown in Figures 4a and 4c respectively, and the pseudo-code implementation is provided in the supplementary material.\n\nOverall, SAC can be implemented as a series of element-wise multiplications, im2col, reshaping, and standard convolution operations, which are widely supported and well optimized. This ensures that SAC can be computed efficiently.\n\n\nRelationship with Prior Work\n\nSeveral prior works can be seen as variants of a spatially-adaptive convolution, as described by Equations 3 and 4. Squeeze-and-Excitation (SE) [14,13] uses global average pooling and fully-connected layers to compute channel-wise attention to adapt the feature map, as illustrated in Figure 5a. It can be seen as the variant of SAC-I with a attention map of A I \u2208 R 1\u00d7I\u00d71\u00d71\u00d71\u00d71 . The convolutional block attention module (CBAM) [51] can be see as applying A I followed by an A S to adapt the feature map, as shown in Figure 5b. SqueezeSegV2 [58] uses the context-aggregation module (CAM) to combat dropout noises in LiDAR images. At each position, it uses a 7x7 max pooling followed by 1x1 convolutions to compute a channel-wise attention map. It can be seen as the variant SAC-IS with the attention map of A IS \u2208 R 1\u00d7I\u00d7S\u00d7S\u00d71\u00d71 as illustrated in Figure 5c. Pixeladaptive convolution (PAC) [42] uses a Gaussian function to compute kernelwise attention for each pixel. It can be seen as the variant of SAC-SK, with the attention map of A SK \u2208 R 1\u00d71\u00d7S\u00d7S\u00d7K\u00d7K , as illustrated in Figure 5d. Our ablation studies compare variants of SAC, including ones proposed in our paper and in prior work. Experiments show our proposed SAC variants outperform previous baselines.\n\n\nSqueezeSegV3\n\nUsing the spatially-adaptive convolution, we build SqueezeSegV3 for LiDAR point-cloud segmentation. The overview of the model is shown in Figure 1.\n\n\nThe Architecture of SqueezeSegV3\n\nTo facilitate rigorous comparison, SqueezeSegV3's backbone architecture is based on RangeNet [30]. RangeNet contains five stages of convolution, each stage contains several blocks. At the beginning of the stage, it performs downsampling. The output is then upsampled to recover the resolution. Each block of RangeNet contains two stacked convolutions. We replace the first one with SAC-ISK as in Figure 4a. We remove the last two downsampling. To keep the same FLOPs, we reduce the channels of last two stages. The output channel sizes from Stage1  \n\n\nLoss Function\n\nWe introduce a multi-layer cross entropy loss to train the proposed network, which is also used in [40,18,60,32]. During training, from stage1 to stage5, we add a prediction layer at each stage's output. For each output, we respectively downsample the groundtruth label map by 1x, 2x, 4x, 8x and 8x, and use them to train the output of stage1 to stage5. The loss function can be described as\nL = 5 i=1 \u2212 Hi,Wi C c=1 w c \u00b7 y c \u00b7 log(\u0177 c ) H i \u00d7 W i .(5)\nIn the equation, w c = 1 log(fc+ ) is a normalization factor and f c is the frequency of class c. H i , W i are the height and width of the output in i-th stage, y c is the prediction for the c-th class in each pixel and\u0177 c is the label. Compared to the single-stage cross-entropy loss used for the final output, the intermediate supervisions guide the model to form features with more semantic meaning. In addition, they help mitigate the vanishing gradient problem in training.\n\n\nExperiments\n\n\nDataset and Evaluation Metrics\n\nWe conduct our experiments on the SemanticKITTI dataset [1], a large-scale dataset for LiDAR point-cloud segmentation. The dataset contains 21 sequences of point-cloud data with 43,442 densely annotated scans and total 4549 millions points. Following [1], sequences-{0-7} and {9, 10} (19130 scans) are used for training, sequence-08 (4071 scans) is for validation, and sequences-{11-21} (20351 scans) are for test. Following previous work [30], we use mIoU over 19 categories to evaluate the accuracy.\n\n\nImplementation Details\n\nWe pre-process all the points by spherical projection following Equation (1). The 2D LiDAR images are then processed by SqueezeSegV3 to get a 2D predicted label map, which is then restored back to the 3D space. Following previous work [30,56,58], we project all points in a scan to a 64 \u00d7 2048 image. If multiple points are projected to the same pixel on the 2D image, we keep the point with the largest distance. Following RangeNet21 and RangeNet53 in [30], we propose SqueezeSegV3-21 (SSGV3-21) and SqueezeSegV3-53 (SSGV3-53). The model architecture of SSGV3-21 and SSGV3-53 are similar to RangeNet21 and RangNet53 [30], except that we replace regular convolution blocks with SAC blocks. Both models contain 5 stages, each of them has a different input resolution. In SSGV3-21, the 5 stages respectively contain 1, 1, 2, 2, 1 blocks and in SSGV3-53, the 5 stages contain 1, 2, 8, 8, 4 blocks, which are also same as RangeNet21 and RangeNet53, respectively.\n\nWe use the SGD optimizer to end-to-end train the whole model. During training, SSGV3-21 is trained with an initial learning rate of 0.01, SSGV3-53 is trained with an initial learning rate of 0.005. We use the warming up strategy to change the learning rate for 1 epoch. During inference, the original points will be projected and fed into SqueezeSegV3 to get a 2D prediction. Then we adopt the restoration operation to obtain the 3D prediction, as previous work [30,56,58].  11 to 21). SSGV3-21 and SSGV3-53 are the proposed method. Their complexity corresponds to RangeNet21 and RangeNet53 respectively. * means KNN post-processing from RangeNet++ [30], and \u2021 means the CRF post-processing from SqueezeSegV2 used [58]. The first group reports PointNet-based methods. The second reports projection-based methods. The third include our results   \n\n\nComparing with Prior Methods\n\nWe compare two proposed models, SSGV3-21 and SSGV3-53, with previous published work [35,36,22,43,46,56,58,30]. From Table 2, we can see that the proposed SqueezeSegV3 models outperforms all the baselines. Compared with the previous state-of-the-art RangeNet53 [30], SSGV3-53 improves the accuracy by 3.0 mIoU. Moreover, when we apply post-processing KNN refinement following [30] (indicated as *), the proposed SSGV3-53* outperforms RangeNet53* by 3. In terms of speed, SSGV3-21 (16 FPS) is closet RangeNet21 (20 FPS). Even though SSGV3-53 (7 FPS) is slower than RangeNet53 (12 FPS), note that our implementation of SAC is primitive and it can be optimized to achieve further speedup. In comparison, PointNet-based methods [35,36,22,43,46] do not perform well in either accuracy and speed except RandLA-Net [15] which is a new efficient and effective work. \n\n\nAblation Study\n\nWe conduct ablation studies to analyze the performance of SAC with different configurations. Also, we compare it with other related operators to show its effectiveness. To facilitate fast training and experiments, we shrink the LiDAR images to 64 \u00d7 512, and use the shallower model of SSGV3-21 as the starting point. We evaluate the accuracy directly on the projected 2D image, instead of the original 3D points, to make the evaluation faster. We train the models in this section on the training set of SemanticKITTI and report the accuracy on the validation set. We study different variations of SAC, input kernel sizes, and other techniques used in SqueezeSegV3.\n\nVariants of spatially-adaptive convolution: As shown in Figure 4 & 5, spatially-adaptive convolution can have many variation. Some variants are equivalent to or similar with methods proposed by previous papers, including squeezeand-excitation (SE) [14], convolutional block attention maps (CBAM) [51], pixeladaptive convolution (PAC) [42], and context-aggregation module (CAM) [58].\n\nTo understand the effectiveness of SAC variants and previous methods, we swap them into SqueezeSegV3-21. The results are reported in Table. 3. It can be seen that SAC-ISK significantly outperforms all the other settings in term of mIoU. CAM and SAC-IS have the worst performance, which demonstrates the importance of the attention on the kernel dimension. Squeeze-andexcitation (SE) also does not perform well, since SE is not spatially-adaptive, and the global average pooling used in SE ignores the feature distribution shift across the LiDAR image. In comparison, CBAM [51] improves the baseline by 0.8 mIoU. Unlike SE, it also adapts the input feature spatially. This comparison shows that being spatially-adaptive is crucial for processing LiDAR images. Pixel-adaptive convolution (PAC) is similar to the SAC variant of SAC-SK, except that PAC uses a Gaussian function to compute the kernel-wise attention. Experiments show that the proposed SAC-SK slightly outperforms SAC-SK, possibly because SAC-SK adopts a more general and learnable convolution to compute the attention map. Comparing SAC-S and SAC-IS, adding the input channel dimension does not improve the performance. Kernel Sizes of SAC: We use a one-layer convolution to compute the attention map for SAC. However, what should be the kernel size for this convolution? A larger kernel size makes sure that it can capture spatial information around, but it also costs more parameters and MACs. To examine the influence of kernel size, we use different kernel sizes in the SAC convolution. As we can see in Table 4, a 1x1 convolution provides a very strong result that is better than its 3x3 and 5x5 counterparts. 7x7 convolution performs the best.  The effectiveness of other techniques: In addition to SAC, we also introduce several new techniques to SqueezeSegV3, including removing the last two downsample layers and multi-layer loss. We start from the baseline of RangeNet21. First, we remove downsampling layers and reduce the channel sizes of the last two stages to 256 to keep the MACS the same. The performance improves by 3.9 mIoU. After adding the multi-layer loss, the mIoU increases by another 1.5%. Based on the above techniques, adding SAC-ISK further boost mIoU by 2.3%.\n\n\nAppendix\n\nIn this appendix, we provide the pseudo code implementation for SAC variants discussed in Section 4.2, including SAC-S, SAC-IS, SAC-SK and SAC-ISK. \n\nFig. 1 :\n1The framework of SqueezeSegV3. A LiDAR point cloud is projected to generate a LiDAR image, which is then processed by spatially adaptive convolutions (SAC). The network outputs a point-wise prediction that can be restored to label the 3D point cloud. Other variants of SAC can be found inFigure 4.\n\nFig. 3 :\n3and 3 (top). Many features may only exist in local regions of the image, so the filters that are trained to process them are only active in the corresponding regions and are not useful elsewhere. To Channel and filter activation visualization on the SemanticKITTI dataset.\n\nFig. 4 :\n4Variants of spatially-adaptive convolution used in\n\nFig. 5 :\n5Variants of spatially-adaptive convolution from previous work. to Stage5 are 64, 128, 256, 256 and 256 respectively, while the output channel sizes in RangeNet [30] are 64, 128, 256, 512 and 1024. Due to the removal of the last two downsampling operations, we only adopt 3 upsample blocks using transposed convolution and convolution.\n\n\n7 mIoU and achieves the best accuracy in 14 out of 19 categories. Meanwhile, the proposed SSGV3-21 also surpasses RangeNet21 by 1.4 mIoU and the performance is close to RangeNet53* with post-processing. The advantages are more significant for smaller objects, as SSGV3-53* significantly outperforms RangeNet53* by 13.0 IoU, 10.0 IoU, 7.4 IoU and 15.3 IoU in categories of bicycle, other-vehicle, bicyclist and Motorcyclist respectively.\n\n\n(input_feature, coordi_map): # Note: Pseudo code for SAC-IS. attention_map = Conv_attention7x7(coordin_map) # (N, C, H, W) input_feature = input_feature * attention_map # (N, C, H, W) feature = Conv_feature3x3(input_feature) # (N, C, H, W) output_feature = feature+input_feature # (N, C, H, W) return output_feature # (N, C, H, W) def SAC_SK(input_feature, coordi_map): # Note: Pseudo code for SAC-SK. unfold_feature = unfold(input_feature, kernel_size=K, padding=K//2) # (N, C*K*K, H, W) attention_map = Conv_attention7x7(coordin_map) # (N, K*K, H, W) attention_map = attention_map.repeat(1, C, 1, 1) # (N, C*K*K, H, W) input_feature = input_feature * attention_map # (N, C*K*K, H, W) feature = Conv_feature1x1(input_feature) # (N, C, H, W) feature = Conv_feature3x3(feature) # (N, C, H, W) output_feature = feature+input_feature # (N, C, H, W) return output_feature # (N, C, H, W) def SAC_ISK(input_feature, coordi_map): # Note: Pseudo code for SAC-ISK. unfold_feature = unfold(input_feature, kernel_size=K, padding=K//2) # (N, C*K*K, H, W ) attention_map = Conv_attention7x7(coordin_map) # (N, C*K*K, H, W) input_feature = input_feature * attention_map # (N, C*K*K, H, W) feature = Conv_feature1x1(input_feature) # (N, C, H, W) feature = Conv_feature3x3(feature) # (N, C, H, W)\n\n\nThis work was conducted during Chenfeng Xu's visit to University of California, Berkeley.arXiv:2004.01803v1 [cs.CV] 3 Apr 2020 \n2D/3D object detection \n\nTable 1 :\n1Extra parameters and MACs for different SAC variants in \nSqueezeSegV3-21 \n\nMethod O I S K Extra Params (%) Extra MACs (%) \nSAC-S \n1.1 \n2.4 \nSAC-IS \n2.2 \n6.2 \nSAC-SK \n1.9 \n3.1 \nSAC-ISK \n14.9 \n24.8 \n\n\n\nTable 2 :\n2IoU [%] on test set (sequences\n\nTable 3 :\n3mIoU [%] and Accuracy [%] for variants of spatially-adaptive convolution Method Baseline SAC-S SAC-IS SAC-SK SAC-ISK PAC [42] SE [14] CBAM [51] CAM[58] mIoU \n44.0 \n44.9 \n44.0 \n45.4 \n46.3 \n45.2 \n44.2 \n44.8 \n42.1 \nAccuracy 86.8 \n87.6 \n86.9 \n88.2 \n88.6 \n88.2 \n87.0 \n87.5 \n85.8 \n\n\n\nTable 4 :\n4mIoU [%] and Accuracy [%] for different convolution kernel sizes for coordinate map Kernel size baseline 1 \u00d7 1 3 \u00d7 3 5 \u00d7 5 7 \u00d7 7mIoU \n44.0 45.5 44.5 45.4 46.3 \nAccuracy \n86.8 88.4 87.6 88.2 88.6 \n\n\n\nTable 5 :\n5mIoU [%] and Accuracy [%] with downsampling removal, multi-layer loss, and spatially-adaptive convolutionmethod Baseline +DS removal +Multi-layer loss +SAC-ISK \nmIoU \n38.6 \n42.5 (+3.9) \n44.0 (+1.5) \n46.3 (+2.3) \nAccuracy 84.7 \n86.2 (+1.5) \n86.8 (+1.4) \n88.6 (+1.8) \n\n\n\nSemanticKITTI: A Dataset for Semantic Scene Understanding of LiDAR Sequences. J Behley, M Garbade, A Milioto, J Quenzel, S Behnke, C Stachniss, J Gall, Proc. of the IEEE/CVF International Conf. on Computer Vision (ICCV). of the IEEE/CVF International Conf. on Computer Vision (ICCV)Behley, J., Garbade, M., Milioto, A., Quenzel, J., Behnke, S., Stachniss, C., Gall, J.: SemanticKITTI: A Dataset for Semantic Scene Understanding of LiDAR Se- quences. In: Proc. of the IEEE/CVF International Conf. on Computer Vision (ICCV) (2019)\n\nEfficient surfel-based slam using 3d laser range data in urban environments. J Behley, C Stachniss, Robotics: Science and Systems. Behley, J., Stachniss, C.: Efficient surfel-based slam using 3d laser range data in urban environments. In: Robotics: Science and Systems (2018)\n\nMulti-view 3d object detection network for autonomous driving. X Chen, H Ma, J Wan, B Li, T Xia, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionChen, X., Ma, H., Wan, J., Li, B., Xia, T.: Multi-view 3d object detection network for autonomous driving. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 1907-1915 (2017)\n\nSuma++: Efficient lidar-based semantic slam. X Chen, A Milioto, E Palazzolo, P Gigu\u00e8re, J Behley, C Stachniss, 2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS). IEEEChen, X., Milioto, A., Palazzolo, E., Gigu\u00e8re, P., Behley, J., Stachniss, C.: Suma++: Efficient lidar-based semantic slam. In: 2019 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS). pp. 4530-4537. IEEE (2019)\n\n3d neighborhood convolution: Learning depthaware features for rgb-d and rgb semantic segmentation. Y Chen, T Mensink, E Gavves, 2019 International Conference on 3D Vision (3DV). IEEEChen, Y., Mensink, T., Gavves, E.: 3d neighborhood convolution: Learning depth- aware features for rgb-d and rgb semantic segmentation. In: 2019 International Conference on 3D Vision (3DV). pp. 173-182. IEEE (2019)\n\nDeformable convolutional networks. J Dai, H Qi, Y Xiong, Y Li, G Zhang, H Hu, Y Wei, Proceedings of the IEEE international conference on computer vision. the IEEE international conference on computer visionDai, J., Qi, H., Xiong, Y., Li, Y., Zhang, G., Hu, H., Wei, Y.: Deformable convolu- tional networks. In: Proceedings of the IEEE international conference on computer vision. pp. 764-773 (2017)\n\nChamnet: Towards efficient network design through platformaware model adaptation. X Dai, P Zhang, B Wu, H Yin, F Sun, Y Wang, M Dukhan, Y Hu, Y Wu, Y Jia, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionDai, X., Zhang, P., Wu, B., Yin, H., Sun, F., Wang, Y., Dukhan, M., Hu, Y., Wu, Y., Jia, Y., et al.: Chamnet: Towards efficient network design through platform- aware model adaptation. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 11398-11407 (2019)\n\nLearning to sample. O Dovrat, I Lang, S Avidan, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionDovrat, O., Lang, I., Avidan, S.: Learning to sample. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 2760-2769 (2019)\n\nVision meets robotics: The kitti dataset. A Geiger, P Lenz, C Stiller, R Urtasun, The International Journal of Robotics Research. 3211Geiger, A., Lenz, P., Stiller, C., Urtasun, R.: Vision meets robotics: The kitti dataset. The International Journal of Robotics Research 32(11), 1231-1237 (2013)\n\nSqueezenext: Hardware-aware neural network design. A Gholami, K Kwon, B Wu, Z Tai, X Yue, P Jin, S Zhao, K Keutzer, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops. the IEEE Conference on Computer Vision and Pattern Recognition WorkshopsGholami, A., Kwon, K., Wu, B., Tai, Z., Yue, X., Jin, P., Zhao, S., Keutzer, K.: Squeezenext: Hardware-aware neural network design. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops. pp. 1638- 1647 (2018)\n\nSearching for mobilenetv3. A Howard, M Sandler, G Chu, L C Chen, B Chen, M Tan, W Wang, Y Zhu, R Pang, V Vasudevan, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionHoward, A., Sandler, M., Chu, G., Chen, L.C., Chen, B., Tan, M., Wang, W., Zhu, Y., Pang, R., Vasudevan, V., et al.: Searching for mobilenetv3. In: Proceedings of the IEEE International Conference on Computer Vision. pp. 1314-1324 (2019)\n\nA G Howard, M Zhu, B Chen, D Kalenichenko, W Wang, T Weyand, M Andreetto, H Adam, arXiv:1704.04861Mobilenets: Efficient convolutional neural networks for mobile vision applications. arXiv preprintHoward, A.G., Zhu, M., Chen, B., Kalenichenko, D., Wang, W., Weyand, T., An- dreetto, M., Adam, H.: Mobilenets: Efficient convolutional neural networks for mobile vision applications. arXiv preprint arXiv:1704.04861 (2017)\n\nGather-excite: Exploiting feature context in convolutional neural networks. J Hu, L Shen, S Albanie, G Sun, A Vedaldi, Advances in Neural Information Processing Systems. Hu, J., Shen, L., Albanie, S., Sun, G., Vedaldi, A.: Gather-excite: Exploiting fea- ture context in convolutional neural networks. In: Advances in Neural Information Processing Systems. pp. 9401-9411 (2018)\n\nSqueeze-and-excitation networks. J Hu, L Shen, G Sun, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionHu, J., Shen, L., Sun, G.: Squeeze-and-excitation networks. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 7132-7141 (2018)\n\nRandla-net: Efficient semantic segmentation of large-scale point clouds. Q Hu, B Yang, L Xie, S Rosa, Y Guo, Z Wang, N Trigoni, A Markham, arXiv:1911.11236arXiv preprintHu, Q., Yang, B., Xie, L., Rosa, S., Guo, Y., Wang, Z., Trigoni, N., Markham, A.: Randla-net: Efficient semantic segmentation of large-scale point clouds. arXiv preprint arXiv:1911.11236 (2019)\n\nF N Iandola, S Han, M W Moskewicz, K Ashraf, W J Dally, K Keutzer, arXiv:1602.07360Squeezenet: Alexnet-level accuracy with 50x fewer parameters and\u00a1 0.5 mb model size. arXiv preprintIandola, F.N., Han, S., Moskewicz, M.W., Ashraf, K., Dally, W.J., Keutzer, K.: Squeezenet: Alexnet-level accuracy with 50x fewer parameters and\u00a1 0.5 mb model size. arXiv preprint arXiv:1602.07360 (2016)\n\nxmuda: Cross-modal unsupervised domain adaptation for 3d semantic segmentation. M Jaritz, T H Vu, R De Charette, Milie Wirbel, P Prez, Jaritz, M., Vu, T.H., de Charette, R., milie Wirbel, Prez, P.: xmuda: Cross-modal unsupervised domain adaptation for 3d semantic segmentation (2019)\n\nPerceptual losses for real-time style transfer and super-resolution. J Johnson, A Alahi, L Fei-Fei, European conference on computer vision. SpringerJohnson, J., Alahi, A., Fei-Fei, L.: Perceptual losses for real-time style transfer and super-resolution. In: European conference on computer vision. pp. 694-711. Springer (2016)\n\nB Kim, J Ponce, B Ham, arXiv:1910.08373Deformable kernel networks for joint image filtering. arXiv preprintKim, B., Ponce, J., Ham, B.: Deformable kernel networks for joint image filtering. arXiv preprint arXiv:1910.08373 (2019)\n\nEscape from cells: Deep kd-networks for the recognition of 3d point cloud models. R Klokov, V Lempitsky, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionKlokov, R., Lempitsky, V.: Escape from cells: Deep kd-networks for the recognition of 3d point cloud models. In: Proceedings of the IEEE International Conference on Computer Vision. pp. 863-872 (2017)\n\nA Krizhevsky, G Hinton, Learning multiple layers of features from tiny images. Krizhevsky, A., Hinton, G., et al.: Learning multiple layers of features from tiny images (2009)\n\nLarge-scale point cloud semantic segmentation with superpoint graphs. L Landrieu, M Simonovsky, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionLandrieu, L., Simonovsky, M.: Large-scale point cloud semantic segmentation with superpoint graphs. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 4558-4567 (2018)\n\nSo-net: Self-organizing network for point cloud analysis. J Li, B M Chen, Hee Lee, G , Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionLi, J., Chen, B.M., Hee Lee, G.: So-net: Self-organizing network for point cloud analysis. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 9397-9406 (2018)\n\nPointcnn: Convolution on xtransformed points. Y Li, R Bu, M Sun, W Wu, X Di, B Chen, Advances in neural information processing systems. Li, Y., Bu, R., Sun, M., Wu, W., Di, X., Chen, B.: Pointcnn: Convolution on x- transformed points. In: Advances in neural information processing systems. pp. 820-830 (2018)\n\nMicrosoft coco: Common objects in context. T Y Lin, M Maire, S Belongie, J Hays, P Perona, D Ramanan, P Doll\u00e1r, C L Zitnick, European conference on computer vision. SpringerLin, T.Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Doll\u00e1r, P., Zitnick, C.L.: Microsoft coco: Common objects in context. In: European conference on computer vision. pp. 740-755. Springer (2014)\n\n3dcnn-dqn-rnn: A deep reinforcement learning framework for semantic parsing of large-scale 3d point clouds. F Liu, S Li, L Zhang, C Zhou, R Ye, Y Wang, J Lu, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionLiu, F., Li, S., Zhang, L., Zhou, C., Ye, R., Wang, Y., Lu, J.: 3dcnn-dqn-rnn: A deep reinforcement learning framework for semantic parsing of large-scale 3d point clouds. In: Proceedings of the IEEE International Conference on Computer Vision. pp. 5678-5687 (2017)\n\nPoint-voxel cnn for efficient 3d deep learning. Z Liu, H Tang, Y Lin, S Han, Advances in Neural Information Processing Systems. Liu, Z., Tang, H., Lin, Y., Han, S.: Point-voxel cnn for efficient 3d deep learning. In: Advances in Neural Information Processing Systems. pp. 963-973 (2019)\n\nShufflenet v2: Practical guidelines for efficient cnn architecture design. N Ma, X Zhang, H T Zheng, J Sun, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Ma, N., Zhang, X., Zheng, H.T., Sun, J.: Shufflenet v2: Practical guidelines for efficient cnn architecture design. In: Proceedings of the European Conference on Computer Vision (ECCV). pp. 116-131 (2018)\n\nVv-net: Voxel vae net with group convolutions for point cloud segmentation. H Y Meng, L Gao, Y K Lai, D Manocha, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionMeng, H.Y., Gao, L., Lai, Y.K., Manocha, D.: Vv-net: Voxel vae net with group convolutions for point cloud segmentation. In: Proceedings of the IEEE Interna- tional Conference on Computer Vision. pp. 8500-8508 (2019)\n\nRangenet++: Fast and accurate lidar semantic segmentation. A Milioto, I Vizzo, J Behley, C Stachniss, Proc. of the IEEE/RSJ Intl. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Intl. Conf. on Intelligent Robots and Systems (IROS)Milioto, A., Vizzo, I., Behley, J., Stachniss, C.: Rangenet++: Fast and accurate lidar semantic segmentation. In: Proc. of the IEEE/RSJ Intl. Conf. on Intelligent Robots and Systems (IROS) (2019)\n\nPartnet: A large-scale benchmark for fine-grained and hierarchical part-level 3d object understanding. K Mo, S Zhu, A X Chang, L Yi, S Tripathi, L J Guibas, H Su, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionMo, K., Zhu, S., Chang, A.X., Yi, L., Tripathi, S., Guibas, L.J., Su, H.: Part- net: A large-scale benchmark for fine-grained and hierarchical part-level 3d object understanding. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 909-918 (2019)\n\nStacked hourglass networks for human pose estimation. A Newell, K Yang, J Deng, European conference on computer vision. SpringerNewell, A., Yang, K., Deng, J.: Stacked hourglass networks for human pose esti- mation. In: European conference on computer vision. pp. 483-499. Springer (2016)\n\nDark memory and accelerator-rich system optimization in the dark silicon era. A Pedram, S Richardson, M Horowitz, S Galal, S Kvatinsky, IEEE Design & Test. 342Pedram, A., Richardson, S., Horowitz, M., Galal, S., Kvatinsky, S.: Dark memory and accelerator-rich system optimization in the dark silicon era. IEEE Design & Test 34(2), 39-50 (2016)\n\nFrustum pointnets for 3d object detection from rgb-d data. C R Qi, W Liu, C Wu, H Su, L J Guibas, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionQi, C.R., Liu, W., Wu, C., Su, H., Guibas, L.J.: Frustum pointnets for 3d object detection from rgb-d data. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 918-927 (2018)\n\nPointnet: Deep learning on point sets for 3d classification and segmentation. C R Qi, H Su, K Mo, L J Guibas, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionQi, C.R., Su, H., Mo, K., Guibas, L.J.: Pointnet: Deep learning on point sets for 3d classification and segmentation. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 652-660 (2017)\n\nPointnet++: Deep hierarchical feature learning on point sets in a metric space. C R Qi, L Yi, H Su, L J Guibas, Advances in neural information processing systems. Qi, C.R., Yi, L., Su, H., Guibas, L.J.: Pointnet++: Deep hierarchical feature learn- ing on point sets in a metric space. In: Advances in neural information processing systems. pp. 5099-5108 (2017)\n\nFully-convolutional point networks for large-scale point clouds. D Rethage, J Wald, J Sturm, N Navab, F Tombari, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Rethage, D., Wald, J., Sturm, J., Navab, N., Tombari, F.: Fully-convolutional point networks for large-scale point clouds. In: Proceedings of the European Conference on Computer Vision (ECCV). pp. 596-611 (2018)\n\nOctnet: Learning deep 3d representations at high resolutions. G Riegler, A Osman Ulusoy, A Geiger, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionRiegler, G., Osman Ulusoy, A., Geiger, A.: Octnet: Learning deep 3d representa- tions at high resolutions. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 3577-3586 (2017)\n\nM Sandler, A Howard, M Zhu, A Zhmoginov, L C Chen, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionMobilenetv2: Inverted residuals and linear bottlenecksSandler, M., Howard, A., Zhu, M., Zhmoginov, A., Chen, L.C.: Mobilenetv2: In- verted residuals and linear bottlenecks. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 4510-4520 (2018)\n\nMulti-stage multi-recursiveinput fully convolutional networks for neuronal boundary detection. W Shen, B Wang, Y Jiang, Y Wang, A Yuille, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionShen, W., Wang, B., Jiang, Y., Wang, Y., Yuille, A.: Multi-stage multi-recursive- input fully convolutional networks for neuronal boundary detection. In: Proceed- ings of the IEEE International Conference on Computer Vision. pp. 2391-2400 (2017)\n\nDeep sliding shapes for amodal 3d object detection in rgb-d images. S Song, J Xiao, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionSong, S., Xiao, J.: Deep sliding shapes for amodal 3d object detection in rgb-d images. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 808-816 (2016)\n\nPixeladaptive convolutional neural networks. H Su, V Jampani, D Sun, O Gallo, E Learned-Miller, J Kautz, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionSu, H., Jampani, V., Sun, D., Gallo, O., Learned-Miller, E., Kautz, J.: Pixel- adaptive convolutional neural networks. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 11166-11175 (2019)\n\nSplatnet: Sparse lattice networks for point cloud processing. H Su, V Jampani, D Sun, S Maji, E Kalogerakis, M H Yang, J Kautz, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionSu, H., Jampani, V., Sun, D., Maji, S., Kalogerakis, E., Yang, M.H., Kautz, J.: Splatnet: Sparse lattice networks for point cloud processing. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 2530-2539 (2018)\n\nMnasnet: Platform-aware neural architecture search for mobile. M Tan, B Chen, R Pang, V Vasudevan, M Sandler, A Howard, Q V Le, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionTan, M., Chen, B., Pang, R., Vasudevan, V., Sandler, M., Howard, A., Le, Q.V.: Mnasnet: Platform-aware neural architecture search for mobile. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 2820-2828 (2019)\n\nM Tan, Q V Le, arXiv:1905.11946Efficientnet: Rethinking model scaling for convolutional neural networks. arXiv preprintTan, M., Le, Q.V.: Efficientnet: Rethinking model scaling for convolutional neural networks. arXiv preprint arXiv:1905.11946 (2019)\n\nTangent convolutions for dense prediction in 3d. M Tatarchenko, J Park, V Koltun, Q Y Zhou, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionTatarchenko, M., Park, J., Koltun, V., Zhou, Q.Y.: Tangent convolutions for dense prediction in 3d. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 3887-3896 (2018)\n\nSegcloud: Semantic segmentation of 3d point clouds. L Tchapmi, C Choy, I Armeni, J Gwak, S Savarese, 2017 international conference on 3D vision (3DV). IEEETchapmi, L., Choy, C., Armeni, I., Gwak, J., Savarese, S.: Segcloud: Semantic segmentation of 3d point clouds. In: 2017 international conference on 3D vision (3DV). pp. 537-547. IEEE (2017)\n\nLatte: accelerating lidar point cloud annotation via sensor fusion, one-click annotation, and tracking. B Wang, V Wu, B Wu, K Keutzer, 2019 IEEE Intelligent Transportation Systems Conference (ITSC). IEEEWang, B., Wu, V., Wu, B., Keutzer, K.: Latte: accelerating lidar point cloud an- notation via sensor fusion, one-click annotation, and tracking. In: 2019 IEEE In- telligent Transportation Systems Conference (ITSC). pp. 265-272. IEEE (2019)\n\nDepth-aware cnn for rgb-d segmentation. W Wang, U Neumann, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Wang, W., Neumann, U.: Depth-aware cnn for rgb-d segmentation. In: Proceedings of the European Conference on Computer Vision (ECCV). pp. 135-150 (2018)\n\nDynamic graph cnn for learning on point clouds. Y Wang, Y Sun, Z Liu, S E Sarma, M M Bronstein, J M Solomon, ACM Transactions on Graphics (TOG). 385Wang, Y., Sun, Y., Liu, Z., Sarma, S.E., Bronstein, M.M., Solomon, J.M.: Dynamic graph cnn for learning on point clouds. ACM Transactions on Graphics (TOG) 38(5), 1-12 (2019)\n\nCbam: Convolutional block attention module. S Woo, J Park, J Y Lee, I So Kweon, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Woo, S., Park, J., Lee, J.Y., So Kweon, I.: Cbam: Convolutional block attention module. In: Proceedings of the European Conference on Computer Vision (ECCV). pp. 3-19 (2018)\n\nB Wu, arXiv:1908.08926Efficient deep neural networks. arXiv preprintWu, B.: Efficient deep neural networks. arXiv preprint arXiv:1908.08926 (2019)\n\nFbnet: Hardware-aware efficient convnet design via differentiable neural architecture search. B Wu, X Dai, P Zhang, Y Wang, F Sun, Y Wu, Y Tian, P Vajda, Y Jia, K Keutzer, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionWu, B., Dai, X., Zhang, P., Wang, Y., Sun, F., Wu, Y., Tian, Y., Vajda, P., Jia, Y., Keutzer, K.: Fbnet: Hardware-aware efficient convnet design via differentiable neural architecture search. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 10734-10742 (2019)\n\nSqueezedet: Unified, small, low power fully convolutional neural networks for real-time object detection for autonomous driving. B Wu, F Iandola, P H Jin, K Keutzer, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops. the IEEE Conference on Computer Vision and Pattern Recognition WorkshopsWu, B., Iandola, F., Jin, P.H., Keutzer, K.: Squeezedet: Unified, small, low power fully convolutional neural networks for real-time object detection for autonomous driving. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition Workshops. pp. 129-137 (2017)\n\nShift: A zero flop, zero parameter alternative to spatial convolutions. B Wu, A Wan, X Yue, P Jin, S Zhao, N Golmant, A Gholaminejad, J Gonzalez, K Keutzer, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionWu, B., Wan, A., Yue, X., Jin, P., Zhao, S., Golmant, N., Gholaminejad, A., Gonzalez, J., Keutzer, K.: Shift: A zero flop, zero parameter alternative to spatial convolutions. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 9127-9135 (2018)\n\nSqueezeseg: Convolutional neural nets with recurrent crf for real-time road-object segmentation from 3d lidar point cloud. B Wu, A Wan, X Yue, K Keutzer, ICRA. Wu, B., Wan, A., Yue, X., Keutzer, K.: Squeezeseg: Convolutional neural nets with recurrent crf for real-time road-object segmentation from 3d lidar point cloud. ICRA (2018)\n\nMixed precision quantization of convnets via differentiable neural architecture search. B Wu, Y Wang, P Zhang, Y Tian, P Vajda, K Keutzer, arXiv:1812.00090arXiv preprintWu, B., Wang, Y., Zhang, P., Tian, Y., Vajda, P., Keutzer, K.: Mixed preci- sion quantization of convnets via differentiable neural architecture search. arXiv preprint arXiv:1812.00090 (2018)\n\nSqueezesegv2: Improved model structure and unsupervised domain adaptation for road-object segmentation from a lidar point cloud. B Wu, X Zhou, S Zhao, X Yue, K Keutzer, ICRAWu, B., Zhou, X., Zhao, S., Yue, X., Keutzer, K.: Squeezesegv2: Improved model structure and unsupervised domain adaptation for road-object segmentation from a lidar point cloud. In: ICRA (2019)\n\nA review of point cloud semantic segmentation. Y Xie, J Tian, X X Zhu, arXiv:1908.08854arXiv preprintXie, Y., Tian, J., Zhu, X.X.: A review of point cloud semantic segmentation. arXiv preprint arXiv:1908.08854 (2019)\n\nLearn to scale: Generating multipolar normalized density maps for crowd counting. C Xu, K Qiu, J Fu, S Bai, Y Xu, X Bai, Proceedings of the IEEE International Conference on Computer Vision. the IEEE International Conference on Computer VisionXu, C., Qiu, K., Fu, J., Bai, S., Xu, Y., Bai, X.: Learn to scale: Generating mul- tipolar normalized density maps for crowd counting. In: Proceedings of the IEEE International Conference on Computer Vision. pp. 8382-8390 (2019)\n\nSynetgy: Algorithm-hardware codesign for convnet accelerators on embedded fpgas. Y Yang, Q Huang, B Wu, T Zhang, L Ma, G Gambardella, M Blott, L Lavagno, K Vissers, J Wawrzynek, Proceedings of the 2019. the 2019Yang, Y., Huang, Q., Wu, B., Zhang, T., Ma, L., Gambardella, G., Blott, M., Lavagno, L., Vissers, K., Wawrzynek, J., et al.: Synetgy: Algorithm-hardware co- design for convnet accelerators on embedded fpgas. In: Proceedings of the 2019\n\nACM/SIGDA International Symposium on Field-Programmable Gate Arrays. ACM/SIGDA International Symposium on Field-Programmable Gate Arrays. pp. 23-32 (2019)\n\nA lidar point cloud generator: from a virtual world to autonomous driving. X Yue, B Wu, S A Seshia, K Keutzer, A L Sangiovanni-Vincentelli, Proceedings of the 2018 ACM on International Conference on Multimedia Retrieval. the 2018 ACM on International Conference on Multimedia RetrievalYue, X., Wu, B., Seshia, S.A., Keutzer, K., Sangiovanni-Vincentelli, A.L.: A lidar point cloud generator: from a virtual world to autonomous driving. In: Proceedings of the 2018 ACM on International Conference on Multimedia Retrieval. pp. 458- 464 (2018)\n\nShufflenet: An extremely efficient convolutional neural network for mobile devices. X Zhang, X Zhou, M Lin, J Sun, Proceedings of the IEEE conference on computer vision and pattern recognition. the IEEE conference on computer vision and pattern recognitionZhang, X., Zhou, X., Lin, M., Sun, J.: Shufflenet: An extremely efficient convolu- tional neural network for mobile devices. In: Proceedings of the IEEE conference on computer vision and pattern recognition. pp. 6848-6856 (2018)\n\nEnd-to-end multi-view fusion for 3d object detection in lidar point clouds. Y Zhou, P Sun, Y Zhang, D Anguelov, J Gao, T Ouyang, J Guo, J Ngiam, V Vasudevan, arXiv:1910.06528arXiv preprintZhou, Y., Sun, P., Zhang, Y., Anguelov, D., Gao, J., Ouyang, T., Guo, J., Ngiam, J., Vasudevan, V.: End-to-end multi-view fusion for 3d object detection in lidar point clouds. arXiv preprint arXiv:1910.06528 (2019)\n\nVoxelnet: End-to-end learning for point cloud based 3d object detection. Y Zhou, O Tuzel, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionZhou, Y., Tuzel, O.: Voxelnet: End-to-end learning for point cloud based 3d object detection. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 4490-4499 (2018)\n\nDeformable convnets v2: More deformable, better results. X Zhu, H Hu, S Lin, J Dai, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. the IEEE Conference on Computer Vision and Pattern RecognitionZhu, X., Hu, H., Lin, S., Dai, J.: Deformable convnets v2: More deformable, better results. In: Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. pp. 9308-9316 (2019)\n\n. C Output_Feature = Feature+input_Feature # (n, H , W ) Return Output_Feature # (n, C , H , W ) , output_feature = feature+input_feature # (N, C, H, W) return output_feature # (N, C, H, W)\n", "annotations": {"author": "[{\"end\":170,\"start\":87},{\"end\":196,\"start\":171},{\"end\":244,\"start\":197},{\"end\":289,\"start\":245},{\"end\":331,\"start\":290},{\"end\":401,\"start\":332},{\"end\":481,\"start\":402}]", "publisher": null, "author_last_name": "[{\"end\":98,\"start\":96},{\"end\":180,\"start\":178},{\"end\":208,\"start\":204},{\"end\":253,\"start\":249},{\"end\":301,\"start\":296},{\"end\":344,\"start\":337},{\"end\":420,\"start\":412}]", "author_first_name": "[{\"end\":95,\"start\":87},{\"end\":177,\"start\":171},{\"end\":203,\"start\":197},{\"end\":248,\"start\":245},{\"end\":295,\"start\":290},{\"end\":336,\"start\":332},{\"end\":411,\"start\":402}]", "author_affiliation": "[{\"end\":169,\"start\":123},{\"end\":195,\"start\":182},{\"end\":243,\"start\":210},{\"end\":288,\"start\":255},{\"end\":330,\"start\":317},{\"end\":400,\"start\":367},{\"end\":480,\"start\":447}]", "title": "[{\"end\":84,\"start\":1},{\"end\":565,\"start\":482}]", "venue": null, "abstract": "[{\"end\":1968,\"start\":623}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b58\"},\"end\":2039,\"start\":2035},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2074,\"start\":2071},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":2077,\"start\":2074},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2079,\"start\":2077},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":2301,\"start\":2297},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2303,\"start\":2301},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":2306,\"start\":2303},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":2309,\"start\":2306},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":2334,\"start\":2330},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":2337,\"start\":2334},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2380,\"start\":2377},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2382,\"start\":2380},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":2416,\"start\":2412},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":2419,\"start\":2416},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":2422,\"start\":2419},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":2822,\"start\":2818},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":3095,\"start\":3091},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":3098,\"start\":3095},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":3718,\"start\":3714},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":3721,\"start\":3718},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":4513,\"start\":4509},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4527,\"start\":4523},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4549,\"start\":4546},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6677,\"start\":6673},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":6727,\"start\":6723},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":6766,\"start\":6762},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":6809,\"start\":6805},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":7622,\"start\":7618},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":7625,\"start\":7622},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":7637,\"start\":7633},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7657,\"start\":7653},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":7713,\"start\":7709},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7782,\"start\":7779},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7785,\"start\":7782},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":7788,\"start\":7785},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":7926,\"start\":7922},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":7981,\"start\":7977},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":7984,\"start\":7981},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":8230,\"start\":8226},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":8296,\"start\":8292},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8697,\"start\":8693},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":8700,\"start\":8697},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":8703,\"start\":8700},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":8706,\"start\":8703},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":8709,\"start\":8706},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":8712,\"start\":8709},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":8715,\"start\":8712},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":8794,\"start\":8790},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":8797,\"start\":8794},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":8891,\"start\":8887},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":8894,\"start\":8891},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":8897,\"start\":8894},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":8987,\"start\":8984},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":9089,\"start\":9085},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":9209,\"start\":9205},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9211,\"start\":9209},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9214,\"start\":9211},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9619,\"start\":9615},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":9622,\"start\":9619},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":9625,\"start\":9622},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":9738,\"start\":9734},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":9839,\"start\":9835},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":9942,\"start\":9939},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":9963,\"start\":9959},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":10135,\"start\":10131},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":10138,\"start\":10135},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":10162,\"start\":10158},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":10165,\"start\":10162},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":10178,\"start\":10174},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":10309,\"start\":10306},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":10312,\"start\":10309},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":10373,\"start\":10369},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":10737,\"start\":10733},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":10846,\"start\":10842},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":10933,\"start\":10929},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10936,\"start\":10933},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":10939,\"start\":10936},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":10956,\"start\":10952},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":10959,\"start\":10956},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":10962,\"start\":10959},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":10977,\"start\":10973},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":10980,\"start\":10977},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":10997,\"start\":10993},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":11000,\"start\":10997},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":11012,\"start\":11008},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":11015,\"start\":11012},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":11028,\"start\":11025},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":11042,\"start\":11038},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":11065,\"start\":11061},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":11344,\"start\":11340},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":11449,\"start\":11445},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":12469,\"start\":12465},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":12484,\"start\":12480},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":12506,\"start\":12503},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":13323,\"start\":13319},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":13326,\"start\":13323},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":13329,\"start\":13326},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":14574,\"start\":14570},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":15242,\"start\":15238},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":15372,\"start\":15368},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":20441,\"start\":20437},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":20444,\"start\":20441},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":20726,\"start\":20722},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":20839,\"start\":20835},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":21187,\"start\":21183},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":21853,\"start\":21849},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":22426,\"start\":22422},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":22429,\"start\":22426},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":22432,\"start\":22429},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":22435,\"start\":22432},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":23363,\"start\":23360},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":23558,\"start\":23555},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":23747,\"start\":23743},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":24071,\"start\":24067},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":24074,\"start\":24071},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":24077,\"start\":24074},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":24289,\"start\":24285},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":24453,\"start\":24449},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":25258,\"start\":25254},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":25261,\"start\":25258},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":25264,\"start\":25261},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":25445,\"start\":25441},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":25510,\"start\":25506},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":25758,\"start\":25754},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":25761,\"start\":25758},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":25764,\"start\":25761},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":25767,\"start\":25764},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":25770,\"start\":25767},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":25773,\"start\":25770},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":25776,\"start\":25773},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":25779,\"start\":25776},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":25934,\"start\":25930},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":26049,\"start\":26045},{\"end\":26157,\"start\":26149},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":26397,\"start\":26393},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":26400,\"start\":26397},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":26403,\"start\":26400},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":26406,\"start\":26403},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":26409,\"start\":26406},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":26481,\"start\":26477},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":27464,\"start\":27460},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":27512,\"start\":27508},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":27550,\"start\":27546},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":27593,\"start\":27589},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":28172,\"start\":28168},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":33301,\"start\":33297}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":30315,\"start\":30007},{\"attributes\":{\"id\":\"fig_1\"},\"end\":30599,\"start\":30316},{\"attributes\":{\"id\":\"fig_2\"},\"end\":30661,\"start\":30600},{\"attributes\":{\"id\":\"fig_4\"},\"end\":31007,\"start\":30662},{\"attributes\":{\"id\":\"fig_6\"},\"end\":31446,\"start\":31008},{\"attributes\":{\"id\":\"fig_7\"},\"end\":32729,\"start\":31447},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":32883,\"start\":32730},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33094,\"start\":32884},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":33137,\"start\":33095},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":33426,\"start\":33138},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":33636,\"start\":33427},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":33916,\"start\":33637}]", "paragraph": "[{\"end\":2823,\"start\":1984},{\"end\":4347,\"start\":2825},{\"end\":4740,\"start\":4349},{\"end\":5855,\"start\":4742},{\"end\":6567,\"start\":5857},{\"end\":6951,\"start\":6569},{\"end\":7258,\"start\":6953},{\"end\":8392,\"start\":7302},{\"end\":9333,\"start\":8394},{\"end\":10532,\"start\":9358},{\"end\":10847,\"start\":10562},{\"end\":11345,\"start\":10849},{\"end\":11547,\"start\":11391},{\"end\":13214,\"start\":11641},{\"end\":13418,\"start\":13272},{\"end\":13720,\"start\":13481},{\"end\":14724,\"start\":13753},{\"end\":15243,\"start\":14726},{\"end\":15320,\"start\":15245},{\"end\":15620,\"start\":15322},{\"end\":15969,\"start\":15655},{\"end\":16136,\"start\":15971},{\"end\":16373,\"start\":16211},{\"end\":16509,\"start\":16375},{\"end\":16650,\"start\":16511},{\"end\":17172,\"start\":16720},{\"end\":17762,\"start\":17174},{\"end\":17972,\"start\":17764},{\"end\":18539,\"start\":18005},{\"end\":18931,\"start\":18541},{\"end\":19388,\"start\":18933},{\"end\":20028,\"start\":19390},{\"end\":20260,\"start\":20030},{\"end\":21555,\"start\":20293},{\"end\":21719,\"start\":21572},{\"end\":22305,\"start\":21756},{\"end\":22714,\"start\":22323},{\"end\":23255,\"start\":22776},{\"end\":23805,\"start\":23304},{\"end\":24790,\"start\":23832},{\"end\":25637,\"start\":24792},{\"end\":26527,\"start\":25670},{\"end\":27210,\"start\":26546},{\"end\":27594,\"start\":27212},{\"end\":29845,\"start\":27596},{\"end\":30006,\"start\":29858}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":11640,\"start\":11548},{\"attributes\":{\"id\":\"formula_1\"},\"end\":13480,\"start\":13419},{\"attributes\":{\"id\":\"formula_2\"},\"end\":13752,\"start\":13721},{\"attributes\":{\"id\":\"formula_3\"},\"end\":16210,\"start\":16137},{\"attributes\":{\"id\":\"formula_4\"},\"end\":16719,\"start\":16651},{\"attributes\":{\"id\":\"formula_5\"},\"end\":22775,\"start\":22715}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":18449,\"start\":18442},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":25793,\"start\":25786},{\"end\":27735,\"start\":27729},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":29173,\"start\":29166}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1982,\"start\":1970},{\"attributes\":{\"n\":\"2\"},\"end\":7273,\"start\":7261},{\"attributes\":{\"n\":\"2.1\"},\"end\":7300,\"start\":7276},{\"attributes\":{\"n\":\"2.2\"},\"end\":9356,\"start\":9336},{\"attributes\":{\"n\":\"2.3\"},\"end\":10560,\"start\":10535},{\"attributes\":{\"n\":\"3\"},\"end\":11389,\"start\":11348},{\"attributes\":{\"n\":\"4\"},\"end\":13247,\"start\":13217},{\"attributes\":{\"n\":\"4.1\"},\"end\":13270,\"start\":13250},{\"attributes\":{\"n\":\"4.2\"},\"end\":15653,\"start\":15623},{\"attributes\":{\"n\":\"4.3\"},\"end\":18003,\"start\":17975},{\"attributes\":{\"n\":\"4.4\"},\"end\":20291,\"start\":20263},{\"attributes\":{\"n\":\"5\"},\"end\":21570,\"start\":21558},{\"attributes\":{\"n\":\"5.1\"},\"end\":21754,\"start\":21722},{\"attributes\":{\"n\":\"5.2\"},\"end\":22321,\"start\":22308},{\"attributes\":{\"n\":\"6\"},\"end\":23269,\"start\":23258},{\"attributes\":{\"n\":\"6.1\"},\"end\":23302,\"start\":23272},{\"attributes\":{\"n\":\"6.2\"},\"end\":23830,\"start\":23808},{\"attributes\":{\"n\":\"6.3\"},\"end\":25668,\"start\":25640},{\"attributes\":{\"n\":\"6.4\"},\"end\":26544,\"start\":26530},{\"attributes\":{\"n\":\"7\"},\"end\":29856,\"start\":29848},{\"end\":30016,\"start\":30008},{\"end\":30325,\"start\":30317},{\"end\":30609,\"start\":30601},{\"end\":30671,\"start\":30663},{\"end\":32894,\"start\":32885},{\"end\":33105,\"start\":33096},{\"end\":33148,\"start\":33139},{\"end\":33437,\"start\":33428},{\"end\":33647,\"start\":33638}]", "table": "[{\"end\":32883,\"start\":32821},{\"end\":33094,\"start\":32896},{\"end\":33426,\"start\":33302},{\"end\":33636,\"start\":33567},{\"end\":33916,\"start\":33754}]", "figure_caption": "[{\"end\":30315,\"start\":30018},{\"end\":30599,\"start\":30327},{\"end\":30661,\"start\":30611},{\"end\":31007,\"start\":30673},{\"end\":31446,\"start\":31010},{\"end\":32729,\"start\":31449},{\"end\":32821,\"start\":32732},{\"end\":33137,\"start\":33107},{\"end\":33302,\"start\":33150},{\"end\":33567,\"start\":33439},{\"end\":33754,\"start\":33649}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3908,\"start\":3900},{\"end\":4435,\"start\":4429},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5059,\"start\":5051},{\"end\":5275,\"start\":5267},{\"end\":5516,\"start\":5508},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":5529,\"start\":5521},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":5725,\"start\":5717},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5950,\"start\":5942},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11488,\"start\":11480},{\"end\":12421,\"start\":12413},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":12832,\"start\":12824},{\"end\":13991,\"start\":13983},{\"end\":14846,\"start\":14838},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":15458,\"start\":15450},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":16372,\"start\":16364},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17586,\"start\":17577},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17689,\"start\":17679},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17761,\"start\":17750},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":19304,\"start\":19287},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":19936,\"start\":19919},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":20587,\"start\":20578},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":20820,\"start\":20811},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":21149,\"start\":21140},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":21378,\"start\":21369},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":21718,\"start\":21710},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":22161,\"start\":22152},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25275,\"start\":25267},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":27276,\"start\":27268}]", "bib_author_first_name": "[{\"end\":33997,\"start\":33996},{\"end\":34007,\"start\":34006},{\"end\":34018,\"start\":34017},{\"end\":34029,\"start\":34028},{\"end\":34040,\"start\":34039},{\"end\":34050,\"start\":34049},{\"end\":34063,\"start\":34062},{\"end\":34526,\"start\":34525},{\"end\":34536,\"start\":34535},{\"end\":34789,\"start\":34788},{\"end\":34797,\"start\":34796},{\"end\":34803,\"start\":34802},{\"end\":34810,\"start\":34809},{\"end\":34816,\"start\":34815},{\"end\":35221,\"start\":35220},{\"end\":35229,\"start\":35228},{\"end\":35240,\"start\":35239},{\"end\":35253,\"start\":35252},{\"end\":35264,\"start\":35263},{\"end\":35274,\"start\":35273},{\"end\":35707,\"start\":35706},{\"end\":35715,\"start\":35714},{\"end\":35726,\"start\":35725},{\"end\":36041,\"start\":36040},{\"end\":36048,\"start\":36047},{\"end\":36054,\"start\":36053},{\"end\":36063,\"start\":36062},{\"end\":36069,\"start\":36068},{\"end\":36078,\"start\":36077},{\"end\":36084,\"start\":36083},{\"end\":36488,\"start\":36487},{\"end\":36495,\"start\":36494},{\"end\":36504,\"start\":36503},{\"end\":36510,\"start\":36509},{\"end\":36517,\"start\":36516},{\"end\":36524,\"start\":36523},{\"end\":36532,\"start\":36531},{\"end\":36542,\"start\":36541},{\"end\":36548,\"start\":36547},{\"end\":36554,\"start\":36553},{\"end\":37014,\"start\":37013},{\"end\":37024,\"start\":37023},{\"end\":37032,\"start\":37031},{\"end\":37384,\"start\":37383},{\"end\":37394,\"start\":37393},{\"end\":37402,\"start\":37401},{\"end\":37413,\"start\":37412},{\"end\":37690,\"start\":37689},{\"end\":37701,\"start\":37700},{\"end\":37709,\"start\":37708},{\"end\":37715,\"start\":37714},{\"end\":37722,\"start\":37721},{\"end\":37729,\"start\":37728},{\"end\":37736,\"start\":37735},{\"end\":37744,\"start\":37743},{\"end\":38191,\"start\":38190},{\"end\":38201,\"start\":38200},{\"end\":38212,\"start\":38211},{\"end\":38219,\"start\":38218},{\"end\":38221,\"start\":38220},{\"end\":38229,\"start\":38228},{\"end\":38237,\"start\":38236},{\"end\":38244,\"start\":38243},{\"end\":38252,\"start\":38251},{\"end\":38259,\"start\":38258},{\"end\":38267,\"start\":38266},{\"end\":38640,\"start\":38639},{\"end\":38642,\"start\":38641},{\"end\":38652,\"start\":38651},{\"end\":38659,\"start\":38658},{\"end\":38667,\"start\":38666},{\"end\":38683,\"start\":38682},{\"end\":38691,\"start\":38690},{\"end\":38701,\"start\":38700},{\"end\":38714,\"start\":38713},{\"end\":39136,\"start\":39135},{\"end\":39142,\"start\":39141},{\"end\":39150,\"start\":39149},{\"end\":39161,\"start\":39160},{\"end\":39168,\"start\":39167},{\"end\":39471,\"start\":39470},{\"end\":39477,\"start\":39476},{\"end\":39485,\"start\":39484},{\"end\":39871,\"start\":39870},{\"end\":39877,\"start\":39876},{\"end\":39885,\"start\":39884},{\"end\":39892,\"start\":39891},{\"end\":39900,\"start\":39899},{\"end\":39907,\"start\":39906},{\"end\":39915,\"start\":39914},{\"end\":39926,\"start\":39925},{\"end\":40162,\"start\":40161},{\"end\":40164,\"start\":40163},{\"end\":40175,\"start\":40174},{\"end\":40182,\"start\":40181},{\"end\":40184,\"start\":40183},{\"end\":40197,\"start\":40196},{\"end\":40207,\"start\":40206},{\"end\":40209,\"start\":40208},{\"end\":40218,\"start\":40217},{\"end\":40628,\"start\":40627},{\"end\":40638,\"start\":40637},{\"end\":40640,\"start\":40639},{\"end\":40646,\"start\":40645},{\"end\":40675,\"start\":40674},{\"end\":40902,\"start\":40901},{\"end\":40913,\"start\":40912},{\"end\":40922,\"start\":40921},{\"end\":41161,\"start\":41160},{\"end\":41168,\"start\":41167},{\"end\":41177,\"start\":41176},{\"end\":41473,\"start\":41472},{\"end\":41483,\"start\":41482},{\"end\":41819,\"start\":41818},{\"end\":41833,\"start\":41832},{\"end\":42066,\"start\":42065},{\"end\":42078,\"start\":42077},{\"end\":42496,\"start\":42495},{\"end\":42502,\"start\":42501},{\"end\":42504,\"start\":42503},{\"end\":42514,\"start\":42511},{\"end\":42521,\"start\":42520},{\"end\":42908,\"start\":42907},{\"end\":42914,\"start\":42913},{\"end\":42920,\"start\":42919},{\"end\":42927,\"start\":42926},{\"end\":42933,\"start\":42932},{\"end\":42939,\"start\":42938},{\"end\":43215,\"start\":43214},{\"end\":43217,\"start\":43216},{\"end\":43224,\"start\":43223},{\"end\":43233,\"start\":43232},{\"end\":43245,\"start\":43244},{\"end\":43253,\"start\":43252},{\"end\":43263,\"start\":43262},{\"end\":43274,\"start\":43273},{\"end\":43284,\"start\":43283},{\"end\":43286,\"start\":43285},{\"end\":43668,\"start\":43667},{\"end\":43675,\"start\":43674},{\"end\":43681,\"start\":43680},{\"end\":43690,\"start\":43689},{\"end\":43698,\"start\":43697},{\"end\":43704,\"start\":43703},{\"end\":43712,\"start\":43711},{\"end\":44154,\"start\":44153},{\"end\":44161,\"start\":44160},{\"end\":44169,\"start\":44168},{\"end\":44176,\"start\":44175},{\"end\":44469,\"start\":44468},{\"end\":44475,\"start\":44474},{\"end\":44484,\"start\":44483},{\"end\":44486,\"start\":44485},{\"end\":44495,\"start\":44494},{\"end\":44899,\"start\":44898},{\"end\":44901,\"start\":44900},{\"end\":44909,\"start\":44908},{\"end\":44916,\"start\":44915},{\"end\":44918,\"start\":44917},{\"end\":44925,\"start\":44924},{\"end\":45334,\"start\":45333},{\"end\":45345,\"start\":45344},{\"end\":45354,\"start\":45353},{\"end\":45364,\"start\":45363},{\"end\":45821,\"start\":45820},{\"end\":45827,\"start\":45826},{\"end\":45834,\"start\":45833},{\"end\":45836,\"start\":45835},{\"end\":45845,\"start\":45844},{\"end\":45851,\"start\":45850},{\"end\":45863,\"start\":45862},{\"end\":45865,\"start\":45864},{\"end\":45875,\"start\":45874},{\"end\":46358,\"start\":46357},{\"end\":46368,\"start\":46367},{\"end\":46376,\"start\":46375},{\"end\":46672,\"start\":46671},{\"end\":46682,\"start\":46681},{\"end\":46696,\"start\":46695},{\"end\":46708,\"start\":46707},{\"end\":46717,\"start\":46716},{\"end\":46998,\"start\":46997},{\"end\":47000,\"start\":46999},{\"end\":47006,\"start\":47005},{\"end\":47013,\"start\":47012},{\"end\":47019,\"start\":47018},{\"end\":47025,\"start\":47024},{\"end\":47027,\"start\":47026},{\"end\":47467,\"start\":47466},{\"end\":47469,\"start\":47468},{\"end\":47475,\"start\":47474},{\"end\":47481,\"start\":47480},{\"end\":47487,\"start\":47486},{\"end\":47489,\"start\":47488},{\"end\":47941,\"start\":47940},{\"end\":47943,\"start\":47942},{\"end\":47949,\"start\":47948},{\"end\":47955,\"start\":47954},{\"end\":47961,\"start\":47960},{\"end\":47963,\"start\":47962},{\"end\":48288,\"start\":48287},{\"end\":48299,\"start\":48298},{\"end\":48307,\"start\":48306},{\"end\":48316,\"start\":48315},{\"end\":48325,\"start\":48324},{\"end\":48726,\"start\":48725},{\"end\":48737,\"start\":48736},{\"end\":48753,\"start\":48752},{\"end\":49116,\"start\":49115},{\"end\":49127,\"start\":49126},{\"end\":49137,\"start\":49136},{\"end\":49144,\"start\":49143},{\"end\":49157,\"start\":49156},{\"end\":49159,\"start\":49158},{\"end\":49681,\"start\":49680},{\"end\":49689,\"start\":49688},{\"end\":49697,\"start\":49696},{\"end\":49706,\"start\":49705},{\"end\":49714,\"start\":49713},{\"end\":50160,\"start\":50159},{\"end\":50168,\"start\":50167},{\"end\":50553,\"start\":50552},{\"end\":50559,\"start\":50558},{\"end\":50570,\"start\":50569},{\"end\":50577,\"start\":50576},{\"end\":50586,\"start\":50585},{\"end\":50604,\"start\":50603},{\"end\":51042,\"start\":51041},{\"end\":51048,\"start\":51047},{\"end\":51059,\"start\":51058},{\"end\":51066,\"start\":51065},{\"end\":51074,\"start\":51073},{\"end\":51089,\"start\":51088},{\"end\":51091,\"start\":51090},{\"end\":51099,\"start\":51098},{\"end\":51559,\"start\":51558},{\"end\":51566,\"start\":51565},{\"end\":51574,\"start\":51573},{\"end\":51582,\"start\":51581},{\"end\":51595,\"start\":51594},{\"end\":51606,\"start\":51605},{\"end\":51616,\"start\":51615},{\"end\":51618,\"start\":51617},{\"end\":52012,\"start\":52011},{\"end\":52019,\"start\":52018},{\"end\":52021,\"start\":52020},{\"end\":52313,\"start\":52312},{\"end\":52328,\"start\":52327},{\"end\":52336,\"start\":52335},{\"end\":52346,\"start\":52345},{\"end\":52348,\"start\":52347},{\"end\":52754,\"start\":52753},{\"end\":52765,\"start\":52764},{\"end\":52773,\"start\":52772},{\"end\":52783,\"start\":52782},{\"end\":52791,\"start\":52790},{\"end\":53152,\"start\":53151},{\"end\":53160,\"start\":53159},{\"end\":53166,\"start\":53165},{\"end\":53172,\"start\":53171},{\"end\":53532,\"start\":53531},{\"end\":53540,\"start\":53539},{\"end\":53867,\"start\":53866},{\"end\":53875,\"start\":53874},{\"end\":53882,\"start\":53881},{\"end\":53889,\"start\":53888},{\"end\":53891,\"start\":53890},{\"end\":53900,\"start\":53899},{\"end\":53902,\"start\":53901},{\"end\":53915,\"start\":53914},{\"end\":53917,\"start\":53916},{\"end\":54187,\"start\":54186},{\"end\":54194,\"start\":54193},{\"end\":54202,\"start\":54201},{\"end\":54204,\"start\":54203},{\"end\":54211,\"start\":54210},{\"end\":54513,\"start\":54512},{\"end\":54755,\"start\":54754},{\"end\":54761,\"start\":54760},{\"end\":54768,\"start\":54767},{\"end\":54777,\"start\":54776},{\"end\":54785,\"start\":54784},{\"end\":54792,\"start\":54791},{\"end\":54798,\"start\":54797},{\"end\":54806,\"start\":54805},{\"end\":54815,\"start\":54814},{\"end\":54822,\"start\":54821},{\"end\":55402,\"start\":55401},{\"end\":55408,\"start\":55407},{\"end\":55419,\"start\":55418},{\"end\":55421,\"start\":55420},{\"end\":55428,\"start\":55427},{\"end\":55959,\"start\":55958},{\"end\":55965,\"start\":55964},{\"end\":55972,\"start\":55971},{\"end\":55979,\"start\":55978},{\"end\":55986,\"start\":55985},{\"end\":55994,\"start\":55993},{\"end\":56005,\"start\":56004},{\"end\":56021,\"start\":56020},{\"end\":56033,\"start\":56032},{\"end\":56588,\"start\":56587},{\"end\":56594,\"start\":56593},{\"end\":56601,\"start\":56600},{\"end\":56608,\"start\":56607},{\"end\":56888,\"start\":56887},{\"end\":56894,\"start\":56893},{\"end\":56902,\"start\":56901},{\"end\":56911,\"start\":56910},{\"end\":56919,\"start\":56918},{\"end\":56928,\"start\":56927},{\"end\":57291,\"start\":57290},{\"end\":57297,\"start\":57296},{\"end\":57305,\"start\":57304},{\"end\":57313,\"start\":57312},{\"end\":57320,\"start\":57319},{\"end\":57578,\"start\":57577},{\"end\":57585,\"start\":57584},{\"end\":57593,\"start\":57592},{\"end\":57595,\"start\":57594},{\"end\":57831,\"start\":57830},{\"end\":57837,\"start\":57836},{\"end\":57844,\"start\":57843},{\"end\":57850,\"start\":57849},{\"end\":57857,\"start\":57856},{\"end\":57863,\"start\":57862},{\"end\":58302,\"start\":58301},{\"end\":58310,\"start\":58309},{\"end\":58319,\"start\":58318},{\"end\":58325,\"start\":58324},{\"end\":58334,\"start\":58333},{\"end\":58340,\"start\":58339},{\"end\":58355,\"start\":58354},{\"end\":58364,\"start\":58363},{\"end\":58375,\"start\":58374},{\"end\":58386,\"start\":58385},{\"end\":58900,\"start\":58899},{\"end\":58907,\"start\":58906},{\"end\":58913,\"start\":58912},{\"end\":58915,\"start\":58914},{\"end\":58925,\"start\":58924},{\"end\":58936,\"start\":58935},{\"end\":58938,\"start\":58937},{\"end\":59450,\"start\":59449},{\"end\":59459,\"start\":59458},{\"end\":59467,\"start\":59466},{\"end\":59474,\"start\":59473},{\"end\":59928,\"start\":59927},{\"end\":59936,\"start\":59935},{\"end\":59943,\"start\":59942},{\"end\":59952,\"start\":59951},{\"end\":59964,\"start\":59963},{\"end\":59971,\"start\":59970},{\"end\":59981,\"start\":59980},{\"end\":59988,\"start\":59987},{\"end\":59997,\"start\":59996},{\"end\":60329,\"start\":60328},{\"end\":60337,\"start\":60336},{\"end\":60743,\"start\":60742},{\"end\":60750,\"start\":60749},{\"end\":60756,\"start\":60755},{\"end\":60763,\"start\":60762},{\"end\":61110,\"start\":61109},{\"end\":61157,\"start\":61156},{\"end\":61161,\"start\":61160},{\"end\":61193,\"start\":61192},{\"end\":61197,\"start\":61196},{\"end\":61201,\"start\":61200},{\"end\":61203,\"start\":61202}]", "bib_author_last_name": "[{\"end\":34004,\"start\":33998},{\"end\":34015,\"start\":34008},{\"end\":34026,\"start\":34019},{\"end\":34037,\"start\":34030},{\"end\":34047,\"start\":34041},{\"end\":34060,\"start\":34051},{\"end\":34068,\"start\":34064},{\"end\":34533,\"start\":34527},{\"end\":34546,\"start\":34537},{\"end\":34794,\"start\":34790},{\"end\":34800,\"start\":34798},{\"end\":34807,\"start\":34804},{\"end\":34813,\"start\":34811},{\"end\":34820,\"start\":34817},{\"end\":35226,\"start\":35222},{\"end\":35237,\"start\":35230},{\"end\":35250,\"start\":35241},{\"end\":35261,\"start\":35254},{\"end\":35271,\"start\":35265},{\"end\":35284,\"start\":35275},{\"end\":35712,\"start\":35708},{\"end\":35723,\"start\":35716},{\"end\":35733,\"start\":35727},{\"end\":36045,\"start\":36042},{\"end\":36051,\"start\":36049},{\"end\":36060,\"start\":36055},{\"end\":36066,\"start\":36064},{\"end\":36075,\"start\":36070},{\"end\":36081,\"start\":36079},{\"end\":36088,\"start\":36085},{\"end\":36492,\"start\":36489},{\"end\":36501,\"start\":36496},{\"end\":36507,\"start\":36505},{\"end\":36514,\"start\":36511},{\"end\":36521,\"start\":36518},{\"end\":36529,\"start\":36525},{\"end\":36539,\"start\":36533},{\"end\":36545,\"start\":36543},{\"end\":36551,\"start\":36549},{\"end\":36558,\"start\":36555},{\"end\":37021,\"start\":37015},{\"end\":37029,\"start\":37025},{\"end\":37039,\"start\":37033},{\"end\":37391,\"start\":37385},{\"end\":37399,\"start\":37395},{\"end\":37410,\"start\":37403},{\"end\":37421,\"start\":37414},{\"end\":37698,\"start\":37691},{\"end\":37706,\"start\":37702},{\"end\":37712,\"start\":37710},{\"end\":37719,\"start\":37716},{\"end\":37726,\"start\":37723},{\"end\":37733,\"start\":37730},{\"end\":37741,\"start\":37737},{\"end\":37752,\"start\":37745},{\"end\":38198,\"start\":38192},{\"end\":38209,\"start\":38202},{\"end\":38216,\"start\":38213},{\"end\":38226,\"start\":38222},{\"end\":38234,\"start\":38230},{\"end\":38241,\"start\":38238},{\"end\":38249,\"start\":38245},{\"end\":38256,\"start\":38253},{\"end\":38264,\"start\":38260},{\"end\":38277,\"start\":38268},{\"end\":38649,\"start\":38643},{\"end\":38656,\"start\":38653},{\"end\":38664,\"start\":38660},{\"end\":38680,\"start\":38668},{\"end\":38688,\"start\":38684},{\"end\":38698,\"start\":38692},{\"end\":38711,\"start\":38702},{\"end\":38719,\"start\":38715},{\"end\":39139,\"start\":39137},{\"end\":39147,\"start\":39143},{\"end\":39158,\"start\":39151},{\"end\":39165,\"start\":39162},{\"end\":39176,\"start\":39169},{\"end\":39474,\"start\":39472},{\"end\":39482,\"start\":39478},{\"end\":39489,\"start\":39486},{\"end\":39874,\"start\":39872},{\"end\":39882,\"start\":39878},{\"end\":39889,\"start\":39886},{\"end\":39897,\"start\":39893},{\"end\":39904,\"start\":39901},{\"end\":39912,\"start\":39908},{\"end\":39923,\"start\":39916},{\"end\":39934,\"start\":39927},{\"end\":40172,\"start\":40165},{\"end\":40179,\"start\":40176},{\"end\":40194,\"start\":40185},{\"end\":40204,\"start\":40198},{\"end\":40215,\"start\":40210},{\"end\":40226,\"start\":40219},{\"end\":40635,\"start\":40629},{\"end\":40643,\"start\":40641},{\"end\":40658,\"start\":40647},{\"end\":40672,\"start\":40660},{\"end\":40680,\"start\":40676},{\"end\":40910,\"start\":40903},{\"end\":40919,\"start\":40914},{\"end\":40930,\"start\":40923},{\"end\":41165,\"start\":41162},{\"end\":41174,\"start\":41169},{\"end\":41181,\"start\":41178},{\"end\":41480,\"start\":41474},{\"end\":41493,\"start\":41484},{\"end\":41830,\"start\":41820},{\"end\":41840,\"start\":41834},{\"end\":42075,\"start\":42067},{\"end\":42089,\"start\":42079},{\"end\":42499,\"start\":42497},{\"end\":42509,\"start\":42505},{\"end\":42518,\"start\":42515},{\"end\":42911,\"start\":42909},{\"end\":42917,\"start\":42915},{\"end\":42924,\"start\":42921},{\"end\":42930,\"start\":42928},{\"end\":42936,\"start\":42934},{\"end\":42944,\"start\":42940},{\"end\":43221,\"start\":43218},{\"end\":43230,\"start\":43225},{\"end\":43242,\"start\":43234},{\"end\":43250,\"start\":43246},{\"end\":43260,\"start\":43254},{\"end\":43271,\"start\":43264},{\"end\":43281,\"start\":43275},{\"end\":43294,\"start\":43287},{\"end\":43672,\"start\":43669},{\"end\":43678,\"start\":43676},{\"end\":43687,\"start\":43682},{\"end\":43695,\"start\":43691},{\"end\":43701,\"start\":43699},{\"end\":43709,\"start\":43705},{\"end\":43715,\"start\":43713},{\"end\":44158,\"start\":44155},{\"end\":44166,\"start\":44162},{\"end\":44173,\"start\":44170},{\"end\":44180,\"start\":44177},{\"end\":44472,\"start\":44470},{\"end\":44481,\"start\":44476},{\"end\":44492,\"start\":44487},{\"end\":44499,\"start\":44496},{\"end\":44906,\"start\":44902},{\"end\":44913,\"start\":44910},{\"end\":44922,\"start\":44919},{\"end\":44933,\"start\":44926},{\"end\":45342,\"start\":45335},{\"end\":45351,\"start\":45346},{\"end\":45361,\"start\":45355},{\"end\":45374,\"start\":45365},{\"end\":45824,\"start\":45822},{\"end\":45831,\"start\":45828},{\"end\":45842,\"start\":45837},{\"end\":45848,\"start\":45846},{\"end\":45860,\"start\":45852},{\"end\":45872,\"start\":45866},{\"end\":45878,\"start\":45876},{\"end\":46365,\"start\":46359},{\"end\":46373,\"start\":46369},{\"end\":46381,\"start\":46377},{\"end\":46679,\"start\":46673},{\"end\":46693,\"start\":46683},{\"end\":46705,\"start\":46697},{\"end\":46714,\"start\":46709},{\"end\":46727,\"start\":46718},{\"end\":47003,\"start\":47001},{\"end\":47010,\"start\":47007},{\"end\":47016,\"start\":47014},{\"end\":47022,\"start\":47020},{\"end\":47034,\"start\":47028},{\"end\":47472,\"start\":47470},{\"end\":47478,\"start\":47476},{\"end\":47484,\"start\":47482},{\"end\":47496,\"start\":47490},{\"end\":47946,\"start\":47944},{\"end\":47952,\"start\":47950},{\"end\":47958,\"start\":47956},{\"end\":47970,\"start\":47964},{\"end\":48296,\"start\":48289},{\"end\":48304,\"start\":48300},{\"end\":48313,\"start\":48308},{\"end\":48322,\"start\":48317},{\"end\":48333,\"start\":48326},{\"end\":48734,\"start\":48727},{\"end\":48750,\"start\":48738},{\"end\":48760,\"start\":48754},{\"end\":49124,\"start\":49117},{\"end\":49134,\"start\":49128},{\"end\":49141,\"start\":49138},{\"end\":49154,\"start\":49145},{\"end\":49164,\"start\":49160},{\"end\":49686,\"start\":49682},{\"end\":49694,\"start\":49690},{\"end\":49703,\"start\":49698},{\"end\":49711,\"start\":49707},{\"end\":49721,\"start\":49715},{\"end\":50165,\"start\":50161},{\"end\":50173,\"start\":50169},{\"end\":50556,\"start\":50554},{\"end\":50567,\"start\":50560},{\"end\":50574,\"start\":50571},{\"end\":50583,\"start\":50578},{\"end\":50601,\"start\":50587},{\"end\":50610,\"start\":50605},{\"end\":51045,\"start\":51043},{\"end\":51056,\"start\":51049},{\"end\":51063,\"start\":51060},{\"end\":51071,\"start\":51067},{\"end\":51086,\"start\":51075},{\"end\":51096,\"start\":51092},{\"end\":51105,\"start\":51100},{\"end\":51563,\"start\":51560},{\"end\":51571,\"start\":51567},{\"end\":51579,\"start\":51575},{\"end\":51592,\"start\":51583},{\"end\":51603,\"start\":51596},{\"end\":51613,\"start\":51607},{\"end\":51621,\"start\":51619},{\"end\":52016,\"start\":52013},{\"end\":52024,\"start\":52022},{\"end\":52325,\"start\":52314},{\"end\":52333,\"start\":52329},{\"end\":52343,\"start\":52337},{\"end\":52353,\"start\":52349},{\"end\":52762,\"start\":52755},{\"end\":52770,\"start\":52766},{\"end\":52780,\"start\":52774},{\"end\":52788,\"start\":52784},{\"end\":52800,\"start\":52792},{\"end\":53157,\"start\":53153},{\"end\":53163,\"start\":53161},{\"end\":53169,\"start\":53167},{\"end\":53180,\"start\":53173},{\"end\":53537,\"start\":53533},{\"end\":53548,\"start\":53541},{\"end\":53872,\"start\":53868},{\"end\":53879,\"start\":53876},{\"end\":53886,\"start\":53883},{\"end\":53897,\"start\":53892},{\"end\":53912,\"start\":53903},{\"end\":53925,\"start\":53918},{\"end\":54191,\"start\":54188},{\"end\":54199,\"start\":54195},{\"end\":54208,\"start\":54205},{\"end\":54220,\"start\":54212},{\"end\":54516,\"start\":54514},{\"end\":54758,\"start\":54756},{\"end\":54765,\"start\":54762},{\"end\":54774,\"start\":54769},{\"end\":54782,\"start\":54778},{\"end\":54789,\"start\":54786},{\"end\":54795,\"start\":54793},{\"end\":54803,\"start\":54799},{\"end\":54812,\"start\":54807},{\"end\":54819,\"start\":54816},{\"end\":54830,\"start\":54823},{\"end\":55405,\"start\":55403},{\"end\":55416,\"start\":55409},{\"end\":55425,\"start\":55422},{\"end\":55436,\"start\":55429},{\"end\":55962,\"start\":55960},{\"end\":55969,\"start\":55966},{\"end\":55976,\"start\":55973},{\"end\":55983,\"start\":55980},{\"end\":55991,\"start\":55987},{\"end\":56002,\"start\":55995},{\"end\":56018,\"start\":56006},{\"end\":56030,\"start\":56022},{\"end\":56041,\"start\":56034},{\"end\":56591,\"start\":56589},{\"end\":56598,\"start\":56595},{\"end\":56605,\"start\":56602},{\"end\":56616,\"start\":56609},{\"end\":56891,\"start\":56889},{\"end\":56899,\"start\":56895},{\"end\":56908,\"start\":56903},{\"end\":56916,\"start\":56912},{\"end\":56925,\"start\":56920},{\"end\":56936,\"start\":56929},{\"end\":57294,\"start\":57292},{\"end\":57302,\"start\":57298},{\"end\":57310,\"start\":57306},{\"end\":57317,\"start\":57314},{\"end\":57328,\"start\":57321},{\"end\":57582,\"start\":57579},{\"end\":57590,\"start\":57586},{\"end\":57599,\"start\":57596},{\"end\":57834,\"start\":57832},{\"end\":57841,\"start\":57838},{\"end\":57847,\"start\":57845},{\"end\":57854,\"start\":57851},{\"end\":57860,\"start\":57858},{\"end\":57867,\"start\":57864},{\"end\":58307,\"start\":58303},{\"end\":58316,\"start\":58311},{\"end\":58322,\"start\":58320},{\"end\":58331,\"start\":58326},{\"end\":58337,\"start\":58335},{\"end\":58352,\"start\":58341},{\"end\":58361,\"start\":58356},{\"end\":58372,\"start\":58365},{\"end\":58383,\"start\":58376},{\"end\":58396,\"start\":58387},{\"end\":58904,\"start\":58901},{\"end\":58910,\"start\":58908},{\"end\":58922,\"start\":58916},{\"end\":58933,\"start\":58926},{\"end\":58962,\"start\":58939},{\"end\":59456,\"start\":59451},{\"end\":59464,\"start\":59460},{\"end\":59471,\"start\":59468},{\"end\":59478,\"start\":59475},{\"end\":59933,\"start\":59929},{\"end\":59940,\"start\":59937},{\"end\":59949,\"start\":59944},{\"end\":59961,\"start\":59953},{\"end\":59968,\"start\":59965},{\"end\":59978,\"start\":59972},{\"end\":59985,\"start\":59982},{\"end\":59994,\"start\":59989},{\"end\":60007,\"start\":59998},{\"end\":60334,\"start\":60330},{\"end\":60343,\"start\":60338},{\"end\":60747,\"start\":60744},{\"end\":60753,\"start\":60751},{\"end\":60760,\"start\":60757},{\"end\":60767,\"start\":60764},{\"end\":61154,\"start\":61111},{\"end\":61190,\"start\":61162}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":199441943},\"end\":34446,\"start\":33918},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":46954808},\"end\":34723,\"start\":34448},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":707161},\"end\":35173,\"start\":34725},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":201035892},\"end\":35605,\"start\":35175},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":203169900},\"end\":36003,\"start\":35607},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":4028864},\"end\":36403,\"start\":36005},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":56657862},\"end\":36991,\"start\":36405},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":54458618},\"end\":37339,\"start\":36993},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":9455111},\"end\":37636,\"start\":37341},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":4390700},\"end\":38161,\"start\":37638},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":146808333},\"end\":38637,\"start\":38163},{\"attributes\":{\"doi\":\"arXiv:1704.04861\",\"id\":\"b11\"},\"end\":39057,\"start\":38639},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":53116301},\"end\":39435,\"start\":39059},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":140309863},\"end\":39795,\"start\":39437},{\"attributes\":{\"doi\":\"arXiv:1911.11236\",\"id\":\"b14\"},\"end\":40159,\"start\":39797},{\"attributes\":{\"doi\":\"arXiv:1602.07360\",\"id\":\"b15\"},\"end\":40545,\"start\":40161},{\"attributes\":{\"id\":\"b16\"},\"end\":40830,\"start\":40547},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":980236},\"end\":41158,\"start\":40832},{\"attributes\":{\"doi\":\"arXiv:1910.08373\",\"id\":\"b18\"},\"end\":41388,\"start\":41160},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":9597281},\"end\":41816,\"start\":41390},{\"attributes\":{\"id\":\"b20\"},\"end\":41993,\"start\":41818},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":4396837},\"end\":42435,\"start\":41995},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":3934562},\"end\":42859,\"start\":42437},{\"attributes\":{\"id\":\"b23\"},\"end\":43169,\"start\":42861},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":14113767},\"end\":43557,\"start\":43171},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":11523337},\"end\":44103,\"start\":43559},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":195833620},\"end\":44391,\"start\":44105},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":51880435},\"end\":44820,\"start\":44393},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":53279704},\"end\":45272,\"start\":44822},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":199478000},\"end\":45715,\"start\":45274},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":54447604},\"end\":46301,\"start\":45717},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":13613792},\"end\":46591,\"start\":46303},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":2366292},\"end\":46936,\"start\":46593},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":4868248},\"end\":47386,\"start\":46938},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":5115938},\"end\":47858,\"start\":47388},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":1745976},\"end\":48220,\"start\":47860},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":52059096},\"end\":48661,\"start\":48222},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":206596552},\"end\":49113,\"start\":48663},{\"attributes\":{\"id\":\"b38\"},\"end\":49583,\"start\":49115},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":2310691},\"end\":50089,\"start\":49585},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":206594775},\"end\":50505,\"start\":50091},{\"attributes\":{\"id\":\"b41\"},\"end\":50977,\"start\":50507},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":3525655},\"end\":51493,\"start\":50979},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":51891697},\"end\":52009,\"start\":51495},{\"attributes\":{\"doi\":\"arXiv:1905.11946\",\"id\":\"b44\"},\"end\":52261,\"start\":52011},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":4592390},\"end\":52699,\"start\":52263},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":30687430},\"end\":53045,\"start\":52701},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":125950048},\"end\":53489,\"start\":53047},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":3955093},\"end\":53816,\"start\":53491},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":94822},\"end\":54140,\"start\":53818},{\"attributes\":{\"id\":\"b50\",\"matched_paper_id\":49867180},\"end\":54510,\"start\":54142},{\"attributes\":{\"doi\":\"arXiv:1908.08926\",\"id\":\"b51\"},\"end\":54658,\"start\":54512},{\"attributes\":{\"id\":\"b52\",\"matched_paper_id\":54461508},\"end\":55270,\"start\":54660},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":206598003},\"end\":55884,\"start\":55272},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":38943488},\"end\":56462,\"start\":55886},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":206853127},\"end\":56797,\"start\":56464},{\"attributes\":{\"doi\":\"arXiv:1812.00090\",\"id\":\"b56\"},\"end\":57159,\"start\":56799},{\"attributes\":{\"id\":\"b57\"},\"end\":57528,\"start\":57161},{\"attributes\":{\"doi\":\"arXiv:1908.08854\",\"id\":\"b58\"},\"end\":57746,\"start\":57530},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":198968173},\"end\":58218,\"start\":57748},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":53791706},\"end\":58666,\"start\":58220},{\"attributes\":{\"id\":\"b61\"},\"end\":58822,\"start\":58668},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":4557768},\"end\":59363,\"start\":58824},{\"attributes\":{\"id\":\"b63\",\"matched_paper_id\":24982157},\"end\":59849,\"start\":59365},{\"attributes\":{\"doi\":\"arXiv:1910.06528\",\"id\":\"b64\"},\"end\":60253,\"start\":59851},{\"attributes\":{\"id\":\"b65\",\"matched_paper_id\":42427078},\"end\":60683,\"start\":60255},{\"attributes\":{\"id\":\"b66\",\"matched_paper_id\":53745820},\"end\":61105,\"start\":60685},{\"attributes\":{\"id\":\"b67\"},\"end\":61296,\"start\":61107}]", "bib_title": "[{\"end\":33994,\"start\":33918},{\"end\":34523,\"start\":34448},{\"end\":34786,\"start\":34725},{\"end\":35218,\"start\":35175},{\"end\":35704,\"start\":35607},{\"end\":36038,\"start\":36005},{\"end\":36485,\"start\":36405},{\"end\":37011,\"start\":36993},{\"end\":37381,\"start\":37341},{\"end\":37687,\"start\":37638},{\"end\":38188,\"start\":38163},{\"end\":39133,\"start\":39059},{\"end\":39468,\"start\":39437},{\"end\":40899,\"start\":40832},{\"end\":41470,\"start\":41390},{\"end\":42063,\"start\":41995},{\"end\":42493,\"start\":42437},{\"end\":42905,\"start\":42861},{\"end\":43212,\"start\":43171},{\"end\":43665,\"start\":43559},{\"end\":44151,\"start\":44105},{\"end\":44466,\"start\":44393},{\"end\":44896,\"start\":44822},{\"end\":45331,\"start\":45274},{\"end\":45818,\"start\":45717},{\"end\":46355,\"start\":46303},{\"end\":46669,\"start\":46593},{\"end\":46995,\"start\":46938},{\"end\":47464,\"start\":47388},{\"end\":47938,\"start\":47860},{\"end\":48285,\"start\":48222},{\"end\":48723,\"start\":48663},{\"end\":49678,\"start\":49585},{\"end\":50157,\"start\":50091},{\"end\":50550,\"start\":50507},{\"end\":51039,\"start\":50979},{\"end\":51556,\"start\":51495},{\"end\":52310,\"start\":52263},{\"end\":52751,\"start\":52701},{\"end\":53149,\"start\":53047},{\"end\":53529,\"start\":53491},{\"end\":53864,\"start\":53818},{\"end\":54184,\"start\":54142},{\"end\":54752,\"start\":54660},{\"end\":55399,\"start\":55272},{\"end\":55956,\"start\":55886},{\"end\":56585,\"start\":56464},{\"end\":57828,\"start\":57748},{\"end\":58299,\"start\":58220},{\"end\":58897,\"start\":58824},{\"end\":59447,\"start\":59365},{\"end\":60326,\"start\":60255},{\"end\":60740,\"start\":60685}]", "bib_author": "[{\"end\":34006,\"start\":33996},{\"end\":34017,\"start\":34006},{\"end\":34028,\"start\":34017},{\"end\":34039,\"start\":34028},{\"end\":34049,\"start\":34039},{\"end\":34062,\"start\":34049},{\"end\":34070,\"start\":34062},{\"end\":34535,\"start\":34525},{\"end\":34548,\"start\":34535},{\"end\":34796,\"start\":34788},{\"end\":34802,\"start\":34796},{\"end\":34809,\"start\":34802},{\"end\":34815,\"start\":34809},{\"end\":34822,\"start\":34815},{\"end\":35228,\"start\":35220},{\"end\":35239,\"start\":35228},{\"end\":35252,\"start\":35239},{\"end\":35263,\"start\":35252},{\"end\":35273,\"start\":35263},{\"end\":35286,\"start\":35273},{\"end\":35714,\"start\":35706},{\"end\":35725,\"start\":35714},{\"end\":35735,\"start\":35725},{\"end\":36047,\"start\":36040},{\"end\":36053,\"start\":36047},{\"end\":36062,\"start\":36053},{\"end\":36068,\"start\":36062},{\"end\":36077,\"start\":36068},{\"end\":36083,\"start\":36077},{\"end\":36090,\"start\":36083},{\"end\":36494,\"start\":36487},{\"end\":36503,\"start\":36494},{\"end\":36509,\"start\":36503},{\"end\":36516,\"start\":36509},{\"end\":36523,\"start\":36516},{\"end\":36531,\"start\":36523},{\"end\":36541,\"start\":36531},{\"end\":36547,\"start\":36541},{\"end\":36553,\"start\":36547},{\"end\":36560,\"start\":36553},{\"end\":37023,\"start\":37013},{\"end\":37031,\"start\":37023},{\"end\":37041,\"start\":37031},{\"end\":37393,\"start\":37383},{\"end\":37401,\"start\":37393},{\"end\":37412,\"start\":37401},{\"end\":37423,\"start\":37412},{\"end\":37700,\"start\":37689},{\"end\":37708,\"start\":37700},{\"end\":37714,\"start\":37708},{\"end\":37721,\"start\":37714},{\"end\":37728,\"start\":37721},{\"end\":37735,\"start\":37728},{\"end\":37743,\"start\":37735},{\"end\":37754,\"start\":37743},{\"end\":38200,\"start\":38190},{\"end\":38211,\"start\":38200},{\"end\":38218,\"start\":38211},{\"end\":38228,\"start\":38218},{\"end\":38236,\"start\":38228},{\"end\":38243,\"start\":38236},{\"end\":38251,\"start\":38243},{\"end\":38258,\"start\":38251},{\"end\":38266,\"start\":38258},{\"end\":38279,\"start\":38266},{\"end\":38651,\"start\":38639},{\"end\":38658,\"start\":38651},{\"end\":38666,\"start\":38658},{\"end\":38682,\"start\":38666},{\"end\":38690,\"start\":38682},{\"end\":38700,\"start\":38690},{\"end\":38713,\"start\":38700},{\"end\":38721,\"start\":38713},{\"end\":39141,\"start\":39135},{\"end\":39149,\"start\":39141},{\"end\":39160,\"start\":39149},{\"end\":39167,\"start\":39160},{\"end\":39178,\"start\":39167},{\"end\":39476,\"start\":39470},{\"end\":39484,\"start\":39476},{\"end\":39491,\"start\":39484},{\"end\":39876,\"start\":39870},{\"end\":39884,\"start\":39876},{\"end\":39891,\"start\":39884},{\"end\":39899,\"start\":39891},{\"end\":39906,\"start\":39899},{\"end\":39914,\"start\":39906},{\"end\":39925,\"start\":39914},{\"end\":39936,\"start\":39925},{\"end\":40174,\"start\":40161},{\"end\":40181,\"start\":40174},{\"end\":40196,\"start\":40181},{\"end\":40206,\"start\":40196},{\"end\":40217,\"start\":40206},{\"end\":40228,\"start\":40217},{\"end\":40637,\"start\":40627},{\"end\":40645,\"start\":40637},{\"end\":40660,\"start\":40645},{\"end\":40674,\"start\":40660},{\"end\":40682,\"start\":40674},{\"end\":40912,\"start\":40901},{\"end\":40921,\"start\":40912},{\"end\":40932,\"start\":40921},{\"end\":41167,\"start\":41160},{\"end\":41176,\"start\":41167},{\"end\":41183,\"start\":41176},{\"end\":41482,\"start\":41472},{\"end\":41495,\"start\":41482},{\"end\":41832,\"start\":41818},{\"end\":41842,\"start\":41832},{\"end\":42077,\"start\":42065},{\"end\":42091,\"start\":42077},{\"end\":42501,\"start\":42495},{\"end\":42511,\"start\":42501},{\"end\":42520,\"start\":42511},{\"end\":42524,\"start\":42520},{\"end\":42913,\"start\":42907},{\"end\":42919,\"start\":42913},{\"end\":42926,\"start\":42919},{\"end\":42932,\"start\":42926},{\"end\":42938,\"start\":42932},{\"end\":42946,\"start\":42938},{\"end\":43223,\"start\":43214},{\"end\":43232,\"start\":43223},{\"end\":43244,\"start\":43232},{\"end\":43252,\"start\":43244},{\"end\":43262,\"start\":43252},{\"end\":43273,\"start\":43262},{\"end\":43283,\"start\":43273},{\"end\":43296,\"start\":43283},{\"end\":43674,\"start\":43667},{\"end\":43680,\"start\":43674},{\"end\":43689,\"start\":43680},{\"end\":43697,\"start\":43689},{\"end\":43703,\"start\":43697},{\"end\":43711,\"start\":43703},{\"end\":43717,\"start\":43711},{\"end\":44160,\"start\":44153},{\"end\":44168,\"start\":44160},{\"end\":44175,\"start\":44168},{\"end\":44182,\"start\":44175},{\"end\":44474,\"start\":44468},{\"end\":44483,\"start\":44474},{\"end\":44494,\"start\":44483},{\"end\":44501,\"start\":44494},{\"end\":44908,\"start\":44898},{\"end\":44915,\"start\":44908},{\"end\":44924,\"start\":44915},{\"end\":44935,\"start\":44924},{\"end\":45344,\"start\":45333},{\"end\":45353,\"start\":45344},{\"end\":45363,\"start\":45353},{\"end\":45376,\"start\":45363},{\"end\":45826,\"start\":45820},{\"end\":45833,\"start\":45826},{\"end\":45844,\"start\":45833},{\"end\":45850,\"start\":45844},{\"end\":45862,\"start\":45850},{\"end\":45874,\"start\":45862},{\"end\":45880,\"start\":45874},{\"end\":46367,\"start\":46357},{\"end\":46375,\"start\":46367},{\"end\":46383,\"start\":46375},{\"end\":46681,\"start\":46671},{\"end\":46695,\"start\":46681},{\"end\":46707,\"start\":46695},{\"end\":46716,\"start\":46707},{\"end\":46729,\"start\":46716},{\"end\":47005,\"start\":46997},{\"end\":47012,\"start\":47005},{\"end\":47018,\"start\":47012},{\"end\":47024,\"start\":47018},{\"end\":47036,\"start\":47024},{\"end\":47474,\"start\":47466},{\"end\":47480,\"start\":47474},{\"end\":47486,\"start\":47480},{\"end\":47498,\"start\":47486},{\"end\":47948,\"start\":47940},{\"end\":47954,\"start\":47948},{\"end\":47960,\"start\":47954},{\"end\":47972,\"start\":47960},{\"end\":48298,\"start\":48287},{\"end\":48306,\"start\":48298},{\"end\":48315,\"start\":48306},{\"end\":48324,\"start\":48315},{\"end\":48335,\"start\":48324},{\"end\":48736,\"start\":48725},{\"end\":48752,\"start\":48736},{\"end\":48762,\"start\":48752},{\"end\":49126,\"start\":49115},{\"end\":49136,\"start\":49126},{\"end\":49143,\"start\":49136},{\"end\":49156,\"start\":49143},{\"end\":49166,\"start\":49156},{\"end\":49688,\"start\":49680},{\"end\":49696,\"start\":49688},{\"end\":49705,\"start\":49696},{\"end\":49713,\"start\":49705},{\"end\":49723,\"start\":49713},{\"end\":50167,\"start\":50159},{\"end\":50175,\"start\":50167},{\"end\":50558,\"start\":50552},{\"end\":50569,\"start\":50558},{\"end\":50576,\"start\":50569},{\"end\":50585,\"start\":50576},{\"end\":50603,\"start\":50585},{\"end\":50612,\"start\":50603},{\"end\":51047,\"start\":51041},{\"end\":51058,\"start\":51047},{\"end\":51065,\"start\":51058},{\"end\":51073,\"start\":51065},{\"end\":51088,\"start\":51073},{\"end\":51098,\"start\":51088},{\"end\":51107,\"start\":51098},{\"end\":51565,\"start\":51558},{\"end\":51573,\"start\":51565},{\"end\":51581,\"start\":51573},{\"end\":51594,\"start\":51581},{\"end\":51605,\"start\":51594},{\"end\":51615,\"start\":51605},{\"end\":51623,\"start\":51615},{\"end\":52018,\"start\":52011},{\"end\":52026,\"start\":52018},{\"end\":52327,\"start\":52312},{\"end\":52335,\"start\":52327},{\"end\":52345,\"start\":52335},{\"end\":52355,\"start\":52345},{\"end\":52764,\"start\":52753},{\"end\":52772,\"start\":52764},{\"end\":52782,\"start\":52772},{\"end\":52790,\"start\":52782},{\"end\":52802,\"start\":52790},{\"end\":53159,\"start\":53151},{\"end\":53165,\"start\":53159},{\"end\":53171,\"start\":53165},{\"end\":53182,\"start\":53171},{\"end\":53539,\"start\":53531},{\"end\":53550,\"start\":53539},{\"end\":53874,\"start\":53866},{\"end\":53881,\"start\":53874},{\"end\":53888,\"start\":53881},{\"end\":53899,\"start\":53888},{\"end\":53914,\"start\":53899},{\"end\":53927,\"start\":53914},{\"end\":54193,\"start\":54186},{\"end\":54201,\"start\":54193},{\"end\":54210,\"start\":54201},{\"end\":54222,\"start\":54210},{\"end\":54518,\"start\":54512},{\"end\":54760,\"start\":54754},{\"end\":54767,\"start\":54760},{\"end\":54776,\"start\":54767},{\"end\":54784,\"start\":54776},{\"end\":54791,\"start\":54784},{\"end\":54797,\"start\":54791},{\"end\":54805,\"start\":54797},{\"end\":54814,\"start\":54805},{\"end\":54821,\"start\":54814},{\"end\":54832,\"start\":54821},{\"end\":55407,\"start\":55401},{\"end\":55418,\"start\":55407},{\"end\":55427,\"start\":55418},{\"end\":55438,\"start\":55427},{\"end\":55964,\"start\":55958},{\"end\":55971,\"start\":55964},{\"end\":55978,\"start\":55971},{\"end\":55985,\"start\":55978},{\"end\":55993,\"start\":55985},{\"end\":56004,\"start\":55993},{\"end\":56020,\"start\":56004},{\"end\":56032,\"start\":56020},{\"end\":56043,\"start\":56032},{\"end\":56593,\"start\":56587},{\"end\":56600,\"start\":56593},{\"end\":56607,\"start\":56600},{\"end\":56618,\"start\":56607},{\"end\":56893,\"start\":56887},{\"end\":56901,\"start\":56893},{\"end\":56910,\"start\":56901},{\"end\":56918,\"start\":56910},{\"end\":56927,\"start\":56918},{\"end\":56938,\"start\":56927},{\"end\":57296,\"start\":57290},{\"end\":57304,\"start\":57296},{\"end\":57312,\"start\":57304},{\"end\":57319,\"start\":57312},{\"end\":57330,\"start\":57319},{\"end\":57584,\"start\":57577},{\"end\":57592,\"start\":57584},{\"end\":57601,\"start\":57592},{\"end\":57836,\"start\":57830},{\"end\":57843,\"start\":57836},{\"end\":57849,\"start\":57843},{\"end\":57856,\"start\":57849},{\"end\":57862,\"start\":57856},{\"end\":57869,\"start\":57862},{\"end\":58309,\"start\":58301},{\"end\":58318,\"start\":58309},{\"end\":58324,\"start\":58318},{\"end\":58333,\"start\":58324},{\"end\":58339,\"start\":58333},{\"end\":58354,\"start\":58339},{\"end\":58363,\"start\":58354},{\"end\":58374,\"start\":58363},{\"end\":58385,\"start\":58374},{\"end\":58398,\"start\":58385},{\"end\":58906,\"start\":58899},{\"end\":58912,\"start\":58906},{\"end\":58924,\"start\":58912},{\"end\":58935,\"start\":58924},{\"end\":58964,\"start\":58935},{\"end\":59458,\"start\":59449},{\"end\":59466,\"start\":59458},{\"end\":59473,\"start\":59466},{\"end\":59480,\"start\":59473},{\"end\":59935,\"start\":59927},{\"end\":59942,\"start\":59935},{\"end\":59951,\"start\":59942},{\"end\":59963,\"start\":59951},{\"end\":59970,\"start\":59963},{\"end\":59980,\"start\":59970},{\"end\":59987,\"start\":59980},{\"end\":59996,\"start\":59987},{\"end\":60009,\"start\":59996},{\"end\":60336,\"start\":60328},{\"end\":60345,\"start\":60336},{\"end\":60749,\"start\":60742},{\"end\":60755,\"start\":60749},{\"end\":60762,\"start\":60755},{\"end\":60769,\"start\":60762},{\"end\":61156,\"start\":61109},{\"end\":61160,\"start\":61156},{\"end\":61192,\"start\":61160},{\"end\":61196,\"start\":61192},{\"end\":61200,\"start\":61196},{\"end\":61206,\"start\":61200}]", "bib_venue": "[{\"end\":34200,\"start\":34139},{\"end\":34963,\"start\":34901},{\"end\":36211,\"start\":36159},{\"end\":36701,\"start\":36639},{\"end\":37182,\"start\":37120},{\"end\":37915,\"start\":37843},{\"end\":38400,\"start\":38348},{\"end\":39632,\"start\":39570},{\"end\":41616,\"start\":41564},{\"end\":42232,\"start\":42170},{\"end\":42665,\"start\":42603},{\"end\":43838,\"start\":43786},{\"end\":44616,\"start\":44567},{\"end\":45056,\"start\":45004},{\"end\":45520,\"start\":45452},{\"end\":46021,\"start\":45959},{\"end\":47177,\"start\":47115},{\"end\":47639,\"start\":47577},{\"end\":48450,\"start\":48401},{\"end\":48903,\"start\":48841},{\"end\":49307,\"start\":49245},{\"end\":49844,\"start\":49792},{\"end\":50316,\"start\":50254},{\"end\":50753,\"start\":50691},{\"end\":51248,\"start\":51186},{\"end\":51764,\"start\":51702},{\"end\":52496,\"start\":52434},{\"end\":53665,\"start\":53616},{\"end\":54337,\"start\":54288},{\"end\":54973,\"start\":54911},{\"end\":55599,\"start\":55527},{\"end\":56184,\"start\":56122},{\"end\":57990,\"start\":57938},{\"end\":58431,\"start\":58423},{\"end\":59109,\"start\":59045},{\"end\":59621,\"start\":59559},{\"end\":60486,\"start\":60424},{\"end\":60910,\"start\":60848},{\"end\":34137,\"start\":34070},{\"end\":34577,\"start\":34548},{\"end\":34899,\"start\":34822},{\"end\":35365,\"start\":35286},{\"end\":35783,\"start\":35735},{\"end\":36157,\"start\":36090},{\"end\":36637,\"start\":36560},{\"end\":37118,\"start\":37041},{\"end\":37469,\"start\":37423},{\"end\":37841,\"start\":37754},{\"end\":38346,\"start\":38279},{\"end\":38819,\"start\":38737},{\"end\":39227,\"start\":39178},{\"end\":39568,\"start\":39491},{\"end\":39868,\"start\":39797},{\"end\":40327,\"start\":40244},{\"end\":40625,\"start\":40547},{\"end\":40970,\"start\":40932},{\"end\":41251,\"start\":41199},{\"end\":41562,\"start\":41495},{\"end\":41895,\"start\":41842},{\"end\":42168,\"start\":42091},{\"end\":42601,\"start\":42524},{\"end\":42995,\"start\":42946},{\"end\":43334,\"start\":43296},{\"end\":43784,\"start\":43717},{\"end\":44231,\"start\":44182},{\"end\":44565,\"start\":44501},{\"end\":45002,\"start\":44935},{\"end\":45450,\"start\":45376},{\"end\":45957,\"start\":45880},{\"end\":46421,\"start\":46383},{\"end\":46747,\"start\":46729},{\"end\":47113,\"start\":47036},{\"end\":47575,\"start\":47498},{\"end\":48021,\"start\":47972},{\"end\":48399,\"start\":48335},{\"end\":48839,\"start\":48762},{\"end\":49243,\"start\":49166},{\"end\":49790,\"start\":49723},{\"end\":50252,\"start\":50175},{\"end\":50689,\"start\":50612},{\"end\":51184,\"start\":51107},{\"end\":51700,\"start\":51623},{\"end\":52114,\"start\":52042},{\"end\":52432,\"start\":52355},{\"end\":52850,\"start\":52802},{\"end\":53244,\"start\":53182},{\"end\":53614,\"start\":53550},{\"end\":53961,\"start\":53927},{\"end\":54286,\"start\":54222},{\"end\":54564,\"start\":54534},{\"end\":54909,\"start\":54832},{\"end\":55525,\"start\":55438},{\"end\":56120,\"start\":56043},{\"end\":56622,\"start\":56618},{\"end\":56885,\"start\":56799},{\"end\":57288,\"start\":57161},{\"end\":57575,\"start\":57530},{\"end\":57936,\"start\":57869},{\"end\":58421,\"start\":58398},{\"end\":58735,\"start\":58668},{\"end\":59043,\"start\":58964},{\"end\":59557,\"start\":59480},{\"end\":59925,\"start\":59851},{\"end\":60422,\"start\":60345},{\"end\":60846,\"start\":60769}]"}}}, "year": 2023, "month": 12, "day": 17}