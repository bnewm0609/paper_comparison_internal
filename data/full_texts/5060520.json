{"id": 5060520, "updated": "2023-07-19 15:56:48.989", "metadata": {"title": "Dual contouring of hermite data", "authors": "[{\"first\":\"Tao\",\"last\":\"Ju\",\"middle\":[]},{\"first\":\"Frank\",\"last\":\"Losasso\",\"middle\":[]},{\"first\":\"Scott\",\"last\":\"Schaefer\",\"middle\":[]},{\"first\":\"Joe\",\"last\":\"Warren\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 29th annual conference on Computer graphics and interactive techniques", "publication_date": {"year": 2002, "month": null, "day": null}, "abstract": "This paper describes a new method for contouring a signed grid whose edges are tagged by Hermite data (i.e; exact intersection points and normals). This method avoids the need to explicitly identify and process \"features\" as required in previous Hermite contouring methods. Using a new, numerically stable representation for quadratic error functions, we develop an octree-based method for simplifying contours produced by this method. We next extend our contouring method to these simpli\u00a3ed octrees. This new method imposes no constraints on the octree (such as being a restricted octree) and requires no \"crack patching\". We conclude with a simple test for preserving the topology of the contour during simplification.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2249773824", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/siggraph/JuLSW02", "doi": "10.1145/566570.566586"}}, "content": {"source": {"pdf_hash": "5f3921ed1759f43614809b6969a36f3dc2fc5c72", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "20e2b60c9331b6cd545e33cc157ee280d1042789", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/5f3921ed1759f43614809b6969a36f3dc2fc5c72.txt", "contents": "\nDual Contouring of Hermite Data\n\n\nTao Ju jutao@rice.edu \nFrank Losasso losasso@rice.edu \nScott Schaefer sschaefe@rice.edu \nJoe Warren jwarren@rice.edu \n\nRice University\n\n\n\nIntroduction\n\n\nDual Contouring of Hermite Data\nFigure 1: A temple undergoing destructive modi\u00a3cations. Both models were generated by dual contouring a signed octree whose edgesCR Categories: I35 [Computation Geometry and Object Model- ing]: CSG-Curvesurfacesolid and object representations Keywords: implicit functionscontouringcrack prevention*\nThis paper describes a new method for contouring a signed grid whose edges are tagged by Hermite data (i.e; exact intersection points and normals). This method avoids the need to explicitly identify and process \"features\" as required in previous Hermite contouring methods. Using a new, numerically stable representation for quadratic error functions, we develop an octree-based method for simplifying contours produced by this method. We next extend our contouring method to these simpli\u00a3ed octrees. This new method imposes no constraints on the octree (such as being a restricted octree) and requires no \"crack patching\". We conclude with a simple tion.contain Hermite data. The modified model on the right was computed from the lefthand model in real-time.test for preserving the topology of the contour during simplificaquadratic error functions, polyhedral simplification we identified several problems:The tiling of these flat regions trivially inflated the number of nipulating the sign field, the resulting environment was geo-process environments defined using grids of size 64 tained large flat regions tiled by numerous small polygons. tively small grid sizes. In particular, the final game could only incorporate technology that allowed real-time modification of the\n\nIntroduction\n\nIn the spring of 2001, 17 students in an advanced computer graphics class set out on a semester-long group project to develop a cuttingedge computer game. One of the primary goals for the game was to game geometry. (In gaming terminology, such geometry is referred to as \"destructible\".) The geometric engine for the resulting game was based on implicit modeling with the environment modeled as the zero contour of a 3D grid of scalar values. Our choice of this representation was guided by the fact that CSG operations are particularly simple to implement for implicit models. Although this game was a relative success, we noted that our implicit approach to modeling had several disadvantages. During a post-project review,\n\n\u2022 Due to the use of a uniform grid, we were restricted to rela-3 due to the requirement that the game run in real-time.\n\n\u2022 The resulting environment lacked the sharp edges found in most polyhedral models. Although we could simulate a small class of shapes such as rooms and hallways by cleverly mametrically simple in comparison to those modeled using BSP trees.\n\nIn preparation for the next version of the gaming class, the instructor and three members of the class (the authors) decided to pursue a yearlong project to rewrite the game engine to address these recently developed modeling technology for our program. Each of these pieces addresses one of the problems:\n\n\u2022 First, we use an octree in place of a 3D uniform grid. In particular, our octree is inspired by those used in Adaptive Distance Fields [Frisken et al. 2000;Perry and Frisken 2001] in which signs are maintained at corners of cubes in the octree.\n\n\u2022 At the leaves of the octree, we tag those edges with sign changes by exact intersection points and their normals from the contour. This choice is inspired by the Extended Marching Cubes method of [Kobbelt et al. 2001]. Adding normals allows this method to exactly reproduce a wide class of polyhedral shapes as well as curve or sharp edges on the contour.\n\n\u2022 Third, we use these normals to de\u00a3ne a quadratic error function (QEF) for each leaf of the octree. These QEFs are then ilar to that of [Lindstrom 2000]. Our method uses the added cubes in the octree to preserve the topology of this contour\n\nThe resulting representation is an octree whose leaf cubes have signs at their corners with exact intersections and normals tagging 2 for an example). Interior nodes in the octree contain QEFs used This representation can accurately approximate implicit shapes as well as parametric shapes such as subdivision surfaces. (These parametric shapes are imported as polygonal approximations and scan converted into a signed octree.) The adaptive structure of the octree allows for real-time approximate CSG Given that we are building on several pieces of previous work, we should make clear our original contributions in this paper. First, we propose a new method for contouring a 3D grid of Hermite data that avoids the need to explicitly identify and process \"features\" as done in the Extended Marching Cubes method. After extenddemonstrate how to model textured contours. We also introduce a new, numerically stable representation for quadratic error functions that we use in a standard octree-based method for simplifying these contours and their textured regions. We then develop a version of straints on the octree (such as being a restricted octree) and requires no \"crack patching\". We conclude with a simple new test for preserving the topology of both the contour and its textured regions 2 Dual contouring on uniform grids Although our ultimate goal is to develop a simple contouring ods for contouring signed uniform grids. The upper left portion of edges of the grid that exhibit a sign change are tagged by Hermite data consisting of exact intersection points and normals from the contour. This Hermite data can be computed directly from the imonal mesh. \n\n\nPrevious contouring methods\n\nCube-based methods such as the Marching Cubes (MC) algorithm and its variants generate one or more polygons for each cube in the grid that intersects the contour. Typically, these methods generate one polygon for each portion of the contour that interest a particular cube with the vertices of these polygons being positioned at the intersection of the contour with the edges of the cube. The upper ure 3 shows a 3D example of a sphere generated as the zero contour of the function f [x, y, z] = 1 \u2212 x 2 \u2212 y 2 \u2212 z 2 . This contour consists of a collection of polygons that approximate the restriction of the contour to individual cubes in the grid.\n\nDual methods such as the SurfaceNets algorithm of [Gibson 1998] generate one vertex lying on or near the contour for each cube that intersects the contour. For each edge in the grid that exhibits a sign change, the vertices associated with the four cubes that contain the edge are joined to form a quad. The result is a continuous polygonal surface that approximates the contour. The right-hand using the SurfaceNets method. Note that the polygonal mesh produced by the SurfaceNets method is dual to the mesh produced by MC in the standard topological sense: vertices of the SurfaceNets mesh correspond to faces of the MC mesh and vice versa. Dual methods typically deliver polygonal meshes with better aspect ratios since the vertices of the mesh are free to move inside the cube as opposed to being restricted to edges of the grid as in cube-based methods. 1 1 Note that other methods such as [Wood et al. 2000]   The Extended Marching Cubes (EMC) method is a hybrid between a cube-based method and a dual method. The EMC method detects the presence of sharp \"features\" inside a cube by examining normals associated with the intersection points on the edges of the cube. cone are deemed to be featureless. In this case, the EMC method generates a polygon(s) using standard MC. For those cubes that do contain a feature, the method generates a vertex positioned at the minimizer of the quadratic function\nE[x] = \u2211 i (n i \u00b7 (x \u2212 p i )) 2(1)\nwhere the pairs p i , n i correspond to the intersections (and unit normals) of the contour with the edges of the cube. Once this vertex has been positioned, the method generates a triangle fan to the edges on the boundary of the cube. Finally, if two adjacent cubes both contain feature vertices, then the pair of triangles generated by the fan contour generated by EMC.\n\n\nDual contouring of Hermite data\n\nThe main advantage of the EMC method is that it uses Hermite data and QEFs in positioning the vertices associated with cubes that contain features. This Hermite approach can generate contours that contain both sharp vertices and sharp edges. One drawback of this method is the need to explicitly test for such features and to then perform some type of special processing in these cases. As an alternative to the EMC method, we propose the following dual contouring method for Hermite data:\n\n1. For each cube that exhibits a sign change, generate a vertex positioned at the minimizer of the quadratic function of equation 1.\n\n2. For each edge that exhibits a sign change, generate a quad connecting the minimizing vertices of the four cubes containing the edge.\n\nThis method is an interesting hybrid of the EMC method and the SurfaceNets method. It uses the EMC method's feature vertex rule for positioning all vertices of the contour while using the SurfaceNets method to determine the connectivity of these vertices. (Note that the SurfaceNets method uses a completely different rule methods like the ones above since this grid structure is the basis of our fast CSG operations. for positioning vertices on the contour.) By using QEFs to position all of the vertices of the contour, this method avoids the need to explicit test for features. Vertices on the contour are simply positioned to be consistent with the normals associated with the data.\n\ncontour generated by the Hermite data in the upper left portion of Figure 4 shows a 3D example of a mechanical part modeled by dual contouring Hermite data on a 64 3 grid. The left image shows a smooth shaded version of the part while the right image shows the polygonal mesh produced by dual contouring. The intersection points and normals for the model were generated from a closed model was computed using a standard scan conversion algorithm as described in [Foley et al. 1995].\n\n\nRepresenting and minimizing QEFs\n\nAt this point, we should make a few comments concerning how we represent and minimize quadratic error functions. The function E[x] of equation 1 is constructed from a collection of intersection points p i and normals n i . This function E[x] can be expressed as the inner\nproduct (Ax \u2212 b) T (Ax \u2212 b)\nwhere A is a matrix whose rows are the normals n i and b is a vector whose entries are n i \u00b7 p i . Typically, the quadratic function E[x] is expanded into the form\nE[x] = x T A T Ax \u2212 2x T A T b + b T b(2)\nwhere the matrix A T A is a symmetric 3 \u00d7 3 matrix, A T b is a column vector of length three and b T b is a scalar. The advantage of this expansion is that only the matrices A T A, A T b and b T b need be stored Furthermore, a minimizing valuex for E [x] can be computed by solving the normal equations A T Ax = A T b.\n\nOne drawback of this representation is that it is numerically un- of 10 \u22126 . Of course, the main drawback of using doubles in place For our application, we found this solution to be problematic since our program tended to be space bound as opposed to being time bound. (See the last section for details.)\n\nAn alternative representation for QEFs that delivers the accuracy sition [Golub and Van Loan 1989]. If (A b) is the matrix formed by appending the column vector b to the matrix A, the idea behind this decomposition is to commpute an orthogonal matrix Q whose product with (A b) is an upper triangular matrix of the form\n\uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed x x x x 0 x x x 0 0 x x 0 0 0 x 0 0 0 0 . . . . . . . . . . . . \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8 = \uf8eb \uf8ec \uf8ed\u00c2b 0 r 0 0 . . . . . . \uf8f6 \uf8f7 \uf8f8 .(3)\nHere,\u00c2 is an upper triangular 3 \u00d7 3 matrix,b is a column vector of length 3 and r is a scalar. This matrix Q can be expressed as the product of a sequence of Givens rotations where each rotation zeroes a single entry in the lower part of (A b).\n\nSince any orthogonal matrix Q satis\u00a3es the relation Q T Q = I, E[x] can be rewritten as\n(Ax \u2212 b) T (Ax \u2212 b) = (Ax \u2212 b) T Q T Q(Ax \u2212 b) = (QAx \u2212 Qb) T (QAx \u2212 Qb) = (\u00c2x \u2212b) T (\u00c2x \u2212b) + r 2\nTo evaluate E [x] in this form, we compute the product of the vector Ax \u2212b with itself and then add r 2 . example, we note that b has entries on the order of 10 3 and therefor\u00ea Ax \u2212b has entries that are on the order of 10 \u22123 when x is chosen on the order of 10 \u22126 .\n\nIf\u00c2 is non-singular, the minimizingx can be computed by solv-ing\u00c2x =b using back substitution. However, during dual contouring,\u00c2 is often computed from noisy normals that are nearly coplanar. In this case, the matrix\u00c2 is nearly singular. As a result,\n\nTo solve this problem, we compute the SVD decomposition of\u00c2 and form its pseudo-inverse by truncating its small singular values as done in [Kobbelt et al. 2001;Lindstrom 2000]. Based on experimentation, we typically truncate those singular values with a magnitude of less than 0.1. Using the resulting pseudo-inverse, we then approximately solve\u00c2x =b while minimizing the distance ofx to the centroid of the intersection points p i .\n\n\nModeling textured contours\n\nboth contouring algorithms produced surfaces that bounded the transition from negative (empty) space to positive (solid) space. In a realistic environment, solids are not composed of a single homogeneous material. In practice, solids are composed of a collection of materials; each of which induces a region with a distinct texture on the contour. Figure 5 shows an example of a cube consisting of two materials, a gold material formed by extruding a Chinese character through the cube and a red material forming the remaining portion of the cube. Note that the gold material is a true solid (and not a surface texture) since the gold character extends all the way through the cube (as evidenced by the cube after a spherical cut on the right).\n\nThis partition of solids into distinct materials can be modeled implicitly by replacing the signs \u2212 and + (corresponding to empty   (right) and solid space) by a material index. In this representation, each grid point has an index corresponding to a distinct material.(See [Bloomenthal and Ferguson 1995;Bonnell et al. 2000] for examples of similar approaches.) Figure 6 shows a 2D grid with three distinct indices; the gray and black grid points denote distinct solid materials while white grid points denote empty space. As before, edges that exhibit index changes are also tagged by exact intersection points and normals. During contouring, this Hermite data is grid. Next, for each edge that exhibits a index change, dual contouring generates a quad connecting the minimizers of the QEFs for the the dual contour that separates the three materials.\n\nIf the viewer is restrict to empty space, we can optimize this contouring method for solids that consist several different materials. In particular, quads generated by solid/solid edges are not visible from empty space. The remaining quads correspond to solid/empty edges and can be textured using the material properties of the solid endpoint of the edge 2 . three material; empty space, gold material, and red material. The resulting dual contour consists of red quads generated by red/empty edges and gold quads generated by gold/empty edges. Red/gold edges do not generate quads.\n\n2 Each material has an associated \"black box\" de\u00a3ned during the material's addition to the model that converts 3D geometric coordinates into 2D texture coordinates. ing doubles, the value of E[x] in our flat example now has an error of floats is that the space require to store a QEF is doubled.\n\nof doubles while using only floats is based on the QR decompo-Returning to our previous flat from the flat regions. Therefore, the computed value of E[x] will be the minimizing x may lie far outside the defining cube.\n\nIn figure 3, In figure 5, the underlying grid contains four cubes containing the edge. The left portion of figure 6 shows used in equation 1 to define a QEF associated with each cube in the When three or more materials meet inside a single cube, dual contouring places the minimizing vertex at or near their intersection point. This positioning allows the outlines of letters and characters embossed on a surface to be reproduced very accurately. (The right-Cube-based contouring methods constrain the vertices of the conachieve.\n\nThe move to the multi-material case allows for several interesting variations on the CSG operations used in the two-material case. In place of the standard CSG operations, we use a single operation Add that overwrites a portion of the existing model with a new material. Subtractive operations such as the spherical cut in the upper space to the model. Another useful variant of Add is the operation Replace that overwrites only the solid portion of the model. This operation can also be used to simulate texturing a portion of the of the solid replaced by a blue material and then subsequently cut by a sphere.\n\n\nAdaptive dual contouring\n\nThe previous algorithm for dual contouring has the obvious disadvantage of being formulated for uniform grids. In practice, most of a uniform grid is devoted to storing homogeneous cubes (i.e; cubes whose vertices all have the same sign). Only a small fraction of the cubes are heterogeneous and thus, intersect the contour. One way to avoid this waste of space is to replace the uniform grid by an octree. In this section, we describe an adaptive version dual contouring based on simplifying an octree whose leaves contain QEFs. This method is essentially an adaptive variant of a uniform simpli-Our method has three steps:\n\n\u2022 Generate a signed octree whose homogeneous leaves are maximally collapsed.\n\n\u2022 Construct a QEF for each heterogeneous leaf and simplify the octree using these QEFs.\n\n\u2022 Note that our method also differs from Lindstrom's method in that we generate polygons from the signed octree instead of collapsing polygons in an existing mesh.\n\nforward. For implicit or polygonal models, this octree can be constructed recursively in a top-down manner by spatially partitioning the models. For signed data on a uniform grid, this octree can be generated in a bottom-up manner by recursively collapsing homogeneous regions. The next two subsections examine the second and third parts of this process in more detail. (Note that the adaptive method described here works for multi-material case without mod-\n\n\nOctree simplification using QEFs\n\nOur approach to the second step of the adaptive method is to construct a QEF associated with each heterogeneous leaf using equation 1. Note that the residual associated with the minimizer of this QEF estimates how well the minimizing vertex approximates the original geometry [Garland and Heckbert 1998]. Our approach to simplifying the resulting octree is to form QEFs at interior nodes of the octree by adding the QEFs associated with the leaves of the subtree rooted by the node. Those interior nodes whose QEFs have a residual less than a given tolerance are collapsed into leaves. our internal representation for QEFs to take advantage of the QR decomposition discussed in the previous section. To this end, we of the upper triangular matrix of equation 3. Adding two QEFs corresponds to merging the rows of their two upper triangular matrices to form a single 8 \u00d7 4 matrix of the form\n\uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed x x x x 0 x x x 0 0 x x 0 0 0 x x x x x 0 x x x 0 0 x x 0 0 0 x \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8\nand then performing a sequence of Givens rotations to bring the matrix back into upper triangular form of equation 3. Due to the orthogonality of the Givens rotations, the QEF for the merged system is the sum of QEFs associated with the unmerged systems. Note that bringing the merged system back into upper triangular form is slower (around 150 arithmetic operations) than simply adding proved stability of the representation leads to better simpli\u00a3cations. Figure 7 gives a concrete illustration of the advantage of the QR mesh was computed using the standard representation for QEFs, the 3 unit grid.) Due to the numerical error introduced by the instability of the standard representation, the mesh on the left contains 78K polygons while the mesh on the right has 36K polygons.\n\n\nPolygon generation for simplified octrees\n\ngon generation phase of dual contouring appropriately. For cubebased methods, this problem of generating contours from octrees has been extensively studied [Bloomenthal 1988;Wilhelms and Gelder 1992;Livnat et al. 1996;Shekhar et al. 1996;Westermann et al. 1999;Frisken et al. 2000;Cignoni et al. 2000]. Typically, these methods restrict the octree to have neighboring leaves that differ by at most one level (i.e; \"restricted\" octrees) and usually perform some type of \"crack repair\" to ensure a closed contour. [Perry and Frisken 2001] describes a variant of the SurfaceNets algorithm for signed octrees based on enumerating the edges associated with leaves of the octree. In particular,\n\n\u2022 For each edge that exhibits a sign change, generate all triangles that connect the vertices associated with any three distinct cubes containing the edge.\n\nhand portion of figure 12 shows a close-up example of this effect.) tour to lie on the edges of the 3D grid making this effect difficult to contour. For example, the lower images in figure 5 show a portion right of figure 5 can be represented as adding a sphere of empty fication method due to [Lindstrom 2000].\n\nRecursively generate polygons for this simplified octree.\n\nGenerating the signed octree in the first step is relatively straightification.)\n\nGiven this simplified octree, our next task is to modify the poly-(To give a sense of scale, the temple was defined over a 256 10 floats as done in the standard representation. However, the im-\n\nThe only modification that we make to this method is to change represent a QEF in terms of 10 floats corresponding to the entries representation's stability. The meshes in this figure show two simright mesh was computed using the QR representation for QEFs.\n\nplifications of the temple from figure 1 to an error of 0.014; the left To avoid generating redundant triangles, this method culls some of the generated triangles based on the relative positions of their corresponds to either one or two triangles (a quad) on the resulting contour. The main disadvantage of this method (as acknowledged by the authors) is that it occasionally yields contours with cracks. by performing extra subdivision on the octree.\n\nWe propose a simpler rule for dual contouring signed octrees that avoids this need for extra subdivision. The rule is based on the observation that only those edges of leaf cubes that do not properly contain an edge of a neighboring leaf should generate a polygon. We refer to such edges as the minimal edges of the octree. Thus, our rule for polygon generation is\n\n\u2022 For each minimal edge that exhibits a sign change, generate a polygon connecting the minimizing vertices of cubes that contain the edge.\n\nThis rule has the property that it always produces a closed polygthe mesh is contained by an even number of polygons. To prove this fact, we observe that edges in the dual contour are generated by pairs of face-adjacent leaf cubes. The minimal edges tiling the boundary of their common square face always exhibit an even number of sign changes since the boundary of the square is a closed curve. Therefore, the rule always generates an even number of polygons containing the edge. For example, the common square face always consists of four consecutive edges in the uniform case. This chain of four edges can exhibit either two or four sign changes and consequently generate two or four polygons containing the common edge. (It is possible to construct signed octrees that generate dual contours with 6 or more polygons share a common edge. Note that the Perry/Frisken rule enumerates edges in the octree and then locates those cubes that contain the edge. This neighbor maintaining links between neighboring cubes. Instead of enumermethod for enumerating those sets of cubes that contain a common minimal edge. For the sake of simplicity, we explain this enumeration method for quadtrees while noting that a similar method works for octrees.\n\nThe key to this enumeration procedure are two recursive functions faceProc[q] and edgeProc[q 1 ,q 2 ]. Given an interior node q in the quadtree, faceProc[q] recursively calls itself on the four children of q as well as calling edgeProc on all four pairs of edgeadjacent children of q. Given a pair of edge-adjacent interior nodes q 1 and q 2 , edgeProc[q 1 ,q 2 ] recursively calls itself on the two pairs of edge-adjacent children spanning the common edge between q 1 and q 2 . Figure 9 depicts the mutually recursive structure of these two functions.\n\nThe recursive calls to edgeProc[q 1 ,q 2 ] terminate when both q 1 and q 2 are leaves of the quadtree. At this point, the call to edgeProc has all of the information necessary to generate the segment associated with the minimal edge shared by q 1 and q 2 . Note the running time of this method is linear in the size of the quadtree since there is one call to faceProc for each square in the quadtree and one call to edgeProc for each edge in the quadtree.\n\nContouring octrees requires three functions cellProc[q] , faceProc[q 1 ,q 2 ] and edgeProc[q 1 ,q 2 ,q 3 ,q 4 ] . The function cellProc spawns eight calls to cellProc, twelve calls to faceProc and six calls to edgeProc. faceProc spawns four calls to faceProc and four calls to edgeProc. Finally, edgeProc spawns two calls to edgeProc. The recursive calls to edgeProc[q 1 ,q 2 ,q 3 ,q 4 ] terminate at minimal edges of the octrees where all of the q i 's are leaves.\n\n\nSimplification with topology safety\n\nSimpli\u00a3cation methods such as [Rossignac and Borrell 1993;Lindstrom 2000] have the property that the topological connectivity of More sophisticated methods such as [Stander and Hart 1997;Gerstner and Pajarola 2000;Wood et al. 2000;Guskov and Wood 2001] were developed to maintain the connectivity of the mesh during simpli-Unfortunately, in our setting, not only can the topologalso the connectivity of its textured regions.\n\nnize. While these topological changes are not always undesirable, we wish to have the option of maintaining the topological connectivity of the contour and its textured regions during simpli\u00a3cation. corresponding edges inside a leaf cube. In the final mesh, each edge\n\nThe authors identify these problem configurations and avoid them\n\nIn particular, every edge in onal mesh for any simplified octree. ical connectivity of the contour change during simplification, but ure 12 shows an example of a simplification in which distinct parts ating edges and trying to find neighbors, we propose a recursive finding entails either walking up and down the octree or explicitly Speci\u00a3cally, given an interior node in the octree whose eight chilthe corners of these leaves that guarantees that the topological connectivity of the dual contour and its textured regions is preserved during collapse of the node.\n\n\nThe two-signed case\n\nConsider a coarse cube consisting of eight leaf cubes. The signs Our goal is to develop a grid is topologically equivalent to the dual contour generated by the coarse grid 3 .\n\nBefore presenting the test, we recall that a d-dimensional contour is locally a manifold if it is topologically equivalent to a ddimensional disc. Since a cube has twelve edges, dual contouring can generate up to twelve polygons that meet at the central vertex However, there exist sign con\u00a3gurations for which the dual contour is non-manifold. ous\" sign con\u00a3gurations in standard cube-based methods.) Given this de\u00a3nition, the safety test has three checks: equivalence on the edges of the coarse cube. Next, the method checks for topological equivalence on the faces of the coarse cube. Finally, the method checks for equivalence on the interior of the coarse cube. These checks can be implemented as a sequence of sign comparisons on the 3 \u00d7 3 \u00d7 3 grid of signs.\n\n\u2022 The sign in the middle of a coarse edge must agree with the sign of at least one of the edge's two endpoints.\n\n\u2022 The sign in the middle of a coarse face must agree with the sign of at least one of the face's four corners.\n\n\u2022 The sign in the middle of a coarse cube must agree with the sign of at least one of the cube's eight corners.\n\n3 Two shapes are topologically equivalent if they can be deformed into each other by a continuous, invertible mapping. Figure 10: Three signed quadtrees and their dual contours. Figure 10 shows three signed quadtrees that are candidates for is non-manifold. The dual contour for the middle quadtree also has two distinct components. In this case, the third check rejects the The signs for the rightmost quadtree satisfy all three\n\nThe proof of correctness for these sign checks is based on establishing topological equivalence for subfaces of the coarse cube in dergone a topology change that disconnects the mesh. The middle tion.\n\n\nThe multi-material case\n\ncussed in the previous sections is that these methods handle the Luckily, the safety test described in the previous subsection also generalizes to the contours of multi-material regions with one small change.\n\nare inherently non-manifold in the two-material sense. For examthree materials. Two of the contours have a vertex where three materials meet. Note that if we consider the boundary of each material's region separately, we can still classify whether this portion of contour is a quasi-manifold if the boundary of each material's region is a manifold. In the two-material case, being a quasi-manifold is equivalent to being a manifold. Now, the multi-material safety test determines whether it is topologically safe to simplify dual contours that are quasi-manifolds. As before, this restriction is not particularly problematic since most portions of a multi-material contour are quasi-manifold. This new test again consists of three phases and is identical to the twochecks for whether the contour inside a single cube is a manifold by an equivalent test for whether the contour is a quasi-manifold. The index tests in phase three remain unchanged.\n\nIn analogy with the manifold case, the quasi-manifold test for a multi-material cube involves collapsing each edge of the cube whose endpoints have the same index. Now, the dual contour associated with the cube is a quasi-manifold if and only if the collapsed edge graph is a simplex (i.e; a point, a segment, a triangle or a tetrahedron). As in the two-sign case, the values of this function can be pre-computed and stored in a lookup table of size 4 8 . (If a cube has 5 or more distinct indices, its edge graph cannot collapse to a index on the cube and treating all of the remaining indices as being equivalent. Since the resulting edge graph collapses to a segment, test for determining whether the dual contour generated by this fine dren are leaves, we desire a test based on the signs (or indices) at corners defined a 2 \u00d7 2 \u00d7 2 coarse grid.\n\nat the corners of the eight leaf cubes define a 3 \u00d7 3 \u00d7 3 grid whose associated with the cube. For most common sign configurations on (These configurations correspond to the \"ambigu-the cube, these polygons define a manifold at this vertex.\n\nTest whether the dual contour for each individual fine cube is Test whether the fine contour is topologically equivalent to the The first two checks restrict the simplification process to manithe fine leaf cubes are themselves the results of a previous collapse.) due to unsafe simplification. For the first two checks, [Gerstner and In practice, this restriction is acceptable since most fine resolution sign configurations associated with a single cube and stored in a fine contours as follows: First, the method checks for topological simplex.) The correctness of this test can be verified by selecting an material test with the exception that we replace the first and second the dual contour is a manifold. Specifically, a multi-material dual ple, figure 11 shows three examples of dual contours separating the An apparent difficulty is that the contours of multi-material regions case of multiple materials without any extra difficulty.\n\nOne nice feature of the contouring and simplification methods dis-tion with the topology checks preventing further unsafe simplifica-example of a simplified version of the mechanical part that has un-order of increasing dimension. The right mesh in figure 8 shows an mesh in figure 8 shows an example of the part after safe simplifica-tinct connected components. In this case, the first check rejects the simplified.\n\nsimplification. The dual contour for the left quadtree has two dissimplification as unsafe since the contour for the collapsed quadtree checks and therefore the quadtree can be safely simplified.\n\nsimplification since the left edge of the quadtree cannot be safely Figure 11: Three multi-material quadtrees and their dual contours. the portion of the contour corresponding to the chosen index is a manifold. Figure 11 shows two multi-material quadtrees that are candidates fails on the bottom edge of the quadtree. The middle quadtree passes all three checks and collapses to the quadtree on the right. Note that the contour for this collapsed quadtree is a quasi-manifold since the collapsed edge graph for this square is a triangle.\n\ntype of topological safety. Note that the disjoint components of the Chinese character have fused together. The right version has been\n\n\nResults\n\nThe current version of our geometric program runs on a consumergrade PC equipped with a GeForce 3 video card. The program performs adaptive dual contouring on an indexed octree. The table below shows the number of quads generated by our method for vartimes to simplify the initial octree (with topological safety) and then to compute. \n\nFigure 2 :\n2A signed grid with edges tagged by Hermite data (upper left), its Marching Cubes contour (upper right), its Extended Marching Cubes contour (lower left), and its dual contour (lower right).\n\nFigure 3 :\n3figure 2 shows a typical example of a signed uniform grid. Those plicit definition of the contour or by scan converting a closed polygrespect to the underlying fine grid. side of figure 3 shows an example of the same sphere contoured generated from the signed grid to its left. The left-hand side of fig-ing this contouring method to the case of multiple materials, we right portion of figure 2 shows a 2D example of the MC contour A sphere contoured using the Marching Cubes method (left) and the SurfaceNets method (right).\n\nFigure 4 :\n4A mechanical part generated by dual contouring Hermite data on a 64 3 grid.\n\n\ning point arithmetic when the intersection points and normals used 256 3 T b can be on the order of 6 zero), the resulting value has an error on the order of 1. One possible solution to this problem is to use double precision T A, A T b and b T b. Us-Those cubes whose normals lie inside a user-specified The lower right portion of figure 2 shows a 2D example of the dual the figure. to their common face has its common edge flipped to form a feature subdivision surface. A sign field denoting the inside/outside of the edge. The lower left portion of figure 2 shows a 2D example of the (10 floats), as opposed to storing the matrices A and b. stable. For example, consider computing the value of E[x] in floatin constructing E[x] are sampled from a flat area. For a grid of size 10 . Since floats are only accurate to six decimal digits, if E[x] is numbers instead of floats in representing A evaluated at points on the original flat area (where E[x] should be (as in figure 1), the magnitude of b\n\nFigure 5 :\n5A solid cube undergoing a sequence of CSG operations.\n\nFigure 6 :\n6The dual contour for a three-index grid (left), treating the two solid (dark) indices as single index\n\nFigure 7 :\n7Closeups of two polygonal approximations to the temple computed using the standard (left) and QR (right) representation for QEFs.\n\nFigure 9 :\n9the rightmost mesh has undergone a topology change. This rule generates triangles instead of quads in transitional areas cubes. Minimal edges in the middle of the shared coarse face are contained by only three cubes and generate triangles that form aFigure 7shows many examples of such transition triangles produced by contouring Recursive functions faceProc (black) and edgeProc (gray) used in enumerating pairs of leaf squares that contain a common edge.\n\nFigure 8 :\n8Three simplified versions of the mechanical part.\n\n\nure 8 shows three simplified approximations to the mechanical part. of the octree where a single coarse cube is face-adjacent to four fine transition between coarse quads and fine quads. a simplified octree. of the Chinese character have merged making it difficult to recog-The left side of fig-fication. the polygonal mesh may change during simplification.\n\nFigure 12 :\n12The Chinese cube after unsafe simplification (left) and for simplification. The left quadtree is rejected since the third check safe simplification (right). Note that distinct parts of the character from figure 5. have merged during unsafe simplification. safely simplified using the multi-sign test with separate regions of Figure 12 shows two simplified versions of the Chinese cube the character remaining distinct after simplification. The left version has been simplified without any ious examples after simplification to an error tolerance of 0.01. (All generate polygons from the simplified octree. The CSG operations grids have unit spacing.) The time field represents the sum of the (spheres of radius 6) in figure 1 took approximately 30 milliseconds LINDSTROM, P. 2000. Out-of-core simplification of large polygonal models. In Pro-tively sampled distance fields:\n\n\nedges that exhibit sign changes. (See the upper left portion of figure during simplification.information specified by the signs attached to the corners of deficiencies. In particular, we focused on adapting three pieces of operations and simplification of the resulting shapes.contour without \nWe focus our attention on grid-based \n\nused in an octree-based polyhedral simplification method sim-\n\nduring simplification. \n\nour contouring method for simplified octrees that imposes no con-\n\nduring simplification. \n\nmethod that is suitable for octrees, we first consider various meth-\n\n\n\n1 .\n1Test whether the dual contour for the coarse cube is a manifold. If not, stop.2. \na manifold. If not, stop. \n\n3. \ncoarse contour on each of the sub-faces of the coarse cube. If \nnot, stop; otherwise safely collapse. \n\nfold dual contours. (Note that the second check can be dropped if \n\ncontours are manifold with non-manifold contours usually arising \n\nPajarola 2000] describe a simple test for determining whether the \ncontour associated with a single cube is a manifold. The idea is to \nrepeatedly collapse the edges of the cube whose corners have the \nsame sign to a single vertex. Now, the contour associated with the \ncube is manifold if and only if the result of this reduction is a single \nedge. The result of this test can be pre-computed for all possible \n\ntable of size 2 8 . \nThe third check tests topological equivalence of the coarse and \n\n\nAcknowledgements We would like to thank Danny Sorenson for his suggestion to use the QR decomposition to represent QEFs. We would also like to thank Marc Levoy and the Michelangelo Project for their gracious permission to use the scanned version of Michelangelo's David.\nPolygonization of non-manifold implicit surfaces. J Bloomenthal, K Ferguson, 309-316. ISBN 0-201-84776-0Proceedings of SIGGRAPH 95. SIGGRAPH 95Los Angeles, CaliforniaACM SIGGRAPH / Addison WesleyBLOOMENTHAL, J., AND FERGUSON, K. 1995. Polygonization of non-manifold implicit surfaces. In Proceedings of SIGGRAPH 95, ACM SIGGRAPH / Addison Wesley, Los Angeles, California, Computer Graphics Proceedings, Annual Confer- ence Series, 309-316. ISBN 0-201-84776-0.\n\nPolygonization of implicit surfaces. J Bloomenthal, Computer Aided Geometric Design. 5BLOOMENTHAL, J. 1988. Polygonization of implicit surfaces. Computer Aided Geometric Design 5, 4, 341-356.\n\nConstructing material interfaces from data sets with volume-fraction information. K S Bonnell, D R Schikore, K I Joy, M Duchaineau, B Hamann, 367-372. ISBN 0-7803-6478-3IEEE Visualization. BONNELL, K. S., SCHIKORE, D. R., JOY, K. I., DUCHAINEAU, M., AND HAMANN, B. 2000. Constructing material interfaces from data sets with volume-fraction information. In IEEE Visualization 2000, 367-372. ISBN 0-7803-6478-3.\n\nP Cignoni, F Ganovelli, C Montani, R Scopigno, Reconstruction of topologically correct and adaptive trilinear isosurfaces. CIGNONI, P., GANOVELLI, F., MONTANI, C., AND SCOPIGNO, R. 2000. Recon- struction of topologically correct and adaptive trilinear isosurfaces. 399-418.\n\nComputer Graphics: Principles and Practice. J Foley, A Van Dam, S Feiner, J Hughes, Addison WesleyFOLEY, J., VAN DAM, A., FEINER, S., AND HUGHES, J. 1995. Computer Graphics: Principles and Practice. Addison Wesley.\n\nAdap-A general representation of shape for computer graphics. S F Frisken, R N Perry, A P Rockwood, T R Jones, Proceedings of SIGGRAPH 2000. SIGGRAPH 2000ACM Press / ACM SIGGRAPH / Addison Wesley LongmanAnnual Conference SeriesFRISKEN, S. F., PERRY, R. N., ROCKWOOD, A. P., AND JONES, T. R. 2000. Adap- A general representation of shape for computer graphics. In Proceedings of SIGGRAPH 2000, ACM Press / ACM SIGGRAPH / Addison Wesley Longman, Computer Graphics Proceedings, Annual Conference Series, 249-254.\n\nSimplifying surfaces with color and texture using quadric error metrics. M Garland, P S Heckbert, IEEE Visualization '98. IEEEGARLAND, M., AND HECKBERT, P. S. 1998. Simplifying surfaces with color and texture using quadric error metrics. In IEEE Visualization '98, IEEE, 263-270.\n\nTopology preserving and controlled topology simplifying multiresolution isosurface extraction. T Gerstner, R Pajarola, IEEE Visualization. GERSTNER, T., AND PAJAROLA, R. 2000. Topology preserving and controlled topol- ogy simplifying multiresolution isosurface extraction. In IEEE Visualization 2000, 259-266.\n\nUsing distance maps for accurate surface reconstruction in sampled volumes. S F F Gibson, Visualization Symposium. IEEEGIBSON, S. F. F. 1998. Using distance maps for accurate surface reconstruction in sampled volumes. In 1998 Volume Visualization Symposium, IEEE, 23-30.\n\nG A Golub, C F Van Loan, Matrix Computations. Johns Hopkins University Presssecond ed.GOLUB, G. A., AND VAN LOAN, C. F. 1989. Matrix Computations, second ed. The Johns Hopkins University Press.\n\nTopological noise removal. I Guskov, Z Wood, Graphics Interface. GUSKOV, I., AND WOOD, Z. 2001. Topological noise removal. In Graphics Interface 2001, 19-26.\n\nFeature-sensitive surface extraction from volume data. L P Kobbelt, M Botsch, U Schwanecke, H.-P Seidel, Proceedings of SIG-GRAPH. SIG-GRAPHACM Press / ACM SIGGRAPHAnnual Conference SeriesKOBBELT, L. P., BOTSCH, M., SCHWANECKE, U., AND SEIDEL, H.-P. 2001. Feature-sensitive surface extraction from volume data. In Proceedings of SIG- GRAPH 2001, ACM Press / ACM SIGGRAPH, Computer Graphics Proceedings, Annual Conference Series, 57-66.\n\nComputer Graphics Proceedings, Annual Conference Series. ACM Press / ACM SIGGRAPH / Addison Wesley Longmanceedings of SIGGRAPH 2000, ACM Press / ACM SIGGRAPH / Addison Wesley Longman, Computer Graphics Proceedings, Annual Conference Series, 259-262.\n\nA near optimal isosurface extraction algorithm using the span space. Y Livnat, H.-W Shen, C R Johnson, LIVNAT, Y., SHEN, H.-W., AND JOHNSON, C. R. 1996. A near optimal isosurface extraction algorithm using the span space. 73-84.\n\nKizamu: A system for sculpting digital characters. R N Perry, S F Frisken, Computer Graphics Proceedings, Annual Conference Series. ACM Press / ACM SIGGRAPHProceedings of SIGGRAPH 2001PERRY, R. N., AND FRISKEN, S. F. 2001. Kizamu: A system for sculpting digital characters. In Proceedings of SIGGRAPH 2001, ACM Press / ACM SIGGRAPH, Computer Graphics Proceedings, Annual Conference Series, 47-56.\n\nMulti-resolution 3d approximation for rendering complex scenes. J Rossignac, P Borrell, Modeling in Computer Graphics. ROSSIGNAC, J., AND BORRELL, P. 1993. Multi-resolution 3d approximation for rendering complex scenes. In Modeling in Computer Graphics, 455-465.\n\nOctree-based decimation of marching cubes surfaces. R Shekhar, E Fayyad, R Yagel, J F Cornhill, IEEE Visualization '96. IEEESHEKHAR, R., FAYYAD, E., YAGEL, R., AND CORNHILL, J. F. 1996. Octree-based decimation of marching cubes surfaces. In IEEE Visualization '96, IEEE, 335-344.\n\nGuaranteeing the topology of an implicit surface polygonization for interactive modeling. B T Stander, J C Hart, Computer Graphics Proceedings, Annual Conference Series. Los Angeles, CaliforniaACM SIGGRAPH / Addison WesleyProceedings of SIGGRAPH 97STANDER, B. T., AND HART, J. C. 1997. Guaranteeing the topology of an implicit surface polygonization for interactive modeling. In Proceedings of SIGGRAPH 97, ACM SIGGRAPH / Addison Wesley, Los Angeles, California, Computer Graphics Proceedings, Annual Conference Series, 279-286.\n\nReal-time exploration of regular volume data by adaptive reconstruction of isosurfaces. R Westermann, L Kobbelt, T Ertl, WESTERMANN, R., KOBBELT, L., AND ERTL, T. 1999. Real-time exploration of regular volume data by adaptive reconstruction of isosurfaces. 100-111.\n\nOctrees for faster isosurface generation. J Wilhelms, A V Gelder, WILHELMS, J., AND GELDER, A. V. 1992. Octrees for faster isosurface generation. 201-227.\n\nSemi-regular mesh extraction from volumes. Z J Wood, M Desbrun, P Schr\u00f6der, D Breen, IEEE Visualization. WOOD, Z. J., DESBRUN, M., SCHR\u00d6DER, P., AND BREEN, D. 2000. Semi-regular mesh extraction from volumes. In IEEE Visualization 2000, 275-282.\n", "annotations": {"author": "[{\"end\":57,\"start\":35},{\"end\":89,\"start\":58},{\"end\":123,\"start\":90},{\"end\":152,\"start\":124},{\"end\":171,\"start\":153},{\"end\":187,\"start\":172}]", "publisher": null, "author_last_name": "[{\"end\":41,\"start\":39},{\"end\":71,\"start\":64},{\"end\":104,\"start\":96},{\"end\":134,\"start\":128}]", "author_first_name": "[{\"end\":38,\"start\":35},{\"end\":63,\"start\":58},{\"end\":95,\"start\":90},{\"end\":127,\"start\":124}]", "author_affiliation": "[{\"end\":170,\"start\":154},{\"end\":186,\"start\":173}]", "title": "[{\"end\":32,\"start\":1},{\"end\":219,\"start\":188}]", "venue": null, "abstract": "[{\"end\":1797,\"start\":519}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3369,\"start\":3348},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":3392,\"start\":3369},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3678,\"start\":3657},{\"end\":3970,\"start\":3955},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6469,\"start\":6457},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":7320,\"start\":7302},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":10185,\"start\":10167},{\"end\":10984,\"start\":10981},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":11454,\"start\":11429},{\"end\":12259,\"start\":12256},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":12922,\"start\":12901},{\"end\":12937,\"start\":12922},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":14276,\"start\":14245},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":14295,\"start\":14276},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":18853,\"start\":18827},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":20548,\"start\":20530},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":20573,\"start\":20548},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":20592,\"start\":20573},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":20612,\"start\":20592},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20635,\"start\":20612},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":20655,\"start\":20635},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":20674,\"start\":20655},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":20909,\"start\":20886},{\"end\":21530,\"start\":21515},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":25906,\"start\":25878},{\"end\":25921,\"start\":25906},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":26035,\"start\":26012},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26062,\"start\":26035},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":26079,\"start\":26062},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":26100,\"start\":26079},{\"end\":31721,\"start\":31708}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":34169,\"start\":33967},{\"attributes\":{\"id\":\"fig_1\"},\"end\":34708,\"start\":34170},{\"attributes\":{\"id\":\"fig_2\"},\"end\":34797,\"start\":34709},{\"attributes\":{\"id\":\"fig_3\"},\"end\":35798,\"start\":34798},{\"attributes\":{\"id\":\"fig_4\"},\"end\":35865,\"start\":35799},{\"attributes\":{\"id\":\"fig_5\"},\"end\":35980,\"start\":35866},{\"attributes\":{\"id\":\"fig_6\"},\"end\":36123,\"start\":35981},{\"attributes\":{\"id\":\"fig_7\"},\"end\":36593,\"start\":36124},{\"attributes\":{\"id\":\"fig_8\"},\"end\":36656,\"start\":36594},{\"attributes\":{\"id\":\"fig_9\"},\"end\":37016,\"start\":36657},{\"attributes\":{\"id\":\"fig_10\"},\"end\":37905,\"start\":37017},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":38491,\"start\":37906},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":39351,\"start\":38492}]", "paragraph": "[{\"end\":2538,\"start\":1813},{\"end\":2659,\"start\":2540},{\"end\":2902,\"start\":2661},{\"end\":3209,\"start\":2904},{\"end\":3457,\"start\":3211},{\"end\":3816,\"start\":3459},{\"end\":4059,\"start\":3818},{\"end\":5725,\"start\":4061},{\"end\":6405,\"start\":5757},{\"end\":7812,\"start\":6407},{\"end\":8219,\"start\":7848},{\"end\":8744,\"start\":8255},{\"end\":8878,\"start\":8746},{\"end\":9015,\"start\":8880},{\"end\":9703,\"start\":9017},{\"end\":10187,\"start\":9705},{\"end\":10495,\"start\":10224},{\"end\":10687,\"start\":10524},{\"end\":11048,\"start\":10730},{\"end\":11354,\"start\":11050},{\"end\":11675,\"start\":11356},{\"end\":12053,\"start\":11809},{\"end\":12142,\"start\":12055},{\"end\":12508,\"start\":12242},{\"end\":12760,\"start\":12510},{\"end\":13195,\"start\":12762},{\"end\":13970,\"start\":13226},{\"end\":14824,\"start\":13972},{\"end\":15409,\"start\":14826},{\"end\":15706,\"start\":15411},{\"end\":15925,\"start\":15708},{\"end\":16456,\"start\":15927},{\"end\":17069,\"start\":16458},{\"end\":17722,\"start\":17098},{\"end\":17800,\"start\":17724},{\"end\":17889,\"start\":17802},{\"end\":18054,\"start\":17891},{\"end\":18514,\"start\":18056},{\"end\":19441,\"start\":18551},{\"end\":20328,\"start\":19546},{\"end\":21062,\"start\":20374},{\"end\":21219,\"start\":21064},{\"end\":21532,\"start\":21221},{\"end\":21591,\"start\":21534},{\"end\":21673,\"start\":21593},{\"end\":21868,\"start\":21675},{\"end\":22127,\"start\":21870},{\"end\":22580,\"start\":22129},{\"end\":22946,\"start\":22582},{\"end\":23086,\"start\":22948},{\"end\":24330,\"start\":23088},{\"end\":24884,\"start\":24332},{\"end\":25341,\"start\":24886},{\"end\":25808,\"start\":25343},{\"end\":26272,\"start\":25848},{\"end\":26541,\"start\":26274},{\"end\":26607,\"start\":26543},{\"end\":27173,\"start\":26609},{\"end\":27372,\"start\":27197},{\"end\":28138,\"start\":27374},{\"end\":28251,\"start\":28140},{\"end\":28363,\"start\":28253},{\"end\":28476,\"start\":28365},{\"end\":28907,\"start\":28478},{\"end\":29109,\"start\":28909},{\"end\":29345,\"start\":29137},{\"end\":30293,\"start\":29347},{\"end\":31144,\"start\":30295},{\"end\":31386,\"start\":31146},{\"end\":32329,\"start\":31388},{\"end\":32747,\"start\":32331},{\"end\":32944,\"start\":32749},{\"end\":33483,\"start\":32946},{\"end\":33619,\"start\":33485},{\"end\":33966,\"start\":33631}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7847,\"start\":7813},{\"attributes\":{\"id\":\"formula_1\"},\"end\":10523,\"start\":10496},{\"attributes\":{\"id\":\"formula_2\"},\"end\":10729,\"start\":10688},{\"attributes\":{\"id\":\"formula_3\"},\"end\":11808,\"start\":11676},{\"attributes\":{\"id\":\"formula_4\"},\"end\":12241,\"start\":12143},{\"attributes\":{\"id\":\"formula_5\"},\"end\":19545,\"start\":19442}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1811,\"start\":1799},{\"attributes\":{\"n\":\"2.1\"},\"end\":5755,\"start\":5728},{\"attributes\":{\"n\":\"2.2\"},\"end\":8253,\"start\":8222},{\"attributes\":{\"n\":\"2.3\"},\"end\":10222,\"start\":10190},{\"attributes\":{\"n\":\"2.4\"},\"end\":13224,\"start\":13198},{\"attributes\":{\"n\":\"3\"},\"end\":17096,\"start\":17072},{\"attributes\":{\"n\":\"3.1\"},\"end\":18549,\"start\":18517},{\"attributes\":{\"n\":\"3.2\"},\"end\":20372,\"start\":20331},{\"attributes\":{\"n\":\"4\"},\"end\":25846,\"start\":25811},{\"attributes\":{\"n\":\"4.1\"},\"end\":27195,\"start\":27176},{\"attributes\":{\"n\":\"4.2\"},\"end\":29135,\"start\":29112},{\"attributes\":{\"n\":\"5\"},\"end\":33629,\"start\":33622},{\"end\":33978,\"start\":33968},{\"end\":34181,\"start\":34171},{\"end\":34720,\"start\":34710},{\"end\":35810,\"start\":35800},{\"end\":35877,\"start\":35867},{\"end\":35992,\"start\":35982},{\"end\":36135,\"start\":36125},{\"end\":36605,\"start\":36595},{\"end\":37029,\"start\":37018},{\"end\":38496,\"start\":38493}]", "table": "[{\"end\":38491,\"start\":38185},{\"end\":39351,\"start\":38576}]", "figure_caption": "[{\"end\":34169,\"start\":33980},{\"end\":34708,\"start\":34183},{\"end\":34797,\"start\":34722},{\"end\":35798,\"start\":34800},{\"end\":35865,\"start\":35812},{\"end\":35980,\"start\":35879},{\"end\":36123,\"start\":35994},{\"end\":36593,\"start\":36137},{\"end\":36656,\"start\":36607},{\"end\":37016,\"start\":36659},{\"end\":37905,\"start\":37032},{\"end\":38185,\"start\":37908},{\"end\":38576,\"start\":38498}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":9780,\"start\":9772},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":13582,\"start\":13574},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":14342,\"start\":14334},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":15951,\"start\":15943},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":16042,\"start\":16034},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":20013,\"start\":20005},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":21246,\"start\":21237},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":21411,\"start\":21403},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":21444,\"start\":21436},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":24819,\"start\":24811},{\"end\":28606,\"start\":28597},{\"end\":28665,\"start\":28656},{\"end\":32149,\"start\":32140},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":32588,\"start\":32580},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":32614,\"start\":32606},{\"end\":33023,\"start\":33014},{\"end\":33166,\"start\":33157}]", "bib_author_first_name": "[{\"end\":39674,\"start\":39673},{\"end\":39689,\"start\":39688},{\"end\":40122,\"start\":40121},{\"end\":40360,\"start\":40359},{\"end\":40362,\"start\":40361},{\"end\":40373,\"start\":40372},{\"end\":40375,\"start\":40374},{\"end\":40387,\"start\":40386},{\"end\":40389,\"start\":40388},{\"end\":40396,\"start\":40395},{\"end\":40410,\"start\":40409},{\"end\":40689,\"start\":40688},{\"end\":40700,\"start\":40699},{\"end\":40713,\"start\":40712},{\"end\":40724,\"start\":40723},{\"end\":41008,\"start\":41007},{\"end\":41017,\"start\":41016},{\"end\":41028,\"start\":41027},{\"end\":41038,\"start\":41037},{\"end\":41242,\"start\":41241},{\"end\":41244,\"start\":41243},{\"end\":41255,\"start\":41254},{\"end\":41257,\"start\":41256},{\"end\":41266,\"start\":41265},{\"end\":41268,\"start\":41267},{\"end\":41280,\"start\":41279},{\"end\":41282,\"start\":41281},{\"end\":41764,\"start\":41763},{\"end\":41775,\"start\":41774},{\"end\":41777,\"start\":41776},{\"end\":42067,\"start\":42066},{\"end\":42079,\"start\":42078},{\"end\":42359,\"start\":42358},{\"end\":42363,\"start\":42360},{\"end\":42555,\"start\":42554},{\"end\":42557,\"start\":42556},{\"end\":42566,\"start\":42565},{\"end\":42568,\"start\":42567},{\"end\":42777,\"start\":42776},{\"end\":42787,\"start\":42786},{\"end\":42964,\"start\":42963},{\"end\":42966,\"start\":42965},{\"end\":42977,\"start\":42976},{\"end\":42987,\"start\":42986},{\"end\":43004,\"start\":43000},{\"end\":43666,\"start\":43665},{\"end\":43679,\"start\":43675},{\"end\":43687,\"start\":43686},{\"end\":43689,\"start\":43688},{\"end\":43878,\"start\":43877},{\"end\":43880,\"start\":43879},{\"end\":43889,\"start\":43888},{\"end\":43891,\"start\":43890},{\"end\":44289,\"start\":44288},{\"end\":44302,\"start\":44301},{\"end\":44541,\"start\":44540},{\"end\":44552,\"start\":44551},{\"end\":44562,\"start\":44561},{\"end\":44571,\"start\":44570},{\"end\":44573,\"start\":44572},{\"end\":44860,\"start\":44859},{\"end\":44862,\"start\":44861},{\"end\":44873,\"start\":44872},{\"end\":44875,\"start\":44874},{\"end\":45388,\"start\":45387},{\"end\":45402,\"start\":45401},{\"end\":45413,\"start\":45412},{\"end\":45609,\"start\":45608},{\"end\":45621,\"start\":45620},{\"end\":45623,\"start\":45622},{\"end\":45766,\"start\":45765},{\"end\":45768,\"start\":45767},{\"end\":45776,\"start\":45775},{\"end\":45787,\"start\":45786},{\"end\":45799,\"start\":45798}]", "bib_author_last_name": "[{\"end\":39686,\"start\":39675},{\"end\":39698,\"start\":39690},{\"end\":40134,\"start\":40123},{\"end\":40370,\"start\":40363},{\"end\":40384,\"start\":40376},{\"end\":40393,\"start\":40390},{\"end\":40407,\"start\":40397},{\"end\":40417,\"start\":40411},{\"end\":40697,\"start\":40690},{\"end\":40710,\"start\":40701},{\"end\":40721,\"start\":40714},{\"end\":40733,\"start\":40725},{\"end\":41014,\"start\":41009},{\"end\":41025,\"start\":41018},{\"end\":41035,\"start\":41029},{\"end\":41045,\"start\":41039},{\"end\":41252,\"start\":41245},{\"end\":41263,\"start\":41258},{\"end\":41277,\"start\":41269},{\"end\":41288,\"start\":41283},{\"end\":41772,\"start\":41765},{\"end\":41786,\"start\":41778},{\"end\":42076,\"start\":42068},{\"end\":42088,\"start\":42080},{\"end\":42370,\"start\":42364},{\"end\":42563,\"start\":42558},{\"end\":42577,\"start\":42569},{\"end\":42784,\"start\":42778},{\"end\":42792,\"start\":42788},{\"end\":42974,\"start\":42967},{\"end\":42984,\"start\":42978},{\"end\":42998,\"start\":42988},{\"end\":43011,\"start\":43005},{\"end\":43673,\"start\":43667},{\"end\":43684,\"start\":43680},{\"end\":43697,\"start\":43690},{\"end\":43886,\"start\":43881},{\"end\":43899,\"start\":43892},{\"end\":44299,\"start\":44290},{\"end\":44310,\"start\":44303},{\"end\":44549,\"start\":44542},{\"end\":44559,\"start\":44553},{\"end\":44568,\"start\":44563},{\"end\":44582,\"start\":44574},{\"end\":44870,\"start\":44863},{\"end\":44880,\"start\":44876},{\"end\":45399,\"start\":45389},{\"end\":45410,\"start\":45403},{\"end\":45418,\"start\":45414},{\"end\":45618,\"start\":45610},{\"end\":45630,\"start\":45624},{\"end\":45773,\"start\":45769},{\"end\":45784,\"start\":45777},{\"end\":45796,\"start\":45788},{\"end\":45805,\"start\":45800}]", "bib_entry": "[{\"attributes\":{\"doi\":\"309-316. ISBN 0-201-84776-0\",\"id\":\"b0\",\"matched_paper_id\":92444},\"end\":40082,\"start\":39623},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":16474404},\"end\":40275,\"start\":40084},{\"attributes\":{\"doi\":\"367-372. ISBN 0-7803-6478-3\",\"id\":\"b2\",\"matched_paper_id\":1052145},\"end\":40686,\"start\":40277},{\"attributes\":{\"id\":\"b3\"},\"end\":40961,\"start\":40688},{\"attributes\":{\"id\":\"b4\"},\"end\":41177,\"start\":40963},{\"attributes\":{\"id\":\"b5\"},\"end\":41688,\"start\":41179},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":12319407},\"end\":41969,\"start\":41690},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1455799},\"end\":42280,\"start\":41971},{\"attributes\":{\"id\":\"b8\"},\"end\":42552,\"start\":42282},{\"attributes\":{\"id\":\"b9\"},\"end\":42747,\"start\":42554},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":1832821},\"end\":42906,\"start\":42749},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":207714088},\"end\":43343,\"start\":42908},{\"attributes\":{\"id\":\"b12\"},\"end\":43594,\"start\":43345},{\"attributes\":{\"id\":\"b13\"},\"end\":43824,\"start\":43596},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":7546129},\"end\":44222,\"start\":43826},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":9035475},\"end\":44486,\"start\":44224},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":5366964},\"end\":44767,\"start\":44488},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":450034},\"end\":45297,\"start\":44769},{\"attributes\":{\"id\":\"b18\"},\"end\":45564,\"start\":45299},{\"attributes\":{\"id\":\"b19\"},\"end\":45720,\"start\":45566},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":1697158},\"end\":45966,\"start\":45722}]", "bib_title": "[{\"end\":39671,\"start\":39623},{\"end\":40119,\"start\":40084},{\"end\":40357,\"start\":40277},{\"end\":41239,\"start\":41179},{\"end\":41761,\"start\":41690},{\"end\":42064,\"start\":41971},{\"end\":42356,\"start\":42282},{\"end\":42774,\"start\":42749},{\"end\":42961,\"start\":42908},{\"end\":43875,\"start\":43826},{\"end\":44286,\"start\":44224},{\"end\":44538,\"start\":44488},{\"end\":44857,\"start\":44769},{\"end\":45763,\"start\":45722}]", "bib_author": "[{\"end\":39688,\"start\":39673},{\"end\":39700,\"start\":39688},{\"end\":40136,\"start\":40121},{\"end\":40372,\"start\":40359},{\"end\":40386,\"start\":40372},{\"end\":40395,\"start\":40386},{\"end\":40409,\"start\":40395},{\"end\":40419,\"start\":40409},{\"end\":40699,\"start\":40688},{\"end\":40712,\"start\":40699},{\"end\":40723,\"start\":40712},{\"end\":40735,\"start\":40723},{\"end\":41016,\"start\":41007},{\"end\":41027,\"start\":41016},{\"end\":41037,\"start\":41027},{\"end\":41047,\"start\":41037},{\"end\":41254,\"start\":41241},{\"end\":41265,\"start\":41254},{\"end\":41279,\"start\":41265},{\"end\":41290,\"start\":41279},{\"end\":41774,\"start\":41763},{\"end\":41788,\"start\":41774},{\"end\":42078,\"start\":42066},{\"end\":42090,\"start\":42078},{\"end\":42372,\"start\":42358},{\"end\":42565,\"start\":42554},{\"end\":42579,\"start\":42565},{\"end\":42786,\"start\":42776},{\"end\":42794,\"start\":42786},{\"end\":42976,\"start\":42963},{\"end\":42986,\"start\":42976},{\"end\":43000,\"start\":42986},{\"end\":43013,\"start\":43000},{\"end\":43675,\"start\":43665},{\"end\":43686,\"start\":43675},{\"end\":43699,\"start\":43686},{\"end\":43888,\"start\":43877},{\"end\":43901,\"start\":43888},{\"end\":44301,\"start\":44288},{\"end\":44312,\"start\":44301},{\"end\":44551,\"start\":44540},{\"end\":44561,\"start\":44551},{\"end\":44570,\"start\":44561},{\"end\":44584,\"start\":44570},{\"end\":44872,\"start\":44859},{\"end\":44882,\"start\":44872},{\"end\":45401,\"start\":45387},{\"end\":45412,\"start\":45401},{\"end\":45420,\"start\":45412},{\"end\":45620,\"start\":45608},{\"end\":45632,\"start\":45620},{\"end\":45775,\"start\":45765},{\"end\":45786,\"start\":45775},{\"end\":45798,\"start\":45786},{\"end\":45807,\"start\":45798}]", "bib_venue": "[{\"end\":39753,\"start\":39727},{\"end\":40167,\"start\":40136},{\"end\":40464,\"start\":40446},{\"end\":40809,\"start\":40735},{\"end\":41005,\"start\":40963},{\"end\":41318,\"start\":41290},{\"end\":41810,\"start\":41788},{\"end\":42108,\"start\":42090},{\"end\":42395,\"start\":42372},{\"end\":42598,\"start\":42579},{\"end\":42812,\"start\":42794},{\"end\":43037,\"start\":43013},{\"end\":43400,\"start\":43345},{\"end\":43663,\"start\":43596},{\"end\":43956,\"start\":43901},{\"end\":44341,\"start\":44312},{\"end\":44606,\"start\":44584},{\"end\":44937,\"start\":44882},{\"end\":45385,\"start\":45299},{\"end\":45606,\"start\":45566},{\"end\":45825,\"start\":45807},{\"end\":39789,\"start\":39755},{\"end\":41333,\"start\":41320},{\"end\":43048,\"start\":43039},{\"end\":44962,\"start\":44939}]"}}}, "year": 2023, "month": 12, "day": 17}