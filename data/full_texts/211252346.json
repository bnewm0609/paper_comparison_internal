{"id": 211252346, "updated": "2023-10-06 18:37:40.442", "metadata": {"title": "Calibrating Deep Neural Networks using Focal Loss", "authors": "[{\"first\":\"Jishnu\",\"last\":\"Mukhoti\",\"middle\":[]},{\"first\":\"Viveka\",\"last\":\"Kulharia\",\"middle\":[]},{\"first\":\"Amartya\",\"last\":\"Sanyal\",\"middle\":[]},{\"first\":\"Stuart\",\"last\":\"Golodetz\",\"middle\":[]},{\"first\":\"Philip\",\"last\":\"Torr\",\"middle\":[\"H.S.\"]},{\"first\":\"Puneet\",\"last\":\"Dokania\",\"middle\":[\"K.\"]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2020, "month": 2, "day": 21}, "abstract": "Miscalibration -- a mismatch between a model's confidence and its correctness -- of Deep Neural Networks (DNNs) makes their predictions hard to rely on. Ideally, we want networks to be accurate, calibrated and confident. We show that, as opposed to the standard cross-entropy loss, focal loss (Lin et al., 2017) allows us to learn models that are already very well calibrated. When combined with temperature scaling, whilst preserving accuracy, it yields state-of-the-art calibrated models. We provide a thorough analysis of the factors causing miscalibration, and use the insights we glean from this to justify the empirically excellent performance of focal loss. To facilitate the use of focal loss in practice, we also provide a principled approach to automatically select the hyperparameter involved in the loss function. We perform extensive experiments on a variety of computer vision and NLP datasets, and with a wide variety of network architectures, and show that our approach achieves state-of-the-art accuracy and calibration in almost all cases.", "fields_of_study": "[\"Computer Science\",\"Mathematics\"]", "external_ids": {"arxiv": "2002.09437", "mag": "3104668038", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/nips/MukhotiKSGTD20", "doi": null}}, "content": {"source": {"pdf_hash": "07d440f44f5f955afef3c32f2610c7a716c36f97", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2002.09437v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "fe86a1e28821a8df8a6691196f28c06983aa65aa", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/07d440f44f5f955afef3c32f2610c7a716c36f97.txt", "contents": "\nCalibrating Deep Neural Networks using Focal Loss\n\n\nJishnu Mukhoti \nFiveAI Ltd\n\n\nUniversity of Oxford\n\n\nViveka Kulharia \nUniversity of Oxford\n\n\nAmartya Sanyal \nUniversity of Oxford\n\n\nThe Alan Turing Institute\nLondon\n\nStuart Golodetz \nFiveAI Ltd\n\n\nPhilip H S Torr \nFiveAI Ltd\n\n\nUniversity of Oxford\n\n\nPuneet K Dokania \nFiveAI Ltd\n\n\nUniversity of Oxford\n\n\nCalibrating Deep Neural Networks using Focal Loss\n\nMiscalibration -a mismatch between a model's confidence and its correctness -of Deep Neural Networks (DNNs) makes their predictions hard to rely on. Ideally, we want networks to be accurate, calibrated and confident. We show that, as opposed to the standard cross-entropy loss, focal loss Lin et al. [2017]  allows us to learn models that are already very well calibrated. When combined with temperature scaling, whilst preserving accuracy, it yields state-of-the-art calibrated models. We provide a thorough analysis of the factors causing miscalibration, and use the insights we glean from this to justify the empirically excellent performance of focal loss. To facilitate the use of focal loss in practice, we also provide a principled approach to automatically select the hyperparameter involved in the loss function. We perform extensive experiments on a variety of computer vision and NLP datasets, and with a wide variety of network architectures, and show that our approach achieves state-of-the-art accuracy and calibration in almost all cases.\n\nIntroduction\n\nDeep neural networks have dominated computer vision and machine learning in recent years, and this has led to their widespread deployment in real-world systems [Cao et al., 2018, Chen et al., 2018, Kamilaris and Prenafeta-Bold\u00fa, 2018, Ker et al., 2018. However, many current multi-class classification networks in particular are poorly calibrated, in the sense that the probability values that they associate with the class labels they predict overestimate the likelihoods of those class labels being correct in the real world. This is a major problem, since if networks are routinely overconfident, then downstream components cannot trust their predictions. The underlying cause is hypothesised to be that these networks' high capacity leaves them vulnerable to overfitting on the negative log-likelihood (NLL) loss they conventionally use during training [Guo et al., 2017].\n\nGiven the importance of this problem, numerous suggestions for how to address it have been proposed. Much work has been inspired by approaches that were not originally formulated in a deep learning context, such as Platt scaling [Platt, 1999], histogram binning [Zadrozny and Elkan, 2001], isotonic regression [Zadrozny and Elkan, 2002], and Bayesian binning and averaging [Naeini et al., 2015, Naeini andCooper, 2016]. As deep learning has become more dominant, however, various works have begun to directly target the calibration of deep networks. For example, Guo et al. [Guo et al., 2017] have popularised a modern variant of Platt scaling known as temperature scaling, which works by dividing a network's logits by a scalar T > 0 (learnt on a validation subset) prior to performing softmax. Temperature scaling has the desirable property that it can improve the calibration of a network without in any way affecting its accuracy. However, whilst its simplicity and effectiveness have made it a popular network calibration method, it does have downsides. For example, whilst it scales the logits to reduce the network's confidence in incorrect predictions, this also slightly reduces the network's confidence in predictions that were correct.\n\nBy contrast, [Kumar et al., 2018] initially eschew temperature scaling in favour of minimising a differentiable proxy for calibration error at training time, called Maximum Mean Calibration Error (MMCE), although they do later also use temperature scaling as a post-processing step to obtain better results than cross-entropy followed by temperature scaling [Guo et al., 2017]. Separately, [M\u00fcller et al., 2019] propose training models on cross-entropy loss with label smoothing instead of one-hot labels and show that label smoothing has a very favourable effect on model calibration.\n\nIn this paper, we propose a technique for improving network calibration that works by replacing the crossentropy loss conventionally used when training classification networks with the focal loss proposed by [Lin et al., 2017]. We observe that unlike cross-entropy, which minimises the KL divergence between the predicted (softmax) distribution and the target distribution (one-hot encoding in classification tasks) over classes, focal loss minimises a regularised KL divergence between these two distributions, which ensures minimisation of the KL divergence whilst increasing the entropy of the predicted distribution, thereby preventing the model from becoming overconfident. Since focal loss, as shown in \u00a74, is dependent on a hyperparameter, \u03b3, that needs to be cross-validated, we also provide a method of choosing \u03b3 automatically for each sample, and show that it outperforms all the baseline models.\n\nThe intuition behind using focal loss is to direct the network's attention during training towards samples for which it is currently predicting a low probability for the correct class, since trying to reduce the NLL on samples for which it is already predicting a high probability for the correct class is liable to lead to NLL overfitting, and thereby miscalibration [Guo et al., 2017]. More formally, we show in \u00a74 that focal loss can be seen as implicitly regularising the weights of the network during training by causing the gradient norms for confident samples to be lower than they would have been with cross-entropy, which we would expect to reduce overfitting and improve the network's calibration.\n\nOverall, we make the following contributions:\n\n1. In \u00a73, we study the link that [Guo et al., 2017] observed between miscalibration and NLL overfitting in detail, and show that the overfitting is associated with the predicted distributions for misclassified test samples becoming peakier as the optimiser tries to increase the magnitude of the network's weights to reduce the training NLL. 2. In \u00a74, we propose the use of focal loss for training better-calibrated networks, and provide both theoretical and empirical justifications for this approach. In addition, we provide a principled method of automatically choosing \u03b3 for each sample during training. 3. In \u00a75.1, we show, via experiments on a variety of classification datasets and network architectures, that DNNs trained with focal loss are more calibrated than those trained with cross-entropy loss (both with and without label smoothing), MMCE or Brier loss [Brier, 1950]. 4. Finally, in \u00a75.2, we show that a network trained using focal loss is able to improve on both the BLEU and ECE scores of baseline models trained using cross-entropy (with one-hot labels and label smoothing) on the WMT 2014 English-to-German translation dataset, thereby showing the practical impact of the calibration improvements we are able to achieve for performance on downstream tasks.\n\n\nProblem Formulation\n\nLet D = (x i , y i ) N i=1 denote a dataset consisting of N samples from a joint distribution D(X , Y), where for each sample i, x i \u2208 X is the input and y i \u2208 Y = {1, 2, ..., K} is the ground-truth class label. Letp i,y = f \u03b8 (y|x i ) be the probability that a neural network f with model parameters \u03b8 predicts for a class y on a given input x i . The class that f predicts for x i is computed as\u0177 i = argmax y\u2208Ypi,y , and the predicted confidence a\u015d p i = max y\u2208Ypi,y . The network is said to be perfectly calibrated when, for each sample (x, y) \u2208 D, the confidencep is equal to the model accuracy P(\u0177 = y|p), i.e. the probability that the predicted class is correct.  \nA i = 1 |Bi| j\u2208Bi 1 (\u0177 j = y j ),\nwhere 1 is the indicator function, and\u0177 j and y j are the predicted and ground-truth labels for the j th sample. Similarly, the confidence C i of the i th bin is computed as C i = 1 |Bi| j\u2208Bip j , i.e. C i is the average confidence of all samples in the bin. The ECE can be approximated as a weighted average of the absolute difference between the accuracy and confidence of each bin:\nECE = M i=1 |Bi| N |A i \u2212 C i |(1)\nA similar metric, the maximum calibration error (MCE) [Naeini et al., 2015], is defined as the maximum absolute difference between the confidence and accuracy of each bin:\nMCE = max i\u2208{1,...,M } |A i \u2212 C i |(2)\nA common way of visually exploring the calibration of a model is to use a reliability plot [Niculescu-Mizil and Caruana, 2005], which plots the accuracies of the various confidence bins as a bar chart (e.g. see Figure 1). Reliability plots also capture whether or not a model is under-confident or over-confident in general. For a perfectly calibrated model, the accuracy for each bin will match the confidence, and hence all of the bars will lie on a diagonal. By contrast, if most of the bars lie above the diagonal, meaning that the model is more accurate than it expects, then it is said to be under-confident, and if most of the bars lie below the diagonal, then it is said to be over-confident.\n\nAdaECE: One disadvantage of ECE is the uniform bin width. Once a model is trained, most of the samples lie within the highest confidence bins, and hence these bins dominate the value of the ECE, as the contribution of each bin is weighted by the number of samples it contains. To mitigate this, we thus also consider another metric, which we call AdaECE (Adaptive ECE), for which bin sizes are calculated so as to evenly distribute samples between bins: \nAdaECE = M i=1 |Bi| N |A i \u2212 C i | s.t. \u2200i, j \u00b7 |B i | = |B j |(3)\n\nWhat Causes Miscalibration?\n\nWe now discuss why high-capacity neural networks, despite achieving low classification errors on well-known datasets, tend to be miscalibrated. A key empirical observation made by [Guo et al., 2017] was that poor calibration of such networks appears to be linked to overfitting on the negative log-likelihood (NLL) during training. In this section, we further inspect this observation to provide new insights.\n\nFor the analysis, we train a high-capacity ResNet-50 network on CIFAR-10 with state-of-the-art performance settings [PyTorch-CIFAR]. We use Stochastic Gradient Descent (SGD), with a mini-batch of size 128, momentum of 0.9, and learning rate schedule of {0.1, 0.01, 0001} for the first 150, next 100, and last 100 epochs, respectively. We minimise cross-entropy loss (a.k.a. NLL) L c , which, in a standard classification context, is \u2212 logp i,yi , wher\u00ea p i,yi is the probability assigned by the network to the correct class y i for the i th sample. Note that the NLL is minimised when for each training sample i,p i,yi = 1, whereas the classification error is minimised when p i,yi >p i,y for all y = y i . This indicates that even when the classification error is 0, the NLL can be positive, and the optimisation algorithm can still try to reduce it to 0 by further increasing the value ofp i,yi for each sample. This can be empirically observed in Figure 1, where we plot reliability diagrams and percentages of samples in each confidence bin for different training epochs.\n\nTo study how miscalibration occurs during training, we plot the average NLL for the train and test sets at each training epoch in Figures 2(a) and 2(b). We also plot the average NLL and the entropy of the softmax distribution produced by the network for the correctly and incorrectly classified samples. In Figure 2(c), we plot the classification errors on the train and test sets, along with the test set ECE.\n\nCurse of misclassified samples: Figures 2(a) and 2(b) show that although the average train NLL (for both correctly and incorrectly classified training samples) broadly decreases throughout training, after the 150 th epoch (where the learning rate drops by a factor of 10), there is a marked rise in the average test NLL, indicating that the network starts to overfit on average NLL. Interestingly, the increase in average test NLL is caused only by the incorrectly classified samples, as the average NLL for the correctly classified samples continues to decrease even after the 150 th epoch. We also observe that after epoch 150, the test set ECE rises, indicating that the network is becoming miscalibrated. This corroborates the observation in [Guo et al., 2017] that miscalibration and NLL overfitting are linked.\n\nPeak at the wrong place: We further observe that the entropies of the softmax distributions for both the correctly and incorrectly classified test samples decrease throughout training (in other words, the distributions get peakier). This observation, coupled with the one we made above, indicates that for the wrongly classified test samples, the network gradually becomes more and more confident about its incorrect predictions.\n\nWeight magnification: The increase in confidence of the network's predictions can happen if the network increases the norm of its weights W to increase the magnitudes of the logits. In fact, cross-entropy loss is minimised when for each training sample i,p i,yi = 1, which is possible only when ||W || \u2192 \u221e. Cross-entropy loss thus inherently induces this tendency of weight magnification in neural network optimisation.  Figure 3: How metrics related to model calibration change whilst training several ResNet-50 networks on CIFAR-10, using either cross-entropy loss, or focal loss with \u03b3 set to 1, 2 or 3.\n\nperformance of weight decay (regulating the norm of weights) on the calibration of neural networks can perhaps be explained using this. We explore this further in \u00a74. This increase in the network's confidence during training is one of the key causes of miscalibration.\n\n\nImproving Calibration using Focal Loss\n\nAs discussed in \u00a73, overfitting on NLL, which is observed as the network grows more confident on all of its predictions irrespective of their correctness, is strongly related to poor calibration. One cause of this is that the cross-entropy objective minimises the difference between the softmax distribution and the ground-truth one-hot encoding over an entire mini-batch, irrespective of how well a network classifies individual samples in the mini-batch. In this work, we study an alternative loss function, popularly known as focal loss [Lin et al., 2017], that tackles this by weighting loss components generated from individual samples in a mini-batch by how well the model classifies them. For classification tasks where the target distribution is a one-hot encoding, it is defined as\nL f = \u2212(1 \u2212p i,yi ) \u03b3 logp i,yi , where \u03b3 is a user-defined hyperparameter. 1\nWhy might focal loss improve calibration? We know that cross-entropy forms an upper bound on the KLdivergence between the target distribution q and the predicted distributionp, i.e. L c \u2265 KL(q||p), so minimising cross-entropy results in minimising KL(q||p). Interestingly, a general form of focal loss can be shown to be an upper bound on the regularised KL-divergence, where the regulariser is the negative entropy of the predicted distributionp, and the regularisation parameter is \u03b3, the hyperparameter of focal loss (a proof of this can be found in Appendix A):\nL f \u2265 KL(q||p) \u2212 \u03b3H[p](4)\nThe most interesting property of this upper bound is that it shows that replacing cross-entropy with focal loss has the effect of adding a maximum-entropy regulariser [Pereyra et al., 2017] to the implicit minimisation that was previously being performed. In other words, trying to minimise it means trying to minimise the KL divergence betweenp and q, whilst simultaneously trying to increase the entropy of the predicted distribution p. Encouraging the predicted distribution to have higher entropy can help avoid the overconfident predictions produced by modern neural networks (see the 'Peak at the wrong place' paragraph of Section 3), and thereby improve calibration.\n\nEmpirical observations: To analyse the behaviour of neural networks trained on focal loss, we use the same framework as mentioned above, and train four ResNet-50 networks on CIFAR-10, one using cross-entropy loss, and three using focal loss with \u03b3 = 1, 2 and 3. Figure 3(a) shows that the test NLL for the cross-entropy model significantly increases towards the end of training (before saturating), whereas the NLLs for the focal loss models remain low. To better understand this, we analyse the behaviour of these models for correctly and incorrectly classified samples. Figure 3(b) shows that even though the NLLs for the correctly classified samples broadly-speaking decrease over the course of training for all the models, the NLLs for the focal loss models remain consistently higher than that for the cross-entropy model throughout training, implying that the focal loss models are relatively less confident than the cross-entropy model for samples that they predict correctly. This is important, as we have already discussed that it is overconfidence that normally makes deep neural networks miscalibrated. Figure 3(c) shows that in contrast to the cross-entropy model, for which the NLL for misclassified test samples increases significantly after epoch 150, the rise in this value for the focal loss models is much less severe. Additionally, in Figure 3(d), we notice that the entropy of the softmax distribution for misclassified test samples is consistently (if marginally) higher for focal loss than for cross-entropy (consistent with Equation 4).\n\nAs per \u00a73, an increase in the test NLL and a decrease in the test entropy for misclassified samples, taken together with no corresponding increase in the test NLL for the correctly classified samples, can be interpreted as the network starting to predict softmax distributions for the misclassified samples that are ever more peaky in the wrong place. Notably, our results in Figures 3(b), 3(c) and 3(d) clearly show that this effect is significantly reduced when training with focal loss rather than cross-entropy, leading to a network that is less peaky in the wrong place and better calibrated.\n\nTheoretical justification: As mentioned previously, once a model trained using cross-entropy reaches high accuracy on the training set, the optimiser may try to further reduce the training NLL by increasing the confidences for the correctly classified samples. One way it could achieve this would be to increase the weights of the network to increase the magnitudes of the logits. In fact, this hypothesis would help to explain the observation of [Guo et al., 2017] that models trained using some form of weight decay are relatively better calibrated. To verify this, we plot the L 2 norm of the weights of the last linear layer for all four networks as a function of the training epoch (see Figure 3(e)). Notably, although the norms of the weights for the models trained on focal loss are initially higher than that for the cross-entropy model, a complete reversal in the ordering of the weight norms occurs between epochs 150 and 250. In other words, as the networks start to become miscalibrated, the weight norm for the cross-entropy model also starts to become greater than those for the focal loss models. In practice, this is because focal loss, by design, starts to act as a regulariser on the network's weights once the model has gained a certain amount of confidence in its predictions. This behaviour of focal loss can be observed even on a much simpler setup like a linear model (see Appendix B). To better understand this, we start by considering the following proposition:\n\nProposition 1. For focal loss L f and cross-entropy L c , the gradients\n\u2202L f \u2202w = \u2202Lc \u2202w g(p i,yi , \u03b3), where g(p, \u03b3) = (1 \u2212 p) \u03b3 \u2212 \u03b3p(1 \u2212 p) \u03b3\u22121 log(p), \u03b3 \u2208 R +\nis the focal loss hyperparameter, and w denotes the parameters of the last linear layer. Thus\n\u2202L f \u2202w \u2264 \u2202Lc \u2202w if g(p i,yi , \u03b3) \u2208 [0, 1]. Proof. See Appendix C.\nProposition 1 shows the relationship between the norms of the gradients of the last linear layer for focal loss and cross-entropy loss, for the same network architecture. Note that this relation depends on a function g(p, \u03b3), which we plot in Figure 4(a) to understand its behaviour. It is clear that for every \u03b3, there exists a (different) threshold p 0 such that for all p \u2208 [0, p 0 ], g(p, \u03b3) \u2265 1, and for all p \u2208 (p 0 , 1], g(p, \u03b3) < 1. (For example, for \u03b3 = 1, p 0 \u2248 0.4.) We use this insight to further explain why focal loss provides implicit weight regularisation. Implicit weight regularisation: For a network trained using focal loss with a fixed \u03b3, during the initial stages of the training, whenp i,yi \u2208 (0, p 0 ), g(p i,yi , \u03b3) > 1. This implies that the confidences of the focal loss model's predictions will initially increase faster than they would for cross-entropy. However, as soon asp i,yi crosses the threshold p 0 , g(p i,yi , \u03b3) falls below 1 and reduces the size of the gradient updates made to the network weights, thereby having a regularising effect on the weights. This is why, in Figure 3(e), we find that the weight norms of the models trained with focal loss are initially higher than that for the model trained using cross-entropy. However, as training progresses, we find that the ordering of the weight norms reverses, as focal loss starts regularising the network weights. Moreover, we can draw similar insights from Figures 4(b), 4(c) and 4(d), in which we plot histograms of the gradient norms of the last linear layer (over all samples in the training set) at epochs 10, 100 and 200, respectively. At epoch 10, the gradient norms for cross-entropy and focal loss are similar, but as training progresses, those for cross-entropy decrease less rapidly than those for focal loss, indicating that the gradient norms for focal loss are consistently lower than those for cross-entropy throughout training.\n\nFinally, observe in Figure 4(a) that for higher \u03b3 values, the fall in g(p, \u03b3) is steeper. We would thus expect a greater weight regularisation effect for models that use higher values of \u03b3. This explains why, of the three models that we trained using focal loss, the one with \u03b3 = 3 outperforms (in terms of calibration) the one with \u03b3 = 2, which in turn outperforms the model with \u03b3 = 1. Based on this observation, one might think that, in general, a higher value of gamma would lead to a more calibrated model. However, this is not the case, as we notice from Figure 4(a) that for \u03b3 \u2265 7, g(p, \u03b3) reduces to nearly 0 for a relatively low value of p (around 0.5). As a result, using values of \u03b3 that are too high will cause the gradients to die (i.e. reduce to nearly 0) early, at a point at which the network's predictions remain ambiguous, thereby causing the training process to fail.\n\nHow to choose \u03b3: As discussed, focal loss provides implicit entropy and weight regularisation, both of which heavily depend on the value of \u03b3. Finding an appropriate \u03b3 is normally done using cross-validation. Also, traditionally, \u03b3 is fixed for all samples in the dataset. However, as shown, the regularisation effect for a sample i depends onp i,yi , i.e. the predicted probability for the ground truth label for the sample. It thus makes sense to choose \u03b3 for each sample based on the value ofp i,yi . To this end, we provide Proposition 2, which we use to find a solution to this problem:\nProposition 2. Given a p 0 , for 1 \u2265 p \u2265 p 0 > 0, g(p, \u03b3) \u2264 1 for all \u03b3 \u2265 \u03b3 * = a b + 1 log a W \u22121 \u2212 a (1\u2212a/b) b\nlog a , where a = 1 \u2212 p 0 , b = p 0 log p 0 , and W \u22121 is the Lambert-W function [Corless et al., 1996]. Moreover, for p \u2265 p 0 > 0 and \u03b3 \u2265 \u03b3 * , the equality g(p, \u03b3) = 1 holds only for p = p 0 and \u03b3 = \u03b3 * .\n\nProof. See Appendix C. Note that there exist multiple values of \u03b3 for which g(p, \u03b3) \u2264 1 for all p \u2265 p 0 .\n\nFor a given p 0 , this allows us to compute \u03b3 s.t. (i) g(p 0 , \u03b3) = 1; (ii) g(p, \u03b3) \u2265 1 for p \u2208 [0, p 0 ); and (iii) g(p, \u03b3) < 1 for p \u2208 (p 0 , 1]. This allows us to control the magnitude of the gradients for a particular sample i based on the current value ofp i,yi , and gives us a way of obtaining an informed value of \u03b3 for each sample. For instance, a reasonable policy might be to choose \u03b3 s.t. g(p i,yi , \u03b3) > 1 ifp i,yi is small (say less than 0.25), and g(p i,yi , \u03b3) < 1 otherwise. Such a policy will have the effect of making the weight updates larger for samples having a low predicted probability for the correct class and smaller for samples with a relatively higher predicted probability for the correct class.\n\nFollowing the aforementioned arguments, we choose a threshold p 0 of 0.25, and use Proposition 2 to obtain a \u03b3 policy such that g(p, \u03b3) is observably greater than 1 for p \u2208 [0, 0.25) and g(p, \u03b3) < 1 for p \u2208 (0.25, 1]. In particular, we use the following schedule: ifp i,yi \u2208 [0, 0.2), then \u03b3 = 5, otherwise \u03b3 = 3 (note that g(0.2, 5) \u2248 1 and g(0.25, 3) \u2248 1, refer Figure 4(a)). We find it to perform consistently well across multiple classification datasets and network architectures. Having said that, one can calculate multiple such schedules for \u03b3 following Proposition 2, using the intuition of having a relatively high \u03b3 for low values ofp i,yi and a relatively low \u03b3 for high values ofp i,yi .\n\n\nExperiments\n\n\nImage and Document Classification\n\nWe use multiple image and document classification datasets to verify the effectiveness of focal loss for training calibrated models. For our image classification experiments, we use CIFAR-10/100 [Krizhevsky, 2009] and Tiny-ImageNet [Deng et al., 2009], and for document classification, we use 20 Newsgroups [Lang, 1995] and the Stanford Sentiment Treebank (SST) [Socher et al., 2013]. We provide details regarding these datasets and their train/validation/test splits in Appendix D. On CIFAR-10/100, we train ResNet-50, ResNet-110 [He et al., 2016], Wide-ResNet-26-10 [Zagoruyko and Komodakis, 2016] and DenseNet-121 [Huang et al., 2017]. On Tiny-ImageNet, we train a ResNet-50 network. We train a Global Pooling Convolutional Network [Lin et al., 2014] on 20 Newsgroups [Lang, 1995] and a Tree-LSTM [Tai et al., 2015] on the SST Binary dataset. We provide implementation details for training each of these models in Appendix D. We use the following loss functions for training the above models:\n\nBaselines Along with cross-entropy loss, we compare our method against the following strong baselines (with and without temperature scaling):\n\n1. MMCE (Maximum Mean Calibration Error) [Kumar et al., 2018]: a continuous and differentiable proxy for calibration error that is normally used as a regulariser alongside cross-entropy.\n\n2. Label smoothing [M\u00fcller et al., 2019] (LS): given a one-hot ground-truth label distribution q and a smoothing factor \u03b1 (hyperparameter), the smoothed vector s is obtained as\ns i = (1 \u2212 \u03b1)q i + \u03b1(1 \u2212 q i )/(K \u2212 1)\n, where s i and q i denote the i th elements of vectors s and q respectively, and K is the number of classes. Instead of q, the smoothed vector is now treated as the ground truth. In our experiments, we train models using smoothing factors \u03b1 = 0.05 and \u03b1 = 0.1 but find \u03b1 = 0.05 to perform better. We thus report the results obtained from LS-0.05 with \u03b1 = 0.05.\n\n3. Brier Score [Brier, 1950]: computed as the squared error between the predicted softmax vector and the one-hot ground truth encoding. Brier score is particularly relevant baseline for calibration as it can be decomposed into calibration and refinement [DeGroot andFienberg, 1983, Snoek et al., 2019]. Moreover, it has a distinct penalty on incorrect class probabilities.\n\nFocal Loss (Sample-Dependent \u03b3 5, 3): As mentioned in \u00a74, we use the sample-dependent schedule FLSD-53: \u03b3 = 5 forp y \u2208 [0, 0.2), and \u03b3 = 3 forp y \u2208 [0.2, 1] which we find to consistently perform well across all the classification datasets and network architectures we experiment on.\n\nIn addition to the aforementioned sample-dependent \u03b3 approach, we also train other baselines on focal loss as well. We train models on focal loss with \u03b3 fixed to 1, 2 and 3. As a simplification to the sample-dependent \u03b3 approach, we also try using a training epoch-dependent schedule for \u03b3. We describe these in more detail and report the results in Appendix E.\n\nTemperature Scaling: We compute the optimal temperature using two different approaches: (a) learning the optimal temperature by optimising NLL over a validation set, and (b) performing grid search over temperature values between 0 and 10, with a step of 0.1, and choosing the temperature that minimises the validation set ECE. We find the second approach to produce stronger baselines. Since we report ECE and AdaECE as the performance metrics and grid search does not require a differentiable objective function, we directly minimise ECE over the validation set during grid search.\n\nPerformance Gains: We report the optimal temperatures and their corresponding ECE% and AdaECE% (computed using 15 bins) in Tables 1 and 2 Table 3: Test set ECE and BLEU score both pre and post temperature scaling for cross-entropy (CE) with hard targets, cross-entropy with label smoothing (LS) (\u03b1 = 0.1) and focal loss (FL) (\u03b3 = 1).\n\ncross-entropy, label smoothing, Brier score and MMCE. It broadly produces the lowest ECE and AdaECE values both before and after temperature scaling. This observation is particularly encouraging, as it indicates that a principled method of obtaining values of \u03b3 for focal loss can work well. Furthermore, Tables 5 and 6 in the appendix show that other focal loss based approaches are also very competitive. Finally, we observe that there are cases where ECE might be low, implying that the model is well calibrated, whereas AdaECE evaluated on the same model might be high. For example, in the case of WideResNet on CIFAR-10 for cross-entropy, the best ECE obtained after temperature scaling is 0.92, whereas AdaECE on the same model at the same temperature is 1.69.\n\n\nConfident and Calibrated Models:\n\nIt is interesting to note that for focal loss with sample-based \u03b3 (see Tables  1 and 2), the optimal temperatures are very close to 1, mostly lying between 0.9 and 1.1. This property is shown by the Brier score and the label smoothing models as well. By contrast, the optimal temperatures for the baselines (cross-entropy with hard targets and MMCE) are significantly higher, with values lying between 2.0 to 2.8. An optimal temperature close to 1 indicates that the model is innately calibrated and cannot be made significantly more calibrated by temperature scaling. Furthermore, an optimal temperature that is much greater than 1 can make the network underconfident in general, as its outputs are temperature-scaled irrespective of their correctness. We provide additional experimental and qualitative results to support this claim in Appendix F. \n\n\nMachine Translation: A Downstream Task\n\nIn order to observe the performance of focal loss for a downstream task, where a calibrated model can potentially improve the performance on the task, we conduct an experiment on machine translation with beam search. Following the setup described in the work M\u00fcller et al. [2019], we train the Transformer architecture [Vaswani et al., 2017] on the standard WMT 2014 English-to-German translation dataset. The settings used for training (like optimiser, learning rate schedule, number of training iterations, etc.) are exactly the same as mentioned in the paper [Vaswani et al., 2017]. The intuition behind having machine translation as the downstream task of choice lies in the fact that in translation, the softmax vectors produced by the transformer model are directly fed into the beam search algorithm, and hence softmax vectors from a more calibrated model should ideally produce better translations and a better BLEU score.\n\nWe train three transformer models, one on cross-entropy with hard target labels, the second on cross-entropy with label smoothing (with smoothing factor \u03b1 = 0.1) and the third on focal loss with \u03b3 = 1. In order to compare these models in terms of calibration, we report the test set ECE (%) both before and after temperature scaling in the first row of Table 3. Furthermore, to evaluate their performance on the English-to-German translation task, we also report the test set BLEU score of these models in the second row of Table 3. Finally, to study the variation of test set BLEU score and validation set ECE with temperature, we plot them against temperature for all three models in Figure 5.\n\nIt is clear from Table 3 that the model trained on focal loss outperforms its competitors on both ECE and BLEU score. The focal loss model also has an optimal temperature of 1, just like the model trained on cross-entropy with label smoothing. From Figure 5, we can see that the models obtain the highest BLEU scores at around the same temperatures at which they obtain low ECEs, thereby confirming our initial notion that a more calibrated model provides better translations. However, since the optimal temperatures are tuned on the validation set, they don't often correspond to the best BLEU scores on the test set. On the test set, the highest BLEU scores we observe are 26.33 for cross-entropy, 26.36 for cross-entropy with label smoothing, and 26.39 for focal loss. Thus, focal loss obtains both the lowest ECE and the highest BLEU.\n\n\nConclusion\n\nIn this paper, we have shown that training using focal loss can yield multi-class classification networks that are more naturally calibrated than those trained using the more conventional cross-entropy loss. There are sound theoretical reasons to expect this: in particular, as we show in \u00a74, focal loss implicitly maximises entropy while minimising the KL divergence between the predicted and the target distributions. We also show that, because of its design, it naturally regularises the weights of a network during training, reducing NLL overfitting and thereby improving calibration. Extensive experiments on a variety of computer vision (CIFAR-10/100/Tiny-ImageNet) and NLP (20 Newsgroups/SST) datasets, with a wide variety of different network architectures, show that this expectation is also borne out in practice. Our results show that in almost all cases, networks trained with focal loss are more calibrated than those trained with cross-entropy loss, label smoothing, Brier score and MMCE, whilst having similar levels of accuracy, making their predictions much easier for downstream components to trust. Finally, we verify this by showing the superior performance of focal loss on the downstream task of English-to-German translation.\n\n\nAcknowledgements\n\nThis work was started whilst J Mukhoti was at FiveAI, and completed after he moved to the University of Oxford. V Kulharia is wholly funded by a Toyota Research Institute grant. A Sanyal acknowledges support from The Alan Turing Institute under the Turing Doctoral Studentship grant TU/C/000023. This work was also supported by ERC grant ERC-2012-AdG 321162-HELIOS, EPSRC grant Seebibyte EP/M013774/1, EPSRC/MURI grant EP/N019474/1, and the Royal Academy of Engineering.\n\n\nAppendix\n\nIn \u00a7 A, we discuss the relation between focal loss and a regularised KL divergence where the regulariser is the entropy of the predicted distribution. In \u00a7 B, we discuss the regularisation effect of focal loss on a simple setup, i.e., a generalised linear model trained on a simple data distribution. In \u00a7 C, we show the proofs of the two propositions formulated in the main text. We then describe all the datasets and implementation details for our experiments in \u00a7 D. In \u00a7 E, we discuss additional approaches for training using focal loss and also the results we get from these approaches. We also provide Top-5 accuracies of several models to possibly hint at their calibration. We further provide results on evaluating our models using various metrics other than ECE and Ada-ECE (like MCE and NLL). In \u00a7 F, we provide empirical and qualitative results to show that models trained using focal loss are calibrated while maintaining their confidence on correct predictions. Finally, in \u00a7 G, we provide a brief extension on our discussion about Figure 3(e) in the main paper with a plot of L 2 norms of features obtained from the last ResNet block during training.\n\n\nA Relation between Focal Loss and Entropy Regularised KL Divergence\n\nHere we show why focal loss favours accurate but relatively less confident solutions. We show that it inherently provides a trade-off between minimizing the KL-divergence and maximizing the entropy, depending on the strength of \u03b3. We use L f and L c to denote the focal loss with parameter \u03b3 and cross entropy betweenp and q, respectively. K denotes the number of classes and q y denotes the ground-truth probability assigned to the y-th class (similarly forp y ). We consider the following simple extension of focal loss:\nL f = \u2212 K y=1 (1 \u2212p y ) \u03b3 q y logp y \u2265 \u2212 K y=1\n(1 \u2212 \u03b3p y )q y logp y By Bernoulli's inequality \u2200\u03b3 \u2265 1. Note,p y \u2208 [0, 1]\n= \u2212 K y=1 q y logp y \u2212 \u03b3 K y=1 q ypy logp y \u2200y, logp y \u2264 0 \u2265 \u2212 K y=1 q y logp y \u2212 \u03b3 max j q j K y=1 |p y logp y | By H\u00f6lder's inequality ||f g|| 1 \u2264 ||f || \u221e |||g|| 1 \u2265 \u2212 K y=1 q y logp y + \u03b3 K y=1p y logp y \u2200j, q j \u2208 [0, 1] = L c \u2212 \u03b3H[p].\nWe know that L c = KL(q||p) + H[q], thus, combining this equality with the above inequality leads to:\nL f \u2265 KL(q||p) + H[q] constant \u2212\u03b3H[p].\nIn the case of one-hot encoding (Delta distribution for q), focal loss would maximize \u2212p y logp y (let y be the ground-truth class index), the component of the entropy ofp corresponding to the ground-truth index. Thus, would prefer learningp such thatp y is assigned a higher value (because of the KL term) but not too high (because of the entropy term) which eventually would avoid preferring overconfident models (as opposed to the cross-entropy loss). Experimentally, we found the solution of the cross entropy and focal loss equations, i.e. the value of the predicted probabilityp which minimizes the loss, for various values of q in a binary classification problem (i.e. K = 2) and plotted it in Figure 6. As expected, focal loss favours a more entropic solutionp that is closer to 0.5. In other words, as Figure 6 shows, solutions to focal loss (Eqn 5) will always have higher entropy than that of cross entropy depending on the value of \u03b3. The behaviour of deep neural networks is generally quite different from linear models and the problem of calibration is more pronounced in the case of deep neural networks, hence we focus on analysing the calibration of deep networks in the paper. However, to understand the effect of focal loss on a simpler setup, we also conducted experiments on a generalised linear model using a simple data distribution.\np = argmin x \u2212 (1 \u2212 x) \u03b3 q log x \u2212 x \u03b3 (1 \u2212 q) log (1 \u2212 x) 0 \u2264 x \u2264 1(\nSetup We consider a binary classification problem. The data matrix X \u2208 R 2\u00d7N is created by assigning each class, two normally distributed clusters such that the mean of the clusters are linearly separable. The mean of the clusters are situated on the vertices of a two-dimensional hypercube of side length 4. The standard deviation for each cluster is 1 and the samples are randomly linearly combined within each cluster in order to add covariance. Further, for 10% of the data points, the labels were flipped. 4000 samples are used for training and 1000 samples are used for testing. The model consists of a simple 2-parameter logistic regression model.\nf w (x) = \u03c3(w 1 x 1 + w 2 x 2 )\n. We train this model using both cross-entropy and focal loss with \u03b3 = 1.\n\n\nWeight Magnification\n\nWe have argued that focal loss implicitly regularizes the weights of the model by providing smaller gradients as compared to cross-entropy. This helps in calibration as, if all the weights are large, the logits are large and thus the confidence of the network is large on all test points, even on the misclassified points. When the model misclassifies, it misclassifies with a high confidence. Figure 7 shows, for a generalised linear model, that the norm of the logits and the weights of a network blows for Cross Entropy as compared to Focal Loss. Figures 8 (b) and (c) show that running gradient descent with cross-entropy (CE) and focal loss (FL) both gives the same decision regions i.e. the weight vector points in the same region for both FL and CE. However, as we have seen that the norm of the weights is much larger for CE as compared to FL, we would expect the confidence of misclassified test points to be large for CE as compared to FL. Figure 8 (a) plots a histogram of the confidence of the misclassified points and it shows that CE misclassifies almost always with greater than 90% confidence whereas FL misclassifies with much lower confidence. \n\n\nHigh Confidence for mistakes\n\n\nC Proofs\n\nHere we provide the proofs of both the propositions presented in the main text. While Proposition 1 helps us understand the regularization effect of focal loss, Proposition 2 provides us the \u03b3 values in a principled way such that it is sample-dependent. Implementing the sample-dependent \u03b3 is very easy as implementation of the Lambert-W function [Corless et al., 1996] is available in standard libraries (e.g. python scipy).\n\nProposition 1. For focal loss L f and cross-entropy L c , the gradients \u2202L f \u2202w = \u2202Lc \u2202w g(p i,yi , \u03b3), where g(p, \u03b3) = (1 \u2212 p) \u03b3 \u2212 \u03b3p(1 \u2212 p) \u03b3\u22121 log(p), \u03b3 \u2208 R + is the focal loss hyperparameter, and w denotes the parameters of the last linear layer. Thus  \n\u2202L f \u2202p i,yi = \u2212 1 p i,yi (1 \u2212p i,yi ) \u03b3 \u2212 \u03b3p i,yi (1 \u2212p i,yi ) \u03b3\u22121 log(p i,yi ) = \u2202L c \u2202p i,yi g(p i,yi , \u03b3), in which g(p i,yi , \u03b3) = (1\u2212p i,yi ) \u03b3 \u2212\u03b3p i,yi (1\u2212p i,yi ) \u03b3\u22121 log(p i,\u2265 p \u2265 p 0 > 0, g(p, \u03b3) \u2264 1 for all \u03b3 \u2265 \u03b3 * = a b + 1 log a W \u22121 \u2212 a (1\u2212a/b) b\nlog a , where a = 1 \u2212 p 0 , b = p 0 log p 0 , and W \u22121 is the Lambert-W function [Corless et al., 1996]. Moreover, for p \u2265 p 0 > 0 and \u03b3 \u2265 \u03b3 * , the equality g(p, \u03b3) = 1 holds only for p = p 0 and \u03b3 = \u03b3 * .\n\nProof. We derive the value of \u03b3 > 0 for which g(p 0 , \u03b3) = 1 for a given p 0 \u2208 [0, 1]. From Proposition 4.1, we already know that\n\u2202L f \u2202p i,yi = \u2202L c \u2202p i,yi g(p i,yi , \u03b3),(6)\nwhere L f is focal loss, L c is cross entropy loss,p i,yi is the probability assigned by the model to the ground-truth correct class for the i th sample, and\ng(p i,yi , \u03b3) = (1 \u2212p i,yi ) \u03b3 \u2212 \u03b3p i,yi (1 \u2212p i,yi ) \u03b3\u22121 log(p i,yi ).(7)\nFor p \u2208 [0, 1], if we look at the function g(p, \u03b3), then we can clearly see that g(p, \u03b3) \u2192 1 as p \u2192 0, and that g(p, \u03b3) = 0 when p = 1. To observe the behaviour of g(p, \u03b3) for intermediate values of p, we first take its derivative with respect to p:\n\u2202g(p, \u03b3) \u2202p = \u03b3(1 \u2212 p) \u03b3\u22122 \u2212 2(1 \u2212 p) \u2212 (1 \u2212 p) log p + (\u03b3 \u2212 1)p log p(8)\nIn Equation 8, \u03b3(1 \u2212 p) \u03b3\u22122 > 0 except when p = 1 (in which case \u03b3(1 \u2212 p) \u03b3\u22122 = 0). Thus, to observe the sign of the gradient \u2202g(p,\u03b3) \u2202p , we focus on the term\n\u2212 2(1 \u2212 p) \u2212 (1 \u2212 p) log p + (\u03b3 \u2212 1)p log p.(9)\nDividing Equation 9 by (\u2212 log p), the sign remains unchanged and we get\nk(p, \u03b3) = 2(1 \u2212 p) log p + 1 \u2212 \u03b3p.(10)\nWe can see that k(p, \u03b3) \u2192 1 as p \u2192 0 and k(p, \u03b3) \u2192 \u2212(1 + \u03b3) as p \u2192 1 (using l'H\u00f4pital's rule). Furthermore, k(p, \u03b3) is monotonically decreasing for p \u2208 [0, 1]. Thus, as the gradient \u2202g(p,\u03b3) \u2202p monotonically decreases from a positive value at p = 0 to a negative value at p = 1, we can say that g(p, \u03b3) first monotonically increases starting from 1 (as p \u2192 0) and then monotonically decreases down to 0 (at p = 1). Thus, if for some threshold p 0 > 0 and for some \u03b3 > 0, g(p, \u03b3) = 1, then \u2200p > p 0 , g(p, \u03b3) < 1. We now want to find a \u03b3 such that \u2200p \u2265 p 0 , g(p, \u03b3) \u2264 1. First, let a = (1 \u2212 p 0 ) and b = p 0 log p 0 . Then:\ng(p 0 , \u03b3) = (1 \u2212 p 0 ) \u03b3 \u2212 \u03b3p 0 (1 \u2212 p 0 ) \u03b3\u22121 log p 0 \u2264 1 =\u21d2 (1 \u2212 p 0 ) \u03b3\u22121 [(1 \u2212 p 0 ) \u2212 \u03b3p 0 log p 0 ] \u2264 1 =\u21d2 a \u03b3\u22121 (a \u2212 \u03b3b) \u2264 1 =\u21d2 (\u03b3 \u2212 1) log a + log(a \u2212 \u03b3b) \u2264 0 =\u21d2 \u03b3 \u2212 a b log a + log(a \u2212 \u03b3b) \u2264 1 \u2212 a b log a =\u21d2 (a \u2212 \u03b3b)e (\u03b3\u2212a/b) log a \u2264 a (1\u2212a/b) =\u21d2 \u03b3 \u2212 a b e (\u03b3\u2212a/b) log a \u2264 \u2212 a (1\u2212a/b) b =\u21d2 \u03b3 \u2212 a b log a e (\u03b3\u2212a/b) log a \u2265 \u2212 a (1\u2212a/b) b log a(11)\nwhere a = (1 \u2212 p 0 ) and b = p 0 log p 0 . We know that the inverse of y = xe x is defined as x = W (y), where W is the Lambert-W function [Corless et al., 1996]. Furthermore, the r.h.s. of the inequality in Equation 11 is always negative, with a minimum possible value of \u22121/e that occurs at p 0 = 0.5. Therefore, applying the Lambert-W function to the r.h.s. will yield two real solutions (corresponding to a principal branch denoted by W 0 and a negative branch denoted by W \u22121 ). We first consider the solution corresponding to the negative branch (which is the smaller of the two solutions):\n(\u03b3 \u2212 a b ) log a \u2264 W \u22121 \u2212 a (1\u2212a/b) b log a =\u21d2 \u03b3 \u2265 a b + 1 log a W \u22121 \u2212 a (1\u2212a/b) b log a(12)\nIf we consider the principal branch, the solution is\n\u03b3 \u2264 a b + 1 log a W 0 \u2212 a (1\u2212a/b) b log a ,(13)\nwhich yields a negative value for \u03b3 that we discard. Thus Equation 12 gives the values of \u03b3 for which if p > p 0 , then g(p, \u03b3) < 1. In other words, g(p 0 , \u03b3) = 1, and for any p < p 0 , g(p, \u03b3) > 1.\n\n\nD Dataset Description and Implementation Details\n\nWe use the following image and document classification datasets in our experiments:\n\n1. CIFAR-10 [Krizhevsky, 2009]: This dataset has 60,000 colour images of size 32 \u00d7 32, divided equally into 10 classes. We use a train/validation/test split of 45,000/5,000/10,000 images. [Socher et al., 2013]: This dataset contains movie reviews in the form of sentence parse trees, where each node is annotated by sentiment. We use the dataset version with binary labels, for which 6,920/872/1,821 documents are used as the training/validation/test split. In the training set, each node of a parse tree is annotated as positive, neutral or negative. At test time, the evaluation is done based on the model classification at the root node, i.e. considering the whole sentence, which contains only positive or negative sentiment.\n\n\nStanford Sentiment Treebank (SST)\n\nFor training networks on CIFAR-10 and CIFAR-100, we use SGD with a momentum of 0.9 as our optimiser, and train the networks for 350 epochs, with a learning rate of 0.1 for the first 150 epochs, 0.01 for the next 100 epochs, and 0.001 for the last 100 epochs. We use a training batch size of 128. Furthermore, we augment the training images by applying random crops and random horizontal flips. For Tiny-ImageNet, we train for 100 epochs with a learning rate of 0.1 for the first 40 epochs, 0.01 for the next 20 epochs and 0.001 for the last 40 epochs. We use a training batch size of 64. It should be noted that for Tiny-ImageNet, we saved 50 samples per class (i.e., a total of 10000 samples) from the training set as our own validation set to fine-tune the temperature parameter (hence, we trained on 90000 images) and we use the Tiny-ImageNet validation set as our test set.\n\nFor 20 Newsgroups, we train the Global Pooling Convolutional Network [Lin et al., 2014] using the Adam optimiser, with learning rate 0.001, and betas 0.9 and 0.999. The code is a PyTorch adaptation of Ng. We used Glove word embeddings [Pennington et al., 2014] to train the network. We trained all the models for 50 epochs and used the models with the best validation accuracy.\n\nFor the SST Binary dataset, we train the Tree-LSTM [Tai et al., 2015] using the AdaGrad optimiser with a learning rate of 0.05 and a weight decay of 10 \u22124 , as suggested by the authors. We used the constituency model, which considers binary parse trees of the data and trains a binary tree LSTM on them. The Glove word embeddings [Pennington et al., 2014] were also tuned for best results. The code framework we used is inspired by TreeLSTM. We trained these models for 25 epochs and used the models with the best validation accuracy.\n\nFor all our models, we use the PyTorch framework, setting any hyperparameters not explicitly mentioned to the default values used in the standard models. For MMCE, we used \u03bb = 2 for all the image-classification tasks, whilst we found \u03bb = 8 to perform better for document classification. A calibrated model which does not generalise well to an unseen test set is not very useful. Hence, for all the experiments, we set the training parameters in a way such that we get state-of-the-art test set accuracies on all datasets for each model.\n\n\nE Additional Results\n\nIn addition to the sample-dependent \u03b3 approach, we try the following focal loss approaches as well:\n\nFocal Loss (Fixed \u03b3): We trained models on focal loss with \u03b3 fixed to 1, 2 and 3. We found \u03b3 = 3 to produce the best ECE among models trained using a fixed \u03b3. This corroborates the observation we made in \u00a74 of the main paper that \u03b3 = 3 should produce better results than \u03b3 = 1 or \u03b3 = 2, as the regularising effect for \u03b3 = 3 is higher.\n\nFocal Loss (Scheduled \u03b3): As a simplification to the sample-dependent \u03b3 approach, we also tried using a schedule for \u03b3 during training, as we expect the value ofp i,yi to increase in general for all samples over time. In particular, we report results for two different schedules: (a) Focal Loss (scheduled \u03b3 5,3,2): \u03b3 = 5 for the first 100 epochs, \u03b3 = 3 for the next 150 epochs, and \u03b3 = 2 for the last 100 epochs, and (b) Focal Loss (scheduled \u03b3 5,3,1): \u03b3 = 5 for the first 100 epochs, \u03b3 = 3 for the next 150 epochs, and \u03b3 = 1 for the last 100 epochs. We also tried various other schedules, but found these two to produce the best results on the validation sets.\n\nFinally, for the sample-dependent \u03b3 approach, we also found the policy: Focal Loss (sample-dependent \u03b3 5,3,2) with \u03b3 = 5 forp i,yi \u2208 [0, 0.2), \u03b3 = 3 forp i,yi \u2208 [0.2, 0.5) and \u03b3 = 2 forp i,yi \u2208 [0.5, 1] to produce competitive results.\n\nIn Table 4 we present the classification errors on the test datasets for all the major loss functions we considered. Moreover, we also report the classification errors for the different focal loss approaches in Table 7. We also report the ECE and Ada-ECE for all the focal loss approaches in Table 5 and Table 6.\n\nFinally, calibrated models should have a higher logit score (or softmax probability) on the correct class even when they misclassify, as compared to models which are less calibrated. Thus, intuitively, such models should have a higher Top-5 accuracy. In Table 8, we report the Top-5 accuracies for all our models on datasets where the number of classes is relatively high (i.e., on CIFAR-100 with 100 classes and Tiny-ImageNet with 200 classes). We observe focal loss with sample-dependent \u03b3 to produce the highest top-5 accuracies on all models trained on CIFAR-100 and the second best top-5 accuracy (only marginally below the highest accuracy) on Tiny-ImageNet.\n\nIn addition to ECE and Ada-ECE, we use various other metrics to compare the proposed methods with the baselines (i.e. cross-entropy, Brier score, MMCE and Label Smoothing). We present the test NLL % before and after temperature scaling in Tables 9 and 10, respectively. We report the test set MCE % before and after temperature scaling in Tables 11 and 12, respectively.\n\nWe use the following abbreviation to report results on different varieties of Focal Loss. FL-1 refers to Focal Loss (fixed \u03b3 1), FL-2 refers to Focal Loss (fixed \u03b3 2), FL-3 refers to Focal Loss (fixed \u03b3 3), FLSc-531 refers to Focal Loss (scheduled \u03b3 5,3,1), FLSc-532 refers to Focal Loss (scheduled \u03b3 5,3,2), FLSD-532 refers to Focal Loss (sample-dependent \u03b3 5,3,2) and FLSD-53 refers to Focal Loss (sample-dependent \u03b3 5,3).    \n\n\nF Focal Loss is Confident and Calibrated\n\nIn extension to what we present in Section 5 of the main paper, we also follow the approach adopted in Kumar et al. [2018], and measure the percentage of test samples that are predicted with a confidence of 0.99 or more (we call this set of test samples S99). In Table 13 Table 9: NLL (%) computed for different approaches pre temperature scaling.\n\nusing cross-entropy loss, MMCE loss, and focal loss. We observe that |S99| for the focal loss model is much lower than for the cross-entropy or MMCE models before temperature scaling. However, after temperature scaling, |S99| for focal loss is significantly higher than for both MMCE and cross-entropy. The reason is that with an optimal temperature of 1.1, the confidence of the temperature-scaled model for focal loss does not reduce as much as those of the models for cross-entropy and MMCE, for which the optimal temperatures lie between 2.5 to 2.8. We thus conclude that models trained on focal loss are not only more calibrated, but also better preserve their confidence on predictions, even after being post-processed with temperature scaling.\n\nIn Figure 9, we present some qualitative results to support this claim and show the improvement in the confidence estimates of focal loss in comparison to other baselines (i.e., cross entropy, MMCE and Brier score). For this, we    take ResNet-50 networks trained on CIFAR-10 using the four loss functions (cross entropy, MMCE, Brier score and Focal loss with sample-dependent \u03b3 5,3) and measure the confidence of their predictions for four correctly and four incorrectly classified test samples. We report these confidences both before and after temperature scaling. It is clear from Figure 9 that for all the correctly classified samples, the model trained using focal loss has very confident predictions both pre and post temperature scaling. However, on misclassified samples, we observe a very low confidence for the focal loss model. The ResNet-50 network trained using cross entropy is very confident even on the misclassified samples, particularly before temperature scaling. Apart from focal loss, the only model which has relatively low confidences on misclassified test samples is the one trained using Brier score. These observations support our claim that focal loss produces not only a calibrated model but also one which is confident on its correct predictions.  \n\n\nG Ordering of Feature Norms\n\nAs an extension to the discussion related to Figure 3(e) in the main paper, we plot the L 2 norm of the features/activations obtained from the last ResNet block (right before the linear layer is applied on these features to get the logits). We plot these norms throughout the training period for networks trained on cross-entropy and focal loss with \u03b3 set to 1, 2 and 3 in Figure 10. We observe that there is a distinct ordering of feature norms for the four models: cross-entropy has the highest feature norm, followed by focal loss with \u03b3 = 1, followed by focal loss with \u03b3 = 2 and finally focal loss with \u03b3 = 3. Furthermore, this ordering is preserved throughout training. As we saw from Figure 3(e) in the main paper, from epoch 150 onwards (i.e., the epoch from which the networks start getting miscalibrated), there is a flip in the ordering of weight norms of the last linear layer. From epoch 150 onwards, the weight norms also follow the exact same ordering that we observe from Figure 10 here. This shows that throughout training the initial layer weights (before last linear layer) of the network trained using focal loss are also regularized to favor lower norm of the output features, thus possibly leading to less peakiness in final prediction as compared to that of cross-entropy loss (see the 'Peak at the wrong place' paragraph of Section 3 of the main paper).\n\nFigure 1 :\n1The confidence values for training samples at different epochs during the NLL training of a ResNet-50 on CIFAR-10 (see \u00a73).\n\nFigure 4 :\n4(a): g(p, \u03b3) vs. p and (b-d): histograms of the gradient norms of the last linear layer for both cross-entropy and focal loss.\n\nFigure 5 :\n5Changes in test set BLEU score and validation set ECE with temperature, for models trained using (a) cross-entropy with hard targets (CE) (b) cross-entropy with label smoothing (LS) (\u03b1 = 0.1), and (c) focal loss (FL) (\u03b3 = 1).\n\nFigure 6 :\n6Optimalp for various values of q.\n\nFigure 7 :\n7(a): Norm of logits (b): Norm of weights.\n\nFigure 8 :\n8(a): Confidence of mis-classifications (b): Decision boundary of linear classifier trained using cross entropy (c): Decision boundary of linear classifier trained using focal loss\n\n.\ng(p i,yi , \u03b3) \u2208 [0, 1].Proof. Let w be the linear layer parameters connecting the feature map to the logit s. Then, using the chain rule, The derivative of the focal loss with respect top i,yi , the softmax output of the network for the true class y i , takes the form\n\nFigure 9 :Figure 10 :\n910Qualitative results showing the performance of Cross Entropy, Brier Score, MMCE and Focal Loss (sample-dependent \u03b3 5,3) for a ResNet-50 trained on CIFAR-10. The first row of images have been correctly classified by networks trained on all four loss functions and the second row of images have all been incorrectly classified. For each image, we present the actual label, the predicted label and the confidence of the prediction both before and after temperature scaling. L 2 norm of features obtained from the last ResNet block (before the linear layer) of ResNet 50 averaged over entire training dataset of CIFAR-10 using a batch size of 128.\n\n\nTop row: reliability plots using 25 confidence bins; bottom row: % of samples in each bin. As training progresses, the model gradually shifts all training samples to the highest confidence bin. Notably, it continues to do so even after achieving 100% training accuracy by the 300 epoch point.For instance, of all the samples to which a perfectly calibrated neural network assigns a confidence of 0.8, 80% should be correctly predicted.A popular metric used to measure model calibration is the expected calibration error (ECE)[Naeini et al., 2015], defined as the expected absolute difference between the model's confidence and its accuracy, i.e. Ep |P(\u0177 = y|p) \u2212p| . Since we only have finite samples, the ECE cannot in practice be computed using this definition. Instead, we divide the interval [0, 1] into M equispaced bins, where the i th bin is the intervali\u22121 M , i M .Let B i denote the set of samples with confidences belonging to the i th bin. The accuracy A i of this bin is computed as\n\n\n. Full results (ECE, AdaECE, MCE, NLL and test error) for all approaches are reported in Appendix E.Firstly, for all dataset-network pairs, we obtain state-of-the-art classification accuracies (shown inTable 4in the appendix). It is clear from Tables 1 and 2 that focal loss with sample-dependent \u03b3 outperforms all the baselines:Dataset \n\nModel \nCross-Entropy \nBrier Loss \nMMCE \nLS-0.05 \nFLSD-53 (Ours) \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \n\nCIFAR-10 \n\nResNet 50 \n4.35 \n1.35(2.5) \n1.82 \n1.08(1.1) \n4.56 \n1.19(2.6) \n2.96 \n1.67(0.9) \n1.55 \n0.95(1.1) \nResNet 110 \n4.41 \n1.09(2.8) \n2.56 \n1.25(1.2) \n5.08 \n1.42(2.8) \n2.09 \n2.09(1) \n1.87 \n1.07(1.1) \nWide ResNet 26-10 \n3.23 \n0.92(2.2) \n1.25 \n1.25(1) \n3.29 \n0.86(2.2) \n4.26 \n1.84(0.8) \n1.56 \n0.84(0.9) \nDenseNet 121 \n4.52 \n1.31(2.4) \n1.53 \n1.53(1) \n5.1 \n1.61(2.5) \n1.88 \n1.82(0.9) \n1.22 \n1.22(1) \n\nCIFAR-100 \n\nResNet 50 \n17.52 \n3.42(2.1) \n6.52 \n3.64(1.1) \n15.32 \n2.38(1.8) \n7.81 \n4.01(1.1) \n4.5 \n2.0(1.1) \nResNet 110 \n19.05 \n4.43(2.3) \n7.88 \n4.65(1.2) \n19.14 \n3.86(2.3) \n11.02 \n5.89(1.1) \n8.56 \n4.12(1.2) \nWide ResNet 26-10 \n15.33 \n2.88(2.2) \n4.31 \n2.7(1.1) \n13.17 \n4.37(1.9) \n4.84 \n4.84(1) \n3.03 \n1.64(1.1) \nDenseNet 121 \n20.98 \n4.27(2.3) \n5.17 \n2.29(1.1) \n19.13 \n3.06(2.1) \n12.89 \n7.52(1.2) \n3.73 \n1.31(1.1) \n\nTiny-ImageNet \nResNet 50 \n15.32 \n5.48(1.4) \n4.44 \n4.13(0.9) \n13.01 \n5.55(1.3) \n15.23 \n6.51(0.7) \n1.76 \n1.76(1) \n\n20 Newsgroups \nGlobal Pooling CNN \n17.92 \n2.39(3.4) \n13.58 \n3.22(2.3) \n15.48 \n6.78(2.2) \n4.79 \n2.54(1.1) \n6.92 \n2.19(1.5) \n\nSST Binary \nTree LSTM \n7.37 \n2.62(1.8) \n9.01 \n2.79(2.5) \n5.03 \n4.02(1.5) \n4.84 \n4.11(1.2) \n9.19 \n1.83(0.7) \n\n\n\nTable 1 :\n1ECE (%) computed for different approaches both pre and post temperature scaling (cross-validating T on ECE). Optimal temperature for each method is indicated in brackets.Dataset \nModel \nCross-Entropy \nBrier Loss \nMMCE \nLS-0.05 \nFLSD-53 (Ours) \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \n\nCIFAR-10 \n\nResNet 50 \n4.33 \n2.14(2.5) \n1.74 \n1.23(1.1) \n4.55 \n2.16(2.6) \n3.89 \n2.92(0.9) \n1.56 \n1.26(1.1) \nResNet 110 \n4.4 \n1.99(2.8) \n2.6 \n1.7(1.2) \n5.06 \n2.52(2.8) \n4.44 \n4.44(1) \n2.07 \n1.67(1.1) \nWide ResNet 26-10 \n3.23 \n1.69(2.2) \n1.7 \n1.7(1) \n3.29 \n1.6(2.2) \n4.27 \n2.44(0.8) \n1.52 \n1.38(0.9) \nDenseNet 121 \n4.51 \n2.13(2.4) \n2.03 \n2.03(1) \n5.1 \n2.29(2.5) \n4.42 \n3.33(0.9) \n1.42 \n1.42(1) \n\nCIFAR-100 \n\nResNet 50 \n17.52 \n3.42(2.1) \n6.52 \n3.64(1.1) \n15.32 \n2.38(1.8) \n7.81 \n4.01(1.1) \n4.5 \n2.0(1.1) \nResNet 110 \n19.05 \n5.86(2.3) \n7.73 \n4.53(1.2) \n19.14 \n4.85(2.3) \n11.12 \n8.59(1.1) \n8.55 \n3.96(1.2) \nWide ResNet 26-10 \n15.33 \n2.89(2.2) \n4.22 \n2.81(1.1) \n13.16 \n4.25(1.9) \n5.1 \n5.1(1) \n2.75 \n1.63(1.1) \nDenseNet 121 \n20.98 \n5.09(2.3) \n5.04 \n2.56(1.1) \n19.13 \n3.07(2.1) \n12.83 \n8.92(1.2) \n3.55 \n1.24(1.1) \n\nTiny-ImageNet \nResNet 50 \n15.23 \n5.41(1.4) \n4.37 \n4.07(0.9) \n13.0 \n5.56(1.3) \n15.28 \n6.29(0.7) \n1.42 \n1.42(1) \n\n20 Newsgroups \nGlobal Pooling CNN \n17.91 \n2.23(3.4) \n13.57 \n3.11(2.3) \n15.21 \n6.47(2.2) \n4.39 \n2.63(1.1) \n6.92 \n2.35(1.5) \n\nSST Binary \nTree LSTM \n7.27 \n3.39(1.8) \n8.12 \n2.84(2.5) \n5.01 \n4.32(1.5) \n5.14 \n4.23(1.2) \n9.15 \n1.92(0.7) \n\n\n\nTable 2 :\n2Adaptive ECE (%) computed for different approaches both pre and post temperature scaling (crossvalidating T on ECE). Optimal temperature for each method is indicated in brackets.Metrics \nCE (\u03b1 = 0.0) \nLS (\u03b1 = 0.1) \nFL (\u03b3 = 1.0) \n\nECE% Pre T / Post T / T \n10.16/2.59/1.2 \n3.25/3.25/1.0 \n1.69/1.69/1.0 \nBLEU Pre T / Post T \n26.31/26.21 \n26.33/26.33 \n26.39/26.39 \n\n\n\nTable 4 :\n4Error (%) computed for different approaches. In this table, FL-3 denotes Focal Loss (fixed \u03b3 3), \nFLSc-532 denotes Focal Loss (scheduled \u03b3 5,3,2) and FLSD-53 denotes Focal Loss (sample-dependent \u03b3 5,3) \ni.e. focal loss with sample-dependent \u03b3 with \u03b3 = 5 forp i,yi \u2208 [0, 0.2] and \u03b3 = 3 forp i,yi \u2208 (0.2, 1]. \n\nDataset \nModel \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 \nFLSc-532 \nFLSD-532 \nFLSD-53 \n\nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \n\nCIFAR-10 \n\nResNet 50 \n3.42 \n1.08(1.6) \n2.36 \n0.91(1.2) \n1.48 \n1.42(1.1) \n4.06 \n1.53(1.6) \n2.97 \n1.53(1.2) \n2.52 \n0.88(1.3) \n1.55 \n0.95(1.1) \n\nResNet 110 \n3.46 \n1.2(1.6) \n2.7 \n0.89(1.3) \n1.55 \n1.02(1.1) \n4.92 \n1.5(1.7) \n3.33 \n1.36(1.3) \n2.82 \n0.97(1.3) \n1.87 \n1.07(1.1) \n\nWide ResNet 26-10 \n2.69 \n1.46(1.3) \n1.42 \n1.03(1.1) \n1.69 \n0.97(0.9) \n2.81 \n0.96(1.4) \n1.82 \n1.45(1.1) \n1.31 \n0.87(1.1) \n1.56 \n0.84(0.9) \n\nDenseNet 121 \n3.44 \n1.63(1.4) \n1.93 \n1.04(1.1) \n1.32 \n1.26(0.9) \n4.12 \n1.65(1.5) \n2.22 \n1.34(1.1) \n2.45 \n1.31(1.2) \n1.22 \n1.22(1) \n\nCIFAR-100 \n\nResNet 50 \n12.86 \n2.3(1.5) \n8.61 \n2.24(1.3) \n5.13 \n1.97(1.1) 11.63 2.09(1.4) \n8.47 \n2.13(1.3) \n9.09 \n1.61(1.3) \n4.5 \n2.(1.1) \n\nResNet 110 \n15.08 4.55(1.5) 11.57 3.73(1.3) \n8.64 \n3.95(1.2) 14.99 4.56(1.5) \n11.2 \n3.43(1.3) 11.74 3.64(1.3) \n8.56 \n4.12(1.2) \n\nWide ResNet 26-10 \n8.93 \n2.53(1.4) \n4.64 \n2.93(1.2) \n2.13 \n2.13(1) \n9.36 \n2.48(1.4) \n4.98 \n1.94(1.2) \n4.98 \n2.55(1.2) \n3.03 \n1.64(1.1) \n\nDenseNet 121 \n14.24 \n2.8(1.5) \n7.9 \n2.33(1.2) \n4.15 \n1.25(1.1) 13.05 2.08(1.5) \n7.63 \n1.96(1.2) \n8.14 \n2.35(1.3) \n3.73 \n1.31(1.1) \n\nTiny Imagenet \nResNet 50 \n7.61 \n3.29(1.2) \n3.02 \n3.02(1) \n1.87 \n1.87(1) \n7.77 \n3.07(1.2) \n3.62 \n2.54(1.1) \n2.81 \n2.57(1.1) \n1.76 \n1.76(1) \n\n20 Newsgroups Global Pooling CNN 15.06 2.14(2.6) \n12.1 \n3.22(1.6) \n8.67 \n3.51(1.5) 13.55 4.32(1.7) 12.13 2.47(1.8) \n12.2 \n2.39(2) \n6.92 \n2.19(1.5) \n\nSST Binary \nTree LSTM \n6.78 \n3.29(1.6) \n3.05 \n3.05(1) \n16.05 1.78(0.5) \n4.66 \n3.36(1.4) \n3.91 \n2.64(0.9) \n4.47 \n2.77(0.9) \n9.19 \n1.83(0.7) \n\n\n\nTable 5 :\n5ECE (%) computed for different focal loss approaches both pre and post temperature scaling (crossvalidating T on ECE). Optimal temperature for each method is indicated in brackets.Dataset \nModel \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 \nFLSc-532 \nFLSD-532 \nFLSD-53 \n\nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \nPre T \nPost T \n\nCIFAR-10 \n\nResNet 50 \n3.42 \n1.51(1.6) \n2.37 \n1.69(1.2) \n1.95 \n1.83(1.1) \n4.06 \n2.43(1.6) \n2.95 \n2.18(1.2) \n2.5 \n1.23(1.3) \n1.56 \n1.26(1.1) \n\nResNet 110 \n3.42 \n1.57(1.6) \n2.69 \n1.29(1.3) \n1.62 \n1.44(1.1) \n4.91 \n2.61(1.7) \n3.32 \n1.92(1.3) \n2.78 \n1.58(1.3) \n2.07 \n1.67(1.1) \n\nWide ResNet 26-10 \n2.7 \n1.71(1.3) \n1.64 \n1.47(1.1) \n1.84 \n1.54(0.9) \n2.75 \n1.85(1.4) \n2.04 \n1.9(1.1) \n1.68 \n1.49(1.1) \n1.52 \n1.38(0.9) \n\nDenseNet 121 \n3.44 \n1.85(1.4) \n1.8 \n1.39(1.1) \n1.22 \n1.48(0.9) \n4.11 \n2.2(1.5) \n2.19 \n1.64(1.1) \n2.44 \n1.6(1.2) \n1.42 \n1.42(1) \n\nCIFAR-100 \n\nResNet 50 \n12.86 2.54(1.5) \n8.55 \n2.44(1.3) \n5.08 \n2.02(1.1) 11.58 2.01(1.4) \n8.41 \n2.25(1.3) \n9.08 \n1.94(1.3) \n4.39 \n2.33(1.1) \n\nResNet 110 \n15.08 5.16(1.5) 11.57 4.46(1.3) \n8.64 \n4.14(1.2) \n14.98 \n4.97(1.5) 11.18 3.68(1.3) \n11.74 \n4.21(1.3) \n8.55 \n3.96(1.2) \n\nWide ResNet 26-10 \n8.93 \n2.74(1.4) \n4.65 \n2.96(1.2) \n2.08 \n2.08(1) \n9.2 \n2.52(1.4) \n5 \n2.11(1.2) \n5 \n2.58(1.2) \n2.75 \n1.63(1.1) \n\nDenseNet 121 \n14.24 2.71(1.5) \n7.9 \n2.36(1.2) \n4.15 \n1.23(1.1) \n13.01 \n2.18(1.5) \n7.61 \n2.04(1.2) \n8.04 \n2.1(1.3) \n3.55 \n1.24(1.1) \n\nTiny Imagenet \nResNet 50 \n7.56 \n2.95(1.2) \n3.15 \n3.15(1) \n1.88 \n1.88(1) \n7.7 \n2.9(1.2) \n3.76 \n2.4(1.1) \n2.81 \n2.6(1.1) \n1.42 \n1.42(1) \n\n20 Newsgroups \nGlobal Pooling CNN 15.06 2.22(2.6) \n12.1 \n3.33(1.6) \n8.65 \n3.78(1.5) \n13.55 \n4.58(1.7) 12.13 2.49(1.8) \n12.19 \n2.37(2) \n6.92 \n2.35(1.5) \n\nSST Binary \nTree LSTM \n6.27 \n4.59(1.6) \n3.69 \n3.69(1) \n16.01 2.16(0.5) \n4.43 \n3.57(1.4) \n3.37 \n2.46(0.9) \n4.42 \n2.96(0.9) \n9.15 \n1.92(0.7) \n\n\n\nTable 6 :\n6AdaECE (%) computed for different focal loss approaches both pre and post temperature scaling (cross-validating T on ECE). Optimal temperature for each method is indicated in brackets.\n\n\n, we report |S99| as a percentage of the total number of test samples, along with the accuracy of the samples in S99 for ResNet-50 and ResNet-110 trained on CIFAR-10,Dataset \n\nModel \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 FLSc-532 FLSD-532 FLSD-53 \n\nCIFAR-10 \n\nResNet 50 \n4.93 \n4.98 \n5.25 \n5.66 \n5.63 \n5.24 \n4.98 \n\nResNet 110 \n4.78 \n5.06 \n5.08 \n6.13 \n5.71 \n5.19 \n5.42 \n\nWide ResNet 26-10 \n4.27 \n4.27 \n4.13 \n4.11 \n4.46 \n4.14 \n4.01 \n\nDenseNet 121 \n5.09 \n4.84 \n5.33 \n5.46 \n5.65 \n5.46 \n5.46 \n\nCIFAR-100 \n\nResNet 50 \n22.8 \n23.15 22.75 \n23.49 \n23.24 \n23.55 \n23.22 \n\nResNet 110 \n22.36 22.53 22.92 \n22.81 \n22.96 \n22.93 \n22.51 \n\nWide ResNet 26-10 \n19.61 20.01 19.69 \n20.13 \n20.13 \n19.71 \n20.11 \n\nDenseNet 121 \n23.82 23.19 23.25 \n23.69 \n23.72 \n22.41 \n22.67 \n\nTiny Imagenet \nResNet 50 \n50.06 \n47.7 \n49.69 \n50.49 \n49.83 \n48.95 \n49.06 \n\n20 Newsgroups \nGlobal Pooling CNN 26.13 28.23 29.26 \n29.16 \n28.16 \n27.26 \n27.98 \n\nSST Binary \nTree LSTM \n12.63 \n12.3 \n12.19 \n12.36 \n13.07 \n12.3 \n12.8 \n\n\n\nTable 7 :\n7Error (%) computed for different focal loss approaches.Dataset \nModel \nCross-Entropy \nBrier Loss \nMMCE \nLS-0.05 \nFLSD-53 (Ours) \n\nTop-1 \nTop-5 \nTop-1 Top-5 \nTop-1 Top-5 Top-1 Top-5 Top-1 \nTop-5 \n\nCIFAR-100 \n\nResNet 50 \n76.7 \n93.77 \n76.61 \n93.24 \n76.8 \n93.69 \n76.57 \n92.86 \n76.78 \n94.44 \n\nResNet 110 \n77.27 \n93.79 \n74.9 \n92.44 \n76.93 \n93.78 \n76.57 \n92.27 \n77.49 \n94.78 \n\nWide ResNet 26-10 \n79.3 \n93.96 \n79.41 \n94.56 \n79.27 \n94.11 \n78.81 \n93.18 \n79.89 \n95.2 \n\nDenseNet 121 \n75.48 \n91.33 \n76.25 \n92.76 \n76 \n91.96 \n75.95 \n89.51 \n77.33 \n94.49 \n\nTiny-ImageNet \nResNet 50 \n50.19 \n74.24 \n46.8 \n70.34 \n48.69 \n73.52 \n52.88 \n76.15 \n50.94 \n76.07 \n\n\n\nTable 8 :\n8Top-1 and Top-5 accuracies computed for different approaches.Dataset \nModel \nCross-Entropy \nBrier Loss MMCE LS-0.05 \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 FLSc-532 FLSD-532 FLSD-53 \n\nCIFAR-10 \n\nResNet 50 \n41.21 \n18.67 \n44.83 \n27.68 \n22.67 \n18.6 \n18.43 \n25.32 \n20.5 \n18.69 \n17.55 \n\nResNet 110 \n47.51 \n20.44 \n55.71 \n29.88 \n22.54 \n19.19 \n17.8 \n32.77 \n22.48 \n19.39 \n18.54 \n\nWide ResNet 26-10 \n26.75 \n15.85 \n28.47 \n21.71 \n17.66 \n14.96 \n15.2 \n18.5 \n15.57 \n14.78 \n14.55 \n\nDenseNet 121 \n42.93 \n19.11 \n52.14 \n28.7 \n22.5 \n17.56 \n18.02 \n27.41 \n19.5 \n20.14 \n18.39 \n\nCIFAR-100 \n\nResNet 50 \n153.67 \n99.63 \n125.28 \n121.02 \n105.61 \n92.82 \n87.52 \n100.09 \n92.66 \n94.1 \n88.03 \n\nResNet 110 \n179.21 \n110.72 \n180.54 \n133.11 \n114.18 \n96.74 \n90.9 \n112.46 \n95.85 \n97.97 \n89.92 \n\nWide ResNet 26-10 \n140.1 \n84.62 \n119.58 \n108.06 \n87.56 \n77.8 \n74.66 \n88.61 \n78.52 \n78.86 \n76.92 \n\nDenseNet 121 \n205.61 \n98.31 \n166.65 \n142.04 \n115.5 \n93.11 \n87.13 \n107.91 \n93.12 \n91.14 \n85.47 \n\nTiny Imagenet \nResNet 50 \n232.85 \n240.32 \n234.29 \n235.04 \n219.07 202.92 \n207.2 \n217.52 \n211.42 \n204.71 \n204.97 \n\n20 Newsgroups Global Pooling CNN \n176.57 \n130.41 \n158.7 \n90.95 \n140.4 \n115.97 109.62 \n128.75 \n123.72 \n124.03 \n109.17 \n\nSST Binary \nTree LSTM \n50.2 \n54.96 \n37.28 \n44.34 \n53.9 \n47.72 \n50.29 \n50.25 \n53.13 \n45.08 \n49.23 \n\n\n\nTable 10 :\n10NLL (%) computed for different approaches post temperature scaling (cross-validating T on ECE).Dataset \nModel \nCross-Entropy Brier Loss \nMMCE LS-0.05 \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 \nFLSc-532 FLSD-532 FLSD-53 \n\nCIFAR-10 \n\nResNet 50 \n38.65 \n31.54 \n60.06 \n35.61 \n31.75 \n25 \n21.83 \n30.54 \n23.57 \n25.45 \n14.89 \n\nResNet 110 \n44.25 \n25.18 \n67.52 \n45.72 \n73.35 25.92 \n25.15 \n34.18 \n30.38 \n30.8 \n18.95 \n\nWide ResNet 26-10 \n48.17 \n77.15 \n36.82 \n24.89 \n29.17 30.17 23.86 \n37.57 \n30.65 \n18.51 \n74.07 \n\nDenseNet 121 \n45.19 \n19.39 \n43.92 \n45.5 \n38.03 29.59 77.08 \n33.5 \n16.47 \n17.85 \n13.36 \n\nCIFAR-100 \n\nResNet 50 \n44.34 \n36.75 \n39.53 \n26.11 \n33.22 \n21.03 \n13.02 \n26.76 \n23.56 \n22.4 \n16.12 \n\nResNet 110 \n55.92 \n24.85 \n50.69 \n36.23 \n40.49 32.57 \n26 \n37.24 \n29.56 \n34.73 \n22.57 \n\nWide ResNet 26-10 \n49.36 \n14.68 \n40.13 \n23.79 \n27 \n15.14 \n9.96 \n27.81 \n17.59 \n13.64 \n10.17 \n\nDenseNet 121 \n56.28 \n15.47 \n49.97 \n43.59 \n35.45 \n21.7 \n11.61 \n38.68 \n18.91 \n21.34 \n9.68 \n\nTiny Imagenet \nResNet 50 \n30.83 \n8.41 \n26.48 \n25.48 \n20.7 \n8.47 \n6.11 \n16.03 \n9.28 \n8.97 \n3.76 \n\n20 Newsgroups Global Pooling CNN \n36.91 \n31.35 \n34.72 \n8.93 \n34.28 \n24.1 \n18.85 \n26.02 \n25.02 \n24.29 \n17.44 \n\nSST Binary \nTree LSTM \n71.08 \n92.62 \n68.43 \n39.39 \n95.48 86.21 22.32 \n76.28 \n86.93 \n80.85 \n73.7 \n\n\n\nTable 11 :\n11MCE (%) computed for different approaches pre temperature scaling.Dataset \nModel \nCross-Entropy Brier Loss \nMMCE LS-0.05 \nFL-1 \nFL-2 \nFL-3 \nFLSc-531 \nFLSc-532 FLSD-532 FLSD-53 \n\nCIFAR-10 \n\nResNet 50 \n20.6 \n22.46 \n23.6 \n40.51 \n25.86 \n28.17 \n15.76 \n22.05 \n23.85 \n24.76 \n26.37 \n\nResNet 110 \n29.98 \n22.73 \n31.87 \n45.72 \n29.74 23.82 \n37.61 \n26.25 \n25.94 \n11.59 \n17.35 \n\nWide ResNet 26-10 \n26.63 \n77.15 \n32.33 \n37.53 \n74.58 29.58 25.64 \n28.63 \n20.23 \n19.68 \n36.56 \n\nDenseNet 121 \n32.52 \n19.39 \n27.03 \n53.57 \n19.68 22.71 76.27 \n21.05 \n32.76 \n35.06 \n13.36 \n\nCIFAR-100 \n\nResNet 50 \n12.75 \n21.61 \n11.99 \n18.58 \n8.92 \n8.86 \n6.76 \n7.46 \n6.76 \n5.24 \n27.18 \n\nResNet 110 \n22.65 \n13.56 \n19.23 \n30.46 \n20.13 \n12 \n13.06 \n18.28 \n13.72 \n15.89 \n10.94 \n\nWide ResNet 26-10 \n14.18 \n13.42 \n16.5 \n23.79 \n10.28 18.32 \n9.96 \n13.18 \n11.01 \n12.5 \n9.73 \n\nDenseNet 121 \n21.63 \n8.55 \n13.02 \n29.95 \n10.49 11.63 \n6.17 \n6.21 \n6.48 \n9.41 \n5.68 \n\nTiny Imagenet \nResNet 50 \n13.33 \n12.82 \n12.52 \n17.2 \n6.5 \n8.47 \n6.11 \n5.97 \n7.01 \n5.73 \n3.76 \n\n20 Newsgroups Global Pooling CNN \n36.91 \n31.35 \n34.72 \n8.93 \n34.28 \n24.1 \n18.85 \n26.02 \n25.02 \n24.29 \n17.44 \n\nSST Binary \nTree LSTM \n88.48 \n91.86 \n32.92 \n35.72 \n87.77 86.21 74.52 \n54.27 \n88.85 \n82.42 \n76.71 \n\n\n\nTable 12 :\n12MCE (%) computed for different approaches post temperature scaling (cross-validating T on ECE).\n\nTable 13 :\n13Percentage of test samples predicted with confidence higher than 99% and the corresponding accuracy for Cross Entropy, MMCE and Focal loss computed both pre and post temperature scaling (represented in the table as pre T and post T respectively).\nWe note in passing that unlike cross-entropy loss, focal loss in its general form is not a proper loss function, as minimising it does not always lead to the predicted distributionp being equal to the target distribution q (see Appendix A for the relevant definition and a longer discussion). However, when q is a one-hot encoding (as in our case, and for most classification tasks), minimising focal loss does lead top being equal to q.\n. CIFAR-100[Krizhevsky, 2009]: This dataset has 60,000 colour images of size 32 \u00d7 32, divided equally into 100 classes. (Note that the images in this dataset are not the same images as in CIFAR-10.) We again use a train/validation/test split of 45,000/5,000/10,000 images.3. Tiny-ImageNet [Deng et al., 2009]: Tiny-ImageNet is a subset of ImageNet with 64 x 64 dimensional images, 200 classes and 500 images per class in the training set and 50 images per class in the validation set. The image dimensions of Tiny ImageNet are twice that of CIFAR-10/100 images.4. 20 Newsgroups[Lang, 1995]: This dataset contains 20,000 news articles, categorised evenly into 20 different newsgroups based on their content. It is a popular dataset for text classification. Whilst some of the newsgroups are very related (e.g. rec.motorcycles and rec.autos), others are quite unrelated (e.g. sci.space and misc.forsale). We use a train/validation/test split of 15,098/900/3,999 documents.\nDataset ModelCross-Entropy (Pre T)Cross-Entropy (Post T) MMCE (Pre T) MMCE (Post T) Focal Loss (Pre T) Focal Loss (Post T) |S99|%Accuracy |S99|% Accuracy |S99|% Accuracy |S99|% Accuracy |S99|% Accuracy |S99|% Accuracy\nVerification of forecasts expressed in terms of probability. W Glenn, Brier, Monthly weather review. 28Glenn W Brier. Verification of forecasts expressed in terms of probability. Monthly weather review, 1950. 2, 8\n\nDeep Learning and Its Applications in Biomedicine. Chensi Cao, Feng Liu, Hai Tan, Deshou Song, Wenjie Shu, Weizhong Li, Yiming Zhou, Xiaochen Bo, Zhi Xie, Proteomics & Bioinformatics. 161GenomicsChensi Cao, Feng Liu, Hai Tan, Deshou Song, Wenjie Shu, Weizhong Li, Yiming Zhou, Xiaochen Bo, and Zhi Xie. Deep Learning and Its Applications in Biomedicine. Genomics, Proteomics & Bioinformatics, 16(1):17-32, 2018. 1\n\nThe rise of deep learning in drug discovery. Hongming Chen, Ola Engkvist, Yinhai Wang, Marcus Olivecrona, Thomas Blaschke, Drug Discovery Today. 2336Hongming Chen, Ola Engkvist, Yinhai Wang, Marcus Olivecrona, and Thomas Blaschke. The rise of deep learning in drug discovery. Drug Discovery Today, 23(36):1241-1250, 2018. 1\n\nOn the lambertw function. M Robert, Corless, H Gaston, Gonnet, E G David, Hare, J David, Donald E Jeffrey, Knuth, Advances in Computational mathematics. 5116Robert M Corless, Gaston H Gonnet, David EG Hare, David J Jeffrey, and Donald E Knuth. On the lambertw function. Advances in Computational mathematics, 5(1):329-359, 1996. 7, 15, 16\n\nThe comparison and evaluation of forecasters. H Morris, Stephen E Degroot, Fienberg, Journal of the Royal Statistical Society: Series D (The Statistician). 8Morris H DeGroot and Stephen E Fienberg. The comparison and evaluation of forecasters. Journal of the Royal Statistical Society: Series D (The Statistician), 1983. 8\n\nImagenet: A large-scale hierarchical image database. Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, Li Fei-Fei, 2009 IEEE conference on computer vision and pattern recognition. Ieee817Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In 2009 IEEE conference on computer vision and pattern recognition, pages 248-255. Ieee, 2009. 8, 17\n\nOn Calibration of Modern Neural Networks. Chuan Guo, Geoff Pleiss, Yu Sun, Kilian Q Weinberger, ICML. 6Chuan Guo, Geoff Pleiss, Yu Sun, and Kilian Q Weinberger. On Calibration of Modern Neural Networks. In ICML, 2017. 1, 2, 4, 6\n\nDeep residual learning for image recognition. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, CVPR. Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recognition. In CVPR, 2016. 8\n\nDensely connected convolutional networks. Gao Huang, Zhuang Liu, Laurens Van Der Maaten, Kilian Q Weinberger, CVPR. Gao Huang, Zhuang Liu, Laurens Van Der Maaten, and Kilian Q Weinberger. Densely connected convolutional networks. In CVPR, 2017. 8\n\nDeep learning in agriculture: A survey. Andreas Kamilaris, Francesc X Prenafeta-Bold\u00fa, Computers and Electronics in Agriculture. 1471Andreas Kamilaris and Francesc X Prenafeta-Bold\u00fa. Deep learning in agriculture: A survey. Computers and Electronics in Agriculture, 147:70-90, 2018. 1\n\nDeep Learning Applications in Medical Image Analysis. Justin Ker, Lipo Wang, Jai Rao, Tchoyoson Lim, IEEE Access. 61Justin Ker, Lipo Wang, Jai Rao, and Tchoyoson Lim. Deep Learning Applications in Medical Image Analysis. IEEE Access, 6:9375-9389, 2018. 1\n\nLearning multiple layers of features from tiny images. Alex Krizhevsky, Citeseer817Technical reportAlex Krizhevsky. Learning multiple layers of features from tiny images. Technical report, Citeseer, 2009. 8, 17\n\nTrainable Calibration Measures For Neural Networks From Kernel Mean Embeddings. Aviral Kumar, Sunita Sarawagi, Ujjwal Jain, ICML. Aviral Kumar, Sunita Sarawagi, and Ujjwal Jain. Trainable Calibration Measures For Neural Networks From Kernel Mean Embeddings. In ICML, 2018. 2, 8, 19\n\nNewsWeeder: Learning to Filter Netnews. Ken Lang, Machine Learning Proceedings. Elsevier817Ken Lang. NewsWeeder: Learning to Filter Netnews. In Machine Learning Proceedings 1995, pages 331-339. Elsevier, 1995. 8, 17\n\nNetwork in network. Min Lin, Qiang Chen, Shuicheng Yan, ICLR. 817Min Lin, Qiang Chen, and Shuicheng Yan. Network in network. In ICLR, 2014. 8, 17\n\nKaiming He, and Piotr Doll\u00e1r. Focal Loss for Dense Object Detection. Tsung-Yi Lin, Priya Goyal, Ross Girshick, ICCV, 2017. 1. 25Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Doll\u00e1r. Focal Loss for Dense Object Detection. In ICCV, 2017. 1, 2, 5\n\nWhen does label smoothing help?. Rafael M\u00fcller, Simon Kornblith, Geoffrey E Hinton, Advances in Neural Information Processing Systems. 810Rafael M\u00fcller, Simon Kornblith, and Geoffrey E Hinton. When does label smoothing help? In Advances in Neural Information Processing Systems, pages 4696-4705, 2019. 2, 8, 10\n\nBinary Classifier Calibration using an Ensemble of Near Isotonic Regression Models. Gregory F Mahdi Pakdaman Naeini, Cooper, ICDM. Mahdi Pakdaman Naeini and Gregory F Cooper. Binary Classifier Calibration using an Ensemble of Near Isotonic Regression Models. In ICDM, 2016. 1\n\nObtaining Well Calibrated Probabilities Using Bayesian Binning. Mahdi Pakdaman Naeini, F Gregory, Milos Cooper, Hauskrecht, AAAI. 13Mahdi Pakdaman Naeini, Gregory F Cooper, and Milos Hauskrecht. Obtaining Well Calibrated Probabilities Using Bayesian Binning. In AAAI, 2015. 1, 3\n\nNg, Newsgroups. Ng. 20 Newsgroups. https://github.com/aviralkumar2907/MMCE/, 2018. Accessed: 2019-05-22. 17\n\nPredicting Good Probabilities With Supervised Learning. Alexandru Niculescu, - Mizil, Rich Caruana, ICML. Alexandru Niculescu-Mizil and Rich Caruana. Predicting Good Probabilities With Supervised Learning. In ICML, 2005. 3\n\nGlove: Global vectors for word representation. Jeffrey Pennington, Richard Socher, Christopher D Manning, Empirical Methods in Natural Language Processing (EMNLP). 18Jeffrey Pennington, Richard Socher, and Christopher D. Manning. Glove: Global vectors for word representation. In Empirical Methods in Natural Language Processing (EMNLP), 2014. 18\n\nRegularizing neural networks by penalizing confident output distributions. Gabriel Pereyra, George Tucker, Jan Chorowski, \u0141ukasz Kaiser, Geoffrey Hinton, arXiv:1701.06548arXiv preprintGabriel Pereyra, George Tucker, Jan Chorowski, \u0141ukasz Kaiser, and Geoffrey Hinton. Regularizing neural networks by penalizing confident output distributions. arXiv preprint arXiv:1701.06548, 2017. 5\n\nProbabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods. John Platt, Advances in Large Margin Classifiers. 103John Platt. Probabilistic Outputs for Support Vector Machines and Comparisons to Regularized Likelihood Methods. Advances in Large Margin Classifiers, 10(3):61-74, 1999. 1\n\nPytorch-Cifar, Train CIFAR10 with PyTorch. 4PyTorch-CIFAR. Train CIFAR10 with PyTorch, 2019. Available online at https://github.com/kuangliu/ pytorch-cifar (as of 22nd May 2019). 4\n\nCan you trust your model's uncertainty? evaluating predictive uncertainty under dataset shift. Jasper Snoek, Yaniv Ovadia, Emily Fertig, Balaji Lakshminarayanan, Sebastian Nowozin, Joshua Sculley, Jie Dillon, Zachary Ren, Nado, Advances in Neural Information Processing Systems. Jasper Snoek, Yaniv Ovadia, Emily Fertig, Balaji Lakshminarayanan, Sebastian Nowozin, D Sculley, Joshua Dillon, Jie Ren, and Zachary Nado. Can you trust your model's uncertainty? evaluating predictive uncertainty under dataset shift. In Advances in Neural Information Processing Systems, pages 13969-13980, 2019. 8\n\nRecursive deep models for semantic compositionality over a sentiment treebank. Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, D Christopher, Andrew Manning, Christopher Ng, Potts, Empirical Methods in Natural Language Processing. 17Richard Socher, Alex Perelygin, Jean Wu, Jason Chuang, Christopher D Manning, Andrew Ng, and Christopher Potts. Recursive deep models for semantic compositionality over a sentiment treebank. In Empirical Methods in Natural Language Processing (EMNLP), 2013. 8, 17\n\nImproved semantic representations from tree-structured long short-term memory networks. Kai Sheng Tai, Richard Socher, Christopher D Manning, Association for Computational Linguistics (ACL). 818Kai Sheng Tai, Richard Socher, and Christopher D. Manning. Improved semantic representations from tree-structured long short-term memory networks. In Association for Computational Linguistics (ACL), 2015. 8, 18\n\n. Treelstm, Treelstm, TreeLSTM. TreeLSTM. https://github.com/ttpro1995/TreeLSTMSentiment/, 2015. Accessed: 2019-05- 22. 18\n\nAttention is all you need. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, Illia Polosukhin, Advances in neural information processing systems. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In Advances in neural information processing systems, pages 5998-6008, 2017. 10\n\nDeep learning for smart manufacturing: Methods and applications. Jinjiang Wang, Yulin Ma, Laibin Zhang, X Robert, Dazhong Gao, Wu, JMSY. 481Jinjiang Wang, Yulin Ma, Laibin Zhang, Robert X Gao, and Dazhong Wu. Deep learning for smart manufacturing: Methods and applications. JMSY, 48:144-156, 2018. 1\n\nObtaining calibrated probability estimates from decision trees and naive Bayesian classifiers. Bianca Zadrozny, Charles Elkan, ICML. Bianca Zadrozny and Charles Elkan. Obtaining calibrated probability estimates from decision trees and naive Bayesian classifiers. In ICML, 2001. 1\n\nTransforming Classifier Scoes into Accurate Multiclass Probability Estimates. Bianca Zadrozny, Charles Elkan, SIGKDD. Bianca Zadrozny and Charles Elkan. Transforming Classifier Scoes into Accurate Multiclass Probability Estimates. In SIGKDD, 2002. 1\n\nWide residual networks. Sergey Zagoruyko, Nikos Komodakis, Proceedings of the British Machine Vision Conference (BMVC). the British Machine Vision Conference (BMVC)Sergey Zagoruyko and Nikos Komodakis. Wide residual networks. In Proceedings of the British Machine Vision Conference (BMVC), 2016. 8\n", "annotations": {"author": "[{\"end\":104,\"start\":53},{\"end\":144,\"start\":105},{\"end\":217,\"start\":145},{\"end\":247,\"start\":218},{\"end\":300,\"start\":248},{\"end\":354,\"start\":301}]", "publisher": null, "author_last_name": "[{\"end\":67,\"start\":60},{\"end\":120,\"start\":112},{\"end\":159,\"start\":153},{\"end\":233,\"start\":225},{\"end\":263,\"start\":259},{\"end\":317,\"start\":310}]", "author_first_name": "[{\"end\":59,\"start\":53},{\"end\":111,\"start\":105},{\"end\":152,\"start\":145},{\"end\":224,\"start\":218},{\"end\":254,\"start\":248},{\"end\":258,\"start\":255},{\"end\":307,\"start\":301},{\"end\":309,\"start\":308}]", "author_affiliation": "[{\"end\":80,\"start\":69},{\"end\":103,\"start\":82},{\"end\":143,\"start\":122},{\"end\":182,\"start\":161},{\"end\":216,\"start\":184},{\"end\":246,\"start\":235},{\"end\":276,\"start\":265},{\"end\":299,\"start\":278},{\"end\":330,\"start\":319},{\"end\":353,\"start\":332}]", "title": "[{\"end\":50,\"start\":1},{\"end\":404,\"start\":355}]", "venue": null, "abstract": "[{\"end\":1459,\"start\":406}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b1\"},\"end\":1652,\"start\":1635},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":1671,\"start\":1652},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":1708,\"start\":1671},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":1726,\"start\":1708},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2350,\"start\":2332},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":2595,\"start\":2582},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":2641,\"start\":2615},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":2689,\"start\":2663},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":2758,\"start\":2726},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":2771,\"start\":2758},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2945,\"start\":2916},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3634,\"start\":3614},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3977,\"start\":3959},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4012,\"start\":3991},{\"end\":4414,\"start\":4396},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5483,\"start\":5465},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5904,\"start\":5886},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6735,\"start\":6722},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8354,\"start\":8333},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":8616,\"start\":8581},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":9942,\"start\":9924},{\"end\":10286,\"start\":10271},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":12407,\"start\":12390},{\"end\":14370,\"start\":14352},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":15462,\"start\":15440},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":18572,\"start\":18555},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":23554,\"start\":23532},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":25457,\"start\":25439},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":25495,\"start\":25476},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":25563,\"start\":25551},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":25627,\"start\":25606},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":25792,\"start\":25775},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":25843,\"start\":25812},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":25881,\"start\":25861},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":25997,\"start\":25979},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":26027,\"start\":26015},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":26062,\"start\":26044},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":26445,\"start\":26425},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":26612,\"start\":26591},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":27179,\"start\":27166},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":27417,\"start\":27405},{\"end\":27452,\"start\":27417},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":31066,\"start\":31046},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":31128,\"start\":31106},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":31371,\"start\":31349},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":41069,\"start\":41047},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":41749,\"start\":41727},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":44047,\"start\":44025},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":45045,\"start\":45027},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":45224,\"start\":45203},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":46748,\"start\":46730},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":46921,\"start\":46896},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":47109,\"start\":47091},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":47395,\"start\":47370},{\"end\":50625,\"start\":50600},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":51421,\"start\":51402},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":57389,\"start\":57368},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":71654,\"start\":71636},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":72214,\"start\":72202}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":55224,\"start\":55088},{\"attributes\":{\"id\":\"fig_1\"},\"end\":55364,\"start\":55225},{\"attributes\":{\"id\":\"fig_2\"},\"end\":55603,\"start\":55365},{\"attributes\":{\"id\":\"fig_3\"},\"end\":55650,\"start\":55604},{\"attributes\":{\"id\":\"fig_4\"},\"end\":55705,\"start\":55651},{\"attributes\":{\"id\":\"fig_5\"},\"end\":55898,\"start\":55706},{\"attributes\":{\"id\":\"fig_6\"},\"end\":56170,\"start\":55899},{\"attributes\":{\"id\":\"fig_7\"},\"end\":56840,\"start\":56171},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":57838,\"start\":56841},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":59480,\"start\":57839},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":60964,\"start\":59481},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":61339,\"start\":60965},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":63350,\"start\":61340},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":65229,\"start\":63351},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":65426,\"start\":65230},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":66393,\"start\":65427},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":67042,\"start\":66394},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":68323,\"start\":67043},{\"attributes\":{\"id\":\"tab_15\",\"type\":\"table\"},\"end\":69587,\"start\":68324},{\"attributes\":{\"id\":\"tab_16\",\"type\":\"table\"},\"end\":70815,\"start\":69588},{\"attributes\":{\"id\":\"tab_17\",\"type\":\"table\"},\"end\":70925,\"start\":70816},{\"attributes\":{\"id\":\"tab_18\",\"type\":\"table\"},\"end\":71186,\"start\":70926}]", "paragraph": "[{\"end\":2351,\"start\":1475},{\"end\":3599,\"start\":2353},{\"end\":4186,\"start\":3601},{\"end\":5095,\"start\":4188},{\"end\":5804,\"start\":5097},{\"end\":5851,\"start\":5806},{\"end\":7129,\"start\":5853},{\"end\":7824,\"start\":7153},{\"end\":8243,\"start\":7859},{\"end\":8450,\"start\":8279},{\"end\":9190,\"start\":8490},{\"end\":9646,\"start\":9192},{\"end\":10153,\"start\":9744},{\"end\":11230,\"start\":10155},{\"end\":11642,\"start\":11232},{\"end\":12460,\"start\":11644},{\"end\":12891,\"start\":12462},{\"end\":13499,\"start\":12893},{\"end\":13769,\"start\":13501},{\"end\":14602,\"start\":13812},{\"end\":15246,\"start\":14681},{\"end\":15946,\"start\":15273},{\"end\":17507,\"start\":15948},{\"end\":18106,\"start\":17509},{\"end\":19594,\"start\":18108},{\"end\":19667,\"start\":19596},{\"end\":19851,\"start\":19758},{\"end\":21856,\"start\":19919},{\"end\":22744,\"start\":21858},{\"end\":23337,\"start\":22746},{\"end\":23657,\"start\":23451},{\"end\":23764,\"start\":23659},{\"end\":24491,\"start\":23766},{\"end\":25192,\"start\":24493},{\"end\":26239,\"start\":25244},{\"end\":26382,\"start\":26241},{\"end\":26570,\"start\":26384},{\"end\":26748,\"start\":26572},{\"end\":27149,\"start\":26788},{\"end\":27523,\"start\":27151},{\"end\":27807,\"start\":27525},{\"end\":28170,\"start\":27809},{\"end\":28754,\"start\":28172},{\"end\":29089,\"start\":28756},{\"end\":29857,\"start\":29091},{\"end\":30744,\"start\":29894},{\"end\":31717,\"start\":30787},{\"end\":32414,\"start\":31719},{\"end\":33254,\"start\":32416},{\"end\":34517,\"start\":33269},{\"end\":35008,\"start\":34538},{\"end\":36185,\"start\":35021},{\"end\":36779,\"start\":36257},{\"end\":36900,\"start\":36827},{\"end\":37242,\"start\":37141},{\"end\":38638,\"start\":37282},{\"end\":39363,\"start\":38709},{\"end\":39469,\"start\":39396},{\"end\":40656,\"start\":39494},{\"end\":41125,\"start\":40700},{\"end\":41384,\"start\":41127},{\"end\":41852,\"start\":41646},{\"end\":41983,\"start\":41854},{\"end\":42187,\"start\":42030},{\"end\":42512,\"start\":42263},{\"end\":42746,\"start\":42587},{\"end\":42866,\"start\":42795},{\"end\":43529,\"start\":42906},{\"end\":44482,\"start\":43886},{\"end\":44629,\"start\":44577},{\"end\":44877,\"start\":44678},{\"end\":45013,\"start\":44930},{\"end\":45744,\"start\":45015},{\"end\":46659,\"start\":45782},{\"end\":47038,\"start\":46661},{\"end\":47574,\"start\":47040},{\"end\":48112,\"start\":47576},{\"end\":48236,\"start\":48137},{\"end\":48572,\"start\":48238},{\"end\":49236,\"start\":48574},{\"end\":49472,\"start\":49238},{\"end\":49786,\"start\":49474},{\"end\":50452,\"start\":49788},{\"end\":50824,\"start\":50454},{\"end\":51254,\"start\":50826},{\"end\":51646,\"start\":51299},{\"end\":52398,\"start\":51648},{\"end\":53678,\"start\":52400},{\"end\":55087,\"start\":53710}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7858,\"start\":7825},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8278,\"start\":8244},{\"attributes\":{\"id\":\"formula_2\"},\"end\":8489,\"start\":8451},{\"attributes\":{\"id\":\"formula_3\"},\"end\":9713,\"start\":9647},{\"attributes\":{\"id\":\"formula_4\"},\"end\":14680,\"start\":14603},{\"attributes\":{\"id\":\"formula_5\"},\"end\":15272,\"start\":15247},{\"attributes\":{\"id\":\"formula_6\"},\"end\":19757,\"start\":19668},{\"attributes\":{\"id\":\"formula_7\"},\"end\":19918,\"start\":19852},{\"attributes\":{\"id\":\"formula_8\"},\"end\":23450,\"start\":23338},{\"attributes\":{\"id\":\"formula_9\"},\"end\":26787,\"start\":26749},{\"attributes\":{\"id\":\"formula_10\"},\"end\":36826,\"start\":36780},{\"attributes\":{\"id\":\"formula_11\"},\"end\":37140,\"start\":36901},{\"attributes\":{\"id\":\"formula_12\"},\"end\":37281,\"start\":37243},{\"attributes\":{\"id\":\"formula_13\"},\"end\":38708,\"start\":38639},{\"attributes\":{\"id\":\"formula_14\"},\"end\":39395,\"start\":39364},{\"attributes\":{\"id\":\"formula_15\"},\"end\":41568,\"start\":41385},{\"attributes\":{\"id\":\"formula_16\"},\"end\":41645,\"start\":41568},{\"attributes\":{\"id\":\"formula_17\"},\"end\":42029,\"start\":41984},{\"attributes\":{\"id\":\"formula_18\"},\"end\":42262,\"start\":42188},{\"attributes\":{\"id\":\"formula_19\"},\"end\":42586,\"start\":42513},{\"attributes\":{\"id\":\"formula_20\"},\"end\":42794,\"start\":42747},{\"attributes\":{\"id\":\"formula_21\"},\"end\":42905,\"start\":42867},{\"attributes\":{\"id\":\"formula_22\"},\"end\":43885,\"start\":43530},{\"attributes\":{\"id\":\"formula_23\"},\"end\":44576,\"start\":44483},{\"attributes\":{\"id\":\"formula_24\"},\"end\":44677,\"start\":44630}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":28893,\"start\":28879},{\"end\":28901,\"start\":28894},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":29981,\"start\":29965},{\"end\":32079,\"start\":32072},{\"end\":32250,\"start\":32243},{\"end\":32440,\"start\":32433},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":49484,\"start\":49477},{\"attributes\":{\"ref_id\":\"tab_12\"},\"end\":49692,\"start\":49685},{\"attributes\":{\"ref_id\":\"tab_9\"},\"end\":49785,\"start\":49766},{\"attributes\":{\"ref_id\":\"tab_13\"},\"end\":50049,\"start\":50042},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":51570,\"start\":51562},{\"end\":51578,\"start\":51571}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1473,\"start\":1461},{\"attributes\":{\"n\":\"2\"},\"end\":7151,\"start\":7132},{\"attributes\":{\"n\":\"3\"},\"end\":9742,\"start\":9715},{\"attributes\":{\"n\":\"4\"},\"end\":13810,\"start\":13772},{\"attributes\":{\"n\":\"5\"},\"end\":25206,\"start\":25195},{\"attributes\":{\"n\":\"5.1\"},\"end\":25242,\"start\":25209},{\"end\":29892,\"start\":29860},{\"attributes\":{\"n\":\"5.2\"},\"end\":30785,\"start\":30747},{\"attributes\":{\"n\":\"6\"},\"end\":33267,\"start\":33257},{\"attributes\":{\"n\":\"7\"},\"end\":34536,\"start\":34520},{\"end\":35019,\"start\":35011},{\"end\":36255,\"start\":36188},{\"end\":39492,\"start\":39472},{\"end\":40687,\"start\":40659},{\"end\":40698,\"start\":40690},{\"end\":44928,\"start\":44880},{\"attributes\":{\"n\":\"5.\"},\"end\":45780,\"start\":45747},{\"end\":48135,\"start\":48115},{\"end\":51297,\"start\":51257},{\"end\":53708,\"start\":53681},{\"end\":55099,\"start\":55089},{\"end\":55236,\"start\":55226},{\"end\":55376,\"start\":55366},{\"end\":55615,\"start\":55605},{\"end\":55662,\"start\":55652},{\"end\":55717,\"start\":55707},{\"end\":55901,\"start\":55900},{\"end\":56193,\"start\":56172},{\"end\":59491,\"start\":59482},{\"end\":60975,\"start\":60966},{\"end\":61350,\"start\":61341},{\"end\":63361,\"start\":63352},{\"end\":65240,\"start\":65231},{\"end\":66404,\"start\":66395},{\"end\":67053,\"start\":67044},{\"end\":68335,\"start\":68325},{\"end\":69599,\"start\":69589},{\"end\":70827,\"start\":70817},{\"end\":70937,\"start\":70927}]", "table": "[{\"end\":59480,\"start\":58170},{\"end\":60964,\"start\":59663},{\"end\":61339,\"start\":61155},{\"end\":63350,\"start\":61352},{\"end\":65229,\"start\":63543},{\"end\":66393,\"start\":65595},{\"end\":67042,\"start\":66461},{\"end\":68323,\"start\":67116},{\"end\":69587,\"start\":68433},{\"end\":70815,\"start\":69668}]", "figure_caption": "[{\"end\":55224,\"start\":55101},{\"end\":55364,\"start\":55238},{\"end\":55603,\"start\":55378},{\"end\":55650,\"start\":55617},{\"end\":55705,\"start\":55664},{\"end\":55898,\"start\":55719},{\"end\":56170,\"start\":55902},{\"end\":56840,\"start\":56197},{\"end\":57838,\"start\":56843},{\"end\":58170,\"start\":57841},{\"end\":59663,\"start\":59493},{\"end\":61155,\"start\":60977},{\"end\":63543,\"start\":63363},{\"end\":65426,\"start\":65242},{\"end\":65595,\"start\":65429},{\"end\":66461,\"start\":66406},{\"end\":67116,\"start\":67055},{\"end\":68433,\"start\":68338},{\"end\":69668,\"start\":69602},{\"end\":70925,\"start\":70830},{\"end\":71186,\"start\":70940}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8709,\"start\":8701},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11113,\"start\":11105},{\"end\":11547,\"start\":11539},{\"end\":13322,\"start\":13314},{\"end\":16218,\"start\":16210},{\"end\":16528,\"start\":16520},{\"end\":17070,\"start\":17062},{\"end\":17310,\"start\":17302},{\"end\":17897,\"start\":17885},{\"end\":18808,\"start\":18800},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":20170,\"start\":20162},{\"end\":21036,\"start\":21028},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":21383,\"start\":21371},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":21886,\"start\":21878},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":22427,\"start\":22419},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":24865,\"start\":24857},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":32413,\"start\":32405},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":32673,\"start\":32665},{\"end\":36074,\"start\":36066},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":37991,\"start\":37983},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":38101,\"start\":38093},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":39896,\"start\":39888},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40057,\"start\":40044},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":40452,\"start\":40444},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":44747,\"start\":44736},{\"end\":52411,\"start\":52403},{\"end\":52993,\"start\":52985},{\"end\":53763,\"start\":53755},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":54092,\"start\":54083},{\"end\":54409,\"start\":54401},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":54707,\"start\":54698}]", "bib_author_first_name": "[{\"end\":72876,\"start\":72875},{\"end\":73086,\"start\":73080},{\"end\":73096,\"start\":73092},{\"end\":73105,\"start\":73102},{\"end\":73117,\"start\":73111},{\"end\":73130,\"start\":73124},{\"end\":73144,\"start\":73136},{\"end\":73155,\"start\":73149},{\"end\":73170,\"start\":73162},{\"end\":73178,\"start\":73175},{\"end\":73497,\"start\":73489},{\"end\":73507,\"start\":73504},{\"end\":73524,\"start\":73518},{\"end\":73537,\"start\":73531},{\"end\":73556,\"start\":73550},{\"end\":73796,\"start\":73795},{\"end\":73815,\"start\":73814},{\"end\":73833,\"start\":73832},{\"end\":73835,\"start\":73834},{\"end\":73850,\"start\":73849},{\"end\":73864,\"start\":73858},{\"end\":73866,\"start\":73865},{\"end\":74156,\"start\":74155},{\"end\":74172,\"start\":74165},{\"end\":74174,\"start\":74173},{\"end\":74489,\"start\":74486},{\"end\":74499,\"start\":74496},{\"end\":74513,\"start\":74506},{\"end\":74528,\"start\":74522},{\"end\":74536,\"start\":74533},{\"end\":74543,\"start\":74541},{\"end\":74898,\"start\":74893},{\"end\":74909,\"start\":74904},{\"end\":74920,\"start\":74918},{\"end\":74934,\"start\":74926},{\"end\":75134,\"start\":75127},{\"end\":75146,\"start\":75139},{\"end\":75162,\"start\":75154},{\"end\":75172,\"start\":75168},{\"end\":75348,\"start\":75345},{\"end\":75362,\"start\":75356},{\"end\":75375,\"start\":75368},{\"end\":75400,\"start\":75392},{\"end\":75598,\"start\":75591},{\"end\":75896,\"start\":75890},{\"end\":75906,\"start\":75902},{\"end\":75916,\"start\":75913},{\"end\":75931,\"start\":75922},{\"end\":76151,\"start\":76147},{\"end\":76390,\"start\":76384},{\"end\":76404,\"start\":76398},{\"end\":76421,\"start\":76415},{\"end\":76630,\"start\":76627},{\"end\":76827,\"start\":76824},{\"end\":76838,\"start\":76833},{\"end\":76854,\"start\":76845},{\"end\":77028,\"start\":77020},{\"end\":77039,\"start\":77034},{\"end\":77051,\"start\":77047},{\"end\":77253,\"start\":77247},{\"end\":77267,\"start\":77262},{\"end\":77287,\"start\":77279},{\"end\":77289,\"start\":77288},{\"end\":77619,\"start\":77610},{\"end\":77891,\"start\":77890},{\"end\":77906,\"start\":77901},{\"end\":78257,\"start\":78248},{\"end\":78270,\"start\":78269},{\"end\":78282,\"start\":78278},{\"end\":78470,\"start\":78463},{\"end\":78490,\"start\":78483},{\"end\":78510,\"start\":78499},{\"end\":78512,\"start\":78511},{\"end\":78846,\"start\":78839},{\"end\":78862,\"start\":78856},{\"end\":78874,\"start\":78871},{\"end\":78892,\"start\":78886},{\"end\":78909,\"start\":78901},{\"end\":79253,\"start\":79249},{\"end\":79758,\"start\":79752},{\"end\":79771,\"start\":79766},{\"end\":79785,\"start\":79780},{\"end\":79800,\"start\":79794},{\"end\":79828,\"start\":79819},{\"end\":79844,\"start\":79838},{\"end\":79857,\"start\":79854},{\"end\":79873,\"start\":79866},{\"end\":80338,\"start\":80331},{\"end\":80351,\"start\":80347},{\"end\":80367,\"start\":80363},{\"end\":80377,\"start\":80372},{\"end\":80387,\"start\":80386},{\"end\":80407,\"start\":80401},{\"end\":80428,\"start\":80417},{\"end\":80854,\"start\":80845},{\"end\":80867,\"start\":80860},{\"end\":80887,\"start\":80876},{\"end\":80889,\"start\":80888},{\"end\":81320,\"start\":81314},{\"end\":81334,\"start\":81330},{\"end\":81348,\"start\":81344},{\"end\":81362,\"start\":81357},{\"end\":81379,\"start\":81374},{\"end\":81392,\"start\":81387},{\"end\":81394,\"start\":81393},{\"end\":81408,\"start\":81402},{\"end\":81422,\"start\":81417},{\"end\":81792,\"start\":81784},{\"end\":81804,\"start\":81799},{\"end\":81815,\"start\":81809},{\"end\":81824,\"start\":81823},{\"end\":81840,\"start\":81833},{\"end\":82121,\"start\":82115},{\"end\":82139,\"start\":82132},{\"end\":82385,\"start\":82379},{\"end\":82403,\"start\":82396},{\"end\":82582,\"start\":82576},{\"end\":82599,\"start\":82594}]", "bib_author_last_name": "[{\"end\":72882,\"start\":72877},{\"end\":72889,\"start\":72884},{\"end\":73090,\"start\":73087},{\"end\":73100,\"start\":73097},{\"end\":73109,\"start\":73106},{\"end\":73122,\"start\":73118},{\"end\":73134,\"start\":73131},{\"end\":73147,\"start\":73145},{\"end\":73160,\"start\":73156},{\"end\":73173,\"start\":73171},{\"end\":73182,\"start\":73179},{\"end\":73502,\"start\":73498},{\"end\":73516,\"start\":73508},{\"end\":73529,\"start\":73525},{\"end\":73548,\"start\":73538},{\"end\":73565,\"start\":73557},{\"end\":73803,\"start\":73797},{\"end\":73812,\"start\":73805},{\"end\":73822,\"start\":73816},{\"end\":73830,\"start\":73824},{\"end\":73841,\"start\":73836},{\"end\":73847,\"start\":73843},{\"end\":73856,\"start\":73851},{\"end\":73874,\"start\":73867},{\"end\":73881,\"start\":73876},{\"end\":74163,\"start\":74157},{\"end\":74182,\"start\":74175},{\"end\":74192,\"start\":74184},{\"end\":74494,\"start\":74490},{\"end\":74504,\"start\":74500},{\"end\":74520,\"start\":74514},{\"end\":74531,\"start\":74529},{\"end\":74539,\"start\":74537},{\"end\":74551,\"start\":74544},{\"end\":74902,\"start\":74899},{\"end\":74916,\"start\":74910},{\"end\":74924,\"start\":74921},{\"end\":74945,\"start\":74935},{\"end\":75137,\"start\":75135},{\"end\":75152,\"start\":75147},{\"end\":75166,\"start\":75163},{\"end\":75176,\"start\":75173},{\"end\":75354,\"start\":75349},{\"end\":75366,\"start\":75363},{\"end\":75390,\"start\":75376},{\"end\":75411,\"start\":75401},{\"end\":75608,\"start\":75599},{\"end\":75636,\"start\":75610},{\"end\":75900,\"start\":75897},{\"end\":75911,\"start\":75907},{\"end\":75920,\"start\":75917},{\"end\":75935,\"start\":75932},{\"end\":76162,\"start\":76152},{\"end\":76396,\"start\":76391},{\"end\":76413,\"start\":76405},{\"end\":76426,\"start\":76422},{\"end\":76635,\"start\":76631},{\"end\":76831,\"start\":76828},{\"end\":76843,\"start\":76839},{\"end\":76858,\"start\":76855},{\"end\":77032,\"start\":77029},{\"end\":77045,\"start\":77040},{\"end\":77060,\"start\":77052},{\"end\":77260,\"start\":77254},{\"end\":77277,\"start\":77268},{\"end\":77296,\"start\":77290},{\"end\":77641,\"start\":77620},{\"end\":77649,\"start\":77643},{\"end\":77888,\"start\":77867},{\"end\":77899,\"start\":77892},{\"end\":77913,\"start\":77907},{\"end\":77925,\"start\":77915},{\"end\":78085,\"start\":78083},{\"end\":78267,\"start\":78258},{\"end\":78276,\"start\":78271},{\"end\":78290,\"start\":78283},{\"end\":78481,\"start\":78471},{\"end\":78497,\"start\":78491},{\"end\":78520,\"start\":78513},{\"end\":78854,\"start\":78847},{\"end\":78869,\"start\":78863},{\"end\":78884,\"start\":78875},{\"end\":78899,\"start\":78893},{\"end\":78916,\"start\":78910},{\"end\":79259,\"start\":79254},{\"end\":79488,\"start\":79475},{\"end\":79764,\"start\":79759},{\"end\":79778,\"start\":79772},{\"end\":79792,\"start\":79786},{\"end\":79817,\"start\":79801},{\"end\":79836,\"start\":79829},{\"end\":79852,\"start\":79845},{\"end\":79864,\"start\":79858},{\"end\":79877,\"start\":79874},{\"end\":79883,\"start\":79879},{\"end\":80345,\"start\":80339},{\"end\":80361,\"start\":80352},{\"end\":80370,\"start\":80368},{\"end\":80384,\"start\":80378},{\"end\":80399,\"start\":80388},{\"end\":80415,\"start\":80408},{\"end\":80431,\"start\":80429},{\"end\":80438,\"start\":80433},{\"end\":80858,\"start\":80855},{\"end\":80874,\"start\":80868},{\"end\":80897,\"start\":80890},{\"end\":81173,\"start\":81165},{\"end\":81183,\"start\":81175},{\"end\":81328,\"start\":81321},{\"end\":81342,\"start\":81335},{\"end\":81355,\"start\":81349},{\"end\":81372,\"start\":81363},{\"end\":81385,\"start\":81380},{\"end\":81400,\"start\":81395},{\"end\":81415,\"start\":81409},{\"end\":81433,\"start\":81423},{\"end\":81797,\"start\":81793},{\"end\":81807,\"start\":81805},{\"end\":81821,\"start\":81816},{\"end\":81831,\"start\":81825},{\"end\":81844,\"start\":81841},{\"end\":81848,\"start\":81846},{\"end\":82130,\"start\":82122},{\"end\":82145,\"start\":82140},{\"end\":82394,\"start\":82386},{\"end\":82409,\"start\":82404},{\"end\":82592,\"start\":82583},{\"end\":82609,\"start\":82600}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":122906757},\"end\":73027,\"start\":72814},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":3797027},\"end\":73442,\"start\":73029},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":46792472},\"end\":73767,\"start\":73444},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":29028411},\"end\":74107,\"start\":73769},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":109884250},\"end\":74431,\"start\":74109},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":57246310},\"end\":74849,\"start\":74433},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":28671436},\"end\":75079,\"start\":74851},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":206594692},\"end\":75301,\"start\":75081},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":9433631},\"end\":75549,\"start\":75303},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":206907269},\"end\":75834,\"start\":75551},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":206491372},\"end\":76090,\"start\":75836},{\"attributes\":{\"id\":\"b11\"},\"end\":76302,\"start\":76092},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":49314079},\"end\":76585,\"start\":76304},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":1921714},\"end\":76802,\"start\":76587},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":16636683},\"end\":76949,\"start\":76804},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":206771220},\"end\":77212,\"start\":76951},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":174802983},\"end\":77524,\"start\":77214},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":636054},\"end\":77801,\"start\":77526},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":6292807},\"end\":78081,\"start\":77803},{\"attributes\":{\"id\":\"b19\"},\"end\":78190,\"start\":78083},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":207158152},\"end\":78414,\"start\":78192},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":1957433},\"end\":78762,\"start\":78416},{\"attributes\":{\"doi\":\"arXiv:1701.06548\",\"id\":\"b22\"},\"end\":79146,\"start\":78764},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":56563878},\"end\":79473,\"start\":79148},{\"attributes\":{\"id\":\"b24\"},\"end\":79655,\"start\":79475},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":174803437},\"end\":80250,\"start\":79657},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":990233},\"end\":80755,\"start\":80252},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":3033526},\"end\":81161,\"start\":80757},{\"attributes\":{\"id\":\"b28\"},\"end\":81285,\"start\":81163},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":13756489},\"end\":81717,\"start\":81287},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":117248575},\"end\":82018,\"start\":81719},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":9594071},\"end\":82299,\"start\":82020},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":3349576},\"end\":82550,\"start\":82301},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":15276198},\"end\":82849,\"start\":82552}]", "bib_title": "[{\"end\":72873,\"start\":72814},{\"end\":73078,\"start\":73029},{\"end\":73487,\"start\":73444},{\"end\":73793,\"start\":73769},{\"end\":74153,\"start\":74109},{\"end\":74484,\"start\":74433},{\"end\":74891,\"start\":74851},{\"end\":75125,\"start\":75081},{\"end\":75343,\"start\":75303},{\"end\":75589,\"start\":75551},{\"end\":75888,\"start\":75836},{\"end\":76382,\"start\":76304},{\"end\":76625,\"start\":76587},{\"end\":76822,\"start\":76804},{\"end\":77018,\"start\":76951},{\"end\":77245,\"start\":77214},{\"end\":77608,\"start\":77526},{\"end\":77865,\"start\":77803},{\"end\":78246,\"start\":78192},{\"end\":78461,\"start\":78416},{\"end\":79247,\"start\":79148},{\"end\":79750,\"start\":79657},{\"end\":80329,\"start\":80252},{\"end\":80843,\"start\":80757},{\"end\":81312,\"start\":81287},{\"end\":81782,\"start\":81719},{\"end\":82113,\"start\":82020},{\"end\":82377,\"start\":82301},{\"end\":82574,\"start\":82552}]", "bib_author": "[{\"end\":72884,\"start\":72875},{\"end\":72891,\"start\":72884},{\"end\":73092,\"start\":73080},{\"end\":73102,\"start\":73092},{\"end\":73111,\"start\":73102},{\"end\":73124,\"start\":73111},{\"end\":73136,\"start\":73124},{\"end\":73149,\"start\":73136},{\"end\":73162,\"start\":73149},{\"end\":73175,\"start\":73162},{\"end\":73184,\"start\":73175},{\"end\":73504,\"start\":73489},{\"end\":73518,\"start\":73504},{\"end\":73531,\"start\":73518},{\"end\":73550,\"start\":73531},{\"end\":73567,\"start\":73550},{\"end\":73805,\"start\":73795},{\"end\":73814,\"start\":73805},{\"end\":73824,\"start\":73814},{\"end\":73832,\"start\":73824},{\"end\":73843,\"start\":73832},{\"end\":73849,\"start\":73843},{\"end\":73858,\"start\":73849},{\"end\":73876,\"start\":73858},{\"end\":73883,\"start\":73876},{\"end\":74165,\"start\":74155},{\"end\":74184,\"start\":74165},{\"end\":74194,\"start\":74184},{\"end\":74496,\"start\":74486},{\"end\":74506,\"start\":74496},{\"end\":74522,\"start\":74506},{\"end\":74533,\"start\":74522},{\"end\":74541,\"start\":74533},{\"end\":74553,\"start\":74541},{\"end\":74904,\"start\":74893},{\"end\":74918,\"start\":74904},{\"end\":74926,\"start\":74918},{\"end\":74947,\"start\":74926},{\"end\":75139,\"start\":75127},{\"end\":75154,\"start\":75139},{\"end\":75168,\"start\":75154},{\"end\":75178,\"start\":75168},{\"end\":75356,\"start\":75345},{\"end\":75368,\"start\":75356},{\"end\":75392,\"start\":75368},{\"end\":75413,\"start\":75392},{\"end\":75610,\"start\":75591},{\"end\":75638,\"start\":75610},{\"end\":75902,\"start\":75890},{\"end\":75913,\"start\":75902},{\"end\":75922,\"start\":75913},{\"end\":75937,\"start\":75922},{\"end\":76164,\"start\":76147},{\"end\":76398,\"start\":76384},{\"end\":76415,\"start\":76398},{\"end\":76428,\"start\":76415},{\"end\":76637,\"start\":76627},{\"end\":76833,\"start\":76824},{\"end\":76845,\"start\":76833},{\"end\":76860,\"start\":76845},{\"end\":77034,\"start\":77020},{\"end\":77047,\"start\":77034},{\"end\":77062,\"start\":77047},{\"end\":77262,\"start\":77247},{\"end\":77279,\"start\":77262},{\"end\":77298,\"start\":77279},{\"end\":77643,\"start\":77610},{\"end\":77651,\"start\":77643},{\"end\":77890,\"start\":77867},{\"end\":77901,\"start\":77890},{\"end\":77915,\"start\":77901},{\"end\":77927,\"start\":77915},{\"end\":78087,\"start\":78083},{\"end\":78269,\"start\":78248},{\"end\":78278,\"start\":78269},{\"end\":78292,\"start\":78278},{\"end\":78483,\"start\":78463},{\"end\":78499,\"start\":78483},{\"end\":78522,\"start\":78499},{\"end\":78856,\"start\":78839},{\"end\":78871,\"start\":78856},{\"end\":78886,\"start\":78871},{\"end\":78901,\"start\":78886},{\"end\":78918,\"start\":78901},{\"end\":79261,\"start\":79249},{\"end\":79490,\"start\":79475},{\"end\":79766,\"start\":79752},{\"end\":79780,\"start\":79766},{\"end\":79794,\"start\":79780},{\"end\":79819,\"start\":79794},{\"end\":79838,\"start\":79819},{\"end\":79854,\"start\":79838},{\"end\":79866,\"start\":79854},{\"end\":79879,\"start\":79866},{\"end\":79885,\"start\":79879},{\"end\":80347,\"start\":80331},{\"end\":80363,\"start\":80347},{\"end\":80372,\"start\":80363},{\"end\":80386,\"start\":80372},{\"end\":80401,\"start\":80386},{\"end\":80417,\"start\":80401},{\"end\":80433,\"start\":80417},{\"end\":80440,\"start\":80433},{\"end\":80860,\"start\":80845},{\"end\":80876,\"start\":80860},{\"end\":80899,\"start\":80876},{\"end\":81175,\"start\":81165},{\"end\":81185,\"start\":81175},{\"end\":81330,\"start\":81314},{\"end\":81344,\"start\":81330},{\"end\":81357,\"start\":81344},{\"end\":81374,\"start\":81357},{\"end\":81387,\"start\":81374},{\"end\":81402,\"start\":81387},{\"end\":81417,\"start\":81402},{\"end\":81435,\"start\":81417},{\"end\":81799,\"start\":81784},{\"end\":81809,\"start\":81799},{\"end\":81823,\"start\":81809},{\"end\":81833,\"start\":81823},{\"end\":81846,\"start\":81833},{\"end\":81850,\"start\":81846},{\"end\":82132,\"start\":82115},{\"end\":82147,\"start\":82132},{\"end\":82396,\"start\":82379},{\"end\":82411,\"start\":82396},{\"end\":82594,\"start\":82576},{\"end\":82611,\"start\":82594}]", "bib_venue": "[{\"end\":72913,\"start\":72891},{\"end\":73211,\"start\":73184},{\"end\":73587,\"start\":73567},{\"end\":73920,\"start\":73883},{\"end\":74263,\"start\":74194},{\"end\":74616,\"start\":74553},{\"end\":74951,\"start\":74947},{\"end\":75182,\"start\":75178},{\"end\":75417,\"start\":75413},{\"end\":75678,\"start\":75638},{\"end\":75948,\"start\":75937},{\"end\":76145,\"start\":76092},{\"end\":76432,\"start\":76428},{\"end\":76665,\"start\":76637},{\"end\":76864,\"start\":76860},{\"end\":77075,\"start\":77062},{\"end\":77347,\"start\":77298},{\"end\":77655,\"start\":77651},{\"end\":77931,\"start\":77927},{\"end\":78097,\"start\":78087},{\"end\":78296,\"start\":78292},{\"end\":78578,\"start\":78522},{\"end\":78837,\"start\":78764},{\"end\":79297,\"start\":79261},{\"end\":79516,\"start\":79490},{\"end\":79934,\"start\":79885},{\"end\":80488,\"start\":80440},{\"end\":80946,\"start\":80899},{\"end\":81484,\"start\":81435},{\"end\":81854,\"start\":81850},{\"end\":82151,\"start\":82147},{\"end\":82417,\"start\":82411},{\"end\":82670,\"start\":82611},{\"end\":82716,\"start\":82672}]"}}}, "year": 2023, "month": 12, "day": 17}