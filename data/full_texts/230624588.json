{"id": 230624588, "updated": "2023-11-11 04:00:55.504", "metadata": {"title": "GroupTracer: Automatic Attacker TTP Profile Extraction and Group Cluster in Internet of Things", "authors": "[{\"first\":\"Yixin\",\"last\":\"Wu\",\"middle\":[]},{\"first\":\"Cheng\",\"last\":\"Huang\",\"middle\":[]},{\"first\":\"Xing\",\"last\":\"Zhang\",\"middle\":[]},{\"first\":\"Hongyi\",\"last\":\"Zhou\",\"middle\":[]}]", "venue": "Security and Communication Networks", "journal": "Security and Communication Networks", "publication_date": {"year": 2020, "month": null, "day": null}, "abstract": ",", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "3113176930", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/scn/WuHZZ20", "doi": "10.1155/2020/8842539"}}, "content": {"source": {"pdf_hash": "ef0f6904490b54b7541a2a4057fafe80fb83fb69", "pdf_src": "Anansi", "pdf_uri": "[\"https://downloads.hindawi.com/journals/scn/2020/8842539.pdf\"]", "oa_url_match": true, "oa_info": {"license": "CCBY", "open_access_url": "https://downloads.hindawi.com/journals/scn/2020/8842539.pdf", "status": "GOLD"}}, "grobid": {"id": "28e377f8753ce723c43747c857c689c93c4f47bb", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/ef0f6904490b54b7541a2a4057fafe80fb83fb69.txt", "contents": "\nGroupTracer: Automatic Attacker TTP Profile Extraction and Group Cluster in Internet of Things\n\n\nYixin Wu \nCollege of Cybersecurity\nSichuan University\n610065ChengduChina\n\nCheng Huang \nCollege of Cybersecurity\nSichuan University\n610065ChengduChina\n\nXing Zhang \nNSFOCUS\n100089BeijingChina\n\nHongyi Zhou \nNSFOCUS\n100089BeijingChina\n\nGroupTracer: Automatic Attacker TTP Profile Extraction and Group Cluster in Internet of Things\n10.1155/2020/8842539Received 3 September 2020; Revised 3 November 2020; Accepted 19 November 2020; Published 4 December 2020Research Article Correspondence should be addressed to Cheng Huang; Academic Editor: Ting Chen\nAs Advanced Persistent reat (APT) becomes increasingly frequent around the world, security experts are starting to look at how to observe, predict, and mitigate the damage from APT attacks. In the meantime, the Internet of things devices are also risky and heavily exposed to the Internet, making them more easily used by hacker organizations to launch APT attacks. An excellent attacker can take down millions of Internet of things devices in a short time. Once the IoT botnet is built, attackers can use it to launch complex attacks which could damage Internet infrastructure and cause network disconnection. is paper proposes GroupTracer, a framework for observing and predicting the Internet of things attacks. GroupTracer is designed to automatically extract the TTP profiles (i.e., tactics, techniques, and procedures) that can describe the behavior of attackers through their tactics, techniques, and processes and dig out the potential attacker groups behind complex attacks. Firstly, it captures attacks by IoT honeypots and extracts relevant fields from logs. en, attack behaviors are automatically mapped to the ATT&CK framework to achieve automatic TTP profiles extraction. After that, GroupTracer presents four feature groups, including TTP profiles, Time, IP, and URL features, a total of 18 features, mines potential attack groups through hierarchical clustering algorithm, and compares the clustering results with two baseline algorithms. As the ground truth labels are unknown, we apply three internal validation indexes to evaluate the cluster quantity. Experimental results showed that the proposed framework has achieved an excellent performance in exploiting potential groups as the Calinski-Harabasz index reaches 3416.93. Eventually, attack trees are generated for each cluster where nodes indicate attack commands and edges represent command sequences. ese attack trees could help better understand each attack group's actions and techniques.\n\nIntroduction\n\ne Global Research and Analysis Team (GReAT) at Kaspersky points out that the Advanced Persistent reat (APT) activity has become increasingly complex and destructive [1] since these APT groups launch targeted attacks on critical infrastructure and attempt to compromise central networks. Meanwhile, the Internet of things has become the no. 1 security threat to personal privacy, corporate information security, and even critical infrastructure since IoTdevices are inherently risky and easy to exploit while being heavily exposed to the Internet. What is worse, attackers can utilize open-source tools to quickly assemble malware that can scan, penetrate, and control IoT devices. Excellent hackers can take down millions of IoT devices in a short time. Once IoT botnets are formed, attackers can launch an APT attack to hazard the Internet infrastructure and cause network disconnections (e.g., Dyn cyberattack [2] and VPNFilter event [3]). e emerging challenge is how to observe and predict attacks on IoT devices by individuals or even attacker groups since the number of attacks on IoT devices, which are perfect tools for APT attacks, has risen dramatically.\n\n\nDescribing Individual Behavior.\n\nWhile behavior detection methods for attacks are mostly based on Indicators of Compromise (IOCs) extracted from rule-based methods or traditional blacklists, the information conveyed by such IOCs is not enough to describe the abundant and varied network security environment due to the following reasons:\n\n(i) IOC is unstable and is easily changed by attackers.\n\nFor example, if adversaries are leveraging an anonymous proxy service like Tor, they may change IPs quite frequently with little effort and never be noticed. (ii) IOC cannot express how the attacker interacts with the victim system, and the process of the attack cannot be represented. (iii) Redundancy occurs when IOC is used to express an attack. In other words, more IOCs do not necessarily lead to a better description.\n\nBianco proposed the Pyramid of Pain [4], in which each level of the pyramid represents different types of attack indicators leveraged to detect the activities of the adversary, and the most valuable attack indicator is attacker TTPs. TTP profile [5] describes the flow that adversaries go through to accomplish their mission, from initial access to impact and at every step in between, which is abundant to support a comprehensive analysis of the aggressive behaviors of individuals or attack groups. Meanwhile, the defense is shifting from vulnerability-centric to threat-centric, and flexible and efficient security architecture can only be constructed with a sufficient understanding of the threat of the critical assets, which depends on an overall comprehension of the attack tactics, techniques, and behavior patterns (i.e., TTPs). However, at this stage, there is no mature method to normalize the description of attacks on IoT devices and map them to the analysis model. A method for automatic TTP profile extraction of IoT device attacks is expected.\n\n\nClustering Attackers into Groups.\n\nWith the rapid growth of APT activities, the evolution of a threat landscape moves from a single hacker to well-organized attack actor groups (e.g., Darkhotel [6] and Turla [7]). How to find and depict the behavior of an attack actor group among an ocean of attacks becomes a challenge. Behavioral analysis in sandboxes [8,9] and binary analysis [10,11] seem like pleasant ways, which can match malicious samples used by attackers to known or novel malicious families and capture their behaviors to observe the similarities between these attackers. However, malicious family and attack group have a many-to-many relationship, and we cannot just rely on the analysis of malicious samples to find the group behind attacks. Considering the excellent performance of the data-driven approach in the field of network security [12][13][14], we try to tackle the challenges from a data-driven perspective.\n\nGiven the challenges presented above, this paper aims to develop mapping knowledge bases from attacker payloads to the ATT&CK framework to extract the TTP profile and generate behavior fingerprint for attackers to discover groups behind active campaigns. e ultimate purpose is to observe the behavior of attack actor groups and predict attacks in the Internet of things.\n\n\nContributions.\n\nree critical contributions of the paper are as follows:\n\n(i) Comprehensive Description of Attacker Behavior.\n\nGroupTracer leverages four feature groups (TTP profile, Time, IP, and URL) that are derived from log data to characterize different actions of attackers, which addresses the emerging challenge of the observation and prediction of attacks on IoT devices by individuals. e TTP profile depicts the technique, tactic, and procedure of the attacker. e Time feature group provides statistical characteristics based on attack duration, number of attacks, and time zone of the attacker. e IP and URL feature groups both involve the type of IP/URL and the malicious index, while the latter also analyzes the download file.\n\n(ii) Automatic TTP Profile Extraction. Considering that the data source is honeypot log data, which collects payloads utilized by attackers, we construct the 1st and 2nd knowledge bases, which store the mappings between commands and TTPs. By using these knowledge bases, GroupTracer maps commands derived from payloads to the ATT&CK framework to extract the TTP profile, which bridges the gap between cyber threat intelligence (CTI) and the attacker. (iii) Group Cluster and Attack Tree Generation.\n\nGroupTracer proposes four feature groups and hierarchical clustering algorithm to build attack group cluster model which aims at finding out the potential groups behind complex attacks. In order to better understand each attack group's behaviors, GroupTracer also introduces attack tree construction method where nodes describe attack commands and edges represent command sequences. e evaluation result shows that GroupTracer can achieve excellent performance as the Calinski-Harabasz index reaches 3416.93. e remainder of this paper is organized as follows: Section 2 explains the related work about the fundamental techniques used in our framework. Section 3 presents the data collection, flow of feature processing, application of clustering algorithm, and attack tree creation in Group-Tracer. e entire experiment and evaluation process is elaborated in Section 4. Finally, the conclusion and future work are discussed in Section 5.\n\n\nRelated Work\n\n\nApplication of IoT Honeypot.\n\nTo specialize in cyberattacks and defend against them, tools for proactive defense are presented. For instance, honeypot that can capture attacks, document intrusion information about instruments and behaviors of hackers, and prevent attacks outbounding the compromised system [15] has been widely leveraged in cybersecurity. Due to the vulnerable and destructive nature of IoT devices [16][17][18], the number of IoT honeypots based on different protocols is rapidly increasing. Currently, some IoT honeypots have already existed [19]. e work in [20] utilizes IoTPOT, a novel honeypot that stimulates the Telnet-enabled IoT devices, which handles commands sent by attack actors, analyzes malicious families on different CPU architectures, and provides an in-depth analysis of ongoing attack behavior. However, IoTPOT focuses on observing the characteristics of malicious families (e.g., spread tendency and ultimate goal) and relationships between these families. It does not employ existing data to analyze the behavior of the aggressors behind attacks and associations between them in detail, which is the center of cyber threat intelligence. A honeypot that emulates the ZigBee gateway and aims at assessing ZigBee attack intelligence and IoT cyberattack behavior is proposed in the text [21]. Although this paper analyzes the commands in the honeypot data at great length and classifies them into six categories of attacks, it does not mine the TTP of these attacks, which helps analysts in threat modeling. Heo and Shin [22] analyze the connection-level log data to study Telnet service scanning to provide solid evidence for the existence of IoT botnet, whereas the dataset contains only connection metadata, so there is no way to analyze the payload in packages, which is a critical evidence for attacking, thus not entirely convincing.\n\nIn conclusion, most published methodologies have focused on a single service such as Telnet and ZigBee and analyzed features of malicious families. GroupTracer is more widely used for protocols where command execution vulnerabilities occur and depicts the characteristics of attack behaviors. Besides, most of the previous studies have not analyzed payloads at the TTP level, and some even have not analyzed payloads at all. GroupTracer extracts attack techniques, tactics, and procedures (TTPs) from payloads and utilizes payloads to build attack trees for potential attack groups to more specifically demonstrate their attack behaviors.\n\n\nCyber\n\nreat Intelligence and TTP Extraction. Gartner defines cyber threat intelligence (CTI) as evidencebased knowledge, which can be utilized to inform decisions concerning the subject's response to menace or compromise [23]. With the rapid evolution of the cyber threat landscape, the demand for high quality and fast speed of CTI exchange that allows organizations to respond to emerging threats at the tactical level is becoming increasingly urgent. TTP describes the techniques, tactics, and attack patterns used by the adversary and can be presented in structured text formats that meet the high demand. Husari et al. [24] develop TTPDrill that can achieve the automatic and context-aware analysis of CTI to generate TTPs precisely. eir work bridges the gap between unstructured cyber threat intelligence and structured techniques, tactics, and procedures. Nevertheless, their data source is the cyber threat intelligence, which means that only after CTI is produced, can TTPDrill construct a complete attack pattern. Our work aims at decreasing the time-to-defend even more.\n\n\nGroup Cluster.\n\nClustering and correlating have been studied extensively and are employed in a multitude of datadriven domains, including security and privacy areas [25]. In a similar direction to this paper, the work in [26] applies an unsupervised method to characterize and classify securityrelated anomalies and attacks that exist in honeypots without learning phase, labeled traffic, or attack signature database. Cho et al. [27] compare the similarity of the distributed domain to predict the same group, which provides the possibility of response to future attacks. Azevedo et al. correlate IOCs from different OSINT feeds and cluster them to obtain enriched IOCs. is work allows the identification of attacks that was impossible by analyzing IOCs individually. One work that inspires us comes from Ghi\u00ebtte et al. [28]. ey dissect the SSH protocol to fingerprint tools based on cipher suites and SSH version strings, employing key exchange algorithms and SSH banners to cluster similar tool usage into collaborating individuals and even campaigns. However, as [4] said, adversaries can employ or create another tool that has the same capability to evade detection.\n\nBy comparison, GroupTracer employs honeypot log data, in which timestamps, IP addresses, and payloads sent by attackers are usually recorded, and considers four different perspectives (e.g., TTPs and Time) to generate feature groups. For example, it generates TTP profiles by mapping payloads to ATT&CK framework based on command characteristics. en, it clusters similar adversaries' behaviors into groups based on these features. Our work draws on the strengths of the mentioned studies and improves their weaknesses.\n\n\nFramework\n\ne ultimate goal of this paper is to automatically extract TTP profiles and cluster attack groups in the Internet of things. Figure 1 overviews the flow of GroupTracer. Firstly, it captures attacks, generates raw data, and extracts features from specific fields (e.g., timestamp, payload, and timezone). We deploy numerous honeypots on the Internet to capture attacks. Secondly, it enriches these features. As for generating the TTP profile feature group, it cuts payload into commands, maps these commands to the ATT&CK framework, and then generates Abstract Syntax Tree of the commands for a second mapping to techniques and tactics. After generating all feature groups, encoding and TF-IDF algorithm are utilized to vectorize these string-type features.\n\nirdly, it combines all feature vectors and leverages the hierarchical clustering algorithm to cluster these attackers into groups. Finally, attack trees for each group, where nodes are commands and edges are command sequences, are created from their payloads to characterize attack profiles.\n\n\nRaw Data Collection.\n\ne log format of open-source honeypot contains general fields and particular fields. ere are 12 general fields standard in all honeypots. src ip is the source IP, and src port is the source port number. sensor ip and dst port represent the IP and destination port number Security and Communication Networks of the honeypot, respectively. timestamp represents the time when the event occurred. protocol represents the underlying protocol used by the honeypot. geoip describes the current geographic location of the IP and related information like time zone, which is usually obtained by the external API GeoLite [29]. pot version is added by the honeypot developer to indicate the current version of the honeypot. fingerprint is mostly a hash value generated from a string of src ip, timestamp, and a specific honeypot-specific field. log type depicts the type of event recorded in the log, and honeypot type describes the type of honeypot. container id represents the ID of the docker container. e particular field is determined according to the specific protocol used by the IoT honeypot. GroupTracer mainly leverages three general fields, namely, src_ip field, timestamp field, and geoip field in honeypot log data, as these three fields can provide information to generate the Time and IP feature groups. Given that the payload may appear in different fields, GroupTracer will accurately locate the corresponding field through string matching. To ensure the universality of the framework and the integrity of the payload, the contents of all fields that have payloads are spliced.\n\n\nFeature Extraction.\n\ne following subsections detail how GroupTracer converts these fields into four feature groups, namely, the TTP profiles, Time, IP, and URL. src_ip field is considered to be the primary key in all fields because the probability of an IP being used by multiple groups is minimal, even if the individual IP is assigned dynamically.\n\n\nTTP Profile Feature Group Generation.\n\ne TTP profile consists of tactics and techniques used by attack actors. Tactic depicts the common strategy of a threat action (e.g., execution and defense evasion). ATT&CK framework provides 12 categories for corresponding techniques. GroupTracer extracted these names as tactics in TTP profiles. Technique describes attack techniques implemented by attack actors under a specific tactic. For example, defense evasion is a tactic that can be performed by a technique named clear command history.\n\nGroupTracer produces the TTP profile primarily from a command execution perspective. ere is a crucial issue to be compromised. On the one hand, the classification of commands should be as accurate as possible. On the other hand, command parameter values sometimes affect the classification needlessly. e following two commands illustrate both cases. Both of these commands can be classified as technique file deletion. (i) can be further subdivided into technique clear command history, whereas (ii) can only be classified as technique file deletion. For (i), the whole statement is a valid classification basis, while for (ii), only rm can serve as a valid classification basis, and all other parts are redundant.\n(i) rm -rf /.bash_history (ii) rm -rf xb.sh xb.sh xb2.sh xb1.sh\nAiming at solving the above dilemma, the quadratic mapping method is proposed. Figure 2 illustrates the process of quadratic mapping. ere are two knowledge bases in GroupTracer. One saves the mapping of the entire command statement to tactics and techniques for the first mapping, and the other stores the mapping of the abstract command structure to tactics and techniques for the second mapping. In the first mapping, GroupTracer splits the original payload into several commands and maps these commands to the 1st knowledge base to attain some of the TTP profiles. As shown in Figure 3, GroupTracer generates the Abstract Syntax Tree [30] for each payload to obtain command nodes and extract abstract command structures. en, these abstract structures are put as input into the 2nd knowledge base to acquire the  remaining TTP profiles. Table 1 only shows some mapping samples due to space limitation. After obtaining the TTP profiles, the GroupTracer encodes the corresponding string into a numeric feature vector. e final data structure can be described as follows:\nTTP \ufffd [techniques, tactics],(1)\nwhere there are variable-length techniques and tactics.\n\n\nIP and URL Feature Groups\n\nGeneration. e features related to IP and URL feature groups are shown in Table 2, the first three of which are common to both feature groups, and the last one is unique to the URL feature group. e country can be obtained through Ipdb [31]. VirusTotal [32] provides multiple antivirus scanning engines (e.g., Kaspersky URL advisor, Malware Domain Blocklist [33], and Dr.Web Link Scanner [34]) used for URL scanning. GroupTracer first utilizes VirusTotal to scan for unknown IPs/URLs and then regards the number of antivirus engines that return malicious results as the malicious index for those IPs/URLs. According to the purpose, there are seven types of IP addresses shown in Table 3.\n\nis framework uses the RTBAsia API [35] to get the classification of IP types. Download is an optional option for the URL feature group, depending on the type of vulnerability in the honeypot, because in some cases the download is to install a backdoor for subsequent manipulation, while in others it is to provide some tools for privilege escalation under certain circumstances. When attacking different honeypots, it is likely that hackers in a group download file for different purposes, which will greatly affect our performance in clustering only by downloading file names. After attaining these feature groups, the GroupTracer encodes the corresponding string into a numeric feature vector.\n\n\nTime Feature Group Generation.\n\nAs the attacker groups tend to use the tool framework to attack the specified target, there is a corresponding regularity in the IP time zone, attack duration, number of attacks, etc. Algorithm 1 describes the generation of the basic time-series features for a given T ip , which represents the set of timestamp for a specific IP. T is a collection of T used as input to generate the start time, the attack duration, and the number of attacks in each duration. In addition, GroupTracer reuses this code to select the final threshold. When selecting threshold, we nest a for loop in the outermost layer, and the threshold value increases by 1. Meanwhile, we count the number of time interval in each T ip and assign their sum to the variable num interval. If num interval has not changed compared to the previous loop, we jump out of the cycle and output the final threshold. e threshold, which indicates how small the time interval between two attacks is before they are considered to belong to the same attack period, is utilized to divide the attack duration. Partitioning each attack period and characterizing the behavior (e.g., duration and number of attacks) of each attack steadily can be the key to the reliability of time analysis, since the members of a group may be similar in these respects. To select a number as the initial threshold, GroupTracer maps all the time interval values into the following 5 time buckets: <1 s, [1 s, 1 min], (1 min, 1 h], (1 h, 1 day], >1 day. e results show that 99.91% of time gaps fall into the first four buckets, so the initial threshold is set to 1 h. en, GroupTracer employs Algorithm 1 to accomplish the threshold selection procedure. It first counts the total number of attack durations for each IP and then adjusts the threshold slowly until the number of attack periods for most IPs is almost unchanged. If multiple thresholds have the same result, choose the smaller one first, as the threshold always tends to choose the smaller one.\n\nAfter we get the final threshold and basic time-series features, we extract the statistical features from the basic ones, namely, the start time, the attack duration, and the number of attacks in each attack duration. GroupTracer draws a new time series for the relevant features of each IP, taking the start time as the independent variable and the attack duration and number of access as the dependent variables. Several features that proved to be significant timeseries characteristics in an early stage shown in Table 4 are applied. After generating the time series, GroupTracer will automatically calculate these selected features to produce the final feature vectors.\n\nBy encoding the timezone field appearing in the data, GroupTracer finally turns the string-type features into integer vectors. Eventually, statistical features from timestamp and encoded time zone constitute the Time feature group.\n\n\nGroup Clustering Algorithm.\n\nAs the hacker groups tend to utilize customized frameworks, features like time gap and TTP profiles have specific patterns. erefore, attacker behavior naturally forms clusters. is paper is aimed at identifying such natural clusters to dig out potential groups behind active campaigns.\n\nWe employ the well-known hierarchical clustering algorithm [36] as it captures the hierarchical structure between clusters, which helps security experts to observe the relationship between clusters and subclusters. Moreover, hierarchical clustering is suitable for arbitrary shape clustering and is insensitive to the input order of samples.  Figure 4 depicts a bottom-up approach to perform hierarchical clustering. Each sample represents a unique cluster in the beginning, and then we choose Euclidean distance to calculate the similarity between each cluster and merge these clusters successively. e threshold applies when forming the final flat clusters. e Euclidean distance is computed as follows [37]:\nd(x, y) \ufffd \ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd x 1 \u2212 y 1 2 + x 2 \u2212 y 2 2 + \u00b7 \u00b7 \u00b7 + x n \u2212 y n 2 \ufffd \ufffd\ufffd \ufffd n i\ufffd1 x i \u2212 y i 2 ,(2)\nwhere x \ufffd (x 1 , x 2 , . . . , x n ) and y \ufffd (y 1 , y 2 , . . . , y n ) are two points in Euclidean n-space.\n\n\nAttack Tree Creation Method.\n\nAfter digging out potential groups, GroupTracer gathers all payloads and generates attack trees for each cluster to embody and better understand group behaviors. Algorithm 2 is to process all payloads from a cluster. P T represents all payloads collected from a given cluster T.\n\nIn the directed graph, nodes are command names and edges represent the command sequence between two commands. e out-degree of each command determines the size of each node. If a command exists only at the end of the payload, its size can also depend on the in-degree. e width of each edge is decided by the weight, which describes the frequency of occurrence of the command sequence. For instance, we have some payloads from a cluster, whose command sequences shown in Table 5 are obtained after command segmentation and abstraction. GroupTracer runs Algorithm 2 to generate the attack tree, as illustrated in Figure 5. Line 3-line 13 generate a list that stores two-step command sequences. For example, it turns cd chmod ./t into [cd chmod, chmod ./t]. Line 14-line 16 counts the number of occurrences of all two-step command sequences.\n\n\nExperiment and Metrics\n\n\nDataset.\n\nIn this section, we first describe the datasets obtained from two kinds of IoT honeypots: UPnP-SOAP multiport honeypot and the Netis router backdoor honeypot. e time of data collection, the number of IPs, and the number of log entries are shown in Table 6.\n\n\nUPnP-SOAP Multiport Honeypot.\n\nIn the UPnP service, SOAP protocol assists in defining device types and other related information [38]. erefore, there are a huge number of IoT devices that provide SOAP services, some of which do not require authentication. Honeypot simulates the behavior of the 11 ports most frequently scanned (e.g., 52881, 5500, and 2048) and the relevant SOAP service path and returns the corresponding information after being scanned. Six nodes are deployed on the Internet, averaging about 700 log entries per day. e dataset contains 153,413 log entries from 2,652 IPs over 196 days in 2019 (Table 6). Each log entry is identified by src ip, timestamp, timezone, body, and query string. e src ip in our datasets is globally unique.\n\n\nNetis Router Backdoor Honeypot.\n\ne Netis router listens on port 53413 (UDP) by default. After sending a specific string to it, the attacker can gain root login and then execute the corresponding command to perform a series of malicious behaviors. e honeypot has seven nodes deployed on the Internet, averaging about 300 log entries per day. Our Netis dataset contains 241,593 log entries from only 373 IPs over 279 days in 2019 (Table 6). Unlike UPnP-SOAP honeypot, the log entry in Netis is characterized by src ip, timestamp, timezone, and data.\n\nGiven that both types of honeypots are simulated command execution vulnerabilities, we can leverage commands executed by attackers to discover their technology and tactics. erefore, GroupTracer can be utilized to analyze the data of these two honeypots at the same time. Our datasets contain ten types of techniques that can be grouped into six tactics. ese tactics are as follows [39]:   \n1) threshold \ufffd t 0 (2) for all T ip \u2208 T do (3) sort By Time(T ip ) (4) start \ufffd end \ufffd T ip [0] (5) for i \u2208 [0, len(T ip ) \u2212 1] do (6) delta \ufffd T ip [i + 1] \u2212 T ip [i] (7)\nif delta \u2264 threshold then (8) end \ufffd T ip [i + 1] (9) cnt \ufffd cnt + 1 (10) else (11) unit \ufffd start\u2032: start,\u2032duration\u2032: start \u2212 end,\u2032cnt\u2032: cnt (12) time interval.append(unit) (13) start\n\ufffd T ip [i + 1](14)\nend \ufffd start (15) cnt \ufffd 1 (16) end if (17) end for (18) if start \u2260 end then (19) unit \ufffd start\u2032: start,\u2032duration\u2032: start \u2212 end,\u2032cnt\u2032: cnt (20) time interval.append(unit) (21) end if (22) time intervals.append(time interval) (23) end for ALGORITHM 1: Basic time-series feature generation for a given T ip .  (iv) Execution: running malicious code. e purpose of adversary-controlled code might be communicating with C&C servers or stealing data. (v) Impact: expanding the impact of the intrusion on the victim system.\n\n(vi) Collection: gathering information related to the adversary's objectives. Table 7 shows techniques corresponding to each tactic and commands mapped to these techniques in our datasets.\n\n\nClustering Performance Evaluation.\n\nAfter clustering, we need measurement indicators to evaluate the effect. In general, the measurement for the quality of a clustering algorithm can be categorized into two kinds of criteria [40]: internal validation and external validation. External criteria are based on the previous knowledge about the data and require that ground truth labels are known. However, the labels of samples in this paper are not available. us, the internal validation is more suitable for our evaluation. More specifically, three internal indexes are utilized in this evaluation. ese indexes measure if clusters are well compact and separated.\n\n(i) Calinski-Harabasz (CH) [41]: e index CH is defined as follows:\n\nRequire: Payloads P T Ensure: Attack tree for T (1) edges \ufffd [] (2) weighted edges \ufffd {} (3) for all payload \u2208 P T do (4) payload.ast() (5) tmp \ufffd payload.split() (6) if len(tmp) > 2 then (7) for i \u2208 [0: len(tmp) \u2212 1] do (8) edges.append(tmp[i: i + 2]) (9) end for (10) else (11) edges.append(tmp) (12) end if (13) end for (14) for all edge \u2208 edges do (15) weighted edges[edge] \ufffd weighted edges.get(edge, 0) + 1 (16) end for (17) G \ufffd Digraph() (18) G.add edges(weighted edges) (19) DrawAttackTree(G, width \ufffd weighted edge, node size \ufffd G.degree()) ALGORITHM 2: Attack tree generation for a given cluster T.  Figure 5: e attack tree for a given cluster. Security and Communication Networks 9\nCH \ufffd trace S B trace S W \u00b7 n p \u2212 1 n p \u2212 k ,(3)\nwhere S B denotes the between-cluster scatter matrix and S W is the within-cluster scatter matrix. n p is the number of samples, and k represents the number of   classes.\n\ne larger value of CH indicates a better clustering solution.\n\n(ii) Silhouette Coefficient [42]: e Silhouette Coefficient s is composed of two scores: a means distance between a sample and the rest in the same cluster. b is the distance between a point and all other samples included in the next nearest class. s for all samples is given as the mean of the Silhouette Coefficient for each point. As for single sample i, s can be computed by\ns(i) \ufffd b(i) \u2212 a(i) max(a(i), b(i)) .(4)\ne Silhouette Coefficient index ranges from \u22121 to 1; \u22121 represents a weak clustering effect, and 1 means a good classification effect. 0 indicates the overlap of clusters. A higher s indicates a better clustering quality. (iii) Davies-Bouldin (DB) [43]: DB can be measured as follows:\nDB \ufffd 1 k k i\ufffd1 max i\u2260j d X i + d X j d k i , k j \u23a7 \u23a8 \u23a9 \u23ab \u23ac \u23ad ,(5)\nk denotes the number of clusters. i, j represent different cluster labels (j \u2260 i). d(X i ) and d(X j ) are the distance from all samples in cluster i and j to their respective cluster centroids. d(k i , k j ) is the distance between these centroids. A smaller DB value means a better clustering result.\n\n\nExperiment Design.\n\nIn the following, we evaluate GroupTracer by examining the cluster quality, i.e., how well clusters capture similar attack actors. e primary evaluation is for the group clustering of GroupTracer. We compare the evaluation results of GroupTracer based on the three indicators we mentioned above with the performance of group clustering based on the other two baseline algorithms to conclude that GroupTracer has excellent performance.\n\n\nComparison Baselines.\n\nMeanshift [44] and K-means [45] clustering algorithms are chosen to be the baselines.\n\nMeanshift is a centroid-based algorithm that requires an iterative step. It continuously calculates the expected moving distance of the center point and moves until the final condition is reached. For a given sample set, K-means divides it into K clusters, minimizing a criterion (e.g., withincluster sum-of-squares). K is a positive integer number and must be predefined. We first extract the required features according to Section 3.2 and convert them into usable feature matrices. Before performing the final group clustering, we normalize the feature matrices. e reason is that clustering algorithms all use a distance measure to determine if object i is more likely to belong to the same cluster as object j than the same cluster as object k. ese distance measures are affected by the scale of the variables. By putting all variables into the same range, we can weigh all variables equally, especially when the feature vectors are generated differently. e main idea of normalization is to calculate the p \u2212 norm of each sample and then divide each element in the sample by the norm. e result of this process is that the p \u2212 norm of each processed sample is equal to 1. In the experiment, p is set to 2 and L2 \u2212 norm of vector x \ufffd (x 1 , . . . , x n ) can be defined as [37] \u2016x\u2016 2 \ufffd x 1 2 + x 2 2 + \u00b7 \u00b7 \u00b7 + x n\n2 1/2 \ufffd n i\ufffd1 x i 2 \u239b \u239d \u239e \u23a0 1/2 .(6)\nFor the purpose of eliminating the influence of irrelevant variables as much as possible, we leverage all data in the dataset for experiments of each algorithm. For GroupTracer, we iterate the threshold value to pick the threshold with the highest clustering quality. e number of iterations is 20.\n\nen we generate multiple versions of K-means clustering to attain the best clustering solution (Calinski-Harabasz index). Meantime, we run the Meanshift algorithm with the window size changing to get the best effect.\n\n\nExperiment Result and\n\nDiscussion. e evaluations of GroupTracer and two comparison baselines using the metrics we mentioned above are shown in Table 8. When running each algorithm, the value of different independent variables (e.g., threshold and quantile) brings the most significant change to the Calinski-Harabasz index, so this index is considered as the primary reference index when evaluating each algorithm. As a result, the Calinski-Harabasz index of GroupTracer reaches 3416.93 when the threshold is set to 10, which is about three times the K-means model and 1.5 times the Meanshift model. Taking the Silhouette Coefficient index as the definitive reference, the performance of GroupTracer is still the best. Although our algorithm performance is not the best after taking the Davies-Bouldin index into account, the gap is also within the acceptable range. GroupTracer generates 4 clusters, while the K-means model generates three classes. In the same way, the Meanshift model only generates 2 clusters for all data. e evaluation of GroupTracer using the three metrics is illustrated in Figure 6, where the value of threshold ranges from 1 to 20. e Silhouette Coefficient index is on the rise  until the threshold reaches 9. When the threshold value ranges from 10 to 17, the index stabilizes at a relatively high level in Figure 6(a).\n\ne Davies-Bouldin index shows a downward trend as a whole until the threshold reaches ten and starts to stabilize at the lowest point (0.7367). After that, the index starts to rise rapidly in Figure 6(b). When the threshold value is 10-17, the Calinski-Harabasz index is maintained at the highest level (3416.93) in Figure 6(c), and the number of clusters is also kept at 4. In summary, all three indicators show that when the number of clusters is 4, the cluster quality becomes the highest and reaches a stable state.\n\nWhen the CH index reaches the highest point, the Silhouette Coefficient and the DB index both have the worst effect in Figure 7. Similarly, when the CH index reaches the highest level, the DB index is in a lower position in Figure 8. It can be seen in these two figures that the changing trends of these indicators are not matched, which means that the two baselines are not well applied to our datasets.\n\n\nLimitation and Future Work\n\nOur research proposes a framework that can dig out potential groups behind active campaigns.\n\nis new technique can make full use of information from attack campaigns. However, our current design is preliminary. We only focus on the IPs used by the potential groups and do not go any further to track which specific groups were involved, that is, to try to correspond to the real groups [46]. Moreover, GroupTracer can only deal with honeypot logs that contain attack payloads.\n\nIn future work, we expect to combine NLP techniques with cyber threat intelligence to precisely match these potential groups to the real-world APT groups, in which the attack tree may be helpful to extract a group profile. Moreover, an experiment to prove the effectiveness of the attack tree should also be carried out. Further, we expect to apply more data sources such as system log and network traffic to expand our knowledge base and perform more comprehensive analysis.\n\n\nConclusion\n\nIn this work, we propose GroupTracer, a framework for attack actors clustering from IoT honeypot logs. Group-Tracer is aimed at extracting the TTP profile automatically and digging out potential groups behind active campaigns. By mapping payloads to the ATT&CK framework, GroupTracer can effectively extract structured TTP profiles using two knowledge bases. Besides, this framework leverages four feature groups (namely, Time, TTPs, IP, and URL), a total of 18 characteristics, derived from log entries to capture the natural hierarchical structures for attacker groups. Finally, GroupTracer constructs attack trees for each cluster to embody the group actions. In the experiment, we compare our algorithm with two baseline algorithms. e evaluation of 395,006 log entries from 3,025 IPs reveals the high performance of GroupTracer, in which the Calinski-Harabasz index reaches 3416.93. Moreover, our proposed framework is generalizable as it is from a log accounting perspective, so its application is not limited to the IoT honeypot.\n\n\nData Availability\n\ne research data used to support the findings of this study are available from the corresponding author upon request.\n\n\nConflicts of Interest\n\ne authors declare that they have no conflicts of interest.\n\nFigure 1 :\n1e architecture of GroupTracer.\n\nFigure 2 Figure 3 :\n23: e process of generating the TTP profile. GroupTracer cuts payload into commands, maps these commands to the ATT&CK framework, and then abstracts the structure of the commands for a second mapping to techniques and tactics. e product of the first mapping and the second mapping constitutes the TTP profiles.parts = [WordNode (parts = [] pos = (9, 14) word = \u2032chmod\u2032),WordNode (parts = [] pos = (15, 17) word = \u2032+x\u2032), WordNode (parts = [] pos = (18, 22) word = \u2032mips\u2032)] pos = (9, 22)) CommandNode (parts = [WordNode (parts = [] pos = (23, 29) word = \u2032./mipsV)] pos = (23, 29))] pos = (0, 29))] CommandNode (parts = [WordNode (parts = [] pos = (0, 2) word = \u2032cd\u2032), WordNode (parts = [] pos = (3, 8) word = \u2032/tmp/\u2032)] pos = (0, 8))[cd, chmod, ./mips] GroupTracer generates the Abstract Syntax Tree for each payload to obtain command nodes and then extracts the abstract structure from command nodes.\n\n\n(i) Defense evasion: avoiding being detected while adversaries are intruding on the victim system. (ii) Discovery: figuring out the environment of the victim system. (iii) Lateral movement: moving through the victim environment. Adversaries might download their tools from remote servers to achieve lateral movement.\n\nFigure 4 :\n4e hierarchy of the attacker behavioral clusters.\n\nFigure 6\n6: e evaluation of GroupTracer using the three indicators, where the value of threshold ranges from 1 to 20: (a) Silhouette Coefficient; (b) Davies-Bouldin; (c) Calinski-Harabasz.\n\nFigure 7\n7: e evaluation of K-means model using the three metrics: (a) Silhouette Coefficient; (b) Davies-Bouldin; (c) Calinski-Harabasz.\n\nFigure 8 :\n8e evaluation of Meanshift model using the three metrics: (a) Silhouette Coefficient; (b) Davies-Bouldin; (c) Calinski-Harabasz.\n\nTable 1 :\n1Some examples of mapping from commands to TTP profiles.Command \nTechnique \nTactic \n1st knowledge base \nshow running-\nconfig \nCredential dumping \nCredential access \n\nshow startup-\nconfig \nCredential dumping \nCredential access \n\n2nd knowledge base \n\nftpget \nRemote file copy \nLateral \nmovement \n\nwget \nRemote file copy \nLateral \nmovement \n\ncurl \nRemote file copy \nLateral \nmovement \n\nrcp \nRemote file copy \nLateral \nmovement \n\ncopy \nRemote file copy \nLateral \nmovement \nshow archive \nconfig \nCredentials in files \nCredential access \n\nshow history \nInput capture \nCollection \nshow logging \nInput capture \nCollection \ntar \nData compressed \nExfiltration \nzip \nData compressed \nExfiltration \nrar \nData compressed \nExfiltration \nshutdown \nSystem shutdown/reboot \nImpact \nreboot \nSystem shutdown/reboot \nImpact \ndel \nFile deletion \nDefense evasion \nrm \nFile deletion \nDefense evasion \nadduser \nCreate account \nPersistence \nusermod \nAccount manipulation \nPersistence \ngroupadd \nAccount manipulation \nPersistence \n\ndir \nFile and directory \ndiscovery \nDiscovery \n\nls \nFile and directory \ndiscovery \nDiscovery \n\ncd \nFile and directory \ndiscovery \nDiscovery \n\necho \nData from local system \nCollection \ncat \nData from local system \nCollection \nmore \nData from local system \nCollection \npwd \nData from local system \nCollection \nwhoami \nData from local system \nCollection \n\n\nTable 2 :\n2Features related to IP & URL feature groups.# \nFeature name \nDescription \n1 \nCountry \nDescribes the country to which the IP/URL belongs. \n2 \nMalicious index \nLeverages the VirusTotal API to determine the maliciousness of the IP/URL. \n3 \nIP address type \nUtilizes the RTBAsia API to classify IP/URL type. \n4 \nDownload (optional) \ne file that the attack actor downloaded by executing the command. \n\n\n\nTable 3 :\n3Seven types of IP addresses.# \nTypes \n1 \nInternet data center \n2 \nFixed IP Internet access line \n3 \nOrdinary broadband \n4 \nMobile broadband \n5 \nBackbone node \n6 \nKnown crawler API \n7 \nSmall operator \n\n\nTable 4 :\n4Several significant time-series characteristics.# \nFeature name \nDescription \n1 \nmaximum \ne largest value of the time series \n2 \nminimum \ne smallest value of the time series \n3 \nlength \nNumber of attack periods per IP \n4 \nmean \nA measure of the central tendency \n5 \nmedian \ne \"middle\" value \n6 \nstandard_deviation \ne square root of its variance \n7 \nvariance \ne expectation of the squared deviation of a random variable from its mean \n8 \nsum_value \nCalculates the sum over the time-series values \n\nC15 \n\nC13 \nC14 \n\nC9 \nC10 \nC11 \nC12 \n\nC1 \nC3 \nC4 \nC5 \nC6 \nC8 \nC7 \nC2 \n\nThreshold \n\n\n\nTable 5 :\n5e occurrence frequency statistics of command sequence from a certain cluster.# \nCommand sequence \nFrequency \n1 \ncd wget \n5 \n2 \ncd rm \n2 \n3 \ncd chmod./t \n2 \n4 \ncd chmod./s \n1 \n5 \ncd chmod./nig \n1 \n\n./nig \n\ncd \n\nwget \nchmod \n\n./s \n\n./t \n\nrm \n\n\n\nTable 6 :\n6Datasets from UPnP-SOAP and Netis backdoor honeypots.Dataset \nTime \n# of unique \nsources \n\n# of \nentries \n\nUPnP-SOAP \nApr.21-Nov.03 \n2019 \n2,652 \n153,413 \n\nNetis \nbackdoor \n\nMar.21-Dec.25 \n2019 \n373 \n241,593 \n\nTotal \nMar.21-Dec.24 \n2019 \n3,025 \n395,006 \n\n\n\nTable 7 :\n7Techniques corresponding to each tactic and commands mapped to these techniques in our datasets.Tactic \n\n\nTable 8 :\n8e evaluation of GroupTracer and two comparison baselines using the Calinski-Harabasz, the Silhouette Coefficient, and the \nDavies-Bouldin index. \n\nAlgorithm \nCalinski-Harabasz \nSilhouette Coefficient \nDavies-Bouldin \n# of clusters \nValue \nGroupTracer \n3416.9311 \n0.5389 \n0.7367 \n4 \n10 (threshold) \nK-means model \n1212.7809 \n0.3246 \n1.1807 \n3 \n3 (K) \nMeanshift model \n2199.9206 \n0.5004 \n0.6769 \n2 \n50% (quantile) \n\n\n. Great, Apt Trends ReportGReAT, Apt Trends Report, 2019, https://securelist.com/apt- trends-report-q2-2019/91897/.\n\nDyn. H Scott, H. Scott, \"Dyn,\" 2019, https://dyn.com/blog/dyn-analysis- summary-of-friday-october-21-attack/.\n\n. Vpnfilter Talos, Talos, Vpnfilter, 2019, https://blog.talosintelligence.com/ 2018/05/VPNFilter.html.\n\n. D J Bianco, D. J. Bianco, \" e pyramid of pain,\" 2019, https://detect- respond.blogspot.com/2013/03/the-pyramid-of-pain.html.\n\nDefinitive Guide to Cyber reat Intelligence: Using Knowledge about Adversaries to Win the War against Targeted Attacks. J Friedman, M Bouchard, Isightpartners, Amsterdam, NetherlandsJ. Friedman and M. Bouchard, Definitive Guide to Cyber reat Intelligence: Using Knowledge about Adversaries to Win the War against Targeted Attacks, Isightpartners, Amsterdam, Netherlands, 2015.\n\n. Darkhotel Mitre, MITRE, Darkhotel, 2019, https://attack.mitre.org/groups/ G0012/.\n\nTurla. MITRE, 2019, Turla, https://attack.mitre.org/groups/G0010/.\n\nProfiling and classifying the behavior of malicious codes. M Alazab, Journal of Systems and Software. 100M. Alazab, \"Profiling and classifying the behavior of malicious codes,\" Journal of Systems and Software, vol. 100, pp. 91-102, 2015.\n\nAn approach for detection and family classification of malware based on behavioral analysis. S S Hansen, T M T Larsen, M Stevanovic, J M Pedersen, Proceedings of the 2016 International Conference on Computing, Networking and Communications (ICNC). the 2016 International Conference on Computing, Networking and Communications (ICNC)Kauai, HI, USAIEEES. S. Hansen, T. M. T. Larsen, M. Stevanovic, and J. M. Pedersen, \"An approach for detection and family classification of malware based on behavioral analysis,\" in Proceedings of the 2016 International Conference on Com- puting, Networking and Communications (ICNC), pp. 1-5, IEEE, Kauai, HI, USA, February 2016.\n\nNovel feature extraction, selection and fusion for effective malware family classification. M Ahmadi, D Ulyanov, S Semenov, M Trofimov, G Giacinto, Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy. the Sixth ACM Conference on Data and Application Security and PrivacyNew Orleans, LA, USAACMM. Ahmadi, D. Ulyanov, S. Semenov, M. Trofimov, and G. Giacinto, \"Novel feature extraction, selection and fusion for effective malware family classification,\" in Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy, pp. 183-194, ACM, New Orleans, LA, USA, March 2016.\n\nMalware analysis and classification using artificial neural network. A Makandar, A Patrot, Proceedings of the 2015 International Conference on Trends in Automation, Communications and Computing Technology (I-TACT-15). the 2015 International Conference on Trends in Automation, Communications and Computing Technology (I-TACT-15)Bangalore, IndiaIEEEA. Makandar and A. Patrot, \"Malware analysis and classifi- cation using artificial neural network,\" in Proceedings of the 2015 International Conference on Trends in Automation, Communications and Computing Technology (I-TACT-15), pp. 1-6, IEEE, Bangalore, India, December 2015.\n\nMeerkat: detecting website defacements through image-based object recognition. K Borgolte, C Kruegel, G Vigna, Proceedings of the 24th {USENIX}Security Symposium ({USENIX}Security 15). the 24th {USENIX}Security Symposium ({USENIX}Security 15)Washington, DC, USAK. Borgolte, C. Kruegel, and G. Vigna, \"Meerkat: detecting website defacements through image-based object recogni- tion,\" in Proceedings of the 24th {USENIX}Security Symposium ({USENIX}Security 15), pp. 595-610, Washington, DC, USA, August 2015.\n\nDetecting malicious exploit kits using tree-based similarity searches. T Taylor, X Hu, T Wang, Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy. the Sixth ACM Conference on Data and Application Security and PrivacyNew Orleans, LA, USAACMT. Taylor, X. Hu, T. Wang et al., \"Detecting malicious exploit kits using tree-based similarity searches,\" in Proceedings of the Sixth ACM Conference on Data and Application Security and Privacy, pp. 255-266, ACM, New Orleans, LA, USA, March 2016.\n\nYour apps give you away: distinguishing mobile users by their app usage fingerprints. Z Tu, R Li, Y Li, Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies. the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies2Z. Tu, R. Li, Y. Li et al., \"Your apps give you away: dis- tinguishing mobile users by their app usage fingerprints,\" Proceedings of the ACM on Interactive, Mobile, Wearable and Ubiquitous Technologies, vol. 2, no. 3, pp. 1-23, 2018.\n\nHoneypot: a supplemented active defense system for network security. F Zhang, S Zhou, Z Qin, J Liu, Proceedings of the Fourth International Conference on Parallel and Distributed Computing, Applications and Technologies. the Fourth International Conference on Parallel and Distributed Computing, Applications and TechnologiesChengdu, ChinaIEEEF. Zhang, S. Zhou, Z. Qin, and J. Liu, \"Honeypot: a sup- plemented active defense system for network security,\" in Proceedings of the Fourth International Conference on Parallel and Distributed Computing, Applications and Technologies, pp. 231-235, IEEE, Chengdu, China, August 2003.\n\nMotivating a market or regulatory solution to iot insecurity with the mirai botnet code. J A Jerkins, Proceedings of the 2017 IEEE 7th Annual Computing and Communication Workshop and Conference (CCWC). the 2017 IEEE 7th Annual Computing and Communication Workshop and Conference (CCWC)Las Vegas, NV, USAIEEEJ. A. Jerkins, \"Motivating a market or regulatory solution to iot insecurity with the mirai botnet code,\" in Proceedings of the 2017 IEEE 7th Annual Computing and Communication Workshop and Conference (CCWC), pp. 1-5, IEEE, Las Vegas, NV, USA, January 2017.\n\nIot sentinel: automated device-type identification for security enforcement in iot. M Miettinen, S Marchal, I Hafeez, N Asokan, A R Sadeghi, S Tarkoma, Proceedings of the 2017 IEEE 37th International Conference on Distributed Computing Systems (ICDCS). the 2017 IEEE 37th International Conference on Distributed Computing Systems (ICDCS)Atlanta, GA, USAIEEEM. Miettinen, S. Marchal, I. Hafeez, N. Asokan, A. R. Sadeghi, and S. Tarkoma, \"Iot sentinel: automated device-type iden- tification for security enforcement in iot,\" in Proceedings of the 2017 IEEE 37th International Conference on Distributed Computing Systems (ICDCS), pp. 2177-2184, IEEE, Atlanta, GA, USA, June 2017.\n\nSecuring vulnerable home iot devices with an in-hub security manager. A K Simpson, F Roesner, T Kohno, Proceedings of the 2017 IEEE International Conference on Pervasive Computing and Communications Workshops. the 2017 IEEE International Conference on Pervasive Computing and Communications WorkshopsSeattle, WA, USAIEEEA. K. Simpson, F. Roesner, and T. Kohno, \"Securing vul- nerable home iot devices with an in-hub security manager,\" in Proceedings of the 2017 IEEE International Conference on Pervasive Computing and Communications Workshops (Per- Com Workshops), pp. 551-556, IEEE, Seattle, WA, USA, March 2017.\n\ningpot: an interactive internet-of-things honeypot. M Wang, J Santillan, F Kuipers, M. Wang, J. Santillan, and F. Kuipers, \" ingpot: an inter- active internet-of-things honeypot,\" 2018, https://arxiv.org/ abs/1807.04114.\n\nIotpot: analysing the rise of iot compromises. Y M P Pa, S Suzuki, K Yoshioka, T Matsumoto, T Kasama, C Rossow, Proceedings of the 9th {USENIX} Workshop on Offensive Technologies {WOOT}. the 9th {USENIX} Workshop on Offensive Technologies {WOOT}Washington, DC, USAY. M. P. Pa, S. Suzuki, K. Yoshioka, T. Matsumoto, T. Kasama, and C. Rossow, \"Iotpot: analysing the rise of iot compro- mises,\" in Proceedings of the 9th {USENIX} Workshop on Offensive Technologies {WOOT}, Washington, DC, USA, August 2015.\n\nA zigbee honeypot to assess iot cyberattack behaviour. S Dowling, M Schukat, H Melvin, Proceedings of the 2017 28th Irish Signals and Systems Conference (ISSC). the 2017 28th Irish Signals and Systems Conference (ISSC)Co Kerry, IrelandIEEES. Dowling, M. Schukat, and H. Melvin, \"A zigbee honeypot to assess iot cyberattack behaviour,\" in Proceedings of the 2017 28th Irish Signals and Systems Conference (ISSC), pp. 1-6, IEEE, Co Kerry, Ireland, June 2017.\n\nWho is knocking on the telnet port: a large-scale empirical study of network scanning. H Heo, S Shin, Proceedings of the 2018 on Asia Conference on Computer and Communications Security. the 2018 on Asia Conference on Computer and Communications SecurityIncheon, South KoreaACMH. Heo and S. Shin, \"Who is knocking on the telnet port: a large-scale empirical study of network scanning,\" in Pro- ceedings of the 2018 on Asia Conference on Computer and Communications Security, pp. 625-636, ACM, Incheon, South Korea, June 2018.\n\nGartner, Definition of Cyber reat Intelligence. Gartner, e Definition of Cyber reat Intelligence, 2019, https://www.gartner.com/en/documents/2487216.\n\nTtpdrill: automatic and accurate extraction of threat actions from unstructured text of cti sources. G Husari, E Al-Shaer, M Ahmed, B Chu, X Niu, Proceedings of the 33rd Annual Computer Security Applications Conference. the 33rd Annual Computer Security Applications ConferenceOrlando, FL, USAACMG. Husari, E. Al-Shaer, M. Ahmed, B. Chu, and X. Niu, \"Ttpdrill: automatic and accurate extraction of threat actions from unstructured text of cti sources,\" in Proceedings of the 33rd Annual Computer Security Applications Conference, pp. 103-115, ACM, Orlando, FL, USA, December 2017.\n\nUnsupervised deep embedding for clustering analysis. J Xie, R Girshick, A Farhadi, Proceedings of the International Conference on Machine Learning. the International Conference on Machine LearningNew York City, NY, USAJ. Xie, R. Girshick, and A. Farhadi, \"Unsupervised deep embedding for clustering analysis,\" in Proceedings of the International Conference on Machine Learning, pp. 478-487, New York City, NY, USA, June 2016.\n\nUnsupervised classification and characterization of honeypot attacks. P Owezarski, Proceedings of the 10th International Conference on Network and Service Management (CNSM) and Workshop. the 10th International Conference on Network and Service Management (CNSM) and WorkshopIEEE, Rio de Janeiro, BrazilP. Owezarski, \"Unsupervised classification and character- ization of honeypot attacks,\" in Proceedings of the 10th In- ternational Conference on Network and Service Management (CNSM) and Workshop, pp. 10-18, IEEE, Rio de Janeiro, Brazil, November 2014.\n\ne study of prediction of same attack group by comparing similarity of domain. H Cho, S Lee, B Kim, Y Shin, T Lee, Proceedings of the 2015 International Conference on Information and Communication Technology Convergence (ICTC). the 2015 International Conference on Information and Communication Technology Convergence (ICTC)Jeju Island, South Korea, OcIEEEH. Cho, S. Lee, B. Kim, Y. Shin, and T. Lee, \" e study of prediction of same attack group by comparing similarity of domain,\" in Proceedings of the 2015 International Conference on Information and Communication Technology Convergence (ICTC), pp. 1220-1222, IEEE, Jeju Island, South Korea, Oc- tober 2015.\n\nFingerprinting tooling used for {SSH} compromisation attempts. V Ghi\u00ebtte, H Griffioen, C Doerr, Proceedings of the 22nd International Symposium on Research in Attacks, Intrusions and Defenses {RAID} 2019. the 22nd International Symposium on Research in Attacks, Intrusions and Defenses {RAID} 2019Beijing, ChinaV. Ghi\u00ebtte, H. Griffioen, and C. Doerr, \"Fingerprinting tooling used for {SSH} compromisation attempts,\" in Proceedings of the 22nd International Symposium on Research in Attacks, Intrusions and Defenses {RAID} 2019, pp. 61-71, Beijing, China, September 2019.\n\n. Geolite Maxmind, MaxMind, Geolite, 2020, https://dev.maxmind.com/geoip/ geoip2/geolite2/.\n\nUnderstanding source code evolution using abstract syntax tree matching. I Neamtiu, J S Foster, M Hicks, Proceedings of the 2005 International Workshop on Mining Software Repositories. the 2005 International Workshop on Mining Software RepositoriesSaint Louis, MO, USAI. Neamtiu, J. S. Foster, and M. Hicks, \"Understanding source code evolution using abstract syntax tree matching,\" in Proceedings of the 2005 International Workshop on Mining Software Repositories, pp. 1-5, Saint Louis, MO, USA, May 2005.\n\n. Ipipdotnet, Ipdb-Python, Ipipdotnet, Ipdb-Python, 2019, https://github.com/ipipdotnet/ ipdb-python.\n\n. Riskanalytics, Malware Domain Blocklist. RiskAnalytics, Malware Domain Blocklist, 2019, http://www. malwaredomains.com/.\n\nWeb Link Scanner. Dr, Web, Dr.Web, Web Link Scanner, 2019, https://free.drweb.cn/.\n\n. Rtbasia Rtbasia, Api, RTBAsia, Rtbasia Api, 2019, https://www.rtbasia.com/ip-lab.\n\nHierarchical clustering schemes. S C Johnson, Psychometrika. 323S. C. Johnson, \"Hierarchical clustering schemes,\" Psycho- metrika, vol. 32, no. 3, pp. 241-254, 1967.\n\nLinear Operators Part I: General eory. N Dunford, J T Schwartz, Interscience Publishers243New York, NY, USAN. Dunford and J. T. Schwartz, Linear Operators Part I: General eory, Vol. 243, Interscience Publishers, New York, NY, USA, 1958.\n\nInternet home network electrical appliance control on the internet with the upnp expansion. K S Kim, C Park, J Lee, Proceedings of the 2006 International Conference on Hybrid Information Technology. the 2006 International Conference on Hybrid Information TechnologyJeju Island, South KoreaIEEEK. S. Kim, C. Park, and J. Lee, \"Internet home network electrical appliance control on the internet with the upnp expansion,\" in Proceedings of the 2006 International Con- ference on Hybrid Information Technology, pp. 629-634, IEEE, Jeju Island, South Korea, November 2006.\n\n. ATT&CK Matrix, Tactic. ATT&CK Matrix, Tactic, 2020, https://attack.mitre.org/.\n\nInternal versus external cluster validation indexes. E Rend\u00f3n, I Abundez, A Arizmendi, E M Quiroz, International Journal of Computers and Communications. 5E. Rend\u00f3n, I. Abundez, A. Arizmendi, and E. M. Quiroz, \"Internal versus external cluster validation indexes,\" Inter- national Journal of Computers and Communications, vol. 5, pp. 27-34, 2011.\n\nA dendrite method for cluster analysis. T Calinski, J Harabasz, Communications in Statistics-eory and Methods. 31T. Calinski and J. Harabasz, \"A dendrite method for cluster analysis,\" Communications in Statistics-eory and Methods, vol. 3, no. 1, pp. 1-27, 1974.\n\nSilhouettes: a graphical aid to the interpretation and validation of cluster analysis. P J Rousseeuw, Journal of Computational and Applied Mathematics. 20P. J. Rousseeuw, \"Silhouettes: a graphical aid to the inter- pretation and validation of cluster analysis,\" Journal of Computational and Applied Mathematics, vol. 20, pp. 53-65, 1987.\n\nA cluster separation measure. D L Davies, D W Bouldin, IEEE Transactions on Pattern Analysis and Machine Intelligence. 12D. L. Davies and D. W. Bouldin, \"A cluster separation measure,\" IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. PAMI-1, no. 2, pp. 224-227, 1979.\n\nMean shift, mode seeking, and clustering. Y Cheng, IEEE Transactions on Pattern Analysis and Machine Intelligence. 17Y. Cheng, \"Mean shift, mode seeking, and clustering,\" IEEE Transactions on Pattern Analysis and Machine Intelligence, vol. 17, pp. 790-799, 1995.\n\nAlgorithm as 136: a k-means clustering algorithm. J A Hartigan, M A Wong, Applied Statistics. 281J. A. Hartigan and M. A. Wong, \"Algorithm as 136: a k-means clustering algorithm,\" Applied Statistics, vol. 28, no. 1, pp. 100-108, 1979.\n\n. Apt Mitre, Groups, MITRE, Apt Groups, 2020, https://attack.mitre.org/groups/.\n", "annotations": {"author": "[{\"end\":171,\"start\":98},{\"end\":248,\"start\":172},{\"end\":288,\"start\":249},{\"end\":329,\"start\":289}]", "publisher": null, "author_last_name": "[{\"end\":106,\"start\":104},{\"end\":183,\"start\":178},{\"end\":259,\"start\":254},{\"end\":300,\"start\":296}]", "author_first_name": "[{\"end\":103,\"start\":98},{\"end\":177,\"start\":172},{\"end\":253,\"start\":249},{\"end\":295,\"start\":289}]", "author_affiliation": "[{\"end\":170,\"start\":108},{\"end\":247,\"start\":185},{\"end\":287,\"start\":261},{\"end\":328,\"start\":302}]", "title": "[{\"end\":95,\"start\":1},{\"end\":424,\"start\":330}]", "venue": null, "abstract": "[{\"end\":2610,\"start\":644}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2794,\"start\":2791},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3541,\"start\":3538},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3565,\"start\":3562},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4652,\"start\":4649},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":4862,\"start\":4859},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":5872,\"start\":5869},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5886,\"start\":5883},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6033,\"start\":6030},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6035,\"start\":6033},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6060,\"start\":6056},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":6063,\"start\":6060},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6534,\"start\":6530},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6538,\"start\":6534},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":6542,\"start\":6538},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":9488,\"start\":9484},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9597,\"start\":9593},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":9601,\"start\":9597},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":9605,\"start\":9601},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":9742,\"start\":9738},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":9758,\"start\":9754},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10503,\"start\":10499},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":10737,\"start\":10733},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11919,\"start\":11915},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":12322,\"start\":12318},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":12947,\"start\":12943},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":13003,\"start\":12999},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":13212,\"start\":13208},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":13603,\"start\":13599},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13848,\"start\":13845},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":16170,\"start\":16166},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":19449,\"start\":19445},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":20233,\"start\":20229},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":20355,\"start\":20351},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":20385,\"start\":20381},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":20720,\"start\":20716},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":24689,\"start\":24685},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":25333,\"start\":25329},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":27145,\"start\":27141},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":28702,\"start\":28698},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28905,\"start\":28902},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":28957,\"start\":28953},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":29018,\"start\":29014},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":29050,\"start\":29046},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":29092,\"start\":29088},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":29105,\"start\":29101},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":29130,\"start\":29126},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29155,\"start\":29151},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":29216,\"start\":29212},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":29260,\"start\":29256},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":30011,\"start\":30007},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":30475,\"start\":30471},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":30700,\"start\":30697},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":30733,\"start\":30730},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":30765,\"start\":30762},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":30788,\"start\":30784},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":30836,\"start\":30832},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":30990,\"start\":30986},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":31513,\"start\":31509},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":32150,\"start\":32146},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":33047,\"start\":33043},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":33064,\"start\":33060},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":34398,\"start\":34394},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":37681,\"start\":37677}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":39560,\"start\":39517},{\"attributes\":{\"id\":\"fig_1\"},\"end\":40480,\"start\":39561},{\"attributes\":{\"id\":\"fig_2\"},\"end\":40799,\"start\":40481},{\"attributes\":{\"id\":\"fig_3\"},\"end\":40861,\"start\":40800},{\"attributes\":{\"id\":\"fig_4\"},\"end\":41051,\"start\":40862},{\"attributes\":{\"id\":\"fig_5\"},\"end\":41190,\"start\":41052},{\"attributes\":{\"id\":\"fig_7\"},\"end\":41331,\"start\":41191},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":42701,\"start\":41332},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":43111,\"start\":42702},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":43324,\"start\":43112},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":43916,\"start\":43325},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":44170,\"start\":43917},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":44438,\"start\":44171},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":44555,\"start\":44439},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":44981,\"start\":44556}]", "paragraph": "[{\"end\":3789,\"start\":2626},{\"end\":4129,\"start\":3825},{\"end\":4186,\"start\":4131},{\"end\":4611,\"start\":4188},{\"end\":5672,\"start\":4613},{\"end\":6607,\"start\":5710},{\"end\":6979,\"start\":6609},{\"end\":7053,\"start\":6998},{\"end\":7106,\"start\":7055},{\"end\":7721,\"start\":7108},{\"end\":8221,\"start\":7723},{\"end\":9159,\"start\":8223},{\"end\":11051,\"start\":9207},{\"end\":11691,\"start\":11053},{\"end\":12775,\"start\":11701},{\"end\":13949,\"start\":12794},{\"end\":14469,\"start\":13951},{\"end\":15238,\"start\":14483},{\"end\":15531,\"start\":15240},{\"end\":17138,\"start\":15556},{\"end\":17490,\"start\":17162},{\"end\":18027,\"start\":17532},{\"end\":18743,\"start\":18029},{\"end\":19877,\"start\":18808},{\"end\":19965,\"start\":19910},{\"end\":20680,\"start\":19995},{\"end\":21377,\"start\":20682},{\"end\":23400,\"start\":21412},{\"end\":24075,\"start\":23402},{\"end\":24308,\"start\":24077},{\"end\":24624,\"start\":24340},{\"end\":25334,\"start\":24626},{\"end\":25565,\"start\":25457},{\"end\":25876,\"start\":25598},{\"end\":26715,\"start\":25878},{\"end\":27009,\"start\":26753},{\"end\":27765,\"start\":27043},{\"end\":28315,\"start\":27801},{\"end\":28706,\"start\":28317},{\"end\":29056,\"start\":28876},{\"end\":29589,\"start\":29076},{\"end\":29779,\"start\":29591},{\"end\":30442,\"start\":29818},{\"end\":30510,\"start\":30444},{\"end\":31198,\"start\":30512},{\"end\":31417,\"start\":31247},{\"end\":31479,\"start\":31419},{\"end\":31858,\"start\":31481},{\"end\":32182,\"start\":31899},{\"end\":32551,\"start\":32249},{\"end\":33007,\"start\":32574},{\"end\":33118,\"start\":33033},{\"end\":34434,\"start\":33120},{\"end\":34769,\"start\":34472},{\"end\":34986,\"start\":34771},{\"end\":36334,\"start\":35012},{\"end\":36854,\"start\":36336},{\"end\":37260,\"start\":36856},{\"end\":37383,\"start\":37291},{\"end\":37767,\"start\":37385},{\"end\":38244,\"start\":37769},{\"end\":39294,\"start\":38259},{\"end\":39432,\"start\":39316},{\"end\":39516,\"start\":39458}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":18807,\"start\":18744},{\"attributes\":{\"id\":\"formula_1\"},\"end\":19909,\"start\":19878},{\"attributes\":{\"id\":\"formula_2\"},\"end\":25456,\"start\":25335},{\"attributes\":{\"id\":\"formula_3\"},\"end\":28875,\"start\":28707},{\"attributes\":{\"id\":\"formula_4\"},\"end\":29075,\"start\":29057},{\"attributes\":{\"id\":\"formula_5\"},\"end\":31246,\"start\":31199},{\"attributes\":{\"id\":\"formula_6\"},\"end\":31898,\"start\":31859},{\"attributes\":{\"id\":\"formula_7\"},\"end\":32248,\"start\":32183},{\"attributes\":{\"id\":\"formula_8\"},\"end\":34471,\"start\":34435}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":19654,\"start\":19647},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":20075,\"start\":20068},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":20679,\"start\":20672},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":23925,\"start\":23918},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":26354,\"start\":26347},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":27008,\"start\":27001},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":27633,\"start\":27625},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":28204,\"start\":28196},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":29676,\"start\":29669},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":35139,\"start\":35132}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":2624,\"start\":2612},{\"attributes\":{\"n\":\"1.1.\"},\"end\":3823,\"start\":3792},{\"attributes\":{\"n\":\"1.2.\"},\"end\":5708,\"start\":5675},{\"attributes\":{\"n\":\"1.3.\"},\"end\":6996,\"start\":6982},{\"attributes\":{\"n\":\"2.\"},\"end\":9174,\"start\":9162},{\"attributes\":{\"n\":\"2.1.\"},\"end\":9205,\"start\":9177},{\"attributes\":{\"n\":\"2.2.\"},\"end\":11699,\"start\":11694},{\"attributes\":{\"n\":\"2.3.\"},\"end\":12792,\"start\":12778},{\"attributes\":{\"n\":\"3.\"},\"end\":14481,\"start\":14472},{\"attributes\":{\"n\":\"3.1.\"},\"end\":15554,\"start\":15534},{\"attributes\":{\"n\":\"3.2.\"},\"end\":17160,\"start\":17141},{\"attributes\":{\"n\":\"3.2.1.\"},\"end\":17530,\"start\":17493},{\"attributes\":{\"n\":\"3.2.2.\"},\"end\":19993,\"start\":19968},{\"attributes\":{\"n\":\"3.2.3.\"},\"end\":21410,\"start\":21380},{\"attributes\":{\"n\":\"3.3.\"},\"end\":24338,\"start\":24311},{\"attributes\":{\"n\":\"3.4.\"},\"end\":25596,\"start\":25568},{\"attributes\":{\"n\":\"4.\"},\"end\":26740,\"start\":26718},{\"attributes\":{\"n\":\"4.1.\"},\"end\":26751,\"start\":26743},{\"attributes\":{\"n\":\"4.1.1.\"},\"end\":27041,\"start\":27012},{\"attributes\":{\"n\":\"4.1.2.\"},\"end\":27799,\"start\":27768},{\"attributes\":{\"n\":\"4.2.\"},\"end\":29816,\"start\":29782},{\"attributes\":{\"n\":\"4.3.\"},\"end\":32572,\"start\":32554},{\"attributes\":{\"n\":\"4.3.1.\"},\"end\":33031,\"start\":33010},{\"attributes\":{\"n\":\"4.4.\"},\"end\":35010,\"start\":34989},{\"attributes\":{\"n\":\"5.\"},\"end\":37289,\"start\":37263},{\"attributes\":{\"n\":\"6.\"},\"end\":38257,\"start\":38247},{\"end\":39314,\"start\":39297},{\"end\":39456,\"start\":39435},{\"end\":39528,\"start\":39518},{\"end\":39581,\"start\":39562},{\"end\":40811,\"start\":40801},{\"end\":40871,\"start\":40863},{\"end\":41061,\"start\":41053},{\"end\":41202,\"start\":41192},{\"end\":41342,\"start\":41333},{\"end\":42712,\"start\":42703},{\"end\":43122,\"start\":43113},{\"end\":43335,\"start\":43326},{\"end\":43927,\"start\":43918},{\"end\":44181,\"start\":44172},{\"end\":44449,\"start\":44440},{\"end\":44566,\"start\":44557}]", "table": "[{\"end\":42701,\"start\":41399},{\"end\":43111,\"start\":42758},{\"end\":43324,\"start\":43152},{\"end\":43916,\"start\":43385},{\"end\":44170,\"start\":44006},{\"end\":44438,\"start\":44236},{\"end\":44555,\"start\":44547},{\"end\":44981,\"start\":44568}]", "figure_caption": "[{\"end\":39560,\"start\":39530},{\"end\":40480,\"start\":39584},{\"end\":40799,\"start\":40483},{\"end\":40861,\"start\":40813},{\"end\":41051,\"start\":40873},{\"end\":41190,\"start\":41063},{\"end\":41331,\"start\":41204},{\"end\":41399,\"start\":41344},{\"end\":42758,\"start\":42714},{\"end\":43152,\"start\":43124},{\"end\":43385,\"start\":43337},{\"end\":44006,\"start\":43929},{\"end\":44236,\"start\":44183},{\"end\":44547,\"start\":44451}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":14615,\"start\":14607},{\"end\":18895,\"start\":18887},{\"end\":19396,\"start\":19388},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":24977,\"start\":24969},{\"end\":26496,\"start\":26488},{\"end\":31124,\"start\":31116},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":36094,\"start\":36086},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":36330,\"start\":36322},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":36535,\"start\":36527},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":36659,\"start\":36651},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":36983,\"start\":36975},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":37088,\"start\":37080}]", "bib_author_first_name": "[{\"end\":45106,\"start\":45105},{\"end\":45222,\"start\":45213},{\"end\":45318,\"start\":45317},{\"end\":45320,\"start\":45319},{\"end\":45564,\"start\":45563},{\"end\":45576,\"start\":45575},{\"end\":45832,\"start\":45823},{\"end\":46034,\"start\":46033},{\"end\":46307,\"start\":46306},{\"end\":46309,\"start\":46308},{\"end\":46319,\"start\":46318},{\"end\":46323,\"start\":46320},{\"end\":46333,\"start\":46332},{\"end\":46347,\"start\":46346},{\"end\":46349,\"start\":46348},{\"end\":46970,\"start\":46969},{\"end\":46980,\"start\":46979},{\"end\":46991,\"start\":46990},{\"end\":47002,\"start\":47001},{\"end\":47014,\"start\":47013},{\"end\":47574,\"start\":47573},{\"end\":47586,\"start\":47585},{\"end\":48211,\"start\":48210},{\"end\":48223,\"start\":48222},{\"end\":48234,\"start\":48233},{\"end\":48711,\"start\":48710},{\"end\":48721,\"start\":48720},{\"end\":48727,\"start\":48726},{\"end\":49248,\"start\":49247},{\"end\":49254,\"start\":49253},{\"end\":49260,\"start\":49259},{\"end\":49724,\"start\":49723},{\"end\":49733,\"start\":49732},{\"end\":49741,\"start\":49740},{\"end\":49748,\"start\":49747},{\"end\":50372,\"start\":50371},{\"end\":50374,\"start\":50373},{\"end\":50933,\"start\":50932},{\"end\":50946,\"start\":50945},{\"end\":50957,\"start\":50956},{\"end\":50967,\"start\":50966},{\"end\":50977,\"start\":50976},{\"end\":50979,\"start\":50978},{\"end\":50990,\"start\":50989},{\"end\":51598,\"start\":51597},{\"end\":51600,\"start\":51599},{\"end\":51611,\"start\":51610},{\"end\":51622,\"start\":51621},{\"end\":52196,\"start\":52195},{\"end\":52204,\"start\":52203},{\"end\":52217,\"start\":52216},{\"end\":52413,\"start\":52412},{\"end\":52417,\"start\":52414},{\"end\":52423,\"start\":52422},{\"end\":52433,\"start\":52432},{\"end\":52445,\"start\":52444},{\"end\":52458,\"start\":52457},{\"end\":52468,\"start\":52467},{\"end\":52926,\"start\":52925},{\"end\":52937,\"start\":52936},{\"end\":52948,\"start\":52947},{\"end\":53416,\"start\":53415},{\"end\":53423,\"start\":53422},{\"end\":54107,\"start\":54106},{\"end\":54117,\"start\":54116},{\"end\":54129,\"start\":54128},{\"end\":54138,\"start\":54137},{\"end\":54145,\"start\":54144},{\"end\":54641,\"start\":54640},{\"end\":54648,\"start\":54647},{\"end\":54660,\"start\":54659},{\"end\":55085,\"start\":55084},{\"end\":55649,\"start\":55648},{\"end\":55656,\"start\":55655},{\"end\":55663,\"start\":55662},{\"end\":55670,\"start\":55669},{\"end\":55678,\"start\":55677},{\"end\":56295,\"start\":56294},{\"end\":56306,\"start\":56305},{\"end\":56319,\"start\":56318},{\"end\":56812,\"start\":56805},{\"end\":56970,\"start\":56969},{\"end\":56981,\"start\":56980},{\"end\":56983,\"start\":56982},{\"end\":56993,\"start\":56992},{\"end\":57724,\"start\":57717},{\"end\":57834,\"start\":57833},{\"end\":57836,\"start\":57835},{\"end\":58007,\"start\":58006},{\"end\":58018,\"start\":58017},{\"end\":58020,\"start\":58019},{\"end\":58298,\"start\":58297},{\"end\":58300,\"start\":58299},{\"end\":58307,\"start\":58306},{\"end\":58315,\"start\":58314},{\"end\":58909,\"start\":58908},{\"end\":58919,\"start\":58918},{\"end\":58930,\"start\":58929},{\"end\":58943,\"start\":58942},{\"end\":58945,\"start\":58944},{\"end\":59244,\"start\":59243},{\"end\":59256,\"start\":59255},{\"end\":59554,\"start\":59553},{\"end\":59556,\"start\":59555},{\"end\":59836,\"start\":59835},{\"end\":59838,\"start\":59837},{\"end\":59848,\"start\":59847},{\"end\":59850,\"start\":59849},{\"end\":60137,\"start\":60136},{\"end\":60409,\"start\":60408},{\"end\":60411,\"start\":60410},{\"end\":60423,\"start\":60422},{\"end\":60425,\"start\":60424},{\"end\":60599,\"start\":60596}]", "bib_author_last_name": "[{\"end\":44990,\"start\":44985},{\"end\":45112,\"start\":45107},{\"end\":45228,\"start\":45223},{\"end\":45327,\"start\":45321},{\"end\":45573,\"start\":45565},{\"end\":45585,\"start\":45577},{\"end\":45838,\"start\":45833},{\"end\":46041,\"start\":46035},{\"end\":46316,\"start\":46310},{\"end\":46330,\"start\":46324},{\"end\":46344,\"start\":46334},{\"end\":46358,\"start\":46350},{\"end\":46977,\"start\":46971},{\"end\":46988,\"start\":46981},{\"end\":46999,\"start\":46992},{\"end\":47011,\"start\":47003},{\"end\":47023,\"start\":47015},{\"end\":47583,\"start\":47575},{\"end\":47593,\"start\":47587},{\"end\":48220,\"start\":48212},{\"end\":48231,\"start\":48224},{\"end\":48240,\"start\":48235},{\"end\":48718,\"start\":48712},{\"end\":48724,\"start\":48722},{\"end\":48732,\"start\":48728},{\"end\":49251,\"start\":49249},{\"end\":49257,\"start\":49255},{\"end\":49263,\"start\":49261},{\"end\":49730,\"start\":49725},{\"end\":49738,\"start\":49734},{\"end\":49745,\"start\":49742},{\"end\":49752,\"start\":49749},{\"end\":50382,\"start\":50375},{\"end\":50943,\"start\":50934},{\"end\":50954,\"start\":50947},{\"end\":50964,\"start\":50958},{\"end\":50974,\"start\":50968},{\"end\":50987,\"start\":50980},{\"end\":50998,\"start\":50991},{\"end\":51608,\"start\":51601},{\"end\":51619,\"start\":51612},{\"end\":51628,\"start\":51623},{\"end\":52201,\"start\":52197},{\"end\":52214,\"start\":52205},{\"end\":52225,\"start\":52218},{\"end\":52420,\"start\":52418},{\"end\":52430,\"start\":52424},{\"end\":52442,\"start\":52434},{\"end\":52455,\"start\":52446},{\"end\":52465,\"start\":52459},{\"end\":52475,\"start\":52469},{\"end\":52934,\"start\":52927},{\"end\":52945,\"start\":52938},{\"end\":52955,\"start\":52949},{\"end\":53420,\"start\":53417},{\"end\":53428,\"start\":53424},{\"end\":53861,\"start\":53854},{\"end\":54114,\"start\":54108},{\"end\":54126,\"start\":54118},{\"end\":54135,\"start\":54130},{\"end\":54142,\"start\":54139},{\"end\":54149,\"start\":54146},{\"end\":54645,\"start\":54642},{\"end\":54657,\"start\":54649},{\"end\":54668,\"start\":54661},{\"end\":55095,\"start\":55086},{\"end\":55653,\"start\":55650},{\"end\":55660,\"start\":55657},{\"end\":55667,\"start\":55664},{\"end\":55675,\"start\":55671},{\"end\":55682,\"start\":55679},{\"end\":56303,\"start\":56296},{\"end\":56316,\"start\":56307},{\"end\":56325,\"start\":56320},{\"end\":56820,\"start\":56813},{\"end\":56978,\"start\":56971},{\"end\":56990,\"start\":56984},{\"end\":56999,\"start\":56994},{\"end\":57416,\"start\":57406},{\"end\":57429,\"start\":57418},{\"end\":57522,\"start\":57509},{\"end\":57651,\"start\":57649},{\"end\":57656,\"start\":57653},{\"end\":57732,\"start\":57725},{\"end\":57737,\"start\":57734},{\"end\":57844,\"start\":57837},{\"end\":58015,\"start\":58008},{\"end\":58029,\"start\":58021},{\"end\":58304,\"start\":58301},{\"end\":58312,\"start\":58308},{\"end\":58319,\"start\":58316},{\"end\":58916,\"start\":58910},{\"end\":58927,\"start\":58920},{\"end\":58940,\"start\":58931},{\"end\":58952,\"start\":58946},{\"end\":59253,\"start\":59245},{\"end\":59265,\"start\":59257},{\"end\":59566,\"start\":59557},{\"end\":59845,\"start\":59839},{\"end\":59858,\"start\":59851},{\"end\":60143,\"start\":60138},{\"end\":60420,\"start\":60412},{\"end\":60430,\"start\":60426},{\"end\":60605,\"start\":60600},{\"end\":60613,\"start\":60607}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":45098,\"start\":44983},{\"attributes\":{\"id\":\"b1\"},\"end\":45209,\"start\":45100},{\"attributes\":{\"id\":\"b2\"},\"end\":45313,\"start\":45211},{\"attributes\":{\"id\":\"b3\"},\"end\":45441,\"start\":45315},{\"attributes\":{\"id\":\"b4\"},\"end\":45819,\"start\":45443},{\"attributes\":{\"id\":\"b5\"},\"end\":45904,\"start\":45821},{\"attributes\":{\"id\":\"b6\"},\"end\":45972,\"start\":45906},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":31394478},\"end\":46211,\"start\":45974},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":13889132},\"end\":46875,\"start\":46213},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":5077271},\"end\":47502,\"start\":46877},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":16248914},\"end\":48129,\"start\":47504},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":2535553},\"end\":48637,\"start\":48131},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":10055599},\"end\":49159,\"start\":48639},{\"attributes\":{\"id\":\"b13\"},\"end\":49652,\"start\":49161},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":51799371},\"end\":50280,\"start\":49654},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":14321979},\"end\":50846,\"start\":50282},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2082571},\"end\":51525,\"start\":50848},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":17284225},\"end\":52141,\"start\":51527},{\"attributes\":{\"id\":\"b18\"},\"end\":52363,\"start\":52143},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":14053553},\"end\":52868,\"start\":52365},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":22291142},\"end\":53326,\"start\":52870},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":44090138},\"end\":53852,\"start\":53328},{\"attributes\":{\"id\":\"b22\"},\"end\":54003,\"start\":53854},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":20396776},\"end\":54585,\"start\":54005},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":6779105},\"end\":55012,\"start\":54587},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":6696677},\"end\":55568,\"start\":55014},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":18357597},\"end\":56229,\"start\":55570},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":202714203},\"end\":56801,\"start\":56231},{\"attributes\":{\"id\":\"b28\"},\"end\":56894,\"start\":56803},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":276186},\"end\":57402,\"start\":56896},{\"attributes\":{\"id\":\"b30\"},\"end\":57505,\"start\":57404},{\"attributes\":{\"id\":\"b31\"},\"end\":57629,\"start\":57507},{\"attributes\":{\"id\":\"b32\"},\"end\":57713,\"start\":57631},{\"attributes\":{\"id\":\"b33\"},\"end\":57798,\"start\":57715},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":930698},\"end\":57965,\"start\":57800},{\"attributes\":{\"id\":\"b35\"},\"end\":58203,\"start\":57967},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":14962893},\"end\":58771,\"start\":58205},{\"attributes\":{\"id\":\"b37\"},\"end\":58853,\"start\":58773},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":16604539},\"end\":59201,\"start\":58855},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":122217223},\"end\":59464,\"start\":59203},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":189900},\"end\":59803,\"start\":59466},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":13254783},\"end\":60092,\"start\":59805},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":14842224},\"end\":60356,\"start\":60094},{\"attributes\":{\"id\":\"b43\"},\"end\":60592,\"start\":60358},{\"attributes\":{\"id\":\"b44\"},\"end\":60673,\"start\":60594}]", "bib_title": "[{\"end\":46031,\"start\":45974},{\"end\":46304,\"start\":46213},{\"end\":46967,\"start\":46877},{\"end\":47571,\"start\":47504},{\"end\":48208,\"start\":48131},{\"end\":48708,\"start\":48639},{\"end\":49245,\"start\":49161},{\"end\":49721,\"start\":49654},{\"end\":50369,\"start\":50282},{\"end\":50930,\"start\":50848},{\"end\":51595,\"start\":51527},{\"end\":52410,\"start\":52365},{\"end\":52923,\"start\":52870},{\"end\":53413,\"start\":53328},{\"end\":54104,\"start\":54005},{\"end\":54638,\"start\":54587},{\"end\":55082,\"start\":55014},{\"end\":55646,\"start\":55570},{\"end\":56292,\"start\":56231},{\"end\":56967,\"start\":56896},{\"end\":57831,\"start\":57800},{\"end\":58295,\"start\":58205},{\"end\":58906,\"start\":58855},{\"end\":59241,\"start\":59203},{\"end\":59551,\"start\":59466},{\"end\":59833,\"start\":59805},{\"end\":60134,\"start\":60094},{\"end\":60406,\"start\":60358}]", "bib_author": "[{\"end\":44992,\"start\":44985},{\"end\":45114,\"start\":45105},{\"end\":45230,\"start\":45213},{\"end\":45329,\"start\":45317},{\"end\":45575,\"start\":45563},{\"end\":45587,\"start\":45575},{\"end\":45840,\"start\":45823},{\"end\":46043,\"start\":46033},{\"end\":46318,\"start\":46306},{\"end\":46332,\"start\":46318},{\"end\":46346,\"start\":46332},{\"end\":46360,\"start\":46346},{\"end\":46979,\"start\":46969},{\"end\":46990,\"start\":46979},{\"end\":47001,\"start\":46990},{\"end\":47013,\"start\":47001},{\"end\":47025,\"start\":47013},{\"end\":47585,\"start\":47573},{\"end\":47595,\"start\":47585},{\"end\":48222,\"start\":48210},{\"end\":48233,\"start\":48222},{\"end\":48242,\"start\":48233},{\"end\":48720,\"start\":48710},{\"end\":48726,\"start\":48720},{\"end\":48734,\"start\":48726},{\"end\":49253,\"start\":49247},{\"end\":49259,\"start\":49253},{\"end\":49265,\"start\":49259},{\"end\":49732,\"start\":49723},{\"end\":49740,\"start\":49732},{\"end\":49747,\"start\":49740},{\"end\":49754,\"start\":49747},{\"end\":50384,\"start\":50371},{\"end\":50945,\"start\":50932},{\"end\":50956,\"start\":50945},{\"end\":50966,\"start\":50956},{\"end\":50976,\"start\":50966},{\"end\":50989,\"start\":50976},{\"end\":51000,\"start\":50989},{\"end\":51610,\"start\":51597},{\"end\":51621,\"start\":51610},{\"end\":51630,\"start\":51621},{\"end\":52203,\"start\":52195},{\"end\":52216,\"start\":52203},{\"end\":52227,\"start\":52216},{\"end\":52422,\"start\":52412},{\"end\":52432,\"start\":52422},{\"end\":52444,\"start\":52432},{\"end\":52457,\"start\":52444},{\"end\":52467,\"start\":52457},{\"end\":52477,\"start\":52467},{\"end\":52936,\"start\":52925},{\"end\":52947,\"start\":52936},{\"end\":52957,\"start\":52947},{\"end\":53422,\"start\":53415},{\"end\":53430,\"start\":53422},{\"end\":53863,\"start\":53854},{\"end\":54116,\"start\":54106},{\"end\":54128,\"start\":54116},{\"end\":54137,\"start\":54128},{\"end\":54144,\"start\":54137},{\"end\":54151,\"start\":54144},{\"end\":54647,\"start\":54640},{\"end\":54659,\"start\":54647},{\"end\":54670,\"start\":54659},{\"end\":55097,\"start\":55084},{\"end\":55655,\"start\":55648},{\"end\":55662,\"start\":55655},{\"end\":55669,\"start\":55662},{\"end\":55677,\"start\":55669},{\"end\":55684,\"start\":55677},{\"end\":56305,\"start\":56294},{\"end\":56318,\"start\":56305},{\"end\":56327,\"start\":56318},{\"end\":56822,\"start\":56805},{\"end\":56980,\"start\":56969},{\"end\":56992,\"start\":56980},{\"end\":57001,\"start\":56992},{\"end\":57418,\"start\":57406},{\"end\":57431,\"start\":57418},{\"end\":57524,\"start\":57509},{\"end\":57653,\"start\":57649},{\"end\":57658,\"start\":57653},{\"end\":57734,\"start\":57717},{\"end\":57739,\"start\":57734},{\"end\":57846,\"start\":57833},{\"end\":58017,\"start\":58006},{\"end\":58031,\"start\":58017},{\"end\":58306,\"start\":58297},{\"end\":58314,\"start\":58306},{\"end\":58321,\"start\":58314},{\"end\":58918,\"start\":58908},{\"end\":58929,\"start\":58918},{\"end\":58942,\"start\":58929},{\"end\":58954,\"start\":58942},{\"end\":59255,\"start\":59243},{\"end\":59267,\"start\":59255},{\"end\":59568,\"start\":59553},{\"end\":59847,\"start\":59835},{\"end\":59860,\"start\":59847},{\"end\":60145,\"start\":60136},{\"end\":60422,\"start\":60408},{\"end\":60432,\"start\":60422},{\"end\":60607,\"start\":60596},{\"end\":60615,\"start\":60607}]", "bib_venue": "[{\"end\":46559,\"start\":46461},{\"end\":47200,\"start\":47111},{\"end\":47848,\"start\":47722},{\"end\":48392,\"start\":48316},{\"end\":48909,\"start\":48820},{\"end\":49418,\"start\":49350},{\"end\":49993,\"start\":49875},{\"end\":50585,\"start\":50484},{\"end\":51201,\"start\":51101},{\"end\":51843,\"start\":51737},{\"end\":52629,\"start\":52552},{\"end\":53105,\"start\":53031},{\"end\":53601,\"start\":53514},{\"end\":54298,\"start\":54225},{\"end\":54805,\"start\":54735},{\"end\":55316,\"start\":55201},{\"end\":55921,\"start\":55797},{\"end\":56542,\"start\":56436},{\"end\":57164,\"start\":57081},{\"end\":58494,\"start\":58404},{\"end\":45103,\"start\":45100},{\"end\":45561,\"start\":45443},{\"end\":45911,\"start\":45906},{\"end\":46074,\"start\":46043},{\"end\":46459,\"start\":46360},{\"end\":47109,\"start\":47025},{\"end\":47720,\"start\":47595},{\"end\":48314,\"start\":48242},{\"end\":48818,\"start\":48734},{\"end\":49348,\"start\":49265},{\"end\":49873,\"start\":49754},{\"end\":50482,\"start\":50384},{\"end\":51099,\"start\":51000},{\"end\":51735,\"start\":51630},{\"end\":52193,\"start\":52143},{\"end\":52550,\"start\":52477},{\"end\":53029,\"start\":52957},{\"end\":53512,\"start\":53430},{\"end\":53900,\"start\":53863},{\"end\":54223,\"start\":54151},{\"end\":54733,\"start\":54670},{\"end\":55199,\"start\":55097},{\"end\":55795,\"start\":55684},{\"end\":56434,\"start\":56327},{\"end\":57079,\"start\":57001},{\"end\":57548,\"start\":57524},{\"end\":57647,\"start\":57631},{\"end\":57859,\"start\":57846},{\"end\":58004,\"start\":57967},{\"end\":58402,\"start\":58321},{\"end\":58796,\"start\":58775},{\"end\":59007,\"start\":58954},{\"end\":59312,\"start\":59267},{\"end\":59616,\"start\":59568},{\"end\":59922,\"start\":59860},{\"end\":60207,\"start\":60145},{\"end\":60450,\"start\":60432}]"}}}, "year": 2023, "month": 12, "day": 17}