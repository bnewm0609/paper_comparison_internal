{"id": 14021296, "updated": "2023-11-07 14:55:47.15", "metadata": {"title": "Unsupervised neural network based feature extraction using weak top-down constraints", "authors": "[{\"first\":\"Herman\",\"last\":\"Kamper\",\"middle\":[]},{\"first\":\"Micha\",\"last\":\"Elsner\",\"middle\":[]},{\"first\":\"Aren\",\"last\":\"Jansen\",\"middle\":[]},{\"first\":\"Sharon\",\"last\":\"Goldwater\",\"middle\":[]}]", "venue": "2015 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)", "journal": "2015 IEEE International Conference on Acoustics, Speech and Signal Processing (ICASSP)", "publication_date": {"year": 2015, "month": null, "day": null}, "abstract": "Deep neural networks (DNNs) have become a standard component in supervised ASR, used in both data-driven feature extraction and acoustic modelling. Supervision is typically obtained from a forced alignment that provides phone class targets, requiring transcriptions and pronunciations. We propose a novel unsupervised DNN-based feature extractor that can be trained without these resources in zero-resource settings. Using unsupervised term discovery, we find pairs of isolated word examples of the same unknown type; these provide weak top-down supervision. For each pair, dynamic programming is used to align the feature frames of the two words. Matching frames are presented as input-output pairs to a deep autoencoder (AE) neural network. Using this AE as feature extractor in a word discrimination task, we achieve 64% relative improvement over a previous state-of-the-art system, 57% improvement relative to a bottom-up trained deep AE, and come to within 23% of a supervised system.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "1545920196", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icassp/KamperEJG15", "doi": "10.1109/icassp.2015.7179087"}}, "content": {"source": {"pdf_hash": "4445dedad74cd2078e4dc30ccda0ac0ae088c58f", "pdf_src": "ScienceParsePlus", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "http://www.cstr.ed.ac.uk/downloads/publications/2015/kamper+elsner+jansen+goldwater_icassp2015.pdf", "status": "GREEN"}}, "grobid": {"id": "36e2295f0091a0c49f42da672a578178d70659ad", "type": "plain-text", "url": "s3://ai2-s2-science-parse-plus-prod/parse-results/s2orc_worker/4445dedad74cd2078e4dc30ccda0ac0ae088c58f.txt", "contents": "\nEdinburgh Research Explorer Unsupervised neural network based feature extraction using weak top-down constraints\n\n\nHerman Kamper h.kamper@sms.ed.ac.uk \nCSTR\n\n\nILCC\nSchool of Informatics\nUniversity of Edinburgh\nUK\n\nMicha Elsner melsner@ling.osu.edu \nDepartment of Linguistics\nThe Ohio State University\nUSA\n\nAren Jansen \nHLTCOE and CLSP\nJohns Hopkins University\nUSA\n\nSharon Goldwater \nILCC\nSchool of Informatics\nUniversity of Edinburgh\nUK\n\nEdinburgh Research Explorer Unsupervised neural network based feature extraction using weak top-down constraints\n3DDD01AD9DF1F07C8E55CBE18C1DED0710.1109/ICASSP.2015.7179087Link to publication record in Edinburgh Research Explorer Document Version: Peer reviewed versionUnsupervised feature extractiondeep neural networkszero-resource speech processingtop-down constraints\nDeep neural networks (DNNs) have become a standard component in supervised ASR, used in both data-driven feature extraction and acoustic modelling.Supervision is typically obtained from a forced alignment that provides phone class targets, requiring transcriptions and pronunciations.We propose a novel unsupervised DNN-based feature extractor that can be trained without these resources in zeroresource settings.Using unsupervised term discovery, we find pairs of isolated word examples of the same unknown type; these provide weak top-down supervision.For each pair, dynamic programming is used to align the feature frames of the two words.Matching frames are presented as input-output pairs to a deep autoencoder (AE) neural network.Using this AE as feature extractor in a word discrimination task, we achieve 64% relative improvement over a previous stateof-the-art system, 57% improvement relative to a bottom-up trained deep AE, and come to within 23% of a supervised system.\n\nINTRODUCTION\n\nThe use of deep neural networks (DNNs) has recently led to great advances in supervised automatic speech recognition (ASR) [1,2].One view of these networks is that a deep feature extractor (often initialized using unsupervised pretraining) is learnt jointly with a supervised classifier, predicting phone classes in the case of ASR [3].Despite the resurgence of neural network (NN) research in the supervised domain, the use of NNs as feature extractors for unsupervised 'zero-resource' speech processing tasks has received little attention.\n\nZero-resource technology aims to solve tasks such as phonetic and lexical discovery [4,5], spoken document retrieval [6], and queryby-example search [7,8] by using only raw speech data.Advances in this area would enable technologies in languages where transcribed data collection is too expensive, or where it is impossible (e.g. for unwritten languages).The limited use of NNs in this domain is not surprising since, without transcriptions or dictionaries, it is impossible to obtain the phone class targets used for fine-tuning.Some [9,10] have considered unsupervised autoencoder NNs, but not explicitly for improved feature extraction.We present a novel training algorithm for deep networks in the zero-resource setting, employing a form of weak supervision with the purpose of unsupervised feature extraction.Since the aim is a better general representation of speech, our work is relevant to any downstream zero-resource task.\n\nThe weak top-down supervision we use is obtained from an unsupervised term discovery (UTD) algorithm, which finds reoccurring word-like patterns in a speech collection [11,12].Other zero-resource studies have also used such top-down constraints.In [13], 'pronunciations' for UTD-discovered words were obtained after a bottom-up tokenization of the speech into subword-like units.In [14], wholeword HMMs were trained on discovered words; similar HMM states were then clustered to automatically find subword unit models.When using these top-down constraints alone, only the discovered word examples are used for model estimation, and much data is disregarded.\n\nThis was addressed in [15].First, a Gaussian mixture model (GMM) is trained bottom-up on a speech corpus, providing a universal background model (UBM) that takes into account all data.UTD then finds reoccurring words in the corpus.For each pair of word segments of the same type, frames are aligned using dynamic time warping (DTW).Based on the idea that different realizations of the same word should have a similar underlying subword sequence, UBM components in matching frames are attributed to the same subword unit.The resulting partitioned UBM is a type of unsupervised acoustic model where every partition corresponds to a subword unit.In a multispeaker word discrimination task, posteriorgrams calculated over the partitioned UBM significantly outperformed the original features.\n\nAs in [15] (also in much earlier work [16], and very recently [17]), the central idea of our new NN-based algorithm is that aligned frames from different instances of the same word should contain information useful for finding a better feature representation.Using layer-wise pretraining of a stacked autoencoder (AE), our approach uses a large corpus of untranscribed speech to find a suitable initialization.As in [15], word pairs discovered using UTD are then DTW-aligned to obtain frame-level constraints, which are presented as input-output pairs to the AE.We refer to this NN, trained using weak top-down constraints, as a correspondence AE.We use this AE as an unsupervised feature extractor by taking the encoding from a middle layer.In a word discrimination task, we compare the new feature representation to the original input features, as well as features obtained from posteriorgrams over the partitioned UBM of [15].One shortcoming of [15] is that the UTD-step was simulated by using gold standard word pairs extracted from transcriptions; here we use a practical UTD system [12].Our results show that NN-based feature extraction, which has proven so advantageous in supervised ASR, can also result in major improvements in the extreme zero-resource case.\n\n\nUNSUPERVISED TRAINING ALGORITHM\n\nWe first present a concise overview of autoencoders (AEs) and how these can be used to initialize deep neural networks (DNNs).We then present the training algorithm of a correspondence AE, a neural network using weak top-down supervision in the form of word pairs obtained from an unsupervised term discovery (UTD) system.\n\n\nAutoencoders, pretraining and deep neural networks\n\nAn AE is a feedforward neural network where the target output of the network is equal to its input [18, \u00a74.6].A single-layer AE encodes its input x \u2208 R D to a hidden representation a \u2208 R D (0) using a = s(W (0) x + b (0) ), where W (0) is a weight matrix, b (0) is a bias vector, and s is a non-linear vector function (tanh in our case).\n\nThe output z \u2208 R D of the AE is obtained by decoding the hidden representation using z = W (1) a + b (1) .The network is trained using backpropagation to achieve a minimum reconstruction error, typically using the loss function ||x \u2212 z|| 2 when dealing with realvalued data.A deep network can be obtained by stacking several AEs, each AE-layer taking as input the encoding from the layer below it.This stacked AE is trained one layer at a time, each layer minimizing the loss of its output with respect to the original input x.AEs are often used for non-linear dimensionality reduction by having a hidden layer that is narrower than its input dimensionality [19].Although AEs with more hidden units than the input are in principle able to learn the identity function to achieve zero reconstruction error, [20] found that in practice such networks often still learn a useful representation since early stopping provides a form of regularization.In our own experiments, we found that such AEs provide a crucial initialization for our new AE-like network; our aim here is not dimensionality reduction, but to find a better feature representation.\n\nIn a supervised setting, training a stacked AE, as explained above, is one form of unsupervised pretraining of a NN.This is followed by supervised fine-tuning where an additional output layer is added to perform some supervised prediction task, resulting in a DNN [20].\n\n\nThe correspondence autoencoder\n\nHere we present the novel training algorithm for a NN which we call a correspondence autoencoder.While standard stacked AEs trained on speech (such as those of [9,10]) use the same feature frame(s) as input and output, the correspondence AE uses weak topdown constraints in the form of (discovered) word pairs to have input and output frames from different instances of the same word.The algorithm follows four steps, which are illustrated in Figure 1.\n\nStep 1: Train a stacked AE.A corpus of speech is parametrized into the set X = {x1, x2, . . ., xT }, where each xt \u2208 R D is the frame-level acoustic feature representation of the signal (e.g.MFCCs).Given X , a stacked AE is trained unsupervised directly on the acoustic features.Using this network as initialization for the correspondence AE, we are taking advantage of a large amount of untranscribed speech data to start at a point in weight space where the network provides a representation close to the acoustic features themselves.\n\nStep 2: Spoken term discovery.A UTD system is run on the speech corpus.This produces a collection of N word segment pairs, which we use as weak top-down constraints.In [14,15], this step was simulated by using gold standard word segment pairs extracted from transcriptions.We present experiments both when using gold standard word pairs and when using pairs obtained from UTD [12].\n\nStep 3: Align word pair frames.In the third step of the algorithm, the N word-level constraints from UTD are converted to frame-level constraints.For each word pair, a dynamic time warping (DTW) alignment [21] is performed using cosine distance as similarity metric to find a minimum-cost frame alignment between the two words.This is done for all N word pairs, and taken together provides a set F = {(xi, y i )} F i=1 of F frame-level constraints.Note that although each frame pair is unique, the time warping allowed in the alignment can result in the same frame occurring in multiple pairs.\n\nStep 4: Train the correspondence AE.Using the stacked AE from step 1 as initialization, the correspondence AE is trained on the framelevel pairs F. For every pair (xi, y i ), xi is presented as input to the network while y i is taken as output.The complete network is then trained using backpropagation.Although we refer to the resulting network as an autoencoder to emphasize the relationship between its input and output, it can also be described differently.Firstly, it can be seen as a type of denoising autoencoder [22], an AE were the input is corrupted by adding Gaussian noise or setting some inputs to zero; this allows more robust features to be learnt.In our case, the input xi can be seen as a corrupted version of output y i .Secondly, our network can also be described as a standard DNN with a linear output layer, initialized using layer-wise pretraining.Normally, the term DNN is associated with a supervised prediction task, and our network can be seen as predicting y i when presented with input xi.\n\nOur aim is to use the correspondence AE as an unsupervised feature extractor that provides better word-discrimination properties than the original features.To use it as such, the encoding obtained from one of its middle layers is finally taken as the feature representation of new input speech, as illustrated in the right-most block of Figure 1.\n\n\nEXPERIMENTS\n\n\nExperimental setup\n\nWe use data from the Switchboard corpus of English conversational telephone speech.Using HTK [23], data is parameterized as Melfrequency cepstral coefficients (MFCCs) with first and second order derivatives, yielding 39-dimensional feature vectors.Cepstral mean and variance normalization (CMVN) is applied per conversation side.\n\nFor training the stacked AE (step 1), 180 conversations are used which corresponds to about 23 hours of speech.This same set was used for UBM training in [15].For experiments using gold standard word pairs, we use the set used in [15] for partitioning the UBM; it consists of word segments of at least 5 characters and 0.5 seconds in duration extracted from a forced alignment of the transcriptions of the 23 hour training set.The full gold standard set consists of nearly N = 100k word segment pairs, comprised of about 105 minutes of speech.About 3% of these pairs are same-speaker word pairs.DTW alignment of the 100k pairs (step 3) provides a frame-level constraint set of about F = 7M frames, on which the correspondence AE is trained (step 4).In our truly unsupervised setup, we use word pairs discovered using the UTD system of [12].We consider two sets.The first consists of about N = 25k word pairs obtained by searching the above 23 hour training set.About 17% of these pairs are produced by the same speaker.The second set consists of about 80k pairs obtained by including an additional 180 conversations in the search.About 11% of these are same-speaker pairs.All NNs are trained with minibatch stochastic gradient descent using Pylearn2 [24].A batch size of 256 is used, with 30 epochs of pretraining (step 1) at a learning rate of 250 \u2022 10 \u22126 and 120 epochs of correspondence AE training (step 4) at a learning rate of 2 \u2022 10 \u22123 .Initially these parameters were set to the values given in [25], and were then adjusted based on training set loss function curves and development tests.Although it is common to use nine or eleven sliding frames as input to DNN ASR systems, we use single-frame input.This was also done in [10], and allows for fair comparison with previous work.However, multi-frame input is the focus of future work.\n\nOur goal is to show the suitability of features from the correspondence AE in downstream zero-resource search and recognition tasks.We therefore use a multi-speaker word discrimination task developed specifically for this purpose [26].The same-different task quantifies the ability of a speech representation to associate words of the same type and to discriminate between words of different types.For every word pair in a test set of pre-segmented words, the DTW distance is calculated using the feature representation under evaluation.Two words can then be classified as being of the same or different type based on some threshold, and a precision-recall curve is obtained by varying the threshold.To evaluate representations across different operating points, the area under the precision-recall curve is calculated to yield the final evaluation metric, referred to as the average precision (AP).In [26] perfect correlation was found between AP and phone error rate in a supervised setting, justifying it as an effective way to evaluate different representations of speech in unsupervised settings.\n\nWe use the same test set for the same-different task as that used in [15].It consists of about 11k word tokens drawn from a portion of Switchboard distinct from any of the above sets.The set results in 60.7M word pairs of which 96k are from the same word type.Of these 96k pairs, only about 3% were produced by the same speaker.Additionally, we also extracted a comparable 11k-token development set, again from a disjoint portion of Switchboard.Since tuning the hyperparameters of a NN is often an art, we present performance on the development set when varying some of these parameters.\n\nSince we share a common test setup, we can compare our feature representation directly to previous work.As a first baseline we use MFCCs directly to perform the same-different task.We then compare our model to the partitioned UBM of [15] (Section 1) and the supervised NN systems of [26].These single-layer multistream NNs were trained to estimate phone class posterior probabilities on transcribed speech data from the Switchboard and CallHome corpora, and have a comparable number of parameters to our networks.We consider systems trained on 10 and 100 hours of speech.For the partitioned UBM and NNs, test words are parameterized by generating posteriorgrams over components/phone classes, and symmetrized Kullback-Leibler divergence is used as frame-level metric for the same-different task.For MFCCs and our AE-based features, cosine distance is used.\n\n\nChoosing the network architecture\n\nChoosing the hyperparameters of NNs is challenging.We therefore describe the optimization process followed on the development data.\n\nTo use the correspondence AE as feature extractor, the encoding from one of its middle layers is taken.We found that using features from between the fourth-last to second-last encoding layers gave robust performance.It is common practice to use a narrow bottleneck layer to force the network to learn a lower-dimensional encoding at a particular layer.We experimented with this, but found that performance was similar or slightly worse in most cases and therefore decided to only vary the number of hidden layers and units.\n\nWe experimented with correspondence AEs ranging from 3 to 21 hidden layers with 50, 100 and 150 hidden units per layer trained on the 100k gold standard word-pair set.AP performance on the development set is presented in Figure 2. On this set, all networks achieve performance greater than that of the input MFCCs.For all three hidden unit settings, performance is within 12% relative to the respective optimal settings for networks with 7 to 21 layers.\n\n\nGold standard weak top-down constraints\n\nTable 1 shows the AP performance on the test set using the baseline MFCCs, the UBM models from [15], our AE networks, and the supervised NNs from [26].The partitioned UBM and the correspondence AE were both trained on the gold standard 100k word-pair set.The optimal AE network on the development set (Figure 2) was used.\n\nAs reported before, although the UBM alone does not yield significant gains, the 100-component partitioned UBM results in a 34% relative improvement over the baseline MFCCs.Analogous to the UBM, the stacked AE alone also produces no improvement over the MFCCs.This contrasts with the results reported in [10], where small improvements were obtained.However, [10] used much smaller training and test sets, had a different training setup, and had the explicit aim of tokenizing speech into subword-like units rather than unsupervised feature extraction.\n\nWithout initializing the weights from the stacked AE, very poor performance is achieved by the correspondence AE (0.024 AP).However, when pretraining is used, the resulting correspondence AE Table 1.Average precision (AP) on the test set using MFCCs, the UBM and partitioned UBM, the stacked and correspondence AEs trained on the 100k gold standard word pairs, and supervised NNs.\n\n\nFeatures\n\nAP MFCC with CMVN 0.214 UBM with 1024 components [15] 0.222 1024-UBM partitioned into 100 components [15] 0.286 100-unit, 13-layer stacked AE 0.215 100-unit, 13-layer correspondence AE, no pretraining 0.024 100-unit, 13-layer correspondence AE, pretraining 0.469 English NN, 10 hours [26] 0.439 English NN, 100 hours [26] 0.516 outperforms the partitioned UBM by 64% relative, and more than doubles the performance of the original MFCC features.This improvement of the correspondence AE (0.469 AP) over the partitioned UBM (0.286), both using exactly the same weak form of supervision, indicates that the NN is much better able to exploit the information gained from the top-down constraints than the GMM-based model.The correspondence AE also outperforms the 10-hour supervised NN on this task, and comes close to the level of the 100-hour system.Since we use gold standard word pairs here comprised of only 105 minutes of speech, these results are potentially significant from a lowresource perspective.Although these improvements are surprising, the form of explicit pair-wise supervision provided to the correspondence AE is closely related to the word discrimination task.Further investigation of these observations is the focus of future work.\n\nAs in [15], to investigate dependence on the amount of supervision, we varied the number of gold standard word-pair constraints N = 100k, 10k, 1k and 100 by taking random subsets of the full 100k set; consequently, the number of frame-level constraints F is varied.Results are shown in Table 2.For every set, the correspondence AE was optimized on the development data.In all cases the correspondence AE outperforms the partitioned UBM and the baseline MFCCs.With as few as 1k pairs, the correspondence AE gives the same performance as the partitioned UBM trained with all pairs.\n\n\nUnsupervised term discovery weak top-down constraints\n\nFinally, we present truly unsupervised results where an UTD system [12] is used to provide the word pairs for weak supervision.Results are shown in Table 3, with some baselines repeated from Table 1.Two UTD runs are used (Section 3.1), and Table 1 includes their pair-wise accuracies.The first produced 25k word pairs at an accuracy of 46%, while the second produced 80k pairs at 36%.Correspondence AEs were trained separately on the two sets of weak top-down constraints, with each optimized on the development data.\n\nBoth correspondence AEs significantly outperform the MFCCs  1) relative to the best unsupervised correspondence AE (0.341 AP, Table 3), indicates that the noise introduced by the true UTD-step results in a penalty of 34%; the correspondence AE nevertheless provides a better representation than the other unsupervised baselines.It is unclear if the same will hold for the previous models [14,15] where the truly zero-resource case was not considered.A comparison of the two correspondence AEs in Table 3 shows that, despite using significantly more pairs and allowing a deeper network to be trained, the 80k set does not provide a major improvement over the 25k set.This is attributed to the lower word-pair accuracy of the former, and shows that there is a trade-off between UTD accuracy and the number of pairs produced.Compared to the analysis in Table 2, the 25k unsupervised-obtained pairs still provide more useful supervision than 1k gold standard word pairs.A finer grained investigation of the trade-off between word pairs and accuracy, which can be varied by searching more data or by adjusting the search threshold, is the focus of future work.\n\n\nCONCLUSIONS AND FUTURE WORK\n\nWe introduced a novel scheme for training an unsupervised autoencoder (AE) neural network feature extractor, which uses weak topdown supervision from word pairs obtained using an unsupervised term discovery (UTD) system.We evaluated this correspondence AE in a word discrimination task designed for comparing feature representations in zero-resource settings.In experiments where gold standard word pairs from transcriptions were used for weak supervision, we showed that our proposed AE gives a 64% relative improvement over previously reported results using the same test setup.In our own truly unsupervised setup where UTD was used to provide the weak topdown constraints, our network outperformed both baseline MFCCs and a standard stacked AE by more than 57%, coming to within 23% of a supervised system trained on 10 hours of transcribed speech.We conclude that the correspondence AE could greatly benefit downstream zero-resource tasks where transcriptions and dictionaries are not available for system development.Future work will include using the AE feature extractor to improve UTD accuracy, which in turn can improve the weak top-down constraints, and so forth.We also aim to explore the suitability of our AE feature extractor for supervised ASR.\n\nFig. 1 .\n1\nFig. 1.Algorithm schematic for training the correspondence autoencoder for unsupervised feature extraction.\n\n\nFig. 2 .\n2\nFig.2.Average precision (AP) on the development set for correspondence AEs with varying numbers of hidden layers and units.In each case the best hidden layer on the development set was used.\n\n\nTable 2 .\n2\nAverage precision (AP) on the test set using the partitioned UBM and correspondence AEs when varying the number of gold standard word pairs N , with F the resulting number of frame pairs.\nNFPartitioned UBM AP [15]Correspondence AE AP10 5 7 \u2022 10 60.2860.46910 4 7 \u2022 10 50.2840.38510 3 7 \u2022 10 40.2660.28610 2 7 \u2022 10 30.2060.259\n\nTable 3 .\n3\nAverage precision (AP) on the test set when using weak topdown constraints from unsupervised term discovery (UTD).The number of word pairs N and accuracy of the UTD system is also shown.\nFeaturesNUTD Acc.APMFCC with CMVN--0.214100-unit, 13-layer stacked AE--0.215100-unit, 9-layer correspond. AE 25k46%0.339100-unit, 13-layer correspond. AE 80k36%0.341English NN, 10 hours [26]--0.439English NN, 100 hours [26]--0.516and stacked AE baselines by more than 57% relative in AP, comingto within 23% of the 10-hour supervised NN baseline. Compared tothe partitioned UBM trained on 100k gold standard word pairs (0.286AP,\n\nTable 1 )\n1\n, the completely unsupervised correspondence AEs still perform better by almost 19%, despite the much noisier form of weak supervision.Performance of the best correspondence AE from the gold standard word-pair case (0.469 AP, Table\n\nAcknowledgements.We would like to thank Pawel Swietojanski, Liang Lu, Simon King and Daniel Renshaw for helpful discussions.\nContext-dependent pre-trained deep neural networks for large-vocabulary speech recognition. G E Dahl, D Yu, L Deng, A Acero, IEEE Trans. Audio, Speech, Language Process. 2012012\n\nDeep neural networks for acoustic modeling in speech recognition: The shared views of four research groups. G Hinton, L Deng, D Yu, G E Dahl, A.-R Mohamed, N Jaitly, A Senior, V Vanhoucke, P Nguyen, T N Sainath, B Kingsbury, IEEE Signal Process. Mag. 2962012\n\nFeature learning in deep neural networks -studies on speech recognition. D Yu, M Seltzer, J Li, J.-T Huang, F Seide, Proc. ICLR. ICLR2013\n\nTowards spoken term discovery at scale with zero resources. A Jansen, K Church, H Hermansky, Proc. Interspeech. Interspeech2010\n\nA nonparametric Bayesian approach to acoustic model discovery. C Lee, J R Glass, Proc. ACL. ACL2012\n\nUnsupervised training of an HMM-based speech recognizer for topic classification. H Gish, M.-H Siu, A Chan, B Belfield, Proc. Interspeech. Interspeech2009\n\nUnsupervised spoken keyword spotting via segmental DTW on Gaussian posteriorgrams. Y Zhang, J R Glass, Proc. ASRU. ASRU2009\n\nThe spoken web search task at MediaEval 2012. F Metze, X Anguera, E Barnard, M Davel, G Gravier, Proc. ICASSP. ICASSP2013\n\nOn rectified linear units for speech processing. M D Zeiler, M Ranzato, R Monga, M Mao, K Yang, Q V Le, P Nguyen, A Senior, V Vanhoucke, J Dean, G E Hinton, Proc. ICASSP. ICASSP2013\n\nAn autoencoder based approach to unsupervised learning of subword units. L Badino, C Canevari, L Fadiga, G Metta, Proc. ICASSP. ICASSP2014\n\nUnsupervised word acquisition from speech using pattern discovery. A Park, J R Glass, Proc. ICASSP. ICASSP2006\n\nEfficient spoken term discovery using randomized algorithms. A Jansen, B Van Durme, Proc. ASRU. ASRU2011\n\nA hierarchical system for word discovery exploiting DTW-based initialization. O Walter, T R Haeb-Umbach, B Raj, Proc. ASRU. ASRU2013\n\nTowards unsupervised training of speaker independent acoustic models. A Jansen, K Church, Proc. Interspeech. Interspeech2011\n\nWeak top-down constraints for unsupervised acoustic model training. A Jansen, S Thomas, H Hermansky, Proc. ICASSP. ICASSP2013\n\nAn investigation of PLP and IMELDA acoustic representations and of their potential for combination. M Hunt, S M Richardson, D C Bateman, A Piau, Proc. ICASSP. ICASSP1991\n\nPhonetics embedding learning with side information. G Synnaeve1, T Schatz, E Dupoux, Proc. SLT. SLT2014\n\nLearning deep architectures for AI. Y Bengio, Found. Trends Mach. Learning. 212009\n\nReducing the dimensionality of data with neural networks. G E Hinton, R R Salakhutdinov, Science. 31357862006\n\nGreedy layer-wise training of deep networks. Y Bengio, P Lamblin, D Popovici, H Larochelle, Proc. NIPS. NIPS2007\n\nDynamic programming algorithm optimization for spoken word recognition. H Sakoe, S Chiba, IEEE Trans. Acoust., Speech, Signal Process. 2611978\n\nExtracting and composing robust features with denoising autoencoders. P Vincent, H Larochelle, Y Bengio, P.-A Manzagol, Proc. ICML. ICML2008\n\n. S J Young, G Evermann, M J F Gales, T Hain, D Kershaw, X Liu, G L Moore, J J Odell, D Ollason, D Povey, V Valtchev, P C Woodland, 2009The HTK BookCambridge University Engineering Department\n\nPylearn2: a machine learning research library. I J Goodfellow, D Warde-Farley, P Lamblin, V Dumoulin, M Mirza, R Pascanu, J Bergstra, F Bastien, Y Bengio, arXiv:1308.42142013\n\nRecurrent deep neural networks for robust speech recognition. C Weng, D Yu, S Watanabe, B.-H Juang, Proc. ICASSP. ICASSP2014\n\nRapid evaluation of speech representations for spoken term discovery. M A Carlin, S Thomas, A Jansen, H Hermansky, Proc. Interspeech. Interspeech2011\n", "annotations": {"author": "[{\"end\":214,\"start\":116},{\"end\":306,\"start\":215},{\"end\":365,\"start\":307},{\"end\":438,\"start\":366}]", "publisher": null, "author_last_name": "[{\"end\":129,\"start\":123},{\"end\":227,\"start\":221},{\"end\":318,\"start\":312},{\"end\":382,\"start\":373}]", "author_first_name": "[{\"end\":122,\"start\":116},{\"end\":220,\"start\":215},{\"end\":311,\"start\":307},{\"end\":372,\"start\":366}]", "author_affiliation": "[{\"end\":158,\"start\":153},{\"end\":213,\"start\":160},{\"end\":305,\"start\":250},{\"end\":364,\"start\":320},{\"end\":437,\"start\":384}]", "title": "[{\"end\":113,\"start\":1},{\"end\":551,\"start\":439}]", "venue": null, "abstract": "[{\"end\":1792,\"start\":811}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":1934,\"start\":1931},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":1936,\"start\":1934},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2143,\"start\":2140},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2438,\"start\":2435},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2440,\"start\":2438},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":2471,\"start\":2468},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2503,\"start\":2500},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":2505,\"start\":2503},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2889,\"start\":2886},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2892,\"start\":2889},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3457,\"start\":3453},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3460,\"start\":3457},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3537,\"start\":3533},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":3671,\"start\":3667},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":3970,\"start\":3966},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4743,\"start\":4739},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4775,\"start\":4771},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4799,\"start\":4795},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5153,\"start\":5149},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5661,\"start\":5657},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":5685,\"start\":5681},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":5825,\"start\":5821},{\"end\":6523,\"start\":6513},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":7415,\"start\":7411},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7562,\"start\":7558},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8166,\"start\":8162},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":8365,\"start\":8362},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":8368,\"start\":8365},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":9366,\"start\":9362},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":9369,\"start\":9366},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9574,\"start\":9570},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9786,\"start\":9782},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":10696,\"start\":10692},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11671,\"start\":11667},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":12063,\"start\":12059},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":12139,\"start\":12135},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":12744,\"start\":12740},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":13159,\"start\":13155},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13412,\"start\":13408},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":13642,\"start\":13638},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":13985,\"start\":13981},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":14657,\"start\":14653},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":14927,\"start\":14923},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":15680,\"start\":15676},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":15730,\"start\":15726},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":17591,\"start\":17587},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":17642,\"start\":17638},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":18123,\"start\":18119},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":18177,\"start\":18173},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":18814,\"start\":18810},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":18866,\"start\":18862},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":19049,\"start\":19045},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":19082,\"start\":19078},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":20022,\"start\":20018},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":20720,\"start\":20716},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":21560,\"start\":21556},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":21563,\"start\":21560}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":23735,\"start\":23615},{\"attributes\":{\"id\":\"fig_1\"},\"end\":23939,\"start\":23736},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":24278,\"start\":23940},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":24907,\"start\":24279},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":25153,\"start\":24908}]", "paragraph": "[{\"end\":2349,\"start\":1808},{\"end\":3283,\"start\":2351},{\"end\":3942,\"start\":3285},{\"end\":4731,\"start\":3944},{\"end\":6001,\"start\":4733},{\"end\":6359,\"start\":6037},{\"end\":6751,\"start\":6414},{\"end\":7896,\"start\":6753},{\"end\":8167,\"start\":7898},{\"end\":8654,\"start\":8202},{\"end\":9192,\"start\":8656},{\"end\":9575,\"start\":9194},{\"end\":10170,\"start\":9577},{\"end\":11189,\"start\":10172},{\"end\":11537,\"start\":11191},{\"end\":11903,\"start\":11574},{\"end\":13749,\"start\":11905},{\"end\":14852,\"start\":13751},{\"end\":15441,\"start\":14854},{\"end\":16299,\"start\":15443},{\"end\":16468,\"start\":16337},{\"end\":16993,\"start\":16470},{\"end\":17448,\"start\":16995},{\"end\":17813,\"start\":17492},{\"end\":18366,\"start\":17815},{\"end\":18748,\"start\":18368},{\"end\":20010,\"start\":18761},{\"end\":20591,\"start\":20012},{\"end\":21166,\"start\":20649},{\"end\":22323,\"start\":21168},{\"end\":23614,\"start\":22355},{\"end\":23734,\"start\":23627},{\"end\":23938,\"start\":23748},{\"end\":24140,\"start\":23953},{\"end\":24478,\"start\":24292},{\"end\":25152,\"start\":24921}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":17499,\"start\":17498},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":18566,\"start\":18565},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":20305,\"start\":20304},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":20804,\"start\":20803},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":20847,\"start\":20846},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":20896,\"start\":20895},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":21229,\"start\":21228},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":21301,\"start\":21300},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":21671,\"start\":21670}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1806,\"start\":1794},{\"attributes\":{\"n\":\"2.\"},\"end\":6035,\"start\":6004},{\"attributes\":{\"n\":\"2.1.\"},\"end\":6412,\"start\":6362},{\"attributes\":{\"n\":\"2.2.\"},\"end\":8200,\"start\":8170},{\"attributes\":{\"n\":\"3.\"},\"end\":11551,\"start\":11540},{\"attributes\":{\"n\":\"3.1.\"},\"end\":11572,\"start\":11554},{\"attributes\":{\"n\":\"3.2.\"},\"end\":16335,\"start\":16302},{\"attributes\":{\"n\":\"3.3.\"},\"end\":17490,\"start\":17451},{\"end\":18759,\"start\":18751},{\"attributes\":{\"n\":\"3.4.\"},\"end\":20647,\"start\":20594},{\"attributes\":{\"n\":\"4.\"},\"end\":22353,\"start\":22326},{\"end\":23624,\"start\":23616},{\"end\":23745,\"start\":23737},{\"end\":23950,\"start\":23941},{\"end\":24289,\"start\":24280},{\"end\":24918,\"start\":24909}]", "table": "[{\"end\":24278,\"start\":24141},{\"end\":24907,\"start\":24479}]", "figure_caption": "[{\"end\":23735,\"start\":23626},{\"end\":23939,\"start\":23747},{\"end\":24141,\"start\":23952},{\"end\":24479,\"start\":24291},{\"end\":25153,\"start\":24920}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":8653,\"start\":8652},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11536,\"start\":11535},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":17224,\"start\":17223},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":17802,\"start\":17801}]", "bib_author_first_name": "[{\"end\":25372,\"start\":25371},{\"end\":25374,\"start\":25373},{\"end\":25382,\"start\":25381},{\"end\":25388,\"start\":25387},{\"end\":25396,\"start\":25395},{\"end\":25567,\"start\":25566},{\"end\":25577,\"start\":25576},{\"end\":25585,\"start\":25584},{\"end\":25591,\"start\":25590},{\"end\":25593,\"start\":25592},{\"end\":25604,\"start\":25600},{\"end\":25615,\"start\":25614},{\"end\":25625,\"start\":25624},{\"end\":25635,\"start\":25634},{\"end\":25648,\"start\":25647},{\"end\":25658,\"start\":25657},{\"end\":25660,\"start\":25659},{\"end\":25671,\"start\":25670},{\"end\":25792,\"start\":25791},{\"end\":25798,\"start\":25797},{\"end\":25809,\"start\":25808},{\"end\":25818,\"start\":25814},{\"end\":25827,\"start\":25826},{\"end\":25918,\"start\":25917},{\"end\":25928,\"start\":25927},{\"end\":25938,\"start\":25937},{\"end\":26050,\"start\":26049},{\"end\":26057,\"start\":26056},{\"end\":26059,\"start\":26058},{\"end\":26170,\"start\":26169},{\"end\":26181,\"start\":26177},{\"end\":26188,\"start\":26187},{\"end\":26196,\"start\":26195},{\"end\":26327,\"start\":26326},{\"end\":26336,\"start\":26335},{\"end\":26338,\"start\":26337},{\"end\":26415,\"start\":26414},{\"end\":26424,\"start\":26423},{\"end\":26435,\"start\":26434},{\"end\":26446,\"start\":26445},{\"end\":26455,\"start\":26454},{\"end\":26541,\"start\":26540},{\"end\":26543,\"start\":26542},{\"end\":26553,\"start\":26552},{\"end\":26564,\"start\":26563},{\"end\":26573,\"start\":26572},{\"end\":26580,\"start\":26579},{\"end\":26588,\"start\":26587},{\"end\":26590,\"start\":26589},{\"end\":26596,\"start\":26595},{\"end\":26606,\"start\":26605},{\"end\":26616,\"start\":26615},{\"end\":26629,\"start\":26628},{\"end\":26637,\"start\":26636},{\"end\":26639,\"start\":26638},{\"end\":26748,\"start\":26747},{\"end\":26758,\"start\":26757},{\"end\":26770,\"start\":26769},{\"end\":26780,\"start\":26779},{\"end\":26882,\"start\":26881},{\"end\":26890,\"start\":26889},{\"end\":26892,\"start\":26891},{\"end\":26988,\"start\":26987},{\"end\":26998,\"start\":26997},{\"end\":27111,\"start\":27110},{\"end\":27121,\"start\":27120},{\"end\":27123,\"start\":27122},{\"end\":27138,\"start\":27137},{\"end\":27237,\"start\":27236},{\"end\":27247,\"start\":27246},{\"end\":27361,\"start\":27360},{\"end\":27371,\"start\":27370},{\"end\":27381,\"start\":27380},{\"end\":27520,\"start\":27519},{\"end\":27528,\"start\":27527},{\"end\":27530,\"start\":27529},{\"end\":27544,\"start\":27543},{\"end\":27546,\"start\":27545},{\"end\":27557,\"start\":27556},{\"end\":27643,\"start\":27642},{\"end\":27656,\"start\":27655},{\"end\":27666,\"start\":27665},{\"end\":27732,\"start\":27731},{\"end\":27838,\"start\":27837},{\"end\":27840,\"start\":27839},{\"end\":27850,\"start\":27849},{\"end\":27852,\"start\":27851},{\"end\":27936,\"start\":27935},{\"end\":27946,\"start\":27945},{\"end\":27957,\"start\":27956},{\"end\":27969,\"start\":27968},{\"end\":28077,\"start\":28076},{\"end\":28086,\"start\":28085},{\"end\":28219,\"start\":28218},{\"end\":28230,\"start\":28229},{\"end\":28244,\"start\":28243},{\"end\":28257,\"start\":28253},{\"end\":28293,\"start\":28292},{\"end\":28295,\"start\":28294},{\"end\":28304,\"start\":28303},{\"end\":28316,\"start\":28315},{\"end\":28320,\"start\":28317},{\"end\":28329,\"start\":28328},{\"end\":28337,\"start\":28336},{\"end\":28348,\"start\":28347},{\"end\":28355,\"start\":28354},{\"end\":28357,\"start\":28356},{\"end\":28366,\"start\":28365},{\"end\":28368,\"start\":28367},{\"end\":28377,\"start\":28376},{\"end\":28388,\"start\":28387},{\"end\":28397,\"start\":28396},{\"end\":28409,\"start\":28408},{\"end\":28411,\"start\":28410},{\"end\":28531,\"start\":28530},{\"end\":28533,\"start\":28532},{\"end\":28547,\"start\":28546},{\"end\":28563,\"start\":28562},{\"end\":28574,\"start\":28573},{\"end\":28586,\"start\":28585},{\"end\":28595,\"start\":28594},{\"end\":28606,\"start\":28605},{\"end\":28618,\"start\":28617},{\"end\":28629,\"start\":28628},{\"end\":28722,\"start\":28721},{\"end\":28730,\"start\":28729},{\"end\":28736,\"start\":28735},{\"end\":28751,\"start\":28747},{\"end\":28856,\"start\":28855},{\"end\":28858,\"start\":28857},{\"end\":28868,\"start\":28867},{\"end\":28878,\"start\":28877},{\"end\":28888,\"start\":28887}]", "bib_author_last_name": "[{\"end\":25379,\"start\":25375},{\"end\":25385,\"start\":25383},{\"end\":25393,\"start\":25389},{\"end\":25402,\"start\":25397},{\"end\":25574,\"start\":25568},{\"end\":25582,\"start\":25578},{\"end\":25588,\"start\":25586},{\"end\":25598,\"start\":25594},{\"end\":25612,\"start\":25605},{\"end\":25622,\"start\":25616},{\"end\":25632,\"start\":25626},{\"end\":25645,\"start\":25636},{\"end\":25655,\"start\":25649},{\"end\":25668,\"start\":25661},{\"end\":25681,\"start\":25672},{\"end\":25795,\"start\":25793},{\"end\":25806,\"start\":25799},{\"end\":25812,\"start\":25810},{\"end\":25824,\"start\":25819},{\"end\":25833,\"start\":25828},{\"end\":25925,\"start\":25919},{\"end\":25935,\"start\":25929},{\"end\":25948,\"start\":25939},{\"end\":26054,\"start\":26051},{\"end\":26065,\"start\":26060},{\"end\":26175,\"start\":26171},{\"end\":26185,\"start\":26182},{\"end\":26193,\"start\":26189},{\"end\":26205,\"start\":26197},{\"end\":26333,\"start\":26328},{\"end\":26344,\"start\":26339},{\"end\":26421,\"start\":26416},{\"end\":26432,\"start\":26425},{\"end\":26443,\"start\":26436},{\"end\":26452,\"start\":26447},{\"end\":26463,\"start\":26456},{\"end\":26550,\"start\":26544},{\"end\":26561,\"start\":26554},{\"end\":26570,\"start\":26565},{\"end\":26577,\"start\":26574},{\"end\":26585,\"start\":26581},{\"end\":26593,\"start\":26591},{\"end\":26603,\"start\":26597},{\"end\":26613,\"start\":26607},{\"end\":26626,\"start\":26617},{\"end\":26634,\"start\":26630},{\"end\":26646,\"start\":26640},{\"end\":26755,\"start\":26749},{\"end\":26767,\"start\":26759},{\"end\":26777,\"start\":26771},{\"end\":26786,\"start\":26781},{\"end\":26887,\"start\":26883},{\"end\":26898,\"start\":26893},{\"end\":26995,\"start\":26989},{\"end\":27008,\"start\":26999},{\"end\":27118,\"start\":27112},{\"end\":27135,\"start\":27124},{\"end\":27142,\"start\":27139},{\"end\":27244,\"start\":27238},{\"end\":27254,\"start\":27248},{\"end\":27368,\"start\":27362},{\"end\":27378,\"start\":27372},{\"end\":27391,\"start\":27382},{\"end\":27525,\"start\":27521},{\"end\":27541,\"start\":27531},{\"end\":27554,\"start\":27547},{\"end\":27562,\"start\":27558},{\"end\":27653,\"start\":27644},{\"end\":27663,\"start\":27657},{\"end\":27673,\"start\":27667},{\"end\":27739,\"start\":27733},{\"end\":27847,\"start\":27841},{\"end\":27866,\"start\":27853},{\"end\":27943,\"start\":27937},{\"end\":27954,\"start\":27947},{\"end\":27966,\"start\":27958},{\"end\":27980,\"start\":27970},{\"end\":28083,\"start\":28078},{\"end\":28092,\"start\":28087},{\"end\":28227,\"start\":28220},{\"end\":28241,\"start\":28231},{\"end\":28251,\"start\":28245},{\"end\":28266,\"start\":28258},{\"end\":28301,\"start\":28296},{\"end\":28313,\"start\":28305},{\"end\":28326,\"start\":28321},{\"end\":28334,\"start\":28330},{\"end\":28345,\"start\":28338},{\"end\":28352,\"start\":28349},{\"end\":28363,\"start\":28358},{\"end\":28374,\"start\":28369},{\"end\":28385,\"start\":28378},{\"end\":28394,\"start\":28389},{\"end\":28406,\"start\":28398},{\"end\":28420,\"start\":28412},{\"end\":28544,\"start\":28534},{\"end\":28560,\"start\":28548},{\"end\":28571,\"start\":28564},{\"end\":28583,\"start\":28575},{\"end\":28592,\"start\":28587},{\"end\":28603,\"start\":28596},{\"end\":28615,\"start\":28607},{\"end\":28626,\"start\":28619},{\"end\":28636,\"start\":28630},{\"end\":28727,\"start\":28723},{\"end\":28733,\"start\":28731},{\"end\":28745,\"start\":28737},{\"end\":28757,\"start\":28752},{\"end\":28865,\"start\":28859},{\"end\":28875,\"start\":28869},{\"end\":28885,\"start\":28879},{\"end\":28898,\"start\":28889}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":14862572},\"end\":25456,\"start\":25279},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":58623492},\"end\":25716,\"start\":25458},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":6688465},\"end\":25855,\"start\":25718},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":7427096},\"end\":25984,\"start\":25857},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":5967419},\"end\":26085,\"start\":25986},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":12065880},\"end\":26241,\"start\":26087},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":5866530},\"end\":26366,\"start\":26243},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":62400156},\"end\":26489,\"start\":26368},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":5732528},\"end\":26672,\"start\":26491},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":11231368},\"end\":26812,\"start\":26674},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":6591387},\"end\":26924,\"start\":26814},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":17498735},\"end\":27030,\"start\":26926},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":11851688},\"end\":27164,\"start\":27032},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":16979706},\"end\":27290,\"start\":27166},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":824237},\"end\":27417,\"start\":27292},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":62757775},\"end\":27588,\"start\":27419},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2645231},\"end\":27693,\"start\":27590},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":207178999},\"end\":27777,\"start\":27695},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":262637400},\"end\":27888,\"start\":27779},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":14201947},\"end\":28002,\"start\":27890},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":17900407},\"end\":28146,\"start\":28004},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":207168299},\"end\":28288,\"start\":28148},{\"attributes\":{\"id\":\"b22\"},\"end\":28481,\"start\":28290},{\"attributes\":{\"doi\":\"arXiv:1308.4214\",\"id\":\"b23\"},\"end\":28657,\"start\":28483},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":14635987},\"end\":28783,\"start\":28659},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":12998642},\"end\":28934,\"start\":28785}]", "bib_title": "[{\"end\":25369,\"start\":25279},{\"end\":25564,\"start\":25458},{\"end\":25789,\"start\":25718},{\"end\":25915,\"start\":25857},{\"end\":26047,\"start\":25986},{\"end\":26167,\"start\":26087},{\"end\":26324,\"start\":26243},{\"end\":26412,\"start\":26368},{\"end\":26538,\"start\":26491},{\"end\":26745,\"start\":26674},{\"end\":26879,\"start\":26814},{\"end\":26985,\"start\":26926},{\"end\":27108,\"start\":27032},{\"end\":27234,\"start\":27166},{\"end\":27358,\"start\":27292},{\"end\":27517,\"start\":27419},{\"end\":27640,\"start\":27590},{\"end\":27729,\"start\":27695},{\"end\":27835,\"start\":27779},{\"end\":27933,\"start\":27890},{\"end\":28074,\"start\":28004},{\"end\":28216,\"start\":28148},{\"end\":28719,\"start\":28659},{\"end\":28853,\"start\":28785}]", "bib_author": "[{\"end\":25381,\"start\":25371},{\"end\":25387,\"start\":25381},{\"end\":25395,\"start\":25387},{\"end\":25404,\"start\":25395},{\"end\":25576,\"start\":25566},{\"end\":25584,\"start\":25576},{\"end\":25590,\"start\":25584},{\"end\":25600,\"start\":25590},{\"end\":25614,\"start\":25600},{\"end\":25624,\"start\":25614},{\"end\":25634,\"start\":25624},{\"end\":25647,\"start\":25634},{\"end\":25657,\"start\":25647},{\"end\":25670,\"start\":25657},{\"end\":25683,\"start\":25670},{\"end\":25797,\"start\":25791},{\"end\":25808,\"start\":25797},{\"end\":25814,\"start\":25808},{\"end\":25826,\"start\":25814},{\"end\":25835,\"start\":25826},{\"end\":25927,\"start\":25917},{\"end\":25937,\"start\":25927},{\"end\":25950,\"start\":25937},{\"end\":26056,\"start\":26049},{\"end\":26067,\"start\":26056},{\"end\":26177,\"start\":26169},{\"end\":26187,\"start\":26177},{\"end\":26195,\"start\":26187},{\"end\":26207,\"start\":26195},{\"end\":26335,\"start\":26326},{\"end\":26346,\"start\":26335},{\"end\":26423,\"start\":26414},{\"end\":26434,\"start\":26423},{\"end\":26445,\"start\":26434},{\"end\":26454,\"start\":26445},{\"end\":26465,\"start\":26454},{\"end\":26552,\"start\":26540},{\"end\":26563,\"start\":26552},{\"end\":26572,\"start\":26563},{\"end\":26579,\"start\":26572},{\"end\":26587,\"start\":26579},{\"end\":26595,\"start\":26587},{\"end\":26605,\"start\":26595},{\"end\":26615,\"start\":26605},{\"end\":26628,\"start\":26615},{\"end\":26636,\"start\":26628},{\"end\":26648,\"start\":26636},{\"end\":26757,\"start\":26747},{\"end\":26769,\"start\":26757},{\"end\":26779,\"start\":26769},{\"end\":26788,\"start\":26779},{\"end\":26889,\"start\":26881},{\"end\":26900,\"start\":26889},{\"end\":26997,\"start\":26987},{\"end\":27010,\"start\":26997},{\"end\":27120,\"start\":27110},{\"end\":27137,\"start\":27120},{\"end\":27144,\"start\":27137},{\"end\":27246,\"start\":27236},{\"end\":27256,\"start\":27246},{\"end\":27370,\"start\":27360},{\"end\":27380,\"start\":27370},{\"end\":27393,\"start\":27380},{\"end\":27527,\"start\":27519},{\"end\":27543,\"start\":27527},{\"end\":27556,\"start\":27543},{\"end\":27564,\"start\":27556},{\"end\":27655,\"start\":27642},{\"end\":27665,\"start\":27655},{\"end\":27675,\"start\":27665},{\"end\":27741,\"start\":27731},{\"end\":27849,\"start\":27837},{\"end\":27868,\"start\":27849},{\"end\":27945,\"start\":27935},{\"end\":27956,\"start\":27945},{\"end\":27968,\"start\":27956},{\"end\":27982,\"start\":27968},{\"end\":28085,\"start\":28076},{\"end\":28094,\"start\":28085},{\"end\":28229,\"start\":28218},{\"end\":28243,\"start\":28229},{\"end\":28253,\"start\":28243},{\"end\":28268,\"start\":28253},{\"end\":28303,\"start\":28292},{\"end\":28315,\"start\":28303},{\"end\":28328,\"start\":28315},{\"end\":28336,\"start\":28328},{\"end\":28347,\"start\":28336},{\"end\":28354,\"start\":28347},{\"end\":28365,\"start\":28354},{\"end\":28376,\"start\":28365},{\"end\":28387,\"start\":28376},{\"end\":28396,\"start\":28387},{\"end\":28408,\"start\":28396},{\"end\":28422,\"start\":28408},{\"end\":28546,\"start\":28530},{\"end\":28562,\"start\":28546},{\"end\":28573,\"start\":28562},{\"end\":28585,\"start\":28573},{\"end\":28594,\"start\":28585},{\"end\":28605,\"start\":28594},{\"end\":28617,\"start\":28605},{\"end\":28628,\"start\":28617},{\"end\":28638,\"start\":28628},{\"end\":28729,\"start\":28721},{\"end\":28735,\"start\":28729},{\"end\":28747,\"start\":28735},{\"end\":28759,\"start\":28747},{\"end\":28867,\"start\":28855},{\"end\":28877,\"start\":28867},{\"end\":28887,\"start\":28877},{\"end\":28900,\"start\":28887}]", "bib_venue": "[{\"end\":25447,\"start\":25404},{\"end\":25707,\"start\":25683},{\"end\":25845,\"start\":25835},{\"end\":25967,\"start\":25950},{\"end\":26076,\"start\":26067},{\"end\":26224,\"start\":26207},{\"end\":26356,\"start\":26346},{\"end\":26477,\"start\":26465},{\"end\":26660,\"start\":26648},{\"end\":26800,\"start\":26788},{\"end\":26912,\"start\":26900},{\"end\":27020,\"start\":27010},{\"end\":27154,\"start\":27144},{\"end\":27273,\"start\":27256},{\"end\":27405,\"start\":27393},{\"end\":27576,\"start\":27564},{\"end\":27684,\"start\":27675},{\"end\":27769,\"start\":27741},{\"end\":27875,\"start\":27868},{\"end\":27992,\"start\":27982},{\"end\":28137,\"start\":28094},{\"end\":28278,\"start\":28268},{\"end\":28528,\"start\":28483},{\"end\":28771,\"start\":28759},{\"end\":28917,\"start\":28900},{\"end\":25851,\"start\":25847},{\"end\":25980,\"start\":25969},{\"end\":26081,\"start\":26078},{\"end\":26237,\"start\":26226},{\"end\":26362,\"start\":26358},{\"end\":26485,\"start\":26479},{\"end\":26668,\"start\":26662},{\"end\":26808,\"start\":26802},{\"end\":26920,\"start\":26914},{\"end\":27026,\"start\":27022},{\"end\":27160,\"start\":27156},{\"end\":27286,\"start\":27275},{\"end\":27413,\"start\":27407},{\"end\":27584,\"start\":27578},{\"end\":27689,\"start\":27686},{\"end\":27998,\"start\":27994},{\"end\":28284,\"start\":28280},{\"end\":28779,\"start\":28773},{\"end\":28930,\"start\":28919}]"}}}, "year": 2023, "month": 12, "day": 17}