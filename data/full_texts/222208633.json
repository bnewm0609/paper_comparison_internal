{"id": 222208633, "updated": "2023-10-06 11:18:25.136", "metadata": {"title": "Deformable DETR: Deformable Transformers for End-to-End Object Detection", "authors": "[{\"first\":\"Xizhou\",\"last\":\"Zhu\",\"middle\":[]},{\"first\":\"Weijie\",\"last\":\"Su\",\"middle\":[]},{\"first\":\"Lewei\",\"last\":\"Lu\",\"middle\":[]},{\"first\":\"Bin\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Xiaogang\",\"last\":\"Wang\",\"middle\":[]},{\"first\":\"Jifeng\",\"last\":\"Dai\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2020, "month": 10, "day": 8}, "abstract": "DETR has been recently proposed to eliminate the need for many hand-designed components in object detection while demonstrating good performance. However, it suffers from slow convergence and limited feature spatial resolution, due to the limitation of Transformer attention modules in processing image feature maps. To mitigate these issues, we proposed Deformable DETR, whose attention modules only attend to a small set of key sampling points around a reference. Deformable DETR can achieve better performance than DETR (especially on small objects) with 10$\\times$ less training epochs. Extensive experiments on the COCO benchmark demonstrate the effectiveness of our approach. Code shall be released.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2010.04159", "mag": "3092462694", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/iclr/ZhuSLLWD21", "doi": null}}, "content": {"source": {"pdf_hash": "39ca8f8ff28cc640e3b41a6bd7814ab85c586504", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2010.04159v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "c993279b966b858d9700bad3ac3c421dcfe5ad82", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/39ca8f8ff28cc640e3b41a6bd7814ab85c586504.txt", "contents": "\nDEFORMABLE DETR: DEFORMABLE TRANSFORMERS FOR END-TO-END OBJECT DETECTION\n\n\nXizhou Zhu \nSenseTime Research\n\n\nWeijie Su \nUniversity of Science and Technology of China\n\n\nLewei Lu \nSenseTime Research\n\n\nBin Li binli@ustc.edu.cnxgwang@ee.cuhk.edu.hk \nUniversity of Science and Technology of China\n\n\nXiaogang Wang \nSenseTime Research\n\n\nThe Chinese University of Hong Kong\n\n\nJifeng Dai daijifeng@sensetime.com \nSenseTime Research\n\n\nDEFORMABLE DETR: DEFORMABLE TRANSFORMERS FOR END-TO-END OBJECT DETECTION\n\nDETR has been recently proposed to eliminate the need for many hand-designed components in object detection while demonstrating good performance. However, it suffers from slow convergence and limited feature spatial resolution, due to the limitation of Transformer attention modules in processing image feature maps. To mitigate these issues, we proposed Deformable DETR, whose attention modules only attend to a small set of key sampling points around a reference. Deformable DETR can achieve better performance than DETR (especially on small objects) with 10\u00d7 less training epochs. Extensive experiments on the COCO benchmark demonstrate the effectiveness of our approach. Code shall be released. * Equal contribution. \u2020 This work is done when Weijie Su is an intern at SenseTime Research.\n\nINTRODUCTION\n\nModern object detectors employ many hand-crafted components (Liu et al., 2020), e.g., anchor generation, rule-based training target assignment, non-maximum suppression (NMS) post-processing. They are not fully end-to-end. Recently, Carion et al. (2020) proposed DETR to eliminate the need for such hand-crafted components, and built the first fully end-to-end object detector, achieving very competitive performance. DETR utilizes a simple architecture, by combining convolutional neural networks (CNNs) and Transformer (Vaswani et al., 2017) encoder-decoders. They exploit the versatile and powerful relation modeling capability of Transformers to replace the hand-crafted rules, under properly designed training signals.\n\nDespite its interesting design and good performance, DETR has its own issues: (1) It requires much longer training epochs to converge than the existing object detectors. For example, on the COCO (Lin et al., 2014) benchmark, DETR needs 500 epochs to converge, which is around 10 to 20 times slower than Faster R- CNN (Ren et al., 2015). (2) DETR delivers relatively low performance at detecting small objects. Modern object detectors usually exploit multi-scale features, where small objects are detected from high-resolution feature maps. Meanwhile, high-resolution feature maps lead to unacceptable complexities for DETR. The above-mentioned issues can be mainly attributed to the deficit of Transformer components in processing image feature maps. At initialization, the attention modules cast nearly uniform attention weights to all the pixels in the feature maps. Long training epoches is necessary for the attention weights to be learned to focus on sparse meaningful locations. On the other hand, the attention weights computation in Transformer encoder is of quadratic computation w.r.t. pixel numbers. Thus, it is of very high computational and memory complexities to process high-resolution feature maps.\n\nIn the image domain, deformable convolution (Dai et al., 2017) is of a powerful and efficient mechanism to attend to sparse spatial locations. It naturally avoids the above-mentioned issues. While it lacks the element relation modeling mechanism, which is the key for the success of DETR.\n\nIn this paper, we propose Deformable DETR, which mitigates the slow convergence and high complexity issues of DETR. It combines the best of the sparse spatial sampling of deformable convo- lution, and the relation modeling capability of Transformers. We propose the deformable attention module, which attends to a small set of sampling locations as a pre-filter for prominent key elements out of all the feature map pixels. The module can be naturally extended to aggregating multi-scale features, without the help of FPN (Lin et al., 2017a). In Deformable DETR , we utilize (multi-scale) deformable attention modules to replace the Transformer attention modules processing feature maps, as shown in Fig. 1.\n\nDeformable DETR opens up possibilities for us to exploit variants of end-to-end object detectors, thanks to its fast convergence, and computational and memory efficiency. We explore a simple and effective iterative bounding box refinement mechanism to improve the detection performance. We also try a two-stage Deformable DETR, where the region proposals are also generated by a vaiant of Deformable DETR, which are further fed into the decoder for iterative bounding box refinement.\n\nExtensive experiments on the COCO (Lin et al., 2014) benchmark demonstrate the effectiveness of our approach. Compared with DETR, Deformable DETR can achieve better performance (especially on small objects) with 10\u00d7 less training epochs. The proposed variant of two-stage Deformable DETR can further improve the performance. Code shall be released.\n\n\nRELATED WORK\n\nEfficient Attention Mechanism. Transformers (Vaswani et al., 2017) involve both self-attention and cross-attention mechanisms. One of the most well-known concern of Transformers is the high time and memory complexity at vast key element numbers, which hinders model scalability in many cases. Recently, many efforts have been made to address this problem (Tay et al., 2020b), which can be roughly divided into three categories in practice.\n\nThe first category is to use pre-defined sparse attention patterns on keys. The most straightforward paradigm is restricting the attention pattern to be fixed local windows. Most works (Liu et al., 2018a;Parmar et al., 2018;Child et al., 2019;Huang et al., 2019;Ho et al., 2019;Hu et al., 2019;Parmar et al., 2019;Qiu et al., 2019;Beltagy et al., 2020;Zaheer et al., 2020) follow this paradigm. Although restricting the attention pattern to a local neighborhood can decrease the complexity, it loses global information. To compensate, Child et al. (2019); Huang et al. (2019); Ho et al. (2019) attend key elements at fixed intervals to significantly increase the receptive field on keys. Beltagy et al. (2020); ; Zaheer et al. (2020) allow a small number of special tokens having access to all key elements. Zaheer et al. (2020); Qiu et al. (2019) also add some pre-fixed sparse attention patterns to attend distant key elements directly.\n\nThe second category is to learn data-dependent sparse attention. Kitaev et al. (2020) proposes a locality sensitive hashing (LSH) based attention, which hashes both the query and key elements to different bins. A similar idea is proposed by Roy et al. (2020), where k-means finds out the most related keys. Tay et al. (2020a) learns block permutation for block-wise sparse attention.\n\nThe third category is to explore the low-rank property in self-attention.  reduces the number of key elements through a linear projection on the size dimension instead of the channel dimension. Katharopoulos et al. (2020); Choromanski et al. (2020) rewrite the calculation of selfattention through kernelization approximation.\n\nIn the image domain, the designs of efficient attention mechanism (e.g., Parmar et al. (2018) On the other hand, as discussed in Zhu et al. (2019a), there are variants of convolution, such as deformable convolution (Dai et al., 2017;Zhu et al., 2019b) and dynamic convolution (Wu et al., 2019), that also can be viewed as self-attention mechanisms. Especially, deformable convolution operates much more effectively and efficiently on image recognition than Transformer self-attention. Meanwhile, it lacks the element relation modeling mechanism.\n\nOur proposed deformable attention module is inspired by deformable convolution, and belongs to the second category. It only focuses on a small fixed set of sampling points predicted from the feature of query elements. Different from Parmar et al. (2019); Hu et al. (2019), deformable attention is just slightly slower than the traditional convolution under the same FLOPs.\n\nMulti-scale Feature Representation for Object Detection. One of the main difficulties in object detection is to effectively represent objects at vastly different scales. Modern object detectors usually exploit multi-scale features to accommodate this. As one of the pioneering works, FPN (Lin et al., 2017a) proposes a top-down path to combine multi-scale features. PANet (Liu et al., 2018b) further adds an bottom-up path on the top of FPN. Kong et al. (2018) combines features from all scales by a global attention operation. Zhao et al. (2019) proposes a U-shape module to fuse multi-scale features. Recently, NAS-FPN (Ghiasi et al., 2019) and Auto-FPN (Xu et al., 2019) are proposed to automatically design cross-scale connections via neural architecture search. Tan et al. (2020) proposes the BiFPN, which is a repeated simplified version of PANet. Our proposed multi-scale deformable attention module can naturally aggregate multi-scale feature maps via attention mechanism, without the help of these feature pyramid networks.\n\n\nREVISITING TRANSFORMERS AND DETR\n\nMulti-Head Attention in Transformers. Transformers (Vaswani et al., 2017) are of a network architecture based on attention mechanisms for machine translation. Given a query element (e.g., a target word in the output sentence) and a set of key elements (e.g., source words in the input sentence), the multi-head attention module adaptively aggregates the key contents according to the attention weights that measure the compatibility of query-key pairs. To allow the model focusing on contents from different representation subspaces and different positions, the outputs of different attention heads are linearly aggregated with learnable weights. Let q \u2208 \u2126 q indexes a query element with representation feature z q \u2208 R C , and k \u2208 \u2126 k indexes a key element with representation feature x k \u2208 R C , where C is the feature dimension, \u2126 q and \u2126 k specify the set of query and key elements, respectively. Then the multi-head attention feature is calculated by\nMultiHeadAttn(z q , x) = M m=1 W m k\u2208\u2126 k A mqk \u00b7 W m x k ,(1)\nwhere m indexes the attention head, W m \u2208 R Cv\u00d7C and W m \u2208 R C\u00d7Cv are of learnable weights\n(C v = C/M by default). The attention weights A mqk \u221d exp{ z T q U T m Vmx k \u221a Cv\n} are normalized as k\u2208\u2126 k A mqk = 1, in which U m , V m \u2208 R Cv\u00d7C are also learnable weights. To disambiguate different spatial positions, the representation features z q and x k are usually of the concatenation/summation of element contents and positional embeddings.\n\nThere are two known issues with Transformers. One is Transformers need long training schedules before convergence. Suppose the number of query and key elements are of N q and N k , respectively. Typically, with proper parameter initialization, U m z q and V m x k follow distribution with mean of 0 and variance of 1, which makes attention weights A mqk \u2248 1 N k , when N k is large. It will lead to ambiguous gradients for input features. Thus, long training schedules are required so that the attention weights can focus on specific keys. In the image domain, where the key elements are usually of image pixels, N k can be very large and the convergence is tedious.\n\nOn the other hand, the computational and memory complexity for multi-head attention can be very high with numerous query and key elements. The computational complexity of Eq. 1 is of\nO(N q C 2 + N k C 2 + N q N k C).\nIn the image domain, where the query and key elements are both of pixels, N q = N k C, the complexity is dominated by the third term, as O(N q N k C). Thus, the multi-head attention module suffers from a quadratic complexity growth with the feature map size.\n\nDETR. DETR (Carion et al., 2020) is built upon the Transformer encoder-decoder architecture, combined with a set-based Hungarian loss that forces unique predictions for each ground-truth bounding box via bipartite matching. We briefly review the network architecture as follows.\n\nGiven the input feature maps x \u2208 R C\u00d7H\u00d7W extracted by a CNN backbone (e.g., ResNet (He et al., 2016)), DETR exploits a standard Transformer encoder-decoder architecture to transform the input feature maps to be features of a set of object queries. A 3-layer feed-forward neural network (FFN) and a linear projection are added on top of the object query features (produced by the decoder) as the detection head. The FFN acts as the regression branch to predict the bounding box coordinates\nb \u2208 [0, 1] 4 , where b = {b x , b y , b w , b h }\nencodes the normalized box center coordinates, box height and width (relative to the image size). The linear projection acts as the classification branch to produce the classification results.\n\nFor the Transformer encoder in DETR, both query and key elements are of pixels in the feature maps. The inputs are of ResNet feature maps (with encoded positional embeddings). Let H and W denote the feature map height and width, respectively. The computational complexity of self-attention is of O(H 2 W 2 C), which grows quadratically with the spatial size.\n\nFor the Transformer decoder in DETR, the input includes both feature maps from the encoder, and N object queries represented by learnable positional embeddings (e.g., N = 100). There are two types of attention modules in the decoder, namely, cross-attention and self-attention modules. In the cross-attention modules, object queries extract features from the feature maps. The query elements are of the object queries, and key elements are of the output feature maps from the encoder. In it, N q = N , N k = H \u00d7 W and the complexity of the cross-attention is of O(HW C 2 + N HW C). The complexity grows linearly with the spatial size of feature maps. In the self-attention modules, object queries interact with each other, so as to capture their relations. The query and key elements are both of the object queries. In it, N q = N k = N , and the complexity of the self-attention module is of O(2N C 2 + N 2 C). The complexity is acceptable with moderate number of object queries.\n\nDETR is an attractive design for object detection, which removes the need for many hand-designed components. However, it also has its own issues. These issues can be mainly attributed to the deficits of Transformer attention in handling image feature maps as key elements: (1) DETR has relatively low performance in detecting small objects. Modern object detectors use high-resolution feature maps to better detect small objects. However, high-resolution feature maps would lead to an unacceptable complexity for the self-attention module in the Transformer encoder of DETR, which has a quadratic complexity with the spatial size of input feature maps.\n\n(2) Compared with modern object detectors, DETR requires many more training epochs to converge. This is mainly because the attention modules processing image features are difficult to train. For example, at initialization, the cross-attention modules are almost of average attention on the whole feature maps. While, at the end of the training, the attention maps are learned to be very sparse, focusing only on the object extremities. It seems that DETR requires a long training schedule to learn such significant changes in the attention maps.\n\n\nMETHOD\n\n\nDEFORMABLE TRANSFORMERS FOR END-TO-END OBJECT DETECTION\n\nDeformable Attention Module. The core issue of applying Transformer attention on image feature maps is that it would look over all possible spatial locations. To address this, we present a deformable attention module. Inspired by deformable convolution (Dai et al., 2017;Zhu et al., 2019b), the deformable attention module only attends to a small set of key sampling points around a reference point, regardless of the spatial size of the feature maps. By assigning only a small fixed number of keys for each query, the issues of convergence and feature spatial resolution can be mitigated.\n\nGiven an input feature map x \u2208 R C\u00d7H\u00d7W , let q index a query element with content feature z q and a 2-d reference point p q , the deformable attention feature is calculated by\nDeformAttn(z q , p q , x) = M m=1 W m K k=1 A mqk \u00b7 W m x(p q + \u2206p mqk ) ,(2)\nwhere m indexes the attention head, k indexes the sampled keys, and K is the total sampled key number (K HW ). \u2206p mqk and A mqk denote the sampling offset and attention weight of the k th sampling point in the m th attention head, respectively. The scalar attention weight A mqk lies in the range [0, 1], normalized by K k=1 A mqk = 1. \u2206p mqk \u2208 R 2 are of 2-d real numbers with unconstrained range. As p q + \u2206p mqk is fractional, bilinear interpolation is applied as in Dai et al. (2017) in computing x(p q +\u2206p mqk ). Both \u2206p mqk and A mqk are obtained via linear projection over the query feature z q . In implementation, the query feature z q is fed to a linear projection operator of 3M K channels, where the first 2M K channels encode the sampling offsets \u2206p mqk , and the remaining M K channels are fed to a softmax operator to obtain the attention weights A mqk .\n\nThe deformable attention module is designed for processing convolutional feature maps as key elements. Let N q be the number of query elements, when M K is relatively small, the complexity of the deformable attention module is of O(2N q C 2 + min(HW C 2 , N q KC 2 )) (See Appendix A.1 for details). When it is applied in DETR encoder, where N q = HW , the complexity becomes O(HW C 2 ), which is of linear complexity with the spatial size. When it is applied as the cross-attention modules in DETR decoder, where N q = N (N is the number of object queries), the complexity becomes O(N KC 2 ), which is irrelevant to the spatial size HW .\n\nMulti-scale Deformable Attention Module. Most modern object detection frameworks benefit from multi-scale feature maps (Liu et al., 2020). Our proposed deformable attention module can be naturally extended for multi-scale feature maps.\n\nLet {x l } L l=1 be the input multi-scale feature maps, where x l \u2208 R C\u00d7H l \u00d7W l . Letp q \u2208 [0, 1] 2 be the normalized coordinates of the reference point for each query element q, then the multi-scale deformable attention module is applied as\nMSDeformAttn(z q ,p q , {x l } L l=1 ) = M m=1 W m L l=1 K k=1 A mlqk \u00b7 W m x l (\u03c6 l (p q ) + \u2206p mlqk ) ,(3)\nwhere m indexes the attention head, l indexes the input feature level, and k indexes the sampling point. \u2206p mlqk and A mlqk denote the sampling offset and attention weight of the k th sampling point in the l th feature level and the m th attention head, respectively. The scalar attention weight A mlqk is normalized by L l=1 K k=1 A mlqk = 1. Here, we use normalized coordinatesp q \u2208 [0, 1] 2 for the clarity of scale formulation, in which the normalized coordinates (0, 0) and (1, 1) indicate the top-left and the bottom-right image corners, respectively. Function \u03c6 l (p q ) in Equation 3 re-scales the normalized coordinatesp q to the input feature map of the l-th level. The multi-scale deformable attention is very similar to the previous single-scale version, except that it samples LK points from multi-scale feature maps instead of K points from single-scale feature maps.\n\nThe proposed attention module will degenerate to deformable convolution (Dai et al., 2017), when L = 1, K = 1, and W m \u2208 R Cv\u00d7C is fixed as an identity matrix. Deformable convolution is designed for single-scale inputs, focusing only on one sampling point for each attention head. However, our multi-scale deformable attention looks over multiple sampling points from multi-scale inputs. The proposed (multi-scale) deformable attention module can also be perceived as an efficient variant of Transformer attention, where a pre-filtering mechanism is introduced by the deformable sampling locations. When the sampling points traverse all possible locations, the proposed attention module is equivalent to Transformer attention.\n\nDeformable Transformer Encoder. We replace the Transformer attention modules processing feature maps in DETR with the proposed multi-scale deformable attention module. Both the input and output of the encoder are of multi-scale feature maps with the same resolutions. In encoder, we extract multi-scale feature maps {x l } L\u22121 l=1 (L = 4) from the output feature maps of stages C 3 through C 5 in ResNet (He et al., 2016) (transformed by a 1 \u00d7 1 convolution), where C l is of resolution 2 l lower than the input image. The lowest resolution feature map x L is obtained via a 3 \u00d7 3 stride 2 convolution on the final C 5 stage, denoted as C 6 . All the multi-scale feature maps are of C = 256 channels. Note that the top-down structure in FPN (Lin et al., 2017a) is not used, because our proposed multi-scale deformable attention in itself can exchange information among multi-scale feature maps. The constructing of multi-scale feature maps are also illustrated in Appendix A.2. Experiments in Section 5.2 show that adding FPN will not improve the performance.\n\nIn application of the multi-scale deformable attention module in encoder, the output are of multiscale feature maps with the same resolutions as the input. Both the key and query elements are of pixels from the multi-scale feature maps. For each query pixel, the reference point is itself. To identify which feature level each query pixel lies in, we add a scale-level embedding, denoted as e l , to the feature representation, in addition to the positional embedding. Different from the positional embedding with fixed encodings, the scale-level embedding {e l } L l=1 are randomly initialized and jointly trained with the network.\n\nDeformable Transformer Decoder. There are cross-attention and self-attention modules in the decoder. The query elements for both types of attention modules are of object queries. In the crossattention modules, object queries extract features from the feature maps, where the key elements are of the output feature maps from the encoder. In the self-attention modules, object queries interact with each other, where the key elements are of the object queries. Since our proposed deformable attention module is designed for processing convolutional feature maps as key elements, we only replace each cross-attention module to be the multi-scale deformable attention module, while leaving the self-attention modules unchanged. For each object query, the 2-d normalized coordinate of the reference pointp q is predicted from its object query embedding via a learnable linear projection followed by a sigmoid function.\n\nBecause the multi-scale deformable attention module extracts image features around the reference point, we let the detection head predict the bounding box as relative offsets w.r.t. the reference point to further reduce the optimization difficulty. The reference point is used as the initial guess of the box center. The detection head predicts the relative offsets w.r.t. the reference point. Check Appendix A.3 for the details. In this way, the learned decoder attention will have strong correlation with the predicted bounding boxes, which also accelerates the training convergence.\n\nBy replacing Transformer attention modules with deformable attention modules in DETR, we establish an efficient and fast converging detection system, dubbed as Deformable DETR (see Fig. 1).\n\n\nADDITIONAL IMPROVEMENTS AND VARIANTS FOR DEFORMABLE DETR\n\nDeformable DETR opens up possibilities for us to exploit various variants of end-to-end object detectors, thanks to its fast convergence, and computational and memory efficiency. Due to limited space, we only introduce the core ideas of these improvements and variants here. The implementation details are given in Appendix A.4.\n\nIterative Bounding Box Refinement. This is inspired by the iterative refinement developed in optical flow estimation (Teed & Deng, 2020). We establish a simple and effective iterative bounding box refinement mechanism to improve detection performance. Here, each decoder layer refines the bounding boxes based on the predictions from the previous layer.\n\nTwo-Stage Deformable DETR. In the original DETR, object queries in the decoder are irrelevant to the current image. Inspired by two-stage object detectors, we explore a variant of Deformable DETR for generating region proposals as the first stage. The generated region proposals will be fed into the decoder as object queries for further refinement, forming a two-stage Deformable DETR.\n\nIn the first stage, to achieve high-recall proposals, each pixel in the multi-scale feature maps would serve as an object query. However, directly setting object queries as pixels will bring unacceptable computational and memory cost for the self-attention modules in the decoder, whose complexity grows quadratically with the number of queries. To avoid this problem, we remove the decoder and form an encoder-only Deformable DETR for region proposal generation. In it, each pixel is assigned as an object query, which directly predicts a bounding box. Top scoring bounding boxes are picked as region proposals. No NMS is applied before feeding the region proposals to the second stage.\n\n\nEXPERIMENT\n\nDataset. We conduct experiments on COCO 2017 dataset (Lin et al., 2014). Our models are trained on the train set, and evaluated on the val set and test-dev set.\n\nImplementation Details. ImageNet (Deng et al., 2009) pre-trained ResNet-50 (He et al., 2016 is utilized as the backbone for ablations. Multi-scale feature maps are extracted without FPN (Lin et al., 2017a). M = 8 and K = 4 are set for deformable attentions by default. Parameters of the deformable Transformer encoder are shared among different feature levels. Other hyper-parameter setting and training strategy mainly follow DETR (Carion et al., 2020), except that Focal Loss (Lin et al., 2017b) with loss weight of 2 is used for bounding box classification, and the number of object queries is increased from 100 to 300. We also report the performance of DETR-DC5 with these modifications for a fair comparison, denoted as DETR-DC5 + . By default, models are trained for 50 epochs and the learning rate is decayed at the 40-th epoch by a factor of 0.1. Following DETR (Carion et al., 2020), we train our models using Adam optimizer (Kingma & Ba, 2015) with base learning rate of 2 \u00d7 10 \u22124 , \u03b2 1 = 0.9, \u03b2 2 = 0.999, and weight decay of 10 \u22124 . Learning rates of the linear projections, used for predicting object query reference points and sampling offsets, are multiplied by a factor of 0.1. Run time is evaluated on NVIDIA Tesla V100 GPU.\n\n\nCOMPARISON WITH DETR\n\nAs shown in Table 1, compared with Faster R-CNN + FPN, DETR requires many more training epochs to converge, and delivers lower performance at detecting small objects. Compared with DETR, Deformable DETR achieves better performance (especially on small objects) with 10\u00d7 less training epochs. Detailed convergence curves are shown in Fig. 2. With the aid of iterative bounding box refinement and two-stage paradigm, our method can further improve the detection accuracy.\n\nOur proposed Deformable DETR has on par FLOPs with Faster R-CNN + FPN and DETR-DC5. But the runtime speed is much faster (1.6\u00d7) than DETR-DC5, and is just 25% slower than Faster R-CNN + FPN. The speed issue of DETR-DC5 is mainly due to the large amount of memory access in Transformer attention. Our proposed deformable attention can mitigate this issue, at the cost of unordered memory access. Thus, it is still slightly slower than traditional convolution. K can further improve 0.9% AP. Using multi-scale deformable attention, which allows information exchange among different scale levels, can bring additional 1.5% improvement in AP. Because the cross-level feature exchange is already adopted, adding FPNs will not improve the performance. When multi-scale attention is not applied, and K = 1, our (multi-scale) deformable attention module degenerates to deformable convolution, delivering noticeable lower accuracy.   \n\n\nCOMPARISON WITH STATE-OF-THE-ART METHODS\n\n\nCONCLUSION\n\nDeformable DETR is an end-to-end object detector, which is efficient and fast-converging. It enables us to explore more interesting and practical variants of end-to-end object detectors. At the core of Deformable DETR are the (multi-scale) deformable attention modules, which is an efficient attention mechanism in processing image feature maps. We hope our work opens up new possibilities in exploring end-to-end object detection. \n\n\nACKNOWLEDGMENTS\nN q C 2 + N q KC 2 + 5N q KC)\n, where the factor of 5 in 5N q KC is because of bilinear interpolation and the weighted sum in attention. On the other hand, we can also calculate W m x before sampling, as it is independent to query, and the complexity of computing Equation 2 will become as O(N q C 2 +HW C 2 +5N q KC). So the overall complexity of deformable attention is O(N q C 2 + min(HW C 2 , N q KC 2 ) + 5N q KC + 3N q CM K). In our experiments, M = 8, K \u2264 4 and C = 256 by default, thus 5K + 3M K < C and the complexity is of O(2N q C 2 + min(HW C 2 , N q KC 2 )).\n\n\nA.2 CONSTRUCTING MULT-SCALE FEATURE MAPS FOR DEFORMABLE DETR\n\nAs discussed in Section 4.1 and illustrated in Figure 3, the input multi-scale feature maps of the encoder {x l } L\u22121 l=1 (L = 4) are extracted from the output feature maps of stages C 3 through C 5 in ResNet (He et al., 2016) (transformed by a 1\u00d71 convolution). The lowest resolution feature map x L is obtained via a 3 \u00d7 3 stride 2 convolution on the final C 5 stage. Note that FPN (Lin et al., 2017a) is not used, because our proposed multi-scale deformable attention in itself can exchange information among multi-scale feature maps.  \n\n\nA.3 BOUNDING BOX PREDICTION IN DEFORMABLE DETR\n\nSince the multi-scale deformable attention module extracts image features around the reference point, we design the detection head to predict the bounding box as relative offsets w.r.t. the reference point to further reduce the optimization difficulty. The reference point is used as the initial guess of the box center. The detection head predicts the relative offsets w.r.t. the reference pointp q = (p qx ,p qy ), i.e.,b q = {\u03c3 b qx +\u03c3 \u22121 (p qx ) , \u03c3 b qy +\u03c3 \u22121 (p qy ) , \u03c3(b qw ), \u03c3(b qh )}, where b q{x,y,w,h} \u2208 R are predicted by the detection head. \u03c3 and \u03c3 \u22121 denote the sigmoid and the inverse sigmoid function, respectively. The usage of \u03c3 and \u03c3 \u22121 is to ensureb is of normalized coordinates, a\u015d b q \u2208 [0, 1] 4 . In this way, the learned decoder attention will have strong correlation with the predicted bounding boxes, which also accelerates the training convergence.\n\n\nA.4 MORE IMPLEMENTATION DETAILS\n\nIterative Bounding Box Refinement. Here, each decoder layer refines the bounding boxes based on the predictions from the previous layer. Suppose there are D number of decoder layers (e.g., D = 6), given a normalized bounding boxb d\u22121 q predicted by the (d \u2212 1)-th decoder layer, the d-th decoder layer refines the box a\u015d\nb d q = {\u03c3(\u2206b d qx +\u03c3 \u22121 (b d\u22121 qx )), \u03c3(\u2206b d qy +\u03c3 \u22121 (b d\u22121 qy )), \u03c3(\u2206b d qw +\u03c3 \u22121 (b d\u22121 qw )), \u03c3(\u2206b d qh +\u03c3 \u22121 (b d\u22121 qh ))},\nwhere d \u2208 {1, 2, ..., D}, \u2206b d q{x,y,w,h} \u2208 R are predicted at the d-th decoder layer. Prediction heads for different decoder layers do not share parameters. The initial box is set asb 0 qx =p qx , b 0 qy =p qy ,b 0 qw = 0.1, andb 0 qh = 0.1. The system is robust to the choice of b 0 qw and b 0 qh . We tried setting them as 0.05, 0.1, 0.2, 0.5, and achieved similar performance. To stabilize training, similar to Teed & Deng (2020), the gradients only back propagate through \u2206b d q{x,y,w,h} , and are blocked at \u03c3 \u22121 (b d\u22121 q{x,y,w,h} ). In iterative bounding box refinement, for the d-th decoder layer, we sample key elements respective to the boxb d\u22121 q predicted from the (d \u2212 1)-th decoder layer. For Equation 3 in the cross-attention module of the d-th decoder layer, (b d\u22121 qx ,b d\u22121 qy ) serves as the new reference point. The sampling offset \u2206p mlqk is also modulated by the box size, as (\u2206p mlqkxb d\u22121 qw , \u2206p mlqkyb d\u22121 qh ). Such modifications make the sampling locations related to the center and size of previously predicted boxes.\n\nTwo-Stage Deformable DETR. In the first stage, given the output feature maps of the encoder, a detection head is applied to each pixel. The detection head is of a 3-layer FFN for bounding box regression, and a linear projection for bounding box binary classification (i.e., foreground and background), respectively. Let i index a pixel from feature level l i \u2208 {1, 2, ..., L} with 2-d normalized coordinatesp i = (p ix ,p iy ) \u2208 [0, 1] 2 , its corresponding bounding box is predicted b\u0177 b i = {\u03c3(\u2206b ix + \u03c3 \u22121 (p ix )), \u03c3(\u2206b iy + \u03c3 \u22121 (p iy )), \u03c3(\u2206b iw + \u03c3 \u22121 (2 li s)), \u03c3(\u2206b ih + \u03c3 \u22121 (2 li s))}, where the base object scale s is set as 0.05, \u2206b i{x,y,w,h} \u2208 R are predicted by the bounding box regression branch. The Hungarian loss in DETR is used for training the detection head.\n\nGiven the predicted bounding boxes in the first stage, top scoring bounding boxes are picked as region proposals. In the second stage, these region proposals are fed into the decoder as initial boxes for the iterative bounding box refinement, where the positional embeddings of object queries are set as positional embeddings of region proposal coordinates.\n\nInitialization for Multi-scale Deformable Attention. In our experiments, the number of attention heads is set as M = 8. In multi-scale deformable attention modules, W m \u2208 R Cv\u00d7C and W m \u2208 R C\u00d7Cv are randomly initialized. Weight parameters of the linear projection for predicting A mlqk and \u2206p mlqk are initialized to zero. Bias parameters of the linear projection are initialized to make A mlqk = 1 LK and {\u2206p 1lqk = (\u2212k, \u2212k), \u2206p 2lqk = (\u2212k, 0), \u2206p 3lqk = (\u2212k, k), \u2206p 4lqk = (0, \u2212k), \u2206p 5lqk = (0, k), \u2206p 6lqk = (k, \u2212k), \u2206p 7lqk = (k, 0), \u2206p 8lqk = (k, k)} (k \u2208 {1, 2, ...K}) at initialization.\n\nFor iterative bounding box refinement, the initialized bias parameters for \u2206p mlqk prediction in the decoder are further multiplied with 1 2K , so that all the sampling points at initialization are within the corresponding bounding boxes predicted from the previous decoder layer.\n\nFigure 1 :\n1Illustration of the proposed Deformable DETR object detector.\n\n\n; Child et al. (2019); Huang et al. (2019); Ho et al. (2019); Hu et al. (2019); Parmar et al. (2019)) are still limited to the first category. Despite the theoretically reduced complexity, Parmar et al. (2019); Hu et al. (2019) admit such approaches are much slower in implementation than traditional convolution with the same FLOPs (at least 3\u00d7 slower), due to the intrinsic limitation in memory access patterns.\n\nFigure 3 :\n3Constructing mult-scale feature maps for Deformable DETR.\n\nTable 1 :\n1Comparision of Deformable DETR with DETR on COCO 2017 val set. DETR-DC5 + denotes DETR-DC5 with Focal Loss and 300 object queries.Method \nEpochs AP AP50 AP75 APS APM APL params FLOPs FPS \nFaster R-CNN + FPN \n109 42.0 62.1 45.5 26.6 45.4 53.4 42M 180G 26 \nDETR \n500 42.0 62.4 44.2 20.5 45.8 61.1 41M \n86G \n28 \nDETR-DC5 \n500 43.3 63.1 45.9 22.5 47.3 61.1 41M 187G 12 \nDETR-DC5 \n50 \n35.3 55.7 36.8 15.2 37.5 53.6 41M 187G 12 \nDETR-DC5 + \n50 \n36.2 57.0 37.4 16.3 39.2 53.9 41M 187G 12 \nDeformable DETR \n50 \n43.8 62.6 47.7 26.4 47.1 58.0 40M 173G 19 \n+ iterative bounding box refinement \n50 \n45.4 64.7 49.0 26.8 48.3 61.7 40M 173G 19 \n++ two-stage Deformable DETR \n50 \n46.2 65.2 50.0 28.8 49.2 61.7 40M 173G 19 \n\n5.2 ABLATION STUDY ON DEFORMABLE ATTENTION \n\nTable 2 presents ablations for various design choices of the proposed deformable attention module. \nUsing multi-scale inputs instead of single-scale inputs can effectively improve detection accuracy \nwith 1.7% AP, especially on small objects with 2.9% AP S . Increasing the number of sampling points \n\n\nTable 2 :\n2Ablations for deformable attention on COCO 2017 val set. \"MS inputs\" indicates using multi-scale inputs. \"MS attention\" indicates using multi-scale deformable attention. K is the number of sampling points for each attention head on each feature level.MS inputs MS attention K \nFPNs \nAP AP50 AP75 APS APM APL \n4 FPN (Lin et al., 2017a) 43.8 62.6 47.8 26.5 47.3 58.1 \n4 BiFPN (Tan et al., 2020) 43.9 62.5 47.7 25.6 47.4 57.7 \n1 \n\nw/o \n\n39.7 60.1 42.4 21.2 44.3 56.0 \n1 \n41.4 60.9 44.9 24.1 44.6 56.1 \n4 \n42.3 61.4 46.0 24.8 45.1 56.3 \n4 \n43.8 62.6 47.7 26.4 47.1 58.0 \n\n\n\nTable 3\n3compares the proposed method with other state-of-the-art methods. With ResNet-101 and \nResNeXt-101 (Xie et al., 2017), our method achieves 48.7 AP and 49.0 AP without bells and whis-\ntles, respectively. By using ResNeXt-101 with DCN (Zhu et al., 2019b), the accuracy rises to 50.1 \nAP. With additional test-time augmentations, the proposed method achieves 52.3 AP. \n\n\n\nTable 3 :\n3Comparison of Deformable DETR with state-of-the-art methods on COCO 2017 test-dev \nset. \"TTA\" indicates test-time augmentations including horizontal flip and multi-scale testing. \n\nMethod \nBackbone \nTTA AP AP50 AP75 APS APM APL \nFCOS (Tian et al., 2019) \nResNeXt-101 \n44.7 64.1 48.4 27.6 47.5 55.6 \nATSS (Zhang et al., 2020) \nResNeXt-101 + DCN \n50.7 68.9 56.3 33.2 52.9 62.4 \nTSD (Song et al., 2020) \nSENet154 + DCN \n51.2 71.9 56.0 33.8 54.8 64.2 \nEfficientDet-D7 (Tan et al., 2020) \nEfficientNet-B6 \n52.2 71.4 56.3 -\n-\n-\nDeformable DETR \nResNet-50 \n46.9 66.4 50.8 27.7 49.7 59.9 \nDeformable DETR \nResNet-101 \n48.7 68.1 52.9 29.1 51.5 62.0 \nDeformable DETR \nResNeXt-101 \n49.0 68.5 53.2 29.7 51.7 62.8 \nDeformable DETR \nResNeXt-101 + DCN \n50.1 69.7 54.6 30.6 52.8 64.7 \nDeformable DETR \nResNeXt-101 + DCN \n52.3 71.9 58.1 34.4 54.4 65.6 \n\n\n\nSupposes the number of query elements is N q , in the deformable attention module (see Equation 2), the complexity for calculating the sampling coordinate offsets \u2206p mqk and attention weights A mqk is of O(3N q CM K). Given the sampling coordinate offsets and attention weights, the complexity of computing Equation 2 is O(The work is supported by the National Key R&D Program of China (2020AAA0105200), Beijing \nAcademy of Artificial Intelligence, and the National Natural Science Foundation of China under \ngrand No.U19B2044 and No.61836011. \n\nA APPENDIX \n\nA.1 COMPLEXITY FOR DEFORMABLE ATTENTION \n\n\n\nEtc: Encoding long and structured data in transformers. Joshua Ainslie, Santiago Ontanon, Chris Alberti, Philip Pham, Anirudh Ravula, Sumit Sanghai, arXiv:2004.08483arXiv preprintJoshua Ainslie, Santiago Ontanon, Chris Alberti, Philip Pham, Anirudh Ravula, and Sumit Sanghai. Etc: Encoding long and structured data in transformers. arXiv preprint arXiv:2004.08483, 2020.\n\nIz Beltagy, E Matthew, Arman Peters, Cohan, Longformer, arXiv:2004.05150The long-document transformer. arXiv preprintIz Beltagy, Matthew E Peters, and Arman Cohan. Longformer: The long-document transformer. arXiv preprint arXiv:2004.05150, 2020.\n\nEnd-to-end object detection with transformers. Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, Sergey Zagoruyko, ECCV. Nicolas Carion, Francisco Massa, Gabriel Synnaeve, Nicolas Usunier, Alexander Kirillov, and Sergey Zagoruyko. End-to-end object detection with transformers. In ECCV, 2020.\n\nGenerating long sequences with sparse transformers. Rewon Child, Scott Gray, Alec Radford, Ilya Sutskever, arXiv:1904.10509arXiv preprintRewon Child, Scott Gray, Alec Radford, and Ilya Sutskever. Generating long sequences with sparse transformers. arXiv preprint arXiv:1904.10509, 2019.\n\nMasked language modeling for proteins via linearly scalable long-context transformers. Krzysztof Choromanski, Valerii Likhosherstov, David Dohan, Xingyou Song, Jared Davis, Tamas Sarlos, David Belanger, Lucy Colwell, Adrian Weller, arXiv:2006.03555arXiv preprintKrzysztof Choromanski, Valerii Likhosherstov, David Dohan, Xingyou Song, Jared Davis, Tamas Sarlos, David Belanger, Lucy Colwell, and Adrian Weller. Masked language modeling for pro- teins via linearly scalable long-context transformers. arXiv preprint arXiv:2006.03555, 2020.\n\nDeformable convolutional networks. Jifeng Dai, Haozhi Qi, Yuwen Xiong, Yi Li, Guodong Zhang, Han Hu, Yichen Wei, Jifeng Dai, Haozhi Qi, Yuwen Xiong, Yi Li, Guodong Zhang, Han Hu, and Yichen Wei. Deformable convolutional networks. In ICCV, 2017.\n\nImagenet: A large-scale hierarchical image database. Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, Li Fei-Fei, CVPR. Jia Deng, Wei Dong, Richard Socher, Li-Jia Li, Kai Li, and Li Fei-Fei. Imagenet: A large-scale hierarchical image database. In CVPR, 2009.\n\nNas-fpn: Learning scalable feature pyramid architecture for object detection. Golnaz Ghiasi, Tsung-Yi Lin, Quoc V Le, CVPR. Golnaz Ghiasi, Tsung-Yi Lin, and Quoc V Le. Nas-fpn: Learning scalable feature pyramid archi- tecture for object detection. In CVPR, 2019.\n\nDeep residual learning for image recognition. Kaiming He, Xiangyu Zhang, Shaoqing Ren, Jian Sun, CVPR. Kaiming He, Xiangyu Zhang, Shaoqing Ren, and Jian Sun. Deep residual learning for image recog- nition. In CVPR, 2016.\n\nAxial attention in multidimensional transformers. Jonathan Ho, Nal Kalchbrenner, Dirk Weissenborn, Tim Salimans, arXiv:1912.12180arXiv preprintJonathan Ho, Nal Kalchbrenner, Dirk Weissenborn, and Tim Salimans. Axial attention in multidi- mensional transformers. arXiv preprint arXiv:1912.12180, 2019.\n\nLocal relation networks for image recognition. Han Hu, Zheng Zhang, Zhenda Xie, Stephen Lin, ICCV. Han Hu, Zheng Zhang, Zhenda Xie, and Stephen Lin. Local relation networks for image recognition. In ICCV, 2019.\n\nCcnet: Criss-cross attention for semantic segmentation. Zilong Huang, Xinggang Wang, Lichao Huang, Chang Huang, Yunchao Wei, Wenyu Liu, ICCV. Zilong Huang, Xinggang Wang, Lichao Huang, Chang Huang, Yunchao Wei, and Wenyu Liu. Ccnet: Criss-cross attention for semantic segmentation. In ICCV, 2019.\n\nAngelos Katharopoulos, Apoorv Vyas, arXiv:2006.16236Nikolaos Pappas, and Fran\u00e7ois Fleuret. Transformers are rnns: Fast autoregressive transformers with linear attention. arXiv preprintAngelos Katharopoulos, Apoorv Vyas, Nikolaos Pappas, and Fran\u00e7ois Fleuret. Transformers are rnns: Fast autoregressive transformers with linear attention. arXiv preprint arXiv:2006.16236, 2020.\n\nAdam: A method for stochastic optimization. P Diederik, Jimmy Kingma, Ba, ICLR. Diederik P Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In ICLR, 2015.\n\nReformer: The efficient transformer. Nikita Kitaev, \u0141ukasz Kaiser, Anselm Levskaya, ICLR. Nikita Kitaev, \u0141ukasz Kaiser, and Anselm Levskaya. Reformer: The efficient transformer. In ICLR, 2020.\n\nDeep feature pyramid reconfiguration for object detection. Tao Kong, Fuchun Sun, Chuanqi Tan, Huaping Liu, Wenbing Huang, In ECCV. Tao Kong, Fuchun Sun, Chuanqi Tan, Huaping Liu, and Wenbing Huang. Deep feature pyramid reconfiguration for object detection. In ECCV, 2018.\n\nMicrosoft coco: Common objects in context. Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, C Lawrence Zitnick, ECCV. Tsung-Yi Lin, Michael Maire, Serge Belongie, James Hays, Pietro Perona, Deva Ramanan, Piotr Doll\u00e1r, and C Lawrence Zitnick. Microsoft coco: Common objects in context. In ECCV, 2014.\n\nKaiming He, Bharath Hariharan, and Serge Belongie. Feature pyramid networks for object detection. Tsung-Yi Lin, Piotr Doll\u00e1r, Ross Girshick, CVPR. Tsung-Yi Lin, Piotr Doll\u00e1r, Ross Girshick, Kaiming He, Bharath Hariharan, and Serge Belongie. Feature pyramid networks for object detection. In CVPR, 2017a.\n\nKaiming He, and Piotr Doll\u00e1r. Focal loss for dense object detection. Tsung-Yi Lin, Priya Goyal, Ross Girshick, ICCV. Tsung-Yi Lin, Priya Goyal, Ross Girshick, Kaiming He, and Piotr Doll\u00e1r. Focal loss for dense object detection. In ICCV, 2017b.\n\nDeep learning for generic object detection: A survey. Li Liu, Wanli Ouyang, Xiaogang Wang, Paul Fieguth, Jie Chen, Xinwang Liu, Matti Pietik\u00e4inen, 2020Li Liu, Wanli Ouyang, Xiaogang Wang, Paul Fieguth, Jie Chen, Xinwang Liu, and Matti Pietik\u00e4inen. Deep learning for generic object detection: A survey. IJCV, 2020.\n\nGenerating wikipedia by summarizing long sequences. J Peter, Mohammad Liu, Etienne Saleh, Ben Pot, Ryan Goodrich, Lukasz Sepassi, Noam Kaiser, Shazeer, ICLR. Peter J Liu, Mohammad Saleh, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, and Noam Shazeer. Generating wikipedia by summarizing long sequences. In ICLR, 2018a.\n\nPath aggregation network for instance segmentation. Shu Liu, Lu Qi, Haifang Qin, Jianping Shi, Jiaya Jia, CVPR. Shu Liu, Lu Qi, Haifang Qin, Jianping Shi, and Jiaya Jia. Path aggregation network for instance segmentation. In CVPR, 2018b.\n\n. Niki Parmar, Ashish Vaswani, Jakob Uszkoreit, \u0141ukasz Kaiser, Noam Shazeer, Alexander Ku, Dustin Tran, Image transformer. In ICML. Niki Parmar, Ashish Vaswani, Jakob Uszkoreit, \u0141ukasz Kaiser, Noam Shazeer, Alexander Ku, and Dustin Tran. Image transformer. In ICML, 2018.\n\nStand-alone self-attention in vision models. Niki Parmar, Prajit Ramachandran, Ashish Vaswani, Irwan Bello, Anselm Levskaya, Jon Shlens, NeurIPS. Niki Parmar, Prajit Ramachandran, Ashish Vaswani, Irwan Bello, Anselm Levskaya, and Jon Shlens. Stand-alone self-attention in vision models. In NeurIPS, 2019.\n\nBlockwise self-attention for long document understanding. Jiezhong Qiu, Hao Ma, Omer Levy, Scott Wen-Tau Yih, Sinong Wang, Jie Tang, arXiv:1911.02972arXiv preprintJiezhong Qiu, Hao Ma, Omer Levy, Scott Wen-tau Yih, Sinong Wang, and Jie Tang. Blockwise self-attention for long document understanding. arXiv preprint arXiv:1911.02972, 2019.\n\nFaster r-cnn: Towards real-time object detection with region proposal networks. Kaiming Shaoqing Ren, Ross He, Jian Girshick, Sun, NeurIPS. Shaoqing Ren, Kaiming He, Ross Girshick, and Jian Sun. Faster r-cnn: Towards real-time object detection with region proposal networks. In NeurIPS, 2015.\n\nEfficient content-based sparse attention with routing transformers. Aurko Roy, Mohammad Saffar, Ashish Vaswani, David Grangier, arXiv:2003.05997arXiv preprintAurko Roy, Mohammad Saffar, Ashish Vaswani, and David Grangier. Efficient content-based sparse attention with routing transformers. arXiv preprint arXiv:2003.05997, 2020.\n\nRevisiting the sibling head in object detector. Guanglu Song, Yu Liu, Xiaogang Wang, CVPR. Guanglu Song, Yu Liu, and Xiaogang Wang. Revisiting the sibling head in object detector. In CVPR, 2020.\n\nEfficientdet: Scalable and efficient object detection. Mingxing Tan, Ruoming Pang, Quoc V Le, CVPR. Mingxing Tan, Ruoming Pang, and Quoc V Le. Efficientdet: Scalable and efficient object detection. In CVPR, 2020.\n\nSparse sinkhorn attention. Yi Tay, Dara Bahri, Liu Yang, Donald Metzler, Da-Cheng Juan, ICML. Yi Tay, Dara Bahri, Liu Yang, Donald Metzler, and Da-Cheng Juan. Sparse sinkhorn attention. In ICML, 2020a.\n\nYi Tay, Mostafa Dehghani, Dara Bahri, Donald Metzler, arXiv:2009.06732Efficient transformers: A survey. arXiv preprintYi Tay, Mostafa Dehghani, Dara Bahri, and Donald Metzler. Efficient transformers: A survey. arXiv preprint arXiv:2009.06732, 2020b.\n\nRaft: Recurrent all-pairs field transforms for optical flow. Zachary Teed, Jia Deng, ECCV. Zachary Teed and Jia Deng. Raft: Recurrent all-pairs field transforms for optical flow. In ECCV, 2020.\n\nFcos: Fully convolutional one-stage object detection. Zhi Tian, Chunhua Shen, Hao Chen, Tong He, ICCV. Zhi Tian, Chunhua Shen, Hao Chen, and Tong He. Fcos: Fully convolutional one-stage object detection. In ICCV, 2019.\n\nAttention is all you need. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, Illia Polosukhin, NeurIPS. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In NeurIPS, 2017.\n\nLinformer: Self-attention with linear complexity. Sinong Wang, Belinda Li, Madian Khabsa, Han Fang, Hao Ma, arXiv:2006.04768arXiv preprintSinong Wang, Belinda Li, Madian Khabsa, Han Fang, and Hao Ma. Linformer: Self-attention with linear complexity. arXiv preprint arXiv:2006.04768, 2020.\n\nPay less attention with lightweight and dynamic convolutions. Felix Wu, Angela Fan, Alexei Baevski, Michael Yann N Dauphin, Auli, ICLR. Felix Wu, Angela Fan, Alexei Baevski, Yann N Dauphin, and Michael Auli. Pay less attention with lightweight and dynamic convolutions. In ICLR, 2019.\n\nAggregated residual transformations for deep neural networks. Saining Xie, Ross Girshick, Piotr Doll\u00e1r, Zhuowen Tu, Kaiming He, CVPR. Saining Xie, Ross Girshick, Piotr Doll\u00e1r, Zhuowen Tu, and Kaiming He. Aggregated residual trans- formations for deep neural networks. In CVPR, 2017.\n\nAuto-fpn: Automatic network architecture adaptation for object detection beyond classification. Hang Xu, Lewei Yao, Wei Zhang, Xiaodan Liang, Zhenguo Li, ICCV. Hang Xu, Lewei Yao, Wei Zhang, Xiaodan Liang, and Zhenguo Li. Auto-fpn: Automatic network architecture adaptation for object detection beyond classification. In ICCV, 2019.\n\nBig bird: Transformers for longer sequences. Manzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, arXiv:2007.14062arXiv preprintManzil Zaheer, Guru Guruganesh, Avinava Dubey, Joshua Ainslie, Chris Alberti, Santiago Ontanon, Philip Pham, Anirudh Ravula, Qifan Wang, Li Yang, et al. Big bird: Transformers for longer sequences. arXiv preprint arXiv:2007.14062, 2020.\n\nBridging the gap between anchor-based and anchor-free detection via adaptive training sample selection. Shifeng Zhang, Cheng Chi, Yongqiang Yao, Zhen Lei, Stan Z Li, CVPR. Shifeng Zhang, Cheng Chi, Yongqiang Yao, Zhen Lei, and Stan Z Li. Bridging the gap between anchor-based and anchor-free detection via adaptive training sample selection. In CVPR, 2020.\n\nM2det: A single-shot object detector based on multi-level feature pyramid network. Qijie Zhao, Tao Sheng, Yongtao Wang, Zhi Tang, Ying Chen, Ling Cai, Haibin Ling, AAAI. Qijie Zhao, Tao Sheng, Yongtao Wang, Zhi Tang, Ying Chen, Ling Cai, and Haibin Ling. M2det: A single-shot object detector based on multi-level feature pyramid network. In AAAI, 2019.\n\nAn empirical study of spatial attention mechanisms in deep networks. Xizhou Zhu, Dazhi Cheng, Zheng Zhang, Stephen Lin, Jifeng Dai, ICCV. Xizhou Zhu, Dazhi Cheng, Zheng Zhang, Stephen Lin, and Jifeng Dai. An empirical study of spatial attention mechanisms in deep networks. In ICCV, 2019a.\n\nDeformable convnets v2: More deformable, better results. Xizhou Zhu, Han Hu, Stephen Lin, Jifeng Dai, CVPR. Xizhou Zhu, Han Hu, Stephen Lin, and Jifeng Dai. Deformable convnets v2: More deformable, better results. In CVPR, 2019b.\n", "annotations": {"author": "[{\"end\":108,\"start\":76},{\"end\":167,\"start\":109},{\"end\":198,\"start\":168},{\"end\":293,\"start\":199},{\"end\":367,\"start\":294},{\"end\":424,\"start\":368}]", "publisher": null, "author_last_name": "[{\"end\":86,\"start\":83},{\"end\":118,\"start\":116},{\"end\":176,\"start\":174},{\"end\":205,\"start\":203},{\"end\":307,\"start\":303},{\"end\":378,\"start\":375}]", "author_first_name": "[{\"end\":82,\"start\":76},{\"end\":115,\"start\":109},{\"end\":173,\"start\":168},{\"end\":202,\"start\":199},{\"end\":302,\"start\":294},{\"end\":374,\"start\":368}]", "author_affiliation": "[{\"end\":107,\"start\":88},{\"end\":166,\"start\":120},{\"end\":197,\"start\":178},{\"end\":292,\"start\":246},{\"end\":328,\"start\":309},{\"end\":366,\"start\":330},{\"end\":423,\"start\":404}]", "title": "[{\"end\":73,\"start\":1},{\"end\":497,\"start\":425}]", "venue": null, "abstract": "[{\"end\":1290,\"start\":499}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b27\"},\"end\":1384,\"start\":1366},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":1558,\"start\":1538},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":1848,\"start\":1826},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":2243,\"start\":2225},{\"end\":2365,\"start\":2343},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3308,\"start\":3290},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":4077,\"start\":4058},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4782,\"start\":4764},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5161,\"start\":5139},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":5469,\"start\":5450},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":5740,\"start\":5721},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":5760,\"start\":5740},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5779,\"start\":5760},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":5798,\"start\":5779},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":5814,\"start\":5798},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":5830,\"start\":5814},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":5850,\"start\":5830},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":5867,\"start\":5850},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5888,\"start\":5867},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":5908,\"start\":5888},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6090,\"start\":6071},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6111,\"start\":6092},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6129,\"start\":6113},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6245,\"start\":6224},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":6269,\"start\":6249},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":6364,\"start\":6344},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":6383,\"start\":6366},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":6561,\"start\":6541},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":6734,\"start\":6717},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":6801,\"start\":6783},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":7082,\"start\":7055},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":7109,\"start\":7084},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7282,\"start\":7262},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":7336,\"start\":7318},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7422,\"start\":7404},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":7440,\"start\":7422},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":7482,\"start\":7465},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":7989,\"start\":7969},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8007,\"start\":7991},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":8417,\"start\":8398},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8501,\"start\":8482},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":8570,\"start\":8552},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":8656,\"start\":8638},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":8752,\"start\":8731},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":8783,\"start\":8766},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":8894,\"start\":8877},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":9252,\"start\":9230},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":11815,\"start\":11794},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":12163,\"start\":12146},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":15677,\"start\":15659},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":15695,\"start\":15677},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":16738,\"start\":16721},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":17899,\"start\":17881},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":19324,\"start\":19306},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":20383,\"start\":20366},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":20722,\"start\":20703},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":23875,\"start\":23856},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":25255,\"start\":25237},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":25397,\"start\":25379},{\"end\":25437,\"start\":25397},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":25551,\"start\":25532},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":25799,\"start\":25778},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":25843,\"start\":25824},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":26238,\"start\":26217},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":26300,\"start\":26281},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":29380,\"start\":29363},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":29557,\"start\":29538},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":31541,\"start\":31523}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":34249,\"start\":34175},{\"attributes\":{\"id\":\"fig_1\"},\"end\":34665,\"start\":34250},{\"attributes\":{\"id\":\"fig_2\"},\"end\":34736,\"start\":34666},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":35803,\"start\":34737},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":36384,\"start\":35804},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":36762,\"start\":36385},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":37611,\"start\":36763},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":38215,\"start\":37612}]", "paragraph": "[{\"end\":2028,\"start\":1306},{\"end\":3244,\"start\":2030},{\"end\":3534,\"start\":3246},{\"end\":4243,\"start\":3536},{\"end\":4728,\"start\":4245},{\"end\":5078,\"start\":4730},{\"end\":5534,\"start\":5095},{\"end\":6474,\"start\":5536},{\"end\":6859,\"start\":6476},{\"end\":7187,\"start\":6861},{\"end\":7734,\"start\":7189},{\"end\":8108,\"start\":7736},{\"end\":9142,\"start\":8110},{\"end\":10133,\"start\":9179},{\"end\":10286,\"start\":10196},{\"end\":10636,\"start\":10369},{\"end\":11304,\"start\":10638},{\"end\":11488,\"start\":11306},{\"end\":11781,\"start\":11523},{\"end\":12061,\"start\":11783},{\"end\":12551,\"start\":12063},{\"end\":12794,\"start\":12602},{\"end\":13154,\"start\":12796},{\"end\":14136,\"start\":13156},{\"end\":14790,\"start\":14138},{\"end\":15337,\"start\":14792},{\"end\":15995,\"start\":15406},{\"end\":16172,\"start\":15997},{\"end\":17120,\"start\":16251},{\"end\":17760,\"start\":17122},{\"end\":17997,\"start\":17762},{\"end\":18241,\"start\":17999},{\"end\":19232,\"start\":18351},{\"end\":19960,\"start\":19234},{\"end\":21021,\"start\":19962},{\"end\":21655,\"start\":21023},{\"end\":22570,\"start\":21657},{\"end\":23157,\"start\":22572},{\"end\":23348,\"start\":23159},{\"end\":23737,\"start\":23409},{\"end\":24092,\"start\":23739},{\"end\":24480,\"start\":24094},{\"end\":25169,\"start\":24482},{\"end\":25344,\"start\":25184},{\"end\":26588,\"start\":25346},{\"end\":27082,\"start\":26613},{\"end\":28009,\"start\":27084},{\"end\":28499,\"start\":28067},{\"end\":29089,\"start\":28548},{\"end\":29693,\"start\":29154},{\"end\":30621,\"start\":29744},{\"end\":30977,\"start\":30657},{\"end\":32154,\"start\":31108},{\"end\":32937,\"start\":32156},{\"end\":33296,\"start\":32939},{\"end\":33892,\"start\":33298},{\"end\":34174,\"start\":33894}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":10195,\"start\":10134},{\"attributes\":{\"id\":\"formula_1\"},\"end\":10368,\"start\":10287},{\"attributes\":{\"id\":\"formula_2\"},\"end\":11522,\"start\":11489},{\"attributes\":{\"id\":\"formula_3\"},\"end\":12601,\"start\":12552},{\"attributes\":{\"id\":\"formula_4\"},\"end\":16250,\"start\":16173},{\"attributes\":{\"id\":\"formula_5\"},\"end\":18350,\"start\":18242},{\"attributes\":{\"id\":\"formula_6\"},\"end\":28547,\"start\":28518},{\"attributes\":{\"id\":\"formula_7\"},\"end\":31107,\"start\":30978}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":26632,\"start\":26625}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1304,\"start\":1292},{\"attributes\":{\"n\":\"2\"},\"end\":5093,\"start\":5081},{\"attributes\":{\"n\":\"3\"},\"end\":9177,\"start\":9145},{\"attributes\":{\"n\":\"4\"},\"end\":15346,\"start\":15340},{\"attributes\":{\"n\":\"4.1\"},\"end\":15404,\"start\":15349},{\"attributes\":{\"n\":\"4.2\"},\"end\":23407,\"start\":23351},{\"attributes\":{\"n\":\"5\"},\"end\":25182,\"start\":25172},{\"attributes\":{\"n\":\"5.1\"},\"end\":26611,\"start\":26591},{\"attributes\":{\"n\":\"5.3\"},\"end\":28052,\"start\":28012},{\"attributes\":{\"n\":\"6\"},\"end\":28065,\"start\":28055},{\"end\":28517,\"start\":28502},{\"end\":29152,\"start\":29092},{\"end\":29742,\"start\":29696},{\"end\":30655,\"start\":30624},{\"end\":34186,\"start\":34176},{\"end\":34677,\"start\":34667},{\"end\":34747,\"start\":34738},{\"end\":35814,\"start\":35805},{\"end\":36393,\"start\":36386},{\"end\":36773,\"start\":36764}]", "table": "[{\"end\":35803,\"start\":34879},{\"end\":36384,\"start\":36067},{\"end\":36762,\"start\":36395},{\"end\":37611,\"start\":36775},{\"end\":38215,\"start\":37937}]", "figure_caption": "[{\"end\":34249,\"start\":34188},{\"end\":34665,\"start\":34252},{\"end\":34736,\"start\":34679},{\"end\":34879,\"start\":34749},{\"end\":36067,\"start\":35816},{\"end\":37937,\"start\":37614}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":4242,\"start\":4236},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":20420,\"start\":20384},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":23346,\"start\":23340},{\"end\":26952,\"start\":26946},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":29209,\"start\":29201}]", "bib_author_first_name": "[{\"end\":38279,\"start\":38273},{\"end\":38297,\"start\":38289},{\"end\":38312,\"start\":38307},{\"end\":38328,\"start\":38322},{\"end\":38342,\"start\":38335},{\"end\":38356,\"start\":38351},{\"end\":38591,\"start\":38589},{\"end\":38602,\"start\":38601},{\"end\":38617,\"start\":38612},{\"end\":38890,\"start\":38883},{\"end\":38908,\"start\":38899},{\"end\":38923,\"start\":38916},{\"end\":38941,\"start\":38934},{\"end\":38960,\"start\":38951},{\"end\":38977,\"start\":38971},{\"end\":39225,\"start\":39220},{\"end\":39238,\"start\":39233},{\"end\":39249,\"start\":39245},{\"end\":39263,\"start\":39259},{\"end\":39552,\"start\":39543},{\"end\":39573,\"start\":39566},{\"end\":39594,\"start\":39589},{\"end\":39609,\"start\":39602},{\"end\":39621,\"start\":39616},{\"end\":39634,\"start\":39629},{\"end\":39648,\"start\":39643},{\"end\":39663,\"start\":39659},{\"end\":39679,\"start\":39673},{\"end\":40037,\"start\":40031},{\"end\":40049,\"start\":40043},{\"end\":40059,\"start\":40054},{\"end\":40069,\"start\":40067},{\"end\":40081,\"start\":40074},{\"end\":40092,\"start\":40089},{\"end\":40103,\"start\":40097},{\"end\":40298,\"start\":40295},{\"end\":40308,\"start\":40305},{\"end\":40322,\"start\":40315},{\"end\":40337,\"start\":40331},{\"end\":40345,\"start\":40342},{\"end\":40352,\"start\":40350},{\"end\":40592,\"start\":40586},{\"end\":40609,\"start\":40601},{\"end\":40621,\"start\":40615},{\"end\":40825,\"start\":40818},{\"end\":40837,\"start\":40830},{\"end\":40853,\"start\":40845},{\"end\":40863,\"start\":40859},{\"end\":41052,\"start\":41044},{\"end\":41060,\"start\":41057},{\"end\":41079,\"start\":41075},{\"end\":41096,\"start\":41093},{\"end\":41346,\"start\":41343},{\"end\":41356,\"start\":41351},{\"end\":41370,\"start\":41364},{\"end\":41383,\"start\":41376},{\"end\":41570,\"start\":41564},{\"end\":41586,\"start\":41578},{\"end\":41599,\"start\":41593},{\"end\":41612,\"start\":41607},{\"end\":41627,\"start\":41620},{\"end\":41638,\"start\":41633},{\"end\":41813,\"start\":41806},{\"end\":41835,\"start\":41829},{\"end\":42229,\"start\":42228},{\"end\":42245,\"start\":42240},{\"end\":42399,\"start\":42393},{\"end\":42414,\"start\":42408},{\"end\":42429,\"start\":42423},{\"end\":42612,\"start\":42609},{\"end\":42625,\"start\":42619},{\"end\":42638,\"start\":42631},{\"end\":42651,\"start\":42644},{\"end\":42664,\"start\":42657},{\"end\":42874,\"start\":42866},{\"end\":42887,\"start\":42880},{\"end\":42900,\"start\":42895},{\"end\":42916,\"start\":42911},{\"end\":42929,\"start\":42923},{\"end\":42942,\"start\":42938},{\"end\":42957,\"start\":42952},{\"end\":42976,\"start\":42966},{\"end\":43281,\"start\":43273},{\"end\":43292,\"start\":43287},{\"end\":43305,\"start\":43301},{\"end\":43557,\"start\":43549},{\"end\":43568,\"start\":43563},{\"end\":43580,\"start\":43576},{\"end\":43781,\"start\":43779},{\"end\":43792,\"start\":43787},{\"end\":43809,\"start\":43801},{\"end\":43820,\"start\":43816},{\"end\":43833,\"start\":43830},{\"end\":43847,\"start\":43840},{\"end\":43858,\"start\":43853},{\"end\":44093,\"start\":44092},{\"end\":44109,\"start\":44101},{\"end\":44122,\"start\":44115},{\"end\":44133,\"start\":44130},{\"end\":44143,\"start\":44139},{\"end\":44160,\"start\":44154},{\"end\":44174,\"start\":44170},{\"end\":44425,\"start\":44422},{\"end\":44433,\"start\":44431},{\"end\":44445,\"start\":44438},{\"end\":44459,\"start\":44451},{\"end\":44470,\"start\":44465},{\"end\":44615,\"start\":44611},{\"end\":44630,\"start\":44624},{\"end\":44645,\"start\":44640},{\"end\":44663,\"start\":44657},{\"end\":44676,\"start\":44672},{\"end\":44695,\"start\":44686},{\"end\":44706,\"start\":44700},{\"end\":44931,\"start\":44927},{\"end\":44946,\"start\":44940},{\"end\":44967,\"start\":44961},{\"end\":44982,\"start\":44977},{\"end\":44996,\"start\":44990},{\"end\":45010,\"start\":45007},{\"end\":45254,\"start\":45246},{\"end\":45263,\"start\":45260},{\"end\":45272,\"start\":45268},{\"end\":45284,\"start\":45279},{\"end\":45304,\"start\":45298},{\"end\":45314,\"start\":45311},{\"end\":45615,\"start\":45608},{\"end\":45634,\"start\":45630},{\"end\":45643,\"start\":45639},{\"end\":45895,\"start\":45890},{\"end\":45909,\"start\":45901},{\"end\":45924,\"start\":45918},{\"end\":45939,\"start\":45934},{\"end\":46207,\"start\":46200},{\"end\":46216,\"start\":46214},{\"end\":46230,\"start\":46222},{\"end\":46411,\"start\":46403},{\"end\":46424,\"start\":46417},{\"end\":46437,\"start\":46431},{\"end\":46591,\"start\":46589},{\"end\":46601,\"start\":46597},{\"end\":46612,\"start\":46609},{\"end\":46625,\"start\":46619},{\"end\":46643,\"start\":46635},{\"end\":46767,\"start\":46765},{\"end\":46780,\"start\":46773},{\"end\":46795,\"start\":46791},{\"end\":46809,\"start\":46803},{\"end\":47084,\"start\":47077},{\"end\":47094,\"start\":47091},{\"end\":47268,\"start\":47265},{\"end\":47282,\"start\":47275},{\"end\":47292,\"start\":47289},{\"end\":47303,\"start\":47299},{\"end\":47464,\"start\":47458},{\"end\":47478,\"start\":47474},{\"end\":47492,\"start\":47488},{\"end\":47506,\"start\":47501},{\"end\":47523,\"start\":47518},{\"end\":47536,\"start\":47531},{\"end\":47538,\"start\":47537},{\"end\":47552,\"start\":47546},{\"end\":47566,\"start\":47561},{\"end\":47815,\"start\":47809},{\"end\":47829,\"start\":47822},{\"end\":47840,\"start\":47834},{\"end\":47852,\"start\":47849},{\"end\":47862,\"start\":47859},{\"end\":48116,\"start\":48111},{\"end\":48127,\"start\":48121},{\"end\":48139,\"start\":48133},{\"end\":48156,\"start\":48149},{\"end\":48404,\"start\":48397},{\"end\":48414,\"start\":48410},{\"end\":48430,\"start\":48425},{\"end\":48446,\"start\":48439},{\"end\":48458,\"start\":48451},{\"end\":48719,\"start\":48715},{\"end\":48729,\"start\":48724},{\"end\":48738,\"start\":48735},{\"end\":48753,\"start\":48746},{\"end\":48768,\"start\":48761},{\"end\":49004,\"start\":48998},{\"end\":49017,\"start\":49013},{\"end\":49037,\"start\":49030},{\"end\":49051,\"start\":49045},{\"end\":49066,\"start\":49061},{\"end\":49084,\"start\":49076},{\"end\":49100,\"start\":49094},{\"end\":49114,\"start\":49107},{\"end\":49128,\"start\":49123},{\"end\":49137,\"start\":49135},{\"end\":49523,\"start\":49516},{\"end\":49536,\"start\":49531},{\"end\":49551,\"start\":49542},{\"end\":49561,\"start\":49557},{\"end\":49571,\"start\":49567},{\"end\":49573,\"start\":49572},{\"end\":49858,\"start\":49853},{\"end\":49868,\"start\":49865},{\"end\":49883,\"start\":49876},{\"end\":49893,\"start\":49890},{\"end\":49904,\"start\":49900},{\"end\":49915,\"start\":49911},{\"end\":49927,\"start\":49921},{\"end\":50199,\"start\":50193},{\"end\":50210,\"start\":50205},{\"end\":50223,\"start\":50218},{\"end\":50238,\"start\":50231},{\"end\":50250,\"start\":50244},{\"end\":50478,\"start\":50472},{\"end\":50487,\"start\":50484},{\"end\":50499,\"start\":50492},{\"end\":50511,\"start\":50505}]", "bib_author_last_name": "[{\"end\":38287,\"start\":38280},{\"end\":38305,\"start\":38298},{\"end\":38320,\"start\":38313},{\"end\":38333,\"start\":38329},{\"end\":38349,\"start\":38343},{\"end\":38364,\"start\":38357},{\"end\":38599,\"start\":38592},{\"end\":38610,\"start\":38603},{\"end\":38624,\"start\":38618},{\"end\":38631,\"start\":38626},{\"end\":38643,\"start\":38633},{\"end\":38897,\"start\":38891},{\"end\":38914,\"start\":38909},{\"end\":38932,\"start\":38924},{\"end\":38949,\"start\":38942},{\"end\":38969,\"start\":38961},{\"end\":38987,\"start\":38978},{\"end\":39231,\"start\":39226},{\"end\":39243,\"start\":39239},{\"end\":39257,\"start\":39250},{\"end\":39273,\"start\":39264},{\"end\":39564,\"start\":39553},{\"end\":39587,\"start\":39574},{\"end\":39600,\"start\":39595},{\"end\":39614,\"start\":39610},{\"end\":39627,\"start\":39622},{\"end\":39641,\"start\":39635},{\"end\":39657,\"start\":39649},{\"end\":39671,\"start\":39664},{\"end\":39686,\"start\":39680},{\"end\":40041,\"start\":40038},{\"end\":40052,\"start\":40050},{\"end\":40065,\"start\":40060},{\"end\":40072,\"start\":40070},{\"end\":40087,\"start\":40082},{\"end\":40095,\"start\":40093},{\"end\":40107,\"start\":40104},{\"end\":40303,\"start\":40299},{\"end\":40313,\"start\":40309},{\"end\":40329,\"start\":40323},{\"end\":40340,\"start\":40338},{\"end\":40348,\"start\":40346},{\"end\":40360,\"start\":40353},{\"end\":40599,\"start\":40593},{\"end\":40613,\"start\":40610},{\"end\":40624,\"start\":40622},{\"end\":40828,\"start\":40826},{\"end\":40843,\"start\":40838},{\"end\":40857,\"start\":40854},{\"end\":40867,\"start\":40864},{\"end\":41055,\"start\":41053},{\"end\":41073,\"start\":41061},{\"end\":41091,\"start\":41080},{\"end\":41105,\"start\":41097},{\"end\":41349,\"start\":41347},{\"end\":41362,\"start\":41357},{\"end\":41374,\"start\":41371},{\"end\":41387,\"start\":41384},{\"end\":41576,\"start\":41571},{\"end\":41591,\"start\":41587},{\"end\":41605,\"start\":41600},{\"end\":41618,\"start\":41613},{\"end\":41631,\"start\":41628},{\"end\":41642,\"start\":41639},{\"end\":41827,\"start\":41814},{\"end\":41840,\"start\":41836},{\"end\":42238,\"start\":42230},{\"end\":42252,\"start\":42246},{\"end\":42256,\"start\":42254},{\"end\":42406,\"start\":42400},{\"end\":42421,\"start\":42415},{\"end\":42438,\"start\":42430},{\"end\":42617,\"start\":42613},{\"end\":42629,\"start\":42626},{\"end\":42642,\"start\":42639},{\"end\":42655,\"start\":42652},{\"end\":42670,\"start\":42665},{\"end\":42878,\"start\":42875},{\"end\":42893,\"start\":42888},{\"end\":42909,\"start\":42901},{\"end\":42921,\"start\":42917},{\"end\":42936,\"start\":42930},{\"end\":42950,\"start\":42943},{\"end\":42964,\"start\":42958},{\"end\":42984,\"start\":42977},{\"end\":43285,\"start\":43282},{\"end\":43299,\"start\":43293},{\"end\":43314,\"start\":43306},{\"end\":43561,\"start\":43558},{\"end\":43574,\"start\":43569},{\"end\":43589,\"start\":43581},{\"end\":43785,\"start\":43782},{\"end\":43799,\"start\":43793},{\"end\":43814,\"start\":43810},{\"end\":43828,\"start\":43821},{\"end\":43838,\"start\":43834},{\"end\":43851,\"start\":43848},{\"end\":43870,\"start\":43859},{\"end\":44099,\"start\":44094},{\"end\":44113,\"start\":44110},{\"end\":44128,\"start\":44123},{\"end\":44137,\"start\":44134},{\"end\":44152,\"start\":44144},{\"end\":44168,\"start\":44161},{\"end\":44181,\"start\":44175},{\"end\":44190,\"start\":44183},{\"end\":44429,\"start\":44426},{\"end\":44436,\"start\":44434},{\"end\":44449,\"start\":44446},{\"end\":44463,\"start\":44460},{\"end\":44474,\"start\":44471},{\"end\":44622,\"start\":44616},{\"end\":44638,\"start\":44631},{\"end\":44655,\"start\":44646},{\"end\":44670,\"start\":44664},{\"end\":44684,\"start\":44677},{\"end\":44698,\"start\":44696},{\"end\":44711,\"start\":44707},{\"end\":44938,\"start\":44932},{\"end\":44959,\"start\":44947},{\"end\":44975,\"start\":44968},{\"end\":44988,\"start\":44983},{\"end\":45005,\"start\":44997},{\"end\":45017,\"start\":45011},{\"end\":45258,\"start\":45255},{\"end\":45266,\"start\":45264},{\"end\":45277,\"start\":45273},{\"end\":45296,\"start\":45285},{\"end\":45309,\"start\":45305},{\"end\":45319,\"start\":45315},{\"end\":45628,\"start\":45616},{\"end\":45637,\"start\":45635},{\"end\":45652,\"start\":45644},{\"end\":45657,\"start\":45654},{\"end\":45899,\"start\":45896},{\"end\":45916,\"start\":45910},{\"end\":45932,\"start\":45925},{\"end\":45948,\"start\":45940},{\"end\":46212,\"start\":46208},{\"end\":46220,\"start\":46217},{\"end\":46235,\"start\":46231},{\"end\":46415,\"start\":46412},{\"end\":46429,\"start\":46425},{\"end\":46440,\"start\":46438},{\"end\":46595,\"start\":46592},{\"end\":46607,\"start\":46602},{\"end\":46617,\"start\":46613},{\"end\":46633,\"start\":46626},{\"end\":46648,\"start\":46644},{\"end\":46771,\"start\":46768},{\"end\":46789,\"start\":46781},{\"end\":46801,\"start\":46796},{\"end\":46817,\"start\":46810},{\"end\":47089,\"start\":47085},{\"end\":47099,\"start\":47095},{\"end\":47273,\"start\":47269},{\"end\":47287,\"start\":47283},{\"end\":47297,\"start\":47293},{\"end\":47306,\"start\":47304},{\"end\":47472,\"start\":47465},{\"end\":47486,\"start\":47479},{\"end\":47499,\"start\":47493},{\"end\":47516,\"start\":47507},{\"end\":47529,\"start\":47524},{\"end\":47544,\"start\":47539},{\"end\":47559,\"start\":47553},{\"end\":47577,\"start\":47567},{\"end\":47820,\"start\":47816},{\"end\":47832,\"start\":47830},{\"end\":47847,\"start\":47841},{\"end\":47857,\"start\":47853},{\"end\":47865,\"start\":47863},{\"end\":48119,\"start\":48117},{\"end\":48131,\"start\":48128},{\"end\":48147,\"start\":48140},{\"end\":48171,\"start\":48157},{\"end\":48177,\"start\":48173},{\"end\":48408,\"start\":48405},{\"end\":48423,\"start\":48415},{\"end\":48437,\"start\":48431},{\"end\":48449,\"start\":48447},{\"end\":48461,\"start\":48459},{\"end\":48722,\"start\":48720},{\"end\":48733,\"start\":48730},{\"end\":48744,\"start\":48739},{\"end\":48759,\"start\":48754},{\"end\":48771,\"start\":48769},{\"end\":49011,\"start\":49005},{\"end\":49028,\"start\":49018},{\"end\":49043,\"start\":49038},{\"end\":49059,\"start\":49052},{\"end\":49074,\"start\":49067},{\"end\":49092,\"start\":49085},{\"end\":49105,\"start\":49101},{\"end\":49121,\"start\":49115},{\"end\":49133,\"start\":49129},{\"end\":49142,\"start\":49138},{\"end\":49529,\"start\":49524},{\"end\":49540,\"start\":49537},{\"end\":49555,\"start\":49552},{\"end\":49565,\"start\":49562},{\"end\":49576,\"start\":49574},{\"end\":49863,\"start\":49859},{\"end\":49874,\"start\":49869},{\"end\":49888,\"start\":49884},{\"end\":49898,\"start\":49894},{\"end\":49909,\"start\":49905},{\"end\":49919,\"start\":49916},{\"end\":49932,\"start\":49928},{\"end\":50203,\"start\":50200},{\"end\":50216,\"start\":50211},{\"end\":50229,\"start\":50224},{\"end\":50242,\"start\":50239},{\"end\":50254,\"start\":50251},{\"end\":50482,\"start\":50479},{\"end\":50490,\"start\":50488},{\"end\":50503,\"start\":50500},{\"end\":50515,\"start\":50512}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:2004.08483\",\"id\":\"b0\"},\"end\":38587,\"start\":38217},{\"attributes\":{\"doi\":\"arXiv:2004.05150\",\"id\":\"b1\"},\"end\":38834,\"start\":38589},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":218889832},\"end\":39166,\"start\":38836},{\"attributes\":{\"doi\":\"arXiv:1904.10509\",\"id\":\"b3\"},\"end\":39454,\"start\":39168},{\"attributes\":{\"doi\":\"arXiv:2006.03555\",\"id\":\"b4\"},\"end\":39994,\"start\":39456},{\"attributes\":{\"id\":\"b5\"},\"end\":40240,\"start\":39996},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":57246310},\"end\":40506,\"start\":40242},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":118634258},\"end\":40770,\"start\":40508},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":206594692},\"end\":40992,\"start\":40772},{\"attributes\":{\"doi\":\"arXiv:1912.12180\",\"id\":\"b9\"},\"end\":41294,\"start\":40994},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":131776850},\"end\":41506,\"start\":41296},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":53846561},\"end\":41804,\"start\":41508},{\"attributes\":{\"doi\":\"arXiv:2006.16236\",\"id\":\"b12\"},\"end\":42182,\"start\":41806},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":6628106},\"end\":42354,\"start\":42184},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":209315300},\"end\":42548,\"start\":42356},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":52092159},\"end\":42821,\"start\":42550},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":14113767},\"end\":43173,\"start\":42823},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":10716717},\"end\":43478,\"start\":43175},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":206771220},\"end\":43723,\"start\":43480},{\"attributes\":{\"id\":\"b19\"},\"end\":44038,\"start\":43725},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":3608234},\"end\":44368,\"start\":44040},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":3698141},\"end\":44607,\"start\":44370},{\"attributes\":{\"id\":\"b22\"},\"end\":44880,\"start\":44609},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":189897750},\"end\":45186,\"start\":44882},{\"attributes\":{\"doi\":\"arXiv:1911.02972\",\"id\":\"b24\"},\"end\":45526,\"start\":45188},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":10328909},\"end\":45820,\"start\":45528},{\"attributes\":{\"doi\":\"arXiv:2003.05997\",\"id\":\"b26\"},\"end\":46150,\"start\":45822},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":212737107},\"end\":46346,\"start\":46152},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":208175544},\"end\":46560,\"start\":46348},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":211505992},\"end\":46763,\"start\":46562},{\"attributes\":{\"doi\":\"arXiv:2009.06732\",\"id\":\"b30\"},\"end\":47014,\"start\":46765},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":214667893},\"end\":47209,\"start\":47016},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":91184137},\"end\":47429,\"start\":47211},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":13756489},\"end\":47757,\"start\":47431},{\"attributes\":{\"doi\":\"arXiv:2006.04768\",\"id\":\"b34\"},\"end\":48047,\"start\":47759},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":59310641},\"end\":48333,\"start\":48049},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":8485068},\"end\":48617,\"start\":48335},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":207975574},\"end\":48951,\"start\":48619},{\"attributes\":{\"doi\":\"arXiv:2007.14062\",\"id\":\"b38\"},\"end\":49410,\"start\":48953},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":208637257},\"end\":49768,\"start\":49412},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":53283428},\"end\":50122,\"start\":49770},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":118673006},\"end\":50413,\"start\":50124},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":53745820},\"end\":50644,\"start\":50415}]", "bib_title": "[{\"end\":38881,\"start\":38836},{\"end\":40293,\"start\":40242},{\"end\":40584,\"start\":40508},{\"end\":40816,\"start\":40772},{\"end\":41341,\"start\":41296},{\"end\":41562,\"start\":41508},{\"end\":42226,\"start\":42184},{\"end\":42391,\"start\":42356},{\"end\":42607,\"start\":42550},{\"end\":42864,\"start\":42823},{\"end\":43271,\"start\":43175},{\"end\":43547,\"start\":43480},{\"end\":44090,\"start\":44040},{\"end\":44420,\"start\":44370},{\"end\":44925,\"start\":44882},{\"end\":45606,\"start\":45528},{\"end\":46198,\"start\":46152},{\"end\":46401,\"start\":46348},{\"end\":46587,\"start\":46562},{\"end\":47075,\"start\":47016},{\"end\":47263,\"start\":47211},{\"end\":47456,\"start\":47431},{\"end\":48109,\"start\":48049},{\"end\":48395,\"start\":48335},{\"end\":48713,\"start\":48619},{\"end\":49514,\"start\":49412},{\"end\":49851,\"start\":49770},{\"end\":50191,\"start\":50124},{\"end\":50470,\"start\":50415}]", "bib_author": "[{\"end\":38289,\"start\":38273},{\"end\":38307,\"start\":38289},{\"end\":38322,\"start\":38307},{\"end\":38335,\"start\":38322},{\"end\":38351,\"start\":38335},{\"end\":38366,\"start\":38351},{\"end\":38601,\"start\":38589},{\"end\":38612,\"start\":38601},{\"end\":38626,\"start\":38612},{\"end\":38633,\"start\":38626},{\"end\":38645,\"start\":38633},{\"end\":38899,\"start\":38883},{\"end\":38916,\"start\":38899},{\"end\":38934,\"start\":38916},{\"end\":38951,\"start\":38934},{\"end\":38971,\"start\":38951},{\"end\":38989,\"start\":38971},{\"end\":39233,\"start\":39220},{\"end\":39245,\"start\":39233},{\"end\":39259,\"start\":39245},{\"end\":39275,\"start\":39259},{\"end\":39566,\"start\":39543},{\"end\":39589,\"start\":39566},{\"end\":39602,\"start\":39589},{\"end\":39616,\"start\":39602},{\"end\":39629,\"start\":39616},{\"end\":39643,\"start\":39629},{\"end\":39659,\"start\":39643},{\"end\":39673,\"start\":39659},{\"end\":39688,\"start\":39673},{\"end\":40043,\"start\":40031},{\"end\":40054,\"start\":40043},{\"end\":40067,\"start\":40054},{\"end\":40074,\"start\":40067},{\"end\":40089,\"start\":40074},{\"end\":40097,\"start\":40089},{\"end\":40109,\"start\":40097},{\"end\":40305,\"start\":40295},{\"end\":40315,\"start\":40305},{\"end\":40331,\"start\":40315},{\"end\":40342,\"start\":40331},{\"end\":40350,\"start\":40342},{\"end\":40362,\"start\":40350},{\"end\":40601,\"start\":40586},{\"end\":40615,\"start\":40601},{\"end\":40626,\"start\":40615},{\"end\":40830,\"start\":40818},{\"end\":40845,\"start\":40830},{\"end\":40859,\"start\":40845},{\"end\":40869,\"start\":40859},{\"end\":41057,\"start\":41044},{\"end\":41075,\"start\":41057},{\"end\":41093,\"start\":41075},{\"end\":41107,\"start\":41093},{\"end\":41351,\"start\":41343},{\"end\":41364,\"start\":41351},{\"end\":41376,\"start\":41364},{\"end\":41389,\"start\":41376},{\"end\":41578,\"start\":41564},{\"end\":41593,\"start\":41578},{\"end\":41607,\"start\":41593},{\"end\":41620,\"start\":41607},{\"end\":41633,\"start\":41620},{\"end\":41644,\"start\":41633},{\"end\":41829,\"start\":41806},{\"end\":41842,\"start\":41829},{\"end\":42240,\"start\":42228},{\"end\":42254,\"start\":42240},{\"end\":42258,\"start\":42254},{\"end\":42408,\"start\":42393},{\"end\":42423,\"start\":42408},{\"end\":42440,\"start\":42423},{\"end\":42619,\"start\":42609},{\"end\":42631,\"start\":42619},{\"end\":42644,\"start\":42631},{\"end\":42657,\"start\":42644},{\"end\":42672,\"start\":42657},{\"end\":42880,\"start\":42866},{\"end\":42895,\"start\":42880},{\"end\":42911,\"start\":42895},{\"end\":42923,\"start\":42911},{\"end\":42938,\"start\":42923},{\"end\":42952,\"start\":42938},{\"end\":42966,\"start\":42952},{\"end\":42986,\"start\":42966},{\"end\":43287,\"start\":43273},{\"end\":43301,\"start\":43287},{\"end\":43316,\"start\":43301},{\"end\":43563,\"start\":43549},{\"end\":43576,\"start\":43563},{\"end\":43591,\"start\":43576},{\"end\":43787,\"start\":43779},{\"end\":43801,\"start\":43787},{\"end\":43816,\"start\":43801},{\"end\":43830,\"start\":43816},{\"end\":43840,\"start\":43830},{\"end\":43853,\"start\":43840},{\"end\":43872,\"start\":43853},{\"end\":44101,\"start\":44092},{\"end\":44115,\"start\":44101},{\"end\":44130,\"start\":44115},{\"end\":44139,\"start\":44130},{\"end\":44154,\"start\":44139},{\"end\":44170,\"start\":44154},{\"end\":44183,\"start\":44170},{\"end\":44192,\"start\":44183},{\"end\":44431,\"start\":44422},{\"end\":44438,\"start\":44431},{\"end\":44451,\"start\":44438},{\"end\":44465,\"start\":44451},{\"end\":44476,\"start\":44465},{\"end\":44624,\"start\":44611},{\"end\":44640,\"start\":44624},{\"end\":44657,\"start\":44640},{\"end\":44672,\"start\":44657},{\"end\":44686,\"start\":44672},{\"end\":44700,\"start\":44686},{\"end\":44713,\"start\":44700},{\"end\":44940,\"start\":44927},{\"end\":44961,\"start\":44940},{\"end\":44977,\"start\":44961},{\"end\":44990,\"start\":44977},{\"end\":45007,\"start\":44990},{\"end\":45019,\"start\":45007},{\"end\":45260,\"start\":45246},{\"end\":45268,\"start\":45260},{\"end\":45279,\"start\":45268},{\"end\":45298,\"start\":45279},{\"end\":45311,\"start\":45298},{\"end\":45321,\"start\":45311},{\"end\":45630,\"start\":45608},{\"end\":45639,\"start\":45630},{\"end\":45654,\"start\":45639},{\"end\":45659,\"start\":45654},{\"end\":45901,\"start\":45890},{\"end\":45918,\"start\":45901},{\"end\":45934,\"start\":45918},{\"end\":45950,\"start\":45934},{\"end\":46214,\"start\":46200},{\"end\":46222,\"start\":46214},{\"end\":46237,\"start\":46222},{\"end\":46417,\"start\":46403},{\"end\":46431,\"start\":46417},{\"end\":46442,\"start\":46431},{\"end\":46597,\"start\":46589},{\"end\":46609,\"start\":46597},{\"end\":46619,\"start\":46609},{\"end\":46635,\"start\":46619},{\"end\":46650,\"start\":46635},{\"end\":46773,\"start\":46765},{\"end\":46791,\"start\":46773},{\"end\":46803,\"start\":46791},{\"end\":46819,\"start\":46803},{\"end\":47091,\"start\":47077},{\"end\":47101,\"start\":47091},{\"end\":47275,\"start\":47265},{\"end\":47289,\"start\":47275},{\"end\":47299,\"start\":47289},{\"end\":47308,\"start\":47299},{\"end\":47474,\"start\":47458},{\"end\":47488,\"start\":47474},{\"end\":47501,\"start\":47488},{\"end\":47518,\"start\":47501},{\"end\":47531,\"start\":47518},{\"end\":47546,\"start\":47531},{\"end\":47561,\"start\":47546},{\"end\":47579,\"start\":47561},{\"end\":47822,\"start\":47809},{\"end\":47834,\"start\":47822},{\"end\":47849,\"start\":47834},{\"end\":47859,\"start\":47849},{\"end\":47867,\"start\":47859},{\"end\":48121,\"start\":48111},{\"end\":48133,\"start\":48121},{\"end\":48149,\"start\":48133},{\"end\":48173,\"start\":48149},{\"end\":48179,\"start\":48173},{\"end\":48410,\"start\":48397},{\"end\":48425,\"start\":48410},{\"end\":48439,\"start\":48425},{\"end\":48451,\"start\":48439},{\"end\":48463,\"start\":48451},{\"end\":48724,\"start\":48715},{\"end\":48735,\"start\":48724},{\"end\":48746,\"start\":48735},{\"end\":48761,\"start\":48746},{\"end\":48773,\"start\":48761},{\"end\":49013,\"start\":48998},{\"end\":49030,\"start\":49013},{\"end\":49045,\"start\":49030},{\"end\":49061,\"start\":49045},{\"end\":49076,\"start\":49061},{\"end\":49094,\"start\":49076},{\"end\":49107,\"start\":49094},{\"end\":49123,\"start\":49107},{\"end\":49135,\"start\":49123},{\"end\":49144,\"start\":49135},{\"end\":49531,\"start\":49516},{\"end\":49542,\"start\":49531},{\"end\":49557,\"start\":49542},{\"end\":49567,\"start\":49557},{\"end\":49578,\"start\":49567},{\"end\":49865,\"start\":49853},{\"end\":49876,\"start\":49865},{\"end\":49890,\"start\":49876},{\"end\":49900,\"start\":49890},{\"end\":49911,\"start\":49900},{\"end\":49921,\"start\":49911},{\"end\":49934,\"start\":49921},{\"end\":50205,\"start\":50193},{\"end\":50218,\"start\":50205},{\"end\":50231,\"start\":50218},{\"end\":50244,\"start\":50231},{\"end\":50256,\"start\":50244},{\"end\":50484,\"start\":50472},{\"end\":50492,\"start\":50484},{\"end\":50505,\"start\":50492},{\"end\":50517,\"start\":50505}]", "bib_venue": "[{\"end\":38271,\"start\":38217},{\"end\":38690,\"start\":38661},{\"end\":38993,\"start\":38989},{\"end\":39218,\"start\":39168},{\"end\":39541,\"start\":39456},{\"end\":40029,\"start\":39996},{\"end\":40366,\"start\":40362},{\"end\":40630,\"start\":40626},{\"end\":40873,\"start\":40869},{\"end\":41042,\"start\":40994},{\"end\":41393,\"start\":41389},{\"end\":41648,\"start\":41644},{\"end\":41974,\"start\":41858},{\"end\":42262,\"start\":42258},{\"end\":42444,\"start\":42440},{\"end\":42679,\"start\":42672},{\"end\":42990,\"start\":42986},{\"end\":43320,\"start\":43316},{\"end\":43595,\"start\":43591},{\"end\":43777,\"start\":43725},{\"end\":44196,\"start\":44192},{\"end\":44480,\"start\":44476},{\"end\":44739,\"start\":44713},{\"end\":45026,\"start\":45019},{\"end\":45244,\"start\":45188},{\"end\":45666,\"start\":45659},{\"end\":45888,\"start\":45822},{\"end\":46241,\"start\":46237},{\"end\":46446,\"start\":46442},{\"end\":46654,\"start\":46650},{\"end\":46867,\"start\":46835},{\"end\":47105,\"start\":47101},{\"end\":47312,\"start\":47308},{\"end\":47586,\"start\":47579},{\"end\":47807,\"start\":47759},{\"end\":48183,\"start\":48179},{\"end\":48467,\"start\":48463},{\"end\":48777,\"start\":48773},{\"end\":48996,\"start\":48953},{\"end\":49582,\"start\":49578},{\"end\":49938,\"start\":49934},{\"end\":50260,\"start\":50256},{\"end\":50521,\"start\":50517}]"}}}, "year": 2023, "month": 12, "day": 17}