{"id": 8432394, "updated": "2023-11-08 01:18:51.956", "metadata": {"title": "Teacher-Student Curriculum Learning", "authors": "[{\"first\":\"Tambet\",\"last\":\"Matiisen\",\"middle\":[]},{\"first\":\"Avital\",\"last\":\"Oliver\",\"middle\":[]},{\"first\":\"Taco\",\"last\":\"Cohen\",\"middle\":[]},{\"first\":\"John\",\"last\":\"Schulman\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2017, "month": 7, "day": 1}, "abstract": "We propose Teacher-Student Curriculum Learning (TSCL), a framework for automatic curriculum learning, where the Student tries to learn a complex task and the Teacher automatically chooses subtasks from a given set for the Student to train on. We describe a family of Teacher algorithms that rely on the intuition that the Student should practice more those tasks on which it makes the fastest progress, i.e. where the slope of the learning curve is highest. In addition, the Teacher algorithms address the problem of forgetting by also choosing tasks where the Student's performance is getting worse. We demonstrate that TSCL matches or surpasses the results of carefully hand-crafted curricula in two tasks: addition of decimal numbers with LSTM and navigation in Minecraft. Using our automatically generated curriculum enabled to solve a Minecraft maze that could not be solved at all when training directly on solving the maze, and the learning was an order of magnitude faster than uniform sampling of subtasks.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1707.00183", "mag": "2972758308", "acl": null, "pubmed": "31502993", "pubmedcentral": null, "dblp": "journals/tnn/MatiisenOCS20", "doi": "10.1109/tnnls.2019.2934906"}}, "content": {"source": {"pdf_hash": "004e657bffa4fd1d3c56030beb328d34dc290110", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1707.00183v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/1707.00183", "status": "GREEN"}}, "grobid": {"id": "bc188b223abbf1eff29e45dbfe4b1800fbf1a1c1", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/004e657bffa4fd1d3c56030beb328d34dc290110.txt", "contents": "\nTeacher-Student Curriculum Learning\n\n\nTambet Matiisen \nUniversity of Tartu\nOpenAI\nUniversity of Amsterdam\n\n\nAvital Oliver \nUniversity of Tartu\nOpenAI\nUniversity of Amsterdam\n\n\nTaco Cohen \nUniversity of Tartu\nOpenAI\nUniversity of Amsterdam\n\n\nJohn Schulman Openai \nUniversity of Tartu\nOpenAI\nUniversity of Amsterdam\n\n\nTeacher-Student Curriculum Learning\n\nWe propose Teacher-Student Curriculum Learning (TSCL), a framework for automatic curriculum learning, where the Student tries to learn a complex task and the Teacher automatically chooses subtasks from a given set for the Student to train on. We describe a family of Teacher algorithms that rely on the intuition that the Student should practice more those tasks on which it makes the fastest progress, i.e. where the slope of the learning curve is highest. In addition, the Teacher algorithms address the problem of forgetting by also choosing tasks where the Student's performance is getting worse. We demonstrate that TSCL matches or surpasses the results of carefully hand-crafted curricula in two tasks: addition of decimal numbers with LSTM and navigation in Minecraft. Using our automatically generated curriculum enabled to solve a Minecraft maze that could not be solved at all when training directly on solving the maze, and the learning was an order of magnitude faster than uniform sampling of subtasks.\n\nIntroduction\n\nDeep reinforcement learning algorithms have been used to solve difficult tasks in video games (Mnih et al., 2015), locomotion (Schulman et al., 2015;Lillicrap et al., 2015) and robotics . But tasks with sparse rewards like \"Robot, fetch me a beer\" remain challenging to solve with direct application of these algorithms. One reason is that the number of samples needed to solve a task with random exploration increases exponentially with the number of steps to get a reward (Langford, 2011). One approach to overcome this problem is to use curriculum learning (Bengio et al., 2009;Zaremba and Sutskever, 2014;Graves et al., 2016;Wu and Tian, 2017), where tasks are ordered by increasing difficulty and training only proceeds to harder tasks once easier ones are mastered. Curriculum learning helps when after mastering a simpler task the policy for a harder task is discoverable through random exploration.\n\nTo use curriculum learning, the researcher must:\n\n\u2022 Be able to order subtasks by difficulty.\n\n\u2022 Decide on a \"mastery\" threshold. This can be based on achieving certain score (Zaremba and Sutskever, 2014;Wu and Tian, 2017), which requires prior knowledge of acceptable performance of each task. Alternatively this can be based on a plateau of performance, which can be hard to detect given the noise in the learning curve.\n\n\u2022 Continuously mix in easier tasks while learning harder ones to avoid forgetting. Designing these mixtures effectively is challenging (Zaremba and Sutskever, 2014).\n\nIn this paper, we describe a new approach called Teacher-Student Curriculum Learning (TSCL).\n\nThe Student is the model being trained. The Teacher monitors the Student's training progress and determines the tasks on which the Student should train at each training step, in order to maximize the Student's progression through the curriculum. The Student can be any machine learning model. The Teacher is itself learning about the Student as it's giving tasks, all as part of a single training session.\n\nWe describe several Teacher algorithms based on the notion of learning progress (Oudeyer and Kaplan, 2007). The main idea is that the Student should practice more the tasks on which it is making fastest progress i.e. the slope of the learning curve is highest. To counter forgetting, the Student should also practice tasks where the performance is getting worse i.e. the learning curve slope is negative.\n\nThe main contributions of the paper are:\n\n\u2022 We formalize TSCL, a Teacher-Student framework for curriculum learning as partially observable Markov decision process (POMDP). \u2022 We propose a family of algorithms based on the notion of learning progress. The algorithms also address the problem of forgetting previous tasks. \u2022 We evaluate the algorithms on two supervised and reinforcement learning tasks: addition of decimal numbers with LSTM and navigation in Minecraft.\n\n2 Teacher-Student Setup Figure 1: The Teacher-Student setup Figure 1 illustrates the Teacher-Student interaction. At each timestep, the Teacher chooses tasks for the Student to practice on. The Student trains on those tasks and returns back a score. The Teacher's goal is for the Student to succeed on a final task with as few training steps as possible. Usually the task is parameterized by a categorical value representing one of N subtasks, but one can imagine also multi-dimensional or continuous task parameterization. The score can be episode total reward in reinforcement learning or validation set accuracy in supervised learning.\n\nWe formalize the Teacher's goal of helping the Student to learn a final task as solving a partially observable Markov decision process (POMDP). We present two POMDP formulations: (1) Simple, best suited for reinforcement learning; and (2) Batch, best suited for supervised learning.\n\n\nSimple POMDP Formulation\n\nThe simple POMDP formulation exposes the score of the Student on a single task and is well-suited for reinforcement learning problems.\n\n\u2022 The state s t represents the entire state of the Student (i.e. neural network parameters and optimizer state) and is not observable to the Teacher. \u2022 The action a t corresponds to the parameters of the task chosen by Teacher. In following we only consider a discrete task parameterization. Taking an action means training Student on that task for certain number of iterations. \u2022 The observation o t is the score x (i) t of the task i = a t the Student trained on at timestep t, i.e. the episode total reward. While in theory the Teacher could also observe other aspects of the Student state like network weights, for simplicity we choose to expose only the score.\n\n\u2022 Reward r t is the change in score for the task the Student trained on at timestep t:\nr t = x (i) t \u2212 x (i) t i\n, where t i is the previous timestep when the same task was trained on.\n\n\nBatch POMDP Formulation\n\nIn supervised learning a training batch can include multiple tasks. Therefore action, observation, and reward apply to the whole training set and scores can be measured on a held-out validation set. This motivates the batch formulation of the POMDP:\n\n\u2022 The state s t represents training state of the Student.\n\n\u2022 The action a t represents a probability distribution over N tasks. Each training batch is sampled according to the distribution: a t = (p\n(1) t , . . . , p (N ) t ), where p (i)\nt is the probability of task i at timestep t.\n\n\u2022 The observation o t is the scores of all tasks after the training step:\no t = (x (1) t , . . . , x (N ) t )\nIn the simplest case the scores could be accuracies of the tasks in the training set. But in the case of minibatch training the model evolves during training and therefore additional evaluation pass is needed anyway to produce consistent results. Therefore we use a separate validation set that contains uniform mix of all tasks for this evaluation pass.\n\n\u2022 The reward r t is the sum of changes in evaluation scores from the previous timestep:\nr t = N i=1 x (i) t \u2212 x (i) t\u22121 .\nThis setup could also be used with reinforcement learning by performing training in batches of episodes. But because scoring one sample (one episode) in reinforcement learning is usually much more computationally expensive than in supervised learning, it makes sense to use simple POMDP formulation and make decision about the next task after each training step.\n\n\nOptimization Criteria\n\nFor either of the POMDP formulations, maximizing the Teacher episode total reward is equivalent to maximizing the score of all tasks at the end of the episode:\nT t=1 r t = N i=1 x (i) Ti ,\nwhere T i is the last training step where task i was being trained on 3 .\n\nWhile an obvious choice for optimization criteria would have been the performance in the final task, initially the Student might not have any success in the final task and this does not provide any meaningful feedback signal to the Teacher. Therefore we choose to maximize the sum of performances in all tasks. The assumption here is that in curriculum learning the final task includes the elements of all previous tasks, therefore good performance in the intermediate tasks usually leads to good performance in the final task.\n\n\nAlgorithms\n\nPOMDPs are typically solved using reinforcement learning algorithms. But those require many training episodes, while we aim to train the Student in one Teacher episode. For this reason we have to resort to simpler heuristics. The basic intuition behind proposed algorithms is that the Student should practice those tasks more for which it is making most progress (Oudeyer and Kaplan, 2007), while also practicing tasks that are at risk of being forgotten.  1. At first, the Teacher has no knowledge so it samples from all tasks uniformly.\n\n2. When the Student starts making progress on task 1, the Teacher allocates more probability mass to this task.\n\n3. When the Student masters task 1, its learning curve flattens and the Teacher samples the task less often. At this point Student also starts making progress on task 2, so the Teacher samples more from task 2.\n\n4. This continues until the Student masters all tasks. As all task learning curves flatten in the end, the Teacher returns to uniform sampling of the tasks.\n\nThe picture above is idealistic, since in practice some unlearning often occurs, i.e. when most of the probability mass is allocated to the task 2, performance on task 1 might get worse. To counter this the Student should also practice all learned tasks, especially those where unlearning occurs. For this reason we sample tasks according to the absolute value of the slope of the learning curve instead. If the change in scores is negative, this must mean that unlearning occurred and this task should be practiced more.\n\nThis description alone does not prescribe an algorithm. We need to propose a method of estimating learning progress from noisy task scores, and a way to balance exploration and exploitation. We take inspiration from algorithms for the non-stationary multi-armed bandit problem (Sutton and Barto, 1998) and adapt them to TSCL. For brevity we only give intuition for the simple formulation algorithms here, the formal descriptions can be found in appendices A and B.\n\n\nOnline algorithm\n\nThe Online algorithm is inspired by the basic non-stationary bandit algorithm (Sutton and Barto, 1998). It uses exponentially weighted moving average to track the expected return Q from different tasks:\nQ t+1 (a t ) = \u03b1r t + (1 \u2212 \u03b1)Q t (a t ),\nwhere \u03b1 is learning rate. The next task can be chosen by simple argmax with -greedy exploration:\na t = randint(N ), if random(0, 1) < a t = argmax a Q t (a), otherwise\nAlternatively the next task can be chosen using Boltzmann distribution:\np(a) = e Qt(a)/\u03c4 N i=1 e Qt(i)/\u03c4 ,\nwhere \u03c4 is the temperature of Boltzmann distribution. For details, see Algorithm 1 in Appendix A.\n\n\nNaive algorithm\n\nTo estimate the learning progress more reliably one should practice the task several times. The Naive algorithm trains each task K times, observes the resulting scores and estimates the slope of the learning curve using linear regression. The regression coefficient is used as the reward in the above non-stationary bandit algorithm. For details, see Algorithm 2 in Appendix A.\n\n\nWindow algorithm\n\nRepeating the task a fixed number of times is expensive, when clearly no progress is made. The Window algorithm keeps FIFO buffer of last K scores, and timesteps when these scores were recorded. Linear regression is performed to estimate the slope of the learning curve for each task, with the timesteps as the input variables. The regression coefficient is used as the reward in the above non-stationary bandit algorithm. For details, see Algorithm 3 in Appendix A.\n\n\nSampling algorithm\n\nThe previous algorithms require tuning of hyperparameters to balance exploration. To get rid of exploration hyperparameters, we take inspiration from Thompson sampling. The Sampling algorithm keeps a buffer of last K rewards for each task. To choose the next task, a recent reward is sampled from each task's K-last-rewards buffer. Then whichever task yielded the highest sampled reward is chosen. This makes exploration a natural part of the algorithm: tasks that have recently had high rewards are sampled more often. For details, see Algorithm 4 in Appendix A.\n\n\nExperiments\n\n\nDecimal Number Addition\n\nAddition of decimal numbers with LSTM is a well known task that requires a curriculum to learn in reasonable time (Zaremba and Sutskever, 2014). It is implemented as sequence-to-sequence model , where the input to the network is two decimal-coded numbers separated by a 'plus' sign, and output of the network is the sum of those numbers, also in decimal coding. The curriculum is based on the number of digits in the input numbers -it is easier to learn addition of short numbers and then move on to longer numbers.\n\nOur reimplementation is based on Keras (Chollet et al., 2015). In our implementation the encoder and decoder are both LSTMs with 128 units. In contrast to the original implementation, the hidden state is not passed from encoder to decoder, instead the last output of the encoder is provided to all inputs of the decoder. One curriculum training step consists of training on 40,960 samples. Validation set consists of 4,096 samples and 4,096 is also the batch size. Adam optimizer (Kingma and Ba, 2014) is used for training with default learning rate of 0.001. Both input and output are padded to a fixed size.\n\nNumber addition is a supervised learning problem and therefore can be trained more efficiently by including several curriculum tasks in the mini-batch. Therefore we adopt batch training scheme as outlined in 2.2. The score we use is the accuracy of each task calculated on validation set.\n\nIn the following experiments we used the number of steps until 99% validation set accuracy is reached as a comparison metric. The exploration coefficient was fixed to 0.1, the temperature \u03c4 was fixed to 0.0004, the learning rate \u03b1 was 0.1, and the window size K was 10 in all experiments. The results shown are means and standard deviations of 3 runs with different random seeds.\n\n\nAddition with 1-dimensional Curriculum\n\nWe started with a similar setup to (Zaremba and Sutskever, 2014), where the curriculum task determines the maximum number of digits in both added numbers. The results are shown on Figure 3. Our algorithms outperformed uniform sampling and the best manual curriculum (\"combined\") for 9-digit addition from (Zaremba and Sutskever, 2014). An example of the task distribution during training session is given on figure 4. Figure 3: Results for 9-digit 1D addition, lower is better. Variants using the absolute value of the expected reward surpass the best manual curriculum (\"combined\"). The algorithm progresses from simpler tasks to more complicated. Harder tasks take longer to learn and the algorithm keeps training on easier tasks to counter unlearning.\n\n\nAddition with 2-dimensional Curriculum\n\nWe also experimented with a curriculum where the ordering of tasks is not obvious. We used the same decimal addition task, but in this case the length of each number is chosen separately, making the task-space 2-dimensional. Each training batch is modelled as a probability distribution over the length of both numbers P (l 1 , l 2 ). We also tried making this distribution independent such that P (l 1 , l 2 ) = P (l 1 )P (l 2 ), but that did not work as well.\n\nThere is no equivalent experiment in (Zaremba and Sutskever, 2014), so we created a manual curriculum inspired by their best 1D curriculum. In particular we increase difficulty by increasing the maximum length of both two numbers, which reduces the problem to a 1D curriculum. Figure  5 shows the results for 9-digit 2D addition. Figure 6 illustrates the different approaches taken by manual and automated curriculum. Figure 5: Results for 9-digit 2D addition, lower is better. The task seems easier, manual curriculum is hard to beat and uniform sampling is competitive. Figure 6: Accuracy progress for 4-digit 2D addition. Top: TSCL. Bottom: the best manual curriculum. Our algorithm takes distinctively different approach by training on shorter numbers first. 9-digit videos can be found https://youtu.be/y_QIcQ6spWk and https://youtu.be/fB2kx-esjgw.\n\n\nObservations\n\n\u2022 Using absolute value of Q boosts the performance of almost all the algorithms, which means it is efficient in countering forgetting. \u2022 There is no universal best algorithm. For 1D the Window algorithm and for 2D the Naive algorithm achieve the best results. Sampling is competitive in both and has least hyperparameters. \u2022 Whether -greedy or Boltzmann exploration works better depends on the algorithm. \u2022 Uniform sampling is surprisingly efficient, especially in 2D case.\n\n\u2022 The 2D task is solved faster and the manual curriculum is hard to beat in 2D.\n\n\nMinecraft\n\nMinecraft is a popular 3D video game where players can explore, craft tools and build arbitrary structures, making it a potentially rich environment for AI research. We used the Malmo platform (Johnson et al., 2016) with OpenAI Gym wrapper 4 to interact with Minecraft in our reinforcement learning experiments. In particular we used ClassroomDecorator from Malmo to generate random mazes for the agent to solve. The mazes contain sequences of rooms separated by the following obstacles:\n\n\u2022 Wall -the agent has to locate a doorway in the wall.\n\n\u2022 Lava -the agent has to cross a bridge over lava.\n\nThe maze ends with a target block and the agent gets 1,000 points by touching it. Each move costs -0.1 and dying in lava or getting a timeout yields -1,000 points. Timeout is 30 seconds (1,500 steps) in the first task and 45 seconds (2,250 steps) in the subsequent tasks.\n\nFor learning we used the proximal policy optimization (PPO) algorithm (Schulman, 2017). Input to the policy was 40x30 color image from first-person view and outputs were two gaussian actions: move forward-backward and turn left-right. 10 instances of the policy were run in parallel and their experiences were combined into a batch that was used for GPU training. For details see Appendix C.\n\nWe only implemented the Window algorithm for the Minecraft task, because other algorithms rely on score change, which is not straightforward to calculate for parallel environments. Window size was defined in timesteps and fixed to 10,000 in the experiments, exploration rate was set to 0.1. As baseline we use uniform sampling, training only on the last task, and a manually tuned curriculum. We created a simple curriculum with 5 steps:\n\n\n5-step Curriculum\n\n1. A single room with a target.\n\n2. Two rooms separated by lava.\n\n3. Two rooms separated by wall.\n\n\nThree rooms separated by lava and\n\nwall, in random order.\n\n5. Four rooms separated by lava and walls, in random order.\n\nRefer to Figure 7 for the room layout. The starting position of the agent and the location of the target were randomized for each episode. Manual curriculum trained first task for 200 000 steps, second, third and fourth task for 400 000 steps, and fifth task for 600 000 steps. Figure 8 shows learning curves for Minecraft 5-step curriculum. The mean curve and standard deviation are based on 3 runs with different random seeds. Figure 8: Minecraft 5-step curriculum results, Y-axis shows mean episode reward per 10 000 timesteps for the current task. Left: training performance, notice the manual curriculum task switches after 200 000, 600 000, 1 000 000 and 1 400 000 steps. For automatic curriculum the training score has no clear interpretation. Right: evaluation training on the last task. When training only on the last task the agent did not make any progress at all. When training on a uniform mix of the tasks the progress was slow. Manual curriculum allowed the agent to learn the last task to an acceptable level. TSCL is comparable to the manual curriculum in performance.\n\nVideo of the trained agent can be found here: https://youtu.be/cada0d_aDIc. The learned policy is robust to the number of rooms, given that obstacles are of the same type.\n\n\nRelated Work\n\nWork by (Bengio et al., 2009) sparked general interest in curriculum learning. More recent results include learning to execute short programs (Zaremba and Sutskever, 2014), finding shortest paths in graphs (Graves et al., 2016) and learning to play first-person shooter (Wu and Tian, 2017). All those works rely on manually designed curricula and do not attempt to produce it automatically.\n\nThe idea of using learning progress as the reward was proposed in (Oudeyer and Kaplan, 2007) and later implemented in (Lopes and Oudeyer, 2012), but their work evaluates it only on synthetic tasks. Using learning progress as the reward can be linked to the concept of intrinsic motivation (Schmidhuber, 2010).\n\nSeveral algorithms for adversarial bandits were analyzed in (Auer et al., 2002). While many of those algorithms have formal worst-case guarantees, in our experiments we they did not perform well. The problem is that they come with no assumptions. In curriculum learning we can assume that rewards change smoothly over time.\n\nMore recently (Sukhbaatar et al., 2017) proposed a method to generate incremental goals and therefore curricula automatically. The setup consists of two agents, Alice and Bob, where Alice is generating trajectories and Bob is trying to either repeat or reverse them. Similar work by (Held et al., 2017) uses generative adversarial network to generate goal states for an agent. Compared to TSCL, they are able to generate new subtasks on the go, but this mainly aids in exploration and is not guaranteed to help in learning the final task. (Sharma and Ravindran, 2017) apply similar setup as ours to multi-task learning. In their work they practice more tasks that are underperforming compared to preset baseline, as opposed to our approach of using learning progress.\n\nThe most similar work to ours was done concurrently in (Graves et al., 2017). While the problem statement is strikingly similar, our approaches differ. They apply the automatic curriculum learning only to supervised sequence learning tasks, while we consider also reinforcement learning tasks. They use the EXP3.S algorithm for adversarial bandits, while we propose alternative algorithms inspired by non-stationary bandits. They consider other learning progress metrics based on complexity gain while we focus only on prediction gain (which performed overall best in their experiments). Moreover, their work only uses uniform sampling of tasks as a baseline, whereas ours compares the best known manual curriculum for the given tasks. In summary they arrive to very similar conclusions to ours.\n\nDecimal addition has also been explored in (Kalchbrenner et al., 2015;Reed and De Freitas, 2015;Kaiser and Sutskever, 2015), sometimes improving results over original work in (Zaremba and Sutskever, 2014). Our goal was not to improve the addition results, but to evaluate different curriculum approaches, therefore there is no direct comparison.\n\nMinecraft is a relatively recent addition to reinforcement learning environments. Work by (Oh et al., 2016) evaluates memory-based architectures for Minecraft. They use cognition-inspired tasks in visual grid-world. Our tasks differ in that they do not need explicit memory, and the movement is continuous, not grid-world. Another work by (Tessler et al., 2016) uses tasks similar to ours but they take different approach: they learn a Deep Skill Module for each subtask, freeze weights of those modules and train hierarchical deep reinforcement learning network to pick either single actions or subtask policies. In contrast our approach uses simple policy network and relies on the TSCL to learn (and not forget) the subtasks.\n\nWhile exploration bonuses (Bellemare et al., 2016;Houthooft et al., 2016;Stadie et al., 2015) solve the same problem of sparse rewards, they apply to Student algorithms, while we were considering different Teacher approaches. For this reason we leave the comparison with exploration bonuses to future work.\n\n\nConclusion\n\nWe presented a framework for automatic curriculum learning that can be used for supervised and reinforcement learning tasks. We proposed a family of algorithms within that framework based on the concept of learning progress. While many of the algorithms performed equally well, it was crucial to rely on the absolute value of the slope of the learning curve when choosing the tasks. This guarantees the re-training on tasks which the network is starting to forget. In our LSTM decimal addition experiments, the Sampling algorithm outperformed the best manually designed curriculum as well as the uniform sampling. On the challenging 5-task Minecraft navigation problem, our Window algorithm matched the performance of a carefully designed manual curriculum, and significantly outperformed uniform sampling. For problems where curriculum learning is necessary, TSCL can avoid the tedium of ordering the difficulty of subtasks and hand-designing the curriculum.\n\n\nFuture Work\n\nIn this work we only considered discrete task parameterizations. In the future it would be interesting to apply the idea to continuous task parameterizations. Another promising idea to explore is the usage of automatic curriculum learning in contexts where the subtasks have not been pre-defined. For example, subtasks can be sampled from a generative model, or taken from different initial states in the same environment. \n\nFigure 2 :\n2Idealistic curriculum learning. Left: Scores of different tasks improve over time, the next task starts improving once the previous task has been mastered. Right: Probability of sampling a task depends on the slope of the learning curve.\n\nFigure 2\n2is a demonstration of the ideal training progress in a curriculum learning setting:\n\nFigure 4 :\n4Progression of the task distribution over time for 9-digit 1D addition (Sampling).\n\nFigure 7\n7Figure 7: 5-step curriculum.\n\nAlgorithm 7 )))\n7Window algorithm Initialize STUDENT learning algorithm Initialize FIFO buffers D(a) with length K for all N tasks Initialize expected return Q(a) = 0 for all N tasks for t=1,. . . ,T do Create prob. dist. a t based on |Q| using -greedy or Boltzmann policy Train STUDENT using prob. dist. a t and observe scores o t = D(a) for all tasks a Apply linear regression to each D(a) and extract the coefficients as vector r t Update expected return Q = \u03b1r t + (1 \u2212 \u03b1)Q end for Algorithm 8 Sampling algorithm Initialize STUDENT learning algorithm Initialize FIFO buffers D(a) with length K for all N tasks for t=1,. . . ,T do Sample rewardr a from D(a) for each task (if |D(a)| = 0 thenr a = 1) Create one-hot prob. dist.\u00e3 t based on argmax a |r a | Mix in uniform dist. : a t = (1 \u2212 )\u00e3 t + /N Train STUDENT using prob. dist. a t and observe scores o t = Calculate score changes r t = o t \u2212 o t\u22121 Store reward r (a) t in D(a) for each task a end for\nDue to telescoping summation cancelling out all x (i) t terms but the Ti th .\nhttps://github.com/tambetm/gym-minecraft\nAcknowledgementsWe thank Microsoft for their excellent Malm\u00f6 environment for Minecraft, Josh Tobin and Pieter Abbeel for suggestions and comments, Vicky Cheung, Jonas Schneider, Ben Mann and Art Chaidarun for always being helpful with OpenAI infrastructure. Also Raul Vicente, Ardi Tampuu and Ilya Kuzovkin from University of Tartu for comments and discussion.Appendix A: Simple versions of the algorithms Algorithm 1 Online algorithm Initialize STUDENT learning algorithm Initialize expected return Q(a) = 0 for all N tasks for t=1,. . . ,T do Choose task a t based on |Q| using -greedy or Boltzmann policy Train STUDENT using task a t and observe reward r t = xUpdate expected return Q(a t ) = \u03b1r t + (1 \u2212 \u03b1)Q(a t ) end for Algorithm 2 Naive algorithm Initialize STUDENT learning algorithm Initialize expected return Q(a) = 0 for all N tasks for t=1,...,T do Choose task a t based on |Q| using -greedy or Boltzmann policy Reset D = \u2205 for k=1,...,K do Train STUDENT using task a t and observe score o t = x (at) t Store score o t in list D end for Apply linear regression to D and extract the coefficient as r t Update expected return Q(a t ) = \u03b1r t + (1 \u2212 \u03b1)Q(a t ) end for Algorithm 3 Window algorithm Initialize STUDENT learning algorithm Initialize FIFO buffers D(a) and E(a) with length K for all N tasks Initialize expected return Q(a) = 0 for all N tasks for t=1,. . . ,T do Choose task a t based on |Q| using -greedy or Boltzmann policy Train STUDENT using task a t and observe score o t = x (at) t Store score o t in D(a t ) and timestep t in E(a t ) Use linear regression to predict D(a t ) from E(a t ) and use the coef. as r t Update expected return Q(a t ) = \u03b1r t + (1 \u2212 \u03b1)Q(a t ) end for Algorithm 4 Sampling algorithm Initialize STUDENT learning algorithm Initialize FIFO buffers D(a) with length K for all N tasks for t=1,. . . ,T do Sample rewardr a from D(a) for each task (if |D(a)| = 0 thenr a = 1) Choose task a t = argmax a |r a | Train STUDENT using task a t and observe reward The proximal policy optimization (PPO) algorithm(Schulman, 2017)was implemented using Keras(Chollet et al., 2015)and optimized for real-time environments. The policy was implemented as a neural network with four convolutional layers and one LSTM layer. Input to the network was 40 \u00d7 30 color image and outputs were two continuous actions: move forward/backward and turn left/right. In addition the policy network had state value output, which was used as the baseline.Figure 9shows the network architecture. For training we used a setup with 10 parallel Minecraft instances. The agent code was separated into runners, that interact with the environment, and a trainer, that performs batch training on GPU. Runners regularly update their snapshot of the current policy weights, but they only perform prediction (forward pass), never training. After a fixed number of steps they use FIFO buffers to send collected states, actions and rewards to the trainer. Trainer collects those experiences from all runners, assembles them into batches and performs training. FIFO buffers shield the runners and the trainer from occasional hiccups. This also means that the trainer is not completely on-policy, but this problem is handled by the importance sampling in PPO.During training we also used frame skipping, i.e. processed only every 5th frame. This sped up the learning considerably and the resulting policy also worked without frame skip. Also, we used auxiliary loss for predicting the depth as suggested in(Mirowski et al., 2016). Surprisingly this resulted only in minor improvements.The idea of the first task in the curriculum was to make the agent associate the target with a reward. In practice this task proved to be too simple -the agent could achieve almost the same reward by doing backwards circles in the room. For this reason we added penalty for moving backwards to the policy loss function. This fixed the problem in most cases, but we occasionally still had to discard some unsuccessful runs. Results only reflect the successful runs.We also had some preliminary success combining continuous (Gaussian) actions with binary (Bernoulli) actions for \"jump\" and \"use\" controls, as shown on figure 9. This allowed the agent to learn to cope also with rooms that involve doors, switches or jumping obstacles.\nThe non-stochastic multiarmed bandit problem. Peter Auer, Nicol\u00f2\u201a Cesa-Bianchi, Yoav Freund, Robert E Schapire, SIAM Journal on Computing. 321Peter Auer, Nicol\u00f2\u201a Cesa-Bianchi, Yoav Freund, and Robert E. Schapire. The non-stochastic multi- armed bandit problem. SIAM Journal on Computing, 32(1):48-77, 2002.\n\nUnifying count-based exploration and intrinsic motivation. Marc Bellemare, Sriram Srinivasan, Georg Ostrovski, Tom Schaul, David Saxton, Remi Munos, Advances in Neural Information Processing Systems. Marc Bellemare, Sriram Srinivasan, Georg Ostrovski, Tom Schaul, David Saxton, and Remi Munos. Unifying count-based exploration and intrinsic motivation. In Advances in Neural Information Processing Systems, pages 1471-1479, 2016.\n\nCurriculum learning. Yoshua Bengio, J\u00e9r\u00f4me Louradour, Ronan Collobert, Jason Weston, 10.1145/1553374.1553380Proceedings of the 26th Annual International Conference on Machine Learning -ICML '09. the 26th Annual International Conference on Machine Learning -ICML '09Yoshua Bengio, J\u00e9r\u00f4me Louradour, Ronan Collobert, and Jason Weston. Curriculum learning. In Proceedings of the 26th Annual International Conference on Machine Learning -ICML '09, 2009. doi: 10.1145/1553374.1553380.\n\n. Fran\u00e7ois Chollet, Fran\u00e7ois Chollet et al. Keras. https://github.com/fchollet/keras, 2015.\n\nHybrid computing using a neural network with dynamic external memory. Alex Graves, Greg Wayne, Malcolm Reynolds, Tim Harley, Ivo Danihelka, Agnieszka Grabska-Barwi\u0144ska, Nature. 5387626Alex Graves, Greg Wayne, Malcolm Reynolds, Tim Harley, Ivo Danihelka, Agnieszka Grabska- Barwi\u0144ska, and et al. Sergio G\u00f3mez Colmenarejo. Hybrid computing using a neural network with dynamic external memory. Nature, 538(7626):71-76, 2016.\n\nAutomated curriculum learning for neural networks. Alex Graves, Marc G Bellemare, Jacob Menick, Remi Munos, Koray Kavukcuoglu, Alex Graves, Marc G. Bellemare, Jacob Menick, Remi Munos, and Koray Kavukcuoglu. Automated curriculum learning for neural networks, 2017. http://arxiv.org/abs/1704.03003.\n\nAutomatic goal generation for reinforcement learning agents. David Held, Xinyang Geng, Carlos Florensa, Pieter Abbeel, arXiv:1705.06366arXiv preprintDavid Held, Xinyang Geng, Carlos Florensa, and Pieter Abbeel. Automatic goal generation for reinforcement learning agents. arXiv preprint arXiv:1705.06366, 2017.\n\nVime: Variational information maximizing exploration. Rein Houthooft, Xi Chen, Yan Duan, John Schulman, Filip De Turck, Pieter Abbeel, Advances in Neural Information Processing Systems. Rein Houthooft, Xi Chen, Yan Duan, John Schulman, Filip De Turck, and Pieter Abbeel. Vime: Variational information maximizing exploration. In Advances in Neural Information Processing Systems, pages 1109-1117, 2016.\n\nThe malmo platform for artificial intelligence experimentation. Matthew Johnson, Katja Hofmann, Tim Hutton, David Bignell, International joint conference on artificial intelligence (IJCAI). 4246Matthew Johnson, Katja Hofmann, Tim Hutton, and David Bignell. The malmo platform for artificial intelligence experimentation. In International joint conference on artificial intelligence (IJCAI), page 4246, 2016.\n\n\u0141ukasz Kaiser, Ilya Sutskever, arXiv:1511.08228Neural gpus learn algorithms. arXiv preprint\u0141ukasz Kaiser and Ilya Sutskever. Neural gpus learn algorithms. arXiv preprint arXiv:1511.08228, 2015.\n\nGrid long short-term memory. Nal Kalchbrenner, Ivo Danihelka, Alex Graves, arXiv:1507.01526arXiv preprintNal Kalchbrenner, Ivo Danihelka, and Alex Graves. Grid long short-term memory. arXiv preprint arXiv:1507.01526, 2015.\n\nAdam: A method for stochastic optimization. Diederik Kingma, Jimmy Ba, arXiv:1412.6980arXiv preprintDiederik Kingma and Jimmy Ba. Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980, 2014.\n\nEfficient exploration in reinforcement learning. John Langford, Encyclopedia of Machine Learning. SpringerJohn Langford. Efficient exploration in reinforcement learning. In Encyclopedia of Machine Learning, pages 309-311. Springer, 2011.\n\nEnd-to-end training of deep visuomotor policies. Sergey Levine, Chelsea Finn, Trevor Darrell, Pieter Abbeel, Sergey Levine, Chelsea Finn, Trevor Darrell, and Pieter Abbeel. End-to-end training of deep visuomotor policies, 2015. http://arxiv.org/abs/1504.00702.\n\nP Timothy, Jonathan J Lillicrap, Alexander Hunt, Nicolas Pritzel, Tom Heess, Yuval Erez, David Tassa, Daan Silver, Wierstra, arXiv:1509.02971Continuous control with deep reinforcement learning. arXiv preprintTimothy P Lillicrap, Jonathan J Hunt, Alexander Pritzel, Nicolas Heess, Tom Erez, Yuval Tassa, David Silver, and Daan Wierstra. Continuous control with deep reinforcement learning. arXiv preprint arXiv:1509.02971, 2015.\n\nThe strategic student approach for life-long exploration and learning. Manuel Lopes, Pierre-Yves Oudeyer, 10.1109/devlrn.2012.6400807IEEE International Conference on Development and Learning and Epigenetic Robotics (ICDL). IEEEManuel Lopes and Pierre-Yves Oudeyer. The strategic student approach for life-long exploration and learning. In IEEE International Conference on Development and Learning and Epigenetic Robotics (ICDL). IEEE, 2012. doi: 10.1109/devlrn.2012.6400807.\n\nLearning to navigate in complex environments. Piotr Mirowski, Razvan Pascanu, Fabio Viola, Hubert Soyer, Andy Ballard, Andrea Banino, Misha Denil, Ross Goroshin, Laurent Sifre, Koray Kavukcuoglu, arXiv:1611.03673arXiv preprintPiotr Mirowski, Razvan Pascanu, Fabio Viola, Hubert Soyer, Andy Ballard, Andrea Banino, Misha Denil, Ross Goroshin, Laurent Sifre, Koray Kavukcuoglu, et al. Learning to navigate in complex environments. arXiv preprint arXiv:1611.03673, 2016.\n\nAlex Graves. Human-level control through deep reinforcement learning. Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A Rusu, Joel Veness, Marc G Bellemare, Nature. 5187540Volodymyr Mnih, Koray Kavukcuoglu, David Silver, Andrei A. Rusu, Joel Veness, Marc G. Belle- mare, and et al. Alex Graves. Human-level control through deep reinforcement learning. Nature, 518(7540):529-33, 2015.\n\nControl of memory, active perception, and action in minecraft. Junhyuk Oh, Valliappa Chockalingam, Satinder Singh, Honglak Lee, arXiv:1605.09128arXiv preprintJunhyuk Oh, Valliappa Chockalingam, Satinder Singh, and Honglak Lee. Control of memory, active perception, and action in minecraft. arXiv preprint arXiv:1605.09128, 2016.\n\nWhat is intrinsic motivation? a typology of computational approaches. Pierre- , Yves Oudeyer, Frederic Kaplan, Frontiers in Neurorobotics. 1Pierre-Yves Oudeyer and Frederic Kaplan. What is intrinsic motivation? a typology of computational approaches. Frontiers in Neurorobotics, 1(November: 6), 2007.\n\n. Scott Reed, Nando De Freitas, arXiv:1511.06279Neural programmer-interpreters. arXiv preprintScott Reed and Nando De Freitas. Neural programmer-interpreters. arXiv preprint arXiv:1511.06279, 2015.\n\nFormal theory of creativity, fun, and intrinsic motivation (1990-2010). J\u00fcrgen Schmidhuber, IEEE Transactions on Autonomous Mental Development. 23J\u00fcrgen Schmidhuber. Formal theory of creativity, fun, and intrinsic motivation (1990-2010). IEEE Transactions on Autonomous Mental Development, 2(3):230-47, 2010.\n\nAdvanced policy gradient methods: Natural gradient, trpo, and more. John Schulman, John Schulman. Advanced policy gradient methods: Natural gradient, trpo, and more, 2017. URL http://rll.berkeley.edu/deeprlcourse/docs/lec5.pdf. Lecture notes.\n\nTrust region policy optimization. John Schulman, Sergey Levine, Pieter Abbeel, Philipp Michael I Jordan, Moritz, ICML. John Schulman, Sergey Levine, Pieter Abbeel, Michael I Jordan, and Philipp Moritz. Trust region policy optimization. In ICML, pages 1889-1897, 2015.\n\nOnline multi-task learning using biased sampling. Sahil Sharma, Balaraman Ravindran, arXiv:1702.06053arXiv preprintSahil Sharma and Balaraman Ravindran. Online multi-task learning using biased sampling. arXiv preprint arXiv:1702.06053, 2017.\n\nIncentivizing exploration in reinforcement learning with deep predictive models. C Bradly, Sergey Stadie, Pieter Levine, Abbeel, arXiv:1507.00814arXiv preprintBradly C Stadie, Sergey Levine, and Pieter Abbeel. Incentivizing exploration in reinforcement learning with deep predictive models. arXiv preprint arXiv:1507.00814, 2015.\n\nIntrinsic motivation and automatic curricula via asymmetric self-play. Sainbayar Sukhbaatar, Ilya Kostrikov, Arthur Szlam, Rob Fergus, arXiv:1703.05407arXiv preprintSainbayar Sukhbaatar, Ilya Kostrikov, Arthur Szlam, and Rob Fergus. Intrinsic motivation and automatic curricula via asymmetric self-play. arXiv preprint arXiv:1703.05407, 2017.\n\nSequence to sequence learning with neural networks. Ilya Sutskever, Oriol Vinyals, Quoc V Le, Advances in neural information processing systems. Ilya Sutskever, Oriol Vinyals, and Quoc V Le. Sequence to sequence learning with neural networks. In Advances in neural information processing systems, pages 3104-3112, 2014.\n\nReinforcement learning: An introduction. Richard S Sutton, Andrew G Barto, IEEE Neural Networks Council. 95Richard S. Sutton and Andrew G. Barto. Reinforcement learning: An introduction. IEEE Transactions on Neural Networks / a Publication of the IEEE Neural Networks Council, 9(5):1054-1054, 1998.\n\nA deep hierarchical approach to lifelong learning in minecraft. Chen Tessler, Shahar Givony, Tom Zahavy, J Daniel, Shie Mankowitz, Mannor, arXiv:1604.07255arXiv preprintChen Tessler, Shahar Givony, Tom Zahavy, Daniel J Mankowitz, and Shie Mannor. A deep hierarchical approach to lifelong learning in minecraft. arXiv preprint arXiv:1604.07255, 2016.\n\nTraining agent for first-person shooter game with actor-critic curriculum learning. Yuxin Wu, Yuandong Tian, Submitted to Int'l Conference on Learning Representations. Yuxin Wu and Yuandong Tian. Training agent for first-person shooter game with actor-critic curriculum learning. In Submitted to Int'l Conference on Learning Representations, 2017.\n\nLearning to execute. Wojciech Zaremba, Ilya Sutskever, Wojciech Zaremba and Ilya Sutskever. Learning to execute., 2014. http://arxiv.org/abs/1410.4615.\n", "annotations": {"author": "[{\"end\":108,\"start\":39},{\"end\":176,\"start\":109},{\"end\":241,\"start\":177},{\"end\":316,\"start\":242}]", "publisher": null, "author_last_name": "[{\"end\":54,\"start\":46},{\"end\":122,\"start\":116},{\"end\":187,\"start\":182},{\"end\":262,\"start\":256}]", "author_first_name": "[{\"end\":45,\"start\":39},{\"end\":115,\"start\":109},{\"end\":181,\"start\":177},{\"end\":246,\"start\":242},{\"end\":255,\"start\":247}]", "author_affiliation": "[{\"end\":107,\"start\":56},{\"end\":175,\"start\":124},{\"end\":240,\"start\":189},{\"end\":315,\"start\":264}]", "title": "[{\"end\":36,\"start\":1},{\"end\":352,\"start\":317}]", "venue": null, "abstract": "[{\"end\":1369,\"start\":354}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b17\"},\"end\":1498,\"start\":1479},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":1534,\"start\":1511},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":1557,\"start\":1534},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":1875,\"start\":1859},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":1966,\"start\":1945},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":1994,\"start\":1966},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":2014,\"start\":1994},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":2032,\"start\":2014},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":2496,\"start\":2467},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":2514,\"start\":2496},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":2880,\"start\":2851},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":3490,\"start\":3477},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8933,\"start\":8920},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":10391,\"start\":10367},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":10677,\"start\":10653},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":12846,\"start\":12817},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":13281,\"start\":13259},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":13721,\"start\":13700},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":14607,\"start\":14578},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":14876,\"start\":14848},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":15869,\"start\":15840},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":17456,\"start\":17434},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":18197,\"start\":18181},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":20487,\"start\":20466},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":20629,\"start\":20600},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":20685,\"start\":20664},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":20747,\"start\":20728},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":20942,\"start\":20929},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":20993,\"start\":20968},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":21158,\"start\":21139},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":21240,\"start\":21221},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":21525,\"start\":21500},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":21788,\"start\":21769},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":22053,\"start\":22025},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":22331,\"start\":22310},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":23122,\"start\":23095},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":23148,\"start\":23122},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":23175,\"start\":23148},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":23256,\"start\":23227},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":23506,\"start\":23489},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":23760,\"start\":23738},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":24179,\"start\":24155},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":24202,\"start\":24179},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":24222,\"start\":24202}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":26099,\"start\":25849},{\"attributes\":{\"id\":\"fig_1\"},\"end\":26194,\"start\":26100},{\"attributes\":{\"id\":\"fig_2\"},\"end\":26290,\"start\":26195},{\"attributes\":{\"id\":\"fig_3\"},\"end\":26330,\"start\":26291},{\"attributes\":{\"id\":\"fig_4\"},\"end\":27289,\"start\":26331}]", "paragraph": "[{\"end\":2291,\"start\":1385},{\"end\":2341,\"start\":2293},{\"end\":2385,\"start\":2343},{\"end\":2714,\"start\":2387},{\"end\":2881,\"start\":2716},{\"end\":2975,\"start\":2883},{\"end\":3382,\"start\":2977},{\"end\":3788,\"start\":3384},{\"end\":3830,\"start\":3790},{\"end\":4257,\"start\":3832},{\"end\":4897,\"start\":4259},{\"end\":5181,\"start\":4899},{\"end\":5344,\"start\":5210},{\"end\":6011,\"start\":5346},{\"end\":6099,\"start\":6013},{\"end\":6197,\"start\":6126},{\"end\":6474,\"start\":6225},{\"end\":6533,\"start\":6476},{\"end\":6674,\"start\":6535},{\"end\":6760,\"start\":6715},{\"end\":6835,\"start\":6762},{\"end\":7226,\"start\":6872},{\"end\":7315,\"start\":7228},{\"end\":7712,\"start\":7350},{\"end\":7897,\"start\":7738},{\"end\":8000,\"start\":7927},{\"end\":8529,\"start\":8002},{\"end\":9082,\"start\":8544},{\"end\":9195,\"start\":9084},{\"end\":9407,\"start\":9197},{\"end\":9565,\"start\":9409},{\"end\":10088,\"start\":9567},{\"end\":10554,\"start\":10090},{\"end\":10777,\"start\":10575},{\"end\":10915,\"start\":10819},{\"end\":11058,\"start\":10987},{\"end\":11191,\"start\":11094},{\"end\":11588,\"start\":11211},{\"end\":12075,\"start\":11609},{\"end\":12661,\"start\":12098},{\"end\":13218,\"start\":12703},{\"end\":13829,\"start\":13220},{\"end\":14119,\"start\":13831},{\"end\":14500,\"start\":14121},{\"end\":15297,\"start\":14543},{\"end\":15801,\"start\":15340},{\"end\":16656,\"start\":15803},{\"end\":17146,\"start\":16673},{\"end\":17227,\"start\":17148},{\"end\":17728,\"start\":17241},{\"end\":17784,\"start\":17730},{\"end\":17836,\"start\":17786},{\"end\":18109,\"start\":17838},{\"end\":18502,\"start\":18111},{\"end\":18941,\"start\":18504},{\"end\":18994,\"start\":18963},{\"end\":19027,\"start\":18996},{\"end\":19060,\"start\":19029},{\"end\":19120,\"start\":19098},{\"end\":19181,\"start\":19122},{\"end\":20268,\"start\":19183},{\"end\":20441,\"start\":20270},{\"end\":20848,\"start\":20458},{\"end\":21159,\"start\":20850},{\"end\":21484,\"start\":21161},{\"end\":22253,\"start\":21486},{\"end\":23050,\"start\":22255},{\"end\":23397,\"start\":23052},{\"end\":24127,\"start\":23399},{\"end\":24435,\"start\":24129},{\"end\":25409,\"start\":24450},{\"end\":25848,\"start\":25425}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":6125,\"start\":6100},{\"attributes\":{\"id\":\"formula_1\"},\"end\":6714,\"start\":6675},{\"attributes\":{\"id\":\"formula_2\"},\"end\":6871,\"start\":6836},{\"attributes\":{\"id\":\"formula_3\"},\"end\":7349,\"start\":7316},{\"attributes\":{\"id\":\"formula_4\"},\"end\":7926,\"start\":7898},{\"attributes\":{\"id\":\"formula_5\"},\"end\":10818,\"start\":10778},{\"attributes\":{\"id\":\"formula_6\"},\"end\":10986,\"start\":10916},{\"attributes\":{\"id\":\"formula_7\"},\"end\":11093,\"start\":11059}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1383,\"start\":1371},{\"attributes\":{\"n\":\"2.1\"},\"end\":5208,\"start\":5184},{\"attributes\":{\"n\":\"2.2\"},\"end\":6223,\"start\":6200},{\"attributes\":{\"n\":\"2.3\"},\"end\":7736,\"start\":7715},{\"attributes\":{\"n\":\"3\"},\"end\":8542,\"start\":8532},{\"attributes\":{\"n\":\"3.1\"},\"end\":10573,\"start\":10557},{\"attributes\":{\"n\":\"3.2\"},\"end\":11209,\"start\":11194},{\"attributes\":{\"n\":\"3.3\"},\"end\":11607,\"start\":11591},{\"attributes\":{\"n\":\"3.4\"},\"end\":12096,\"start\":12078},{\"attributes\":{\"n\":\"4\"},\"end\":12675,\"start\":12664},{\"attributes\":{\"n\":\"4.1\"},\"end\":12701,\"start\":12678},{\"attributes\":{\"n\":\"4.1.1\"},\"end\":14541,\"start\":14503},{\"attributes\":{\"n\":\"4.1.2\"},\"end\":15338,\"start\":15300},{\"attributes\":{\"n\":\"4.1.3\"},\"end\":16671,\"start\":16659},{\"attributes\":{\"n\":\"4.2\"},\"end\":17239,\"start\":17230},{\"attributes\":{\"n\":\"4.2.1\"},\"end\":18961,\"start\":18944},{\"attributes\":{\"n\":\"4.\"},\"end\":19096,\"start\":19063},{\"attributes\":{\"n\":\"5\"},\"end\":20456,\"start\":20444},{\"attributes\":{\"n\":\"6\"},\"end\":24448,\"start\":24438},{\"attributes\":{\"n\":\"7\"},\"end\":25423,\"start\":25412},{\"end\":25860,\"start\":25850},{\"end\":26109,\"start\":26101},{\"end\":26206,\"start\":26196},{\"end\":26300,\"start\":26292},{\"end\":26347,\"start\":26332}]", "table": null, "figure_caption": "[{\"end\":26099,\"start\":25862},{\"end\":26194,\"start\":26111},{\"end\":26290,\"start\":26208},{\"end\":26330,\"start\":26302},{\"end\":27289,\"start\":26349}]", "figure_ref": "[{\"end\":4291,\"start\":4283},{\"end\":4327,\"start\":4319},{\"end\":14731,\"start\":14723},{\"end\":14969,\"start\":14961},{\"end\":16089,\"start\":16080},{\"end\":16141,\"start\":16133},{\"end\":16229,\"start\":16221},{\"end\":16383,\"start\":16375},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":19200,\"start\":19192},{\"end\":19469,\"start\":19461},{\"end\":19620,\"start\":19612}]", "bib_author_first_name": "[{\"end\":31778,\"start\":31773},{\"end\":31792,\"start\":31785},{\"end\":31811,\"start\":31807},{\"end\":31826,\"start\":31820},{\"end\":31828,\"start\":31827},{\"end\":32098,\"start\":32094},{\"end\":32116,\"start\":32110},{\"end\":32134,\"start\":32129},{\"end\":32149,\"start\":32146},{\"end\":32163,\"start\":32158},{\"end\":32176,\"start\":32172},{\"end\":32493,\"start\":32487},{\"end\":32508,\"start\":32502},{\"end\":32525,\"start\":32520},{\"end\":32542,\"start\":32537},{\"end\":32957,\"start\":32949},{\"end\":33114,\"start\":33110},{\"end\":33127,\"start\":33123},{\"end\":33142,\"start\":33135},{\"end\":33156,\"start\":33153},{\"end\":33168,\"start\":33165},{\"end\":33189,\"start\":33180},{\"end\":33518,\"start\":33514},{\"end\":33531,\"start\":33527},{\"end\":33533,\"start\":33532},{\"end\":33550,\"start\":33545},{\"end\":33563,\"start\":33559},{\"end\":33576,\"start\":33571},{\"end\":33828,\"start\":33823},{\"end\":33842,\"start\":33835},{\"end\":33855,\"start\":33849},{\"end\":33872,\"start\":33866},{\"end\":34132,\"start\":34128},{\"end\":34146,\"start\":34144},{\"end\":34156,\"start\":34153},{\"end\":34167,\"start\":34163},{\"end\":34183,\"start\":34178},{\"end\":34186,\"start\":34184},{\"end\":34200,\"start\":34194},{\"end\":34548,\"start\":34541},{\"end\":34563,\"start\":34558},{\"end\":34576,\"start\":34573},{\"end\":34590,\"start\":34585},{\"end\":34892,\"start\":34886},{\"end\":34905,\"start\":34901},{\"end\":35113,\"start\":35110},{\"end\":35131,\"start\":35128},{\"end\":35147,\"start\":35143},{\"end\":35357,\"start\":35349},{\"end\":35371,\"start\":35366},{\"end\":35571,\"start\":35567},{\"end\":35812,\"start\":35806},{\"end\":35828,\"start\":35821},{\"end\":35841,\"start\":35835},{\"end\":35857,\"start\":35851},{\"end\":36020,\"start\":36019},{\"end\":36038,\"start\":36030},{\"end\":36040,\"start\":36039},{\"end\":36061,\"start\":36052},{\"end\":36075,\"start\":36068},{\"end\":36088,\"start\":36085},{\"end\":36101,\"start\":36096},{\"end\":36113,\"start\":36108},{\"end\":36125,\"start\":36121},{\"end\":36525,\"start\":36519},{\"end\":36544,\"start\":36533},{\"end\":36975,\"start\":36970},{\"end\":36992,\"start\":36986},{\"end\":37007,\"start\":37002},{\"end\":37021,\"start\":37015},{\"end\":37033,\"start\":37029},{\"end\":37049,\"start\":37043},{\"end\":37063,\"start\":37058},{\"end\":37075,\"start\":37071},{\"end\":37093,\"start\":37086},{\"end\":37106,\"start\":37101},{\"end\":37472,\"start\":37463},{\"end\":37484,\"start\":37479},{\"end\":37503,\"start\":37498},{\"end\":37518,\"start\":37512},{\"end\":37520,\"start\":37519},{\"end\":37531,\"start\":37527},{\"end\":37544,\"start\":37540},{\"end\":37546,\"start\":37545},{\"end\":37856,\"start\":37849},{\"end\":37870,\"start\":37861},{\"end\":37893,\"start\":37885},{\"end\":37908,\"start\":37901},{\"end\":38193,\"start\":38186},{\"end\":38200,\"start\":38196},{\"end\":38218,\"start\":38210},{\"end\":38425,\"start\":38420},{\"end\":38440,\"start\":38432},{\"end\":38695,\"start\":38689},{\"end\":38999,\"start\":38995},{\"end\":39209,\"start\":39205},{\"end\":39226,\"start\":39220},{\"end\":39241,\"start\":39235},{\"end\":39257,\"start\":39250},{\"end\":39495,\"start\":39490},{\"end\":39513,\"start\":39504},{\"end\":39765,\"start\":39764},{\"end\":39780,\"start\":39774},{\"end\":39795,\"start\":39789},{\"end\":40094,\"start\":40085},{\"end\":40111,\"start\":40107},{\"end\":40129,\"start\":40123},{\"end\":40140,\"start\":40137},{\"end\":40414,\"start\":40410},{\"end\":40431,\"start\":40426},{\"end\":40447,\"start\":40441},{\"end\":40727,\"start\":40720},{\"end\":40729,\"start\":40728},{\"end\":40744,\"start\":40738},{\"end\":40746,\"start\":40745},{\"end\":41047,\"start\":41043},{\"end\":41063,\"start\":41057},{\"end\":41075,\"start\":41072},{\"end\":41085,\"start\":41084},{\"end\":41098,\"start\":41094},{\"end\":41419,\"start\":41414},{\"end\":41432,\"start\":41424},{\"end\":41708,\"start\":41700},{\"end\":41722,\"start\":41718}]", "bib_author_last_name": "[{\"end\":31783,\"start\":31779},{\"end\":31805,\"start\":31793},{\"end\":31818,\"start\":31812},{\"end\":31837,\"start\":31829},{\"end\":32108,\"start\":32099},{\"end\":32127,\"start\":32117},{\"end\":32144,\"start\":32135},{\"end\":32156,\"start\":32150},{\"end\":32170,\"start\":32164},{\"end\":32182,\"start\":32177},{\"end\":32500,\"start\":32494},{\"end\":32518,\"start\":32509},{\"end\":32535,\"start\":32526},{\"end\":32549,\"start\":32543},{\"end\":32965,\"start\":32958},{\"end\":33121,\"start\":33115},{\"end\":33133,\"start\":33128},{\"end\":33151,\"start\":33143},{\"end\":33163,\"start\":33157},{\"end\":33178,\"start\":33169},{\"end\":33207,\"start\":33190},{\"end\":33525,\"start\":33519},{\"end\":33543,\"start\":33534},{\"end\":33557,\"start\":33551},{\"end\":33569,\"start\":33564},{\"end\":33588,\"start\":33577},{\"end\":33833,\"start\":33829},{\"end\":33847,\"start\":33843},{\"end\":33864,\"start\":33856},{\"end\":33879,\"start\":33873},{\"end\":34142,\"start\":34133},{\"end\":34151,\"start\":34147},{\"end\":34161,\"start\":34157},{\"end\":34176,\"start\":34168},{\"end\":34192,\"start\":34187},{\"end\":34207,\"start\":34201},{\"end\":34556,\"start\":34549},{\"end\":34571,\"start\":34564},{\"end\":34583,\"start\":34577},{\"end\":34598,\"start\":34591},{\"end\":34899,\"start\":34893},{\"end\":34915,\"start\":34906},{\"end\":35126,\"start\":35114},{\"end\":35141,\"start\":35132},{\"end\":35154,\"start\":35148},{\"end\":35364,\"start\":35358},{\"end\":35374,\"start\":35372},{\"end\":35580,\"start\":35572},{\"end\":35819,\"start\":35813},{\"end\":35833,\"start\":35829},{\"end\":35849,\"start\":35842},{\"end\":35864,\"start\":35858},{\"end\":36028,\"start\":36021},{\"end\":36050,\"start\":36041},{\"end\":36066,\"start\":36062},{\"end\":36083,\"start\":36076},{\"end\":36094,\"start\":36089},{\"end\":36106,\"start\":36102},{\"end\":36119,\"start\":36114},{\"end\":36132,\"start\":36126},{\"end\":36142,\"start\":36134},{\"end\":36531,\"start\":36526},{\"end\":36552,\"start\":36545},{\"end\":36984,\"start\":36976},{\"end\":37000,\"start\":36993},{\"end\":37013,\"start\":37008},{\"end\":37027,\"start\":37022},{\"end\":37041,\"start\":37034},{\"end\":37056,\"start\":37050},{\"end\":37069,\"start\":37064},{\"end\":37084,\"start\":37076},{\"end\":37099,\"start\":37094},{\"end\":37118,\"start\":37107},{\"end\":37477,\"start\":37473},{\"end\":37496,\"start\":37485},{\"end\":37510,\"start\":37504},{\"end\":37525,\"start\":37521},{\"end\":37538,\"start\":37532},{\"end\":37556,\"start\":37547},{\"end\":37859,\"start\":37857},{\"end\":37883,\"start\":37871},{\"end\":37899,\"start\":37894},{\"end\":37912,\"start\":37909},{\"end\":38208,\"start\":38201},{\"end\":38225,\"start\":38219},{\"end\":38430,\"start\":38426},{\"end\":38448,\"start\":38441},{\"end\":38707,\"start\":38696},{\"end\":39008,\"start\":39000},{\"end\":39218,\"start\":39210},{\"end\":39233,\"start\":39227},{\"end\":39248,\"start\":39242},{\"end\":39274,\"start\":39258},{\"end\":39282,\"start\":39276},{\"end\":39502,\"start\":39496},{\"end\":39523,\"start\":39514},{\"end\":39772,\"start\":39766},{\"end\":39787,\"start\":39781},{\"end\":39802,\"start\":39796},{\"end\":39810,\"start\":39804},{\"end\":40105,\"start\":40095},{\"end\":40121,\"start\":40112},{\"end\":40135,\"start\":40130},{\"end\":40147,\"start\":40141},{\"end\":40424,\"start\":40415},{\"end\":40439,\"start\":40432},{\"end\":40450,\"start\":40448},{\"end\":40736,\"start\":40730},{\"end\":40752,\"start\":40747},{\"end\":41055,\"start\":41048},{\"end\":41070,\"start\":41064},{\"end\":41082,\"start\":41076},{\"end\":41092,\"start\":41086},{\"end\":41108,\"start\":41099},{\"end\":41116,\"start\":41110},{\"end\":41422,\"start\":41420},{\"end\":41437,\"start\":41433},{\"end\":41716,\"start\":41709},{\"end\":41732,\"start\":41723}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":13209702},\"end\":32033,\"start\":31727},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":8310565},\"end\":32464,\"start\":32035},{\"attributes\":{\"doi\":\"10.1145/1553374.1553380\",\"id\":\"b2\",\"matched_paper_id\":873046},\"end\":32945,\"start\":32466},{\"attributes\":{\"id\":\"b3\"},\"end\":33038,\"start\":32947},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":205251479},\"end\":33461,\"start\":33040},{\"attributes\":{\"id\":\"b5\"},\"end\":33760,\"start\":33463},{\"attributes\":{\"doi\":\"arXiv:1705.06366\",\"id\":\"b6\"},\"end\":34072,\"start\":33762},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1620800},\"end\":34475,\"start\":34074},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":9953039},\"end\":34884,\"start\":34477},{\"attributes\":{\"doi\":\"arXiv:1511.08228\",\"id\":\"b9\"},\"end\":35079,\"start\":34886},{\"attributes\":{\"doi\":\"arXiv:1507.01526\",\"id\":\"b10\"},\"end\":35303,\"start\":35081},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b11\"},\"end\":35516,\"start\":35305},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":1738567},\"end\":35755,\"start\":35518},{\"attributes\":{\"id\":\"b13\"},\"end\":36017,\"start\":35757},{\"attributes\":{\"doi\":\"arXiv:1509.02971\",\"id\":\"b14\"},\"end\":36446,\"start\":36019},{\"attributes\":{\"doi\":\"10.1109/devlrn.2012.6400807\",\"id\":\"b15\",\"matched_paper_id\":7485863},\"end\":36922,\"start\":36448},{\"attributes\":{\"doi\":\"arXiv:1611.03673\",\"id\":\"b16\"},\"end\":37391,\"start\":36924},{\"attributes\":{\"id\":\"b17\"},\"end\":37784,\"start\":37393},{\"attributes\":{\"doi\":\"arXiv:1605.09128\",\"id\":\"b18\"},\"end\":38114,\"start\":37786},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":6933296},\"end\":38416,\"start\":38116},{\"attributes\":{\"doi\":\"arXiv:1511.06279\",\"id\":\"b20\"},\"end\":38615,\"start\":38418},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":234198},\"end\":38925,\"start\":38617},{\"attributes\":{\"id\":\"b22\"},\"end\":39169,\"start\":38927},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":16046818},\"end\":39438,\"start\":39171},{\"attributes\":{\"doi\":\"arXiv:1702.06053\",\"id\":\"b24\"},\"end\":39681,\"start\":39440},{\"attributes\":{\"doi\":\"arXiv:1507.00814\",\"id\":\"b25\"},\"end\":40012,\"start\":39683},{\"attributes\":{\"doi\":\"arXiv:1703.05407\",\"id\":\"b26\"},\"end\":40356,\"start\":40014},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":7961699},\"end\":40677,\"start\":40358},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":9166388},\"end\":40977,\"start\":40679},{\"attributes\":{\"doi\":\"arXiv:1604.07255\",\"id\":\"b29\"},\"end\":41328,\"start\":40979},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":14208912},\"end\":41677,\"start\":41330},{\"attributes\":{\"id\":\"b31\"},\"end\":41830,\"start\":41679}]", "bib_title": "[{\"end\":31771,\"start\":31727},{\"end\":32092,\"start\":32035},{\"end\":32485,\"start\":32466},{\"end\":33108,\"start\":33040},{\"end\":34126,\"start\":34074},{\"end\":34539,\"start\":34477},{\"end\":35565,\"start\":35518},{\"end\":36517,\"start\":36448},{\"end\":37461,\"start\":37393},{\"end\":38184,\"start\":38116},{\"end\":38687,\"start\":38617},{\"end\":39203,\"start\":39171},{\"end\":40408,\"start\":40358},{\"end\":40718,\"start\":40679},{\"end\":41412,\"start\":41330}]", "bib_author": "[{\"end\":31785,\"start\":31773},{\"end\":31807,\"start\":31785},{\"end\":31820,\"start\":31807},{\"end\":31839,\"start\":31820},{\"end\":32110,\"start\":32094},{\"end\":32129,\"start\":32110},{\"end\":32146,\"start\":32129},{\"end\":32158,\"start\":32146},{\"end\":32172,\"start\":32158},{\"end\":32184,\"start\":32172},{\"end\":32502,\"start\":32487},{\"end\":32520,\"start\":32502},{\"end\":32537,\"start\":32520},{\"end\":32551,\"start\":32537},{\"end\":32967,\"start\":32949},{\"end\":33123,\"start\":33110},{\"end\":33135,\"start\":33123},{\"end\":33153,\"start\":33135},{\"end\":33165,\"start\":33153},{\"end\":33180,\"start\":33165},{\"end\":33209,\"start\":33180},{\"end\":33527,\"start\":33514},{\"end\":33545,\"start\":33527},{\"end\":33559,\"start\":33545},{\"end\":33571,\"start\":33559},{\"end\":33590,\"start\":33571},{\"end\":33835,\"start\":33823},{\"end\":33849,\"start\":33835},{\"end\":33866,\"start\":33849},{\"end\":33881,\"start\":33866},{\"end\":34144,\"start\":34128},{\"end\":34153,\"start\":34144},{\"end\":34163,\"start\":34153},{\"end\":34178,\"start\":34163},{\"end\":34194,\"start\":34178},{\"end\":34209,\"start\":34194},{\"end\":34558,\"start\":34541},{\"end\":34573,\"start\":34558},{\"end\":34585,\"start\":34573},{\"end\":34600,\"start\":34585},{\"end\":34901,\"start\":34886},{\"end\":34917,\"start\":34901},{\"end\":35128,\"start\":35110},{\"end\":35143,\"start\":35128},{\"end\":35156,\"start\":35143},{\"end\":35366,\"start\":35349},{\"end\":35376,\"start\":35366},{\"end\":35582,\"start\":35567},{\"end\":35821,\"start\":35806},{\"end\":35835,\"start\":35821},{\"end\":35851,\"start\":35835},{\"end\":35866,\"start\":35851},{\"end\":36030,\"start\":36019},{\"end\":36052,\"start\":36030},{\"end\":36068,\"start\":36052},{\"end\":36085,\"start\":36068},{\"end\":36096,\"start\":36085},{\"end\":36108,\"start\":36096},{\"end\":36121,\"start\":36108},{\"end\":36134,\"start\":36121},{\"end\":36144,\"start\":36134},{\"end\":36533,\"start\":36519},{\"end\":36554,\"start\":36533},{\"end\":36986,\"start\":36970},{\"end\":37002,\"start\":36986},{\"end\":37015,\"start\":37002},{\"end\":37029,\"start\":37015},{\"end\":37043,\"start\":37029},{\"end\":37058,\"start\":37043},{\"end\":37071,\"start\":37058},{\"end\":37086,\"start\":37071},{\"end\":37101,\"start\":37086},{\"end\":37120,\"start\":37101},{\"end\":37479,\"start\":37463},{\"end\":37498,\"start\":37479},{\"end\":37512,\"start\":37498},{\"end\":37527,\"start\":37512},{\"end\":37540,\"start\":37527},{\"end\":37558,\"start\":37540},{\"end\":37861,\"start\":37849},{\"end\":37885,\"start\":37861},{\"end\":37901,\"start\":37885},{\"end\":37914,\"start\":37901},{\"end\":38196,\"start\":38186},{\"end\":38210,\"start\":38196},{\"end\":38227,\"start\":38210},{\"end\":38432,\"start\":38420},{\"end\":38450,\"start\":38432},{\"end\":38709,\"start\":38689},{\"end\":39010,\"start\":38995},{\"end\":39220,\"start\":39205},{\"end\":39235,\"start\":39220},{\"end\":39250,\"start\":39235},{\"end\":39276,\"start\":39250},{\"end\":39284,\"start\":39276},{\"end\":39504,\"start\":39490},{\"end\":39525,\"start\":39504},{\"end\":39774,\"start\":39764},{\"end\":39789,\"start\":39774},{\"end\":39804,\"start\":39789},{\"end\":39812,\"start\":39804},{\"end\":40107,\"start\":40085},{\"end\":40123,\"start\":40107},{\"end\":40137,\"start\":40123},{\"end\":40149,\"start\":40137},{\"end\":40426,\"start\":40410},{\"end\":40441,\"start\":40426},{\"end\":40452,\"start\":40441},{\"end\":40738,\"start\":40720},{\"end\":40754,\"start\":40738},{\"end\":41057,\"start\":41043},{\"end\":41072,\"start\":41057},{\"end\":41084,\"start\":41072},{\"end\":41094,\"start\":41084},{\"end\":41110,\"start\":41094},{\"end\":41118,\"start\":41110},{\"end\":41424,\"start\":41414},{\"end\":41439,\"start\":41424},{\"end\":41718,\"start\":41700},{\"end\":41734,\"start\":41718}]", "bib_venue": "[{\"end\":31864,\"start\":31839},{\"end\":32233,\"start\":32184},{\"end\":32659,\"start\":32574},{\"end\":33215,\"start\":33209},{\"end\":33512,\"start\":33463},{\"end\":33821,\"start\":33762},{\"end\":34258,\"start\":34209},{\"end\":34665,\"start\":34600},{\"end\":34961,\"start\":34933},{\"end\":35108,\"start\":35081},{\"end\":35347,\"start\":35305},{\"end\":35614,\"start\":35582},{\"end\":35804,\"start\":35757},{\"end\":36211,\"start\":36160},{\"end\":36669,\"start\":36581},{\"end\":36968,\"start\":36924},{\"end\":37564,\"start\":37558},{\"end\":37847,\"start\":37786},{\"end\":38253,\"start\":38227},{\"end\":38759,\"start\":38709},{\"end\":38993,\"start\":38927},{\"end\":39288,\"start\":39284},{\"end\":39488,\"start\":39440},{\"end\":39762,\"start\":39683},{\"end\":40083,\"start\":40014},{\"end\":40501,\"start\":40452},{\"end\":40782,\"start\":40754},{\"end\":41041,\"start\":40979},{\"end\":41496,\"start\":41439},{\"end\":41698,\"start\":41679},{\"end\":32731,\"start\":32661}]"}}}, "year": 2023, "month": 12, "day": 17}