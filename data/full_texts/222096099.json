{"id": 222096099, "updated": "2022-01-21 12:14:14.538", "metadata": {"title": "Misinformation Detection and Adversarial Attack Cost Analysis in Directional Social Networks", "authors": "[{\"middle\":[],\"last\":\"Shao\",\"first\":\"Huajie\"},{\"middle\":[],\"last\":\"Yao\",\"first\":\"Shuochao\"},{\"middle\":[],\"last\":\"Jing\",\"first\":\"Andong\"},{\"middle\":[],\"last\":\"Liu\",\"first\":\"Shengzhong\"},{\"middle\":[],\"last\":\"Liu\",\"first\":\"Dongxin\"},{\"middle\":[],\"last\":\"Wang\",\"first\":\"Tianshi\"},{\"middle\":[],\"last\":\"Li\",\"first\":\"Jinyang\"},{\"middle\":[],\"last\":\"Yang\",\"first\":\"Chaoqi\"},{\"middle\":[],\"last\":\"Wang\",\"first\":\"Ruijie\"},{\"middle\":[],\"last\":\"Abdelzaher\",\"first\":\"Tarek\"}]", "venue": "2020 29th International Conference on Computer Communications and Networks (ICCCN)", "journal": "2020 29th International Conference on Computer Communications and Networks (ICCCN)", "publication_date": {"year": 2020, "month": null, "day": null}, "abstract": "This paper develops a novel detection system of possibly fake accounts on public social media, called FADE, that uses features based on group behaviors to identify suspicious groups. The work is motivated by the prospect of mitigating misinformation campaigns on social media, where malicious entities on directional social networks pose as credible sources and coordinate the spreading of highly corroborated false information. Instead of account-level detection, this paper aims to detect the very group activity that underlies misinformation campaigns; namely, the coordinated spreading of messages to boost (misinformation) visibility. The existing group detection methods group users into two clusters (fake or not) and directly produce clusters of fake accounts. Conversely, we group users into many clusters based on information propagation patterns and user features and then classify them. The benefit of multiple clusters is that we can detect suspicious behavior more easily from cluster-wide statistics. In order to improve clustering accuracy, we analyze and select the most important features for clustering based on Bayesian optimization instead of using all the features. Accordingly, similarity metrics are defined that allow clustering of individually plausible accounts in a manner that enables one to detect suspicious clusters of activity. Cluster-level features are then used to decide if the cluster is benign. We further explore the cost of adversarial attacks on our detection model. Evaluation results on Twitter data sets demonstrate that our proposed approach outperforms state-of-the-art baselines in detecting accounts created for information manipulation campaigns. In addition, we show that the cost of subverting detection (without reducing the effectiveness of the attacker\u2019s campaign) is high.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "3090515407", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icccn/ShaoYJLLW0YWA20", "doi": "10.1109/icccn49398.2020.9209609"}}, "content": {"source": {"pdf_hash": "0892eee87c54cece0cb4de00d3aa9091c62fcd51", "pdf_src": "IEEE", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "12ee80402513f1cec7d238da86be849b309f5254", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/0892eee87c54cece0cb4de00d3aa9091c62fcd51.txt", "contents": "\nMisinformation Detection and Adversarial Attack Cost Analysis in Directional Social Networks\n\n\nHuajie Shao hshao5@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nShuochao Yao \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nAndong Jing ajing2@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nShengzhong Liu \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nDongxin Liu dongxin3@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nTianshi Wang tianshi3@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nJinyang Li jinyang7@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nChaoqi Yang chaoqiy2@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nRuijie Wang ruijiew2@illinois.edu. \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nTarek Abdelzaher \nDepartment of Computer Science\nUniversity of Illinois at Urbana-Champaign\n\n\nMisinformation Detection and Adversarial Attack Cost Analysis in Directional Social Networks\nIndex Terms-social networksfake accounts detectionadver- sarial attacksimilarityclustering\nThis paper develops a novel detection system of possibly fake accounts on public social media, called FADE, that uses features based on group behaviors to identify suspicious groups. The work is motivated by the prospect of mitigating misinformation campaigns on social media, where malicious entities on directional social networks pose as credible sources and coordinate the spreading of highly corroborated false information. Instead of account-level detection, this paper aims to detect the very group activity that underlies misinformation campaigns; namely, the coordinated spreading of messages to boost (misinformation) visibility. The existing group detection methods group users into two clusters (fake or not) and directly produce clusters of fake accounts. Conversely, we group users into many clusters based on information propagation patterns and user features and then classify them. The benefit of multiple clusters is that we can detect suspicious behavior more easily from cluster-wide statistics. In order to improve clustering accuracy, we analyze and select the most important features for clustering based on Bayesian optimization instead of using all the features. Accordingly, similarity metrics are defined that allow clustering of individually plausible accounts in a manner that enables one to detect suspicious clusters of activity. Cluster-level features are then used to decide if the cluster is benign. We further explore the cost of adversarial attacks on our detection model. Evaluation results on Twitter data sets demonstrate that our proposed approach outperforms state-of-the-art baselines in detecting accounts created for information manipulation campaigns. In addition, we show that the cost of subverting detection (without reducing the effectiveness of the attacker's campaign) is high.\n\nI. INTRODUCTION\n\nSocial media, such as Twitter and Facebook, have become weaponized as tools to misinform, intimidate, recruit, or manipulate (opinions of) a target population. In this paper, we aim to detect user accounts engaged in such activities based on their group behaviors, in an attempt to find fake accounts. We are specifically interested in directional social networks, where links are asymmetric (as opposed to being reciprocal). In such networks, an information source does not interact with its followers, making it harder to distinguish true sources from fake ones. A prime example is Twitter, where users might follow a trending online information source or new phenomenon, without the expectation of two-way interaction.\n\nPrior literature on the topic includes myriads of fact-finding techniques that ascertain the veracity of individual observations as well as the reliability of benign albeit imperfect sources (e.g., see recent work [1]- [4]). They include, but not limited to detection of accidental errors [5], and isolation of individual rumors [6]. In contrast, in this paper, we aim to detect coordinated misinformation campaigns.\n\nOur insight is that, different from the spread of truthful data, in the absence of sufficient support from trusted sources, misinformation campaigns often attempt to replace the preexistence of trust with added volume, creating artificial cascades to spread their messages. An easy way to create such cascades is to utilize fake accounts. Hence, detection of a misinformation campaign usually results in the identification of accounts that violate user agreements [7].\n\nSeveral versions of the above problem were addressed in past literature (e.g., see recent overviews of fake account detection in online social networks [8], [9]). For networks that allow reciprocal relations among users (e.g., \"friending\" on Facebook), several algorithms were proposed that assume it is hard for sybil accounts to maintain reciprocal relations with real users. This insight led to solutions that analyze the topology of reciprocal links as a way to identify sybil accounts [10], [11], as well as research that studies the efficacy of these solutions in the wild [12]. In contrast, this paper considers directional social networks, such as Twitter, where links are asymmetric. In directional networks, links do not imply a reciprocal social relationship (e.g., friendship), and as such do not require an interactive relationship maintenance effort. For example, by sending content of interest to a target population, sybil accounts may gather followers without the need to interact with them beyond the one-sided broadcast. Said differently, it is easier for sybil accounts to lure followers than it is for them to make friends and maintain interactive reciprocal relationships. As a result, techniques based on the (assumption of) difficulty in maintaining reciprocal relations for sybil accounts do not apply well for directional networks.\n\nAnother variation of previous work focused on spammers [13], [14]. Such accounts spread unsolicited messages (e.g., unsolicited advertising) that are typically identified as such by the recipients. Techniques for spammer detection therefore focused on features of these messages that correlate with their unsolicited nature. Many prior work studied the features of users and spam content, and then developed supervised learning solutions to detect individual accounts that engage in spam [15], [16]. In contrast, we focus on scenarios, where fake accounts post on topics of interest to their target audience, hence possibly generating a following not unlike that of real users. In this case, there is no significant difference in the nature of source content. It is therefore difficult to distinguish those fake accounts by looking at their individual features, or the features of their individual messages.\n\nInstead, we focus on detecting the core behavior that underlies a misinformation campaign; namely, that of coordinated spreading of specific information messages. A reliable indicator of such a campaign is thus similarity in behavior across accounts, as opposed to features of individual accounts. Such similarity can be uncovered by clustering accounts according to appropriately designed similarity metrics. Not all similarity is an indication of misbehaviour. Hence, once clusters are formed, one needs to decide which clusters are more likely to be composed of fake accounts. A few other cluster-level detection methods have recently been proposed to identify groups of fake users [17]- [20]. A distinguishing property of our solution compared to the above work is that we separate clustering (detection of similar user behaviors) and classification (labeling a cluster as suspicious or not). In contrast, the above solutions attempt to integrate the two in order to directly produce clusters of fake accounts. The separation is akin to an over-approximation of a hard problem. It allows us to relax some constraints in the clustering phase, thereby generating more clusters, including those of honest users. Since user properties are aggregated in each cluster, the clustering simplifies the subsequent classification stage, allowing it to detect suspicious behavior more easily from cluster-wide statistics. Moreover, we select the explainable and most important features used for clustering using Bayesian optimization. Evaluation confirms the validity of the above insight.\n\nWe also analyze the cost of adversarial attacks on our detection scheme. Given full knowledge of our model after deploying it online, how difficult is it for an attacker to fool the proposed algorithms by perturbing relevant features to avoid detection? We demonstrate that malicious users need more sophistication (i.e., will incur a higher attack cost) to break our scheme. We divide the underlying cost into two components we call maintenance cost and plausibility cost. The former lies primarily in the need for the passage of time before accounts can be used for effective attacks. The latter lies in the messaging; the sybil accounts will need to propagate a sufficient number of non-attack messages to avoid detection. We discuss these metrics in more detail in later sections.\n\nWe evaluate the performance of the resulting system on realworld data sets collected from Twitter, and also deploy our method online to detect misinformation attacks on a stream of Twitter data in real time. Evaluation results demonstrate that the proposed method outperforms existing baselines for fake account detection. Our method is successful at finding fake accounts that would later be suspended by Twitter.\n\nThe rest of the paper is organized as follows. Section II presents the overall design of our FADE system. In Section III, we introduce user clustering to identify groups that share similar behaviors. Section IV presents classifier training using real-world data sets to detect suspicious groups. Section V dis-cusses cost metrics used in assessing the difficulty of thwarting our detection scheme. We evaluate the performance of the proposed system in Section VI. Section VII summaries the related work on fake accounts detection. Finally, we conclude the paper in Section VIII.\n\n\nII. SYSTEM OVERVIEW\n\nThe overall framework of the Fake Account Detection (FADE) system is shown in Fig. 1. From left to right, the figure illustrates the input data, where sources produce claims at certain points in time. Based on these claims and their timing, sources are grouped into clusters, shown in the next stage. A vector of features is then defined for each cluster that allows the system to label clusters as fake or not. All accounts within a cluster that is labeled \"fake\" are deemed to be fake accounts. There are two main algorithmic problems in this system:\n\n\u2022 Similarity-based clustering: When accounts are engaged in a misinformation campaign, they need to spread a target set of messages at scale, often in a short amount of time. We can thus use similarity metrics to detect groups of users who spread similar messages at similar times. Our similarity-based clustering method (to group sources according to their group behaviors) is discussed in detail in Section III. \u2022 Cluster classification: After clustering user accounts, we can find cluster-level features that aid with fake account detection. A supervised learning algorithm is used to learn cluster-level features associated with fake groups.\n\nTo train the learning algorithms, we label the ground truth of each cluster based on majority voting. Namely, if the majority of users in a cluster are fake, this cluster is labelled as a fake cluster. Features of each cluster and its label are used to train the classifier based on real-world datasets collected from Twitter. The trained classifier is used to label new clusters as fake or not. Section IV describes the algorithm used to label account clusters. It is important to note that the goals of the similarity-based clustering problem and the cluster classification problem, while similar, are not exactly the same, leading to a difference in the features used in each case. Specifically, in clustering users by similarity, we focus on features that are more likely to be similar for individual accounts within the same category (fake versus not), and less similar for accounts in different categories. In contrast, in training a classifier to label a cluster, we can use any feature as long as its population statistics are different across the categories. The latter criterion is less restrictive. For example, the mean of some user metric (e.g., number of followers) might be larger within one category compared to another making this mean a good feature to use for labeling existing clusters. However, this metric might have a very large standard deviation within each category, making it less suitable for similarity-based clustering of individual accounts. It is this insight that motivates separation of clustering and classification (and likely leads to improvements over approaches that do not feature such separation, as the evaluation  suggests). We describe our solutions to the aforementioned two problems in the next two sections, respectively.\n\n\nIII. SIMILARITY-BASED CLUSTERING\n\nIn this section, we design a similarity metric for purposes of clustering user accounts that share similar information propagation behaviors. We first describe our feature selection rationale. We then present a similarity score that combines the most promising features according to the described rationale. Finally, we test this scoring technique empirically to finalize the used features and their relative weights. With best features and weights finalized, the design of our similarity metric is complete. This metric is then used for account clustering. Below, we describe these design steps in more detail.\n\n\nA. Feature Selection\n\nWe considered several features for the purposes of identifying groups of accounts utilized in the same misinformation campaign. These features are discussed below:\n\n\u2022 Claim similarity: By definition, users engaged in the same misinformation campaign will be spreading similar messages over time. We define the feature sourceClaim as the (Jaccard) similarity between streams of messages sent by two users; that's to say, the number of identical messages sent over the total number of unique messages sent by the pair of users. Users who agree on messages with an unusual frequency are thus grouped together. This feature is key to our detection framework. \u2022 Account created time: Since legitimate users can occasionally have a large agreement in opinions, much like ones engaged in misinformation campaigns, such agreement alone is an inadequate metric to detect malicious intent. Hence, we additionally consider account created time, createdTime, in our similarity assessment. The insight here is that in the presence of adequate countermeasures, users engaged in activities that violate service agreements will eventually be caught by algorithms such as the one described in this paper. This curtails the longevity of fake accounts. Hence, on average, fake accounts will be younger than legitimate accounts, thereby motivating the use of account created time as a feature. Account clusters engaged in misinformation campaigns will generally be composed of accounts with more recent created times.\n\n\u2022 Message timestamps: We also considered similarity in timestamps of identical messages, postTime, from different users. The argument for considering this metric is that misinformation campaigns must propagate similar messages within a short amount of time. Hence, one expects that such messages will have similar timestamps. \u2022 Number of followees: We considered use of similarity in followees (other accounts followed by the users in the cluster). The malicious users may follow a certain account to launch campaigns or promote advertisements, so we may find the similarity among them. \u2022 Number of followers: Another feature we considered is followers of nodes involved in the cluster. In principle, since nodes contributing to the same misinformation campaign are of the same ideology, they may attract some of the same followers. \u2022 Reputation: The last feature we considered is reputation [21] of users in the cluster. It refers to the ratio of followers to the total number of followees and followers, defined by\nReputation = # followers # followers + # followees(1)\nIn general, a user is more reliable if he or she has higher reputation. Thus, this feature may help us distinguish the honest users from malicious users in the cluster. Motivated by these observations, we choose six important features to compute similarity over; namely, similarity in tweets (sourceClaim), similarity in account created time (createdTime), and similarity in timestamps of same tweets (postTime), similarity in number of followers (numFollowers), similarity in number of followees (numFollowees) and user reputation (Reputation). Finally, we find the best combinations of features and the corresponding weights to cluster users based on Bayesian optimization method.\n\n\nB. The Similarity Score\n\nIn this section, we detail how the six features identified above are computed and combined into a single similarity score for user accounts. We call it the heterogeneous feature similarity score (HFSS).\n\nTo compute sourceClaim, we first use cosine similarity [22] to measure the text similarity of two claims. In this paper, claim refers to a statement (tweet) made by users on Twitter. Claims whose similarity exceeds a threshold are considered identical and are said to be in the same cascade. We say that the cascade is propagated by all sources who contributed one of the claims in the cascade. On Twitter, claims correspond to individual tweets. Cascades represent sets of similar tweets that are retweeted or replied by users. Let S i C and S j C denote the set of cascades propagated by source S i and S j during the time period of interest. The Jaccard similarity between sources S i and S j is defined by:\nP1(Si, Sj) = |SiC \u2229 SjC| |SiC \u222a SjC| .(2)\nEquation (2) assumes that when two sources (or accounts) make many same or similar claims together, it is very likely that they come from the same campaign.\n\nFor feature createdTime, we use a time difference approach to compute the similarity between a pair of source created times. Let \u2206t i,j denote the time difference in creation time between a pair of users S i , S j ; T c denote a constant time window, such as 30 days. The similarity score between a pair of sources, according to creation time, is computed as follows:\nP2(Si, Sj) = Tc\u2212\u2206t i,j Tc \u2206ti,j \u2264 Tc 0 \u2206ti,j > Tc .(3)\nFrom the above Equation (3), we can see that the smaller the time difference \u2206t i,j , the higher the similarity value. For example, if \u2206t i,j = 0 (i.e., both accounts are created on the same day), the similarity value is 1. If the time difference \u2206t i,j > T c , the similarity value is 0.\n\nWe further adopt the above time difference method to measure similarity between message timestamps, postTime. Let \u2206\u03c4 i,j denote the average time difference of the post time of same claims between a pair of users S i , S j ; T p denote the constant time window, such as 24 hours. The timestamp similarity score can be defined as:\nP3(Si, Sj) = Tp\u2212\u2206\u03c4 i,j Tp \u2206\u03c4i,j \u2264 Tp 0 \u2206\u03c4i,j > Tp .(4)\nAccording to the above equation (4), the smaller the average time interval between posting of similar tweets by a pair of users, the higher the similarity score.\n\nFor feature numFollowers, we compute the similarity score using the ratio of the number of followers between a pair of users. Let N i and N j denote the number of followers for user S i and S j , respectively. The follower similarity score can be defined by\nP4(Si, Sj) = min(Ni, Nj) max(Ni, Nj)(5)\nAccording to the above equation, the closer the number of followers by a pair of users, the higher the similarity score. Note that, if there are no followers for both users S i and S j , their similarity score is set to 1. Similarly, we use the same methodology as equation (5) to compute the similarity score for feature numFollowees, and Reputation. Note that, here we do not present the detailed equations like Eq (5) in order to avoid redundancy.\n\nFinally, we can calculate the heterogeneous feature similarity score (HFSS) between a pair of users. The HFSS is defined by:\nHF SS(Si, Sj) = K k=1 \u03bb k P k (Si, Sj)(6)\nwhere \u03bb k (k = 1, 2, \u00b7 \u00b7 \u00b7 , K) is the relative weight for the similarity scores of individual features.\n\n\nC. Clustering with Two Stages\n\nWe propose a two-stages clustering approach to group similar users into a cluster based on the HFSS in the above Equation (6). In the first stage, we try to group the most similar users into a cluster. If the similarity score HF SS(S i , S j ) \u2265 threshold, users S i and S j are grouped together. Note that, different from commonly used clustering such as K-means, we do not need to fix the number of clusters for our method. Conversely, the number of clusters, Z, depends on the threshold of similarity score. Since some users could not get through the threshold, our next stage is to group these remaining users with nearest neighbor method by computing the total similarity score to each user in different Z clusters. Then we assign each user to a certain cluster with highest similarity score. We summarize the algorithm of computing HFSS for clustering sources in Algorithm 1.\n\n\nD. Best Candidate Selection with Bayesian Optimization\n\nEquation (6) can be interpreted as a family of possible similarity metrics that differ in their choice of \u03bb k (k = 1, 2, \u00b7 \u00b7 \u00b7 , 6). In particular, by setting \u03bb k = 0, the corresponding feature is eliminated from consideration. This calls for exploration of the best weights (and indeed the best subset of features) to consider in Equation (6). Hence, to finalize the design of our Algorithm 2: Tuning weights with Bayesian optimization method.\n\ninput : loss function f , input weights W, acquisition function A output: Optimal weights w * 1 D \u2190 initial sample (f , W);\n2 for i = 1 to T do 3 / * Gaussian process model * / 4 p(y|w, D) \u2190 N (\u00b5, \u03c3); 5 wi \u2190 argmax w\u2208W A(w, p(y|w, D)); 6 yi \u2190 f (wi) ; 7 D \u222a (wi, yi); 8\nW \u2190 wi ; 9 end 10 w * = argmax w\u2208W yi \u2208 D; 11 return w * HFSS metric, we empirically select the optimal combination of features to cluster users by, as well as the corresponding weights. Due to the multitude of features used for clustering, a large number of weights need to be tuned. To reduce the computational complexity, we adopt Bayesian optimization method [23] to automatically tune the weights of selected features for clustering. The basic idea of Bayesian optimization can be briefly summarized as two steps. The first step is to compute a posterior expectation of the loss function based on the previously evaluated points. The second step is to sample the loss at the new point which maximizes some utility of the expectation of loss. The optimal results could be obtained by repeating these two steps until convergence or until a prespecified number of iterations occurs. Algorithm 2 summarizes the tuning of weights of each feature with the help of the above Bayesian optimization method.\n\nTo tune the distance metric, this paper uses the weights of each feature, \u03bb k , as the learned parameter vector and the detection accuracy of groups of users by a Random Forest classifier as the loss function, f . The reader should not confuse this loss function with the classifier design presented in the next section. The current loss function is based on features used for clustering only with the purpose of fine-tuning the distance metric used for clustering. Later, we present a different classifier design that includes additional statistical features computed as aggregates over clustered populations.\n\nNext, we conduct empirical experiments to find the optimal weights of different features for clustering based on Bayesian optimization. To do so, we first collect real-world data sets from Twitter through their search API (that allows one to collect tweets that match keywords). In this study, we collected two real-world data traces related to the Mosul battle in Iraq in Mar. 2017 and ISIS in Libya from Nov. to Dec. in 2017 from Twitter. Table I briefly summarizes the two data traces. In our experiment, we select the most popular (top) 150 cascades and the corresponding sources to do experiments, because we are mainly interested in larger campaigns.\n\nIn the rest of this paper, we use the data set Libya ISIS for training and we use the dataset Mosul battle for testing. In other words, we assume that only the former data set has ground truth available for purposes of algorithm parameter turning.\n\nAccordingly, accuracy of different variants of the HFSS metric were compared using the data set Libya ISIS. Specifically, we were interested in finding out whether or not all six terms were necessary. One simple way is to use grid search method, which, however, generates sixty three (2 6 \u2212 1) variants of HFSS that differ in the terms that were zero'ed out. As a result, its computational complexity is very expensive. Instead, the Bayesian optimization method mentioned above automatically tunes the weights for different combinations of features to group users. For ground truthing the results, since the data are roughly two years old, we assumed that sufficient time had elapsed for Twitter to uncover which accounts were in fact fake. Hence, we checked the current status of all user accounts in the data set at the time of writing. Suspended accounts at the current time were labeled fake. Other accounts were inspected manually by independent graders to determine if they were fake or not. Some additional accounts were then labeled fake by the human graders because their names comprised random alphanumeric strings that appeared to be automatically generated and these accounts always re-tweeted content about campaigns or advertisements from a certain user. With all users in data set Libya ISIS labeled, clusters were produced using each variant of the HFSS similarity metric. Clusters with a majority of fake accounts were labeled fake (the purity of clustering will be discussed in Section VI-D). That label was then inherited by all accounts in the cluster. Hence, clusters comprised of only one category of accounts (fake or not) resulted in no individual account misclassifications. Clusters that mixed different categories of accounts resulted in misclassification of the minority category. Table II compares use of different combinations of the six features: createdTime(CT), postTime(PT), sourceClaim(SC), numFollowers(NFwer), numFollowees(NFee) and Reputation(Repu) in the HFSS metric. In addition, we list part of different variants obtained from Bayesian optimization results as representatives to compare their clustering performance. In each case, the table presents the best detection results from an optimal tuning of the non-zero parameters based on Bayesian optimization (also indicated in the table).\n\nIn Table II, accuracy is defined as the percentage of correctly classified accounts. Precision is defined as the percentage of accounts labeled \"fake\" that were indeed fake. Recall is defined as the percentage of fake accounts that were classified as such. The F1 measure denotes the geometric mean of precision and recall. From the table, we observe that the combination of two features, CreatedTime + sourceClaim, performs best. Interestingly, similarity in message timestamps does not seem to improve results. We conjecture that the reason is because some messages in misinformation campaigns are disseminated persistently over relatively long periods of time, making similarity in message timestamps less consequential. In addition, the number of followers and followees   do not improve the clustering performance, either. For feature numFollowers, we find that since nodes engaged in the same campaign carry similar information, users tend to find these nodes redundant and follow only one (or a sparse subset). Hence, no strong similarity was found in followers across nodes engaged in the same misinformation campaign. For feature numFollowees, the reason is that choice of followees is entirely under the control of the (malicious) entity launching the misinformation campaign and is largely orthogonal to the message being spread. Hence, it is fairly easy to engineer followees to defeat followee-based similarity metrics adopted by a detection algorithm. Accordingly, the feature Reputation does not work as well. Fig. 2 demonstrates the effect of various parameter settings on the accuracy of similarity-based clustering. Specifically, Fig. 2(a) and Fig. 2(b) show that the best settings for parameters, threshold and T c , are threshold = 0.85 and T c = 30, respectively. Based on the experiments reported in this subsection, we choose the combination of CreatedTime + sourceClaim as the final HFSS metric, and choose the parameters, threshold and T c , to be 0.85 and 30, respectively.\n\nThe reader is reminded that the above parameter tuning is done on the training data only, since we assume (by definition) that it is the only data set for which ground truth is available for parameter tuning purposes. Later, in the evaluation section, we show how the algorithm, tuned as described above, performs on actual test data (i.e., on a different data set from the one used for training).\n\n\nIV. CLASSIFIER TRAINING\n\nWith the similarity metric determined as described above, it remains to train a classifier to label the resulting clusters automatically as fake or not. As mentioned earlier, this problem may need a different set of training features compared to those used for similarity-based clustering. In the latter, one is interested in individual account features whose values are likely to be similar within the same category of accounts (most importantly, similar for fake accounts since those are the accounts we'd like to detect). In contrast, to classify a cluster, one can use features that have a high variance within a category, as long as their aggregate per-category statistics are different. A good example is the number of followers. Different users can differ significantly in the number of followers, making it a poor similarity metric. However, on average, fake accounts tend to have fewer followers (outside their cluster). Hence, this metric is meaningful for purposes of labeling account clusters as fake or not. Accordingly, we mainly adopt the features: Follower count, friend count, reputation, account created time, time interval since created time and posts timestamps, total tweets count, average tweets per day, verification of users, number of URLs per tweet, as the input of classifier.\n\nDifferent types of classifiers were trained based on the aforementioned cluster-level features to detect clusters of fake users. We first normalize each feature of individual users in each cluster to address the issue that some features have a broad range of values. We then use the basic statistical measures, mean and variance, to compute the new numerical features of each cluster. Finally, cluster-level features are used as the input of classification algorithms, such as random forest, decision tree and neural networks, to classify groups of fake users. Since classifier training is part of developing our algorithm, we assume that only the training data set, Libya ISIS, is available with ground truth data. Hence, we use k-fold cross validation, training the classifiers with part of the data set and testing with the remaining part to tune the parameters and choose important features.\n\nWe compared various supervised learning algorithms; namely, Random Forest (RF), SVM, Decision Tree (DT) and Neural Networks (NN). Fig. 3 shows the accuracy comparison for the different supervised learning algorithms using cluster-level features, norm + mean and norm + mean & variance, respectively. Here, feature set norm + mean means that we normalize each feature and then average the normalized features across each cluster. Feature set norm + mean & variance denotes that we also use variance of normalized features within each cluster. We can observe from this figure that RF-FADE performs best among all the algorithms under different cluster features. Hence, we use Random Forest to label clusters in the rest of this paper. Note that, we use the term RF-FADE instead of just RF in order to distinguish our algorithm from baselines that use RF. The above completes our design. It remains to evaluate how well it works on new data. We do so in the next section by testing performance using a different data set than what was used for training.\n\n\nV. COST OF SUCCESSFUL CAMPAIGNS\n\nIn this section, we explore the cost of thwarting the detection algorithm described in this paper. Consider a misinformation campaign designed to evade detection. What would the campaign organizers need to do? How much will it cost? We assume that the goal of a misinformation campaign is to generate information that spreads quickly on the social medium. Hence, two design parameters need to be manipulated. First, some fake, paid, or otherwise controlled accounts need to be created and used. We summarily refer to them simply as fake accounts. Second, these accounts need to deliver a consistent message that overwhelms the truth. It is precisely the latter imperative that our algorithm uses against the attacker. Delivery consistency generates similarity in message streams that we capture in order to identify the fake accounts. To avoid detection, the attacker will need to mix attack messages with other diverse messages that dilute similarity among fake accounts. Such messages, for example, might retweet selected real users to generate more similarity with these real users than the similarity within the attack cluster. Accordingly, we define two cost metrics: Definition 1 Plausibility Cost: It refers to the total number of non-attack messages that malicious users need to make. Let N f ake i be the number of total messages generated by the ith fake user, and let N attack i be the number of misinformation claims it generates. Let S be the set of all fake users involved in the campaign. The plausibility cost is denoted by:\nP Cost = i\u2208S (N f ake i \u2212 N attack i ) (7)\nThe more non-attack claims that fake users make, the higher their plausibility cost will be. Besides having to send extra messages that dilute similarity measures within an attack cluster, to launch an effective attack, one needs to use a large number of accounts within a short period of time to spread misinformation. Creating such accounts together (or within a short time) can be easily detected by our method. To avoid detection, misinformation campaigns need to use accounts created at different times, preferably not recently. This incurs a different cost, we call (account) maintenance cost: Definition 2 Maintenance Cost: It is defined as the sum (over all fake accounts) of the interval elapsed between the time a misinformation campaign is launched, say T attack , and the time the account is created, T created i . The overall cost is therefore:\nM Cost = i\u2208S (T attack \u2212 T created i )(8)\nNote, of course, that this second cost can be amortized by reusing the same account in multiple attacks (perhaps by creating a market for such \"old\" accounts). Re-use of accounts across multiple attacks has other risks, including increased exposure that may accelerate detection.\n\nIgnoring re-use, next, we explore the relationship between the above costs and the detection accuracy of the proposed algorithm by conducting extensive experiments.\n\n\nVI. PERFORMANCE EVALUATION\n\nIn this section, we evaluate the performance of the proposed FADE system on the real-world datasets collected from Twitter. We first present competing baselines and outline the experimental set-up, then detail the evaluation results.\n\n\nA. Baseline Methods\n\nWe compare our FADE method with state-of-the-art baselines proposed in recent literature for fake accounts detection below. Among them, we choose two popular clustering based detection models as well as some recent detection methods.\n\n\u2022 FADE: The new proposed approach in this paper. It detects the fake accounts based on clustering method. \u2022 DNA: This algorithm develops the digital DNA sequences to model online user behavior with a string [24]. \u2022 SynchroTrap: This system detects fake users by clustering similar users according to the distance between two users' actions [19]. \u2022 SVM-indiv: This algorithm was proposed in the literature [25]. They adopted the SVM algorithm to detect fake accounts based on the following features: user reputation, number of tweets the user replied, number of friends and followers and so on. \u2022 DT-indiv: This method was proposed by the literature [26]. They used the decision tree (DT) classifier to detect fake accounts on Twitter using both content features and user features. \u2022 RF-indiv: This method was proposed in the literature [27]. They proposed Random Forest (RF) algorithm to detect spam message and spam accounts.\n\n\nB. Experimental Settings\n\nTo evaluate accuracy of different detection algorithms, one needs ground truth data indicating for each user whether they are fake or not. To estimate ground truth, we send a request to retrieve information on each userID to the Twitter API 1 to verify the user. If it returns an error for a certain user, this user account has been suspended by Twitter. This userID is thus labeled as a fake account. Since some fake accounts may have not been suspended by Twitter, we then ask human graders to do their best to manually label the remaining accounts. In particular, we found that the names of some accounts comprised random alphanumeric strings that appear to have been automatically generated and they always re-tweet the campaigns or advertisements from a certain account. Those accounts were labeled fake as well.\n\nAs mentioned earlier, we use the real-world dataset 2 , Libya ISIS, as the training data and another data set, Mosul Battle, as the test data, respectively. For performance evaluation, we adopt commonly used information retrieval metrics-Recall, Precision, F1 score and Accuracy in this paper [28].\n\n\nC. Performance Analysis\n\nWe evaluate the performance of the proposed FADE on a real-world data sets collected from Twitter. In this experiment, we use the data set, Mosul Battle, as the testing data. Fig. 4 compares estimation accuracy of individual accounts for different algorithms. It can be seen that the proposed FADE algorithm outperforms all the baseline methods. Note that, the digital DNA model does not perform well due to two reasons. First of all, this method is used to detect a single group of fake accounts with similar patterns, but there are many different groups of fake accounts in our data sets. Secondly, the digital DNA sequence is very short due to limited user activities in our time period, causing many fake accounts to be predicted as honest users. For SynchroTrap, it has high recall but very low precision. This is because the IP addresses of users are not accessible and only the time difference of user actions can be used for clustering in our data sets. In addition, we find that cluster feature set, norm + mean, leads to a better estimation accuracy than norm + mean & variance. This is because the variance of feature values within each cluster is pretty high, making variance less useful for fake cluster detection. Therefore, this paper chooses the 1 https://tweeterid.com/ 2 https://github.com/shj1987/ICCCN2020-datasets  cluster-level feature set norm + mean for classification in the remaining experiments. Further, we evaluate the performance of different algorithms using the metrics Recall, Precision, and F1 score. Table III illustrates the comparison results of these three metrics as well as estimation accuracy. From this table, we can observe that RF-FADE has the highest Precision and F1 score among all the algorithms while its recall is a little smaller than SynchroTrap. However, SynchroTrap has very low precision and F1 score. By synthesizing these three metrics and estimation accuracy, we can conclude that RF-FADE still has the best estimation performance.\n\nMirroring what we did for parameter tuning, we also compare the selected combination of features, CreatedTime + sourceClaim, with the other combinations with high accuracy, as shown in Table IV. From this table, it can be observed that the combination, CreatedTime + sourceClaim, has the largest average rank over all four criteria on the test data as well (previously, we established this observation for training data). The observation reinforces that clustering by similarity in account created time and streams of claims is the best solution.\n\n\nD. Scalability of FADE and Clustering Purity\n\nIn order to demonstrate the scalability of the proposed FADE, we conduct another experiment by varying the proportion of fake clusters in the testing data. Table V illustrates the comparison results under different proportion of fake clusters. We can observe that when the percentage of fake clusters vary from 22.9% to 67.9%, the detection accuracy slightly drops while the precision and F1 score gradually increase. However, their overall evaluation performance keeps stable and does not vary too much. Therefore, we can conclude that the proposed FADE is scalable. As we know, for cluster-level detection algorithm, its accuracy will be influenced by the purity of clustering. In this paper, we find that the average clustering purity of our method is 90.3% and 92.1% for training data and testing data, respectively. Hence, it demonstrates the effectiveness of our similarity based clustering method for fake accounts detection. \n\n\nE. Cost Analysis of Attackers\n\nBesides, we study how the cost of adversarial attacks impacts the detection accuracy of FADE. To control the two dimensions of cost (plausibility and maintenance), we pick the age of fake accounts, T attack \u2212 T created i , from a uniform distribution \u223c U(0, T ), where T varies from 0 to 200 days. We then endow fake users with behaviors that foil clustering by making them less similar to each other and more similar to real users. Specifically, in addition to sending misinformation (exactly two claims in this experiment), we make fake users repeat true claims made by honest users with similar account creation timestamps. In this way, they increase their similarity with honest users. In order to emulate this attack, each fake user randomly samples N t i = N f ake i \u2212 N attack i true events (reported by honest users) and repeats those claims in addition to the misinformation claims. We change N t i from 0 to 20 for each fake user in our experiments. Fig. 5 shows the empirically found detection accuracy, recall, and precision for different average values of maintenance cost and plausibility cost. We observe that to cause the detection accuracy, recall and precision of FADE to drop, the average maintenance cost and plausibility cost for each fake user must be high. In contrast, when fake users make only few non-attack claims or use accounts created just before misinformation campaign launch, the detection accuracy of our algorithm remains largely unaffected. Take accuracy in Fig. 5(a) as an example. In order to make the detection accuracy drop by about 15%, fake users need to use accounts created 100 days earlier, and at the same time report 20 non-attack messages on average in addition to the two misinformation campaigns in our data sets. Therefore, we can conclude that the cost of subverting our model is high.\n\n\nF. Comments on Use of FADE\n\nWe apply our FADE to a stream of Twitter data in realtime to detect active misinformation attacks online 3 . We note that RF-FADE on occasion identified fake accounts that have not been suspended by Twitter yet. We manually analyze samples of accounts that are classified as fake by our proposed algorithm but that have not been suspended by Twitter. Admittedly, it is hard to confirm that these accounts are truly fake. However, several attributes stand out about these accounts; Namely, (i) they always re-tweets the content about campaigns or advertisements together from a certain account in order to make that account popular; (ii) they almost have the similar user IDs and nicknames because they create the accounts within a short time period; (iii) their average tweets per day is very stable before stopping post permanently; (iv) they post tweets or re-tweet at very similar content and timestamps with others who are also identified as fake account manually; (v) most of them have a relatively fewer number of followers and followees compared to other legitimate users. Fig. 6 shows an example of three suspicious fake users identified by our method on India election stream data and they have not been suspended by Twitter at the time of writing. We can observe from Fig. 6 that the created time of these users' account is in the same month, June 2019, and their nicknames (**dav*) are almost same except for the last digit. In addition, these users usually frequently re-tweeted same tweets for same organizations or users in very similar timestamps. Also, in these three examples, all of them have relatively few number of followers and followings.\n\n\nVII. RELATED WORK\n\nThere are three main fake accounts detection methods: graph based detection, content based detection, and behavior based detection [29].\n\nGraph based methods [11], [30]- [33] mainly analyze the relationship between different users in social network. The earlier approaches, such as Sybilguard and SybilRand [10],  [11], mainly leverage random walk to cut off the edges between honest nodes and malicious nodes. However, these algorithms analyze the topology of reciprocal links as a way to identify Sybil nodes. They do not perform well in the directional networks, such as Twitter, where link does not mean friendship. Moreover, most of them do not take the user features into account.\n\nFor content-based detection approach [16], [34], [35], features such as length of tweets, Hashtags, sent date, URL and retweets are used for fake accounts detection. In the earlier works, the traditional machine learning algorithms, such as SVM and random forest, are adopted to detect fake accounts [25], [35]. Recently, researchers propose deep neural networks to further improve the detection accuracy based on context and metadata [34], [36]. However, this technique can also be evaded by malicious users because it mainly leverages account-level detection.\n\nThe behavior based detection method mainly adopts binary classification and clustering [18], [37]- [40]. For instance, the prior clustering methods, such as K-means and DBSCAN, mainly group similar users into two clusters (fake or true) based on their content features, user profiles or URL [18], [41], [42]. In contrast, we group users into many small groups based on information propagation patterns and user features, and then further classify them using cluster-level features. The advantage of our method is that it can detect the malicious behavior more easily when fake users try to purposely report different topics separately. In addition, the existing methods adopt all the available features to cluster users, while our work selects the most important features for clustering using Bayesian optimization. By doing this, we can filter out some noisy features and improve the clustering accuracy. Finally we further explain why the selected features are effective and not vulnerable to adversarial attacks by malicious users.\n\n\nVIII. CONCLUSIONS AND FUTURE WORK\n\nWe developed a novel clustering based detection system, called FADE, to detect groups of fake accounts that spew coordinated misinformation on social networks. The paper shows that similarity in streams of sent messages as well as similarity in account creation times are the best features to use for identifying groups of accounts that could be fake. After clustering based on these metrics, a wider array of cluster-level features can help classify groups into fake or real using supervised learning algorithms. These algorithms are shown to work better when applied to cluster-level features than when applied to individual account features. This is because individual accounts have larger variability along these feature dimensions. Grouping the accounts together allows aggregation over clusters, which creates more stable aggregate features. We evaluated the performance of the proposed FADE approach using real-world datasets collected from Twitter. The evaluation results demonstrated that the proposed FADE method has a better estimation accuracy than the state-of-theart baselines for fake accounts detection. More importantly, we package FADE into a tool applied to a stream of Twitter data in real-time to detect active misinformation attacks. We showed that our method is capable of finding suspected fake users that have not been suspended by Twitter yet. Besides, we analyzed the cost of adversarial attacks on our detection scheme, that confirms robustness of the scheme against subversion. In the future, since hand-crafted features are vulnerable to malicious users and time-consuming, we shall adopt graph neural networks to deal with this issue. In addition, we may consider an improved reputation score that allocates more weight on the influencer accounts. Finally, we shall consider testing the FADE on polarized datasets if available.\n\nFig. 1 :\n1Overall framework of FADE system for fake accounts detection.\n\nFig. 2 :\n2Parameters tuning for heterogeneous features based similarity score (Libya ISIS data set).\n\nFig. 3 :\n3Accuracy comparison for selecting the best classifier.\n\nFig. 4 :\n4Accuracy comparison for different methods.\n\nFig. 5 :\n5Detection performance of FADE under maintenance cost and plausibility cost.\n\nFig. 6 :\n6Example of suspicious fake accounts that have not been detected by Twitter..\n\n\nAlgorithm 1: HFSS for clustering sources input : Set of source claim SiC, SjC, U serIDs and \u2206ti,j and \u2206\u03c4i,j output: Cluster results (Z clusters): CLS 1 for Si \u2208 U serIDs do 2 for Sj \u2208 U serIDs do Compute HF SS(Si, Sj) using Eq.(6) ; if HF SS(Si, Sj) \u2265 thredhold then CLSz \u2190 (Si, Sj) ; // Clustering remaining users U 10 scoreList = []; 11 for user \u2208 U do 12 for cluster \u2208 CLS do 13 scoreList \u2190 Mean HF SS(Su, Sj) ;3 \n\n4 \n\n5 \n\n6 \n\nend \n\n7 \n\nend \n8 end \n9 14 \n\nend \n\n15 \n\nindex \u2190 Max(scoreList); \n\n16 \n\nCLS[index] \u2190 user; \n17 end \n18 return CLS \n\n\n\nTABLE I :\nIInformation summary about two datasets from TwitterData set \nStart Time (UTC) \nEnd Time (UTC) \n# of Assertions \nSelected assertions \nselected sources \nMosul Battle \nMar. 15 17:08:43, 2017 \nMar. 20 02:37:15, 2017 \n36180 \n150 \n7337 \nLibya ISIS \nNov. 5 19:30:12, 2017 \nDec. 29 23:53:11, 2017 \n12585 \n150 \n3065 \n\n\n\nTABLE II :\nIIPerformance comparison for combination of different features based on Bayesian optimizationCombination of Features \nweights \u03bb k (k = 1, 2, \u00b7 \u00b7 \u00b7 , 6) \nAccuracy \nRecall \nPrecision \nF1 score \nCT + SC \n(0.5, 0, 0.5, 0, 0, 0) \n0.93933 \n0.97015 \n0.96296 \n0.96654 \nCT + PT + SC + NFwer + NFee + Repu \n(1/6, 1/6, 1/6, 1/6, 1/6, 1/6) \n0.93406 \n0.96577 \n0.96107 \n0.96341 \nCT + PT + SC + NFwer + Repu \n(0.2, 0.2, 0.2 ,0.2, 0, 0.2) \n0.93704 \n0.95703 \n0.9761 \n0.96647 \nCT + PT + SC + Repu \n(0.25, 0.25, 0.25, 0, 0, 0.25) \n0.92058 \n0.96116 \n0.95192 \n0.95652 \nCT + PT + SC \n\n\nTABLE III :\nIIIPerformance evaluation using other evaluation metricsAlgorithms \nRecall \nPrecision F1 score Accuracy \nRF-FADE \n0.72313 \n0.74758 \n0.73515 \n0.84679 \nDNA \n0.0007 \n0.3333 \n0.0014 \n0.8103 \nSynchroTrap \n0.874 \n0.2035 \n0.33018 \n0.3275 \nSVM-indiv \n0.82710 \n0.53394 \n0.64895 \n0.73686 \nDT-indiv \n0.22897 \n0.55211 \n0.32370 \n0.71865 \nRF-indiv \n0.23715 \n0.59706 \n0.33946 \n0.72862 \n\n\n\nTABLE IV :\nIVPerformance comparison for combination of different featuresCombination of Features \nweights \u03bb k (k = 1, 2, \u00b7 \u00b7 \u00b7 , 6) Accuracy \nRecall \nPrecision F1 score \nCT + SC \n(0.5, 0, 0.5, 0, 0, 0) \n0.84679 \n0.72313 \n0.74758 \n0.73515 \nCT + PT + SC + NFwer + NFee + Repu \n(1/6, 1/6, 1/6, 1/6, 1/6, 1/6) \n0.79181 \n0.78238 \n0.66814 \n0.72076 \nCT + PT + SC + NFee + Repu \n(0.2, 0.2, 0.2, 0.2, 0, 0.2) \n0.68061 \n0.49074 \n0.87845 \n0.62970 \nCT + PT + SC + Repu \n(0.25, 0.25, 0.25, 0, 0, 0.25) \n0.76882 \n0.64571 \n0.75712 \n0.69699 \nCT + PT + SC \n(0.3, 0.1, 0.6, 0, 0, 0) \n0.82545 \n0.75901 \n0.65564 \n0.70355 \nCT + PT \n(0.5, 0.5, 0, 0, 0, 0) \n0.74411 \n0.48783 \n0.71244 \n0.57912 \nPT + SC \n(0, 0.1, 0.9, 0, 0, 0) \n0.85050 \n0.52392 \n0.62547 \n0.57021 \n\n\n\nTABLE V :\nVPerformance evaluation under different proportion of fake clustersPercentage Accuracy \nRecall \nPrecision F1 score \n22.9% \n0.84679 \n0.72313 \n0.74758 \n0.73515 \n29.7% \n0.83485 \n0.73309 \n0.81150 \n0.77030 \n34.6% \n0.82719 \n0.73684 \n0.83611 \n0.78334 \n41.4% \n0.81358 \n0.74353 \n0.85169 \n0.79394 \n51.4% \n0.80014 \n0.76065 \n0.86344 \n0.80879 \n67.9% \n0.79647 \n0.76366 \n0.91476 \n0.83241 \n100% \n0.76539 \n0.77249 \n0.93178 \n0.84469 \n\n\nhttp://apollo4.cs.illinois.edu/\nACKNOWLEDGMENTSResearch reported in this paper was sponsored in part by DARPA award W911NF-17-C-0099, DTRA award HDTRA1-18-1-0026, and the Army Research Laboratory under Cooperative Agreements W911NF-09-2-0053 and W911NF-17-2-0196.\nA constrained maximum likelihood estimator for unguided social sensing. H Shao, S Yao, Y Zhao, C Zhang, J Han, L Kaplan, L Su, T Abdelzaher, IEEE. H. Shao, S. Yao, Y. Zhao, C. Zhang, J. Han, L. Kaplan, L. Su, and T. Abdelzaher, \"A constrained maximum likelihood estimator for unguided social sensing,\" in IEEE INFOCOM 2018, 2018, pp. 2429- 2437.\n\nA survey on truth discovery. Y Li, J Gao, C Meng, Q Li, L Su, B Zhao, W Fan, J Han, ACM Sigkdd Explorations Newsletter. 172Y. Li, J. Gao, C. Meng, Q. Li, L. Su, B. Zhao, W. Fan, and J. Han, \"A survey on truth discovery,\" ACM Sigkdd Explorations Newsletter, vol. 17, no. 2, pp. 1-16, 2016.\n\nOptimizing source selection in social sensing in the presence of influence graphs. H Shao, S Wang, S Li, S Yao, Y Zhao, T Amin, T Abdelzaher, L Kaplan, Proceedings of ICDCS. ICDCSH. Shao, S. Wang, S. Li, S. Yao, Y. Zhao, T. Amin, T. Abdelzaher, and L. Kaplan, \"Optimizing source selection in social sensing in the presence of influence graphs,\" in Proceedings of ICDCS, 2017, pp. 1157-1167.\n\nUnsupervised fact-finding with multi-modal data in social sensing. H Shao, S Yao, Y Zhao, L Su, Z Wang, D Liu, S Liu, L Kaplan, T Abdelzaher, H. Shao, S. Yao, Y. Zhao, L. Su, Z. Wang, D. Liu, S. Liu, L. Kaplan, and T. Abdelzaher, \"Unsupervised fact-finding with multi-modal data in social sensing,\" in 2019 FUSION, 2019, pp. 1-8.\n\nSocial sensing: building reliable systems on unreliable data. D Wang, T Abdelzaher, L Kaplan, Morgan KaufmannD. Wang, T. Abdelzaher, and L. Kaplan, Social sensing: building reliable systems on unreliable data. Morgan Kaufmann, 2015.\n\nEmpirical evaluation of shallow and deep classifiers for rumor detection. A Kumar, V Singh, T Ali, S Pal, J Singh, Advances in Computing and Intelligent Systems. SpringerA. Kumar, V. Singh, T. Ali, S. Pal, and J. Singh, \"Empirical evaluation of shallow and deep classifiers for rumor detection,\" in Advances in Computing and Intelligent Systems. Springer, 2020, pp. 239-252.\n\nTowards detecting fake user accounts in facebook. A Gupta, R , Asia Security and Privacy. A. Gupta and R. Kaushal, \"Towards detecting fake user accounts in facebook,\" in Asia Security and Privacy (ISEASP), 2017, pp. 1-6.\n\nDetection of malicious social bots: A survey and a refined taxonomy. M Latah, Expert Systems with Applications. 113383M. Latah, \"Detection of malicious social bots: A survey and a refined taxonomy,\" Expert Systems with Applications, p. 113383, 2020.\n\nDetecting social bots on twitter: a literature review. E Alothali, N Zaki, E A Mohamed, H , 2018 International Conference on Innovations in Information Technology (IIT). IEEEE. Alothali, N. Zaki, E. A. Mohamed, and H. Alashwal, \"Detecting social bots on twitter: a literature review,\" in 2018 International Con- ference on Innovations in Information Technology (IIT). IEEE, 2018, pp. 175-180.\n\nAiding the detection of fake accounts in large scale social online services. Q Cao, M Sirivianos, X Yang, T Pregueiro, Proceedings of the 9th USENIX NSDI. the 9th USENIX NSDIQ. Cao, M. Sirivianos, X. Yang, and T. Pregueiro, \"Aiding the detection of fake accounts in large scale social online services,\" in Proceedings of the 9th USENIX NSDI, 2012, pp. 15-15.\n\nSybilguard: defending against sybil attacks via social networks. H Yu, M Kaminsky, P B Gibbons, A Flaxman, ACM SIGCOMM Computer Communication Review. 364H. Yu, M. Kaminsky, P. B. Gibbons, and A. Flaxman, \"Sybilguard: defending against sybil attacks via social networks,\" in ACM SIGCOMM Computer Communication Review, vol. 36, no. 4, 2006, pp. 267-278.\n\nUncovering social network sybils in the wild. Z Yang, C Wilson, X Wang, T Gao, B Y Zhao, Y Dai, ACM TKDD. 81Z. Yang, C. Wilson, X. Wang, T. Gao, B. Y. Zhao, and Y. Dai, \"Uncovering social network sybils in the wild,\" ACM TKDD, vol. 8, no. 1, p. 2, 2014.\n\nBot detection using a single post on social media. S Mohammad, M U Khan, M Ali, L Liu, M Shardlow, R Nawaz, 2019 Third World Conference on Smart Trends in Systems Security and Sustainablity. IEEES. Mohammad, M. U. Khan, M. Ali, L. Liu, M. Shardlow, and R. Nawaz, \"Bot detection using a single post on social media,\" in 2019 Third World Conference on Smart Trends in Systems Security and Sustainablity (WorldS4). IEEE, 2019, pp. 215-220.\n\nTwitter bot detection using bidirectional long short-term memory neural networks and word embeddings. F Wei, U T Nguyen, 2019 First IEEE TPS-ISA. IEEEF. Wei and U. T. Nguyen, \"Twitter bot detection using bidirectional long short-term memory neural networks and word embeddings,\" in 2019 First IEEE TPS-ISA. IEEE, 2019, pp. 101-109.\n\nDetecting spam accounts on twitter. Z Alom, B Carminati, E Ferrari, Proceeding of ASONAM. eeding of ASONAMZ. Alom, B. Carminati, and E. Ferrari, \"Detecting spam accounts on twitter,\" in Proceeding of ASONAM, 2018, pp. 1191-1198.\n\nA spam detection mechamism in social media using soft computing. P Tehlan, R Madaan, K K Bhatia, 2019 6th INDIACom. IEEEP. Tehlan, R. Madaan, and K. K. Bhatia, \"A spam detection mechamism in social media using soft computing,\" in 2019 6th INDIACom. IEEE, 2019, pp. 950-955.\n\nIn a world that counts: Clustering and detecting fake social engagement at scale. Y Li, O Martinez, X Chen, Y Li, J E Hopcroft, Proceedings of WWW. WWWY. Li, O. Martinez, X. Chen, Y. Li, and J. E. Hopcroft, \"In a world that counts: Clustering and detecting fake social engagement at scale,\" in Proceedings of WWW, 2016, pp. 111-120.\n\nDetecting spammers on social network through clustering technique. T Jose, S S Babu, Journal of Ambient Intelligence and Humanized Computing. T. Jose and S. S. Babu, \"Detecting spammers on social network through clustering technique,\" Journal of Ambient Intelligence and Humanized Computing, pp. 1-15, 2019.\n\nUncovering large groups of active malicious accounts in online social networks. Q Cao, X Yang, J Yu, C Palow, Proceedings of the 2014 ACM SIGSAC. the 2014 ACM SIGSACQ. Cao, X. Yang, J. Yu, and C. Palow, \"Uncovering large groups of active malicious accounts in online social networks,\" in Proceedings of the 2014 ACM SIGSAC, 2014, pp. 477-488.\n\nUnsupervised machine learning of open source russian twitter data reveals global scope and operational characteristics. C Griffin, B Bickel, arXiv:1810.01466arXiv preprintC. Griffin and B. Bickel, \"Unsupervised machine learning of open source russian twitter data reveals global scope and operational characteristics,\" arXiv preprint arXiv:1810.01466, 2018.\n\nDon't follow me: Spam detection in twitter. A H Wang, Proceedings of Security and cryptography (SECRYPT). Security and cryptography (SECRYPT)A. H. Wang, \"Don't follow me: Spam detection in twitter,\" in Proceed- ings of Security and cryptography (SECRYPT), 2010, pp. 1-10.\n\nSimilarity measures for text document clustering. A Huang, Proceedings of NZCSRSC2008. NZCSRSC2008A. Huang, \"Similarity measures for text document clustering,\" in Pro- ceedings of NZCSRSC2008, 2008, pp. 49-56.\n\nBoa: the bayesian optimization algorithm. M Pelikan, D E Goldberg, Conference on Genetic & Evolutionary Computation. M. Pelikan and D. E. Goldberg, \"Boa: the bayesian optimization algorithm,\" in Conference on Genetic & Evolutionary Computation, 1999.\n\nDna-inspired online behavioral modeling and its application to spambot detection. S Cresci, R Di Pietro, M Petrocchi, A Spognardi, M Tesconi, IEEE Intelligent Systems. 315S. Cresci, R. Di Pietro, M. Petrocchi, A. Spognardi, and M. Tesconi, \"Dna-inspired online behavioral modeling and its application to spambot detection,\" IEEE Intelligent Systems, vol. 31, no. 5, pp. 58-64, 2016.\n\nSupervised machine learning bot detection techniques to identify social twitter bots. P G Efthimion, S Payne, N Proferes, SMU Data Science Review. 125P. G. Efthimion, S. Payne, and N. Proferes, \"Supervised machine learning bot detection techniques to identify social twitter bots,\" SMU Data Science Review, vol. 1, no. 2, p. 5, 2018.\n\nIntegrated approach to detect spam in social media networks using hybrid features. K S Reddy, E S Reddy, International Journal of Electrical & Computer Engineering. 91K. S. Reddy and E. S. Reddy, \"Integrated approach to detect spam in social media networks using hybrid features.\" International Journal of Electrical & Computer Engineering (2088-8708), vol. 9, no. 1, 2019.\n\nSmsad: a framework for spam message and spam account detection. K S Adewole, N B Anuar, A Kamsin, A K Sangaiah, Multimedia Tools and Applications. K. S. Adewole, N. B. Anuar, A. Kamsin, and A. K. Sangaiah, \"Smsad: a framework for spam message and spam account detection,\" Multimedia Tools and Applications, pp. 1-36, 2017.\n\n. Apollo , Apollo, https://en.wikipedia.org/wiki/Precision and recall.\n\nA review of recent advance in online spam detection. Y Dou, Y. Dou, \"A review of recent advance in online spam detection,\" 2019.\n\nTaming social bots: Detection, exploration and measurement. A Mueen, N Chavoshi, A Minnich, Proceedings of the 28th ICKM. the 28th ICKMA. Mueen, N. Chavoshi, and A. Minnich, \"Taming social bots: Detection, exploration and measurement,\" in Proceedings of the 28th ICKM, 2019, pp. 2967-2968.\n\nIntegro: Leveraging victim prediction for robust fake account detection in osns. Y Boshmaf, D Logothetis, G Siganos, J Ler\u00eda, J Lorenzo, M Ripeanu, K Beznosov, NDSS. 15Y. Boshmaf, D. Logothetis, G. Siganos, J. Ler\u00eda, J. Lorenzo, M. Ripeanu, and K. Beznosov, \"Integro: Leveraging victim prediction for robust fake account detection in osns.\" in NDSS, vol. 15, 2015, pp. 8-11.\n\nGraph-hist: Graph classification from latent feature histograms with application to bot detection. T Magelinski, D Beskow, K M Carley, arXiv:1910.01180arXiv preprintT. Magelinski, D. Beskow, and K. M. Carley, \"Graph-hist: Graph classification from latent feature histograms with application to bot detection,\" arXiv preprint arXiv:1910.01180, 2019.\n\nA tensor-based framework for studying eigenvector multicentrality in multilayer networks. M Wu, S He, Y Zhang, J Chen, Y Sun, Y.-Y Liu, J Zhang, H V Poor, Proceedings of the National Academy of Sciences. 11631M. Wu, S. He, Y. Zhang, J. Chen, Y. Sun, Y.-Y. Liu, J. Zhang, and H. V. Poor, \"A tensor-based framework for studying eigenvector multicentrality in multilayer networks,\" Proceedings of the National Academy of Sciences, vol. 116, no. 31, pp. 15 407-15 413, 2019.\n\nDeep neural networks for bot detection. S Kudugunta, E Ferrara, Information Sciences. 467S. Kudugunta and E. Ferrara, \"Deep neural networks for bot detection,\" Information Sciences, vol. 467, pp. 312-322, 2018.\n\nTowards detecting compromised accounts on social networks. M Egele, G Stringhini, C Kruegel, G Vigna, IEEE Transactions on Dependable and Secure Computing. 144M. Egele, G. Stringhini, C. Kruegel, and G. Vigna, \"Towards detecting compromised accounts on social networks,\" IEEE Transactions on Dependable and Secure Computing, vol. 14, no. 4, pp. 447-460, 2015.\n\nTweetscore: Scoring tweets via social attribute relationships for twitter spammer detection. Y Zhang, H Zhang, X Yuan, N.-F Tzeng, Proceedings of the 2019 ACM Asia CCS. the 2019 ACM Asia CCSY. Zhang, H. Zhang, X. Yuan, and N.-F. Tzeng, \"Tweetscore: Scoring tweets via social attribute relationships for twitter spammer detection,\" in Proceedings of the 2019 ACM Asia CCS, 2019, pp. 379-390.\n\nBi-directional joint inference for user links and attributes on large social graphs. C Yang, L Zhong, L.-J Li, L Jie, Proceedings of WWW. WWWC. Yang, L. Zhong, L.-J. Li, and L. Jie, \"Bi-directional joint inference for user links and attributes on large social graphs,\" in Proceedings of WWW, 2017, pp. 564-573.\n\nReal-time detection of content polluters in partially observable twitter networks. M Nasim, A Nguyen, N Lothian, R Cope, L Mitchell, Proceedings of the The Web Conference. the The Web ConferenceM. Nasim, A. Nguyen, N. Lothian, R. Cope, and L. Mitchell, \"Real-time detection of content polluters in partially observable twitter networks,\" in Proceedings of the The Web Conference, 2018, pp. 1331-1339.\n\npaper2repo: Github repository recommendation for academic papers. H Shao, D Sun, J Wu, Z Zhang, A Zhang, S Yao, S Liu, T Wang, C Zhang, T Abdelzaher, Proceedings of The Web Conference 2020. The Web Conference 2020H. Shao, D. Sun, J. Wu, Z. Zhang, A. Zhang, S. Yao, S. Liu, T. Wang, C. Zhang, and T. Abdelzaher, \"paper2repo: Github repository recom- mendation for academic papers,\" in Proceedings of The Web Conference 2020, 2020, pp. 629-639.\n\nAn unsupervised approach to detect spam campaigns that use botnets on twitter. Z Chen, D Subramanian, arXiv:1804.05232arXiv preprintZ. Chen and D. Subramanian, \"An unsupervised approach to detect spam campaigns that use botnets on twitter,\" arXiv preprint arXiv:1804.05232, 2018.\n\nTroll detection: A comparative study in detecting troll farms on twitter using cluster analysis. M Engelin, F. De Silva, M. Engelin and F. De Silva, \"Troll detection: A comparative study in detecting troll farms on twitter using cluster analysis,\" 2016.\n\nI know you'll be back: Interpretable new user clustering and churn prediction on a mobile social application. C Yang, X Shi, L Jie, J Han, Proceedings of the 24th ACM SIGKDD. the 24th ACM SIGKDDC. Yang, X. Shi, L. Jie, and J. Han, \"I know you'll be back: Interpretable new user clustering and churn prediction on a mobile social application,\" in Proceedings of the 24th ACM SIGKDD, 2018, pp. 914-922.\n", "annotations": {"author": "[{\"start\":\"96\",\"end\":\"205\"},{\"start\":\"206\",\"end\":\"295\"},{\"start\":\"296\",\"end\":\"405\"},{\"start\":\"406\",\"end\":\"497\"},{\"start\":\"498\",\"end\":\"609\"},{\"start\":\"610\",\"end\":\"722\"},{\"start\":\"723\",\"end\":\"833\"},{\"start\":\"834\",\"end\":\"945\"},{\"start\":\"946\",\"end\":\"1057\"},{\"start\":\"1058\",\"end\":\"1151\"}]", "publisher": null, "author_last_name": "[{\"start\":\"103\",\"end\":\"107\"},{\"start\":\"215\",\"end\":\"218\"},{\"start\":\"303\",\"end\":\"307\"},{\"start\":\"417\",\"end\":\"420\"},{\"start\":\"506\",\"end\":\"509\"},{\"start\":\"618\",\"end\":\"622\"},{\"start\":\"731\",\"end\":\"733\"},{\"start\":\"841\",\"end\":\"845\"},{\"start\":\"953\",\"end\":\"957\"},{\"start\":\"1064\",\"end\":\"1074\"}]", "author_first_name": "[{\"start\":\"96\",\"end\":\"102\"},{\"start\":\"206\",\"end\":\"214\"},{\"start\":\"296\",\"end\":\"302\"},{\"start\":\"406\",\"end\":\"416\"},{\"start\":\"498\",\"end\":\"505\"},{\"start\":\"610\",\"end\":\"617\"},{\"start\":\"723\",\"end\":\"730\"},{\"start\":\"834\",\"end\":\"840\"},{\"start\":\"946\",\"end\":\"952\"},{\"start\":\"1058\",\"end\":\"1063\"}]", "author_affiliation": "[{\"start\":\"130\",\"end\":\"204\"},{\"start\":\"220\",\"end\":\"294\"},{\"start\":\"330\",\"end\":\"404\"},{\"start\":\"422\",\"end\":\"496\"},{\"start\":\"534\",\"end\":\"608\"},{\"start\":\"647\",\"end\":\"721\"},{\"start\":\"758\",\"end\":\"832\"},{\"start\":\"870\",\"end\":\"944\"},{\"start\":\"982\",\"end\":\"1056\"},{\"start\":\"1076\",\"end\":\"1150\"}]", "title": "[{\"start\":\"1\",\"end\":\"93\"},{\"start\":\"1152\",\"end\":\"1244\"}]", "venue": null, "abstract": "[{\"start\":\"1336\",\"end\":\"3164\"}]", "bib_ref": "[{\"start\":\"4120\",\"end\":\"4123\",\"attributes\":{\"ref_id\":\"b0\"}},{\"start\":\"4125\",\"end\":\"4128\",\"attributes\":{\"ref_id\":\"b3\"}},{\"start\":\"4195\",\"end\":\"4198\",\"attributes\":{\"ref_id\":\"b4\"}},{\"start\":\"4235\",\"end\":\"4238\",\"attributes\":{\"ref_id\":\"b5\"}},{\"start\":\"4788\",\"end\":\"4791\",\"attributes\":{\"ref_id\":\"b6\"}},{\"start\":\"4946\",\"end\":\"4949\",\"attributes\":{\"ref_id\":\"b7\"}},{\"start\":\"4951\",\"end\":\"4954\",\"attributes\":{\"ref_id\":\"b8\"}},{\"start\":\"5284\",\"end\":\"5288\",\"attributes\":{\"ref_id\":\"b9\"}},{\"start\":\"5290\",\"end\":\"5294\",\"attributes\":{\"ref_id\":\"b10\"}},{\"start\":\"5373\",\"end\":\"5377\",\"attributes\":{\"ref_id\":\"b11\"}},{\"start\":\"6208\",\"end\":\"6212\",\"attributes\":{\"ref_id\":\"b12\"}},{\"start\":\"6214\",\"end\":\"6218\",\"attributes\":{\"ref_id\":\"b13\"}},{\"start\":\"6641\",\"end\":\"6645\",\"attributes\":{\"ref_id\":\"b14\"}},{\"start\":\"6647\",\"end\":\"6651\",\"attributes\":{\"ref_id\":\"b15\"}},{\"start\":\"7747\",\"end\":\"7751\",\"attributes\":{\"ref_id\":\"b16\"}},{\"start\":\"7753\",\"end\":\"7757\",\"attributes\":{\"ref_id\":\"b19\"}},{\"start\":\"16482\",\"end\":\"16486\",\"attributes\":{\"ref_id\":\"b20\"}},{\"start\":\"17630\",\"end\":\"17634\",\"attributes\":{\"ref_id\":\"b21\"}},{\"start\":\"20923\",\"end\":\"20926\",\"attributes\":{\"ref_id\":\"b5\"}},{\"start\":\"22081\",\"end\":\"22084\",\"attributes\":{\"ref_id\":\"b5\"}},{\"start\":\"22820\",\"end\":\"22824\",\"attributes\":{\"ref_id\":\"b22\"}},{\"start\":\"36685\",\"end\":\"36689\",\"attributes\":{\"ref_id\":\"b23\"}},{\"start\":\"36818\",\"end\":\"36822\",\"attributes\":{\"ref_id\":\"b18\"}},{\"start\":\"36883\",\"end\":\"36887\",\"attributes\":{\"ref_id\":\"b24\"}},{\"start\":\"37127\",\"end\":\"37131\",\"attributes\":{\"ref_id\":\"b25\"}},{\"start\":\"37314\",\"end\":\"37318\",\"attributes\":{\"ref_id\":\"b26\"}},{\"start\":\"38545\",\"end\":\"38549\",\"attributes\":{\"ref_id\":\"b27\"}},{\"start\":\"44104\",\"end\":\"44105\",\"attributes\":{\"ref_id\":\"b2\"}},{\"start\":\"45813\",\"end\":\"45817\",\"attributes\":{\"ref_id\":\"b28\"}},{\"start\":\"45840\",\"end\":\"45844\",\"attributes\":{\"ref_id\":\"b10\"}},{\"start\":\"45846\",\"end\":\"45850\",\"attributes\":{\"ref_id\":\"b29\"}},{\"start\":\"45852\",\"end\":\"45856\",\"attributes\":{\"ref_id\":\"b32\"}},{\"start\":\"45989\",\"end\":\"45993\",\"attributes\":{\"ref_id\":\"b9\"}},{\"start\":\"46407\",\"end\":\"46411\",\"attributes\":{\"ref_id\":\"b15\"}},{\"start\":\"46413\",\"end\":\"46417\",\"attributes\":{\"ref_id\":\"b33\"}},{\"start\":\"46419\",\"end\":\"46423\",\"attributes\":{\"ref_id\":\"b34\"}},{\"start\":\"46670\",\"end\":\"46674\",\"attributes\":{\"ref_id\":\"b24\"}},{\"start\":\"46676\",\"end\":\"46680\",\"attributes\":{\"ref_id\":\"b34\"}},{\"start\":\"46805\",\"end\":\"46809\",\"attributes\":{\"ref_id\":\"b33\"}},{\"start\":\"46811\",\"end\":\"46815\",\"attributes\":{\"ref_id\":\"b35\"}},{\"start\":\"47020\",\"end\":\"47024\",\"attributes\":{\"ref_id\":\"b17\"}},{\"start\":\"47026\",\"end\":\"47030\",\"attributes\":{\"ref_id\":\"b36\"}},{\"start\":\"47032\",\"end\":\"47036\",\"attributes\":{\"ref_id\":\"b39\"}},{\"start\":\"47224\",\"end\":\"47228\",\"attributes\":{\"ref_id\":\"b17\"}},{\"start\":\"47230\",\"end\":\"47234\",\"attributes\":{\"ref_id\":\"b40\"}},{\"start\":\"47236\",\"end\":\"47240\",\"attributes\":{\"ref_id\":\"b41\"}}]", "figure": "[{\"start\":\"49864\",\"end\":\"49936\",\"attributes\":{\"id\":\"fig_0\"}},{\"start\":\"49937\",\"end\":\"50038\",\"attributes\":{\"id\":\"fig_1\"}},{\"start\":\"50039\",\"end\":\"50104\",\"attributes\":{\"id\":\"fig_2\"}},{\"start\":\"50105\",\"end\":\"50158\",\"attributes\":{\"id\":\"fig_3\"}},{\"start\":\"50159\",\"end\":\"50245\",\"attributes\":{\"id\":\"fig_4\"}},{\"start\":\"50246\",\"end\":\"50333\",\"attributes\":{\"id\":\"fig_5\"}},{\"start\":\"50334\",\"end\":\"50881\",\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"}},{\"start\":\"50882\",\"end\":\"51203\",\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"}},{\"start\":\"51204\",\"end\":\"51778\",\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"}},{\"start\":\"51779\",\"end\":\"52164\",\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"}},{\"start\":\"52165\",\"end\":\"52907\",\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"}},{\"start\":\"52908\",\"end\":\"53336\",\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"}}]", "paragraph": "[{\"start\":\"3183\",\"end\":\"3904\"},{\"start\":\"3906\",\"end\":\"4322\"},{\"start\":\"4324\",\"end\":\"4792\"},{\"start\":\"4794\",\"end\":\"6151\"},{\"start\":\"6153\",\"end\":\"7060\"},{\"start\":\"7062\",\"end\":\"8643\"},{\"start\":\"8645\",\"end\":\"9429\"},{\"start\":\"9431\",\"end\":\"9845\"},{\"start\":\"9847\",\"end\":\"10425\"},{\"start\":\"10449\",\"end\":\"11001\"},{\"start\":\"11003\",\"end\":\"11648\"},{\"start\":\"11650\",\"end\":\"13418\"},{\"start\":\"13455\",\"end\":\"14066\"},{\"start\":\"14091\",\"end\":\"14254\"},{\"start\":\"14256\",\"end\":\"15588\"},{\"start\":\"15590\",\"end\":\"16606\"},{\"start\":\"16661\",\"end\":\"17343\"},{\"start\":\"17371\",\"end\":\"17573\"},{\"start\":\"17575\",\"end\":\"18285\"},{\"start\":\"18328\",\"end\":\"18484\"},{\"start\":\"18486\",\"end\":\"18853\"},{\"start\":\"18909\",\"end\":\"19197\"},{\"start\":\"19199\",\"end\":\"19527\"},{\"start\":\"19583\",\"end\":\"19744\"},{\"start\":\"19746\",\"end\":\"20003\"},{\"start\":\"20044\",\"end\":\"20494\"},{\"start\":\"20496\",\"end\":\"20620\"},{\"start\":\"20663\",\"end\":\"20767\"},{\"start\":\"20801\",\"end\":\"21682\"},{\"start\":\"21741\",\"end\":\"22185\"},{\"start\":\"22187\",\"end\":\"22310\"},{\"start\":\"22457\",\"end\":\"23459\"},{\"start\":\"23461\",\"end\":\"24071\"},{\"start\":\"24073\",\"end\":\"24729\"},{\"start\":\"24731\",\"end\":\"24978\"},{\"start\":\"24980\",\"end\":\"27310\"},{\"start\":\"27312\",\"end\":\"29311\"},{\"start\":\"29313\",\"end\":\"29710\"},{\"start\":\"29738\",\"end\":\"31041\"},{\"start\":\"31043\",\"end\":\"31938\"},{\"start\":\"31940\",\"end\":\"32990\"},{\"start\":\"33026\",\"end\":\"34566\"},{\"start\":\"34610\",\"end\":\"35467\"},{\"start\":\"35510\",\"end\":\"35789\"},{\"start\":\"35791\",\"end\":\"35955\"},{\"start\":\"35986\",\"end\":\"36219\"},{\"start\":\"36243\",\"end\":\"36476\"},{\"start\":\"36478\",\"end\":\"37404\"},{\"start\":\"37433\",\"end\":\"38250\"},{\"start\":\"38252\",\"end\":\"38550\"},{\"start\":\"38578\",\"end\":\"40567\"},{\"start\":\"40569\",\"end\":\"41115\"},{\"start\":\"41164\",\"end\":\"42097\"},{\"start\":\"42131\",\"end\":\"43968\"},{\"start\":\"43999\",\"end\":\"45660\"},{\"start\":\"45682\",\"end\":\"45818\"},{\"start\":\"45820\",\"end\":\"46368\"},{\"start\":\"46370\",\"end\":\"46931\"},{\"start\":\"46933\",\"end\":\"47967\"},{\"start\":\"48005\",\"end\":\"49863\"}]", "formula": "[{\"start\":\"16607\",\"end\":\"16660\",\"attributes\":{\"id\":\"formula_0\"}},{\"start\":\"18286\",\"end\":\"18327\",\"attributes\":{\"id\":\"formula_1\"}},{\"start\":\"18854\",\"end\":\"18908\",\"attributes\":{\"id\":\"formula_2\"}},{\"start\":\"19528\",\"end\":\"19582\",\"attributes\":{\"id\":\"formula_3\"}},{\"start\":\"20004\",\"end\":\"20043\",\"attributes\":{\"id\":\"formula_4\"}},{\"start\":\"20621\",\"end\":\"20662\",\"attributes\":{\"id\":\"formula_5\"}},{\"start\":\"22311\",\"end\":\"22456\",\"attributes\":{\"id\":\"formula_6\"}},{\"start\":\"34567\",\"end\":\"34609\",\"attributes\":{\"id\":\"formula_7\"}},{\"start\":\"35468\",\"end\":\"35509\",\"attributes\":{\"id\":\"formula_8\"}}]", "table_ref": "[{\"start\":\"24514\",\"end\":\"24521\",\"attributes\":{\"ref_id\":\"tab_2\"}},{\"start\":\"26789\",\"end\":\"26797\",\"attributes\":{\"ref_id\":\"tab_2\"}},{\"start\":\"27315\",\"end\":\"27323\",\"attributes\":{\"ref_id\":\"tab_2\"}},{\"start\":\"40113\",\"end\":\"40122\",\"attributes\":{\"ref_id\":\"tab_2\"}},{\"start\":\"40754\",\"end\":\"40762\",\"attributes\":{\"ref_id\":\"tab_2\"}},{\"start\":\"41320\",\"end\":\"41327\",\"attributes\":{\"ref_id\":\"tab_6\"}}]", "section_header": "[{\"start\":\"3166\",\"end\":\"3181\"},{\"start\":\"10428\",\"end\":\"10447\"},{\"start\":\"13421\",\"end\":\"13453\"},{\"start\":\"14069\",\"end\":\"14089\"},{\"start\":\"17346\",\"end\":\"17369\"},{\"start\":\"20770\",\"end\":\"20799\"},{\"start\":\"21685\",\"end\":\"21739\"},{\"start\":\"29713\",\"end\":\"29736\"},{\"start\":\"32993\",\"end\":\"33024\"},{\"start\":\"35958\",\"end\":\"35984\"},{\"start\":\"36222\",\"end\":\"36241\"},{\"start\":\"37407\",\"end\":\"37431\"},{\"start\":\"38553\",\"end\":\"38576\"},{\"start\":\"41118\",\"end\":\"41162\"},{\"start\":\"42100\",\"end\":\"42129\"},{\"start\":\"43971\",\"end\":\"43997\"},{\"start\":\"45663\",\"end\":\"45680\"},{\"start\":\"47970\",\"end\":\"48003\"},{\"start\":\"49865\",\"end\":\"49873\"},{\"start\":\"49938\",\"end\":\"49946\"},{\"start\":\"50040\",\"end\":\"50048\"},{\"start\":\"50106\",\"end\":\"50114\"},{\"start\":\"50160\",\"end\":\"50168\"},{\"start\":\"50247\",\"end\":\"50255\"},{\"start\":\"50883\",\"end\":\"50892\"},{\"start\":\"51205\",\"end\":\"51215\"},{\"start\":\"51780\",\"end\":\"51791\"},{\"start\":\"52166\",\"end\":\"52176\"},{\"start\":\"52909\",\"end\":\"52918\"}]", "table": "[{\"start\":\"50750\",\"end\":\"50881\"},{\"start\":\"50945\",\"end\":\"51203\"},{\"start\":\"51309\",\"end\":\"51778\"},{\"start\":\"51848\",\"end\":\"52164\"},{\"start\":\"52239\",\"end\":\"52907\"},{\"start\":\"52986\",\"end\":\"53336\"}]", "figure_caption": "[{\"start\":\"49875\",\"end\":\"49936\"},{\"start\":\"49948\",\"end\":\"50038\"},{\"start\":\"50050\",\"end\":\"50104\"},{\"start\":\"50116\",\"end\":\"50158\"},{\"start\":\"50170\",\"end\":\"50245\"},{\"start\":\"50257\",\"end\":\"50333\"},{\"start\":\"50336\",\"end\":\"50750\"},{\"start\":\"50894\",\"end\":\"50945\"},{\"start\":\"51218\",\"end\":\"51309\"},{\"start\":\"51795\",\"end\":\"51848\"},{\"start\":\"52179\",\"end\":\"52239\"},{\"start\":\"52920\",\"end\":\"52986\"}]", "figure_ref": "[{\"start\":\"10527\",\"end\":\"10533\",\"attributes\":{\"ref_id\":\"fig_0\"}},{\"start\":\"28837\",\"end\":\"28843\",\"attributes\":{\"ref_id\":\"fig_1\"}},{\"start\":\"28960\",\"end\":\"28969\",\"attributes\":{\"ref_id\":\"fig_1\"}},{\"start\":\"28974\",\"end\":\"28983\",\"attributes\":{\"ref_id\":\"fig_1\"}},{\"start\":\"32070\",\"end\":\"32076\",\"attributes\":{\"ref_id\":\"fig_2\"}},{\"start\":\"38753\",\"end\":\"38759\",\"attributes\":{\"ref_id\":\"fig_3\"}},{\"start\":\"43091\",\"end\":\"43097\",\"attributes\":{\"ref_id\":\"fig_4\"}},{\"start\":\"43625\",\"end\":\"43634\",\"attributes\":{\"ref_id\":\"fig_4\"}},{\"start\":\"45079\",\"end\":\"45085\",\"attributes\":{\"ref_id\":\"fig_5\"}},{\"start\":\"45277\",\"end\":\"45283\",\"attributes\":{\"ref_id\":\"fig_5\"}}]", "bib_author_first_name": "[{\"start\":\"53673\",\"end\":\"53674\"},{\"start\":\"53681\",\"end\":\"53682\"},{\"start\":\"53688\",\"end\":\"53689\"},{\"start\":\"53696\",\"end\":\"53697\"},{\"start\":\"53705\",\"end\":\"53706\"},{\"start\":\"53712\",\"end\":\"53713\"},{\"start\":\"53722\",\"end\":\"53723\"},{\"start\":\"53728\",\"end\":\"53729\"},{\"start\":\"53977\",\"end\":\"53978\"},{\"start\":\"53983\",\"end\":\"53984\"},{\"start\":\"53990\",\"end\":\"53991\"},{\"start\":\"53998\",\"end\":\"53999\"},{\"start\":\"54004\",\"end\":\"54005\"},{\"start\":\"54010\",\"end\":\"54011\"},{\"start\":\"54018\",\"end\":\"54019\"},{\"start\":\"54025\",\"end\":\"54026\"},{\"start\":\"54321\",\"end\":\"54322\"},{\"start\":\"54329\",\"end\":\"54330\"},{\"start\":\"54337\",\"end\":\"54338\"},{\"start\":\"54343\",\"end\":\"54344\"},{\"start\":\"54350\",\"end\":\"54351\"},{\"start\":\"54358\",\"end\":\"54359\"},{\"start\":\"54366\",\"end\":\"54367\"},{\"start\":\"54380\",\"end\":\"54381\"},{\"start\":\"54697\",\"end\":\"54698\"},{\"start\":\"54705\",\"end\":\"54706\"},{\"start\":\"54712\",\"end\":\"54713\"},{\"start\":\"54720\",\"end\":\"54721\"},{\"start\":\"54726\",\"end\":\"54727\"},{\"start\":\"54734\",\"end\":\"54735\"},{\"start\":\"54741\",\"end\":\"54742\"},{\"start\":\"54748\",\"end\":\"54749\"},{\"start\":\"54758\",\"end\":\"54759\"},{\"start\":\"55023\",\"end\":\"55024\"},{\"start\":\"55031\",\"end\":\"55032\"},{\"start\":\"55045\",\"end\":\"55046\"},{\"start\":\"55269\",\"end\":\"55270\"},{\"start\":\"55278\",\"end\":\"55279\"},{\"start\":\"55287\",\"end\":\"55288\"},{\"start\":\"55294\",\"end\":\"55295\"},{\"start\":\"55301\",\"end\":\"55302\"},{\"start\":\"55621\",\"end\":\"55622\"},{\"start\":\"55630\",\"end\":\"55631\"},{\"start\":\"55862\",\"end\":\"55863\"},{\"start\":\"56099\",\"end\":\"56100\"},{\"start\":\"56111\",\"end\":\"56112\"},{\"start\":\"56119\",\"end\":\"56120\"},{\"start\":\"56121\",\"end\":\"56122\"},{\"start\":\"56132\",\"end\":\"56133\"},{\"start\":\"56515\",\"end\":\"56516\"},{\"start\":\"56522\",\"end\":\"56523\"},{\"start\":\"56536\",\"end\":\"56537\"},{\"start\":\"56544\",\"end\":\"56545\"},{\"start\":\"56863\",\"end\":\"56864\"},{\"start\":\"56869\",\"end\":\"56870\"},{\"start\":\"56881\",\"end\":\"56882\"},{\"start\":\"56883\",\"end\":\"56884\"},{\"start\":\"56894\",\"end\":\"56895\"},{\"start\":\"57197\",\"end\":\"57198\"},{\"start\":\"57205\",\"end\":\"57206\"},{\"start\":\"57215\",\"end\":\"57216\"},{\"start\":\"57223\",\"end\":\"57224\"},{\"start\":\"57230\",\"end\":\"57231\"},{\"start\":\"57232\",\"end\":\"57233\"},{\"start\":\"57240\",\"end\":\"57241\"},{\"start\":\"57457\",\"end\":\"57458\"},{\"start\":\"57469\",\"end\":\"57470\"},{\"start\":\"57471\",\"end\":\"57472\"},{\"start\":\"57479\",\"end\":\"57480\"},{\"start\":\"57486\",\"end\":\"57487\"},{\"start\":\"57493\",\"end\":\"57494\"},{\"start\":\"57505\",\"end\":\"57506\"},{\"start\":\"57946\",\"end\":\"57947\"},{\"start\":\"57953\",\"end\":\"57954\"},{\"start\":\"57955\",\"end\":\"57956\"},{\"start\":\"58213\",\"end\":\"58214\"},{\"start\":\"58221\",\"end\":\"58222\"},{\"start\":\"58234\",\"end\":\"58235\"},{\"start\":\"58472\",\"end\":\"58473\"},{\"start\":\"58482\",\"end\":\"58483\"},{\"start\":\"58492\",\"end\":\"58493\"},{\"start\":\"58494\",\"end\":\"58495\"},{\"start\":\"58764\",\"end\":\"58765\"},{\"start\":\"58770\",\"end\":\"58771\"},{\"start\":\"58782\",\"end\":\"58783\"},{\"start\":\"58790\",\"end\":\"58791\"},{\"start\":\"58796\",\"end\":\"58797\"},{\"start\":\"58798\",\"end\":\"58799\"},{\"start\":\"59083\",\"end\":\"59084\"},{\"start\":\"59091\",\"end\":\"59092\"},{\"start\":\"59093\",\"end\":\"59094\"},{\"start\":\"59405\",\"end\":\"59406\"},{\"start\":\"59412\",\"end\":\"59413\"},{\"start\":\"59420\",\"end\":\"59421\"},{\"start\":\"59426\",\"end\":\"59427\"},{\"start\":\"59789\",\"end\":\"59790\"},{\"start\":\"59800\",\"end\":\"59801\"},{\"start\":\"60072\",\"end\":\"60073\"},{\"start\":\"60074\",\"end\":\"60075\"},{\"start\":\"60351\",\"end\":\"60352\"},{\"start\":\"60554\",\"end\":\"60555\"},{\"start\":\"60565\",\"end\":\"60566\"},{\"start\":\"60567\",\"end\":\"60568\"},{\"start\":\"60846\",\"end\":\"60847\"},{\"start\":\"60856\",\"end\":\"60857\"},{\"start\":\"60858\",\"end\":\"60860\"},{\"start\":\"60869\",\"end\":\"60870\"},{\"start\":\"60882\",\"end\":\"60883\"},{\"start\":\"60895\",\"end\":\"60896\"},{\"start\":\"61234\",\"end\":\"61235\"},{\"start\":\"61236\",\"end\":\"61237\"},{\"start\":\"61249\",\"end\":\"61250\"},{\"start\":\"61258\",\"end\":\"61259\"},{\"start\":\"61566\",\"end\":\"61567\"},{\"start\":\"61568\",\"end\":\"61569\"},{\"start\":\"61577\",\"end\":\"61578\"},{\"start\":\"61579\",\"end\":\"61580\"},{\"start\":\"61922\",\"end\":\"61923\"},{\"start\":\"61924\",\"end\":\"61925\"},{\"start\":\"61935\",\"end\":\"61936\"},{\"start\":\"61937\",\"end\":\"61938\"},{\"start\":\"61946\",\"end\":\"61947\"},{\"start\":\"61956\",\"end\":\"61957\"},{\"start\":\"61958\",\"end\":\"61959\"},{\"start\":\"62184\",\"end\":\"62190\"},{\"start\":\"62307\",\"end\":\"62308\"},{\"start\":\"62444\",\"end\":\"62445\"},{\"start\":\"62453\",\"end\":\"62454\"},{\"start\":\"62465\",\"end\":\"62466\"},{\"start\":\"62756\",\"end\":\"62757\"},{\"start\":\"62767\",\"end\":\"62768\"},{\"start\":\"62781\",\"end\":\"62782\"},{\"start\":\"62792\",\"end\":\"62793\"},{\"start\":\"62801\",\"end\":\"62802\"},{\"start\":\"62812\",\"end\":\"62813\"},{\"start\":\"62823\",\"end\":\"62824\"},{\"start\":\"63150\",\"end\":\"63151\"},{\"start\":\"63164\",\"end\":\"63165\"},{\"start\":\"63174\",\"end\":\"63175\"},{\"start\":\"63176\",\"end\":\"63177\"},{\"start\":\"63491\",\"end\":\"63492\"},{\"start\":\"63497\",\"end\":\"63498\"},{\"start\":\"63503\",\"end\":\"63504\"},{\"start\":\"63512\",\"end\":\"63513\"},{\"start\":\"63520\",\"end\":\"63521\"},{\"start\":\"63527\",\"end\":\"63531\"},{\"start\":\"63537\",\"end\":\"63538\"},{\"start\":\"63546\",\"end\":\"63547\"},{\"start\":\"63548\",\"end\":\"63549\"},{\"start\":\"63913\",\"end\":\"63914\"},{\"start\":\"63926\",\"end\":\"63927\"},{\"start\":\"64144\",\"end\":\"64145\"},{\"start\":\"64153\",\"end\":\"64154\"},{\"start\":\"64167\",\"end\":\"64168\"},{\"start\":\"64178\",\"end\":\"64179\"},{\"start\":\"64539\",\"end\":\"64540\"},{\"start\":\"64548\",\"end\":\"64549\"},{\"start\":\"64557\",\"end\":\"64558\"},{\"start\":\"64565\",\"end\":\"64569\"},{\"start\":\"64923\",\"end\":\"64924\"},{\"start\":\"64931\",\"end\":\"64932\"},{\"start\":\"64940\",\"end\":\"64944\"},{\"start\":\"64949\",\"end\":\"64950\"},{\"start\":\"65233\",\"end\":\"65234\"},{\"start\":\"65242\",\"end\":\"65243\"},{\"start\":\"65252\",\"end\":\"65253\"},{\"start\":\"65263\",\"end\":\"65264\"},{\"start\":\"65271\",\"end\":\"65272\"},{\"start\":\"65618\",\"end\":\"65619\"},{\"start\":\"65626\",\"end\":\"65627\"},{\"start\":\"65633\",\"end\":\"65634\"},{\"start\":\"65639\",\"end\":\"65640\"},{\"start\":\"65648\",\"end\":\"65649\"},{\"start\":\"65657\",\"end\":\"65658\"},{\"start\":\"65664\",\"end\":\"65665\"},{\"start\":\"65671\",\"end\":\"65672\"},{\"start\":\"65679\",\"end\":\"65680\"},{\"start\":\"65688\",\"end\":\"65689\"},{\"start\":\"66075\",\"end\":\"66076\"},{\"start\":\"66083\",\"end\":\"66084\"},{\"start\":\"66374\",\"end\":\"66375\"},{\"start\":\"66385\",\"end\":\"66390\"},{\"start\":\"66642\",\"end\":\"66643\"},{\"start\":\"66650\",\"end\":\"66651\"},{\"start\":\"66657\",\"end\":\"66658\"},{\"start\":\"66664\",\"end\":\"66665\"}]", "bib_author_last_name": "[{\"start\":\"53675\",\"end\":\"53679\"},{\"start\":\"53683\",\"end\":\"53686\"},{\"start\":\"53690\",\"end\":\"53694\"},{\"start\":\"53698\",\"end\":\"53703\"},{\"start\":\"53707\",\"end\":\"53710\"},{\"start\":\"53714\",\"end\":\"53720\"},{\"start\":\"53724\",\"end\":\"53726\"},{\"start\":\"53730\",\"end\":\"53740\"},{\"start\":\"53979\",\"end\":\"53981\"},{\"start\":\"53985\",\"end\":\"53988\"},{\"start\":\"53992\",\"end\":\"53996\"},{\"start\":\"54000\",\"end\":\"54002\"},{\"start\":\"54006\",\"end\":\"54008\"},{\"start\":\"54012\",\"end\":\"54016\"},{\"start\":\"54020\",\"end\":\"54023\"},{\"start\":\"54027\",\"end\":\"54030\"},{\"start\":\"54323\",\"end\":\"54327\"},{\"start\":\"54331\",\"end\":\"54335\"},{\"start\":\"54339\",\"end\":\"54341\"},{\"start\":\"54345\",\"end\":\"54348\"},{\"start\":\"54352\",\"end\":\"54356\"},{\"start\":\"54360\",\"end\":\"54364\"},{\"start\":\"54368\",\"end\":\"54378\"},{\"start\":\"54382\",\"end\":\"54388\"},{\"start\":\"54699\",\"end\":\"54703\"},{\"start\":\"54707\",\"end\":\"54710\"},{\"start\":\"54714\",\"end\":\"54718\"},{\"start\":\"54722\",\"end\":\"54724\"},{\"start\":\"54728\",\"end\":\"54732\"},{\"start\":\"54736\",\"end\":\"54739\"},{\"start\":\"54743\",\"end\":\"54746\"},{\"start\":\"54750\",\"end\":\"54756\"},{\"start\":\"54760\",\"end\":\"54770\"},{\"start\":\"55025\",\"end\":\"55029\"},{\"start\":\"55033\",\"end\":\"55043\"},{\"start\":\"55047\",\"end\":\"55053\"},{\"start\":\"55271\",\"end\":\"55276\"},{\"start\":\"55280\",\"end\":\"55285\"},{\"start\":\"55289\",\"end\":\"55292\"},{\"start\":\"55296\",\"end\":\"55299\"},{\"start\":\"55303\",\"end\":\"55308\"},{\"start\":\"55623\",\"end\":\"55628\"},{\"start\":\"55864\",\"end\":\"55869\"},{\"start\":\"56101\",\"end\":\"56109\"},{\"start\":\"56113\",\"end\":\"56117\"},{\"start\":\"56123\",\"end\":\"56130\"},{\"start\":\"56517\",\"end\":\"56520\"},{\"start\":\"56524\",\"end\":\"56534\"},{\"start\":\"56538\",\"end\":\"56542\"},{\"start\":\"56546\",\"end\":\"56555\"},{\"start\":\"56865\",\"end\":\"56867\"},{\"start\":\"56871\",\"end\":\"56879\"},{\"start\":\"56885\",\"end\":\"56892\"},{\"start\":\"56896\",\"end\":\"56903\"},{\"start\":\"57199\",\"end\":\"57203\"},{\"start\":\"57207\",\"end\":\"57213\"},{\"start\":\"57217\",\"end\":\"57221\"},{\"start\":\"57225\",\"end\":\"57228\"},{\"start\":\"57234\",\"end\":\"57238\"},{\"start\":\"57242\",\"end\":\"57245\"},{\"start\":\"57459\",\"end\":\"57467\"},{\"start\":\"57473\",\"end\":\"57477\"},{\"start\":\"57481\",\"end\":\"57484\"},{\"start\":\"57488\",\"end\":\"57491\"},{\"start\":\"57495\",\"end\":\"57503\"},{\"start\":\"57507\",\"end\":\"57512\"},{\"start\":\"57948\",\"end\":\"57951\"},{\"start\":\"57957\",\"end\":\"57963\"},{\"start\":\"58215\",\"end\":\"58219\"},{\"start\":\"58223\",\"end\":\"58232\"},{\"start\":\"58236\",\"end\":\"58243\"},{\"start\":\"58474\",\"end\":\"58480\"},{\"start\":\"58484\",\"end\":\"58490\"},{\"start\":\"58496\",\"end\":\"58502\"},{\"start\":\"58766\",\"end\":\"58768\"},{\"start\":\"58772\",\"end\":\"58780\"},{\"start\":\"58784\",\"end\":\"58788\"},{\"start\":\"58792\",\"end\":\"58794\"},{\"start\":\"58800\",\"end\":\"58808\"},{\"start\":\"59085\",\"end\":\"59089\"},{\"start\":\"59095\",\"end\":\"59099\"},{\"start\":\"59407\",\"end\":\"59410\"},{\"start\":\"59414\",\"end\":\"59418\"},{\"start\":\"59422\",\"end\":\"59424\"},{\"start\":\"59428\",\"end\":\"59433\"},{\"start\":\"59791\",\"end\":\"59798\"},{\"start\":\"59802\",\"end\":\"59808\"},{\"start\":\"60076\",\"end\":\"60080\"},{\"start\":\"60353\",\"end\":\"60358\"},{\"start\":\"60556\",\"end\":\"60563\"},{\"start\":\"60569\",\"end\":\"60577\"},{\"start\":\"60848\",\"end\":\"60854\"},{\"start\":\"60861\",\"end\":\"60867\"},{\"start\":\"60871\",\"end\":\"60880\"},{\"start\":\"60884\",\"end\":\"60893\"},{\"start\":\"60897\",\"end\":\"60904\"},{\"start\":\"61238\",\"end\":\"61247\"},{\"start\":\"61251\",\"end\":\"61256\"},{\"start\":\"61260\",\"end\":\"61268\"},{\"start\":\"61570\",\"end\":\"61575\"},{\"start\":\"61581\",\"end\":\"61586\"},{\"start\":\"61926\",\"end\":\"61933\"},{\"start\":\"61939\",\"end\":\"61944\"},{\"start\":\"61948\",\"end\":\"61954\"},{\"start\":\"61960\",\"end\":\"61968\"},{\"start\":\"62309\",\"end\":\"62312\"},{\"start\":\"62446\",\"end\":\"62451\"},{\"start\":\"62455\",\"end\":\"62463\"},{\"start\":\"62467\",\"end\":\"62474\"},{\"start\":\"62758\",\"end\":\"62765\"},{\"start\":\"62769\",\"end\":\"62779\"},{\"start\":\"62783\",\"end\":\"62790\"},{\"start\":\"62794\",\"end\":\"62799\"},{\"start\":\"62803\",\"end\":\"62810\"},{\"start\":\"62814\",\"end\":\"62821\"},{\"start\":\"62825\",\"end\":\"62833\"},{\"start\":\"63152\",\"end\":\"63162\"},{\"start\":\"63166\",\"end\":\"63172\"},{\"start\":\"63178\",\"end\":\"63184\"},{\"start\":\"63493\",\"end\":\"63495\"},{\"start\":\"63499\",\"end\":\"63501\"},{\"start\":\"63505\",\"end\":\"63510\"},{\"start\":\"63514\",\"end\":\"63518\"},{\"start\":\"63522\",\"end\":\"63525\"},{\"start\":\"63532\",\"end\":\"63535\"},{\"start\":\"63539\",\"end\":\"63544\"},{\"start\":\"63550\",\"end\":\"63554\"},{\"start\":\"63915\",\"end\":\"63924\"},{\"start\":\"63928\",\"end\":\"63935\"},{\"start\":\"64146\",\"end\":\"64151\"},{\"start\":\"64155\",\"end\":\"64165\"},{\"start\":\"64169\",\"end\":\"64176\"},{\"start\":\"64180\",\"end\":\"64185\"},{\"start\":\"64541\",\"end\":\"64546\"},{\"start\":\"64550\",\"end\":\"64555\"},{\"start\":\"64559\",\"end\":\"64563\"},{\"start\":\"64570\",\"end\":\"64575\"},{\"start\":\"64925\",\"end\":\"64929\"},{\"start\":\"64933\",\"end\":\"64938\"},{\"start\":\"64945\",\"end\":\"64947\"},{\"start\":\"64951\",\"end\":\"64954\"},{\"start\":\"65235\",\"end\":\"65240\"},{\"start\":\"65244\",\"end\":\"65250\"},{\"start\":\"65254\",\"end\":\"65261\"},{\"start\":\"65265\",\"end\":\"65269\"},{\"start\":\"65273\",\"end\":\"65281\"},{\"start\":\"65620\",\"end\":\"65624\"},{\"start\":\"65628\",\"end\":\"65631\"},{\"start\":\"65635\",\"end\":\"65637\"},{\"start\":\"65641\",\"end\":\"65646\"},{\"start\":\"65650\",\"end\":\"65655\"},{\"start\":\"65659\",\"end\":\"65662\"},{\"start\":\"65666\",\"end\":\"65669\"},{\"start\":\"65673\",\"end\":\"65677\"},{\"start\":\"65681\",\"end\":\"65686\"},{\"start\":\"65690\",\"end\":\"65700\"},{\"start\":\"66077\",\"end\":\"66081\"},{\"start\":\"66085\",\"end\":\"66096\"},{\"start\":\"66376\",\"end\":\"66383\"},{\"start\":\"66391\",\"end\":\"66396\"},{\"start\":\"66644\",\"end\":\"66648\"},{\"start\":\"66652\",\"end\":\"66655\"},{\"start\":\"66659\",\"end\":\"66662\"},{\"start\":\"66666\",\"end\":\"66669\"}]", "bib_entry": "[{\"start\":\"53601\",\"end\":\"53946\",\"attributes\":{\"matched_paper_id\":\"49384001\",\"id\":\"b0\"}},{\"start\":\"53948\",\"end\":\"54236\",\"attributes\":{\"matched_paper_id\":\"9060471\",\"id\":\"b1\"}},{\"start\":\"54238\",\"end\":\"54628\",\"attributes\":{\"matched_paper_id\":\"4702775\",\"id\":\"b2\"}},{\"start\":\"54630\",\"end\":\"54959\",\"attributes\":{\"id\":\"b3\"}},{\"start\":\"54961\",\"end\":\"55193\",\"attributes\":{\"id\":\"b4\"}},{\"start\":\"55195\",\"end\":\"55569\",\"attributes\":{\"matched_paper_id\":\"213552714\",\"id\":\"b5\"}},{\"start\":\"55571\",\"end\":\"55791\",\"attributes\":{\"matched_paper_id\":\"37561110\",\"id\":\"b6\"}},{\"start\":\"55793\",\"end\":\"56042\",\"attributes\":{\"matched_paper_id\":\"215906274\",\"id\":\"b7\"}},{\"start\":\"56044\",\"end\":\"56436\",\"attributes\":{\"matched_paper_id\":\"57762897\",\"id\":\"b8\"}},{\"start\":\"56438\",\"end\":\"56796\",\"attributes\":{\"matched_paper_id\":\"9627324\",\"id\":\"b9\"}},{\"start\":\"56798\",\"end\":\"57149\",\"attributes\":{\"matched_paper_id\":\"872796\",\"id\":\"b10\"}},{\"start\":\"57151\",\"end\":\"57404\",\"attributes\":{\"matched_paper_id\":\"9103468\",\"id\":\"b11\"}},{\"start\":\"57406\",\"end\":\"57842\",\"attributes\":{\"matched_paper_id\":\"208212378\",\"id\":\"b12\"}},{\"start\":\"57844\",\"end\":\"58175\",\"attributes\":{\"matched_paper_id\":\"211021003\",\"id\":\"b13\"}},{\"start\":\"58177\",\"end\":\"58405\",\"attributes\":{\"matched_paper_id\":\"53081464\",\"id\":\"b14\"}},{\"start\":\"58407\",\"end\":\"58680\",\"attributes\":{\"matched_paper_id\":\"211211541\",\"id\":\"b15\"}},{\"start\":\"58682\",\"end\":\"59014\",\"attributes\":{\"matched_paper_id\":\"6130108\",\"id\":\"b16\"}},{\"start\":\"59016\",\"end\":\"59323\",\"attributes\":{\"matched_paper_id\":\"209078757\",\"id\":\"b17\"}},{\"start\":\"59325\",\"end\":\"59667\",\"attributes\":{\"matched_paper_id\":\"2754875\",\"id\":\"b18\"}},{\"start\":\"59669\",\"end\":\"60026\",\"attributes\":{\"id\":\"b19\",\"doi\":\"arXiv:1810.01466\"}},{\"start\":\"60028\",\"end\":\"60299\",\"attributes\":{\"matched_paper_id\":\"2759521\",\"id\":\"b20\"}},{\"start\":\"60301\",\"end\":\"60510\",\"attributes\":{\"matched_paper_id\":\"8616082\",\"id\":\"b21\"}},{\"start\":\"60512\",\"end\":\"60762\",\"attributes\":{\"matched_paper_id\":\"2355296\",\"id\":\"b22\"}},{\"start\":\"60764\",\"end\":\"61146\",\"attributes\":{\"matched_paper_id\":\"7906648\",\"id\":\"b23\"}},{\"start\":\"61148\",\"end\":\"61481\",\"attributes\":{\"matched_paper_id\":\"69939072\",\"id\":\"b24\"}},{\"start\":\"61483\",\"end\":\"61856\",\"attributes\":{\"matched_paper_id\":\"145925588\",\"id\":\"b25\"}},{\"start\":\"61858\",\"end\":\"62180\",\"attributes\":{\"matched_paper_id\":\"20692892\",\"id\":\"b26\"}},{\"start\":\"62182\",\"end\":\"62252\",\"attributes\":{\"id\":\"b27\"}},{\"start\":\"62254\",\"end\":\"62382\",\"attributes\":{\"id\":\"b28\"}},{\"start\":\"62384\",\"end\":\"62673\",\"attributes\":{\"matched_paper_id\":\"207757563\",\"id\":\"b29\"}},{\"start\":\"62675\",\"end\":\"63049\",\"attributes\":{\"matched_paper_id\":\"3206135\",\"id\":\"b30\"}},{\"start\":\"63051\",\"end\":\"63399\",\"attributes\":{\"id\":\"b31\",\"doi\":\"arXiv:1910.01180\"}},{\"start\":\"63401\",\"end\":\"63871\",\"attributes\":{\"matched_paper_id\":\"7191651\",\"id\":\"b32\"}},{\"start\":\"63873\",\"end\":\"64083\",\"attributes\":{\"matched_paper_id\":\"3362863\",\"id\":\"b33\"}},{\"start\":\"64085\",\"end\":\"64444\",\"attributes\":{\"matched_paper_id\":\"2292317\",\"id\":\"b34\"}},{\"start\":\"64446\",\"end\":\"64836\",\"attributes\":{\"matched_paper_id\":\"195848594\",\"id\":\"b35\"}},{\"start\":\"64838\",\"end\":\"65148\",\"attributes\":{\"matched_paper_id\":\"961258\",\"id\":\"b36\"}},{\"start\":\"65150\",\"end\":\"65550\",\"attributes\":{\"matched_paper_id\":\"4936401\",\"id\":\"b37\"}},{\"start\":\"65552\",\"end\":\"65994\",\"attributes\":{\"matched_paper_id\":\"215745352\",\"id\":\"b38\"}},{\"start\":\"65996\",\"end\":\"66275\",\"attributes\":{\"id\":\"b39\",\"doi\":\"arXiv:1804.05232\"}},{\"start\":\"66277\",\"end\":\"66530\",\"attributes\":{\"id\":\"b40\"}},{\"start\":\"66532\",\"end\":\"66932\",\"attributes\":{\"matched_paper_id\":\"47017747\",\"id\":\"b41\"}}]", "bib_title": "[{\"start\":\"53601\",\"end\":\"53671\"},{\"start\":\"53948\",\"end\":\"53975\"},{\"start\":\"54238\",\"end\":\"54319\"},{\"start\":\"55195\",\"end\":\"55267\"},{\"start\":\"55571\",\"end\":\"55619\"},{\"start\":\"55793\",\"end\":\"55860\"},{\"start\":\"56044\",\"end\":\"56097\"},{\"start\":\"56438\",\"end\":\"56513\"},{\"start\":\"56798\",\"end\":\"56861\"},{\"start\":\"57151\",\"end\":\"57195\"},{\"start\":\"57406\",\"end\":\"57455\"},{\"start\":\"57844\",\"end\":\"57944\"},{\"start\":\"58177\",\"end\":\"58211\"},{\"start\":\"58407\",\"end\":\"58470\"},{\"start\":\"58682\",\"end\":\"58762\"},{\"start\":\"59016\",\"end\":\"59081\"},{\"start\":\"59325\",\"end\":\"59403\"},{\"start\":\"60028\",\"end\":\"60070\"},{\"start\":\"60301\",\"end\":\"60349\"},{\"start\":\"60512\",\"end\":\"60552\"},{\"start\":\"60764\",\"end\":\"60844\"},{\"start\":\"61148\",\"end\":\"61232\"},{\"start\":\"61483\",\"end\":\"61564\"},{\"start\":\"61858\",\"end\":\"61920\"},{\"start\":\"62384\",\"end\":\"62442\"},{\"start\":\"62675\",\"end\":\"62754\"},{\"start\":\"63401\",\"end\":\"63489\"},{\"start\":\"63873\",\"end\":\"63911\"},{\"start\":\"64085\",\"end\":\"64142\"},{\"start\":\"64446\",\"end\":\"64537\"},{\"start\":\"64838\",\"end\":\"64921\"},{\"start\":\"65150\",\"end\":\"65231\"},{\"start\":\"65552\",\"end\":\"65616\"},{\"start\":\"66532\",\"end\":\"66640\"}]", "bib_author": "[{\"start\":\"53673\",\"end\":\"53681\"},{\"start\":\"53681\",\"end\":\"53688\"},{\"start\":\"53688\",\"end\":\"53696\"},{\"start\":\"53696\",\"end\":\"53705\"},{\"start\":\"53705\",\"end\":\"53712\"},{\"start\":\"53712\",\"end\":\"53722\"},{\"start\":\"53722\",\"end\":\"53728\"},{\"start\":\"53728\",\"end\":\"53742\"},{\"start\":\"53977\",\"end\":\"53983\"},{\"start\":\"53983\",\"end\":\"53990\"},{\"start\":\"53990\",\"end\":\"53998\"},{\"start\":\"53998\",\"end\":\"54004\"},{\"start\":\"54004\",\"end\":\"54010\"},{\"start\":\"54010\",\"end\":\"54018\"},{\"start\":\"54018\",\"end\":\"54025\"},{\"start\":\"54025\",\"end\":\"54032\"},{\"start\":\"54321\",\"end\":\"54329\"},{\"start\":\"54329\",\"end\":\"54337\"},{\"start\":\"54337\",\"end\":\"54343\"},{\"start\":\"54343\",\"end\":\"54350\"},{\"start\":\"54350\",\"end\":\"54358\"},{\"start\":\"54358\",\"end\":\"54366\"},{\"start\":\"54366\",\"end\":\"54380\"},{\"start\":\"54380\",\"end\":\"54390\"},{\"start\":\"54697\",\"end\":\"54705\"},{\"start\":\"54705\",\"end\":\"54712\"},{\"start\":\"54712\",\"end\":\"54720\"},{\"start\":\"54720\",\"end\":\"54726\"},{\"start\":\"54726\",\"end\":\"54734\"},{\"start\":\"54734\",\"end\":\"54741\"},{\"start\":\"54741\",\"end\":\"54748\"},{\"start\":\"54748\",\"end\":\"54758\"},{\"start\":\"54758\",\"end\":\"54772\"},{\"start\":\"55023\",\"end\":\"55031\"},{\"start\":\"55031\",\"end\":\"55045\"},{\"start\":\"55045\",\"end\":\"55055\"},{\"start\":\"55269\",\"end\":\"55278\"},{\"start\":\"55278\",\"end\":\"55287\"},{\"start\":\"55287\",\"end\":\"55294\"},{\"start\":\"55294\",\"end\":\"55301\"},{\"start\":\"55301\",\"end\":\"55310\"},{\"start\":\"55621\",\"end\":\"55630\"},{\"start\":\"55630\",\"end\":\"55634\"},{\"start\":\"55862\",\"end\":\"55871\"},{\"start\":\"56099\",\"end\":\"56111\"},{\"start\":\"56111\",\"end\":\"56119\"},{\"start\":\"56119\",\"end\":\"56132\"},{\"start\":\"56132\",\"end\":\"56136\"},{\"start\":\"56515\",\"end\":\"56522\"},{\"start\":\"56522\",\"end\":\"56536\"},{\"start\":\"56536\",\"end\":\"56544\"},{\"start\":\"56544\",\"end\":\"56557\"},{\"start\":\"56863\",\"end\":\"56869\"},{\"start\":\"56869\",\"end\":\"56881\"},{\"start\":\"56881\",\"end\":\"56894\"},{\"start\":\"56894\",\"end\":\"56905\"},{\"start\":\"57197\",\"end\":\"57205\"},{\"start\":\"57205\",\"end\":\"57215\"},{\"start\":\"57215\",\"end\":\"57223\"},{\"start\":\"57223\",\"end\":\"57230\"},{\"start\":\"57230\",\"end\":\"57240\"},{\"start\":\"57240\",\"end\":\"57247\"},{\"start\":\"57457\",\"end\":\"57469\"},{\"start\":\"57469\",\"end\":\"57479\"},{\"start\":\"57479\",\"end\":\"57486\"},{\"start\":\"57486\",\"end\":\"57493\"},{\"start\":\"57493\",\"end\":\"57505\"},{\"start\":\"57505\",\"end\":\"57514\"},{\"start\":\"57946\",\"end\":\"57953\"},{\"start\":\"57953\",\"end\":\"57965\"},{\"start\":\"58213\",\"end\":\"58221\"},{\"start\":\"58221\",\"end\":\"58234\"},{\"start\":\"58234\",\"end\":\"58245\"},{\"start\":\"58472\",\"end\":\"58482\"},{\"start\":\"58482\",\"end\":\"58492\"},{\"start\":\"58492\",\"end\":\"58504\"},{\"start\":\"58764\",\"end\":\"58770\"},{\"start\":\"58770\",\"end\":\"58782\"},{\"start\":\"58782\",\"end\":\"58790\"},{\"start\":\"58790\",\"end\":\"58796\"},{\"start\":\"58796\",\"end\":\"58810\"},{\"start\":\"59083\",\"end\":\"59091\"},{\"start\":\"59091\",\"end\":\"59101\"},{\"start\":\"59405\",\"end\":\"59412\"},{\"start\":\"59412\",\"end\":\"59420\"},{\"start\":\"59420\",\"end\":\"59426\"},{\"start\":\"59426\",\"end\":\"59435\"},{\"start\":\"59789\",\"end\":\"59800\"},{\"start\":\"59800\",\"end\":\"59810\"},{\"start\":\"60072\",\"end\":\"60082\"},{\"start\":\"60351\",\"end\":\"60360\"},{\"start\":\"60554\",\"end\":\"60565\"},{\"start\":\"60565\",\"end\":\"60579\"},{\"start\":\"60846\",\"end\":\"60856\"},{\"start\":\"60856\",\"end\":\"60869\"},{\"start\":\"60869\",\"end\":\"60882\"},{\"start\":\"60882\",\"end\":\"60895\"},{\"start\":\"60895\",\"end\":\"60906\"},{\"start\":\"61234\",\"end\":\"61249\"},{\"start\":\"61249\",\"end\":\"61258\"},{\"start\":\"61258\",\"end\":\"61270\"},{\"start\":\"61566\",\"end\":\"61577\"},{\"start\":\"61577\",\"end\":\"61588\"},{\"start\":\"61922\",\"end\":\"61935\"},{\"start\":\"61935\",\"end\":\"61946\"},{\"start\":\"61946\",\"end\":\"61956\"},{\"start\":\"61956\",\"end\":\"61970\"},{\"start\":\"62184\",\"end\":\"62193\"},{\"start\":\"62307\",\"end\":\"62314\"},{\"start\":\"62444\",\"end\":\"62453\"},{\"start\":\"62453\",\"end\":\"62465\"},{\"start\":\"62465\",\"end\":\"62476\"},{\"start\":\"62756\",\"end\":\"62767\"},{\"start\":\"62767\",\"end\":\"62781\"},{\"start\":\"62781\",\"end\":\"62792\"},{\"start\":\"62792\",\"end\":\"62801\"},{\"start\":\"62801\",\"end\":\"62812\"},{\"start\":\"62812\",\"end\":\"62823\"},{\"start\":\"62823\",\"end\":\"62835\"},{\"start\":\"63150\",\"end\":\"63164\"},{\"start\":\"63164\",\"end\":\"63174\"},{\"start\":\"63174\",\"end\":\"63186\"},{\"start\":\"63491\",\"end\":\"63497\"},{\"start\":\"63497\",\"end\":\"63503\"},{\"start\":\"63503\",\"end\":\"63512\"},{\"start\":\"63512\",\"end\":\"63520\"},{\"start\":\"63520\",\"end\":\"63527\"},{\"start\":\"63527\",\"end\":\"63537\"},{\"start\":\"63537\",\"end\":\"63546\"},{\"start\":\"63546\",\"end\":\"63556\"},{\"start\":\"63913\",\"end\":\"63926\"},{\"start\":\"63926\",\"end\":\"63937\"},{\"start\":\"64144\",\"end\":\"64153\"},{\"start\":\"64153\",\"end\":\"64167\"},{\"start\":\"64167\",\"end\":\"64178\"},{\"start\":\"64178\",\"end\":\"64187\"},{\"start\":\"64539\",\"end\":\"64548\"},{\"start\":\"64548\",\"end\":\"64557\"},{\"start\":\"64557\",\"end\":\"64565\"},{\"start\":\"64565\",\"end\":\"64577\"},{\"start\":\"64923\",\"end\":\"64931\"},{\"start\":\"64931\",\"end\":\"64940\"},{\"start\":\"64940\",\"end\":\"64949\"},{\"start\":\"64949\",\"end\":\"64956\"},{\"start\":\"65233\",\"end\":\"65242\"},{\"start\":\"65242\",\"end\":\"65252\"},{\"start\":\"65252\",\"end\":\"65263\"},{\"start\":\"65263\",\"end\":\"65271\"},{\"start\":\"65271\",\"end\":\"65283\"},{\"start\":\"65618\",\"end\":\"65626\"},{\"start\":\"65626\",\"end\":\"65633\"},{\"start\":\"65633\",\"end\":\"65639\"},{\"start\":\"65639\",\"end\":\"65648\"},{\"start\":\"65648\",\"end\":\"65657\"},{\"start\":\"65657\",\"end\":\"65664\"},{\"start\":\"65664\",\"end\":\"65671\"},{\"start\":\"65671\",\"end\":\"65679\"},{\"start\":\"65679\",\"end\":\"65688\"},{\"start\":\"65688\",\"end\":\"65702\"},{\"start\":\"66075\",\"end\":\"66083\"},{\"start\":\"66083\",\"end\":\"66098\"},{\"start\":\"66374\",\"end\":\"66385\"},{\"start\":\"66385\",\"end\":\"66398\"},{\"start\":\"66642\",\"end\":\"66650\"},{\"start\":\"66650\",\"end\":\"66657\"},{\"start\":\"66657\",\"end\":\"66664\"},{\"start\":\"66664\",\"end\":\"66671\"}]", "bib_venue": "[{\"start\":\"53742\",\"end\":\"53746\"},{\"start\":\"54032\",\"end\":\"54066\"},{\"start\":\"54390\",\"end\":\"54410\"},{\"start\":\"54630\",\"end\":\"54695\"},{\"start\":\"54961\",\"end\":\"55021\"},{\"start\":\"55310\",\"end\":\"55355\"},{\"start\":\"55634\",\"end\":\"55659\"},{\"start\":\"55871\",\"end\":\"55903\"},{\"start\":\"56136\",\"end\":\"56212\"},{\"start\":\"56557\",\"end\":\"56591\"},{\"start\":\"56905\",\"end\":\"56946\"},{\"start\":\"57247\",\"end\":\"57255\"},{\"start\":\"57514\",\"end\":\"57595\"},{\"start\":\"57965\",\"end\":\"57988\"},{\"start\":\"58245\",\"end\":\"58265\"},{\"start\":\"58504\",\"end\":\"58521\"},{\"start\":\"58810\",\"end\":\"58828\"},{\"start\":\"59101\",\"end\":\"59156\"},{\"start\":\"59435\",\"end\":\"59469\"},{\"start\":\"59669\",\"end\":\"59787\"},{\"start\":\"60082\",\"end\":\"60132\"},{\"start\":\"60360\",\"end\":\"60386\"},{\"start\":\"60579\",\"end\":\"60627\"},{\"start\":\"60906\",\"end\":\"60930\"},{\"start\":\"61270\",\"end\":\"61293\"},{\"start\":\"61588\",\"end\":\"61646\"},{\"start\":\"61970\",\"end\":\"62003\"},{\"start\":\"62254\",\"end\":\"62305\"},{\"start\":\"62476\",\"end\":\"62504\"},{\"start\":\"62835\",\"end\":\"62839\"},{\"start\":\"63051\",\"end\":\"63148\"},{\"start\":\"63556\",\"end\":\"63603\"},{\"start\":\"63937\",\"end\":\"63957\"},{\"start\":\"64187\",\"end\":\"64239\"},{\"start\":\"64577\",\"end\":\"64613\"},{\"start\":\"64956\",\"end\":\"64974\"},{\"start\":\"65283\",\"end\":\"65320\"},{\"start\":\"65702\",\"end\":\"65740\"},{\"start\":\"65996\",\"end\":\"66073\"},{\"start\":\"66277\",\"end\":\"66372\"},{\"start\":\"66671\",\"end\":\"66705\"},{\"start\":\"54412\",\"end\":\"54417\"},{\"start\":\"56593\",\"end\":\"56612\"},{\"start\":\"58267\",\"end\":\"58283\"},{\"start\":\"58830\",\"end\":\"58833\"},{\"start\":\"59471\",\"end\":\"59490\"},{\"start\":\"60134\",\"end\":\"60169\"},{\"start\":\"60388\",\"end\":\"60399\"},{\"start\":\"62506\",\"end\":\"62519\"},{\"start\":\"64615\",\"end\":\"64636\"},{\"start\":\"64976\",\"end\":\"64979\"},{\"start\":\"65322\",\"end\":\"65344\"},{\"start\":\"65742\",\"end\":\"65765\"},{\"start\":\"66707\",\"end\":\"66726\"}]"}}}, "year": 2023, "month": 12, "day": 17}