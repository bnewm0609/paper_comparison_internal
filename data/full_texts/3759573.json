{"id": 3759573, "updated": "2023-09-29 13:28:58.411", "metadata": {"title": "FlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks", "authors": "[{\"first\":\"Eddy\",\"last\":\"Ilg\",\"middle\":[]},{\"first\":\"Nikolaus\",\"last\":\"Mayer\",\"middle\":[]},{\"first\":\"Tonmoy\",\"last\":\"Saikia\",\"middle\":[]},{\"first\":\"Margret\",\"last\":\"Keuper\",\"middle\":[]},{\"first\":\"Alexey\",\"last\":\"Dosovitskiy\",\"middle\":[]},{\"first\":\"Thomas\",\"last\":\"Brox\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2016, "month": 12, "day": 6}, "abstract": "The FlowNet demonstrated that optical flow estimation can be cast as a learning problem. However, the state of the art with regard to the quality of the flow has still been defined by traditional methods. Particularly on small displacements and real-world data, FlowNet cannot compete with variational methods. In this paper, we advance the concept of end-to-end learning of optical flow and make it work really well. The large improvements in quality and speed are caused by three major contributions: first, we focus on the training data and show that the schedule of presenting data during training is very important. Second, we develop a stacked architecture that includes warping of the second image with intermediate optical flow. Third, we elaborate on small displacements by introducing a sub-network specializing on small motions. FlowNet 2.0 is only marginally slower than the original FlowNet but decreases the estimation error by more than 50%. It performs on par with state-of-the-art methods, while running at interactive frame rates. Moreover, we present faster variants that allow optical flow computation at up to 140fps with accuracy matching the original FlowNet.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1612.01925", "mag": "2953296820", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/corr/IlgMSKDB16", "doi": "10.1109/cvpr.2017.179"}}, "content": {"source": {"pdf_hash": "68a45fabc20aafa9f96767190a324a931af90085", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1612.01925v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/1612.01925", "status": "GREEN"}}, "grobid": {"id": "49af0e51407f2acecbfc5a75b825a48acf59be95", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/68a45fabc20aafa9f96767190a324a931af90085.txt", "contents": "\nFlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks\n\n\nEddy Ilg ilg@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nNikolaus Mayer mayern@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nTonmoy Saikia saikiat@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nMargret Keuper keuper@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nAlexey Dosovitskiy dosovits@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nThomas Brox brox@cs.uni-freiburg.de \nUniversity of Freiburg\nGermany\n\nFlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks\n\nThe FlowNet demonstrated that optical flow estimation can be cast as a learning problem. However, the state of the art with regard to the quality of the flow has still been defined by traditional methods. Particularly on small displacements and real-world data, FlowNet cannot compete with variational methods. In this paper, we advance the concept of end-to-end learning of optical flow and make it work really well. The large improvements in quality and speed are caused by three major contributions: first, we focus on the training data and show that the schedule of presenting data during training is very important. Second, we develop a stacked architecture that includes warping of the second image with intermediate optical flow. Third, we elaborate on small displacements by introducing a subnetwork specializing on small motions. FlowNet 2.0 is only marginally slower than the original FlowNet but decreases the estimation error by more than 50%. It performs on par with state-of-the-art methods, while running at interactive frame rates. Moreover, we present faster variants that allow optical flow computation at up to 140fps with accuracy matching the original FlowNet.\n\nIntroduction\n\nThe FlowNet by Dosovitskiy et al. [11] represented a paradigm shift in optical flow estimation. The idea of using a simple convolutional CNN architecture to directly learn the concept of optical flow from data was completely disjoint from all the established approaches. However, first implementations of new ideas often have a hard time competing with highly fine-tuned existing methods, and FlowNet was no exception to this rule. It is the successive consolidation that resolves the negative effects and helps us appreciate the benefits of new ways of thinking.\n\nAt the same time, it resolves problems with small displacements and noisy artifacts in estimated flow fields. This leads to a dramatic performance improvement on real-world applications such as action recognition and motion segmentation, bringing FlowNet 2.0 to the state-of-the-art level. The way towards FlowNet 2.0 is via several evolutionary, but decisive modifications that are not trivially connected to the observed problems. First, we evaluate the influence of dataset schedules. Interestingly, the more sophisticated training data provided by Mayer et al. [19] leads to inferior results if used in isolation. However, a learning schedule consisting of multiple datasets improves results significantly. In this scope, we also found that the FlowNet version with an explicit correlation layer outperforms the version without such layer. This is in contrast to the results reported in Dosovitskiy et al. [11].\n\nAs a second contribution, we introduce a warping operation and show how stacking multiple networks using this operation can significantly improve the results. By varying the depth of the stack and the size of individual components we obtain many network variants with different size and runtime. This allows us to control the trade-off between accuracy and computational resources. We provide networks for the spectrum between 8fps and 140fps.\n\nFinally, we focus on small, subpixel motion and realworld data. To this end, we created a special training dataset and a specialized network. We show that the architecture trained with this dataset performs well on small motions typical for real-world videos. To reach optimal performance on arbitrary displacements, we add a network that learns to fuse the former stacked network with the small displace-  ment network in an optimal manner. The final network outperforms the previous FlowNet by a large margin and performs on par with state-of-the-art methods on the Sintel and KITTI benchmarks. It can estimate small and large displacements with very high level of detail while providing interactive frame rates.\n\n\nRelated Work\n\nEnd-to-end optical flow estimation with convolutional networks was proposed by Dosovitskiy et al. in [11]. Their model, dubbed FlowNet, takes a pair of images as input and outputs the flow field. Following FlowNet, several papers have studied optical flow estimation with CNNs: featuring a 3D convolutional network [31], an unsupervised learning objective [1,34], carefully designed rotationally invariant architectures [29], or a pyramidal approach based on the coarse-to-fine idea of variational methods [21]. None of these methods significantly outperforms the original FlowNet.\n\nAn alternative approach to learning-based optical flow estimation is to use CNNs for matching image patches. Thewlis et al. [30] formulate Deep Matching [32] as a convolutional network and optimize it end-to-end. Gadot & Wolf [13] and Bailer et al. [3] learn image patch descriptors using Siamese network architectures. These methods can reach good accuracy, but require exhaustive matching of patches. Thus, they are restrictively slow for most practical applications. Moreover, patch based approaches lack the possibility to use the larger context of the whole image because they operate on small image patches.\n\nConvolutional networks trained for per-pixel prediction tasks often produce noisy or blurry results. As a remedy, out-of-the-box optimization can be applied to the network predictions as a postprocessing operation, for example, optical flow estimates can be refined with a variational approach [11]. In some cases, this refinement can be approximated by neural networks: Chen & Pock [10] formulate reaction diffusion model as a CNN and apply it to image denoising, deblocking and superresolution. Recently, it has been shown that similar refinement can be obtained by stacking several convolutional networks on top of each other. This led to improved results in human pose estimation [18,9] and semantic instance segmentation [23]. In this paper we adapt the idea of stacking multiple networks to optical flow estimation.\n\nOur network architecture includes warping layers that compensate for some already estimated preliminary motion in the second image. The concept of image warping is common to all contemporary variational optical flow methods and goes back to the work of Lucas & Kanade [17]. In Brox et al. [6] it was shown to correspond to a numerical fixed point iteration scheme coupled with a continuation method.\n\nThe strategy of training machine learning models on a series of gradually increasing tasks is known as curriculum learning [5]. The idea dates back at least to Elman [12], who showed that both the evolution of tasks and the network architectures can be beneficial in the language processing scenario. In this paper we revisit this idea in the context of computer vision and show how it can lead to dramatic performance improvement on a complex real-world task of optical flow estimation.\n\n\nDataset Schedules\n\nHigh quality training data is crucial for the success of supervised training. We investigated the differences in the quality of the estimated optical flow depending on the presented training data. Interestingly, it turned out that not only the kind of data is important but also the order in which it is presented during training.\n\nThe original FlowNets [11] were trained on the Fly-ingChairs dataset (we will call it Chairs). This rather simplistic dataset contains about 22k image pairs of chairs superimposed on random background images from Flickr. Random affine transformations are applied to chairs and background to obtain the second image and ground truth flow fields. The dataset contains only planar motions.\n\nThe FlyingThings3D (Things3D) dataset proposed by Mayer et al. [19] can be seen as a three-dimensional version of the FlyingChairs. The dataset consists of 22k renderings of random scenes showing 3D models from the ShapeNet dataset [24] moving in front of static 3D backgrounds. In contrast to Chairs, the images show true 3D motion and lighting effects and there is more variety among the object models.\n\nWe tested the two network architectures introduced by Dosovitskiy et al. [11]: FlowNetS, which is a straightforward encoder-decoder architecture, and FlowNetC, which includes explicit correlation of feature maps. We trained FlowNetS and FlowNetC on Chairs and Things3D and an equal mixture of samples from both datasets using the different learning rate schedules shown in Figure 3. The basic schedule S short (600k iterations) corresponds to Dosovitskiy et al. [11] except some minor changes 1 . Apart from this basic schedule S short , we investigated a longer schedule S long with 1.2M iterations, and a schedule for finetuning S fine with smaller learning rates. Results of networks trained on Chairs and Things3D with the different schedules are given in Table 1. The results lead to the following observations:\n\nThe order of presenting training data with different properties matters. Although Things3D is more realistic, training on Things3D alone leads to worse results than training on Chairs. The best results are consistently achieved when first training on Chairs and only then fine-tuning on Things3D. This schedule also outperforms training on a mixture of Chairs and Things3D. We conjecture that the simpler Chairs dataset helps the network learn the general concept of color matching without developing possibly confusing priors for 3D motion and realistic lighting too early. The result indicates the importance of training data schedules for avoiding shortcuts when learning generic concepts with deep networks. 1 (1) We do not start with a learning rate of 1e \u2212 6 and increase it first, but we start with 1e \u2212 4 immediately. (2) We fix the learning rate for 300k iterations and then divide it by 2 every 100k iterations. FlowNetC outperforms FlowNetS. The result we got with FlowNetS and S short corresponds to the one reported in Dosovitskiy et al. [11]. However, we obtained much better results on FlowNetC. We conclude that Dosovitskiy et al. [11] did not train FlowNetS and FlowNetC under the exact same conditions. When done so, the FlowNetC architecture compares favorably to the FlowNetS architecture.\n\nImproved results. Just by modifying datasets and training schedules, we improved the FlowNetS result reported by Dosovitskiy et al. [11] by \u223c 25% and the FlowNetC result by \u223c 30%.\n\nIn this section, we did not yet use specialized training sets for specialized scenarios. The trained network is rather supposed to be generic and to work well in various scenarios. An additional optional component in dataset schedules is fine-tuning of a generic network to a specific scenario, such as the driving scenario, which we show in Section 6. \n\n\nStacking Networks\n\n\nStacking Two Networks for Flow Refinement\n\nAll state-of-the-art optical flow approaches rely on iterative methods [7,32,22,2]. Can deep networks also benefit from iterative refinement? To answer this, we experiment with stacking multiple FlowNetS and FlowNetC architectures.\n\nThe first network in the stack always gets the images I 1 and I 2 as input. Subsequent networks get I 1 , I 2 , and the previous flow estimate w i = (u i , v i ) , where i denotes the index of the network in the stack.\n\nTo make assessment of the previous error and computing an incremental update easier for the network, we also optionally warp the second image I 2 (x, y) via the flow w i and bilinear interpolation to\u0128 2,i (x, y) = I 2 (x+u i , y +v i ). This way, the next network in the stack can focus on the remaining increment between I 1 and\u0128 2,i . When using warping, we additionally provide\u0128 2,i and the error e i = ||\u0128 2,i \u2212 I 1 || as input to the next network; see Figure 2. Thanks to bilinear interpolation, the derivatives of the warping operation can be computed (see supplemental material for details). This enables training of stacked networks end-to-end. Table 2 shows the effect of stacking two networks, the effect of warping, and the effect of end-to-end training. We take the best FlowNetS from Section 3 and add another FlowNetS on top. The second network is initialized randomly and then the stack is trained on Chairs with the schedule S long . We experimented with two scenarios: keeping the weights of the first network fixed, or updating them together with the weights of the second network. In the latter case, the weights of the first network are fixed for the first 400k iterations to first provide a good initialization of the second network. We report the error on Sintel train clean and on the test set of Chairs. Since the Chairs test set is much more similar to the training data than Sintel, comparing results on both datasets allows us to detect tendencies to over-fitting.\n\nWe make the following observations: (1) Just stacking networks without warping improves results on Chairs but decreases performance on Sintel, i.e. the stacked network is over-fitting. Clearly, since the stacked network is twice as big as the single network, over-fitting is an issue. The positive effect of flow refinement after warping can counteract this problem, yet the best of both is obtained when the stacked networks are trained one after the other, since this avoids overfitting while having the benefit of flow refinement.\n\n\nStacking Multiple Diverse Networks\n\nRather than stacking identical networks, it is possible to stack networks of different type (FlowNetC and FlowNetS). Reducing the size of the individual networks is another valid option. We now investigate different combinations and additionally also vary the network size.\n\nWe call the first network the bootstrap network as it differs from the second network by its inputs. The second network could however be repeated an arbitray number of times in a recurrent fashion. We conducted this experiment and found that applying a network with the same weights multiple times and also fine-tuning this recurrent part does not improve results (see supplemental material for details). As also done in [18,10], we therefore add networks with different weights to the stack. Compared to identical weights, stacking networks with different weights increases the memory footprint, but does not increase the runtime. In this case the top networks are not constrained to a general improvement of their input, but can perform different tasks at different stages and the stack can be trained in smaller  pieces by fixing existing networks and adding new networks one-by-one. We do so by using the Chairs\u2192Things3D schedule from Section 3 for every new network and the best configuration with warping from Section 4.1. Furthermore, we experiment with different network sizes and alternatively use FlowNetS or FlowNetC as a bootstrapping network. We use FlowNetC only in case of the bootstrap network, as the input to the next network is too diverse to be properly handeled by the Siamese structure of FlowNetC. Smaller size versions of the networks were created by taking only a fraction of the number of channels for every layer in the network. Figure 4 shows the network accuracy and runtime for different network sizes of a single FlowNetS. Factor 3 8 yields a good trade-off between speed and accuracy when aiming for faster networks.\n\n\nNotation:\n\nWe denote networks trained by the Chairs\u2192Things3D schedule from Section 3 starting with FlowNet2. Networks in a stack are trained with this schedule one-by-one. For the stack configuration we append upper-or lower-case letters to indicate the original FlowNet or the thin version with 3 8 of the channels. E.g: FlowNet2-CSS stands for a network stack consisting of one FlowNetC and two FlowNetS. FlowNet2-css is the same but with fewer channels. Table 3 shows the performance of different network stacks. Most notably, the final FlowNet2-CSS result improves by \u223c 30% over the single network FlowNet2-C from Section 3 and by \u223c 50% over the original FlowNetC [11]. Furthermore, two small networks in the beginning always outperform one large network, despite being faster and having fewer weights: FlowNet2-ss (11M weights) over FlowNet2-S (38M weights), and FlowNet2-cs (11M weights) over FlowNet2-C (38M weights). Training smaller units step by step proves to be advantageous and enables us to train very deep networks for optical flow. At last, FlowNet2-s provides nearly the same accuracy as the original FlowNet [11], while running at 140 frames per second.\n\n\nSmall Displacements\n\n\nDatasets\n\nWhile the original FlowNet [11] performed well on the Sintel benchmark, limitations in real-world applications have become apparent. In particular, the network cannot reliably estimate small motions (see Figure 1). This is counter-intuitive, since small motions are easier for traditional methods, and there is no obvious reason why networks should not reach the same performance in this setting. Thus, we examined the training data and compared it to the UCF101 dataset [26] as one example of real-world data. While Chairs are similar to Sintel, UCF101 is fundamentally different (we refer to our supplemental material for the analysis): Sintel is an action movie and as such contains many fast movements that are difficult for traditional methods, while the displacements we see in the UCF101 dataset are much smaller, mostly smaller than 1 pixel. Thus, we created a dataset in the visual style of Chairs but with very small displacements and a displacement histogram much more like UCF101. We also added cases with a background that is homogeneous or just consists of color gradients. We call this dataset ChairsSDHom and will release it upon publication.\n\n\nSmall Displacement Network and Fusion\n\nWe fine-tuned our FlowNet2-CSS network for smaller displacements by further training the whole network stack on a mixture of Things3D and ChairsSDHom and by applying a non-linearity to the error to downweight large displacements 2 . We denote this network by FlowNet2-CSS-ft-sd.\n\nThis increases performance on small displacements and we found that this particular mixture does not sacrifice performance on large displacements. However, in case of subpixel motion, noise still remains a problem and we conjecture that the FlowNet architecture might in general not be perfect for such motion. Therefore, we slightly modified the original FlowNetS architecture and removed the stride 2 in the first layer. We made the beginning of the network deeper by exchanging the 7\u00d77 and 5\u00d75 kernels in the beginning with multiple 3 \u00d7 3 kernels 2 . Because noise tends to be a problem with small displacements, we add convolutions between the upconvolutions to obtain smoother estimates as in [19]. We denote the resulting architecture by FlowNet2-SD; see Figure 2.\n\nFinally, we created a small network that fuses FlowNet2-CSS-ft-sd and FlowNet2-SD (see Figure 2). The fusion network receives the flows, the flow magnitudes and the errors in brightness after warping as input. It contracts the resolution two times by a factor of 2 and expands again 2 . Contrary to the original FlowNet architecture it expands to the full resolution. We find that this produces crisp motion boundaries and performs well on small as well as on large displacements. We denote the final network as FlowNet2.\n\n\nExperiments\n\nWe compare the best variants of our network to stateof-the-art approaches on public bechmarks. In addition, we provide a comparison on application tasks, such as motion segmentation and action recognition. This allows benchmarking the method on real data.\n\n\nSpeed and Performance on Public Benchmarks\n\nWe evaluated all methods 3 on a system with an Intel Xeon E5 with 2.40GHz and an Nvidia GTX 1080. Where applicable, dataset-specific parameters were used, that yield best performance. Endpoint errors and runtimes are given in Table 4.\n\nSintel: On Sintel, FlowNet2 consistently outperforms DeepFlow [32] and EpicFlow [22] and is on par with Flow-Fields. All methods with comparable runtimes have clearly inferior accuracy. We fine-tuned FlowNet2 on a mixture of Sintel clean+final training data (FlowNet2-ft-sintel). On the benchmark, in case of clean data this slightly degraded the result, while on final data FlowNet2-ft-sintel is on par with the currently published state-of-the art method Deep-DiscreteFlow [14].\n\nKITTI: On KITTI, the results of FlowNet2-CSS are comparable to EpicFlow [22] and FlowFields [2]. Fine-2 For details we refer to the supplemental material 3 An exception is EPPM for which we could not provide the required Windows environment and use the results from [4].\n\n\nMPI Sintel (train final)\n\nAverage EPE Runtime (milliseconds per frame) tuning on small displacement data degrades the result. This is probably due to KITTI containing very large displacements in general. Fine-tuning on a combination of the KITTI2012 and KITTI2015 training sets reduces the error roughly by a factor of 3 (FlowNet2-ft-kitti). Among nonstereo methods we obtain the best EPE on KITTI2012 and the first rank on the KITTI2015 benchmark. This shows how well and elegantly the learning approach can integrate the prior of the driving scenario. Middlebury: On the Middlebury training set FlowNet2 performs comparable to traditional methods. The results on the Middlebury test set are unexpectedly a lot worse. Still, there is a large improvement compared to FlowNetS [11].\n\nEndpoint error vs. runtime evaluations for Sintel are provided in Figure 4. One can observe that the FlowNet2 family outperforms the best and fastest existing methods by large margins. Depending on the type of application, a FlowNet2 variant between 8 to 140 frames per second can be used. Figures 6 and 7 show example results on Sintel and on real-world data. While the performance on Sintel is similar to FlowFields [2], we can see that on real world data FlowNet 2.0 clearly has advantages in terms of being robust to homogeneous regions (rows 2 and 5), image and compression artifacts (rows 3 and 4) and it yields smooth flow fields with sharp motion boundaries.\n\n\nQualitative Results\n\n\nPerformance on Motion Segmentation and Action Recognition\n\nTo assess performance of FlowNet 2.0 in real-world applications, we compare the performance of action recognition and motion segmentation. For both applications, good   optical flow is key. Thus, a good performance on these tasks also serves as an indicator for good optical flow.\n\nFor motion segmentation, we rely on the wellestablished approach of Ochs et al. [20] to compute long term point trajectories. A motion segmentation is obtained from these using the state-of-the-art method from Keuper et al. [15]. The results are shown in Table 5. The original model in Ochs et al. [15] was built on Large Displacement Optical Flow [7]. We included also other popular optical flow methods in the comparison. The old FlowNet [11] was not useful for motion segmentation. In contrast, the FlowNet2 is as reliable as other state-of-the-art methods while being orders of magnitude faster.\n\nOptical flow is also a crucial feature for action recognition. To assess the performance, we trained the temporal stream of the two-stream approach from Simonyan et al. [25] with different optical flow inputs. Table 5 shows that FlowNetS [11] did not provide useful results, while the Image Overlay FlowFields [2] DeepFlow [32] LDOF (GPU) [27] PCA-Flow [33] FlowNetS [11] \n\n\nConclusions\n\nWe have presented several improvements to the FlowNet idea that have led to accuracy that is fully on par with stateof-the-art methods while FlowNet 2.0 runs orders of magnitude faster. We have quantified the effect of each contribution and showed that all play an important role. The experiments on motion segmentation and action recognition show that the estimated optical flow with FlowNet 2.0 is reliable on a large variety of scenes and applications. The FlowNet 2.0 family provides networks running at speeds from 8 to 140fps. This further extends the possible range of applications. While the results on Middlebury indicate imperfect performance on subpixel motion, FlowNet 2.0 results highlight very crisp motion boundaries, retrieval of fine structures, and robustness to compression artifacts. Thus, we expect it to become the working horse for all applications that require accurate and fast optical flow computation.\n\nMotion Seg.\n\nAction Recog. F-Measure Extracted Accuracy Objects LDOF-CPU [7] 79.51% 28/65 79.91% \u2020 DeepFlow [32] 80.18% 29/65 81.89% EpicFlow [22] 78.36% 27/65 78.90% FlowFields [2] 79.70% 30/65 -FlowNetS [11] 56  Table 5. Motion segmentation and action recognition using different methods; see text for details. Motion Segmentation: We report results using [20,15] on the training set of FBMS-59 [28,20] with a density of 4 pixels. Different densities and error measures are given the supplemental material. \"Extracted objects\" refers to objects with F \u2265 75%. \u2021 FlowNetS is evaluated on 28 out of 29 sequences; on the sequence lion02, the optimization did not converge even after one week. Action Recognition: We report classification accuracies after training the temporal stream of [25]. We use a stack of 5 optical flow fields as input. Due to long training times only selected methods could be evaluated. \u2020 To reproduce results from [25], for action recognition we use the OpenCV LDOF implementation. Note the generally large difference for FlowNetS and FlowNet2 and the performance compared to traditional methods. zon2020 project TrimBot2020.\n\nSupplementary Material for \"FlowNet 2.0: Evolution of Optical Flow Estimation with Deep Networks\" Figure 1. Flow field color coding used in this paper. The displacement of every pixel in this illustration is the vector from the center of the square to this pixel. The central pixel does not move. The value is scaled differently for different images to best visualize the most interesting range.\n\n\nVideo\n\nPlease see the supplementary video for FlowNet2 results on a number of diverse video sequences, a comparison between FlowNet2 and state-of-the-art methods, and an illustration of the speed/accuracy trade-off of the FlowNet 2.0 family of models.\n\nOptical flow color coding. For optical flow visualization we use the color coding of Butler et al. [8]. The color coding scheme is illustrated in Figure 1. Hue represents the direction of the displacement vector, while the intensity of the color represents its magnitude. White color corresponds to no motion. Because the range of motions is very different in different image sequences, we scale the flow fields before visualization: independently for each image pair shown in figures, and independently for each video fragment in the supplementary video. Scaling is always the same for all methods being compared.\n\n\nDataset Schedules: KITTI2015 Results\n\nIn Table 1 we show more results of training networks with the original FlowNet schedule S short [11] and the new FlowNet2 schedules S long and S fine . We provide the endpoint error when testing on the KITTI2015 train dataset. Table 1 in the main paper shows the performance of the same networks on Sintel. One can observe that on KITTI2015, as well as on Sintel, training with S long + S fine on the combination of Chairs and Things3D works best (in the paper referred to as Chairs\u2192Things3D schedule).\n\n\nRecurrently Stacking Networks with the Same Weights\n\nThe bootstrap network differs from the succeeding networks by its task (it needs to predict a flow field from scratch) and inputs (it does not get a previous flow estimate and a warped image). The network after the bootstrap network only refines the previous flow estimate, so it can be applied to its own output recursively. We took the best network from Table 2 of the main paper and applied Net2 recursively multiple times. We then continued training the whole stack with multiple Net2. The difference from our final FlowNet2 architecture is that here the weights are shared between the stacked networks, similar to a standard recurrent network. Results are given in Table 2. In all cases we observe no or negligible improvements compared to the baseline network with a single Net2.\n\n\nSmall Displacements\n\n\nThe ChairsSDHom Dataset\n\nAs an example of real-world data we examine the UCF101 dataset [26]. We compute optical flow using LDOF [11] and compare the flow magnitude distribution to the synthetic datasets we use for training and benchmarking, this is shown in Figure 3. While Chairs are similar  Table 2. Stacked architectures using shared weights. The combination in the first row corresponds to the best results of Table 2 from the paper. Just applying the second network multiple times does not yield improvements. In the two bottom rows we show the results of fine-tuning the stack of the top networks on Chairs for 100k more iterations. This leads to a minor improvement of performance. to Sintel, UCF101 is fundamentally different and contains much more small displacments. To create a training dataset similar to UCF101, following [11], we generated our ChairsSDHom (Chairs Small Displacement Homogeneous) dataset by randomly placing and moving chairs in front of randomized background images. However, we also followed Mayer et al. [19] in that our chairs are not flat 2D bitmaps as in [11], but rendered 3D objects. Similar to Mayer et al., we rendered our data first in a \"raw\" version to get blend-free flow boundaries and then a second time with antialiasing to obtain the color images. To match the characteristic contents of the UCF101 dataset, we mostly applied small motions. We added scenes with weakly textured background to the dataset, being monochrome or containing a very subtle color gradient. Such monotonous backgrounds are not unusual in natural videos, but almost never appear in Chairs or Things3D. A featureless background can potentially move in any direction (an extreme case of the aperture problem), so we kept these background images fixed to introduce a meaningful prior into the dataset. Example images from the dataset are shown in Figure 2 \n\n\nFine-Tuning FlowNet2-CSS-ft-sd\n\nWith the new ChairsSDHom dataset we fine-tuned our FlowNet2-CSS network for smaller displacements (we denote this by FlowNet2-CSS-ft-sd). We experimented with different configurations to avoid sacrificing performance on   large displacements. We found the best performance can be achieved by training with mini-batches of 8 samples: 2 from Things3D and 6 from ChairsSDHom. Furthermore, we applied a nonlinearity of x 0.4 to the endpoint error to emphasize the small-magnitude flows.\n\n\nNetwork Architectures\n\nThe architectures of the small displacement network and the fusion network are shown in Tables 3 and 4. The input to the small displacement network is formed by concatenating both RGB images, resulting in 6 input channels. The network is in general similar to FlowNetS. Differences are the smaller strides and smaller kernel sizes in the beginning and the convolutions between the upconvolutions.\n\nThe fusion network is trained to merge the flow estimates of two previously trained networks, and this task dictates the input structure. We feed the following data into the network: the first image from the image pair, two estimated flow fields, their magnitudes, and finally the two squared Euclidean photoconsistency errors, that is, perpixel squared Euclidean distance between the first image and the second image warped with the predicted flow field. This sums up to 11 channels. Note that we do not input The Chairs dataset very closely follows the Sintel dataset, while our ChairsSDHom datasets is close to UCF101. Things3D has few small displacements and for larger displacements also follows Sintel and Chairs. The Things3D histogram appears smoother because it contains more raw pixel data and due to its randomization of 6-DOF camera motion.\n\nthe second image directly. All inputs are at full image resolution, flow field estimates from previous networks are upsampled with nearest neighbor upsampling.\n\n\nEvaluation\n\n\nIntermediate Results in Stacked Networks\n\nThe idea of the stacked network architecture is that the estimated flow field is gradually improved by every network in the stack. This improvement has been quantitatively shown in the paper. Here, we additionally show qualitative examples which clearly highlight this effect. The improvement is especially dramatic for small displacements, as illustrated in Figure 5. The initial prediction of FlowNet2-C is very noisy, but is then significantly refined by the two succeeding networks. The FlowNet2-SD network, specifically trained on small displacements, estimates small displacements well even without additional refinement. Best results are obtained by fusing both estimated flow fields. Figure 6 illustrates this for a large displacement case. Figure 4 shows runtime vs. endpoint error comparisons of various optical flow estimation methods on two datasets: Sintel (also shown in the main paper) and KITTI2012. In both cases models of the FlowNet 2.0 family offer an excellent speed/accuracy trade-off. Networks fine-tuned on KITTI are not shown. The corresponding points would be below the lower border of the KITTI2012 plot. Table 5 shows detailed results on motion segmentation obtained using the algorithms from [20,15] Figure 5. Three examples of iterative flow field refinement and fusion for small displacements. The motion is very small (therefore mostly not visible in the image overlays). One can observe that FlowNet2-SD output is smoother than FlowNet2-CSS output. The fusion correctly uses the FlowNet2-SD output in the areas where FlowNet2-CSS produces noise due to small displacements.\n\n\nSpeed and Performance on KITTI2012\n\n\nMotion Segmentation\n\noptical flow estimation methods and on the VI (variation of information) metric it is even significantly better. Figure 7 shows qualitative results on the KITTI2015 dataset. FlowNet2-kitti has not been trained on these im-ages during fine-tuning. KITTI ground truth is sparse, so for better visualization we interpolated the ground truth with bilinear interpolation. FlowNet2-kitti significantly outperforms competing approaches both quantitatively and qualitatively.  Table 5. Results on the FBMS-59 [28,20] dataset on training (left) and test set (right). Best results are highlighted in bold. Top: low trajectory density (8px distance), bottom: high trajectory density (4px distance). We report D: density (depending on the selected trajectory sparseness), P: average precision, R: average recall, F: F-measure, VI: variation of information (lower is better), and O: extracted objects with F \u2265 75%. ( * ) FlownetS is evaluated on 28 out of 29 sequences. On the sequence lion02, the optimization did not converge after one week. Due to the convergence problems we do not evaluate FlowNetS on the test set.\n\n\nQualitative results on KITTI2015\n\n\nWarping Layer\n\nThe following two sections give the mathematical details of forward and backward passes through the warping layer used to stack networks.\n\n\nDefinitions and Bilinear Interpolation\n\nLet the image coordinates be x = (x, y) and the set of valid image coordinates R. Let I(x) denote the image and w(x) = (u(x), v(x)) the flow field. The image can also be a feature map and have arbitrarily many channels. Let channel c be denoted with I c (x). We define the coefficients:\n\u03b8 x = x \u2212 x , \u03b8 x = 1 \u2212 \u03b8 x , \u03b8 y = y \u2212 y , \u03b8 y = 1 \u2212 \u03b8 y(1)\nand compute a continuous version\u0128 of I using bilinear interpolation in the usual way:\n\nI(x, y) = \u03b8 x \u03b8 y I( x , y ) + \u03b8 x \u03b8 y I( x , y ) + \u03b8 x \u03b8 y I( x , y )\n+ \u03b8 x \u03b8 y I( x , y )(2)\n\nForward Pass\n\nDuring the forward pass, we compute the warped image by following the flow vectors. We define all pixels to be zero where the flow points outside of the image:\nJ I,w (x) = \u0128 (x + w(x)) if x + w(x) is in R, 0 otherwise.(3)\nImage Overlay Ground Truth FlowFields [2] PCA-Flow [33] FlowNetS [11] FlowNet2-kitti Image Overlay Ground Truth FlowFields [2] PCA-Flow [33] FlowNetS [11] FlowNet2-kitti Figure 7. Qualitative results on the KITTI2015 dataset. Flow fields produced by FlowNet2-kitti are significantly more accurate, detailed and smooth than results of all other methods. Sparse ground truth has been interpolated for better visualization (note that this can cause blurry edges in the ground truth).\n\n\nBackward Pass\n\nDuring the backward pass, we need to compute the derivative of J I,w (x) with respect to its inputs I(x ) and w(x ), where x and x are different integer image locations. Let \u03b4(b) = 1 if b is true and 0 otherwise, and let x + w(x) = (p(x), q(x)) . For brevity, we omit the dependence of p and q on x. The derivative with respect to I c (x ) is then computed as follows:\n\u2202J c (x) \u2202I c (x ) = \u2202\u0128 c (x + w(x)) \u2202I c (x ) = \u2202\u0128 c (p, q) \u2202I c (x , y )\n= \u03b8 x \u03b8 y \u03b4( p = x )\u03b4( q = y ) + \u03b8 x \u03b8 y \u03b4( p = x )\u03b4( q = y ) + \u03b8 x \u03b8 y \u03b4( p = x )\u03b4( q = y ) + \u03b8 x \u03b8 y \u03b4( p = x )\u03b4( q = y ). (4)\n\nThe derivative with respect to the first component of the flow u(x) is computed as follows:\n\n\u2202J(x) \u2202u(x ) = 0 if x = x or (p, q) / \u2208 R \u2202\u0128(x+w(x)) \u2202u(x)\n\notherwise.\n\nIn the non-trivial case, the derivative is computed as fol-lows:\n\n\u2202\u0128(x + w(x)) \u2202u(x) = \u2202\u0128(p, q) \u2202u = \u2202\u0128(p, q) \u2202p = \u2202 \u2202p \u03b8 p \u03b8 q I( p , q ) + \u2202 \u2202p \u03b8 p \u03b8 q I( p , q ) + \u2202 \u2202p \u03b8 p \u03b8 q I( p , q ) + \u2202 \u2202p \u03b8 p \u03b8 q I( p , q ) = \u2212 \u03b8 q I( p , q ) + \u03b8 q I( p , q ) \u2212 \u03b8 q I( p , q ) + \u03b8 q I( p , q ).\n\nNote that the ceiling and floor functions ( \u00b7 , \u00b7 ) are nondifferentiable at points with integer coordinates and we use directional derivatives in these cases. The derivative with respect to v(x) is analogous.\n\nFigure 1 .\n1We present an extension of FlowNet. FlowNet 2.0 yields smooth flow fields, preserves fine motion details and runs at 8 to 140fps. The accuracy on this example is four times higher than with the original FlowNet.\n\nFigure 2 .\n2Schematic view of complete architecture: To compute large displacement optical flow we combine multiple FlowNets. Braces indicate concatenation of inputs. Brightness Error is the difference between the first image and the second image warped with the previously estimated flow. To optimally deal with small displacements, we introduce smaller strides in the beginning and convolutions between upconvolutions into the FlowNetS architecture. Finally we apply a small fusion network to provide the final estimate.\n\n( 2 )\n2With warping included, stacking always improves results. (3) Adding an intermediate loss after Net1 is advantageous when training the stacked network end-toend. (4) The best results are obtained when keeping the first network fixed and only training the second network after the warping operation.\n\nFigure 4 .\n4Accuracy and runtime of FlowNetS depending on the network width. The multiplier 1 corresponds to the width of the original FlowNet architecture. Wider networks do not improve the accuracy. For fast execution times, a factor of 3 8 is a good choice. Timings are from an Nvidia GTX 1080.\n\nFigure 5 .\n5Runtime vs. endpoint error comparison to the fastest existing methods with available code. The FlowNet2 family outperforms other methods by a large margin. The behaviour for the KITTI dataset is the same; see supplemental material.\n\nFigure 6 .\n6Examples of flow fields from different methods estimated on Sintel. FlowNet2 performs similar to FlowFields and is able to extract fine details, while methods running at comparable speeds perform much worse (PCA-Flow and FlowNetS).\n\nFlowNet2 Figure 7 .\nFlowNet27Examples of flow fields from different methods estimated on real-world data. The top two rows are from the Middlebury data set and the bottom three from UCF101. Note how well FlowNet2 generalizes to real-world data, i.e. it produces smooth flow fields, crisp boundaries and is robust to motion blur and compression artifacts. Given timings of methods differ due to different image resolutions. flow from FlowNet 2.0 yields comparable results to stateof-the art methods.\n\nFigure 2 .\n2Images from the ChairsSDHom (Chairs Small Displacement Homogeneous) dataset.\n\n\n.\n\nFigure 3 .\n3Left: histogram of displacement magnitudes of different datasets. y-axis is logarithmic. Right: zoomed view for very small displacements.\n\n\nwith flow fields from different methods as input. For FlowNetS the algorithm does not fully converge after one week on the train-MPI Sintel (train final)\n\nFigure 4 .\n4Runtime vs. endpoint error comparison to the fastest existing methods with available code. The FlowNet2 family outperforms other methods by a large margin.\n\n1\narXiv:1612.01925v1 [cs.CV] 6 Dec 2016Large Displacement \n\nFlowNetS \n\nImage 1 \n\nImage 1 \n\nImage 1 \n\nImage 2 \n\nImage 2 \n\nBrightness \nError \n\nFlow \n\nFlow \n\nFlow \n\nFlow \nMagnitude \n\nFlow \nMagnitude \n\nImage 1 \n\nImage 2 \n\nWarped \n\nBrightness \nError \n\nBrightness \nError \n\nBrightness \nError \n\nFlow \n\nFlow \n\nImage 1 \n\nImage 2 \n\nWarped \n\nLarge \nDisplacement \nLarge Displacement \n\nFusion \n\nFlowNetC \nFlowNetS \n\nSmall Displacement \n\nFlowNet-SD \n\n\n\n\nTable 3. Results on Sintel train clean for some variants of stacked FlowNet architectures following the best practices of Section 3 and Section 4.1. Each new network was first trained on Chairs with S long and then on Things3D with S fine (Chairs\u2192Things3D schedule). Forward pass times are from an Nvidia GTX 1080.Number of Networks \n1 \n2 \n3 \n4 \nArchitecture \ns \nss \nsss \nRuntime \n7ms 14ms 20ms \n-\nEPE \n4.55 \n3.22 \n3.12 \nArchitecture \nS \nSS \nRuntime \n18ms 37ms \n-\n-\nEPE \n3.79 \n2.56 \n\nArchitecture \nc \ncs \ncss \ncsss \nRuntime \n17ms 24ms 31ms 36ms \nEPE \n3.62 \n2.65 \n2.51 \n2.49 \nArchitecture \nC \nCS \nCSS \nRuntime \n33ms 51ms 69ms \n-\nEPE \n3.04 \n2.20 \n2.10 \n\n\n\nTable 4 .\n4Performance comparison on public benchmarks. AEE: Average Endpoint Error; Fl-all: Ratio of pixels where flow estimate is wrong by both \u2265 3 pixels and \u2265 5%. The best number for each category is highlighted in bold. See text for details. \u2020 train numbers for these methods use slower but better \"improved\" option. \u2021 For these results we report the fine-tuned numbers (FlowNetS-ft and FlowNetC-ft).Image Overlay \nGround Truth \nFlowFields [2] \nPCA-Flow [33] \nFlowNetS [11] \nFlowNet2 \n(22,810ms) \n(140ms) \n(18ms) \n(123ms) \n\n\n\nTable 3 .\n3The details of the FlowNet2-SD architecture.Name \nKernel Str. \nCh I/O \nIn Res \nOut Res \nInput \nconv0 \n3\u00d73 \n1 \n6/64 \n512\u00d7384 512\u00d7384 Img1+flows+mags+errs \nconv1 \n3\u00d73 \n2 \n64/64 \n512\u00d7384 256\u00d7192 \nconv0 \nconv1_1 \n3\u00d73 \n1 \n64/128 256\u00d7192 256\u00d7192 \nconv1 \nconv2 \n3\u00d73 \n2 \n128/128 256\u00d7192 128\u00d796 \nconv1_1 \nconv2_1 \n3\u00d73 \n1 \n128/128 128\u00d796 \n128\u00d796 \nconv2 \npr2+loss2 \n3\u00d73 \n1 \n128/2 \n128\u00d796 \n128\u00d796 \nconv2_1 \nupconv1 \n4\u00d74 \n2 \n128/32 \n128\u00d796 \n256\u00d7192 \nconv2_1 \nrconv1 \n3\u00d73 \n1 \n162/32 \n256\u00d7192 256\u00d7192 upconv1+pr2+conv1_1 \npr1+loss1 \n3\u00d73 \n1 \n32/2 \n256\u00d7192 256\u00d7192 \nrconv1 \nupconv0 \n4\u00d74 \n2 \n32/16 \n256\u00d7192 512\u00d7384 \nrconv1 \nrconv0 \n3\u00d73 \n1 \n82/16 \n512\u00d7384 512\u00d7384 \nupconv0+pr1+conv0 \npr0+loss0 \n3\u00d73 \n1 \n16/2 \n512\u00d7384 512\u00d7384 \nrconv0 \n\n\n\nTable 4 .\n4The details of the FlowNet2 fusion network architecture.\n\n\ning set. Due to the bad flow estimations of FlowNetS[11], only very short trajectories can be computed (on average about 3 frames), yielding an excessive number of trajectories. Therefore we do not evaluate FlowNetS on the test set. On all metrics, FlowNet2 is at least on par with the bestImage Overlay \n\nFlowNet2-C output \nFlowNet2-CS output \nFlowNet2-CSS output \n\nFused output \n\nFlowFields \nFlowNet2-SD output \n\nImage Overlay \nFlowNet2-C output \nFlowNet2-CS output \nFlowNet2-CSS output \n\nFused output \n\nFlowFields \nFlowNet2-SD output \n\nImage Overlay \nFlowNet2-C output \nFlowNet2-CS output \nFlowNet2-CSS output \n\nFused output \n\nFlowFields \nFlowNet2-SD \n\n\n\n\nFigure 6. Iterative flow field refinement and fusion for large displacements. The large displacements branch correctly estimates the large motions; the stacked networks improve the flow field and make it smoother. The small displacement branch cannot capture the large motions and the fusion network correctly chooses to use the output of the large displacement branch.80% 89.63% 73.38% 80.69% 0.238 29/65 0.85% 86.73% 68.77% 76.71% 0.311 26/69 LDOF (CPU) [7] 3.47% 86.79% 73.36% 79.51% 0.270 28/65 3.72% 86.81% 67.96% 76.24% 0.361 25/69 DeepFlow [32] 3.66% 86.69% 74.58% 80.18% 0.303 29/65 3.79% 88.58% 68.46% 77.23% 0.393 27/69 EpicFlow [22] 3.58% 84.47% 73.08% 78.36% 0.289 27/65 3.83% 86.38% 70.31% 77.52% 0.343 27/69 FlowFields [2] 3.55% 87.05% 73.50% 79.70% 0.293 30/65 3.82% 88.04% 68.44% 77.01% 0.397 24/69 FlowNetS [11] * 1.93% 76.60% 45.23% 56.87% 0.680 FlowNet2-css-ft-sd 3.38% 85.82% 71.29% 77.88% 0.297 26/65 3.53% 84.24% 65.49% 73.69% 0.369 25/69 FlowNet2-CSS-ft-sd 3.41% 86.54% 73.54% 79.52% 0.279 30/65 3.68% 85.58% 67.81% 75.66% 0.339 27/69 FlowNet2 3.41% 87.42% 73.60% 79.92% 0.249 32/65 3.66% 87.16% 68.51% 76.72% 0.324 26/69Image Overlay \n\nFlowNet2-C output \nFlowNet2-CS output \nFlowNet2-CSS output \n\nFused output \n\nGround Truth \nFlowNet2-SD output \n\nMethod \nTraining set (29 sequences) \nTest set (30 sequences) \nD \nP \nR \nF \nVI \nO \nD \nP \nR \nF \nVI \nO \nLDOF (CPU) [7] \n0.81% 86.73% 73.08% 79.32% 0.267 31/65 0.87% 87.88% 67.70% 76.48% 0.366 25/69 \nDeepFlow [32] \n0.86% 88.96% 76.56% 82.29% 0.296 33/65 0.89% 88.20% 69.39% 77.67% 0.367 26/69 \nEpicFlow [22] \n0.84% 87.21% 74.53% 80.37% 0.279 30/65 0.90% 85.69% 69.09% 76.50% 0.373 25/69 \nFlowFields [2] \n0.83% 87.19% 74.33% 80.25% 0.282 31/65 0.89% 86.88% 69.74% 77.37% 0.365 27/69 \nFlowNetS [11] \n0.45% 74.84% 45.81% 56.83% 0.604 \n3/65 0.48% 68.05% 41.73% 51.74% \n0.60 \n3/69 \nFlowNet2-css-ft-sd \n0.78% 88.07% 71.81% 79.12% 0.270 28/65 0.81% 83.76% 65.77% 73.68% 0.394 24/69 \nFlowNet2-CSS-ft-sd \n0.79% 87.57% 73.87% 80.14% 0.255 31/65 0.85% 85.36% 68.81% 76.19% 0.327 26/69 \nFlowNet2 \n0.3/62 \n-\n-\n-\n-\n-\n-/69 \n\nAcknowledgementsWe acknowledge funding by the ERC Starting Grant VideoLearn, the DFG Grant BR-3815/7-1, and the EU Hori-\nUnsupervised convolutional neural networks for motion estimation. A Ahmadi, I Patras, 2016 IEEE International Conference on Image Processing (ICIP). A. Ahmadi and I. Patras. Unsupervised convolutional neural networks for motion estimation. In 2016 IEEE International Conference on Image Processing (ICIP), 2016.\n\nFlow fields: Dense correspondence fields for highly accurate large displacement optical flow estimation. C Bailer, B Taetz, D Stricker, IEEE International Conference on Computer Vision (ICCV). C. Bailer, B. Taetz, and D. Stricker. Flow fields: Dense corre- spondence fields for highly accurate large displacement op- tical flow estimation. In IEEE International Conference on Computer Vision (ICCV), 2015.\n\nCNN based patch matching for optical flow with thresholded hinge loss. C Bailer, K Varanasi, D Stricker, arXiv:1607.08064arXiv pre-printC. Bailer, K. Varanasi, and D. Stricker. CNN based patch matching for optical flow with thresholded hinge loss. arXiv pre-print, arXiv:1607.08064, Aug. 2016.\n\nFast edge-preserving patchmatch for large displacement optical flow. L Bao, Q Yang, H Jin, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). L. Bao, Q. Yang, and H. Jin. Fast edge-preserving patch- match for large displacement optical flow. In IEEE Confer- ence on Computer Vision and Pattern Recognition (CVPR), 2014.\n\nCurriculum learning. Y Bengio, J Louradour, R Collobert, J Weston, International Conference on Machine Learning (ICML). Y. Bengio, J. Louradour, R. Collobert, and J. Weston. Cur- riculum learning. In International Conference on Machine Learning (ICML), 2009.\n\nHigh accuracy optical flow estimation based on a theory for warping. T Brox, A Bruhn, N Papenberg, J Weickert, European Conference on Computer Vision (ECCV). T. Brox, A. Bruhn, N. Papenberg, and J. Weickert. High ac- curacy optical flow estimation based on a theory for warping. In European Conference on Computer Vision (ECCV), 2004.\n\nLarge displacement optical flow: descriptor matching in variational motion estimation. T Brox, J Malik, IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI). 333T. Brox and J. Malik. Large displacement optical flow: de- scriptor matching in variational motion estimation. IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI), 33(3):500-513, 2011.\n\nA naturalistic open source movie for optical flow evaluation. D J Butler, J Wulff, G B Stanley, M J Black, European Conference on Computer Vision (ECCV). D. J. Butler, J. Wulff, G. B. Stanley, and M. J. Black. A naturalistic open source movie for optical flow evaluation. In European Conference on Computer Vision (ECCV).\n\nHuman pose estimation with iterative error feedback. J Carreira, P Agrawal, K Fragkiadaki, J Malik, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). J. Carreira, P. Agrawal, K. Fragkiadaki, and J. Malik. Hu- man pose estimation with iterative error feedback. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), June 2016.\n\nTrainable nonlinear reaction diffusion: A flexible framework for fast and effective image restoration. Y Chen, T Pock, IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI). Y. Chen and T. Pock. Trainable nonlinear reaction diffusion: A flexible framework for fast and effective image restora- tion. IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI), PP(99):1-1, 2016.\n\nFlownet: Learning optical flow with convolutional networks. A Dosovitskiy, P Fischer, E Ilg, P H\u00e4usser, C Haz\u0131rba\u015f, V Golkov, P Smagt, D Cremers, T Brox, IEEE International Conference on Computer Vision (ICCV). A. Dosovitskiy, P. Fischer, E. Ilg, P. H\u00e4usser, C. Haz\u0131rba\u015f, V. Golkov, P. v.d. Smagt, D. Cremers, and T. Brox. Flownet: Learning optical flow with convolutional networks. In IEEE International Conference on Computer Vision (ICCV), 2015.\n\nLearning and development in neural networks: The importance of starting small. J Elman, Cognition. 481J. Elman. Learning and development in neural networks: The importance of starting small. Cognition, 48(1):71-99, 1993.\n\nPatchbatch: A batch augmented loss for optical flow. D Gadot, L Wolf, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). D. Gadot and L. Wolf. Patchbatch: A batch augmented loss for optical flow. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\n\nDeep discrete flow. F G\u00fcney, A Geiger, Asian Conference on Computer Vision (ACCV). F. G\u00fcney and A. Geiger. Deep discrete flow. In Asian Con- ference on Computer Vision (ACCV), 2016.\n\nMotion trajectory segmentation via minimum cost multicuts. M Keuper, B Andres, T Brox, IEEE International Conference on Computer Vision (ICCV). M. Keuper, B. Andres, and T. Brox. Motion trajectory seg- mentation via minimum cost multicuts. In IEEE Interna- tional Conference on Computer Vision (ICCV), 2015.\n\nFast optical flow using dense inverse search. T Kroeger, R Timofte, D Dai, L V Gool, European Conference on Computer Vision (ECCV). T. Kroeger, R. Timofte, D. Dai, and L. V. Gool. Fast optical flow using dense inverse search. In European Conference on Computer Vision (ECCV), 2016.\n\nAn iterative image registration technique with an application to stereo vision. B D Lucas, T Kanade, Proceedings of the 7th International Joint Conference on Artificial Intelligence (IJCAI). the 7th International Joint Conference on Artificial Intelligence (IJCAI)B. D. Lucas and T. Kanade. An iterative image registration technique with an application to stereo vision. In Proceed- ings of the 7th International Joint Conference on Artificial Intelligence (IJCAI).\n\nStacked hourglass networks for human pose estimation. A Newell, K Yang, J Deng, European Conference on Computer Vision (ECCV). A. Newell, K. Yang, and J. Deng. Stacked hourglass net- works for human pose estimation. In European Conference on Computer Vision (ECCV), 2016.\n\nA large dataset to train convolutional networks for disparity, optical flow, and scene flow estimation. N Mayer, E Ilg, P H\u00e4usser, P Fischer, D Cremers, A Dosovitskiy, T Brox, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). N.Mayer, E.Ilg, P.H\u00e4usser, P.Fischer, D.Cremers, A.Dosovitskiy, and T.Brox. A large dataset to train convolutional networks for disparity, optical flow, and scene flow estimation. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\n\nSegmentation of moving objects by long term video analysis. P Ochs, J Malik, T Brox, IEEE Transactions on Pattern Analysis and Machine Intelligence (TPAMI). 36P. Ochs, J. Malik, and T. Brox. Segmentation of moving ob- jects by long term video analysis. IEEE Transactions on Pat- tern Analysis and Machine Intelligence (TPAMI), 36(6):1187 -1200, Jun 2014.\n\nOptical Flow Estimation using a Spatial Pyramid Network. A Ranjan, M J Black, arXiv:1611.00850arXiv pre-printA. Ranjan and M. J. Black. Optical Flow Estima- tion using a Spatial Pyramid Network. arXiv pre-print, arXiv:1611.00850, Nov. 2016.\n\nEpicflow: Edge-preserving interpolation of correspondences for optical flow. J Revaud, P Weinzaepfel, Z Harchaoui, C Schmid, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). J. Revaud, P. Weinzaepfel, Z. Harchaoui, and C. Schmid. Epicflow: Edge-preserving interpolation of correspondences for optical flow. In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2015.\n\nRecurrent instance segmentation. B Romera-Paredes, P H S Torr, European Conference on Computer Vision (ECCV). B. Romera-Paredes and P. H. S. Torr. Recurrent instance segmentation. In European Conference on Computer Vision (ECCV), 2016.\n\nSemantically-Enriched 3D Models for Common-sense Knowledge (Workshop on Functionality. M Savva, A X Chang, P Hanrahan, Physics, Intentionality and Causality. M. Savva, A. X. Chang, and P. Hanrahan. Semantically- Enriched 3D Models for Common-sense Knowledge (Work- shop on Functionality, Physics, Intentionality and Causality).\n\nIEEE Conference on Computer Vision and Pattern Recognition (CVPR). In IEEE Conference on Computer Vision and Pattern Recog- nition (CVPR), 2015.\n\nTwo-stream convolutional networks for action recognition in videos. K Simonyan, A Zisserman, International Conference on Neural Information Processing Systems (NIPS). K. Simonyan and A. Zisserman. Two-stream convolutional networks for action recognition in videos. In Interna- tional Conference on Neural Information Processing Sys- tems (NIPS), 2014.\n\nUCF101: A dataset of 101 human actions classes from videos in the wild. K Soomro, A R Zamir, M Shah, arXiv:1212.0402arXiv pre-printK. Soomro, A. R. Zamir, and M. Shah. UCF101: A dataset of 101 human actions classes from videos in the wild. arXiv pre-print, arXiv:1212.0402, Jan. 2013.\n\nDense point trajectories by gpu-accelerated large displacement optical flow. N Sundaram, T Brox, K Keutzer, European Conference on Computer Vision (ECCV). N. Sundaram, T. Brox, and K. Keutzer. Dense point trajec- tories by gpu-accelerated large displacement optical flow. In European Conference on Computer Vision (ECCV), 2010.\n\nObject segmentation by long term analysis of point trajectories. T Brox, J Malik, European Conference on Computer Vision (ECCV). T.Brox and J.Malik. Object segmentation by long term anal- ysis of point trajectories. In European Conference on Com- puter Vision (ECCV), 2010.\n\nLearning to extract motion from videos in convolutional neural networks. D Teney, M Hebert, arXiv:1601.07532arXiv pre-printD. Teney and M. Hebert. Learning to extract motion from videos in convolutional neural networks. arXiv pre-print, arXiv:1601.07532, Feb. 2016.\n\nFullytrainable deep matching. J Thewlis, S Zheng, P H Torr, A Vedaldi, British Machine Vision Conference (BMVC). J. Thewlis, S. Zheng, P. H. Torr, and A. Vedaldi. Fully- trainable deep matching. In British Machine Vision Confer- ence (BMVC), 2016.\n\nDeep end2end voxel2voxel prediction (the 3rd workshop on deep learning in computer vision). D Tran, L Bourdev, R Fergus, L Torresani, M Paluri, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). D. Tran, L. Bourdev, R. Fergus, L. Torresani, and M. Paluri. Deep end2end voxel2voxel prediction (the 3rd workshop on deep learning in computer vision). In IEEE Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\n\nDeepflow: Large displacement optical flow with deep matching. P Weinzaepfel, J Revaud, Z Harchaoui, C Schmid, IEEE International Conference on Computer Vision (ICCV). P. Weinzaepfel, J. Revaud, Z. Harchaoui, and C. Schmid. Deepflow: Large displacement optical flow with deep match- ing. In IEEE International Conference on Computer Vision (ICCV), 2013.\n\nEfficient sparse-to-dense optical flow estimation using a learned basis and layers. J Wulff, M J Black, IEEE Conference on Computer Vision and Pattern Recognition (CVPR). J. Wulff and M. J. Black. Efficient sparse-to-dense opti- cal flow estimation using a learned basis and layers. In IEEE Conference on Computer Vision and Pattern Recog- nition (CVPR), 2015.\n\nBack to basics: Unsupervised learning of optical flow via brightness constancy and motion smoothness. J J Yu, A W Harley, K G Derpanis, arXiv:1608.05842arXiv pre-printJ. J. Yu, A. W. Harley, and K. G. Derpanis. Back to basics: Unsupervised learning of optical flow via bright- ness constancy and motion smoothness. arXiv pre-print, arXiv:1608.05842, Sept. 2016.\n", "annotations": {"author": "[{\"end\":136,\"start\":72},{\"end\":210,\"start\":137},{\"end\":284,\"start\":211},{\"end\":358,\"start\":285},{\"end\":438,\"start\":359},{\"end\":507,\"start\":439}]", "publisher": null, "author_last_name": "[{\"end\":80,\"start\":77},{\"end\":151,\"start\":146},{\"end\":224,\"start\":218},{\"end\":299,\"start\":293},{\"end\":377,\"start\":366},{\"end\":450,\"start\":446}]", "author_first_name": "[{\"end\":76,\"start\":72},{\"end\":145,\"start\":137},{\"end\":217,\"start\":211},{\"end\":292,\"start\":285},{\"end\":365,\"start\":359},{\"end\":445,\"start\":439}]", "author_affiliation": "[{\"end\":135,\"start\":105},{\"end\":209,\"start\":179},{\"end\":283,\"start\":253},{\"end\":357,\"start\":327},{\"end\":437,\"start\":407},{\"end\":506,\"start\":476}]", "title": "[{\"end\":69,\"start\":1},{\"end\":576,\"start\":508}]", "venue": null, "abstract": "[{\"end\":1759,\"start\":578}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b10\"},\"end\":1813,\"start\":1809},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":2909,\"start\":2905},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3254,\"start\":3250},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4538,\"start\":4534},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":4752,\"start\":4748},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4792,\"start\":4789},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":4795,\"start\":4792},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":4857,\"start\":4853},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4943,\"start\":4939},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":5144,\"start\":5140},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":5173,\"start\":5169},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5246,\"start\":5242},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5268,\"start\":5265},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":5929,\"start\":5925},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6018,\"start\":6014},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6319,\"start\":6315},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6321,\"start\":6319},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":6361,\"start\":6357},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":6726,\"start\":6722},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":6746,\"start\":6743},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6981,\"start\":6978},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":7025,\"start\":7021},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":7722,\"start\":7718},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8151,\"start\":8147},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":8320,\"start\":8316},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8567,\"start\":8563},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8956,\"start\":8952},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":10021,\"start\":10020},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":10137,\"start\":10134},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":10363,\"start\":10359},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":10459,\"start\":10455},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":10755,\"start\":10751},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":11293,\"start\":11290},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":11296,\"start\":11293},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":11299,\"start\":11296},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":11301,\"start\":11299},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":14437,\"start\":14433},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":14440,\"start\":14437},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":15960,\"start\":15959},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":16335,\"start\":16331},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":16793,\"start\":16789},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":16900,\"start\":16896},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":17344,\"start\":17340},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":19051,\"start\":19047},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":20262,\"start\":20258},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":20280,\"start\":20276},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":20675,\"start\":20671},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":20754,\"start\":20750},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":20773,\"start\":20770},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":20833,\"start\":20832},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":20947,\"start\":20944},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":21731,\"start\":21727},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":22155,\"start\":22152},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":22850,\"start\":22846},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":22994,\"start\":22990},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":23068,\"start\":23064},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":23117,\"start\":23114},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":23210,\"start\":23206},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":23540,\"start\":23536},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":23609,\"start\":23605},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":23680,\"start\":23677},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":23694,\"start\":23690},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":23710,\"start\":23706},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":23724,\"start\":23720},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":23738,\"start\":23734},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":24761,\"start\":24758},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":24797,\"start\":24793},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":24831,\"start\":24827},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":24866,\"start\":24863},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":24894,\"start\":24890},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25047,\"start\":25043},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":25050,\"start\":25047},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":25086,\"start\":25082},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25089,\"start\":25086},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":25474,\"start\":25470},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":25627,\"start\":25623},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":26589,\"start\":26586},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":27242,\"start\":27238},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":28602,\"start\":28598},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":28643,\"start\":28639},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":29351,\"start\":29347},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":29553,\"start\":29549},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":29607,\"start\":29603},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":33624,\"start\":33620},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":33627,\"start\":33624},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":34570,\"start\":34566},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":34573,\"start\":34570},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":36213,\"start\":36210},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":36227,\"start\":36223},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":36241,\"start\":36237},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":36298,\"start\":36295},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":36312,\"start\":36308},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":36326,\"start\":36322},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":43302,\"start\":43298}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":38132,\"start\":37908},{\"attributes\":{\"id\":\"fig_1\"},\"end\":38656,\"start\":38133},{\"attributes\":{\"id\":\"fig_2\"},\"end\":38962,\"start\":38657},{\"attributes\":{\"id\":\"fig_4\"},\"end\":39261,\"start\":38963},{\"attributes\":{\"id\":\"fig_5\"},\"end\":39506,\"start\":39262},{\"attributes\":{\"id\":\"fig_6\"},\"end\":39751,\"start\":39507},{\"attributes\":{\"id\":\"fig_7\"},\"end\":40251,\"start\":39752},{\"attributes\":{\"id\":\"fig_8\"},\"end\":40341,\"start\":40252},{\"attributes\":{\"id\":\"fig_9\"},\"end\":40345,\"start\":40342},{\"attributes\":{\"id\":\"fig_10\"},\"end\":40496,\"start\":40346},{\"attributes\":{\"id\":\"fig_11\"},\"end\":40652,\"start\":40497},{\"attributes\":{\"id\":\"fig_12\"},\"end\":40821,\"start\":40653},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":41259,\"start\":40822},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":41914,\"start\":41260},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":42445,\"start\":41915},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":43174,\"start\":42446},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":43243,\"start\":43175},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":43902,\"start\":43244},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":45980,\"start\":43903}]", "paragraph": "[{\"end\":2338,\"start\":1775},{\"end\":3255,\"start\":2340},{\"end\":3700,\"start\":3257},{\"end\":4416,\"start\":3702},{\"end\":5014,\"start\":4433},{\"end\":5629,\"start\":5016},{\"end\":6452,\"start\":5631},{\"end\":6853,\"start\":6454},{\"end\":7342,\"start\":6855},{\"end\":7694,\"start\":7364},{\"end\":8082,\"start\":7696},{\"end\":8488,\"start\":8084},{\"end\":9306,\"start\":8490},{\"end\":10617,\"start\":9308},{\"end\":10798,\"start\":10619},{\"end\":11153,\"start\":10800},{\"end\":11450,\"start\":11219},{\"end\":11670,\"start\":11452},{\"end\":13163,\"start\":11672},{\"end\":13698,\"start\":13165},{\"end\":14010,\"start\":13737},{\"end\":15660,\"start\":14012},{\"end\":16834,\"start\":15674},{\"end\":18027,\"start\":16869},{\"end\":18347,\"start\":18069},{\"end\":19119,\"start\":18349},{\"end\":19642,\"start\":19121},{\"end\":19913,\"start\":19658},{\"end\":20194,\"start\":19960},{\"end\":20676,\"start\":20196},{\"end\":20948,\"start\":20678},{\"end\":21732,\"start\":20977},{\"end\":22400,\"start\":21734},{\"end\":22764,\"start\":22484},{\"end\":23365,\"start\":22766},{\"end\":23739,\"start\":23367},{\"end\":24683,\"start\":23755},{\"end\":24696,\"start\":24685},{\"end\":25834,\"start\":24698},{\"end\":26231,\"start\":25836},{\"end\":26485,\"start\":26241},{\"end\":27101,\"start\":26487},{\"end\":27644,\"start\":27142},{\"end\":28485,\"start\":27700},{\"end\":30387,\"start\":28535},{\"end\":30904,\"start\":30422},{\"end\":31326,\"start\":30930},{\"end\":32180,\"start\":31328},{\"end\":32341,\"start\":32182},{\"end\":34004,\"start\":32399},{\"end\":35172,\"start\":34065},{\"end\":35362,\"start\":35225},{\"end\":35691,\"start\":35405},{\"end\":35838,\"start\":35753},{\"end\":35910,\"start\":35840},{\"end\":36109,\"start\":35950},{\"end\":36652,\"start\":36172},{\"end\":37038,\"start\":36670},{\"end\":37242,\"start\":37114},{\"end\":37335,\"start\":37244},{\"end\":37395,\"start\":37337},{\"end\":37407,\"start\":37397},{\"end\":37473,\"start\":37409},{\"end\":37696,\"start\":37475},{\"end\":37907,\"start\":37698}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":35752,\"start\":35692},{\"attributes\":{\"id\":\"formula_1\"},\"end\":35934,\"start\":35911},{\"attributes\":{\"id\":\"formula_2\"},\"end\":36171,\"start\":36110},{\"attributes\":{\"id\":\"formula_3\"},\"end\":37113,\"start\":37039}]", "table_ref": "[{\"end\":9257,\"start\":9250},{\"end\":12332,\"start\":12325},{\"attributes\":{\"ref_id\":\"tab_10\"},\"end\":16127,\"start\":16120},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":20193,\"start\":20186},{\"end\":23028,\"start\":23021},{\"end\":23584,\"start\":23577},{\"end\":24906,\"start\":24899},{\"end\":27152,\"start\":27145},{\"end\":28063,\"start\":28056},{\"end\":28377,\"start\":28370},{\"end\":28812,\"start\":28805},{\"end\":28933,\"start\":28926},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":31032,\"start\":31018},{\"end\":33538,\"start\":33531},{\"end\":34541,\"start\":34534}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1773,\"start\":1761},{\"attributes\":{\"n\":\"2.\"},\"end\":4431,\"start\":4419},{\"attributes\":{\"n\":\"3.\"},\"end\":7362,\"start\":7345},{\"attributes\":{\"n\":\"4.\"},\"end\":11173,\"start\":11156},{\"attributes\":{\"n\":\"4.1.\"},\"end\":11217,\"start\":11176},{\"attributes\":{\"n\":\"4.2.\"},\"end\":13735,\"start\":13701},{\"end\":15672,\"start\":15663},{\"attributes\":{\"n\":\"5.\"},\"end\":16856,\"start\":16837},{\"attributes\":{\"n\":\"5.1.\"},\"end\":16867,\"start\":16859},{\"attributes\":{\"n\":\"5.2.\"},\"end\":18067,\"start\":18030},{\"attributes\":{\"n\":\"6.\"},\"end\":19656,\"start\":19645},{\"attributes\":{\"n\":\"6.1.\"},\"end\":19958,\"start\":19916},{\"end\":20975,\"start\":20951},{\"attributes\":{\"n\":\"6.2.\"},\"end\":22422,\"start\":22403},{\"attributes\":{\"n\":\"6.3.\"},\"end\":22482,\"start\":22425},{\"attributes\":{\"n\":\"7.\"},\"end\":23753,\"start\":23742},{\"attributes\":{\"n\":\"1.\"},\"end\":26239,\"start\":26234},{\"attributes\":{\"n\":\"2.\"},\"end\":27140,\"start\":27104},{\"attributes\":{\"n\":\"3.\"},\"end\":27698,\"start\":27647},{\"attributes\":{\"n\":\"4.\"},\"end\":28507,\"start\":28488},{\"attributes\":{\"n\":\"4.1.\"},\"end\":28533,\"start\":28510},{\"attributes\":{\"n\":\"4.2.\"},\"end\":30420,\"start\":30390},{\"attributes\":{\"n\":\"4.3.\"},\"end\":30928,\"start\":30907},{\"attributes\":{\"n\":\"5.\"},\"end\":32354,\"start\":32344},{\"attributes\":{\"n\":\"5.1.\"},\"end\":32397,\"start\":32357},{\"attributes\":{\"n\":\"5.2.\"},\"end\":34041,\"start\":34007},{\"attributes\":{\"n\":\"5.3.\"},\"end\":34063,\"start\":34044},{\"attributes\":{\"n\":\"5.4.\"},\"end\":35207,\"start\":35175},{\"attributes\":{\"n\":\"6.\"},\"end\":35223,\"start\":35210},{\"attributes\":{\"n\":\"6.1.\"},\"end\":35403,\"start\":35365},{\"attributes\":{\"n\":\"6.2.\"},\"end\":35948,\"start\":35936},{\"attributes\":{\"n\":\"6.3.\"},\"end\":36668,\"start\":36655},{\"end\":37919,\"start\":37909},{\"end\":38144,\"start\":38134},{\"end\":38663,\"start\":38658},{\"end\":38974,\"start\":38964},{\"end\":39273,\"start\":39263},{\"end\":39518,\"start\":39508},{\"end\":39772,\"start\":39753},{\"end\":40263,\"start\":40253},{\"end\":40357,\"start\":40347},{\"end\":40664,\"start\":40654},{\"end\":40824,\"start\":40823},{\"end\":41925,\"start\":41916},{\"end\":42456,\"start\":42447},{\"end\":43185,\"start\":43176}]", "table": "[{\"end\":41259,\"start\":40862},{\"end\":41914,\"start\":41576},{\"end\":42445,\"start\":42321},{\"end\":43174,\"start\":42502},{\"end\":43902,\"start\":43536},{\"end\":45980,\"start\":45049}]", "figure_caption": "[{\"end\":38132,\"start\":37921},{\"end\":38656,\"start\":38146},{\"end\":38962,\"start\":38665},{\"end\":39261,\"start\":38976},{\"end\":39506,\"start\":39275},{\"end\":39751,\"start\":39520},{\"end\":40251,\"start\":39782},{\"end\":40341,\"start\":40265},{\"end\":40345,\"start\":40344},{\"end\":40496,\"start\":40359},{\"end\":40652,\"start\":40499},{\"end\":40821,\"start\":40666},{\"end\":40862,\"start\":40825},{\"end\":41576,\"start\":41262},{\"end\":42321,\"start\":41927},{\"end\":42502,\"start\":42458},{\"end\":43243,\"start\":43187},{\"end\":43536,\"start\":43246},{\"end\":45049,\"start\":43905}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":8871,\"start\":8863},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":12137,\"start\":12129},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":15476,\"start\":15468},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":17081,\"start\":17073},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":19118,\"start\":19110},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":19216,\"start\":19208},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":21808,\"start\":21800},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":22039,\"start\":22024},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":25942,\"start\":25934},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":26641,\"start\":26633},{\"attributes\":{\"ref_id\":\"fig_10\"},\"end\":28777,\"start\":28769},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":30386,\"start\":30378},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":32766,\"start\":32758},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":33099,\"start\":33091},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":33156,\"start\":33148},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":33636,\"start\":33628},{\"end\":34186,\"start\":34178},{\"end\":36350,\"start\":36342}]", "bib_author_first_name": "[{\"end\":46169,\"start\":46168},{\"end\":46179,\"start\":46178},{\"end\":46521,\"start\":46520},{\"end\":46531,\"start\":46530},{\"end\":46540,\"start\":46539},{\"end\":46894,\"start\":46893},{\"end\":46904,\"start\":46903},{\"end\":46916,\"start\":46915},{\"end\":47187,\"start\":47186},{\"end\":47194,\"start\":47193},{\"end\":47202,\"start\":47201},{\"end\":47476,\"start\":47475},{\"end\":47486,\"start\":47485},{\"end\":47499,\"start\":47498},{\"end\":47512,\"start\":47511},{\"end\":47784,\"start\":47783},{\"end\":47792,\"start\":47791},{\"end\":47801,\"start\":47800},{\"end\":47814,\"start\":47813},{\"end\":48138,\"start\":48137},{\"end\":48146,\"start\":48145},{\"end\":48497,\"start\":48496},{\"end\":48499,\"start\":48498},{\"end\":48509,\"start\":48508},{\"end\":48518,\"start\":48517},{\"end\":48520,\"start\":48519},{\"end\":48531,\"start\":48530},{\"end\":48533,\"start\":48532},{\"end\":48811,\"start\":48810},{\"end\":48823,\"start\":48822},{\"end\":48834,\"start\":48833},{\"end\":48849,\"start\":48848},{\"end\":49220,\"start\":49219},{\"end\":49228,\"start\":49227},{\"end\":49585,\"start\":49584},{\"end\":49600,\"start\":49599},{\"end\":49611,\"start\":49610},{\"end\":49618,\"start\":49617},{\"end\":49629,\"start\":49628},{\"end\":49641,\"start\":49640},{\"end\":49651,\"start\":49650},{\"end\":49660,\"start\":49659},{\"end\":49671,\"start\":49670},{\"end\":50054,\"start\":50053},{\"end\":50250,\"start\":50249},{\"end\":50259,\"start\":50258},{\"end\":50506,\"start\":50505},{\"end\":50515,\"start\":50514},{\"end\":50728,\"start\":50727},{\"end\":50738,\"start\":50737},{\"end\":50748,\"start\":50747},{\"end\":51024,\"start\":51023},{\"end\":51035,\"start\":51034},{\"end\":51046,\"start\":51045},{\"end\":51053,\"start\":51052},{\"end\":51055,\"start\":51054},{\"end\":51341,\"start\":51340},{\"end\":51343,\"start\":51342},{\"end\":51352,\"start\":51351},{\"end\":51782,\"start\":51781},{\"end\":51792,\"start\":51791},{\"end\":51800,\"start\":51799},{\"end\":52105,\"start\":52104},{\"end\":52114,\"start\":52113},{\"end\":52121,\"start\":52120},{\"end\":52132,\"start\":52131},{\"end\":52143,\"start\":52142},{\"end\":52154,\"start\":52153},{\"end\":52169,\"start\":52168},{\"end\":52561,\"start\":52560},{\"end\":52569,\"start\":52568},{\"end\":52578,\"start\":52577},{\"end\":52914,\"start\":52913},{\"end\":52924,\"start\":52923},{\"end\":52926,\"start\":52925},{\"end\":53176,\"start\":53175},{\"end\":53186,\"start\":53185},{\"end\":53201,\"start\":53200},{\"end\":53214,\"start\":53213},{\"end\":53534,\"start\":53533},{\"end\":53552,\"start\":53551},{\"end\":53556,\"start\":53553},{\"end\":53825,\"start\":53824},{\"end\":53834,\"start\":53833},{\"end\":53836,\"start\":53835},{\"end\":53845,\"start\":53844},{\"end\":54281,\"start\":54280},{\"end\":54293,\"start\":54292},{\"end\":54638,\"start\":54637},{\"end\":54648,\"start\":54647},{\"end\":54650,\"start\":54649},{\"end\":54659,\"start\":54658},{\"end\":54929,\"start\":54928},{\"end\":54941,\"start\":54940},{\"end\":54949,\"start\":54948},{\"end\":55246,\"start\":55245},{\"end\":55254,\"start\":55253},{\"end\":55529,\"start\":55528},{\"end\":55538,\"start\":55537},{\"end\":55753,\"start\":55752},{\"end\":55764,\"start\":55763},{\"end\":55773,\"start\":55772},{\"end\":55775,\"start\":55774},{\"end\":55783,\"start\":55782},{\"end\":56064,\"start\":56063},{\"end\":56072,\"start\":56071},{\"end\":56083,\"start\":56082},{\"end\":56093,\"start\":56092},{\"end\":56106,\"start\":56105},{\"end\":56475,\"start\":56474},{\"end\":56490,\"start\":56489},{\"end\":56500,\"start\":56499},{\"end\":56513,\"start\":56512},{\"end\":56851,\"start\":56850},{\"end\":56860,\"start\":56859},{\"end\":56862,\"start\":56861},{\"end\":57231,\"start\":57230},{\"end\":57233,\"start\":57232},{\"end\":57239,\"start\":57238},{\"end\":57241,\"start\":57240},{\"end\":57251,\"start\":57250},{\"end\":57253,\"start\":57252}]", "bib_author_last_name": "[{\"end\":46176,\"start\":46170},{\"end\":46186,\"start\":46180},{\"end\":46528,\"start\":46522},{\"end\":46537,\"start\":46532},{\"end\":46549,\"start\":46541},{\"end\":46901,\"start\":46895},{\"end\":46913,\"start\":46905},{\"end\":46925,\"start\":46917},{\"end\":47191,\"start\":47188},{\"end\":47199,\"start\":47195},{\"end\":47206,\"start\":47203},{\"end\":47483,\"start\":47477},{\"end\":47496,\"start\":47487},{\"end\":47509,\"start\":47500},{\"end\":47519,\"start\":47513},{\"end\":47789,\"start\":47785},{\"end\":47798,\"start\":47793},{\"end\":47811,\"start\":47802},{\"end\":47823,\"start\":47815},{\"end\":48143,\"start\":48139},{\"end\":48152,\"start\":48147},{\"end\":48506,\"start\":48500},{\"end\":48515,\"start\":48510},{\"end\":48528,\"start\":48521},{\"end\":48539,\"start\":48534},{\"end\":48820,\"start\":48812},{\"end\":48831,\"start\":48824},{\"end\":48846,\"start\":48835},{\"end\":48855,\"start\":48850},{\"end\":49225,\"start\":49221},{\"end\":49233,\"start\":49229},{\"end\":49597,\"start\":49586},{\"end\":49608,\"start\":49601},{\"end\":49615,\"start\":49612},{\"end\":49626,\"start\":49619},{\"end\":49638,\"start\":49630},{\"end\":49648,\"start\":49642},{\"end\":49657,\"start\":49652},{\"end\":49668,\"start\":49661},{\"end\":49676,\"start\":49672},{\"end\":50060,\"start\":50055},{\"end\":50256,\"start\":50251},{\"end\":50264,\"start\":50260},{\"end\":50512,\"start\":50507},{\"end\":50522,\"start\":50516},{\"end\":50735,\"start\":50729},{\"end\":50745,\"start\":50739},{\"end\":50753,\"start\":50749},{\"end\":51032,\"start\":51025},{\"end\":51043,\"start\":51036},{\"end\":51050,\"start\":51047},{\"end\":51060,\"start\":51056},{\"end\":51349,\"start\":51344},{\"end\":51359,\"start\":51353},{\"end\":51789,\"start\":51783},{\"end\":51797,\"start\":51793},{\"end\":51805,\"start\":51801},{\"end\":52111,\"start\":52106},{\"end\":52118,\"start\":52115},{\"end\":52129,\"start\":52122},{\"end\":52140,\"start\":52133},{\"end\":52151,\"start\":52144},{\"end\":52166,\"start\":52155},{\"end\":52174,\"start\":52170},{\"end\":52566,\"start\":52562},{\"end\":52575,\"start\":52570},{\"end\":52583,\"start\":52579},{\"end\":52921,\"start\":52915},{\"end\":52932,\"start\":52927},{\"end\":53183,\"start\":53177},{\"end\":53198,\"start\":53187},{\"end\":53211,\"start\":53202},{\"end\":53221,\"start\":53215},{\"end\":53549,\"start\":53535},{\"end\":53561,\"start\":53557},{\"end\":53831,\"start\":53826},{\"end\":53842,\"start\":53837},{\"end\":53854,\"start\":53846},{\"end\":54290,\"start\":54282},{\"end\":54303,\"start\":54294},{\"end\":54645,\"start\":54639},{\"end\":54656,\"start\":54651},{\"end\":54664,\"start\":54660},{\"end\":54938,\"start\":54930},{\"end\":54946,\"start\":54942},{\"end\":54957,\"start\":54950},{\"end\":55251,\"start\":55247},{\"end\":55260,\"start\":55255},{\"end\":55535,\"start\":55530},{\"end\":55545,\"start\":55539},{\"end\":55761,\"start\":55754},{\"end\":55770,\"start\":55765},{\"end\":55780,\"start\":55776},{\"end\":55791,\"start\":55784},{\"end\":56069,\"start\":56065},{\"end\":56080,\"start\":56073},{\"end\":56090,\"start\":56084},{\"end\":56103,\"start\":56094},{\"end\":56113,\"start\":56107},{\"end\":56487,\"start\":56476},{\"end\":56497,\"start\":56491},{\"end\":56510,\"start\":56501},{\"end\":56520,\"start\":56514},{\"end\":56857,\"start\":56852},{\"end\":56868,\"start\":56863},{\"end\":57236,\"start\":57234},{\"end\":57248,\"start\":57242},{\"end\":57262,\"start\":57254}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":215826884},\"end\":46413,\"start\":46102},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":17515156},\"end\":46820,\"start\":46415},{\"attributes\":{\"doi\":\"arXiv:1607.08064\",\"id\":\"b2\"},\"end\":47115,\"start\":46822},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":5963738},\"end\":47452,\"start\":47117},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":873046},\"end\":47712,\"start\":47454},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":76390},\"end\":48048,\"start\":47714},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":4129821},\"end\":48432,\"start\":48050},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":4637111},\"end\":48755,\"start\":48434},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":10111903},\"end\":49114,\"start\":48757},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":15799108},\"end\":49522,\"start\":49116},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":12552176},\"end\":49972,\"start\":49524},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":2105042},\"end\":50194,\"start\":49974},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":1626192},\"end\":50483,\"start\":50196},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":9684404},\"end\":50666,\"start\":50485},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":14623491},\"end\":50975,\"start\":50668},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":14824916},\"end\":51258,\"start\":50977},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2121536},\"end\":51725,\"start\":51260},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":13613792},\"end\":51998,\"start\":51727},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":206594275},\"end\":52498,\"start\":52000},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":12351806},\"end\":52854,\"start\":52500},{\"attributes\":{\"doi\":\"arXiv:1611.00850\",\"id\":\"b20\"},\"end\":53096,\"start\":52856},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":12184146},\"end\":53498,\"start\":53098},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":7001625},\"end\":53735,\"start\":53500},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1337733},\"end\":54064,\"start\":53737},{\"attributes\":{\"id\":\"b24\"},\"end\":54210,\"start\":54066},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":11797475},\"end\":54563,\"start\":54212},{\"attributes\":{\"doi\":\"arXiv:1212.0402\",\"id\":\"b26\"},\"end\":54849,\"start\":54565},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":13438488},\"end\":55178,\"start\":54851},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":16608752},\"end\":55453,\"start\":55180},{\"attributes\":{\"doi\":\"arXiv:1601.07532\",\"id\":\"b29\"},\"end\":55720,\"start\":55455},{\"attributes\":{\"id\":\"b30\"},\"end\":55969,\"start\":55722},{\"attributes\":{\"id\":\"b31\"},\"end\":56410,\"start\":55971},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":206769904},\"end\":56764,\"start\":56412},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":2551813},\"end\":57126,\"start\":56766},{\"attributes\":{\"doi\":\"arXiv:1608.05842\",\"id\":\"b34\"},\"end\":57489,\"start\":57128}]", "bib_title": "[{\"end\":46166,\"start\":46102},{\"end\":46518,\"start\":46415},{\"end\":47184,\"start\":47117},{\"end\":47473,\"start\":47454},{\"end\":47781,\"start\":47714},{\"end\":48135,\"start\":48050},{\"end\":48494,\"start\":48434},{\"end\":48808,\"start\":48757},{\"end\":49217,\"start\":49116},{\"end\":49582,\"start\":49524},{\"end\":50051,\"start\":49974},{\"end\":50247,\"start\":50196},{\"end\":50503,\"start\":50485},{\"end\":50725,\"start\":50668},{\"end\":51021,\"start\":50977},{\"end\":51338,\"start\":51260},{\"end\":51779,\"start\":51727},{\"end\":52102,\"start\":52000},{\"end\":52558,\"start\":52500},{\"end\":53173,\"start\":53098},{\"end\":53531,\"start\":53500},{\"end\":53822,\"start\":53737},{\"end\":54278,\"start\":54212},{\"end\":54926,\"start\":54851},{\"end\":55243,\"start\":55180},{\"end\":55750,\"start\":55722},{\"end\":56061,\"start\":55971},{\"end\":56472,\"start\":56412},{\"end\":56848,\"start\":56766}]", "bib_author": "[{\"end\":46178,\"start\":46168},{\"end\":46188,\"start\":46178},{\"end\":46530,\"start\":46520},{\"end\":46539,\"start\":46530},{\"end\":46551,\"start\":46539},{\"end\":46903,\"start\":46893},{\"end\":46915,\"start\":46903},{\"end\":46927,\"start\":46915},{\"end\":47193,\"start\":47186},{\"end\":47201,\"start\":47193},{\"end\":47208,\"start\":47201},{\"end\":47485,\"start\":47475},{\"end\":47498,\"start\":47485},{\"end\":47511,\"start\":47498},{\"end\":47521,\"start\":47511},{\"end\":47791,\"start\":47783},{\"end\":47800,\"start\":47791},{\"end\":47813,\"start\":47800},{\"end\":47825,\"start\":47813},{\"end\":48145,\"start\":48137},{\"end\":48154,\"start\":48145},{\"end\":48508,\"start\":48496},{\"end\":48517,\"start\":48508},{\"end\":48530,\"start\":48517},{\"end\":48541,\"start\":48530},{\"end\":48822,\"start\":48810},{\"end\":48833,\"start\":48822},{\"end\":48848,\"start\":48833},{\"end\":48857,\"start\":48848},{\"end\":49227,\"start\":49219},{\"end\":49235,\"start\":49227},{\"end\":49599,\"start\":49584},{\"end\":49610,\"start\":49599},{\"end\":49617,\"start\":49610},{\"end\":49628,\"start\":49617},{\"end\":49640,\"start\":49628},{\"end\":49650,\"start\":49640},{\"end\":49659,\"start\":49650},{\"end\":49670,\"start\":49659},{\"end\":49678,\"start\":49670},{\"end\":50062,\"start\":50053},{\"end\":50258,\"start\":50249},{\"end\":50266,\"start\":50258},{\"end\":50514,\"start\":50505},{\"end\":50524,\"start\":50514},{\"end\":50737,\"start\":50727},{\"end\":50747,\"start\":50737},{\"end\":50755,\"start\":50747},{\"end\":51034,\"start\":51023},{\"end\":51045,\"start\":51034},{\"end\":51052,\"start\":51045},{\"end\":51062,\"start\":51052},{\"end\":51351,\"start\":51340},{\"end\":51361,\"start\":51351},{\"end\":51791,\"start\":51781},{\"end\":51799,\"start\":51791},{\"end\":51807,\"start\":51799},{\"end\":52113,\"start\":52104},{\"end\":52120,\"start\":52113},{\"end\":52131,\"start\":52120},{\"end\":52142,\"start\":52131},{\"end\":52153,\"start\":52142},{\"end\":52168,\"start\":52153},{\"end\":52176,\"start\":52168},{\"end\":52568,\"start\":52560},{\"end\":52577,\"start\":52568},{\"end\":52585,\"start\":52577},{\"end\":52923,\"start\":52913},{\"end\":52934,\"start\":52923},{\"end\":53185,\"start\":53175},{\"end\":53200,\"start\":53185},{\"end\":53213,\"start\":53200},{\"end\":53223,\"start\":53213},{\"end\":53551,\"start\":53533},{\"end\":53563,\"start\":53551},{\"end\":53833,\"start\":53824},{\"end\":53844,\"start\":53833},{\"end\":53856,\"start\":53844},{\"end\":54292,\"start\":54280},{\"end\":54305,\"start\":54292},{\"end\":54647,\"start\":54637},{\"end\":54658,\"start\":54647},{\"end\":54666,\"start\":54658},{\"end\":54940,\"start\":54928},{\"end\":54948,\"start\":54940},{\"end\":54959,\"start\":54948},{\"end\":55253,\"start\":55245},{\"end\":55262,\"start\":55253},{\"end\":55537,\"start\":55528},{\"end\":55547,\"start\":55537},{\"end\":55763,\"start\":55752},{\"end\":55772,\"start\":55763},{\"end\":55782,\"start\":55772},{\"end\":55793,\"start\":55782},{\"end\":56071,\"start\":56063},{\"end\":56082,\"start\":56071},{\"end\":56092,\"start\":56082},{\"end\":56105,\"start\":56092},{\"end\":56115,\"start\":56105},{\"end\":56489,\"start\":56474},{\"end\":56499,\"start\":56489},{\"end\":56512,\"start\":56499},{\"end\":56522,\"start\":56512},{\"end\":56859,\"start\":56850},{\"end\":56870,\"start\":56859},{\"end\":57238,\"start\":57230},{\"end\":57250,\"start\":57238},{\"end\":57264,\"start\":57250}]", "bib_venue": "[{\"end\":46249,\"start\":46188},{\"end\":46606,\"start\":46551},{\"end\":46891,\"start\":46822},{\"end\":47273,\"start\":47208},{\"end\":47572,\"start\":47521},{\"end\":47870,\"start\":47825},{\"end\":48224,\"start\":48154},{\"end\":48586,\"start\":48541},{\"end\":48922,\"start\":48857},{\"end\":49305,\"start\":49235},{\"end\":49733,\"start\":49678},{\"end\":50071,\"start\":50062},{\"end\":50331,\"start\":50266},{\"end\":50566,\"start\":50524},{\"end\":50810,\"start\":50755},{\"end\":51107,\"start\":51062},{\"end\":51449,\"start\":51361},{\"end\":51852,\"start\":51807},{\"end\":52241,\"start\":52176},{\"end\":52655,\"start\":52585},{\"end\":52911,\"start\":52856},{\"end\":53288,\"start\":53223},{\"end\":53608,\"start\":53563},{\"end\":53893,\"start\":53856},{\"end\":54131,\"start\":54066},{\"end\":54377,\"start\":54305},{\"end\":54635,\"start\":54565},{\"end\":55004,\"start\":54959},{\"end\":55307,\"start\":55262},{\"end\":55526,\"start\":55455},{\"end\":55833,\"start\":55793},{\"end\":56180,\"start\":56115},{\"end\":56577,\"start\":56522},{\"end\":56935,\"start\":56870},{\"end\":57228,\"start\":57128},{\"end\":51524,\"start\":51451}]"}}}, "year": 2023, "month": 12, "day": 17}