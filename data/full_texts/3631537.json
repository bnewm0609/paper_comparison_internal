{"id": 3631537, "updated": "2023-09-28 17:36:10.784", "metadata": {"title": "Reward Augmented Maximum Likelihood for Neural Structured Prediction", "authors": "[{\"first\":\"Mohammad\",\"last\":\"Norouzi\",\"middle\":[]},{\"first\":\"Samy\",\"last\":\"Bengio\",\"middle\":[]},{\"first\":\"Zhifeng\",\"last\":\"Chen\",\"middle\":[]},{\"first\":\"Navdeep\",\"last\":\"Jaitly\",\"middle\":[]},{\"first\":\"Mike\",\"last\":\"Schuster\",\"middle\":[]},{\"first\":\"Yonghui\",\"last\":\"Wu\",\"middle\":[]},{\"first\":\"Dale\",\"last\":\"Schuurmans\",\"middle\":[]}]", "venue": "NIPS", "journal": "1723-1731", "publication_date": {"year": 2016, "month": null, "day": null}, "abstract": "A key problem in structured output prediction is direct optimization of the task reward function that matters for test evaluation. This paper presents a simple and computationally efficient approach to incorporate task reward into a maximum likelihood framework. By establishing a link between the log-likelihood and expected reward objectives, we show that an optimal regularized expected reward is achieved when the conditional distribution of the outputs given the inputs is proportional to their exponentiated scaled rewards. Accordingly, we present a framework to smooth the predictive probability of the outputs using their corresponding rewards. We optimize the conditional log-probability of augmented outputs that are sampled proportionally to their exponentiated scaled rewards. Experiments on neural sequence to sequence models for speech recognition and machine translation show notable improvements over a maximum likelihood baseline by using reward augmented maximum likelihood (RAML), where the rewards are defined as the negative edit distance between the outputs and the ground truth labels.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1609.00150", "mag": "2963962369", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/nips/NorouziBCJSWS16", "doi": null}}, "content": {"source": {"pdf_hash": "a1e2a928d045f7907ae4319ca31deb06f109090b", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1609.00150v3.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "6758898854022c030b02e17adeba16ee728ae316", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/a1e2a928d045f7907ae4319ca31deb06f109090b.txt", "contents": "\nReward Augmented Maximum Likelihood for Neural Structured Prediction\n4 Jan 2017\n\nMohammad Norouzi mnorouzi@google.com \nSamy Bengio bengio@google.com \nZhifeng Chen zhifengc@google.com \nNavdeep Jaitly ndjaitly@google.com \nMike Schuster schuster@google.com \nYonghui Wu yonghui@google.com \nDale Schuurmans schuurmans@google.com \nGoogle Brain \nReward Augmented Maximum Likelihood for Neural Structured Prediction\n4 Jan 2017\nA key problem in structured output prediction is direct optimization of the task reward function that matters for test evaluation. This paper presents a simple and computationally efficient approach to incorporate task reward into a maximum likelihood framework. By establishing a link between the log-likelihood and expected reward objectives, we show that an optimal regularized expected reward is achieved when the conditional distribution of the outputs given the inputs is proportional to their exponentiated scaled rewards. Accordingly, we present a framework to smooth the predictive probability of the outputs using their corresponding rewards. We optimize the conditional log-probability of augmented outputs that are sampled proportionally to their exponentiated scaled rewards. Experiments on neural sequence to sequence models for speech recognition and machine translation show notable improvements over a maximum likelihood baseline by using reward augmented maximum likelihood (RAML), where the rewards are defined as the negative edit distance between the outputs and the ground truth labels.\n\nIntroduction\n\nStructured output prediction is ubiquitous in machine learning. Recent advances in natural language processing, machine translation, and speech recognition hinge on the development of better discriminative models for structured outputs and sequences. The foundations of learning structured output models were established by the seminal work on conditional random fields (CRFs) [19] and variants [20], and structured large margin methods [40,38], which demonstrate how generalization performance can be significantly improved when one considers the joint effects of the predictions across multiple output components. These models have evolved into their deep neural counterparts [35,1] through the use of recurrent neural networks (RNN) with LSTM [15] and GRU [7] cells and attention mechanisms [3].\n\nA key problem in structured output prediction has always been to enable direct optimization of the task reward (loss) used for test evaluation. For example, in machine translation one seeks better BLEU scores, and in speech recognition better word error rates. Not surprisingly, almost all task reward metrics are not differentiable, hence hard to optimize. Neural sequence models (e.g. [35,3]) optimize conditional log-likelihood, i.e. the conditional log-probability of the ground truth outputs given corresponding inputs. These models do not explicitly consider the task reward during training, hoping that conditional log-likelihood serves as a good surrogate for the task reward. Such methods make no distinction between alternative incorrect outputs: log-probability is only measured on the ground truth input-output pairs, and all alternative outputs are equally penalized through normalization, whether near or far from the ground truth target. We believe one can improve upon maximum likelihood (ML) sequence models if the difference in the rewards of alternative outputs is taken into account.\n\nStandard ML training, despite its limitations, has enabled the training of deep RNN models, leading to revolutionary advances in machine translation [35,3,24] and speech recognition [6,8,9].\n\nA key property of ML training for locally normalized RNN models is that the objective function factorizes into individual loss terms, which could be efficiently optimized using stochastic gradient descend (SGD). This training procedure does not require any form of inference or sampling from the model during training, leading to computational efficiency and ease to implementation. By contrast, almost all alternative formulations for training structure prediction models require some form of inference or sampling from the model at training time which slows down training, especially for deep RNNs (e.g. see large margin, search-based [10,47], and expected risk optimization methods).\n\nOur work is inspired by the use of reinforcement learning (RL) algorithms, such as policy gradient [45], to optimize expected task reward [29,2]. Even though expected task reward seems like a natural objective, direct policy optimization faces significant challenges: unlike ML, a stochastic gradient given a mini-batch of training examples is extremely noisy and has a high variance; gradients need to be estimated via sampling from the model, which is a non-stationary distribution; the reward is often sparse in a high-dimensional output space, which makes it difficult to find any high value predictions, preventing learning from getting off the ground; and, finally, maximizing reward does not explicitly consider the supervised labels, which seems inefficient. In fact, all previous attempts at direct policy optimization for structured output prediction have started by bootstrapping from a previously trained ML solution [29,2,32], using several heuristics and tricks to make learning stable.\n\nThis paper presents a new approach to task reward optimization that combines the computational efficiency and simplicity of ML with the conceptual advantages of expected reward maximization. Our algorithm called reward augmented maximum likelihood (RAML) simply adds a sampling step on top of the typical likelihood objective. Instead of optimizing conditional log-likelihood on training input-output pairs, given each training input, we first sample an output proportionally to its exponentiated scaled reward. Then, we optimize log-likelihood on such auxiliary output samples given corresponding inputs. When the reward for an output is defined as its similarity to a ground truth output, then the output sampling distribution is peaked at the ground truth output, and its concentration is controlled by a temperature hyper-parameter.\n\nOur theoretical analysis shows that the RAML and regularized expected reward objectives optimize a KL divergence between the exponentiated reward and model distributions, but in opposite directions. Further, we show that at non-zero temperatures, the gap between the two criteria can be expressed by a difference of variances measured on interpolating distributions. This observation reveals how entropy regularized expected reward can be estimated by sampling from exponentiated scaled rewards, rather than sampling from the model distribution.\n\nRemarkably, we find that the RAML approach achieves significantly improved results over state of the art maximum likelihood RNNs. We show consistent improvement on both speech recognition (TIMIT dataset) and machine translation (WMT'14 dataset), where output sequences are sampled according to their edit distance to the ground truth outputs. Surprisingly, we find that the best performance is achieved with output sampling distributions that shift a lot of the weight away from the ground truth outputs. In fact, in our experiments, the training algorithm rarely sees the original unperturbed outputs. Our results give further evidence that models trained with imperfect outputs and their reward values can improve upon models that are only exposed to a single ground truth output per input [14,23,42].\n\n\nReward augmented maximum likelihood\n\nGiven a dataset of input-output pairs, D \u2261 {(x (i) , y * (i) )} N i=1 , structured output models learn a parametric score function p \u03b8 (y | x), which scores different output hypotheses, y \u2208 Y. We assume that the set of possible output, Y is finite, e.g. English sentences up to a maximum length. In a probabilistic model, the score function is normalized, while in a large-margin model the score may not be normalized. In either case, once the score function is learned, given an input x, the model predicts an output y achieving maximal score,\ny(x) = argmax y p \u03b8 (y | x) .(1)\nIf this optimization is intractable, approximate inference (e.g. beam search) is used. We use a reward function r(y, y * ) to evaluate different proposed outputs against ground-truth outputs. Given a test dataset D \u2032 , one computes (x,y * )\u2208D \u2032 r( y(x), y * ) as a measure of empirical reward. Since models with larger empirical reward are preferred, ideally one hopes to maximize empirical reward during training.\n\nHowever, since empirical reward is not amenable to numerical optimization, one often considers optimizing alternative differentiable objectives. The maximum likelihood (ML) framework tries to minimize negative log-likelihood of the parameters given the data,\nL ML (\u03b8; D) = (x,y * )\u2208D \u2212 log p \u03b8 (y * | x) .(2)\nMinimizing this objective increases the conditional probability of the target outputs, log p \u03b8 (y * | x), while decreasing the conditional probability of alternative incorrect outputs. According to this objective, all negative outputs are equally wrong, and none is preferred over the others.\n\nBy contrast, reinforcement learning (RL) advocates optimizing expected reward (with a maximum entropy regularizer [46,26]), which is formulated as minimization of the following objective,\nL RL (\u03b8; \u03c4, D) = (x,y * )\u2208D \u2212 \u03c4 H (p \u03b8 (y | x)) \u2212 y\u2208Y p \u03b8 (y | x) r(y, y * ) ,(3)\nwhere r(y, y * ) denotes the reward function, e.g. negative edit distance or BLEU score, \u03c4 controls the degree of regularization, and H (p) is the entropy of a distribution p, i.e. H (p(y)) = \u2212 y\u2208Y p(y) log p(y). It is well-known that optimizing L RL (\u03b8; \u03c4 ) using SGD is challenging because of the large variance of the gradients. Below we describe how ML and RL objectives are related, and propose a hybrid between the two that combines their benefits for supervised learning.\n\nLet us define a distribution in the output space, termed the exponentiated payoff distribution, that is central in linking ML and RL objectives:\nq(y | y * ; \u03c4 ) = 1 Z(y * , \u03c4 ) exp {r(y, y * )/\u03c4 } ,(4)\nwhere Z(y * , \u03c4 ) = y\u2208Y exp {r(y, y * )/\u03c4 }. One can verify that the global minimum of L RL (\u03b8; \u03c4 ), i.e. the optimal regularized expected reward, is achieved when the model distribution matches the exponentiated payoff distribution, i.e. p \u03b8 (y | x) = q(y | y * ; \u03c4 ). To see this, we re-express the objective function in (3) in terms of a KL divergence between p \u03b8 (y | x) and q(y | y * ; \u03c4 ),\n(x,y * )\u2208D D KL (p \u03b8 (y | x) q(y | y * ; \u03c4 )) = 1 \u03c4 L RL (\u03b8; \u03c4 ) + constant ,(5)\nwhere the constant on the RHS is (x,y * )\u2208D log Z(y * , \u03c4 ). Thus, the minimum of D KL (p \u03b8 q) and L RL is achieved when p \u03b8 = q. At \u03c4 = 0, when there is no entropy regularization, the optimal p \u03b8 is a delta distribution, p \u03b8 (y | x) = \u03b4(y | y * ), where \u03b4(y | y * ) = 1 at y = y * and 0 at y = y * . Note that \u03b4(y | y * ) is equivalent to the exponentiated payoff distribution in the limit as \u03c4 \u2192 0.\n\nReturning to the log-likelihood objective, one can verify that (2) is equivalent to a KL divergence in the opposite direction between a delta distribution \u03b4(y | y * ) and the model distribution\np \u03b8 (y | x), (x,y * )\u2208D D KL (\u03b4(y | y * ) p \u03b8 (y | x)) = L ML (\u03b8) .(6)\nThere is no constant on the RHS, as the entropy of a delta distribution is zero, i.e. H (\u03b4(y | y * )) = 0.\n\nWe propose a method called reward-augmented maximum likelihood (RAML), which generalizes ML by allowing a non-zero temperature parameter in the exponentiated payoff distribution, while still optimizing the KL divergence in the ML direction. The RAML objective function takes the form,\nL RAML (\u03b8; \u03c4, D) = (x,y * )\u2208D \u2212 y\u2208Y q(y | y * ; \u03c4 ) log p \u03b8 (y | x) ,(7)\nwhich can be re-expressed in terms of a KL divergence as follows,\n(x,y * )\u2208D D KL (q(y | y * ; \u03c4 ) p \u03b8 (y | x)) = L RAML (\u03b8; \u03c4 ) + constant ,(8)\nwhere the constant is \u2212 (x,y * )\u2208D H (q(y | y * , \u03c4 )). Note that the temperature parameter, \u03c4 \u2265 0, serves as a hyper-parameter that controls the smoothness of the optimal distribution around correct targets by taking into account the reward function in the output space. The objective functions L RL (\u03b8; \u03c4 ) and L RAML (\u03b8; \u03c4 ), have the same global optimum of p \u03b8 , but they optimize a KL divergence in opposite directions. We characterize the difference between these two objectives below, showing that they are equivalent up to their first order Taylor approximations. For optimization convenience, we focus on minimizing L RAML (\u03b8; \u03c4 ) to achieve a good solution for L RL (\u03b8; \u03c4 ).\n\n\nOptimization\n\nOptimizing the reward augmented maximum likelihood (RAML) objective, L RAML (\u03b8; \u03c4 ), is straightforward if one can draw unbiased samples from q(y | y * ; \u03c4 ). We can express the gradient of L RAML in terms of an expectation over samples from q(y | y * ; \u03c4 ),\n\u2207 \u03b8 L RAML (\u03b8; \u03c4 ) = E q(y|y * ;\u03c4 ) \u2212 \u2207 \u03b8 log p \u03b8 (y | x) .(9)\nThus, to estimate \u2207 \u03b8 L RAML (\u03b8; \u03c4 ) given a mini-batch of examples for SGD, one draws y samples given mini-batch y * 's and then optimizes log-likelihood on such samples by following the mean gradient. At a temperature \u03c4 = 0, this reduces to always sampling y * , hence ML training with no sampling.\n\nBy contrast, the gradient of L RL (\u03b8; \u03c4 ), based on likelihood ratio methods, takes the form,\n\u2207 \u03b8 L RL (\u03b8; \u03c4 ) = E p \u03b8 (y|x) \u2212 \u2207 \u03b8 log p \u03b8 (y | x) \u00b7 r(y, y * ) .(10)\nThere are several critical differences between (9) and (10) that make SGD optimization of L RAML (\u03b8; \u03c4 ) more desirable. First, in (9), one has to sample from a stationary distribution, the so called exponentiated payoff distribution, whereas in (10) one has to sample from the model distribution as it is evolving. Not only does sampling from the model potentially slow down training, one also needs to employ several tricks to get a better estimate of the gradient of L RL [29]. A body of literature in reinforcement learning focuses on reducing the variance of (10) by using sophisticated techniques such as actor-critique methods [36,11]. Further, the reward is often sparse in a highdimensional output space, which makes finding any reasonable prediction challenging when (10) is used to refine a randomly initialized model. Thus, smart model initialization is needed. By contrast, we initialize the models randomly and refine them using (9).\n\n\nSampling from the exponentiated payoff distribution\n\nTo compute the gradient of the model using the RAML approach, one needs to sample auxiliary outputs from the exponentiated payoff distribution, q(y | y * ; \u03c4 ). This sampling is the price that we have to pay to learn with rewards. One should contrast this with loss-augmented inference in structured large margin methods, and sampling from the model in RL. We believe sampling outputs proportional to exponentiated rewards is more efficient and effective in many cases.\n\nExperiments in this paper use reward values defined by either negative Hamming distance or negative edit distance. We sample from q(y | y * ; \u03c4 ) by stratified sampling, where we first select a particular distance, and then sample an output with that distance value. Here we focus on edit distance sampling, as Hamming distance sampling is a simpler special case. Given a sentence y * of length m, we count the number of sentences within an edit distance e, where e \u2208 {0, . . . , 2m}. Then, we reweight the counts by exp{\u2212e/\u03c4 } and normalize. Let c(e, m) denote the number of sentences at an edit distance e from a sentence of length m. First, note that a deletion can be thought as a substitution with a nil token. This works out nicely because given a vocabulary of length v, for each insertion we have v options, and for each substitution we have v \n\nwhere s enumerates over the number of substitutions. Once s tokens are substituted, then those s positions lose their significance, and the insertions before and after such tokens could be merged.\n\nHence, given s substitutions, there are really m \u2212 s reference positions for e \u2212 s possible insertions. Finally, one can sample according to BLEU score or other sequence metrics by importance sampling where the proposal distribution could be edit distance sampling above.\n\n\nRAML analysis\n\nIn the RAML framework, we find the model parameters by minimizing the objective (7) instead of optimizing the RL objective, i.e. regularized expected reward in (3). The difference lies in minimizing D KL (q(y | y * ; \u03c4 ) p \u03b8 (y | x)) instead of D KL (p \u03b8 (y | x) q(y | y * ; \u03c4 )). For convenience, let's refer to q(y | y * ; \u03c4 ) as q, and p \u03b8 (y | x) as p. Here, we characterize the difference between the two divergences, D KL (q p) \u2212 D KL (p q), and use this analysis to motivate the RAML approach.\n\nWe will initially consider the KL divergence in its more general form as a Bregman divergence, which will make some of the key properties clearer. A Bregman divergence is defined by a strictly convex, differentiable, closed potential function F : F \u2192 R [4]. Given F and two points p, q \u2208 F , the corresponding Bregman divergence D F : F \u00d7 F \u2192 R + is defined by\nD F (p q) = F (p) \u2212 F (q) \u2212 (p \u2212 q) T \u2207F (q) ,(12)\nthe difference between the strictly convex potential at p and its first order Taylor approximation expanded about q. Clearly this definition is not symmetric between p and q. By the strict convexity of F it follows that D F (p q) \u2265 0 with D F (p q) = 0 if and only if p = q. To characterize the difference between opposite Bregman divergences, we provide a simple result that relates the two directions under suitable conditions. Let H F denote the Hessian of F . Proposition 1. For any twice differentiable strictly convex closed potential F , and p, q \u2208 int(F ):\nD F (q p) = D F (p q) + 1 4 (p \u2212 q) T H F (a) \u2212 H F (b) (p \u2212 q)(13)for some a = (1 \u2212 \u03b1)p + \u03b1q, (0 \u2264 \u03b1 \u2264 1 2 ), b = (1 \u2212 \u03b2)q + \u03b2p, (0 \u2264 \u03b2 \u2264 1 2 ). (see Appendix A) For probability vectors p, q \u2208 \u2206 |Y| and a potential F (p) = \u2212\u03c4 H (p), D F (p q) = \u03c4 D KL (p q).\nLet f * : R |Y| \u2192 \u2206 |Y| denote a normalized exponential operator that takes a real-valued logit vector and turns it into a probability vector. Let r and s denote real-valued logit vectors such that q = f * (r/\u03c4 ) and p = f * (s/\u03c4 ). Below, we characterize the gap between D KL (p(y) q(y)) and D KL (q(y) p(y)) in terms of the difference between s(y) and r(y).\n\n\nProposition 2.\n\nThe KL divergence between p and q in two directions can be expressed as,\nD KL (p q) = D KL (q p) + 1 4\u03c4 2 Var y\u223cf * (a/\u03c4 ) [s(y) \u2212 r(y)] \u2212 1 4\u03c4 2 Var y\u223cf * (b/\u03c4 ) [s(y) \u2212 r(y)] < D KL (q p) + 1 \u03c4 2 s \u2212 r 2 2 , for some a = (1 \u2212 \u03b1)s + \u03b1r, (0 \u2264 \u03b1 \u2264 1 2 ), b = (1 \u2212 \u03b2)r + \u03b2s, (0 \u2264 \u03b2 \u2264 1 2 )\n. (see Appendix A) Given Proposition 2, one can relate the two objectives, L RL (\u03b8; \u03c4 ) (5) and L RAML (\u03b8; \u03c4 ) (8), by\nL RL = \u03c4 L RAML + 1 4\u03c4 (x,y * )\u2208D Var y\u223cf * (a/\u03c4 ) [s(y) \u2212 r(y)] \u2212 Var y\u223cf * (b/\u03c4 ) [s(y) \u2212 r(y)] ,(14)\nwhere s(y) denotes \u03c4 -scaled logits predicted by the model such that p \u03b8 (y | x) = f * (s(y)/\u03c4 ), and r(y) = r(y, y * ). The gap between regularized expected reward (5) and \u03c4 -scaled RAML criterion (8) is simply a difference of two variances, whose magnitude decreases with increasing regularization. Proposition 2 also shows an opportunity for learning algorithms: if \u03c4 is chosen so that q = f * (r/\u03c4 ), then f * (a/\u03c4 ) and f * (b/\u03c4 ) have lower variance than p (which can always be achieved for sufficiently small \u03c4 provided p is not deterministic), then the expected regularized reward under p, and its gradient for training, can be exactly estimated, in principle, by including the extra variance terms and sampling from more focused distributions than p. Although we have not yet incorporated approximations to the additional variance terms into RAML, this is an interesting research direction.\n\n\nRelated Work\n\nThe literature on structure output prediction is vast, falling into three broad categories: (a) supervised learning approaches that ignore task reward and use supervision; (b) reinforcement learning approaches that use only task reward and ignore supervision; and (c) hybrid approaches that attempt to exploit both supervision and task reward. This paper clearly falls in category (c).\n\nWork in category (a) includes classical conditional random fields [19] and conditional log-likelihood training of RNNs [35,3]. It also includes the approaches that attempt to perturb the training inputs and supervised training structures to improves the robustness (and hopefully the generalization) of the conditional models (e.g. see [5,18,34]). These approaches offer improvements to standard maximum likelihood estimation, but they are fundamentally limited by not incorporating a task reward. The DAGGER method [30] also focuses on using supervision only, but can be extended to use a task loss; even then, the DAGGER assumes that an expert is available to label every alternative sequence, which does not fit the usual structured prediction scenario.\n\nBy contrast, work in category (b) includes reinforcement learning approaches that only consider task reward and do not use any other supervision. Beyond the traditional reinforcement learning approaches, such as policy gradient [45,37], and actor-critic [36], Q-learning [41], this category includes SEARN [10]. There is some relationship to the work presented here and work on relative entropy policy search [27], and policy optimization via expectation maximization [43] and KLdivergence [16,39], however none of these bridge the gap between the two directions of the KLdivergence, nor do they consider any supervision data as we do here.\n\nThere is also a substantial body of related work in category (c), which considers how to exploit supervision information while training with a task reward metric. A canonical example is large margin structured prediction [38,40,13], which explicitly uses supervision and considers an upper bound surrogate for task loss. This approach requires loss augmented inference that cannot be efficiently achieved for general task losses. We are not aware of successful large-margin methods for neural sequence prediction, but a related approach by [47] for neural machine translation builds on SEARN [10]. Some form of inference during training is still needed, and the characteristics of the objective are not well studied. We also mentioned the work on maximizing task reward by bootstrapping from a maximum likelihood policy [29,32], but such an approach only makes limited use of supervision. Some work in robotics has considered exploiting supervision as a means to provide indirect sampling guidance to improve policy search methods that maximize task reward [21,22,31], but these approaches do not make use of maximum likelihood training. An interesting work is [17] which explicitly incorporates supervision in the policy evaluation phase of a policy iteration procedure that otherwise seeks to maximize task reward. However, this approach only considers a greedy policy form that does not lend itself to being represented as a deep RNN, and has not been applied to structured output prediction. Most relevant are ideas for improving approximate maximum likelihood training for intractable models by passing the gradient calculation through an approximate inference procedure [12,33]. These works, however, are specialized to particular approximate inference procedures, and, by directly targeting expected reward, are subject to the variance problems that motivated this work.\n\nOne advantage of the RAML framework is its computational efficiency at training time. By contrast, RL and scheduled sampling [5] require sampling from the model, which can slow down the gradient computation by 2\u00d7. Structural SVM requires loss-augmented inference which is often more expensive than sampling from the model. Our framework only requires sampling from a fixed exponentated payoff distribution, which can be thought as a form of input pre-processing. This preprocessing can be parallelized by model training by having a thread handling loading the data and augmentation.\n\nRecently, we were informed of the unpublished work of Volkovs et al. [44] that also proposes an objective like RAML, albeit with a different derivation. No theoretical relation was established to entropy regularized RL, nor was the method applied to neural nets for sequences, but large gains were reported over several baselines applying the technique to ranking problems with CRFs.\n\n\nExperiments\n\nWe compare our approach, reward augmented maximum likelihood (RAML), with standard maximum likelihood (ML) training on sequence prediction tasks using state-of-the-art attention-based recurrent neural networks [35,3]. Our experiments demonstrate that the RAML approach considerably outperforms ML baseline on both speech recognition and machine translation tasks. \n\n\nSpeech recognition\n\nFor experiments on speech recognition, we use the TIMIT dataset; a standard benchmark for clean phone recognition. This dataset consists of recordings from different speakers reading ten phonetically rich sentences covering major dialects of American English. We use the standard train / dev / test splits suggested by the Kaldi toolkit [28].\n\nAs the sequence prediction model, we use an attention-based encoder-decoder recurrent model of [6] with three 256-dimensional LSTM layers for encoding and one 256-dimensional LSTM layer for decoding. We do not modify the neural network architecture or its gradient computation in any way, but we only change the output targets fed into the network for gradient computation and SGD update. The input to the network is a standard sequence of 123-dimensional log-mel filter response statistics. Given each input, we generate new outputs around ground truth targets by sampling according to the exponentiated payoff distribution. We use negative edit distance as the measure of reward. Our output augmentation process allows insertions, deletions, and substitutions.\n\nAn important hyper-parameter in our framework is the temperature parameter, \u03c4 , controlling the degree of output augmentation. We investigate the impact of this hyper-parameter and report results for \u03c4 selected from a candidate set of \u03c4 \u2208 {0.6, 0.65, 0.7, 0.75, 0.8, 0.85, 0.9, 0.95, 1.0}. At a temperature of \u03c4 = 0, outputs are not augmented at all, but as \u03c4 increases, more augmentation is generated. Figure 1 depicts the fraction of different numbers of edits applied to a sequence of length 20 for different values of \u03c4 . These edits typically include very small number of deletions, and roughly equal number of insertions and substitutions. For insertions and substitutions we uniformly sample elements from a vocabulary of 61 phones. According to Figure 1, at \u03c4 = 0.6, more than 60% of the outputs remain intact, while at \u03c4 = 0.9, almost all target outputs are being augmented with 5 to 9 edits being sampled with a probability larger than 0.1. We note that the augmentation becomes more severe as the outputs get longer.\n\nThe phone error rates (PER) on both dev and test sets for different values of \u03c4 and the ML baseline are reported in Table 1. Each model is trained and tested 4 times, using different random seeds.\n\nIn Table 1, we report average PER across the runs, and in parenthesis the difference of average error to minimum and maximum error. We observe that a temperature of \u03c4 = 0.9 provides the best results, outperforming the ML baseline by 2.9% PER on the dev set and 2.3% PER on the test set. The results consistently improve when the temperature increases from 0.6 to 0.9, and they get worse beyond \u03c4 = 0.9. It is surprising to us that not only the model trains with such a large amount of augmentation at \u03c4 = 0.9, but also it significantly improves upon the baseline. Finally, we note that previous work [8,9] suggests several refinements to improve sequence to sequence models on TIMIT by adding noise to the weights and using more focused forward-moving attention mechanism. While these refinements are interesting and they could be combined with the RAML framework, in this work, we do not implement such refinements, and focus specifically on a fair comparison between the ML baseline and the RAML method.\n\n\nMachine translation\n\nWe evaluate the effectiveness of the proposed approach on WMT'14 English to French machine translation benchmark. Translation quality is assessed using tokenized BLEU score, to be consistent with previous work on neural machine translation [35,3,25]. Models are trained on the full 36M   For each sentece we sample a single output at each step. One can consider insertions and deletions or sampling according to exponentiated sentence BLEU scores, but we leave that to future work.\n\nAs the conditional sequence prediction model, we use an attention-based encoder-decoder recurrent neural network similar to [3], but we use multi-layer encoder and decoder networks consisting of three layers of 1024 LSTM cells. As suggested by [3], for computing the softmax attention vectors, we use a feedforward neural network with 1024 hidden units, which operates on the last encoder and the first decoder layers. In all of the experiments, we keep the network architecture and the hyper-parameters fixed. All of the models achieve their peak performance after about 4 epochs of training, once we anneal the learning rates. To reduce the noise in the BLEU score evaluation, we report both peak BLEU score and BLEU score averaged among about 70 evaluations of the model while doing the fifth epoch of training. We perform beam search decoding with a beam size of 8. Table 2 summarizes our experimental results on WMT'14. We note that our ML translation baseline is quite strong, if not the best among neural machine translation models [35,3,25], achieving very competitive performance for a single model. Even given such a strong baseline, the RAML approach consistently improves the results. Our best model with a temperature \u03c4 = 0.85 improves average BLEU by 0.4, and best BLEU by 0.35 points, which is a considerable improvement. Again we observe that as we increase the amount of augmentation from \u03c4 = 0.75 to \u03c4 = 0.85 the results consistently get better, and then they start to get worse with more augmentation.\n\n\nDetails.\n\nWe train the models using asynchronous SGD with 12 replicas without momentum. We use mini-batches of size 128. We initially use a learning rate of 0.5, which we then exponentially decay to 0.05 after 800K steps. We keep evaluating the models between 1.1 and 1.3 million steps and report average and peak BLEU scores in Table 2. We use a vocabulary 200K words for the source language and 80K for the target language. We only consider training sentences that are up to 80 tokens. We replace rare words with several UNK tokens based on their first and last characters. At inference time, we replace UNK tokens in the output sentences by copying source words according to largest attention activations as suggested by [25].\n\n\nConclusion\n\nWe present a learning algorithm for structured output prediction that generalizes maximum likelihood training by enabling direct optimization of a task reward metric. Our method is computationally efficient and simple to implement. It only requires augmentation of the output targets used within a log-likelihood objective. We show how using augmented outputs sampled according to edit distance improves a maximum likelihood baseline by a considerable margin, on both machine translation and speech recognition tasks. We believe this framework is applicable to a wide range of probabilistic models with arbitrary reward functions. In the future, we intend to explore the applicability of this framework to other probabilistic models on tasks with more complicated evaluation metrics.\n\nA Proofs Proposition 1. For any twice differentiable strictly convex closed potential F , and p, q \u2208 int(F):\n\nDF (q p) = DF (p q) + 1 4 (p \u2212 q) T HF (a) \u2212 HF (b) (p \u2212 q) (15) for some a = (1 \u2212 \u03b1)p + \u03b1q, (0 \u2264 \u03b1 \u2264 1 2 ), b = (1 \u2212 \u03b2)q + \u03b2p, (0 \u2264 \u03b2 \u2264 1 2 ).\n\nProof. Let f (p) denote \u2207F (p) and consider the midpoint q+p 2 . One can express F ( q+p 2 ) by two Taylor expansions around p and q. By Taylor's theorem there is an a = (1 \u2212 \u03b1)p + \u03b1q for 0 \u2264 \u03b1 \u2264 1 2 and b = \u03b2p\n+ (1 \u2212 \u03b2)q for 0 \u2264 \u03b2 \u2264 1 2 such that F ( q+p 2 ) = F (p) + ( q+p 2 \u2212 p) \u22a4 f (p) + 1 2 ( q+p 2 \u2212 p) \u22a4 HF (a)( q+p 2 \u2212 p)(16)= F (q) + ( q+p 2 \u2212 q) \u22a4 f (q) + 1 2 ( q+p 2 \u2212 q) \u22a4 HF (b)( q+p 2 \u2212 q),(17)\nhence, 2F ( q+p 2 ) = 2F (p) + (q \u2212 p) \u22a4 f (p) + 1 4 (q \u2212 p) \u22a4 HF (a)(q \u2212 p)\n\n= 2F (q) + (p \u2212 q) \u22a4 f (q) + 1 4 (p \u2212 q) \u22a4 HF (b)(p \u2212 q).\n\nTherefore,\nF (p) + F (q) \u2212 2F ( q+p 2 ) = F (p) \u2212 F (q) \u2212 (p \u2212 q) \u22a4 f (q) \u2212 1 4 (p \u2212 q) \u22a4 HF (b)(p \u2212 q)(20)\n= F (q) \u2212 F (p) \u2212 (q \u2212 p) \u22a4 f (p) \u2212 1 4 (q \u2212 p) \u22a4 HF (a)(q \u2212 p)\n\n= DF (p q) \u2212 1 4 (p \u2212 q) \u22a4 HF (b)(p \u2212 q)\n\n= DF (q p) \u2212 1 4 (q \u2212 p) \u22a4 HF (a)(q \u2212 p),\n\nleading to the result.\n\nFor the proof of Proposition 2, we first need to introduce a few definitions and background results. A Bregman divergence is defined from a strictly convex, differentiable, closed potential function F : F \u2192 R, whose strictly convex conjugate F * : F * \u2192 R is given by F * (r) = sup r\u2208F r, q \u2212 F (q) [4]. Each of these potential functions have corresponding transfers, f : F \u2192 F * and f * : F * \u2192 F, given by the respective gradient maps f = \u2207F and f * = \u2207F * . A key property is that f * = f \u22121 [4], which allows one to associate each object q \u2208 F with its transferred image r = f (q) \u2208 F * and vice versa. The main property of Bregman divergences we exploit is that a divergence between any two domain objects can always be equivalently expressed as a divergence between their transferred images; that is, for any p \u2208 F and q \u2208 F, one has [4]: DF (p q) = F (p) \u2212 p, r + F * (r) = DF * (r s) , (24) DF (q p) = F * (s) \u2212 s, q + F (q) = DF * (s r) , (25) where s = f (p) and r = f (q). These relations also hold if we instead chose s \u2208 F * and r \u2208 F * in the range space, and used p = f * (s) and q = f * (r). In general (24) and (25) are not equal.\n\nTwo special cases of the potential functions F and F * are interesting as they give rise to KL divergences. These two cases include F\u03c4 (p) = \u2212\u03c4 H (p) and F * \u03c4 (s) = \u03c4 lse(s/\u03c4 ) = \u03c4 log y exp (s(y)/\u03c4 ), where lse(\u00b7) denotes the log-sum-exp operator. The respective gradient maps are f\u03c4 (p) = \u03c4 (log(p) + 1) and f * \u03c4 (s) = f * (s/\u03c4 ) =\n\n\n\u2212 1 options, but including the nil token, there are v options for substitutions too. When e = 1, there are m possible substitutions and m + 1 insertions. Hence, in total there are (2m + 1)v sentences at an edit distance of 1. Note, that exact computation of c(e, m) is difficult if we consider all edge cases, for example when there are repetitive words in y * , but ignoring such edge cases we can come up with approximate counts that are reliable for sampling. When e > 1, we estimate c(e, m) by c(e, m) = m s=0 m s m + e \u2212 2s e \u2212 s v e ,\n\nFigure 1 :\n1Fraction of different number of edits applied to a sequence of length 20 for different \u03c4 . At \u03c4 = 0.9, augmentations with 5 to 9 edits are sampled with a probability > 0.1. [view in color]\n\n. 2 ,\n2+0.1) 19.97 (\u22120.1, +0.2) RAML, \u03c4 = 0.85 18.10 (\u22120.4, +0.3) 19.97 (\u22120.3, +0.2) RAML, \u03c4 = 0.90 18.00 (\u22120.4, +0.3) 19.89 (\u22120.4, +0.7) RAML, \u03c4 = 0.95 18.46 (\u22120.1, +0.1) 20.12 (\u22120.2, +0.1) RAML, \u03c4 = 1.00 18.78 (\u22120.6, +0.8) 20.41 (\u22120.2, +0.5)\n\nTable 1 :\n1Phone error rates (PER) for different methods on TIMIT dev and test sets. Average PER \nof 4 independent training runs is reported. \n\nMethod \nAverage BLEU Best BLEU \nML baseline \n36.50 \n36.87 \nRAML, \u03c4 = 0.75 \n36.62 \n36.91 \nRAML, \u03c4 = 0.80 \n36.80 \n37.11 \nRAML, \u03c4 = 0.85 \n36.91 \n37.23 \nRAML, \u03c4 = 0.90 \n36.69 \n37.07 \nRAML, \u03c4 = 0.95 \n36.57 \n36.94 \n\n\n\nTable 2 :\n2Tokenized BLEU score on WMT'14 English to French evaluated on newstest-2014 set. The RAML approach with different \u03c4 considerably improves upon the maximum likelihood baseline.sentence pairs from WMT'14 training set, and evaluated on 3003 sentence pairs from newstest-2014 \ntest set. To keep the sampling process efficient and simple on such a large corpus, we augment the \noutput sentences only based on Hamming distance (i.e. edit distance without insertion or deletion). \n\nAcknowledgmentWe thank Dan Abolafia, Sergey Levine, Cinjon Resnick, Yujia Li, Ben Poole, and the Google Brain team for insightful comments and discussions.1 y exp(s(y)/\u03c4 ) exp(s/\u03c4 ), where f * \u03c4 denotes the normalized exponential operator for 1 \u03c4 -scaled logits. Below, we derive DF * \u03c4 (r s) for such F * \u03c4 :Proposition 2. The KL divergence between p and q in two directions can be expressed as,Proof. First, for the potential function F * \u03c4 (r) = \u03c4 lse(r/\u03c4 ) it is easy to verify that F * \u03c4 satisfies the conditions for Proposition 1, andwhere Diag(v) returns a square matrix the main diagonal of which comprises a vector v. Therefore, by Proposition 1 we obtainfor some a = (1 \u2212 \u03b1)s + \u03b1r, (0 \u2264 \u03b1 \u2264 1 2 ), b = (1 \u2212 \u03b2)r + \u03b2s, (0 \u2264 \u03b2 \u2264 1 2 ). Note that by the specific form(29)we also haveandTherefore, by combining(33)and(34)Equality(27)then follows by applying(26)to(35).Next, to prove the inequality in(28), let \u03b4 = s \u2212 r and observe thatsince f * \u03c4 (a) \u2212 f * \u03c4 (b) \u221e \u2264 2 and f * \u03c4 (b) 2 2 \u2264 f * \u03c4 (b) 2 1 \u2264 1. The result follows by applying(26)to(39).\nD Andor, C Alberti, D Weiss, A Severyn, A Presta, K Ganchev, S Petrov, M Collins, arXiv:1603.06042Globally normalized transition-based neural networks. D. Andor, C. Alberti, D. Weiss, A. Severyn, A. Presta, K. Ganchev, S. Petrov, and M. Collins. Globally normalized transition-based neural networks. arXiv:1603.06042, 2016.\n\nAn actor-critic algorithm for sequence prediction. D Bahdanau, P Brakel, K Xu, A Goyal, R Lowe, J Pineau, A Courville, Y Bengio, arXiv:1607.07086D. Bahdanau, P. Brakel, K. Xu, A. Goyal, R. Lowe, J. Pineau, A. Courville, and Y. Bengio. An actor-critic algorithm for sequence prediction. arXiv:1607.07086, 2016.\n\nNeural machine translation by jointly learning to align and translate. D Bahdanau, K Cho, Y Bengio, ICLRD. Bahdanau, K. Cho, and Y. Bengio. Neural machine translation by jointly learning to align and translate. ICLR, 2015.\n\nClustering with Bregman divergences. A Banerjee, S Merugu, I S Dhillon, J Ghosh, JMLRA. Banerjee, S. Merugu, I. S. Dhillon, and J. Ghosh. Clustering with Bregman divergences. JMLR, 2005.\n\nScheduled sampling for sequence prediction with recurrent neural networks. S Bengio, O Vinyals, N Jaitly, N M Shazeer, NIPS. S. Bengio, O. Vinyals, N. Jaitly, and N. M. Shazeer. Scheduled sampling for sequence prediction with recurrent neural networks. NIPS, 2015.\n\nListen, attend and spell. W Chan, N Jaitly, Q V Le, O Vinyals, ICASSP. W. Chan, N. Jaitly, Q. V. Le, and O. Vinyals. Listen, attend and spell. ICASSP, 2016.\n\nLearning phrase representations using rnn encoder-decoder for statistical machine translation. K Cho, B Van Merri\u00ebnboer, C Gulcehre, D Bahdanau, F Bougares, H Schwenk, Y Bengio, EMNLP. K. Cho, B. Van Merri\u00ebnboer, C. Gulcehre, D. Bahdanau, F. Bougares, H. Schwenk, and Y. Bengio. Learn- ing phrase representations using rnn encoder-decoder for statistical machine translation. EMNLP, 2014.\n\nEnd-to-end continuous speech recognition using attention-based recurrent nn: first results. J Chorowski, D Bahdanau, K Cho, Y Bengio, arXiv:1412.1602J. Chorowski, D. Bahdanau, K. Cho, and Y. Bengio. End-to-end continuous speech recognition using attention-based recurrent nn: first results. arXiv:1412.1602, 2014.\n\nAttention-based models for speech recognition. J K Chorowski, D Bahdanau, D Serdyuk, K Cho, Y Bengio, NIPS. J. K. Chorowski, D. Bahdanau, D. Serdyuk, K. Cho, and Y. Bengio. Attention-based models for speech recognition. NIPS, 2015.\n\nSearch-based structured prediction. H Daum\u00e9, J Iii, D Langford, Marcu, Mach. Learn. J. H. Daum\u00e9, III, J. Langford, and D. Marcu. Search-based structured prediction. Mach. Learn. J., 2009.\n\nModel-free reinforcement learning with continuous action in practice. T Degris, P M Pilarski, R S Sutton, ACCT. Degris, P. M. Pilarski, and R. S. Sutton. Model-free reinforcement learning with continuous action in practice. ACC, 2012.\n\nGeneric methods for optimization-based modeling. J Domke, AISTATSJ. Domke. Generic methods for optimization-based modeling. AISTATS, 2012.\n\nSoftmax-margin crfs: Training log-linear models with cost functions. K Gimpel, N A Smith, NAACLK. Gimpel and N. A. Smith. Softmax-margin crfs: Training log-linear models with cost functions. NAACL, 2010.\n\nG Hinton, O Vinyals, J Dean, arXiv:1503.02531Distilling the knowledge in a neural network. G. Hinton, O. Vinyals, and J. Dean. Distilling the knowledge in a neural network. arXiv:1503.02531, 2015.\n\nLong short-term memory. S Hochreiter, J Schmidhuber, Neural Computation. S. Hochreiter and J. Schmidhuber. Long short-term memory. Neural Computation, 1997.\n\nOptimal control as a graphical model inference problem. H J Kappen, V G\u00f3mez, M Opper, Mach. Learn. J. H. J. Kappen, V. G\u00f3mez, and M. Opper. Optimal control as a graphical model inference problem. Mach. Learn. J., 2012.\n\nLearning from limited demonstrations. B Kim, A M Farahmand, J Pineau, D Precup, NIPS. B. Kim, A. M. Farahmand, J. Pineau, and D. Precup. Learning from limited demonstrations. NIPS, 2013.\n\nAsk me anything: Dynamic memory networks for natural language processing. A Kumar, O Irsoy, J Su, J Bradbury, R English, B Pierce, P Ondruska, I Gulrajani, R Socher, ICMLA. Kumar, O. Irsoy, J. Su, J. Bradbury, R. English, B. Pierce, P. Ondruska, I. Gulrajani, and R. Socher. Ask me anything: Dynamic memory networks for natural language processing. ICML, 2016.\n\nConditional Random Fields: Probabilistic models for segmenting and labeling sequence data. J D Lafferty, A Mccallum, F C N Pereira, J. D. Lafferty, A. McCallum, and F. C. N. Pereira. Conditional Random Fields: Probabilistic models for segmenting and labeling sequence data. ICML, 2001.\n\nGradient based learning applied to document recognition. Y Lecun, L Bottou, Y Bengio, P Haffner, Proceedings of IEEE. IEEEY. LeCun, L. Bottou, Y. Bengio, and P. Haffner. Gradient based learning applied to document recognition. Proceedings of IEEE, 1998.\n\nS Levine, V Koltun, Guided policy search. ICML. S. Levine and V. Koltun. Guided policy search. ICML, 2013.\n\nVariational policy search via trajectory optimization. S Levine, V Koltun, NIPS. S. Levine and V. Koltun. Variational policy search via trajectory optimization. NIPS, 2013.\n\nUnifying distillation and privileged information. ICLR. D Lopez-Paz, B Sch\u00f6lkopf, L Bottou, V Vapnik, D. Lopez-Paz, B. Sch\u00f6lkopf, L. Bottou, and V. Vapnik. Unifying distillation and privileged information. ICLR, 2016.\n\nEffective approaches to attention-based neural machine translation. M.-T Luong, H Pham, C D Manning, EMNLP. M.-T. Luong, H. Pham, and C. D. Manning. Effective approaches to attention-based neural machine translation. EMNLP, 2015.\n\nAddressing the rare word problem in neural machine translation. M.-T Luong, I Sutskever, Q V Le, O Vinyals, W Zaremba, ACLM.-T. Luong, I. Sutskever, Q. V. Le, O. Vinyals, and W. Zaremba. Addressing the rare word problem in neural machine translation. ACL, 2015.\n\nV Mnih, A P Badia, M Mirza, A Graves, T P Lillicrap, T Harley, D Silver, K Kavukcuoglu, Asynchronous methods for deep reinforcement learning. ICML. V. Mnih, A. P. Badia, M. Mirza, A. Graves, T. P. Lillicrap, T. Harley, D. Silver, and K. Kavukcuoglu. Asynchronous methods for deep reinforcement learning. ICML, 2016.\n\nRelative entropy policy search. J Peters, K M\u00fclling, Y Alt\u00fcn, AAAIJ. Peters, K. M\u00fclling, and Y. Alt\u00fcn. Relative entropy policy search. AAAI, 2010.\n\nThe kaldi speech recognition toolkit. D Povey, A Ghoshal, G Boulianne, ASRUD. Povey, A. Ghoshal, G. Boulianne, et al. The kaldi speech recognition toolkit. ASRU, 2011.\n\nM Ranzato, S Chopra, M Auli, W Zaremba, Sequence level training with recurrent neural networks. ICLR. M. Ranzato, S. Chopra, M. Auli, and W. Zaremba. Sequence level training with recurrent neural networks. ICLR, 2016.\n\nA Reduction of Imitation Learning and Structured Prediction to No-Regret Online Learning. S Ross, G J Gordon, J A Bagnell, AISTATSS. Ross, G. J. Gordon, and J. A. Bagnell. A Reduction of Imitation Learning and Structured Prediction to No-Regret Online Learning. AISTATS, 2010.\n\nMinimum risk training for neural machine translation. S Shen, Y Cheng, Z He, W He, H Wu, M Sun, Y Liu, ACLS. Shen, Y. Cheng, Z. He, W. He, H. Wu, M. Sun, and Y. Liu. Minimum risk training for neural machine translation. ACL, 2016.\n\nMastering the game of Go with deep neural networks and tree search. D Silver, Nature. D. Silver et al. Mastering the game of Go with deep neural networks and tree search. Nature, 2016.\n\nEmpirical risk minimization of graphical model parameters given approximate inference, decoding, and model structure. V Stoyanov, A Ropson, J Eisner, AISTATSV. Stoyanov, A. Ropson, and J. Eisner. Empirical risk minimization of graphical model parameters given approximate inference, decoding, and model structure. AISTATS, 2011.\n\nLearning dynamic feature selection for fast sequential prediction. E Strubell, L Vilnis, K Silverstein, A Mccallum, ACLE. Strubell, L. Vilnis, K. Silverstein, and A. McCallum. Learning dynamic feature selection for fast sequential prediction. ACL, 2015.\n\nI Sutskever, O Vinyals, Q V Le, Sequence to sequence learning with neural networks. NIPS. I. Sutskever, O. Vinyals, and Q. V. Le. Sequence to sequence learning with neural networks. NIPS, 2014.\n\nReinforcement Learning: An Introduction. R S Sutton, A G Barto, MIT PressR. S. Sutton and A. G. Barto. Reinforcement Learning: An Introduction. MIT Press, 1998.\n\nPolicy gradient methods for reinforcement learning with function approximation. R S Sutton, D A Mcallester, S P Singh, Y Mansour, R. S. Sutton, D. A. McAllester, S. P. Singh, and Y. Mansour. Policy gradient methods for reinforcement learning with function approximation. NIPS, 2000.\n\nMax-margin markov networks. B Taskar, C Guestrin, D Koller, NIPS. B. Taskar, C. Guestrin, and D. Koller. Max-margin markov networks. NIPS, 2004.\n\nLinearly-solvable markov decision problems. NIPS. E Todorov, E. Todorov. Linearly-solvable markov decision problems. NIPS, 2006.\n\nLarge margin methods for structured and interdependent output variables. I Tsochantaridis, T Joachims, T Hofmann, Y Altun, JMLRI. Tsochantaridis, T. Joachims, T. Hofmann, and Y. Altun. Large margin methods for structured and interdependent output variables. JMLR, 2005.\n\nH Van Hasselt, A Guez, D Silver, arXiv:1509.06461Deep reinforcement learning with double q-learning. H. van Hasselt, A. Guez, and D. Silver. Deep reinforcement learning with double q-learning. arXiv:1509.06461, 2015.\n\nLearning using privileged information: Similarity control and knowledge transfer. V Vapnik, R Izmailov, JMLR. V. Vapnik and R. Izmailov. Learning using privileged information: Similarity control and knowledge transfer. JMLR, 2015.\n\nLearning model-free robot control by a Monte Carlo EM algorithm. N Vlassis, M Toussaint, G Kontes, S Piperidis, Autonomous Robots. N. Vlassis, M. Toussaint, G. Kontes, and S. Piperidis. Learning model-free robot control by a Monte Carlo EM algorithm. Autonomous Robots, 2009.\n\nM Volkovs, H Larochelle, R Zemel, arXiv:1107.1805v1Loss-sensitive training of probabilistic conditional random fields. M. Volkovs, H. Larochelle, and R. Zemel. Loss-sensitive training of probabilistic conditional random fields. arXiv:1107.1805v1, 2011.\n\nSimple statistical gradient-following algorithms for connectionist reinforcement learning. R J Williams, Mach. Learn. J. R. J. Williams. Simple statistical gradient-following algorithms for connectionist reinforcement learning. Mach. Learn. J., 1992.\n\nFunction optimization using connectionist reinforcement learning algorithms. R J Williams, J Peng, Connection Science. R. J. Williams and J. Peng. Function optimization using connectionist reinforcement learning algorithms. Connection Science, 1991.\n\nSequence-to-sequence learning as beam-search optimization. S Wiseman, A M Rush, arXiv:1606.02960S. Wiseman and A. M. Rush. Sequence-to-sequence learning as beam-search optimization. arXiv:1606.02960, 2016.\n", "annotations": {"author": "[{\"end\":119,\"start\":82},{\"end\":150,\"start\":120},{\"end\":184,\"start\":151},{\"end\":220,\"start\":185},{\"end\":255,\"start\":221},{\"end\":286,\"start\":256},{\"end\":325,\"start\":287},{\"end\":339,\"start\":326}]", "publisher": null, "author_last_name": "[{\"end\":98,\"start\":91},{\"end\":131,\"start\":125},{\"end\":163,\"start\":159},{\"end\":199,\"start\":193},{\"end\":234,\"start\":226},{\"end\":266,\"start\":264},{\"end\":302,\"start\":292},{\"end\":338,\"start\":333}]", "author_first_name": "[{\"end\":90,\"start\":82},{\"end\":124,\"start\":120},{\"end\":158,\"start\":151},{\"end\":192,\"start\":185},{\"end\":225,\"start\":221},{\"end\":263,\"start\":256},{\"end\":291,\"start\":287},{\"end\":332,\"start\":326}]", "author_affiliation": null, "title": "[{\"end\":69,\"start\":1},{\"end\":408,\"start\":340}]", "venue": null, "abstract": "[{\"end\":1528,\"start\":420}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b18\"},\"end\":1925,\"start\":1921},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":1943,\"start\":1939},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":1985,\"start\":1981},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":1988,\"start\":1985},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":2226,\"start\":2222},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2228,\"start\":2226},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":2294,\"start\":2290},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2306,\"start\":2303},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2341,\"start\":2338},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":2735,\"start\":2731},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2737,\"start\":2735},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":3602,\"start\":3598},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3604,\"start\":3602},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":3607,\"start\":3604},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3634,\"start\":3631},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3636,\"start\":3634},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3638,\"start\":3636},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4282,\"start\":4278},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":4285,\"start\":4282},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":4432,\"start\":4428},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":4471,\"start\":4467},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4473,\"start\":4471},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":5262,\"start\":5258},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5264,\"start\":5262},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":5267,\"start\":5264},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":7512,\"start\":7508},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7515,\"start\":7512},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":7517,\"start\":7515},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":9274,\"start\":9270},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":9277,\"start\":9274},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":13833,\"start\":13829},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":13992,\"start\":13988},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":13995,\"start\":13992},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":16927,\"start\":16924},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":20170,\"start\":20166},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":20223,\"start\":20219},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":20225,\"start\":20223},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":20439,\"start\":20436},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":20442,\"start\":20439},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":20445,\"start\":20442},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":20620,\"start\":20616},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":21090,\"start\":21086},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":21093,\"start\":21090},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":21116,\"start\":21112},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":21133,\"start\":21129},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":21168,\"start\":21164},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":21271,\"start\":21267},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":21330,\"start\":21326},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":21352,\"start\":21348},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":21355,\"start\":21352},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":21725,\"start\":21721},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":21728,\"start\":21725},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":21731,\"start\":21728},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":22044,\"start\":22040},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":22096,\"start\":22092},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":22324,\"start\":22320},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":22327,\"start\":22324},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":22561,\"start\":22557},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":22564,\"start\":22561},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":22567,\"start\":22564},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":22665,\"start\":22661},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":23180,\"start\":23176},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":23183,\"start\":23180},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":23507,\"start\":23504},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":24036,\"start\":24032},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":24576,\"start\":24572},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24578,\"start\":24576},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":25090,\"start\":25086},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":25191,\"start\":25188},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":27687,\"start\":27684},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":27689,\"start\":27687},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":28357,\"start\":28353},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":28359,\"start\":28357},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":28362,\"start\":28359},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":28723,\"start\":28720},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":28843,\"start\":28840},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":29639,\"start\":29635},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":29641,\"start\":29639},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":29644,\"start\":29641},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":30847,\"start\":30843},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":31822,\"start\":31818},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":33034,\"start\":33031},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":33230,\"start\":33227},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":33575,\"start\":33572},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":33684,\"start\":33680},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":33855,\"start\":33851},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":33864,\"start\":33860}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":34759,\"start\":34217},{\"attributes\":{\"id\":\"fig_1\"},\"end\":34961,\"start\":34760},{\"attributes\":{\"id\":\"fig_2\"},\"end\":35206,\"start\":34962},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":35562,\"start\":35207},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":36049,\"start\":35563}]", "paragraph": "[{\"end\":2342,\"start\":1544},{\"end\":3447,\"start\":2344},{\"end\":3639,\"start\":3449},{\"end\":4327,\"start\":3641},{\"end\":5329,\"start\":4329},{\"end\":6167,\"start\":5331},{\"end\":6714,\"start\":6169},{\"end\":7519,\"start\":6716},{\"end\":8103,\"start\":7559},{\"end\":8551,\"start\":8137},{\"end\":8811,\"start\":8553},{\"end\":9154,\"start\":8862},{\"end\":9343,\"start\":9156},{\"end\":9904,\"start\":9426},{\"end\":10050,\"start\":9906},{\"end\":10503,\"start\":10108},{\"end\":10985,\"start\":10585},{\"end\":11180,\"start\":10987},{\"end\":11358,\"start\":11252},{\"end\":11644,\"start\":11360},{\"end\":11783,\"start\":11718},{\"end\":12547,\"start\":11863},{\"end\":12822,\"start\":12564},{\"end\":13186,\"start\":12886},{\"end\":13281,\"start\":13188},{\"end\":14301,\"start\":13354},{\"end\":14826,\"start\":14357},{\"end\":15680,\"start\":14828},{\"end\":15878,\"start\":15682},{\"end\":16151,\"start\":15880},{\"end\":16669,\"start\":16169},{\"end\":17031,\"start\":16671},{\"end\":17647,\"start\":17083},{\"end\":18267,\"start\":17908},{\"end\":18358,\"start\":18286},{\"end\":18692,\"start\":18574},{\"end\":19696,\"start\":18797},{\"end\":20098,\"start\":19713},{\"end\":20856,\"start\":20100},{\"end\":21498,\"start\":20858},{\"end\":23377,\"start\":21500},{\"end\":23961,\"start\":23379},{\"end\":24346,\"start\":23963},{\"end\":24726,\"start\":24362},{\"end\":25091,\"start\":24749},{\"end\":25855,\"start\":25093},{\"end\":26884,\"start\":25857},{\"end\":27082,\"start\":26886},{\"end\":28089,\"start\":27084},{\"end\":28594,\"start\":28113},{\"end\":30116,\"start\":28596},{\"end\":30848,\"start\":30129},{\"end\":31646,\"start\":30863},{\"end\":31756,\"start\":31648},{\"end\":31901,\"start\":31758},{\"end\":32113,\"start\":31903},{\"end\":32389,\"start\":32313},{\"end\":32448,\"start\":32391},{\"end\":32460,\"start\":32450},{\"end\":32621,\"start\":32558},{\"end\":32663,\"start\":32623},{\"end\":32706,\"start\":32665},{\"end\":32730,\"start\":32708},{\"end\":33879,\"start\":32732},{\"end\":34216,\"start\":33881}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":8136,\"start\":8104},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8861,\"start\":8812},{\"attributes\":{\"id\":\"formula_2\"},\"end\":9425,\"start\":9344},{\"attributes\":{\"id\":\"formula_3\"},\"end\":10107,\"start\":10051},{\"attributes\":{\"id\":\"formula_4\"},\"end\":10584,\"start\":10504},{\"attributes\":{\"id\":\"formula_5\"},\"end\":11251,\"start\":11181},{\"attributes\":{\"id\":\"formula_6\"},\"end\":11717,\"start\":11645},{\"attributes\":{\"id\":\"formula_7\"},\"end\":11862,\"start\":11784},{\"attributes\":{\"id\":\"formula_8\"},\"end\":12885,\"start\":12823},{\"attributes\":{\"id\":\"formula_9\"},\"end\":13353,\"start\":13282},{\"attributes\":{\"id\":\"formula_11\"},\"end\":17082,\"start\":17032},{\"attributes\":{\"id\":\"formula_12\"},\"end\":17715,\"start\":17648},{\"attributes\":{\"id\":\"formula_13\"},\"end\":17907,\"start\":17715},{\"attributes\":{\"id\":\"formula_14\"},\"end\":18573,\"start\":18359},{\"attributes\":{\"id\":\"formula_15\"},\"end\":18796,\"start\":18693},{\"attributes\":{\"id\":\"formula_16\"},\"end\":32237,\"start\":32114},{\"attributes\":{\"id\":\"formula_17\"},\"end\":32312,\"start\":32237},{\"attributes\":{\"id\":\"formula_20\"},\"end\":32557,\"start\":32461}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":27009,\"start\":27002},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":27094,\"start\":27087},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":29473,\"start\":29466},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":30455,\"start\":30448}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1542,\"start\":1530},{\"attributes\":{\"n\":\"2\"},\"end\":7557,\"start\":7522},{\"attributes\":{\"n\":\"2.1\"},\"end\":12562,\"start\":12550},{\"attributes\":{\"n\":\"2.2\"},\"end\":14355,\"start\":14304},{\"attributes\":{\"n\":\"3\"},\"end\":16167,\"start\":16154},{\"end\":18284,\"start\":18270},{\"attributes\":{\"n\":\"4\"},\"end\":19711,\"start\":19699},{\"attributes\":{\"n\":\"5\"},\"end\":24360,\"start\":24349},{\"attributes\":{\"n\":\"5.1\"},\"end\":24747,\"start\":24729},{\"attributes\":{\"n\":\"5.2\"},\"end\":28111,\"start\":28092},{\"end\":30127,\"start\":30119},{\"attributes\":{\"n\":\"6\"},\"end\":30861,\"start\":30851},{\"end\":34771,\"start\":34761},{\"end\":34968,\"start\":34963},{\"end\":35217,\"start\":35208},{\"end\":35573,\"start\":35564}]", "table": "[{\"end\":35562,\"start\":35219},{\"end\":36049,\"start\":35750}]", "figure_caption": "[{\"end\":34759,\"start\":34219},{\"end\":34961,\"start\":34773},{\"end\":35206,\"start\":34970},{\"end\":35750,\"start\":35575}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":26268,\"start\":26260},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":26618,\"start\":26610}]", "bib_author_first_name": "[{\"end\":37107,\"start\":37106},{\"end\":37116,\"start\":37115},{\"end\":37127,\"start\":37126},{\"end\":37136,\"start\":37135},{\"end\":37147,\"start\":37146},{\"end\":37157,\"start\":37156},{\"end\":37168,\"start\":37167},{\"end\":37178,\"start\":37177},{\"end\":37483,\"start\":37482},{\"end\":37495,\"start\":37494},{\"end\":37505,\"start\":37504},{\"end\":37511,\"start\":37510},{\"end\":37520,\"start\":37519},{\"end\":37528,\"start\":37527},{\"end\":37538,\"start\":37537},{\"end\":37551,\"start\":37550},{\"end\":37814,\"start\":37813},{\"end\":37826,\"start\":37825},{\"end\":37833,\"start\":37832},{\"end\":38004,\"start\":38003},{\"end\":38016,\"start\":38015},{\"end\":38026,\"start\":38025},{\"end\":38028,\"start\":38027},{\"end\":38039,\"start\":38038},{\"end\":38230,\"start\":38229},{\"end\":38240,\"start\":38239},{\"end\":38251,\"start\":38250},{\"end\":38261,\"start\":38260},{\"end\":38263,\"start\":38262},{\"end\":38447,\"start\":38446},{\"end\":38455,\"start\":38454},{\"end\":38465,\"start\":38464},{\"end\":38467,\"start\":38466},{\"end\":38473,\"start\":38472},{\"end\":38674,\"start\":38673},{\"end\":38681,\"start\":38680},{\"end\":38700,\"start\":38699},{\"end\":38712,\"start\":38711},{\"end\":38724,\"start\":38723},{\"end\":38736,\"start\":38735},{\"end\":38747,\"start\":38746},{\"end\":39061,\"start\":39060},{\"end\":39074,\"start\":39073},{\"end\":39086,\"start\":39085},{\"end\":39093,\"start\":39092},{\"end\":39331,\"start\":39330},{\"end\":39333,\"start\":39332},{\"end\":39346,\"start\":39345},{\"end\":39358,\"start\":39357},{\"end\":39369,\"start\":39368},{\"end\":39376,\"start\":39375},{\"end\":39553,\"start\":39552},{\"end\":39562,\"start\":39561},{\"end\":39569,\"start\":39568},{\"end\":39776,\"start\":39775},{\"end\":39786,\"start\":39785},{\"end\":39788,\"start\":39787},{\"end\":39800,\"start\":39799},{\"end\":39802,\"start\":39801},{\"end\":39991,\"start\":39990},{\"end\":40151,\"start\":40150},{\"end\":40161,\"start\":40160},{\"end\":40163,\"start\":40162},{\"end\":40287,\"start\":40286},{\"end\":40297,\"start\":40296},{\"end\":40308,\"start\":40307},{\"end\":40509,\"start\":40508},{\"end\":40523,\"start\":40522},{\"end\":40699,\"start\":40698},{\"end\":40701,\"start\":40700},{\"end\":40711,\"start\":40710},{\"end\":40720,\"start\":40719},{\"end\":40901,\"start\":40900},{\"end\":40908,\"start\":40907},{\"end\":40910,\"start\":40909},{\"end\":40923,\"start\":40922},{\"end\":40933,\"start\":40932},{\"end\":41125,\"start\":41124},{\"end\":41134,\"start\":41133},{\"end\":41143,\"start\":41142},{\"end\":41149,\"start\":41148},{\"end\":41161,\"start\":41160},{\"end\":41172,\"start\":41171},{\"end\":41182,\"start\":41181},{\"end\":41194,\"start\":41193},{\"end\":41207,\"start\":41206},{\"end\":41504,\"start\":41503},{\"end\":41506,\"start\":41505},{\"end\":41518,\"start\":41517},{\"end\":41530,\"start\":41529},{\"end\":41534,\"start\":41531},{\"end\":41757,\"start\":41756},{\"end\":41766,\"start\":41765},{\"end\":41776,\"start\":41775},{\"end\":41786,\"start\":41785},{\"end\":41955,\"start\":41954},{\"end\":41965,\"start\":41964},{\"end\":42118,\"start\":42117},{\"end\":42128,\"start\":42127},{\"end\":42293,\"start\":42292},{\"end\":42306,\"start\":42305},{\"end\":42319,\"start\":42318},{\"end\":42329,\"start\":42328},{\"end\":42527,\"start\":42523},{\"end\":42536,\"start\":42535},{\"end\":42544,\"start\":42543},{\"end\":42546,\"start\":42545},{\"end\":42754,\"start\":42750},{\"end\":42763,\"start\":42762},{\"end\":42776,\"start\":42775},{\"end\":42778,\"start\":42777},{\"end\":42784,\"start\":42783},{\"end\":42795,\"start\":42794},{\"end\":42950,\"start\":42949},{\"end\":42958,\"start\":42957},{\"end\":42960,\"start\":42959},{\"end\":42969,\"start\":42968},{\"end\":42978,\"start\":42977},{\"end\":42988,\"start\":42987},{\"end\":42990,\"start\":42989},{\"end\":43003,\"start\":43002},{\"end\":43013,\"start\":43012},{\"end\":43023,\"start\":43022},{\"end\":43299,\"start\":43298},{\"end\":43309,\"start\":43308},{\"end\":43320,\"start\":43319},{\"end\":43453,\"start\":43452},{\"end\":43462,\"start\":43461},{\"end\":43473,\"start\":43472},{\"end\":43584,\"start\":43583},{\"end\":43595,\"start\":43594},{\"end\":43605,\"start\":43604},{\"end\":43613,\"start\":43612},{\"end\":43893,\"start\":43892},{\"end\":43901,\"start\":43900},{\"end\":43903,\"start\":43902},{\"end\":43913,\"start\":43912},{\"end\":43915,\"start\":43914},{\"end\":44135,\"start\":44134},{\"end\":44143,\"start\":44142},{\"end\":44152,\"start\":44151},{\"end\":44158,\"start\":44157},{\"end\":44164,\"start\":44163},{\"end\":44170,\"start\":44169},{\"end\":44177,\"start\":44176},{\"end\":44381,\"start\":44380},{\"end\":44617,\"start\":44616},{\"end\":44629,\"start\":44628},{\"end\":44639,\"start\":44638},{\"end\":44896,\"start\":44895},{\"end\":44908,\"start\":44907},{\"end\":44918,\"start\":44917},{\"end\":44933,\"start\":44932},{\"end\":45084,\"start\":45083},{\"end\":45097,\"start\":45096},{\"end\":45108,\"start\":45107},{\"end\":45110,\"start\":45109},{\"end\":45320,\"start\":45319},{\"end\":45322,\"start\":45321},{\"end\":45332,\"start\":45331},{\"end\":45334,\"start\":45333},{\"end\":45521,\"start\":45520},{\"end\":45523,\"start\":45522},{\"end\":45533,\"start\":45532},{\"end\":45535,\"start\":45534},{\"end\":45549,\"start\":45548},{\"end\":45551,\"start\":45550},{\"end\":45560,\"start\":45559},{\"end\":45753,\"start\":45752},{\"end\":45763,\"start\":45762},{\"end\":45775,\"start\":45774},{\"end\":45921,\"start\":45920},{\"end\":46074,\"start\":46073},{\"end\":46092,\"start\":46091},{\"end\":46104,\"start\":46103},{\"end\":46115,\"start\":46114},{\"end\":46272,\"start\":46271},{\"end\":46287,\"start\":46286},{\"end\":46295,\"start\":46294},{\"end\":46572,\"start\":46571},{\"end\":46582,\"start\":46581},{\"end\":46787,\"start\":46786},{\"end\":46798,\"start\":46797},{\"end\":46811,\"start\":46810},{\"end\":46821,\"start\":46820},{\"end\":46999,\"start\":46998},{\"end\":47010,\"start\":47009},{\"end\":47024,\"start\":47023},{\"end\":47344,\"start\":47343},{\"end\":47346,\"start\":47345},{\"end\":47582,\"start\":47581},{\"end\":47584,\"start\":47583},{\"end\":47596,\"start\":47595},{\"end\":47815,\"start\":47814},{\"end\":47826,\"start\":47825},{\"end\":47828,\"start\":47827}]", "bib_author_last_name": "[{\"end\":37113,\"start\":37108},{\"end\":37124,\"start\":37117},{\"end\":37133,\"start\":37128},{\"end\":37144,\"start\":37137},{\"end\":37154,\"start\":37148},{\"end\":37165,\"start\":37158},{\"end\":37175,\"start\":37169},{\"end\":37186,\"start\":37179},{\"end\":37492,\"start\":37484},{\"end\":37502,\"start\":37496},{\"end\":37508,\"start\":37506},{\"end\":37517,\"start\":37512},{\"end\":37525,\"start\":37521},{\"end\":37535,\"start\":37529},{\"end\":37548,\"start\":37539},{\"end\":37558,\"start\":37552},{\"end\":37823,\"start\":37815},{\"end\":37830,\"start\":37827},{\"end\":37840,\"start\":37834},{\"end\":38013,\"start\":38005},{\"end\":38023,\"start\":38017},{\"end\":38036,\"start\":38029},{\"end\":38045,\"start\":38040},{\"end\":38237,\"start\":38231},{\"end\":38248,\"start\":38241},{\"end\":38258,\"start\":38252},{\"end\":38271,\"start\":38264},{\"end\":38452,\"start\":38448},{\"end\":38462,\"start\":38456},{\"end\":38470,\"start\":38468},{\"end\":38481,\"start\":38474},{\"end\":38678,\"start\":38675},{\"end\":38697,\"start\":38682},{\"end\":38709,\"start\":38701},{\"end\":38721,\"start\":38713},{\"end\":38733,\"start\":38725},{\"end\":38744,\"start\":38737},{\"end\":38754,\"start\":38748},{\"end\":39071,\"start\":39062},{\"end\":39083,\"start\":39075},{\"end\":39090,\"start\":39087},{\"end\":39100,\"start\":39094},{\"end\":39343,\"start\":39334},{\"end\":39355,\"start\":39347},{\"end\":39366,\"start\":39359},{\"end\":39373,\"start\":39370},{\"end\":39383,\"start\":39377},{\"end\":39559,\"start\":39554},{\"end\":39566,\"start\":39563},{\"end\":39578,\"start\":39570},{\"end\":39585,\"start\":39580},{\"end\":39783,\"start\":39777},{\"end\":39797,\"start\":39789},{\"end\":39809,\"start\":39803},{\"end\":39997,\"start\":39992},{\"end\":40158,\"start\":40152},{\"end\":40169,\"start\":40164},{\"end\":40294,\"start\":40288},{\"end\":40305,\"start\":40298},{\"end\":40313,\"start\":40309},{\"end\":40520,\"start\":40510},{\"end\":40535,\"start\":40524},{\"end\":40708,\"start\":40702},{\"end\":40717,\"start\":40712},{\"end\":40726,\"start\":40721},{\"end\":40905,\"start\":40902},{\"end\":40920,\"start\":40911},{\"end\":40930,\"start\":40924},{\"end\":40940,\"start\":40934},{\"end\":41131,\"start\":41126},{\"end\":41140,\"start\":41135},{\"end\":41146,\"start\":41144},{\"end\":41158,\"start\":41150},{\"end\":41169,\"start\":41162},{\"end\":41179,\"start\":41173},{\"end\":41191,\"start\":41183},{\"end\":41204,\"start\":41195},{\"end\":41214,\"start\":41208},{\"end\":41515,\"start\":41507},{\"end\":41527,\"start\":41519},{\"end\":41542,\"start\":41535},{\"end\":41763,\"start\":41758},{\"end\":41773,\"start\":41767},{\"end\":41783,\"start\":41777},{\"end\":41794,\"start\":41787},{\"end\":41962,\"start\":41956},{\"end\":41972,\"start\":41966},{\"end\":42125,\"start\":42119},{\"end\":42135,\"start\":42129},{\"end\":42303,\"start\":42294},{\"end\":42316,\"start\":42307},{\"end\":42326,\"start\":42320},{\"end\":42336,\"start\":42330},{\"end\":42533,\"start\":42528},{\"end\":42541,\"start\":42537},{\"end\":42554,\"start\":42547},{\"end\":42760,\"start\":42755},{\"end\":42773,\"start\":42764},{\"end\":42781,\"start\":42779},{\"end\":42792,\"start\":42785},{\"end\":42803,\"start\":42796},{\"end\":42955,\"start\":42951},{\"end\":42966,\"start\":42961},{\"end\":42975,\"start\":42970},{\"end\":42985,\"start\":42979},{\"end\":43000,\"start\":42991},{\"end\":43010,\"start\":43004},{\"end\":43020,\"start\":43014},{\"end\":43035,\"start\":43024},{\"end\":43306,\"start\":43300},{\"end\":43317,\"start\":43310},{\"end\":43326,\"start\":43321},{\"end\":43459,\"start\":43454},{\"end\":43470,\"start\":43463},{\"end\":43483,\"start\":43474},{\"end\":43592,\"start\":43585},{\"end\":43602,\"start\":43596},{\"end\":43610,\"start\":43606},{\"end\":43621,\"start\":43614},{\"end\":43898,\"start\":43894},{\"end\":43910,\"start\":43904},{\"end\":43923,\"start\":43916},{\"end\":44140,\"start\":44136},{\"end\":44149,\"start\":44144},{\"end\":44155,\"start\":44153},{\"end\":44161,\"start\":44159},{\"end\":44167,\"start\":44165},{\"end\":44174,\"start\":44171},{\"end\":44181,\"start\":44178},{\"end\":44388,\"start\":44382},{\"end\":44626,\"start\":44618},{\"end\":44636,\"start\":44630},{\"end\":44646,\"start\":44640},{\"end\":44905,\"start\":44897},{\"end\":44915,\"start\":44909},{\"end\":44930,\"start\":44919},{\"end\":44942,\"start\":44934},{\"end\":45094,\"start\":45085},{\"end\":45105,\"start\":45098},{\"end\":45113,\"start\":45111},{\"end\":45329,\"start\":45323},{\"end\":45340,\"start\":45335},{\"end\":45530,\"start\":45524},{\"end\":45546,\"start\":45536},{\"end\":45557,\"start\":45552},{\"end\":45568,\"start\":45561},{\"end\":45760,\"start\":45754},{\"end\":45772,\"start\":45764},{\"end\":45782,\"start\":45776},{\"end\":45929,\"start\":45922},{\"end\":46089,\"start\":46075},{\"end\":46101,\"start\":46093},{\"end\":46112,\"start\":46105},{\"end\":46121,\"start\":46116},{\"end\":46284,\"start\":46273},{\"end\":46292,\"start\":46288},{\"end\":46302,\"start\":46296},{\"end\":46579,\"start\":46573},{\"end\":46591,\"start\":46583},{\"end\":46795,\"start\":46788},{\"end\":46808,\"start\":46799},{\"end\":46818,\"start\":46812},{\"end\":46831,\"start\":46822},{\"end\":47007,\"start\":47000},{\"end\":47021,\"start\":47011},{\"end\":47030,\"start\":47025},{\"end\":47355,\"start\":47347},{\"end\":47593,\"start\":47585},{\"end\":47601,\"start\":47597},{\"end\":47823,\"start\":47816},{\"end\":47833,\"start\":47829}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:1603.06042\",\"id\":\"b0\"},\"end\":37429,\"start\":37106},{\"attributes\":{\"doi\":\"arXiv:1607.07086\",\"id\":\"b1\"},\"end\":37740,\"start\":37431},{\"attributes\":{\"id\":\"b2\"},\"end\":37964,\"start\":37742},{\"attributes\":{\"id\":\"b3\"},\"end\":38152,\"start\":37966},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":1820089},\"end\":38418,\"start\":38154},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":14177763},\"end\":38576,\"start\":38420},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":5590763},\"end\":38966,\"start\":38578},{\"attributes\":{\"doi\":\"arXiv:1412.1602\",\"id\":\"b7\"},\"end\":39281,\"start\":38968},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":1921173},\"end\":39514,\"start\":39283},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":704519},\"end\":39703,\"start\":39516},{\"attributes\":{\"id\":\"b10\"},\"end\":39939,\"start\":39705},{\"attributes\":{\"id\":\"b11\"},\"end\":40079,\"start\":39941},{\"attributes\":{\"id\":\"b12\"},\"end\":40284,\"start\":40081},{\"attributes\":{\"doi\":\"arXiv:1503.02531\",\"id\":\"b13\"},\"end\":40482,\"start\":40286},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":1915014},\"end\":40640,\"start\":40484},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":7522435},\"end\":40860,\"start\":40642},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":14747462},\"end\":41048,\"start\":40862},{\"attributes\":{\"id\":\"b17\"},\"end\":41410,\"start\":41050},{\"attributes\":{\"id\":\"b18\"},\"end\":41697,\"start\":41412},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":14542261},\"end\":41952,\"start\":41699},{\"attributes\":{\"id\":\"b20\"},\"end\":42060,\"start\":41954},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":5941161},\"end\":42234,\"start\":42062},{\"attributes\":{\"id\":\"b22\"},\"end\":42453,\"start\":42236},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1998416},\"end\":42684,\"start\":42455},{\"attributes\":{\"id\":\"b24\"},\"end\":42947,\"start\":42686},{\"attributes\":{\"id\":\"b25\"},\"end\":43264,\"start\":42949},{\"attributes\":{\"id\":\"b26\"},\"end\":43412,\"start\":43266},{\"attributes\":{\"id\":\"b27\"},\"end\":43581,\"start\":43414},{\"attributes\":{\"id\":\"b28\"},\"end\":43800,\"start\":43583},{\"attributes\":{\"id\":\"b29\"},\"end\":44078,\"start\":43802},{\"attributes\":{\"id\":\"b30\"},\"end\":44310,\"start\":44080},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":515925},\"end\":44496,\"start\":44312},{\"attributes\":{\"id\":\"b32\"},\"end\":44826,\"start\":44498},{\"attributes\":{\"id\":\"b33\"},\"end\":45081,\"start\":44828},{\"attributes\":{\"id\":\"b34\"},\"end\":45276,\"start\":45083},{\"attributes\":{\"id\":\"b35\"},\"end\":45438,\"start\":45278},{\"attributes\":{\"id\":\"b36\"},\"end\":45722,\"start\":45440},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":201720},\"end\":45868,\"start\":45724},{\"attributes\":{\"id\":\"b38\"},\"end\":45998,\"start\":45870},{\"attributes\":{\"id\":\"b39\"},\"end\":46269,\"start\":46000},{\"attributes\":{\"doi\":\"arXiv:1509.06461\",\"id\":\"b40\"},\"end\":46487,\"start\":46271},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":12874183},\"end\":46719,\"start\":46489},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":14619558},\"end\":46996,\"start\":46721},{\"attributes\":{\"doi\":\"arXiv:1107.1805v1\",\"id\":\"b43\"},\"end\":47250,\"start\":46998},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":2332513},\"end\":47502,\"start\":47252},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":18972907},\"end\":47753,\"start\":47504},{\"attributes\":{\"doi\":\"arXiv:1606.02960\",\"id\":\"b46\"},\"end\":47960,\"start\":47755}]", "bib_title": "[{\"end\":38227,\"start\":38154},{\"end\":38444,\"start\":38420},{\"end\":38671,\"start\":38578},{\"end\":39328,\"start\":39283},{\"end\":39550,\"start\":39516},{\"end\":40506,\"start\":40484},{\"end\":40696,\"start\":40642},{\"end\":40898,\"start\":40862},{\"end\":41754,\"start\":41699},{\"end\":42115,\"start\":42062},{\"end\":42521,\"start\":42455},{\"end\":44378,\"start\":44312},{\"end\":45750,\"start\":45724},{\"end\":46569,\"start\":46489},{\"end\":46784,\"start\":46721},{\"end\":47341,\"start\":47252},{\"end\":47579,\"start\":47504}]", "bib_author": "[{\"end\":37115,\"start\":37106},{\"end\":37126,\"start\":37115},{\"end\":37135,\"start\":37126},{\"end\":37146,\"start\":37135},{\"end\":37156,\"start\":37146},{\"end\":37167,\"start\":37156},{\"end\":37177,\"start\":37167},{\"end\":37188,\"start\":37177},{\"end\":37494,\"start\":37482},{\"end\":37504,\"start\":37494},{\"end\":37510,\"start\":37504},{\"end\":37519,\"start\":37510},{\"end\":37527,\"start\":37519},{\"end\":37537,\"start\":37527},{\"end\":37550,\"start\":37537},{\"end\":37560,\"start\":37550},{\"end\":37825,\"start\":37813},{\"end\":37832,\"start\":37825},{\"end\":37842,\"start\":37832},{\"end\":38015,\"start\":38003},{\"end\":38025,\"start\":38015},{\"end\":38038,\"start\":38025},{\"end\":38047,\"start\":38038},{\"end\":38239,\"start\":38229},{\"end\":38250,\"start\":38239},{\"end\":38260,\"start\":38250},{\"end\":38273,\"start\":38260},{\"end\":38454,\"start\":38446},{\"end\":38464,\"start\":38454},{\"end\":38472,\"start\":38464},{\"end\":38483,\"start\":38472},{\"end\":38680,\"start\":38673},{\"end\":38699,\"start\":38680},{\"end\":38711,\"start\":38699},{\"end\":38723,\"start\":38711},{\"end\":38735,\"start\":38723},{\"end\":38746,\"start\":38735},{\"end\":38756,\"start\":38746},{\"end\":39073,\"start\":39060},{\"end\":39085,\"start\":39073},{\"end\":39092,\"start\":39085},{\"end\":39102,\"start\":39092},{\"end\":39345,\"start\":39330},{\"end\":39357,\"start\":39345},{\"end\":39368,\"start\":39357},{\"end\":39375,\"start\":39368},{\"end\":39385,\"start\":39375},{\"end\":39561,\"start\":39552},{\"end\":39568,\"start\":39561},{\"end\":39580,\"start\":39568},{\"end\":39587,\"start\":39580},{\"end\":39785,\"start\":39775},{\"end\":39799,\"start\":39785},{\"end\":39811,\"start\":39799},{\"end\":39999,\"start\":39990},{\"end\":40160,\"start\":40150},{\"end\":40171,\"start\":40160},{\"end\":40296,\"start\":40286},{\"end\":40307,\"start\":40296},{\"end\":40315,\"start\":40307},{\"end\":40522,\"start\":40508},{\"end\":40537,\"start\":40522},{\"end\":40710,\"start\":40698},{\"end\":40719,\"start\":40710},{\"end\":40728,\"start\":40719},{\"end\":40907,\"start\":40900},{\"end\":40922,\"start\":40907},{\"end\":40932,\"start\":40922},{\"end\":40942,\"start\":40932},{\"end\":41133,\"start\":41124},{\"end\":41142,\"start\":41133},{\"end\":41148,\"start\":41142},{\"end\":41160,\"start\":41148},{\"end\":41171,\"start\":41160},{\"end\":41181,\"start\":41171},{\"end\":41193,\"start\":41181},{\"end\":41206,\"start\":41193},{\"end\":41216,\"start\":41206},{\"end\":41517,\"start\":41503},{\"end\":41529,\"start\":41517},{\"end\":41544,\"start\":41529},{\"end\":41765,\"start\":41756},{\"end\":41775,\"start\":41765},{\"end\":41785,\"start\":41775},{\"end\":41796,\"start\":41785},{\"end\":41964,\"start\":41954},{\"end\":41974,\"start\":41964},{\"end\":42127,\"start\":42117},{\"end\":42137,\"start\":42127},{\"end\":42305,\"start\":42292},{\"end\":42318,\"start\":42305},{\"end\":42328,\"start\":42318},{\"end\":42338,\"start\":42328},{\"end\":42535,\"start\":42523},{\"end\":42543,\"start\":42535},{\"end\":42556,\"start\":42543},{\"end\":42762,\"start\":42750},{\"end\":42775,\"start\":42762},{\"end\":42783,\"start\":42775},{\"end\":42794,\"start\":42783},{\"end\":42805,\"start\":42794},{\"end\":42957,\"start\":42949},{\"end\":42968,\"start\":42957},{\"end\":42977,\"start\":42968},{\"end\":42987,\"start\":42977},{\"end\":43002,\"start\":42987},{\"end\":43012,\"start\":43002},{\"end\":43022,\"start\":43012},{\"end\":43037,\"start\":43022},{\"end\":43308,\"start\":43298},{\"end\":43319,\"start\":43308},{\"end\":43328,\"start\":43319},{\"end\":43461,\"start\":43452},{\"end\":43472,\"start\":43461},{\"end\":43485,\"start\":43472},{\"end\":43594,\"start\":43583},{\"end\":43604,\"start\":43594},{\"end\":43612,\"start\":43604},{\"end\":43623,\"start\":43612},{\"end\":43900,\"start\":43892},{\"end\":43912,\"start\":43900},{\"end\":43925,\"start\":43912},{\"end\":44142,\"start\":44134},{\"end\":44151,\"start\":44142},{\"end\":44157,\"start\":44151},{\"end\":44163,\"start\":44157},{\"end\":44169,\"start\":44163},{\"end\":44176,\"start\":44169},{\"end\":44183,\"start\":44176},{\"end\":44390,\"start\":44380},{\"end\":44628,\"start\":44616},{\"end\":44638,\"start\":44628},{\"end\":44648,\"start\":44638},{\"end\":44907,\"start\":44895},{\"end\":44917,\"start\":44907},{\"end\":44932,\"start\":44917},{\"end\":44944,\"start\":44932},{\"end\":45096,\"start\":45083},{\"end\":45107,\"start\":45096},{\"end\":45115,\"start\":45107},{\"end\":45331,\"start\":45319},{\"end\":45342,\"start\":45331},{\"end\":45532,\"start\":45520},{\"end\":45548,\"start\":45532},{\"end\":45559,\"start\":45548},{\"end\":45570,\"start\":45559},{\"end\":45762,\"start\":45752},{\"end\":45774,\"start\":45762},{\"end\":45784,\"start\":45774},{\"end\":45931,\"start\":45920},{\"end\":46091,\"start\":46073},{\"end\":46103,\"start\":46091},{\"end\":46114,\"start\":46103},{\"end\":46123,\"start\":46114},{\"end\":46286,\"start\":46271},{\"end\":46294,\"start\":46286},{\"end\":46304,\"start\":46294},{\"end\":46581,\"start\":46571},{\"end\":46593,\"start\":46581},{\"end\":46797,\"start\":46786},{\"end\":46810,\"start\":46797},{\"end\":46820,\"start\":46810},{\"end\":46833,\"start\":46820},{\"end\":47009,\"start\":46998},{\"end\":47023,\"start\":47009},{\"end\":47032,\"start\":47023},{\"end\":47357,\"start\":47343},{\"end\":47595,\"start\":47581},{\"end\":47603,\"start\":47595},{\"end\":47825,\"start\":47814},{\"end\":47835,\"start\":47825}]", "bib_venue": "[{\"end\":37256,\"start\":37204},{\"end\":37480,\"start\":37431},{\"end\":37811,\"start\":37742},{\"end\":38001,\"start\":37966},{\"end\":38277,\"start\":38273},{\"end\":38489,\"start\":38483},{\"end\":38761,\"start\":38756},{\"end\":39058,\"start\":38968},{\"end\":39389,\"start\":39385},{\"end\":39601,\"start\":39587},{\"end\":39773,\"start\":39705},{\"end\":39988,\"start\":39941},{\"end\":40148,\"start\":40081},{\"end\":40375,\"start\":40331},{\"end\":40555,\"start\":40537},{\"end\":40742,\"start\":40728},{\"end\":40946,\"start\":40942},{\"end\":41122,\"start\":41050},{\"end\":41501,\"start\":41412},{\"end\":41815,\"start\":41796},{\"end\":42000,\"start\":41974},{\"end\":42141,\"start\":42137},{\"end\":42290,\"start\":42236},{\"end\":42561,\"start\":42556},{\"end\":42748,\"start\":42686},{\"end\":43095,\"start\":43037},{\"end\":43296,\"start\":43266},{\"end\":43450,\"start\":43414},{\"end\":43683,\"start\":43623},{\"end\":43890,\"start\":43802},{\"end\":44132,\"start\":44080},{\"end\":44396,\"start\":44390},{\"end\":44614,\"start\":44498},{\"end\":44893,\"start\":44828},{\"end\":45171,\"start\":45115},{\"end\":45317,\"start\":45278},{\"end\":45518,\"start\":45440},{\"end\":45788,\"start\":45784},{\"end\":45918,\"start\":45870},{\"end\":46071,\"start\":46000},{\"end\":46370,\"start\":46320},{\"end\":46597,\"start\":46593},{\"end\":46850,\"start\":46833},{\"end\":47115,\"start\":47049},{\"end\":47371,\"start\":47357},{\"end\":47621,\"start\":47603},{\"end\":47812,\"start\":47755},{\"end\":41821,\"start\":41817}]"}}}, "year": 2023, "month": 12, "day": 17}