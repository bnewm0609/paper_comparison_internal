{"id": 232110471, "updated": "2023-10-06 06:10:24.484", "metadata": {"title": "Barlow Twins: Self-Supervised Learning via Redundancy Reduction", "authors": "[{\"first\":\"Jure\",\"last\":\"Zbontar\",\"middle\":[]},{\"first\":\"Li\",\"last\":\"Jing\",\"middle\":[]},{\"first\":\"Ishan\",\"last\":\"Misra\",\"middle\":[]},{\"first\":\"Yann\",\"last\":\"LeCun\",\"middle\":[]},{\"first\":\"St'ephane\",\"last\":\"Deny\",\"middle\":[]}]", "venue": "ICML", "journal": "12310-12320", "publication_date": {"year": 2021, "month": 3, "day": 4}, "abstract": "Self-supervised learning (SSL) is rapidly closing the gap with supervised methods on large computer vision benchmarks. A successful approach to SSL is to learn embeddings which are invariant to distortions of the input sample. However, a recurring issue with this approach is the existence of trivial constant solutions. Most current methods avoid such solutions by careful implementation details. We propose an objective function that naturally avoids collapse by measuring the cross-correlation matrix between the outputs of two identical networks fed with distorted versions of a sample, and making it as close to the identity matrix as possible. This causes the embedding vectors of distorted versions of a sample to be similar, while minimizing the redundancy between the components of these vectors. The method is called Barlow Twins, owing to neuroscientist H. Barlow's redundancy-reduction principle applied to a pair of identical networks. Barlow Twins does not require large batches nor asymmetry between the network twins such as a predictor network, gradient stopping, or a moving average on the weight updates. Intriguingly it benefits from very high-dimensional output vectors. Barlow Twins outperforms previous methods on ImageNet for semi-supervised classification in the low-data regime, and is on par with current state of the art for ImageNet classification with a linear classifier head, and for transfer tasks of classification and object detection.", "fields_of_study": "[\"Computer Science\",\"Biology\"]", "external_ids": {"arxiv": "2103.03230", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icml/ZbontarJMLD21", "doi": null}}, "content": {"source": {"pdf_hash": "8a9d84d86ac0d76e63914802f9738325c3bece9c", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2103.03230v3.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "3142b2c428a29024d825f28225b4852499120e81", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/8a9d84d86ac0d76e63914802f9738325c3bece9c.txt", "contents": "\nBarlow Twins: Self-Supervised Learning via Redundancy Reduction\n\n\nJure Zbontar \nLi Jing \nIshan Misra \nYann Lecun \nSt\u00e9phane Deny \nBarlow Twins: Self-Supervised Learning via Redundancy Reduction\n\nEqual contribution 1 Facebook AI Research 2 New York University, NY, USA. Correspondence to: Jure Zbontar <jzb@fb.com>, Li Jing <ljng@fb.com>, Ishan Misra <imisra@fb.com>, Yann LeCun <yann@fb.com>, St\u00e9phane Deny <stephane.deny.pro@gmail.com>.\n\nSelf-supervised learning (SSL) is rapidly closing the gap with supervised methods on large computer vision benchmarks. A successful approach to SSL is to learn embeddings which are invariant to distortions of the input sample. However, a recurring issue with this approach is the existence of trivial constant solutions. Most current methods avoid such solutions by careful implementation details. We propose an objective function that naturally avoids collapse by measuring the cross-correlation matrix between the outputs of two identical networks fed with distorted versions of a sample, and making it as close to the identity matrix as possible. This causes the embedding vectors of distorted versions of a sample to be similar, while minimizing the redundancy between the components of these vectors. The method is called BARLOW TWINS, owing to neuroscientist H. Barlow's redundancy-reduction principle applied to a pair of identical networks. BARLOW TWINS does not require large batches nor asymmetry between the network twins such as a predictor network, gradient stopping, or a moving average on the weight updates. Intriguingly it benefits from very high-dimensional output vectors. BARLOW TWINS outperforms previous methods on ImageNet for semi-supervised classification in the low-data regime, and is on par with current state of the art for ImageNet classification with a linear classifier head, and for transfer tasks of classification and object detection. 1 Figure 1. BARLOW TWINS's objective function measures the crosscorrelation matrix between the embeddings of two identical networks fed with distorted versions of a batch of samples, and tries to make this matrix close to the identity. This causes the embedding vectors of distorted versions of a sample to be similar, while minimizing the redundancy between the components of these vectors. BARLOW TWINS is competitive with state-of-the-art methods for self-supervised learning while being conceptually simpler, naturally avoiding trivial constant (i.e. collapsed) embeddings, and being robust to the training batch size.\n\n\nIntroduction\n\nSelf-supervised learning aims to learn useful representations of the input data without relying on human annotations. Recent advances in self-supervised learning for visual data (Caron et al., 2020;Chen et al., 2020a;Grill et al., 2020;He et al., 2019;Misra & van der Maaten, 2019) show that it is possible to learn self-supervised representations that are competitive with supervised representations. A common underlying theme that unites these methods is that they all aim to learn representations that are invariant under different distortions (also referred to as 'data augmentations'). This is typically achieved by maximizing similarity of representations obtained from different distorted versions of a sample using a variant of Siamese networks (Hadsell et al., 2006). As there are trivial solutions to this problem, like a constant representation, these methods rely on different mechanisms to learn useful representations.\n\nContrastive methods like SIMCLR (Chen et al., 2020a) define 'positive' and 'negative' sample pairs which are treated differently in the loss function. Additionally, they can also use asymmetric learning updates wherein momentum encoders (He et al., 2019) are updated separately from the main network. Clustering methods use one distorted sample to compute 'targets' for the loss, and another distorted version of the sample to predict these targets, followed by an alternate optimization scheme like k-means in DEEPCLUS-TER (Caron et al., 2018) or non-differentiable operators in SWAV (Caron et al., 2020) and SELA (Asano et al., 2020). In another recent line of work, BYOL  and SIMSIAM (Chen & He, 2020), both the network architecture and parameter updates are modified to introduce asymmetry. The network architecture is modified to be asymmetric using a special 'predictor' network and the parameter updates are asymmetric such that the model parameters are only updated using one distorted version of the input, while the representations from another distorted version are used as a fixed target. (Chen & He, 2020) conclude that the asymmetry of the learning update, 'stop-gradient', is critical to preventing trivial solutions.\n\nIn this paper, we propose a new method, BARLOW TWINS, which applies redundancy-reduction -a principle first proposed in neuroscience -to self-supervised learning. In his influential article Possible Principles Underlying the Transformation of Sensory Messages (Barlow, 1961), neuroscientist H. Barlow hypothesized that the goal of sensory processing is to recode highly redundant sensory inputs into a factorial code (a code with statistically independent components). This principle has been fruitful in explaining the organization of the visual system, from the retina to cortical areas (see (Barlow, 2001) for a review and (Lindsey et al., 2020;Ocko et al., 2018;Schwartz & Simoncelli, 2001) for recent efforts), and has led to a number of algorithms for supervised and unsupervised learning (Ball\u00e9 et al., 2017;Deco & Parra, 1997;F\u00f6ldi\u00e1k, 1990;Linsker, 1988;Redlich, 1993a;b;Schmidhuber et al., 1996). Based on this principle, we propose an objective function which tries to make the cross-correlation matrix computed from twin embeddings as close to the identity matrix as possible. BARLOW TWINS is conceptually simple, easy to implement and learns useful representations as opposed to trivial solutions. Compared to other methods, it does not require large batches (Chen et al., 2020a), nor does it require any asymmetric mechanisms like prediction networks , momentum encoders (He et al., 2019), non-differentiable operators (Caron et al., 2020) or stop-gradients (Chen & He, 2020). Intriguingly, BARLOW TWINS strongly benefits from the use of very high-dimensional embeddings. BARLOW TWINS outperforms previous methods on ImageNet for semi-supervised classification in the low-data regime (55% top-1 accuracy for 1% labels), and is on par with current state of the art for ImageNet classification with a linear classifier head, as well as for a number of transfer tasks of classification and object detection.\n\n\nMethod\n\n\nDescription of BARLOW TWINS\n\nLike other methods for SSL (Caron et al., 2020;Chen et al., 2020a;Grill et al., 2020;He et al., 2019;Misra & van der Maaten, 2019), BARLOW TWINS operates on a joint embedding of distorted images (Fig. 1). More specifically, it produces two distorted views for all images of a batch X sampled from a dataset. The distorted views are obtained via a distribution of data augmentations T . The two batches of distorted views Y A and Y B are then fed to a function f \u03b8 , typically a deep network with trainable parameters \u03b8, producing batches of embeddings Z A and Z B respectively. To simplify notations, Z A and Z B are assumed to be meancentered along the batch dimension, such that each unit has mean output 0 over the batch.\n\nBARLOW TWINS distinguishes itself from other methods by its innovative loss function L BT :\nL BT i (1 \u2212 C ii ) 2 invariance term + \u03bb i j =i C ij 2 redundancy reduction term (1)\nwhere \u03bb is a positive constant trading off the importance of the first and second terms of the loss, and where C is the cross-correlation matrix computed between the outputs of the two identical networks along the batch dimension:\nC ij b z A b,i z B b,j b (z A b,i ) 2 b (z B b,j ) 2(2)\nwhere b indexes batch samples and i, j index the vector dimension of the networks' outputs. C is a square matrix with size the dimensionality of the network's output, and with values comprised between -1 (i.e. perfect anti-correlation) and 1 (i.e. perfect correlation).\n\nIntuitively, the invariance term of the objective, by trying to equate the diagonal elements of the cross-correlation matrix to 1, makes the embedding invariant to the distortions applied. The redundancy reduction term, by trying to equate the off-diagonal elements of the cross-correlation matrix to 0, decorrelates the different vector components of the embedding. This decorrelation reduces the redundancy between output units, so that the output units contain non-redundant information about the sample.\n\nMore formally, BARLOW TWINS's objective function can be understood through the lens of information theory, and specifically as an instanciation of the Information Bottleneck (IB) objective (Tishby & Zaslavsky, 2015;Tishby et al., 2000). Applied to self-supervised learning, the IB objective consists in finding a representation that conserves as much information about the sample as possible while being the least possible informative about the specific distortions applied to that sample. The mathematical connection between BARLOW TWINS's objective function and the IB principle is explored in Appendix A.\n\nBARLOW TWINS' objective function has similarities with existing objective functions for SSL. For example, the redundancy reduction term plays a role similar to the contrastive term in the INFONCE objective (Oord et al., 2018), as discussed in detail in Section 5. However, important conceptual differences in these objective functions result in practical advantages of our method compared to INFONCE-based methods, namely that (1) our method does not require a large number of negative samples and can thus operate on small batches (2) our method benefits from very high-dimensional embeddings. Alternatively, the redundancy reduction term can be viewed as a soft-whitening constraint on the embeddings, connecting our method to a recently proposed method performing a hard-whitening operation on the embeddings (Ermolov et al., 2020), as discussed in Section 5. However, our method performs better than current hard-whitening methods.\n\nThe pseudocode for BARLOW TWINS is shown as Algorithm 1.\n\n\nImplementation Details\n\nImage augmentations Each input image is transformed twice to produce the two distorted views shown in Figure 1. The image augmentation pipeline consists of the following transformations: random cropping, resizing to 224 \u00d7 224, horizontal flipping, color jittering, converting to grayscale, Gaussian blurring, and solarization. The first two transformations (cropping and resizing) are always applied, while the last five are applied randomly, with some probability. This probability is different for the two distorted views in the last two transformations (blurring and solarization). We use the same augmentation parameters as BYOL .\n\nArchitecture The encoder consists of a ResNet-50 network (He et al., 2016) (without the final classification layer, Algorithm 1 PyTorch-style pseudocode for Barlow Twins. Optimization We follow the optimization protocol described in BYOL . We use the LARS optimizer (You et al., 2017) and train for 1000 epochs with a batch size of 2048. We however emphasize that our model works well with batches as small as 256 (see Ablations). We use a learning rate of 0.2 for the weights and 0.0048 for the biases and batch normalization parameters. We multiply the learning rate by the batch size and divide it by 256. We use a learning rate warm-up period of 10 epochs, after which we reduce the learning rate by a factor of 1000 using a cosine decay schedule (Loshchilov & Hutter, 2016). We ran a search for the trade-off parameter \u03bb of the loss function and found the best results for \u03bb = 5 \u00b7 10 \u22123 . We use a weight decay parameter of 1.5 \u00b7 10 \u22126 . The biases and batch normalization parameters are excluded from LARS adaptation and weight decay. Training is distributed across 32 V100 GPUs and takes approximately 124 hours. For comparison, our reimplementation of BYOL trained with a batch size of 4096 takes 113 hours on the same hardware.\n\n\nResults\n\nWe follow standard practice (Goyal et al., 2019) and evaluate our representations by transfer learning to different datasets and tasks in computer vision. Our network is pretrained using self-supervised learning on the training set of the ImageNet ILSVRC-2012 dataset (Deng et al., 2009) (without labels). We evaluate our model on a variety of tasks such as image classification and object detection, and using fixed representations from the network or finetuning it. We provide the hyperparameters for all the transfer learning experiments in the Appendix.\n\n\nLinear and Semi-Supervised Evaluations on ImageNet\n\nLinear evaluation on ImageNet We train a linear classifier on ImageNet on top of fixed representations of a ResNet-50 pretrained with our method. The top-1 and top-5 accuracies obtained on the ImageNet validation set are reported in Table 1. Our method obtains a top-1 accuracy of 73.2% which is comparable to the state-of-the-art methods. Semi-supervised training on ImageNet We fine-tune a ResNet-50 pretrained with our method on a subset of Ima-geNet. We use subsets of size 1% and 10% using the same split as SIMCLR. The semi-supervised results obtained on the ImageNet validation set are reported in Table 2. Our method is either on par (when using 10% of the data) or slightly better (when using 1% of the data) than competing methods.\n\n\nTransfer to other datasets and tasks\n\nImage classification with fixed features We follow the setup from (Misra & van der Maaten, 2019) and train a linear classifier on fixed image representations, i.e., the  Table 3. BARLOW TWINS performs competitively against prior work, and outperforms SimCLR and MoCo-v2 on most datasets.\n\n\nObject Detection and Instance Segmentation\n\nWe evaluate our representations for the localization based tasks of object detection and instance segmentation. We use the VOC07+12 (Everingham et al., 2010) and COCO (Lin et al., 2014) datasets following the setup in (He et al., 2019) which finetunes the ConvNet parameters. Our results in Table 4 indicate that BARLOW TWINS performs comparably or better than state-of-the-art representation learning methods for these localization tasks. Table 4. Transfer learning: object detection and instance segmentation. We benchmark learned representations on the object detection task on VOC07+12 using Faster R-CNN (Ren et al., 2015) and on the detection and instance segmentation task on COCO using Mask R-CNN . All methods use the C4 backbone variant  and models on COCO are finetuned using the 1\u00d7 schedule. Best results are in bold. \n\n\nMethod\n\n\nAblations\n\nFor all ablation studies, BARLOW TWINS was trained for 300 epochs instead of 1000 epochs in the previous section. A linear evaluation on ImageNet of this baseline model yielded a 71.4% top-1 accuracy and a 90.2% top-5 accuracy. For all the ablations presented we report the top-1 and top-5 accuracy of training linear classifiers on the 2048 dimensional res5 features using the ImageNet train set.\n\n\nLoss Function Ablations\n\nWe alter our loss function (eqn. 1) in several ways to test the necessity of each term of the loss function, and to experiment with different practices popular in other loss functions for SSL, such as IN-FONCE. Table 5 recapitulates the different loss functions tested along with their results on a linear evaluation benchmark of Imagenet. First we find that removing the invariance term (on-diagonal term) or the redundancy reduction term (off-diagonal term) of our loss function leads to worse/collapsed solutions, as expected. We then study the effect of different normalization strategies. We first try to normalize the embeddings along the feature dimension so that they lie on the unit sphere, as it is common practice for losses measuring a cosine similarity (Chen et al., 2020a;Grill et al., 2020;Wang & Isola, 2020). Specifically, we first normalize the embeddings along the batch dimension (with mean subtraction), then normalize the embeddings along the feature dimension (without mean subtraction), and finally we measure the (unnormalized) covariance matrix instead of the (normalized) cross-correlation matrix in eqn. 2. The performance is slightly reduced. Second, we try to remove batch-normalization operations in the two hidden layers of the projector network MLP. The performance is barely affected. Third, in addition to removing the batch-normalization in the hidden layers, we replace the cross-correlation matrix in eqn. 2 by the crosscovariance matrix (which means the features are no longer normalized along the batch dimension). The performance is substantially reduced. We finally try a cross-entropy loss with temperature, for which the on-diagonal term and off-diagonal term is controlled by a temperature hyperparameter \u03c4 and coefficient \u03bb: L = \u2212 log i exp(C ii /\u03c4 ) + \u03bb log i j =i exp(max(C ij , 0)/\u03c4 ). The performance is reduced. Table 5. Loss function explorations. We ablate the invariance and redundancy terms in our proposed loss and observe that both terms are necessary for good performance. We also experiment with different normalization schemes and a cross-entropy loss and observe reduced performance.\n\n\nLoss function\n\nTop-  (Chen et al., 2020a)). We thus sought to test the robustness of BARLOW TWINS to small batch sizes. In order to adapt our model to different batch sizes, we performed a grid search on LARS learning rates for each batch size. We find that, unlike SIMCLR, our model is robust to small batch sizes (Fig. 2), with a performance almost unaffected for a batch as small as 256. In comparison the accuracy for SimCLR drops about 4 p.p. for batch size 256. This robustness to small batch size, also found in non-contrastive methods such as BYOL, further demonstrates that our method is not only conceptually (see Discussion) but also empirically different than the INFONCE objective.\n\n\nEffect of Removing Augmentations\n\nWe find that our model is not robust to removing some types of data augmentations, like SIMCLR but unlike BYOL (Fig. 3). While this can be seen as a disadvantage of our method compared to BYOL, it can also be argued that the representations learned by our method are better controlled by the specific set of distortions used, as opposed to BYOL for which the invariances learned seem generic and intriguingly independent of the specific distortions used.\n\n\nProjector Network Depth & Width\n\nFor other SSL methods, such as BYOL and SIMCLR, the projector network drastically reduces the dimensionality of the ResNet output. To compare the effect of the batch size across methods, for each method we report the difference between the top-1 accuracy at a given batch size and the best obtained accuracy among all batch size tested. BYOL: best accuracy is 72.5% for a batch size of 4096 (data from  fig. 3A). SIMCLR: best accuracy is 67.1% for a batch size of 4096 (data from (Chen et al., 2020a) fig. 9, model trained for 300 epochs). BARLOW TWINS: best accuracy is 71.7% for a batch size of 1024. In stark contrast, we find that BARLOW TWINS performs better when the dimensionality of the projector network output is very large. Other methods rapidly saturate when the dimensionality of the output increases, but our method keeps improving with all output dimensionality tested (Fig.  4). This result is quite surprising because the output of the ResNet is kept fixed to 2048, which acts as a dimensionality bottleneck in our model and sets the limit of the intrinsic dimensionality of the representation. In addition, similarly to other methods, we find that our model performs better when the projector network has more layers, with a saturation of the performance for 3 layers.  Breaking Symmetry Many SSL methods (e.g. BYOL, SIMSIAM, SWAV) rely on different symmetry-breaking mechanisms to avoid trivial solutions. Our loss function avoids these trivial solutions by construction, even in the case of symmetric networks. It is however interesting to ask whether breaking symmetry can further improve the performance of our network. Following SIMSIAM and BYOL, we experiment with adding a predictor network composed of 2 fully connected layers of size 8192 to one of the network (with batch normalization followed by a ReLU nonlinearity in the hidden layer) and/or a stop-gradient mechanism on the other network. We find that these asymmetries slightly decrease the performance of our network (see Table 6). BYOL with a larger projector/predictor/embedding For a fair comparison with BYOL, we also evaluated BYOL with a wider and/or deeper projector head (3-layer MLP), a wider and/or deeper predictor head, and a larger dimensionality of the embedding. BYOL did not improve under these conditions (see Table 7). Sensitivity to \u03bb. We also explored the sensitivity of BAR-LOW TWINS to the hyperparameter \u03bb, which trades off the desiderata of invariance and informativeness of the embeddings. We find that BARLOW TWINS is not very sensitive to this hyperparameter (Fig. 5). Top-1 Accuracy \n\n\nDiscussion\n\nBARLOW TWINS learns self-supervised representations through a joint embedding of distorted images, with an objective function that maximizes similarity between the embedding vectors while reducing redundancy between their components. Our method does not require large batches of samples, nor does it require any particular asymmetry in the twin network structure. We discuss next the similarities and differences between our method and prior art, both from a conceptual and an empirical standpoint. For ease of comparison, all objective functions are recast with a common set of notations. The discussion ends with future directions.\n\n\nComparison with Prior Art\n\ninfoNCE The INFONCE loss, where NCE stands for Noise-Contrastive Estimation (Gutmann & Hyv\u00e4rinen, 2010), is a popular type of contrastive loss function used for self-supervised learning (e.g. (Chen et al., 2020a;He et al., 2019;H\u00e9naff et al., 2019;Oord et al., 2018)). It can be instantiated as:\nL inf oN CE \u2212 b z A b , z B b i \u03c4 z A b 2 z B b 2 similarity term + b log \uf8eb \uf8ed b =b exp z A b , z B b i \u03c4 z A b 2 z B b 2 \uf8f6 \uf8f8 contrastive term\nwhere z A and z B are the twin network outputs, b indexes the sample in a batch, i indexes the vector component of the output, and \u03c4 is a positive constant called temperature in analogy to statistical physics.\n\nFor ready comparison, we rewrite BARLOW TWINS loss function with the same notations:\nL BT = i 1 \u2212 z A \u00b7,i , z B \u00b7,i b z A \u00b7,i 2 z B \u00b7,i 2 2 invariance term +\u03bb i j =i z A \u00b7,i , z B \u00b7,j b z A \u00b7,i 2 z B\n\u00b7,j 2 2 redundancy reduction term Both BARLOW TWINS' and INFONCE's objective functions have two terms, the first aiming at making the embeddings invariant to the distortions fed to the twin networks, the second aiming at maximizing the variability of the embedding learned. Another common point between the two losses is that they both rely on batch statistics to measure this variability. However, the INFONCE objective maximizes the variability of the embeddings by maximizing the pairwise distance between all pairs of samples, whereas our method does so by decorrelating the components of the embeddings vectors.\n\nThe contrastive term in INFONCE can be interpreted as a non-parametric estimation of the entropy of the distribution of embeddings (Wang & Isola, 2020). An issue that arises with non-parametric entropy estimators is that they are prone to the curse of dimensionality: they can only be estimated reliably in a low-dimensional setting, and they typically require a large number of samples.\n\nIn contrast, our loss can be interpreted as a proxy entropy estimator of the distribution of embeddings under a Gaussian parametrization (see Appendix A). Thanks to this simplified parametrization, the variability of the embedding can be estimated from much fewer samples, and on very largedimensional embeddings. Indeed, in the ablation studies that we perform, we find that (1) our method is robust to small batches unlike the popular INFONCE-based method SIMCLR, and (2) our method benefits from using very large dimensional embeddings, unlike INFONCE-based methods which do not see a benefit in increasing the dimensionality of the output.\n\nOur loss presents several other interesting differences with infoNCE:\n\n\u2022 In INFONCE, the embeddings are typically normalized along the feature dimension to compute a cosine similarity between embedded samples. We normalize the embeddings along the batch dimension instead.\n\n\u2022 In our method, there is a parameter \u03bb that trades off how much emphasis is put on the invariance term vs. the redundancy reduction term. This parameter can be interpreted as the trade-off parameter in the Information Bottleneck framework (see Appendix A). This parameter is not present in INFONCE.\n\n\u2022 INFONCE also has a hyperparameter, the temperature, which can be interpreted as the width of the kernel in a non-parametric kernel density estimation of entropy, and practically weighs the relative importance of the hardest negative samples present in the batch (Chen et al., 2020a).\n\nA number of alternative methods to ours have been proposed to alleviate the reliance on large batches of the INFONCE loss. For example, MoCo (Chen et al., 2020b;He et al., 2019) builds a dynamic dictionary of negative samples with a queue and a moving-averaged encoder. This enables building a large and consistent dictionary on-the-fly that facilitates contrastive unsupervised learning. MoCo typically needs to store > 60,000 sample embeddings. In contrast, our method does not require such a large dictionary, since it works well with a relatively small batch size (e.g. 256).\n\nAsymmetric Twins BOOTSTRAP-YOUR-OWN-LATENT (aka BYOL)  and SIMSIAM (Chen & He, 2020) are two recent methods which use a simple cosine similarity between twin embeddings as an objective function, without any contrastive term:\nL cosine = \u2212 b z A b , z B b i z A b 2 z B b 2\nSurprisingly, these methods successfully avoid trivial solutions by introducing some asymmetry in the architecture and learning procedure of the twin networks. For example, BYOL uses a predictor network which breaks the symmetry between the two networks, and also enforces an exponential moving average on the target network weights to slow down the progression of the weights on the target network. Combined together, these two mechanisms surprisingly avoid trivial solutions. The reasons behind this success are the subject of recent theoretical and empirical studies (Chen & He, 2020;Fetterman & Albrecht, 2020;Richemond et al., 2020;Tian et al., 2020). In particular, the ablation study (Chen & He, 2020) shows that the moving average is not necessary, but that stop-gradient on one of the branch and the presence of the predictor network are two crucial elements to avoid collapse. Other works show that batch normalization (Fetterman & Albrecht, 2020;Tian et al., 2020) or alternatively group normalization  could play an important role in avoiding collapse.\n\nLike our method, these asymmetric methods do not require large batches, since in their case there is no interaction between batch samples in the objective function.\n\nIt should be noted however that these asymmetric methods cannot be described as the optimization of an overall learning objective. Instead, there exists trivial solutions to the learning objective that these methods avoid via particular implementation choices and/or the result of non-trivial learning dynamics. In contrast, our method avoids trivial solutions by construction, making our method conceptually simpler and more principled than these alternatives (until their principle is discovered, see (Tian et al., 2021) for an early attempt).\n\nWhitening In a concurrent work, (Ermolov et al., 2020) propose W-MSE. Acting on the embeddings from identical twin networks, this method performs a differentiable whitening operation (via Cholesky decomposition) of each batch of embeddings before computing a simple cosine similarity between the whitened embeddings of the twin networks. In contrast, the redundancy reduction term in our loss encourages the whitening of the batch embeddings as a soft constraint. The current W-MSE model achieves 66.3% top-1 accuracy on the Imagenet linear evaluation benchmark. It is an interesting direction for future studies to determine whether improved versions of this hard-whitening strategy could also lead to state-of-the-art results on these large-scale computer vision benchmarks.\n\nClustering These methods, such as DEEPCLUSTER (Caron et al., 2018), SWAV (Caron et al., 2020), SELA (Asano et al., 2020), perform contrastive-like comparisons without the requirement to compute all pairwise distances. Specifically, these methods simultaneously cluster the data while enforcing consistency between cluster assignments produced for different distortions of the same image, instead of comparing features directly as in contrastive learning. Clustering methods are also prone to collapse, e.g., empty clusters in k-means and avoiding them relies on careful implementation details. Online clustering methods like SWAV can be trained with large and small batches but require storing features when the number of clusters is much larger than the batch size. Clustering methods can also be combined with contrastive learning (Li et al., 2021) to prevent collapse.\n\nNoise As Targets This method (Bojanowski & Joulin, 2017) learns to map samples to fixed random targets on the unit sphere, which can be interpreted as a form of whitening. This objective uses a single network, and hence does not leverage the distortions induced by twin networks. Predefining random targets might limit the flexibility of the representation that can be learned.\n\nIMAX In the early days of SSL, (Becker & Hinton, 1992;Zemel & Hinton, 1990) proposed a loss function between twin networks given by:\nL IM AX log |C (Z A \u2212Z B ) | \u2212 log |C (Z A +Z B ) | where | | denotes the determinant of a matrix, C (Z A \u2212Z B )\nis the covariance matrix of the difference of the outputs of the twin networks and C (Z A +Z B ) the covariance of the sum of these outputs. It can be shown that this objective maximizes the information between the twin network representations under the assumptions that the two representations are noisy versions of the same underlying Gaussian signal, and that the noise is independant, additive and Gaussian. This objective is similar to ours in the sense that there is one term that encourages the two representations to be similar and another term that encourages the units to be decorrelated. However, unlike IMAX, our objective is not directly an information quantity, and we have an extra trade-off parameter \u03bb that trades off the two terms of our loss. The IMAX objective was used in early work so it is not clear whether it can scale to large computer vision tasks. Our attempts to make it work on ImageNet were not successful.\n\n\nFuture Directions\n\nWe observe a steady improvement of the performance of our method as we increase the dimensionality of the embeddings (i.e. of the last layer of the projector network). This intriguing result is in stark contrast with other popular methods for SSL, such as SIMCLR (Chen et al., 2020a) and BYOL , for which increasing the dimensionality of the embeddings rapidly saturates performance. It is a promising avenue to continue this exploration for even higher dimensional embeddings (> 16,000), but this would require the development of new methods or alternative hardware to accommodate the memory requirements of operating on such large embeddings.\n\nOur method is just one possible instanciation of the Information Bottleneck principle applied to SSL. We believe that further refinements of the proposed loss function and algorithm could lead to more efficient solutions and even better performances. For example, the redundancy reduction term is currently computed from the off-diagonal terms of the crosscorrelation matrix between the twin network embeddings, but alternatively it could be computed from the off-diagonal terms of the auto-correlation matrix of a single network's embedding. Our preliminary analyses seem to indicate that this alternative leads to similar performances (not shown).\n\nA modified loss could also be applied to the (unnormalized) cross-covariance matrix instead of the (normalized) crosscorrelation matrix (see Ablations for preliminary analyses). Figure 6. The information bottleneck principle applied to selfsupervised learning (SSL) posits that the objective of SSL is to learn a representation Z \u03b8 which is informative about the image sample, but invariant (i.e. uninformative) to the specific distortions that are applied to this sample. BARLOW TWINS can be viewed as a specific instanciation of the information bottleneck objective.\n\n\nA. Connection between BARLOW TWINS and the Information Bottleneck Principle\n\nWe explore in this appendix the connection between BAR-LOW TWINS' loss function and the Information Bottleneck (IB) principle (Tishby & Zaslavsky, 2015;Tishby et al., 2000).\n\nAs a reminder, BARLOW TWINS' loss function is given by:\nL BT i (1 \u2212 C ii ) 2 invariance term + \u03bb i j =i C ij 2 redundancy reduction term(3)\nwhere \u03bb is a positive constant trading off the importance of the first and second terms of the loss, and where C is the cross-correlation matrix computed between the outputs of the two identical networks along the batch dimension :\nC ij b z A b,i z B b,j b (z A b,i ) 2 b (z B b,j ) 2(4)\nwhere b indexes batch samples and i, j index the vector dimension of the networks' outputs. C is a square matrix with size the dimensionality of the network's output, and with values comprised between -1 (i.e. perfect anti-correlation) and 1 (i.e. perfect correlation).\n\nApplied to self-supervised learning, the IB principle posits that a desirable representation should be as informative as possible about the sample represented while being as invariant (i.e. non-informative) as possible to distortions of that sample (here the data augmentations used) (Fig. 6). This trade-off is captured by the following loss function:\nIB \u03b8 I(Z \u03b8 , Y ) \u2212 \u03b2I(Z \u03b8 , X)(5)\nwhere I(., .) denotes mutual information and \u03b2 is a positive scalar trading off the desideratas of preserving information and being invariant to distortions.\n\nUsing a classical identity for mutual information, we can rewrite equation 5 as:\nIB \u03b8 = [H(Z \u03b8 ) \u2212 : 0 H(Z \u03b8 |Y )] \u2212 \u03b2[H(Z \u03b8 ) \u2212 H(Z \u03b8 |X)] (6)\nwhere H(.) denotes entropy. The conditional entropy H(Z \u03b8 |Y ) -the entropy of the representation conditioned on a specific distorted sample-cancels to 0 because the function f \u03b8 is deterministic, and so the representation Z \u03b8 conditioned on the input sample Y is perfectly known and has zero entropy. Since the overall scaling factor of the loss function is not important, we can rearrange equation 6 as:\nIB \u03b8 = H(Z \u03b8 |X) + 1 \u2212 \u03b2 \u03b2 H(Z \u03b8 )(7)\nMeasuring the entropy of a high-dimensional signal generally requires vast amounts of data, much larger than the size of a single batch. In order to circumvent this difficulty, we make the simplifying assumption that the representation Z is distributed as a Gaussian. The entropy of a Gaussian distribution is simply given by the logarithm of the determinant of its covariance function (up to a constant corresponding to the assumed discretization level that we ignore here) (Cai et al., 2015). The loss function becomes:\nIB \u03b8 = E X log |C Z \u03b8 |X | + 1 \u2212 \u03b2 \u03b2 log |C Z \u03b8 |(8)\nThis equation is still not exactly the one we optimize for in practice (see eqn. 3 and 4). Indeed, our loss function is only connected to the IB loss given by eqn. 8 through the following simplifications and approximations:\n\n\u2022 In the case where \u03b2 <= 1, it is easy to see from eqn. 8 that the best solution to the IB trade-off is to set the representation to a constant that does not depend on the input. This trade-off thus does not lead to interesting representations and can be ignored. When \u03b2 > 1, we note that the second term of eqn. 8 is preceded by a negative constant. We can thus simply replace 1\u2212\u03b2 \u03b2 by a new positive constant \u03bb, preceded by a negative sign.\n\n\u2022 In practice, we find that directly optimizing the determinant of the covariance matrices does not lead to SoTA solutions. Instead, we replace the second term of the loss in eqn. 8 (maximizing the information about samples), by the proxy which consist in simply minimizing the Frobenius norm of the cross-correlation matrix. If the representations are assumed to be rescaled to 1 along the batch dimension before entering the loss (an assumption we are free to make since the cross-correlation matrix is invariant to this re-scaling), this minimization only affects the off-diagonal terms of the covariance matrix (the diagonal terms being fixed to 1 by the re-scaling) and encourages them to be as close to 0 as possible. It is clear that this surrogate objective, which consists in decorrelating all output units, has the same global optimum than the original information maximization objective.\n\n\u2022 For consistency with eqn. 8, the second term in BAR-LOW TWINS' loss should be computed from the autocorrelation matrix of one of the twin networks, instead of the cross-correlation matrix between twin networks. In practice, we do not see a strong difference in performance between these alternatives.\n\n\u2022 Similarly, it can easily be shown that the first term of eqn. 8 (minimizing the information the representation contains about the distortions) has the same global optimum than the first term of eqn. 3, which maximizes the alignment between representations of pairs of distorted samples.\n\n\nB. Evaluations on ImageNet\n\n\nB.1. Linear evaluation on ImageNet\n\nThe linear classifier is trained for 100 epochs with a learning rate of 0.3 and a cosine learning rate schedule. We minimize the cross-entropy loss with the SGD optimizer with momentum and weight decay of 10 \u22126 . We use a batch size of 256. At training time we augment an input image by taking a random crop, resizing it to 224 \u00d7 224, and optionally flipping the image horizontally. At test time we resize the image to 256 \u00d7 256 and center-crop it to a size of 224 \u00d7 224.\n\n\nB.2. Semi-supervised training on ImageNet\n\nWe train for 20 epochs with a learning rate of 0.002 for the ResNet-50 and 0.5 for the final classification layer. The learning rate is multiplied by a factor of 0.2 after the 12th and 16th epoch. We minimize the cross-entropy loss with the SGD optimizer with momentum and do not use weight decay. We use a batch size of 256. The image augmentations are the same as in the linear evaluation setting.\n\n\nC. Transfer Learning\n\n\nC.1. Linear evaluation\n\nWe follow the exact settings from PIRL (Misra & van der Maaten, 2019) for evaluating linear classifiers on the Places-205, VOC07 and iNaturalist2018 datasets. For Places-205 and iNaturalist2018 we train a linear classifier with SGD (14 epochs on Places-205, 84 epochs on iNaturalist2018) with a learning rate of 0.01 reduced by a factor of 10 at two equally spaced intervals, a weight decay of 5 \u00d7 10 \u22124 and SGD momentum of 0.9. We train SVM classifiers on the VOC07 dataset where the C values are computed using cross-validation.\n\n\nC.2. Object Detection and Instance Segmentation\n\nWe use the detectron2 library  for training the detection models and closely follow the evaluation settings from (He et al., 2019). The backbone ResNet50 network for Faster R-CNN (Ren et al., 2015) and Mask R-CNN  is initialized using our BARLOW TWINS pretrained model.\n\n\nVOC07+12\n\nWe use the VOC07+12 trainval set of 16K images for training a Faster R-CNN (Ren et al., 2015) C-4 backbone for 24K iterations using a batch size of 16 across 8 GPUs using SyncBatchNorm. The initial learning rate for the model is 0.1 which is reduced by a factor of 10 after 18K and 22K iterations. We use linear warmup (Goyal et al., 2017) with a slope of 0.333 for 1000 iterations.\n\nCOCO We train Mask R-CNN  C-4 backbone on the COCO 2017 train split and report results on the val split. We use a learning rate of 0.03 and keep the other parameters the same as in the 1\u00d7 schedule in detectron2.\n\n\n: weight on the off-diagonal terms # N: batch size # D: dimensionality of the embeddings # # mm: matrix-matrix multiplication # off_diagonal: off-diagonal elements of a matrix # eye: identity matrix for x in loader: # load a batch with N samples # two randomly augmented versions of x y_a, y_b = augment(x) # compute embeddings z_a = f(y_a) # NxD z_b = f(y_b) # NxD # normalize repr. along the batch dimension z_a_norm = (z_a -z_a.mean(0)) / z_a.std(0) # NxD z_b_norm = (z_b -z_b.mean(0)) / z_b.std(0) # NxD # cross-correlation matrix c = mm(z_a_norm.T, z_b_norm) / N # DxD # loss c_diff = (c -eye(D)).pow(2) # DxD # multiply off-diagonal elems of c_diff by lambda off_diagonal(c_diff).mul_(lambda) loss = c_diff.sum() # optimization step loss.backward() optimizer.step() 2048 output units) followed by a projector network. The projector network has three linear layers, each with 8192 output units. The first two layers of the projector are followed by a batch normalization layer and rectified linear units. We call the output of the encoder the 'representations' and the output of the projector the 'embeddings'. The representations are used for downstream tasks and the embeddings are fed to the loss function of BARLOW TWINS.\n\nFigure 2 .\n2Effect of batch size.\n\nFigure 3 .\n3Effect of progressively removing data augmentations. Data for BYOL and SIMCLR (repro) is from fig 3b.\n\nFigure 4 .\n4Effect of the dimensionality of the last layer of the projector network on performance. The parameter \u03bb is kept fix for all dimensionalities tested. Data for SIMCLR is from(Chen et al., 2020a) fig 8;Data for BYOL is from Table 14b.\n\nFigure 5 .\n5Sensitivity of BARLOW TWINS to the hyperparameter \u03bb\n\nTable 1 .\n1Top-1 and top-5 accuracies (in %) under linear evaluation on ImageNet. All models use a ResNet-50 encoder. Top-3 best self-supervised methods are underlined.Method \nTop-1 Top-5 \n\nSupervised \n76.5 \n\nMOCO \n60.6 \nPIRL \n63.6 \n-\nSIMCLR \n69.3 \n89.0 \nMOCO V2 \n71.1 \n90.1 \nSIMSIAM \n71.3 \n-\nSWAV (w/o multi-crop) \n71.8 \n-\nBYOL \n74.3 \n91.6 \nSWAV \n75.3 \n-\nBARLOW TWINS (ours) \n73.2 \n91.0 \n\n\n\nTable 2 .\n2Semi-supervised learning on ImageNet using 1% and 10% training examples. Results for the supervised method are from(Zhai et al., 2019). Best results are in bold.Table 3. Transfer learning: image classification. We benchmark learned representations on the image classification task by training linear classifiers on fixed features. We report top-1 accuracy on Places-205 and iNat18 datasets, and classification mAP on VOC07. Top-3 best self-supervised methods are underlined. parameters of the ConvNet remain unchanged. We use a diverse set of datasets for this evaluation -Places-205(Zhou et al., 2014) for scene classification, VOC07(Everingham et al., 2010) for multi-label image classification, and iNat-uralist2018 (Van Horn et al., 2018) for fine-grained image classification. We report our results inMethod \nTop-1 \nTop-5 \n\n1% 10% 1% 10% \n\nSupervised \n25.4 56.4 48.4 80.4 \n\nPIRL \n-\n-\n57.2 83.8 \nSIMCLR \n48.3 65.6 75.5 87.8 \nBYOL \n53.2 68.8 78.4 89.0 \nSWAV \n53.9 70.2 78.5 89.9 \nBARLOW TWINS (ours) 55.0 69.7 79.2 89.3 \n\nMethod \nPlaces-205 VOC07 iNat18 \n\nSupervised \n53.2 \n87.5 \n46.7 \n\nSimCLR \n52.5 \n85.5 \n37.2 \nMoCo-v2 \n51.8 \n86.4 \n38.6 \nSwAV (w/o multi-crop) \n52.8 \n86.4 \n39.5 \nSwAV \n56.7 \n88.9 \n48.6 \nBYOL \n54.0 \n86.6 \n47.6 \nBARLOW TWINS (ours) \n54.1 \n86.2 \n46.5 \n\n\n\n\nRobustness to Batch Size The INFONCE loss that draws negative examples from the minibatch suffer performance drops when the batch size is reduced (e.g. SIMCLR1 Top-5 \n\nBaseline \n71.4 \n90.2 \n\nOnly invariance term (on-diag term) \n57.3 \n80.5 \nOnly red. red. term (off-diag term) \n0.1 \n0.5 \n\nNormalization along feature dim. \n69.8 \n88.8 \nNo BN in MLP \n71.2 \n89.7 \nNo BN in MLP + no Normalization \n53.4 \n76.7 \n\nCross-entropy with temp. \n63.3 \n85.7 \n\n\n\nTable 6 .\n6Effect of asymmetric settingscase \nstop-gradient predictor Top-1 Top-5 \n\nBaseline \n-\n-\n71.4 \n90.2 \n\n(a) \n-\n70.5 \n89.0 \n(b) \n-\n70.2 \n89.0 \n(c) \n61.3 \n83.5 \n\n\n\nTable 7 .\n7Wider and/or deeper projector and predictor heads and larger dimensionality of the embedding did not improve the performance of BYOL.Projector \nPredictor \nAcc1 \nDescription \n4096-256 \n4096-256 \n74.1% \nbaseline \n4096-4096-256 \n4096-256 \n74.0% \n3 layer proj, 2 layer pred, 256-d repr. \n4096-4096-256 \n4096-4096-256 \n73.2% \n3 layer proj, 3 layer pred, 256-d repr. \n4096-4096-512 \n4096-512 \n73.7% \n3 layer proj, 2 layer pred, 512-d repr. \n4096-4096-512 \n4096-4096-512 \n73.2% \n3 layer proj, 3 layer pred, 512-d repr. \n8192-8192-8192 \n8192-8192 \n72.3% \nsame proj as BT, 2 layer pred, 8192-d repr. \n\n\nAcknowledgementsWe thank Pascal Vincent, Yubei Chen and Samuel Ocko for helpful insights on the mathematical connection to the infoNCE loss, Robert Geirhos and Adrien Bardes for extra analyses not included in the manuscript and Xinlei Chen, Mathilde Caron, Armand Joulin, Reuben Feinman and Ulisse Ferrari for useful comments on the manuscript.\nSelf-labelling via simultaneous clustering and representation learning. Y M Asano, C Rupprecht, A Vedaldi, International Conference on Learning Representations (ICLR). 2020Asano, Y. M., Rupprecht, C., and Vedaldi, A. Self-labelling via simultaneous clustering and representation learning. International Conference on Learning Representations (ICLR), 2020.\n\nEnd-to-end Optimized Image Compression. J Ball\u00e9, V Laparra, E P Simoncelli, International Conference on Learning Representations (ICLR. Ball\u00e9, J., Laparra, V., and Simoncelli, E. P. End-to-end Opti- mized Image Compression. In International Conference on Learning Representations (ICLR), 2017.\n\nRedundancy reduction revisited. H Barlow, 0954- 898XNetwork (Bristol, England). 123Barlow, H. Redundancy reduction revisited. Network (Bris- tol, England), 12(3):241-253, August 2001. ISSN 0954- 898X.\n\nPossible Principles Underlying the Transformations of Sensory Messages. H B Barlow, Sensory Communication. The MIT PressBarlow, H. B. Possible Principles Underlying the Transfor- mations of Sensory Messages. in Sensory Communica- tion, The MIT Press, 1961.\n\nSelf-organizing neural network that discovers surfaces in random-dot stereograms. S Becker, G E Hinton, Nature. 3556356Becker, S. and Hinton, G. E. Self-organizing neural net- work that discovers surfaces in random-dot stereograms. Nature, 355(6356):161-163, January 1992.\n\nUnsupervised learning by predicting noise. P Bojanowski, A Joulin, Proceedings of the International Conference on Machine Learning (ICML). the International Conference on Machine Learning (ICML)Bojanowski, P. and Joulin, A. Unsupervised learning by predicting noise. In Proceedings of the International Conference on Machine Learning (ICML), 2017.\n\nLaw of Log Determinant of Sample Covariance Matrix and Optimal Estimation of Differential Entropy for High-Dimensional Gaussian Distributions. T T Cai, T Liang, H H Zhou, 10.1016/j.jmva.2015.02.003Journal of Multivariate Analysis. 137Cai, T. T., Liang, T., and Zhou, H. H. Law of Log Deter- minant of Sample Covariance Matrix and Optimal Es- timation of Differential Entropy for High-Dimensional Gaussian Distributions. Journal of Multivariate Analysis, 137, 2015. doi: 10.1016/j.jmva.2015.02.003.\n\nDeep clustering for unsupervised learning of visual features. M Caron, P Bojanowski, A Joulin, M Douze, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Caron, M., Bojanowski, P., Joulin, A., and Douze, M. Deep clustering for unsupervised learning of visual features. In Proceedings of the European Conference on Computer Vision (ECCV), 2018.\n\nUnsupervised learning of visual features by contrasting cluster assignments. M Caron, I Misra, J Mairal, P Goyal, P Bojanowski, Joulin , A , NeurIPS. Caron, M., Misra, I., Mairal, J., Goyal, P., Bojanowski, P., and Joulin, A. Unsupervised learning of visual features by contrasting cluster assignments. In NeurIPS, 2020.\n\nA simple framework for contrastive learning of visual representations. T Chen, S Kornblith, M Norouzi, G Hinton, arXiv:2002.05709arXiv preprintChen, T., Kornblith, S., Norouzi, M., and Hinton, G. A simple framework for contrastive learning of visual rep- resentations. arXiv preprint arXiv:2002.05709, 2020a.\n\nExploring simple siamese representation learning. X Chen, K He, arXiv:2011.10566arXiv preprintChen, X. and He, K. Exploring simple siamese representa- tion learning. arXiv preprint arXiv:2011.10566, 2020.\n\nX Chen, H Fan, R Girshick, K He, arXiv:2003.04297Improved baselines with momentum contrastive learning. arXiv preprintChen, X., Fan, H., Girshick, R., and He, K. Improved baselines with momentum contrastive learning. arXiv preprint arXiv:2003.04297, 2020b.\n\nNon-linear Feature Extraction by Redundancy Reduction in an Unsupervised Stochastic Neural Network. G Deco, L Parra, 10.1016/S0893-6080(96)00110-4Neural Networks. 104Deco, G. and Parra, L. Non-linear Feature Extraction by Redundancy Reduction in an Unsupervised Stochastic Neural Network. Neural Networks, 10(4):683-691, June 1997. ISSN 0893-6080. doi: 10.1016/S0893-6080(96) 00110-4.\n\nImagenet: A large-scale hierarchical image database. J Deng, W Dong, R Socher, L.-J Li, K Li, L Fei-Fei, Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR). the Conference on Computer Vision and Pattern Recognition (CVPR)Deng, J., Dong, W., Socher, R., Li, L.-J., Li, K., and Fei-Fei, L. Imagenet: A large-scale hierarchical image database. In Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR), 2009.\n\nWhitening for Self-Supervised Representation Learning. A Ermolov, A Siarohin, E Sangineto, N Sebe, arXiv:2007.06346arXiv preprintErmolov, A., Siarohin, A., Sangineto, E., and Sebe, N. Whitening for Self-Supervised Representation Learning. arXiv preprint arXiv:2007.06346, 2020.\n\nThe pascal visual object classes (voc) challenge. M Everingham, L Van Gool, C K Williams, J Winn, A Zisserman, International journal of computer vision. 882Everingham, M., Van Gool, L., Williams, C. K., Winn, J., and Zisserman, A. The pascal visual object classes (voc) challenge. International journal of computer vision, 88 (2):303-338, 2010.\n\nUnderstanding selfsupervised and contrastive learning with \"Bootstrap Your Own Latent\" (BYOL). A Fetterman, J Albrecht, Untitled AIFetterman, A. and Albrecht, J. Understanding self- supervised and contrastive learning with \"Bootstrap Your Own Latent\" (BYOL). Untitled AI, August 2020.\n\nForming sparse representations by local anti-Hebbian learning. P F\u00f6ldi\u00e1k, 1432-0770. doi: 10.1007/ BF02331346Biological Cybernetics. 642F\u00f6ldi\u00e1k, P. Forming sparse representations by local anti- Hebbian learning. Biological Cybernetics, 64(2):165- 170, December 1990. ISSN 1432-0770. doi: 10.1007/ BF02331346.\n\nP Goyal, P Doll\u00e1r, R Girshick, P Noordhuis, L Wesolowski, A Kyrola, A Tulloch, Y Jia, K He, Accurate, arXiv:1706.02677large minibatch sgd: Training imagenet in 1 hour. arXiv preprintGoyal, P., Doll\u00e1r, P., Girshick, R., Noordhuis, P., Wesolowski, L., Kyrola, A., Tulloch, A., Jia, Y., and He, K. Accurate, large minibatch sgd: Training imagenet in 1 hour. arXiv preprint arXiv:1706.02677, 2017.\n\nScaling and benchmarking self-supervised visual representation learning. P Goyal, D Mahajan, A Gupta, I Misra, Proceedings of the International Conference on Computer Vision (ICCV). the International Conference on Computer Vision (ICCV)Goyal, P., Mahajan, D., Gupta, A., and Misra, I. Scaling and benchmarking self-supervised visual representation learning. Proceedings of the International Conference on Computer Vision (ICCV), 2019.\n\nBootstrap your own latent: A new approach to self-supervised learning. J.-B Grill, F Strub, F Altch\u00e9, C Tallec, P H Richemond, E Buchatskaya, C Doersch, B A Pires, Z D Guo, M G Azar, NeurIPS. Grill, J.-B., Strub, F., Altch\u00e9, F., Tallec, C., Richemond, P. H., Buchatskaya, E., Doersch, C., Pires, B. A., Guo, Z. D., Azar, M. G., et al. Bootstrap your own latent: A new approach to self-supervised learning. In NeurIPS, 2020.\n\nNoise-contrastive estimation: A new estimation principle for unnormalized statistical models. M Gutmann, A Hyv\u00e4rinen, Proceedings of the Thirteenth International Conference on Artificial Intelligence and Statistics. JMLR Workshop and Conference Proceedings. the Thirteenth International Conference on Artificial Intelligence and Statistics. JMLR Workshop and Conference ProceedingsGutmann, M. and Hyv\u00e4rinen, A. Noise-contrastive estima- tion: A new estimation principle for unnormalized statis- tical models. In Proceedings of the Thirteenth Interna- tional Conference on Artificial Intelligence and Statistics. JMLR Workshop and Conference Proceedings, 2010.\n\nDimensionality reduction by learning an invariant mapping. R Hadsell, S Chopra, Y Lecun, Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR). the Conference on Computer Vision and Pattern Recognition (CVPR)Hadsell, R., Chopra, S., and LeCun, Y. Dimensionality reduction by learning an invariant mapping. In Proceed- ings of the Conference on Computer Vision and Pattern Recognition (CVPR), 2006.\n\nDeep residual learning for image recognition. K He, X Zhang, S Ren, J Sun, Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR). the Conference on Computer Vision and Pattern Recognition (CVPR)He, K., Zhang, X., Ren, S., and Sun, J. Deep residual learning for image recognition. In Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR), 2016.\n\nMask r-cnn. K He, G Gkioxari, P Doll\u00e1r, R Girshick, Proceedings of the International Conference on Computer Vision (ICCV). the International Conference on Computer Vision (ICCV)He, K., Gkioxari, G., Doll\u00e1r, P., and Girshick, R. Mask r-cnn. In Proceedings of the International Conference on Computer Vision (ICCV), 2017.\n\nMomentum contrast for unsupervised visual representation learning. K He, H Fan, Y Wu, S Xie, R Girshick, arXiv:1911.05722arXiv preprintHe, K., Fan, H., Wu, Y., Xie, S., and Girshick, R. Mo- mentum contrast for unsupervised visual representation learning. arXiv preprint arXiv:1911.05722, 2019.\n\nO J H\u00e9naff, A Razavi, C Doersch, S Eslami, A V Oord, arXiv:1905.09272Data-efficient image recognition with contrastive predictive coding. arXiv preprintH\u00e9naff, O. J., Razavi, A., Doersch, C., Eslami, S., and Oord, A. v. d. Data-efficient image recognition with contrastive predictive coding. arXiv preprint arXiv:1905.09272, 2019.\n\nY Li, P Hu, Z Liu, D Peng, J T Zhou, X Peng, Contrastive clustering. In AAAI. 2021Li, Y., Hu, P., Liu, Z., Peng, D., Zhou, J. T., and Peng, X. Contrastive clustering. In AAAI, 2021.\n\nMicrosoft coco: Common objects in context. T.-Y Lin, M Maire, S Belongie, J Hays, P Perona, D Ramanan, P Doll\u00e1r, C L Zitnick, Proceedings of the European Conference on Computer Vision (ECCV). the European Conference on Computer Vision (ECCV)Lin, T.-Y., Maire, M., Belongie, S., Hays, J., Perona, P., Ramanan, D., Doll\u00e1r, P., and Zitnick, C. L. Microsoft coco: Common objects in context. In Proceedings of the European Conference on Computer Vision (ECCV), 2014.\n\nA unified theory of early visual representations from retina to cortex through anatomically constrained deep CNNs. J Lindsey, S A Ocko, S Ganguli, Deny , S , ICLR. Lindsey, J., Ocko, S. A., Ganguli, S., and Deny, S. A unified theory of early visual representations from retina to cortex through anatomically constrained deep CNNs. In ICLR, 2020.\n\nSelf-organization in a perceptual network. R Linsker, 10.1109/2.36Conference Name: Computer. 21Linsker, R. Self-organization in a perceptual network. Com- puter, 21(3):105-117, March 1988. ISSN 1558-0814. doi: 10.1109/2.36. Conference Name: Computer.\n\nI Loshchilov, F Hutter, Sgdr, arXiv:1608.03983Stochastic gradient descent with warm restarts. arXiv preprintLoshchilov, I. and Hutter, F. Sgdr: Stochastic gra- dient descent with warm restarts. arXiv preprint arXiv:1608.03983, 2016.\n\nSelf-supervised learning of pretext-invariant representations. I Misra, L Van Der Maaten, arXiv:1912.01991arXiv preprintMisra, I. and van der Maaten, L. Self-supervised learn- ing of pretext-invariant representations. arXiv preprint arXiv:1912.01991, 2019.\n\nThe emergence of multiple retinal cell types through efficient coding of natural movies. S Ocko, J Lindsey, S Ganguli, Deny , S , In NeurIPS. Ocko, S., Lindsey, J., Ganguli, S., and Deny, S. The emer- gence of multiple retinal cell types through efficient cod- ing of natural movies. In NeurIPS, 2018.\n\nA Oord, Y Li, O Vinyals, arXiv:1807.03748Representation learning with contrastive predictive coding. arXiv preprintOord, A. v. d., Li, Y., and Vinyals, O. Representation learn- ing with contrastive predictive coding. arXiv preprint arXiv:1807.03748, 2018.\n\nRedundancy Reduction as a Strategy for Unsupervised Learning. A N Redlich, 10.1162/neco.1993.5.2.289Conference Name: Neural Computation. 5Redlich, A. N. Redundancy Reduction as a Strategy for Unsupervised Learning. Neural Computation, 5(2):289- 304, March 1993a. ISSN 0899-7667. doi: 10.1162/neco. 1993.5.2.289. Conference Name: Neural Computation.\n\n. A N Redlich, 10.1162/neco.1993.5.5.750Supervised Factorial Learning. Neural Computation. 55Redlich, A. N. Supervised Factorial Learning. Neural Computation, 5(5):750-766, September 1993b. ISSN 0899-7667, 1530-888X. doi: 10.1162/neco.1993.5.5.750.\n\nFaster r-cnn: Towards real-time object detection with region proposal networks. S Ren, K He, R Girshick, J Sun, Advances in Neural Information Processing Systems (NeurIPS). Ren, S., He, K., Girshick, R., and Sun, J. Faster r-cnn: Towards real-time object detection with region proposal networks. In Advances in Neural Information Processing Systems (NeurIPS), 2015.\n\nP H Richemond, J.-B Grill, F Altch\u00e9, C Tallec, F Strub, A Brock, S Smith, S De, R Pascanu, B Piot, M Valko, arXiv:2010.10241BYOL works even without batch statistics. arXiv preprintRichemond, P. H., Grill, J.-B., Altch\u00e9, F., Tallec, C., Strub, F., Brock, A., Smith, S., De, S., Pascanu, R., Piot, B., and Valko, M. BYOL works even without batch statistics. arXiv preprint arXiv:2010.10241, 2020.\n\nSemilinear Predictability Minimization Produces Well-Known Feature Detectors. J Schmidhuber, M Eldracher, B Foltin, 10.1162/neco.1996.8.4.773Conference Name: Neural Computation. 8Schmidhuber, J., Eldracher, M., and Foltin, B. Semilinear Predictability Minimization Produces Well-Known Fea- ture Detectors. Neural Computation, 8(4):773-786, May 1996. ISSN 0899-7667. doi: 10.1162/neco.1996.8.4.773. Conference Name: Neural Computation.\n\nNatural signal statistics and sensory gain control. O Schwartz, E P Simoncelli, 10.1038/90526Nature Neuroscience. 48Nature Publishing GroupSchwartz, O. and Simoncelli, E. P. Natural signal statistics and sensory gain control. Nature Neuroscience, 4(8):819- 825, August 2001. ISSN 1546-1726. doi: 10.1038/90526. Number: 8 Publisher: Nature Publishing Group.\n\nUnderstanding Self-supervised Learning with Dual Deep Networks. Y Tian, L Yu, X Chen, S Ganguli, arXiv:2010.00578arXiv preprintTian, Y., Yu, L., Chen, X., and Ganguli, S. Understand- ing Self-supervised Learning with Dual Deep Networks. arXiv preprint arXiv:2010.00578, 2020.\n\nUnderstanding self-supervised Learning Dynamics without Contrastive Pairs. Y Tian, X Chen, S Ganguli, arXiv:2102.06810arXiv: 2102.06810Tian, Y., Chen, X., and Ganguli, S. Understanding self-supervised Learning Dynamics without Contrastive Pairs. arXiv:2102.06810 [cs], February 2021. arXiv: 2102.06810.\n\nN Tishby, N Zaslavsky, arXiv:1503.02406Deep Learning and the Information Bottleneck Principle. arXiv preprintTishby, N. and Zaslavsky, N. Deep Learning and the Information Bottleneck Principle. arXiv preprint arXiv:1503.02406, 2015.\n\nN Tishby, F C Pereira, W Bialek, arXiv:physics/0004057The information bottleneck method. arXiv preprintTishby, N., Pereira, F. C., and Bialek, W. The information bottleneck method. arXiv preprint arXiv:physics/0004057, 2000.\n\nThe inaturalist species classification and detection dataset. G Van Horn, O Mac Aodha, Y Song, Y Cui, C Sun, A Shepard, H Adam, P Perona, S Belongie, Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR). the Conference on Computer Vision and Pattern Recognition (CVPR)Van Horn, G., Mac Aodha, O., Song, Y., Cui, Y., Sun, C., Shepard, A., Adam, H., Perona, P., and Belongie, S. The inaturalist species classification and detection dataset. In Proceedings of the Conference on Computer Vision and Pattern Recognition (CVPR), 2018.\n\nUnderstanding Contrastive Representation Learning through Alignment and Uniformity on the Hypersphere. T Wang, P Isola, arXiv:2005.10242arXiv preprintWang, T. and Isola, P. Understanding Contrastive Repre- sentation Learning through Alignment and Uniformity on the Hypersphere. arXiv preprint arXiv:2005.10242, 2020.\n\n. Y Wu, A Kirillov, F Massa, W.-Y Lo, R Girshick, Detectron2, Wu, Y., Kirillov, A., Massa, F., Lo, W.-Y., and Gir- shick, R. Detectron2. https://github.com/ facebookresearch/detectron2, 2019.\n\nLarge batch training of convolutional networks. Y You, I Gitman, B Ginsburg, arXiv:1708.03888arXiv preprintYou, Y., Gitman, I., and Ginsburg, B. Large batch training of convolutional networks. arXiv preprint arXiv:1708.03888, 2017.\n\nDiscovering viewpointinvariant relationships that characterize objects. R Zemel, G E Hinton, NeurIPS. Zemel, R. and Hinton, G. E. Discovering viewpoint- invariant relationships that characterize objects. In NeurIPS, 1990.\n\nS4l: Selfsupervised semi-supervised learning. X Zhai, A Oliver, A Kolesnikov, L Beyer, Proceedings of the IEEE/CVF International Conference on Computer Vision. the IEEE/CVF International Conference on Computer VisionZhai, X., Oliver, A., Kolesnikov, A., and Beyer, L. S4l: Self- supervised semi-supervised learning. In Proceedings of the IEEE/CVF International Conference on Computer Vision, pp. 1476-1485, 2019.\n\nLearning deep features for scene recognition using places database. B Zhou, A Lapedriza, J Xiao, A Torralba, A Oliva, Advances in Neural Information Processing Systems (NeurIPS). Zhou, B., Lapedriza, A., Xiao, J., Torralba, A., and Oliva, A. Learning deep features for scene recognition using places database. In Advances in Neural Information Processing Systems (NeurIPS), 2014.\n", "annotations": {"author": "[{\"end\":80,\"start\":67},{\"end\":89,\"start\":81},{\"end\":102,\"start\":90},{\"end\":114,\"start\":103},{\"end\":129,\"start\":115}]", "publisher": null, "author_last_name": "[{\"end\":79,\"start\":72},{\"end\":88,\"start\":84},{\"end\":101,\"start\":96},{\"end\":113,\"start\":108},{\"end\":128,\"start\":124}]", "author_first_name": "[{\"end\":71,\"start\":67},{\"end\":83,\"start\":81},{\"end\":95,\"start\":90},{\"end\":107,\"start\":103},{\"end\":123,\"start\":115}]", "author_affiliation": null, "title": "[{\"end\":64,\"start\":1},{\"end\":193,\"start\":130}]", "venue": null, "abstract": "[{\"end\":437,\"start\":195}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2747,\"start\":2727},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2766,\"start\":2747},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2785,\"start\":2766},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":2801,\"start\":2785},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":2830,\"start\":2801},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":3324,\"start\":3302},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3535,\"start\":3515},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3737,\"start\":3720},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":4027,\"start\":4007},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4088,\"start\":4068},{\"end\":4118,\"start\":4098},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4187,\"start\":4170},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4601,\"start\":4584},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4991,\"start\":4977},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5325,\"start\":5311},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":5365,\"start\":5343},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":5383,\"start\":5365},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":5411,\"start\":5383},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5532,\"start\":5512},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":5551,\"start\":5532},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":5565,\"start\":5551},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":5579,\"start\":5565},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":5594,\"start\":5579},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5596,\"start\":5594},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":5621,\"start\":5596},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6008,\"start\":5988},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6118,\"start\":6101},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6169,\"start\":6149},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":6205,\"start\":6188},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6722,\"start\":6702},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6741,\"start\":6722},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":6760,\"start\":6741},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6776,\"start\":6760},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":6805,\"start\":6776},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":8860,\"start\":8834},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":8880,\"start\":8860},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":9479,\"start\":9460},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":10088,\"start\":10066},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10984,\"start\":10967},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":11194,\"start\":11176},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":11688,\"start\":11661},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":12206,\"start\":12186},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":12444,\"start\":12426},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":13648,\"start\":13618},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":14043,\"start\":14018},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":14071,\"start\":14053},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":14121,\"start\":14104},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":14513,\"start\":14495},{\"end\":15374,\"start\":15365},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":15950,\"start\":15930},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":15969,\"start\":15950},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":15988,\"start\":15969},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17352,\"start\":17332},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":19032,\"start\":19012},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":21909,\"start\":21882},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":22018,\"start\":21998},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":22034,\"start\":22018},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":22054,\"start\":22034},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":22072,\"start\":22054},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":23423,\"start\":23404},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":25166,\"start\":25146},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":25330,\"start\":25310},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":25346,\"start\":25330},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":25834,\"start\":25817},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":26609,\"start\":26592},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":26636,\"start\":26609},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":26659,\"start\":26636},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":26677,\"start\":26659},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":26730,\"start\":26713},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":26979,\"start\":26951},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":26997,\"start\":26979},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":27776,\"start\":27757},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":27855,\"start\":27833},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28645,\"start\":28625},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":28672,\"start\":28652},{\"end\":28699,\"start\":28679},{\"end\":29429,\"start\":29412},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":29508,\"start\":29481},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":29885,\"start\":29862},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":29906,\"start\":29885},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":31319,\"start\":31299},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":33133,\"start\":33107},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":33153,\"start\":33133},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":35482,\"start\":35464},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":38828,\"start\":38798},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":39471,\"start\":39454},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":39538,\"start\":39520},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":39716,\"start\":39698},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":39962,\"start\":39942},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":41807,\"start\":41787},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":42450,\"start\":42431},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":42918,\"start\":42899},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":42975,\"start\":42950}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":41451,\"start\":40219},{\"attributes\":{\"id\":\"fig_1\"},\"end\":41486,\"start\":41452},{\"attributes\":{\"id\":\"fig_2\"},\"end\":41601,\"start\":41487},{\"attributes\":{\"id\":\"fig_4\"},\"end\":41846,\"start\":41602},{\"attributes\":{\"id\":\"fig_6\"},\"end\":41911,\"start\":41847},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":42303,\"start\":41912},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":43588,\"start\":42304},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":44036,\"start\":43589},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":44205,\"start\":44037},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":44811,\"start\":44206}]", "paragraph": "[{\"end\":2532,\"start\":439},{\"end\":3481,\"start\":2549},{\"end\":4715,\"start\":3483},{\"end\":6634,\"start\":4717},{\"end\":7399,\"start\":6675},{\"end\":7492,\"start\":7401},{\"end\":7808,\"start\":7578},{\"end\":8134,\"start\":7865},{\"end\":8643,\"start\":8136},{\"end\":9252,\"start\":8645},{\"end\":10189,\"start\":9254},{\"end\":10247,\"start\":10191},{\"end\":10908,\"start\":10274},{\"end\":12146,\"start\":10910},{\"end\":12715,\"start\":12158},{\"end\":13511,\"start\":12770},{\"end\":13839,\"start\":13552},{\"end\":14716,\"start\":13886},{\"end\":15136,\"start\":14739},{\"end\":17308,\"start\":15164},{\"end\":18005,\"start\":17326},{\"end\":18496,\"start\":18042},{\"end\":21128,\"start\":18532},{\"end\":21776,\"start\":21143},{\"end\":22101,\"start\":21806},{\"end\":22453,\"start\":22244},{\"end\":22539,\"start\":22455},{\"end\":23271,\"start\":22655},{\"end\":23660,\"start\":23273},{\"end\":24305,\"start\":23662},{\"end\":24376,\"start\":24307},{\"end\":24579,\"start\":24378},{\"end\":24880,\"start\":24581},{\"end\":25167,\"start\":24882},{\"end\":25748,\"start\":25169},{\"end\":25974,\"start\":25750},{\"end\":27086,\"start\":26022},{\"end\":27252,\"start\":27088},{\"end\":27799,\"start\":27254},{\"end\":28577,\"start\":27801},{\"end\":29450,\"start\":28579},{\"end\":29829,\"start\":29452},{\"end\":29963,\"start\":29831},{\"end\":31014,\"start\":30077},{\"end\":31680,\"start\":31036},{\"end\":32331,\"start\":31682},{\"end\":32901,\"start\":32333},{\"end\":33154,\"start\":32981},{\"end\":33211,\"start\":33156},{\"end\":33527,\"start\":33296},{\"end\":33853,\"start\":33584},{\"end\":34207,\"start\":33855},{\"end\":34399,\"start\":34242},{\"end\":34481,\"start\":34401},{\"end\":34950,\"start\":34545},{\"end\":35510,\"start\":34989},{\"end\":35787,\"start\":35564},{\"end\":36231,\"start\":35789},{\"end\":37131,\"start\":36233},{\"end\":37435,\"start\":37133},{\"end\":37725,\"start\":37437},{\"end\":38264,\"start\":37793},{\"end\":38709,\"start\":38310},{\"end\":39289,\"start\":38759},{\"end\":39610,\"start\":39341},{\"end\":40005,\"start\":39623},{\"end\":40218,\"start\":40007}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":7577,\"start\":7493},{\"attributes\":{\"id\":\"formula_1\"},\"end\":7864,\"start\":7809},{\"attributes\":{\"id\":\"formula_2\"},\"end\":22243,\"start\":22102},{\"attributes\":{\"id\":\"formula_3\"},\"end\":22654,\"start\":22540},{\"attributes\":{\"id\":\"formula_4\"},\"end\":26021,\"start\":25975},{\"attributes\":{\"id\":\"formula_5\"},\"end\":30076,\"start\":29964},{\"attributes\":{\"id\":\"formula_6\"},\"end\":33295,\"start\":33212},{\"attributes\":{\"id\":\"formula_7\"},\"end\":33583,\"start\":33528},{\"attributes\":{\"id\":\"formula_8\"},\"end\":34241,\"start\":34208},{\"attributes\":{\"id\":\"formula_9\"},\"end\":34544,\"start\":34482},{\"attributes\":{\"id\":\"formula_10\"},\"end\":34988,\"start\":34951},{\"attributes\":{\"id\":\"formula_11\"},\"end\":35563,\"start\":35511}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":13010,\"start\":13003},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":13382,\"start\":13375},{\"end\":13729,\"start\":13722},{\"end\":14184,\"start\":14177},{\"end\":14333,\"start\":14326},{\"end\":15382,\"start\":15375},{\"end\":17034,\"start\":17027},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":20546,\"start\":20539},{\"attributes\":{\"ref_id\":\"tab_5\"},\"end\":20851,\"start\":20844}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":2547,\"start\":2535},{\"attributes\":{\"n\":\"2.\"},\"end\":6643,\"start\":6637},{\"attributes\":{\"n\":\"2.1.\"},\"end\":6673,\"start\":6646},{\"attributes\":{\"n\":\"2.2.\"},\"end\":10272,\"start\":10250},{\"attributes\":{\"n\":\"3.\"},\"end\":12156,\"start\":12149},{\"attributes\":{\"n\":\"3.1.\"},\"end\":12768,\"start\":12718},{\"attributes\":{\"n\":\"3.2.\"},\"end\":13550,\"start\":13514},{\"end\":13884,\"start\":13842},{\"end\":14725,\"start\":14719},{\"attributes\":{\"n\":\"4.\"},\"end\":14737,\"start\":14728},{\"end\":15162,\"start\":15139},{\"end\":17324,\"start\":17311},{\"end\":18040,\"start\":18008},{\"end\":18530,\"start\":18499},{\"attributes\":{\"n\":\"5.\"},\"end\":21141,\"start\":21131},{\"attributes\":{\"n\":\"5.1.\"},\"end\":21804,\"start\":21779},{\"attributes\":{\"n\":\"5.2.\"},\"end\":31034,\"start\":31017},{\"end\":32979,\"start\":32904},{\"end\":37754,\"start\":37728},{\"end\":37791,\"start\":37757},{\"end\":38308,\"start\":38267},{\"end\":38732,\"start\":38712},{\"end\":38757,\"start\":38735},{\"end\":39339,\"start\":39292},{\"end\":39621,\"start\":39613},{\"end\":41463,\"start\":41453},{\"end\":41498,\"start\":41488},{\"end\":41613,\"start\":41603},{\"end\":41858,\"start\":41848},{\"end\":41922,\"start\":41913},{\"end\":42314,\"start\":42305},{\"end\":44047,\"start\":44038},{\"end\":44216,\"start\":44207}]", "table": "[{\"end\":42303,\"start\":42081},{\"end\":43588,\"start\":43122},{\"end\":44036,\"start\":43749},{\"end\":44205,\"start\":44078},{\"end\":44811,\"start\":44351}]", "figure_caption": "[{\"end\":41451,\"start\":40221},{\"end\":41486,\"start\":41465},{\"end\":41601,\"start\":41500},{\"end\":41846,\"start\":41615},{\"end\":41911,\"start\":41860},{\"end\":42081,\"start\":41924},{\"end\":43122,\"start\":42316},{\"end\":43749,\"start\":43591},{\"end\":44078,\"start\":44049},{\"end\":44351,\"start\":44218}]", "figure_ref": "[{\"end\":1920,\"start\":1912},{\"end\":6877,\"start\":6870},{\"end\":10384,\"start\":10376},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":17634,\"start\":17626},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":18161,\"start\":18153},{\"end\":19039,\"start\":19033},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":19425,\"start\":19416},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":21111,\"start\":21103},{\"end\":32519,\"start\":32511},{\"end\":34147,\"start\":34139}]", "bib_author_first_name": "[{\"end\":45230,\"start\":45229},{\"end\":45232,\"start\":45231},{\"end\":45241,\"start\":45240},{\"end\":45254,\"start\":45253},{\"end\":45555,\"start\":45554},{\"end\":45564,\"start\":45563},{\"end\":45575,\"start\":45574},{\"end\":45577,\"start\":45576},{\"end\":45842,\"start\":45841},{\"end\":46084,\"start\":46083},{\"end\":46086,\"start\":46085},{\"end\":46352,\"start\":46351},{\"end\":46362,\"start\":46361},{\"end\":46364,\"start\":46363},{\"end\":46587,\"start\":46586},{\"end\":46601,\"start\":46600},{\"end\":47036,\"start\":47035},{\"end\":47038,\"start\":47037},{\"end\":47045,\"start\":47044},{\"end\":47054,\"start\":47053},{\"end\":47056,\"start\":47055},{\"end\":47454,\"start\":47453},{\"end\":47463,\"start\":47462},{\"end\":47477,\"start\":47476},{\"end\":47487,\"start\":47486},{\"end\":47879,\"start\":47878},{\"end\":47888,\"start\":47887},{\"end\":47897,\"start\":47896},{\"end\":47907,\"start\":47906},{\"end\":47916,\"start\":47915},{\"end\":47935,\"start\":47929},{\"end\":47939,\"start\":47938},{\"end\":48195,\"start\":48194},{\"end\":48203,\"start\":48202},{\"end\":48216,\"start\":48215},{\"end\":48227,\"start\":48226},{\"end\":48484,\"start\":48483},{\"end\":48492,\"start\":48491},{\"end\":48640,\"start\":48639},{\"end\":48648,\"start\":48647},{\"end\":48655,\"start\":48654},{\"end\":48667,\"start\":48666},{\"end\":48998,\"start\":48997},{\"end\":49006,\"start\":49005},{\"end\":49337,\"start\":49336},{\"end\":49345,\"start\":49344},{\"end\":49353,\"start\":49352},{\"end\":49366,\"start\":49362},{\"end\":49372,\"start\":49371},{\"end\":49378,\"start\":49377},{\"end\":49800,\"start\":49799},{\"end\":49811,\"start\":49810},{\"end\":49823,\"start\":49822},{\"end\":49836,\"start\":49835},{\"end\":50074,\"start\":50073},{\"end\":50088,\"start\":50087},{\"end\":50100,\"start\":50099},{\"end\":50102,\"start\":50101},{\"end\":50114,\"start\":50113},{\"end\":50122,\"start\":50121},{\"end\":50465,\"start\":50464},{\"end\":50478,\"start\":50477},{\"end\":50719,\"start\":50718},{\"end\":50966,\"start\":50965},{\"end\":50975,\"start\":50974},{\"end\":50985,\"start\":50984},{\"end\":50997,\"start\":50996},{\"end\":51010,\"start\":51009},{\"end\":51024,\"start\":51023},{\"end\":51034,\"start\":51033},{\"end\":51045,\"start\":51044},{\"end\":51052,\"start\":51051},{\"end\":51434,\"start\":51433},{\"end\":51443,\"start\":51442},{\"end\":51454,\"start\":51453},{\"end\":51463,\"start\":51462},{\"end\":51871,\"start\":51867},{\"end\":51880,\"start\":51879},{\"end\":51889,\"start\":51888},{\"end\":51899,\"start\":51898},{\"end\":51909,\"start\":51908},{\"end\":51911,\"start\":51910},{\"end\":51924,\"start\":51923},{\"end\":51939,\"start\":51938},{\"end\":51950,\"start\":51949},{\"end\":51952,\"start\":51951},{\"end\":51961,\"start\":51960},{\"end\":51963,\"start\":51962},{\"end\":51970,\"start\":51969},{\"end\":51972,\"start\":51971},{\"end\":52316,\"start\":52315},{\"end\":52327,\"start\":52326},{\"end\":52942,\"start\":52941},{\"end\":52953,\"start\":52952},{\"end\":52963,\"start\":52962},{\"end\":53354,\"start\":53353},{\"end\":53360,\"start\":53359},{\"end\":53369,\"start\":53368},{\"end\":53376,\"start\":53375},{\"end\":53717,\"start\":53716},{\"end\":53723,\"start\":53722},{\"end\":53735,\"start\":53734},{\"end\":53745,\"start\":53744},{\"end\":54093,\"start\":54092},{\"end\":54099,\"start\":54098},{\"end\":54106,\"start\":54105},{\"end\":54112,\"start\":54111},{\"end\":54119,\"start\":54118},{\"end\":54321,\"start\":54320},{\"end\":54323,\"start\":54322},{\"end\":54333,\"start\":54332},{\"end\":54343,\"start\":54342},{\"end\":54354,\"start\":54353},{\"end\":54364,\"start\":54363},{\"end\":54366,\"start\":54365},{\"end\":54653,\"start\":54652},{\"end\":54659,\"start\":54658},{\"end\":54665,\"start\":54664},{\"end\":54672,\"start\":54671},{\"end\":54680,\"start\":54679},{\"end\":54682,\"start\":54681},{\"end\":54690,\"start\":54689},{\"end\":54882,\"start\":54878},{\"end\":54889,\"start\":54888},{\"end\":54898,\"start\":54897},{\"end\":54910,\"start\":54909},{\"end\":54918,\"start\":54917},{\"end\":54928,\"start\":54927},{\"end\":54939,\"start\":54938},{\"end\":54949,\"start\":54948},{\"end\":54951,\"start\":54950},{\"end\":55414,\"start\":55413},{\"end\":55425,\"start\":55424},{\"end\":55427,\"start\":55426},{\"end\":55435,\"start\":55434},{\"end\":55449,\"start\":55445},{\"end\":55453,\"start\":55452},{\"end\":55689,\"start\":55688},{\"end\":55898,\"start\":55897},{\"end\":55912,\"start\":55911},{\"end\":56195,\"start\":56194},{\"end\":56204,\"start\":56203},{\"end\":56479,\"start\":56478},{\"end\":56487,\"start\":56486},{\"end\":56498,\"start\":56497},{\"end\":56512,\"start\":56508},{\"end\":56516,\"start\":56515},{\"end\":56693,\"start\":56692},{\"end\":56701,\"start\":56700},{\"end\":56707,\"start\":56706},{\"end\":57012,\"start\":57011},{\"end\":57014,\"start\":57013},{\"end\":57302,\"start\":57301},{\"end\":57304,\"start\":57303},{\"end\":57630,\"start\":57629},{\"end\":57637,\"start\":57636},{\"end\":57643,\"start\":57642},{\"end\":57655,\"start\":57654},{\"end\":57917,\"start\":57916},{\"end\":57919,\"start\":57918},{\"end\":57935,\"start\":57931},{\"end\":57944,\"start\":57943},{\"end\":57954,\"start\":57953},{\"end\":57964,\"start\":57963},{\"end\":57973,\"start\":57972},{\"end\":57982,\"start\":57981},{\"end\":57991,\"start\":57990},{\"end\":57997,\"start\":57996},{\"end\":58008,\"start\":58007},{\"end\":58016,\"start\":58015},{\"end\":58391,\"start\":58390},{\"end\":58406,\"start\":58405},{\"end\":58419,\"start\":58418},{\"end\":58801,\"start\":58800},{\"end\":58813,\"start\":58812},{\"end\":58815,\"start\":58814},{\"end\":59171,\"start\":59170},{\"end\":59179,\"start\":59178},{\"end\":59185,\"start\":59184},{\"end\":59193,\"start\":59192},{\"end\":59459,\"start\":59458},{\"end\":59467,\"start\":59466},{\"end\":59475,\"start\":59474},{\"end\":59688,\"start\":59687},{\"end\":59698,\"start\":59697},{\"end\":59922,\"start\":59921},{\"end\":59932,\"start\":59931},{\"end\":59934,\"start\":59933},{\"end\":59945,\"start\":59944},{\"end\":60210,\"start\":60209},{\"end\":60222,\"start\":60221},{\"end\":60235,\"start\":60234},{\"end\":60243,\"start\":60242},{\"end\":60250,\"start\":60249},{\"end\":60257,\"start\":60256},{\"end\":60268,\"start\":60267},{\"end\":60276,\"start\":60275},{\"end\":60286,\"start\":60285},{\"end\":60808,\"start\":60807},{\"end\":60816,\"start\":60815},{\"end\":61025,\"start\":61024},{\"end\":61031,\"start\":61030},{\"end\":61043,\"start\":61042},{\"end\":61055,\"start\":61051},{\"end\":61061,\"start\":61060},{\"end\":61264,\"start\":61263},{\"end\":61271,\"start\":61270},{\"end\":61281,\"start\":61280},{\"end\":61521,\"start\":61520},{\"end\":61530,\"start\":61529},{\"end\":61532,\"start\":61531},{\"end\":61718,\"start\":61717},{\"end\":61726,\"start\":61725},{\"end\":61736,\"start\":61735},{\"end\":61750,\"start\":61749},{\"end\":62154,\"start\":62153},{\"end\":62162,\"start\":62161},{\"end\":62175,\"start\":62174},{\"end\":62183,\"start\":62182},{\"end\":62195,\"start\":62194}]", "bib_author_last_name": "[{\"end\":45238,\"start\":45233},{\"end\":45251,\"start\":45242},{\"end\":45262,\"start\":45255},{\"end\":45561,\"start\":45556},{\"end\":45572,\"start\":45565},{\"end\":45588,\"start\":45578},{\"end\":45849,\"start\":45843},{\"end\":46093,\"start\":46087},{\"end\":46359,\"start\":46353},{\"end\":46371,\"start\":46365},{\"end\":46598,\"start\":46588},{\"end\":46608,\"start\":46602},{\"end\":47042,\"start\":47039},{\"end\":47051,\"start\":47046},{\"end\":47061,\"start\":47057},{\"end\":47460,\"start\":47455},{\"end\":47474,\"start\":47464},{\"end\":47484,\"start\":47478},{\"end\":47493,\"start\":47488},{\"end\":47885,\"start\":47880},{\"end\":47894,\"start\":47889},{\"end\":47904,\"start\":47898},{\"end\":47913,\"start\":47908},{\"end\":47927,\"start\":47917},{\"end\":48200,\"start\":48196},{\"end\":48213,\"start\":48204},{\"end\":48224,\"start\":48217},{\"end\":48234,\"start\":48228},{\"end\":48489,\"start\":48485},{\"end\":48495,\"start\":48493},{\"end\":48645,\"start\":48641},{\"end\":48652,\"start\":48649},{\"end\":48664,\"start\":48656},{\"end\":48670,\"start\":48668},{\"end\":49003,\"start\":48999},{\"end\":49012,\"start\":49007},{\"end\":49342,\"start\":49338},{\"end\":49350,\"start\":49346},{\"end\":49360,\"start\":49354},{\"end\":49369,\"start\":49367},{\"end\":49375,\"start\":49373},{\"end\":49386,\"start\":49379},{\"end\":49808,\"start\":49801},{\"end\":49820,\"start\":49812},{\"end\":49833,\"start\":49824},{\"end\":49841,\"start\":49837},{\"end\":50085,\"start\":50075},{\"end\":50097,\"start\":50089},{\"end\":50111,\"start\":50103},{\"end\":50119,\"start\":50115},{\"end\":50132,\"start\":50123},{\"end\":50475,\"start\":50466},{\"end\":50487,\"start\":50479},{\"end\":50727,\"start\":50720},{\"end\":50972,\"start\":50967},{\"end\":50982,\"start\":50976},{\"end\":50994,\"start\":50986},{\"end\":51007,\"start\":50998},{\"end\":51021,\"start\":51011},{\"end\":51031,\"start\":51025},{\"end\":51042,\"start\":51035},{\"end\":51049,\"start\":51046},{\"end\":51055,\"start\":51053},{\"end\":51065,\"start\":51057},{\"end\":51440,\"start\":51435},{\"end\":51451,\"start\":51444},{\"end\":51460,\"start\":51455},{\"end\":51469,\"start\":51464},{\"end\":51877,\"start\":51872},{\"end\":51886,\"start\":51881},{\"end\":51896,\"start\":51890},{\"end\":51906,\"start\":51900},{\"end\":51921,\"start\":51912},{\"end\":51936,\"start\":51925},{\"end\":51947,\"start\":51940},{\"end\":51958,\"start\":51953},{\"end\":51967,\"start\":51964},{\"end\":51977,\"start\":51973},{\"end\":52324,\"start\":52317},{\"end\":52337,\"start\":52328},{\"end\":52950,\"start\":52943},{\"end\":52960,\"start\":52954},{\"end\":52969,\"start\":52964},{\"end\":53357,\"start\":53355},{\"end\":53366,\"start\":53361},{\"end\":53373,\"start\":53370},{\"end\":53380,\"start\":53377},{\"end\":53720,\"start\":53718},{\"end\":53732,\"start\":53724},{\"end\":53742,\"start\":53736},{\"end\":53754,\"start\":53746},{\"end\":54096,\"start\":54094},{\"end\":54103,\"start\":54100},{\"end\":54109,\"start\":54107},{\"end\":54116,\"start\":54113},{\"end\":54128,\"start\":54120},{\"end\":54330,\"start\":54324},{\"end\":54340,\"start\":54334},{\"end\":54351,\"start\":54344},{\"end\":54361,\"start\":54355},{\"end\":54371,\"start\":54367},{\"end\":54656,\"start\":54654},{\"end\":54662,\"start\":54660},{\"end\":54669,\"start\":54666},{\"end\":54677,\"start\":54673},{\"end\":54687,\"start\":54683},{\"end\":54695,\"start\":54691},{\"end\":54886,\"start\":54883},{\"end\":54895,\"start\":54890},{\"end\":54907,\"start\":54899},{\"end\":54915,\"start\":54911},{\"end\":54925,\"start\":54919},{\"end\":54936,\"start\":54929},{\"end\":54946,\"start\":54940},{\"end\":54959,\"start\":54952},{\"end\":55422,\"start\":55415},{\"end\":55432,\"start\":55428},{\"end\":55443,\"start\":55436},{\"end\":55697,\"start\":55690},{\"end\":55909,\"start\":55899},{\"end\":55919,\"start\":55913},{\"end\":55925,\"start\":55921},{\"end\":56201,\"start\":56196},{\"end\":56219,\"start\":56205},{\"end\":56484,\"start\":56480},{\"end\":56495,\"start\":56488},{\"end\":56506,\"start\":56499},{\"end\":56698,\"start\":56694},{\"end\":56704,\"start\":56702},{\"end\":56715,\"start\":56708},{\"end\":57022,\"start\":57015},{\"end\":57312,\"start\":57305},{\"end\":57634,\"start\":57631},{\"end\":57640,\"start\":57638},{\"end\":57652,\"start\":57644},{\"end\":57659,\"start\":57656},{\"end\":57929,\"start\":57920},{\"end\":57941,\"start\":57936},{\"end\":57951,\"start\":57945},{\"end\":57961,\"start\":57955},{\"end\":57970,\"start\":57965},{\"end\":57979,\"start\":57974},{\"end\":57988,\"start\":57983},{\"end\":57994,\"start\":57992},{\"end\":58005,\"start\":57998},{\"end\":58013,\"start\":58009},{\"end\":58022,\"start\":58017},{\"end\":58403,\"start\":58392},{\"end\":58416,\"start\":58407},{\"end\":58426,\"start\":58420},{\"end\":58810,\"start\":58802},{\"end\":58826,\"start\":58816},{\"end\":59176,\"start\":59172},{\"end\":59182,\"start\":59180},{\"end\":59190,\"start\":59186},{\"end\":59201,\"start\":59194},{\"end\":59464,\"start\":59460},{\"end\":59472,\"start\":59468},{\"end\":59483,\"start\":59476},{\"end\":59695,\"start\":59689},{\"end\":59708,\"start\":59699},{\"end\":59929,\"start\":59923},{\"end\":59942,\"start\":59935},{\"end\":59952,\"start\":59946},{\"end\":60219,\"start\":60211},{\"end\":60232,\"start\":60223},{\"end\":60240,\"start\":60236},{\"end\":60247,\"start\":60244},{\"end\":60254,\"start\":60251},{\"end\":60265,\"start\":60258},{\"end\":60273,\"start\":60269},{\"end\":60283,\"start\":60277},{\"end\":60295,\"start\":60287},{\"end\":60813,\"start\":60809},{\"end\":60822,\"start\":60817},{\"end\":61028,\"start\":61026},{\"end\":61040,\"start\":61032},{\"end\":61049,\"start\":61044},{\"end\":61058,\"start\":61056},{\"end\":61070,\"start\":61062},{\"end\":61082,\"start\":61072},{\"end\":61268,\"start\":61265},{\"end\":61278,\"start\":61272},{\"end\":61290,\"start\":61282},{\"end\":61527,\"start\":61522},{\"end\":61539,\"start\":61533},{\"end\":61723,\"start\":61719},{\"end\":61733,\"start\":61727},{\"end\":61747,\"start\":61737},{\"end\":61756,\"start\":61751},{\"end\":62159,\"start\":62155},{\"end\":62172,\"start\":62163},{\"end\":62180,\"start\":62176},{\"end\":62192,\"start\":62184},{\"end\":62201,\"start\":62196}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":207930156},\"end\":45512,\"start\":45157},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":6775391},\"end\":45807,\"start\":45514},{\"attributes\":{\"doi\":\"0954- 898X\",\"id\":\"b2\",\"matched_paper_id\":18767856},\"end\":46009,\"start\":45809},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":59790818},\"end\":46267,\"start\":46011},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":4332326},\"end\":46541,\"start\":46269},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":2168245},\"end\":46890,\"start\":46543},{\"attributes\":{\"doi\":\"10.1016/j.jmva.2015.02.003\",\"id\":\"b6\",\"matched_paper_id\":10334044},\"end\":47389,\"start\":46892},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":49865868},\"end\":47799,\"start\":47391},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":219721240},\"end\":48121,\"start\":47801},{\"attributes\":{\"doi\":\"arXiv:2002.05709\",\"id\":\"b9\"},\"end\":48431,\"start\":48123},{\"attributes\":{\"doi\":\"arXiv:2011.10566\",\"id\":\"b10\"},\"end\":48637,\"start\":48433},{\"attributes\":{\"doi\":\"arXiv:2003.04297\",\"id\":\"b11\"},\"end\":48895,\"start\":48639},{\"attributes\":{\"doi\":\"10.1016/S0893-6080(96)00110-4\",\"id\":\"b12\",\"matched_paper_id\":19930659},\"end\":49281,\"start\":48897},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":57246310},\"end\":49742,\"start\":49283},{\"attributes\":{\"doi\":\"arXiv:2007.06346\",\"id\":\"b14\"},\"end\":50021,\"start\":49744},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":4246903},\"end\":50367,\"start\":50023},{\"attributes\":{\"id\":\"b16\"},\"end\":50653,\"start\":50369},{\"attributes\":{\"doi\":\"1432-0770. doi: 10.1007/ BF02331346\",\"id\":\"b17\",\"matched_paper_id\":9855029},\"end\":50963,\"start\":50655},{\"attributes\":{\"doi\":\"arXiv:1706.02677\",\"id\":\"b18\"},\"end\":51358,\"start\":50965},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":145048710},\"end\":51794,\"start\":51360},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":219687798},\"end\":52219,\"start\":51796},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":15816723},\"end\":52880,\"start\":52221},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":8281592},\"end\":53305,\"start\":52882},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":206594692},\"end\":53702,\"start\":53307},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":54465873},\"end\":54023,\"start\":53704},{\"attributes\":{\"doi\":\"arXiv:1911.05722\",\"id\":\"b25\"},\"end\":54318,\"start\":54025},{\"attributes\":{\"doi\":\"arXiv:1905.09272\",\"id\":\"b26\"},\"end\":54650,\"start\":54320},{\"attributes\":{\"id\":\"b27\"},\"end\":54833,\"start\":54652},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":14113767},\"end\":55296,\"start\":54835},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":57572872},\"end\":55643,\"start\":55298},{\"attributes\":{\"doi\":\"10.1109/2.36\",\"id\":\"b30\",\"matched_paper_id\":1527671},\"end\":55895,\"start\":55645},{\"attributes\":{\"doi\":\"arXiv:1608.03983\",\"id\":\"b31\"},\"end\":56129,\"start\":55897},{\"attributes\":{\"doi\":\"arXiv:1912.01991\",\"id\":\"b32\"},\"end\":56387,\"start\":56131},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":53969346},\"end\":56690,\"start\":56389},{\"attributes\":{\"doi\":\"arXiv:1807.03748\",\"id\":\"b34\"},\"end\":56947,\"start\":56692},{\"attributes\":{\"doi\":\"10.1162/neco.1993.5.2.289\",\"id\":\"b35\",\"matched_paper_id\":5242294},\"end\":57297,\"start\":56949},{\"attributes\":{\"doi\":\"10.1162/neco.1993.5.5.750\",\"id\":\"b36\"},\"end\":57547,\"start\":57299},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":10328909},\"end\":57914,\"start\":57549},{\"attributes\":{\"doi\":\"arXiv:2010.10241\",\"id\":\"b38\"},\"end\":58310,\"start\":57916},{\"attributes\":{\"doi\":\"10.1162/neco.1996.8.4.773\",\"id\":\"b39\",\"matched_paper_id\":16154391},\"end\":58746,\"start\":58312},{\"attributes\":{\"doi\":\"10.1038/90526\",\"id\":\"b40\",\"matched_paper_id\":6346299},\"end\":59104,\"start\":58748},{\"attributes\":{\"doi\":\"arXiv:2010.00578\",\"id\":\"b41\"},\"end\":59381,\"start\":59106},{\"attributes\":{\"doi\":\"arXiv:2102.06810\",\"id\":\"b42\"},\"end\":59685,\"start\":59383},{\"attributes\":{\"id\":\"b43\"},\"end\":59919,\"start\":59687},{\"attributes\":{\"id\":\"b44\"},\"end\":60145,\"start\":59921},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":29156801},\"end\":60702,\"start\":60147},{\"attributes\":{\"id\":\"b46\"},\"end\":61020,\"start\":60704},{\"attributes\":{\"id\":\"b47\"},\"end\":61213,\"start\":61022},{\"attributes\":{\"id\":\"b48\"},\"end\":61446,\"start\":61215},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":16472149},\"end\":61669,\"start\":61448},{\"attributes\":{\"id\":\"b50\"},\"end\":62083,\"start\":61671},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":1849990},\"end\":62464,\"start\":62085}]", "bib_title": "[{\"end\":45227,\"start\":45157},{\"end\":45552,\"start\":45514},{\"end\":45839,\"start\":45809},{\"end\":46081,\"start\":46011},{\"end\":46349,\"start\":46269},{\"end\":46584,\"start\":46543},{\"end\":47033,\"start\":46892},{\"end\":47451,\"start\":47391},{\"end\":47876,\"start\":47801},{\"end\":48995,\"start\":48897},{\"end\":49334,\"start\":49283},{\"end\":50071,\"start\":50023},{\"end\":50716,\"start\":50655},{\"end\":51431,\"start\":51360},{\"end\":51865,\"start\":51796},{\"end\":52313,\"start\":52221},{\"end\":52939,\"start\":52882},{\"end\":53351,\"start\":53307},{\"end\":53714,\"start\":53704},{\"end\":54876,\"start\":54835},{\"end\":55411,\"start\":55298},{\"end\":55686,\"start\":55645},{\"end\":56476,\"start\":56389},{\"end\":57009,\"start\":56949},{\"end\":57627,\"start\":57549},{\"end\":58388,\"start\":58312},{\"end\":58798,\"start\":58748},{\"end\":60207,\"start\":60147},{\"end\":61518,\"start\":61448},{\"end\":61715,\"start\":61671},{\"end\":62151,\"start\":62085}]", "bib_author": "[{\"end\":45240,\"start\":45229},{\"end\":45253,\"start\":45240},{\"end\":45264,\"start\":45253},{\"end\":45563,\"start\":45554},{\"end\":45574,\"start\":45563},{\"end\":45590,\"start\":45574},{\"end\":45851,\"start\":45841},{\"end\":46095,\"start\":46083},{\"end\":46361,\"start\":46351},{\"end\":46373,\"start\":46361},{\"end\":46600,\"start\":46586},{\"end\":46610,\"start\":46600},{\"end\":47044,\"start\":47035},{\"end\":47053,\"start\":47044},{\"end\":47063,\"start\":47053},{\"end\":47462,\"start\":47453},{\"end\":47476,\"start\":47462},{\"end\":47486,\"start\":47476},{\"end\":47495,\"start\":47486},{\"end\":47887,\"start\":47878},{\"end\":47896,\"start\":47887},{\"end\":47906,\"start\":47896},{\"end\":47915,\"start\":47906},{\"end\":47929,\"start\":47915},{\"end\":47938,\"start\":47929},{\"end\":47942,\"start\":47938},{\"end\":48202,\"start\":48194},{\"end\":48215,\"start\":48202},{\"end\":48226,\"start\":48215},{\"end\":48236,\"start\":48226},{\"end\":48491,\"start\":48483},{\"end\":48497,\"start\":48491},{\"end\":48647,\"start\":48639},{\"end\":48654,\"start\":48647},{\"end\":48666,\"start\":48654},{\"end\":48672,\"start\":48666},{\"end\":49005,\"start\":48997},{\"end\":49014,\"start\":49005},{\"end\":49344,\"start\":49336},{\"end\":49352,\"start\":49344},{\"end\":49362,\"start\":49352},{\"end\":49371,\"start\":49362},{\"end\":49377,\"start\":49371},{\"end\":49388,\"start\":49377},{\"end\":49810,\"start\":49799},{\"end\":49822,\"start\":49810},{\"end\":49835,\"start\":49822},{\"end\":49843,\"start\":49835},{\"end\":50087,\"start\":50073},{\"end\":50099,\"start\":50087},{\"end\":50113,\"start\":50099},{\"end\":50121,\"start\":50113},{\"end\":50134,\"start\":50121},{\"end\":50477,\"start\":50464},{\"end\":50489,\"start\":50477},{\"end\":50729,\"start\":50718},{\"end\":50974,\"start\":50965},{\"end\":50984,\"start\":50974},{\"end\":50996,\"start\":50984},{\"end\":51009,\"start\":50996},{\"end\":51023,\"start\":51009},{\"end\":51033,\"start\":51023},{\"end\":51044,\"start\":51033},{\"end\":51051,\"start\":51044},{\"end\":51057,\"start\":51051},{\"end\":51067,\"start\":51057},{\"end\":51442,\"start\":51433},{\"end\":51453,\"start\":51442},{\"end\":51462,\"start\":51453},{\"end\":51471,\"start\":51462},{\"end\":51879,\"start\":51867},{\"end\":51888,\"start\":51879},{\"end\":51898,\"start\":51888},{\"end\":51908,\"start\":51898},{\"end\":51923,\"start\":51908},{\"end\":51938,\"start\":51923},{\"end\":51949,\"start\":51938},{\"end\":51960,\"start\":51949},{\"end\":51969,\"start\":51960},{\"end\":51979,\"start\":51969},{\"end\":52326,\"start\":52315},{\"end\":52339,\"start\":52326},{\"end\":52952,\"start\":52941},{\"end\":52962,\"start\":52952},{\"end\":52971,\"start\":52962},{\"end\":53359,\"start\":53353},{\"end\":53368,\"start\":53359},{\"end\":53375,\"start\":53368},{\"end\":53382,\"start\":53375},{\"end\":53722,\"start\":53716},{\"end\":53734,\"start\":53722},{\"end\":53744,\"start\":53734},{\"end\":53756,\"start\":53744},{\"end\":54098,\"start\":54092},{\"end\":54105,\"start\":54098},{\"end\":54111,\"start\":54105},{\"end\":54118,\"start\":54111},{\"end\":54130,\"start\":54118},{\"end\":54332,\"start\":54320},{\"end\":54342,\"start\":54332},{\"end\":54353,\"start\":54342},{\"end\":54363,\"start\":54353},{\"end\":54373,\"start\":54363},{\"end\":54658,\"start\":54652},{\"end\":54664,\"start\":54658},{\"end\":54671,\"start\":54664},{\"end\":54679,\"start\":54671},{\"end\":54689,\"start\":54679},{\"end\":54697,\"start\":54689},{\"end\":54888,\"start\":54878},{\"end\":54897,\"start\":54888},{\"end\":54909,\"start\":54897},{\"end\":54917,\"start\":54909},{\"end\":54927,\"start\":54917},{\"end\":54938,\"start\":54927},{\"end\":54948,\"start\":54938},{\"end\":54961,\"start\":54948},{\"end\":55424,\"start\":55413},{\"end\":55434,\"start\":55424},{\"end\":55445,\"start\":55434},{\"end\":55452,\"start\":55445},{\"end\":55456,\"start\":55452},{\"end\":55699,\"start\":55688},{\"end\":55911,\"start\":55897},{\"end\":55921,\"start\":55911},{\"end\":55927,\"start\":55921},{\"end\":56203,\"start\":56194},{\"end\":56221,\"start\":56203},{\"end\":56486,\"start\":56478},{\"end\":56497,\"start\":56486},{\"end\":56508,\"start\":56497},{\"end\":56515,\"start\":56508},{\"end\":56519,\"start\":56515},{\"end\":56700,\"start\":56692},{\"end\":56706,\"start\":56700},{\"end\":56717,\"start\":56706},{\"end\":57024,\"start\":57011},{\"end\":57314,\"start\":57301},{\"end\":57636,\"start\":57629},{\"end\":57642,\"start\":57636},{\"end\":57654,\"start\":57642},{\"end\":57661,\"start\":57654},{\"end\":57931,\"start\":57916},{\"end\":57943,\"start\":57931},{\"end\":57953,\"start\":57943},{\"end\":57963,\"start\":57953},{\"end\":57972,\"start\":57963},{\"end\":57981,\"start\":57972},{\"end\":57990,\"start\":57981},{\"end\":57996,\"start\":57990},{\"end\":58007,\"start\":57996},{\"end\":58015,\"start\":58007},{\"end\":58024,\"start\":58015},{\"end\":58405,\"start\":58390},{\"end\":58418,\"start\":58405},{\"end\":58428,\"start\":58418},{\"end\":58812,\"start\":58800},{\"end\":58828,\"start\":58812},{\"end\":59178,\"start\":59170},{\"end\":59184,\"start\":59178},{\"end\":59192,\"start\":59184},{\"end\":59203,\"start\":59192},{\"end\":59466,\"start\":59458},{\"end\":59474,\"start\":59466},{\"end\":59485,\"start\":59474},{\"end\":59697,\"start\":59687},{\"end\":59710,\"start\":59697},{\"end\":59931,\"start\":59921},{\"end\":59944,\"start\":59931},{\"end\":59954,\"start\":59944},{\"end\":60221,\"start\":60209},{\"end\":60234,\"start\":60221},{\"end\":60242,\"start\":60234},{\"end\":60249,\"start\":60242},{\"end\":60256,\"start\":60249},{\"end\":60267,\"start\":60256},{\"end\":60275,\"start\":60267},{\"end\":60285,\"start\":60275},{\"end\":60297,\"start\":60285},{\"end\":60815,\"start\":60807},{\"end\":60824,\"start\":60815},{\"end\":61030,\"start\":61024},{\"end\":61042,\"start\":61030},{\"end\":61051,\"start\":61042},{\"end\":61060,\"start\":61051},{\"end\":61072,\"start\":61060},{\"end\":61084,\"start\":61072},{\"end\":61270,\"start\":61263},{\"end\":61280,\"start\":61270},{\"end\":61292,\"start\":61280},{\"end\":61529,\"start\":61520},{\"end\":61541,\"start\":61529},{\"end\":61725,\"start\":61717},{\"end\":61735,\"start\":61725},{\"end\":61749,\"start\":61735},{\"end\":61758,\"start\":61749},{\"end\":62161,\"start\":62153},{\"end\":62174,\"start\":62161},{\"end\":62182,\"start\":62174},{\"end\":62194,\"start\":62182},{\"end\":62203,\"start\":62194}]", "bib_venue": "[{\"end\":46737,\"start\":46682},{\"end\":47610,\"start\":47561},{\"end\":49533,\"start\":49469},{\"end\":51596,\"start\":51542},{\"end\":52602,\"start\":52479},{\"end\":53116,\"start\":53052},{\"end\":53527,\"start\":53463},{\"end\":53881,\"start\":53827},{\"end\":55076,\"start\":55027},{\"end\":60442,\"start\":60378},{\"end\":61887,\"start\":61831},{\"end\":45323,\"start\":45264},{\"end\":45648,\"start\":45590},{\"end\":45887,\"start\":45861},{\"end\":46116,\"start\":46095},{\"end\":46379,\"start\":46373},{\"end\":46680,\"start\":46610},{\"end\":47121,\"start\":47089},{\"end\":47559,\"start\":47495},{\"end\":47949,\"start\":47942},{\"end\":48192,\"start\":48123},{\"end\":48481,\"start\":48433},{\"end\":48741,\"start\":48688},{\"end\":49058,\"start\":49043},{\"end\":49467,\"start\":49388},{\"end\":49797,\"start\":49744},{\"end\":50174,\"start\":50134},{\"end\":50462,\"start\":50369},{\"end\":50786,\"start\":50764},{\"end\":51131,\"start\":51083},{\"end\":51540,\"start\":51471},{\"end\":51986,\"start\":51979},{\"end\":52477,\"start\":52339},{\"end\":53050,\"start\":52971},{\"end\":53461,\"start\":53382},{\"end\":53825,\"start\":53756},{\"end\":54090,\"start\":54025},{\"end\":54456,\"start\":54389},{\"end\":54728,\"start\":54697},{\"end\":55025,\"start\":54961},{\"end\":55460,\"start\":55456},{\"end\":55736,\"start\":55711},{\"end\":55989,\"start\":55943},{\"end\":56192,\"start\":56131},{\"end\":56529,\"start\":56519},{\"end\":56791,\"start\":56733},{\"end\":57084,\"start\":57049},{\"end\":57388,\"start\":57339},{\"end\":57720,\"start\":57661},{\"end\":58080,\"start\":58040},{\"end\":58488,\"start\":58453},{\"end\":58860,\"start\":58841},{\"end\":59168,\"start\":59106},{\"end\":59456,\"start\":59383},{\"end\":59780,\"start\":59726},{\"end\":60008,\"start\":59975},{\"end\":60376,\"start\":60297},{\"end\":60805,\"start\":60704},{\"end\":61261,\"start\":61215},{\"end\":61548,\"start\":61541},{\"end\":61829,\"start\":61758},{\"end\":62262,\"start\":62203}]"}}}, "year": 2023, "month": 12, "day": 17}