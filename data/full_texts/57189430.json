{"id": 57189430, "updated": "2023-11-11 04:30:32.545", "metadata": {"title": "Towards a CAN IDS Based on a Neural Network Data Field Predictor", "authors": "[{\"first\":\"Krzysztof\",\"last\":\"Pawelec\",\"middle\":[]},{\"first\":\"Robert\",\"last\":\"Bridges\",\"middle\":[\"A.\"]},{\"first\":\"Frank\",\"last\":\"Combs\",\"middle\":[\"L.\"]}]", "venue": null, "journal": "Proceedings of the ACM Workshop on Automotive Cybersecurity", "publication_date": {"year": 2019, "month": null, "day": null}, "abstract": "Modern vehicles contain a few controller area networks (CANs), which allow scores of on-board electronic control units (ECUs) to communicate messages critical to vehicle functions and driver safety. CAN provides a lightweight and reliable broadcast protocol but is bereft of security features. As evidenced by many recent research works, CAN exploits are possible both remotely and with direct access, fueling a growing CAN intrusion detection system (IDS) body of research. A challenge for pioneering vehicle-agnostic IDSs is that passenger vehicles' CAN message encodings are proprietary, defined and held secret by original equipment manufacturers (OEMs). Targeting detection of next-generation attacks, in which messages are sent from the expected ECU at the expected time but with malicious content, researchers are now seeking to leverage \"CAN data models'', which predict future CAN messages and use prediction error to identify anomalous, hopefully malicious CAN messages. Yet, current works model CAN signals post-translation, i.e., after applying OEM-donated or reverse-engineered translations from raw data. We present initial IDS results testing deep neural networks used to predict CAN data at the bit level, targeting IDS capabilities that avoiding reverse engineering proprietary encodings. Our results suggest the method is promising for data with signals exhibiting dependence on previous or concurrent inputs.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2950251594", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/codaspy/PawelecBC19", "doi": "10.1145/3309171.3309180"}}, "content": {"source": {"pdf_hash": "d9554e5c96c02b078eee0370e83608eedfdd2397", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "https://dl.acm.org/doi/pdf/10.1145/3309171.3309180", "status": "BRONZE"}}, "grobid": {"id": "831d13b08eee7d825468c9e70f08bff107c05b68", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/d9554e5c96c02b078eee0370e83608eedfdd2397.txt", "contents": "\nTowards a CAN IDS Based on a Neural Network Data Field Predictor\n2019. March 27, 2019. AutoSec '19, March 27, 2019\n\nAcm Reference Format: Krzysztof \nRobert A Pawelec \nFrank L Bridges \nCombs \nTowards a CAN IDS Based on a Neural Network Data Field Predictor\n\nACM Workshop on Automotive Cybersecurity (AutoSec '19)\nRichardson, TX; Richardson, TX, USA2019. March 27, 2019. AutoSec '19, March 27, 2019USA. ACM, New York, NY, USA, 4 pages. https://doi.org/10.1145/3309171. 3309180 * This manuscript has been authored by UT-Battelle, LLC under Contract No. DE-AC05-00OR22725 with the U.S. De-partment of Energy. The United States Government retains and the publisher, by accepting the article for publication, acknowledges that the United States Government retains a non-exclusive, paid-up, irrevocable, world-wide license to publish or reproduce the published form of this manuscript, or allow others to do so, for United States Government purposes. The Department of Energy will provide public access to these results of federally sponsored research in ac-cordance with the DOE Public Access Plan http://energy.gov/downloads/doe-public-access-plan. Publication rights licensed to ACM. ACM acknowledges that this contribution was authored or co-authored by an employee, contractor or affiliate of the United States government. As such, the Government retains a nonexclusive, royalty-free right to publish or reproduce this article, or to allow others to do so, for Government purposes only. ACM ISBN 978-1-4503-6180-4/19/03. . . $15.00CCS CONCEPTS \u2022 Security and privacy \u2192 Artificial immune systemsKEYWORDS controller area networkCAN busin-vehicle securityanomaly detectionintrusion detectionneural networkdeep learning\nModern vehicles contain a few controller area networks (CANs), which allow scores of on-board electronic control units (ECUs) to communicate messages critical to vehicle functions and driver safety. CAN provides a lightweight and reliable broadcast protocol but is bereft of security features. As evidenced by many recent research works, CAN exploits are possible both remotely and with direct access, fueling a growing CAN intrusion detection system (IDS) body of research. A challenge for pioneering vehicle-agnostic IDSs is that passenger vehicles' CAN message encodings are proprietary, defined and held secret by original equipment manufacturers (OEMs). Targeting detection of next-generation attacks, in which messages are sent from the expected ECU at the expected time but with malicious content, researchers are now seeking to leverage \"CAN data models\", which predict future CAN messages and use prediction error to identify anomalous, hopefully malicious CAN messages. Yet, current works model CAN signals post-translation, i.e., after applying OEM-donated or reverse-engineered translations from raw data. We present initial IDS results testing deep neural networks used to predict CAN data at the bit level, targeting IDS capabilities that avoiding reverse engineering proprietary encodings. Our results suggest the method is promising for data with signals exhibiting dependence on previous or concurrent inputs.\n\nINTRODUCTION & BACKGROUND\n\nModern vehicles are increasingly \"drive-by-wire\" meaning oncemechanical interfaces of subsystems have been replaced by communication of electronic control units (ECUs), or small computers orchestrating the subsystems. Rather than using dedicated connections for each ECU pair, a few controller area networks (CANs) allow broadcast communications of all ECUs. In particular, we focus on the high-speed (250Kbs-500Kbs) controller area network (CAN) bus, as it is used for much of critical vehicle communications.  [4] of. There are two important fields, the Arbitration ID (AID) used for indexing and prioritizing frames and the data field containing up to 64 bits of message contents. CAN 2.0 provides a protocol defining the physical and data link layers [1] (Figure 1). Each packet's information is contained in two fields, the Arbitration ID (AID) used for indexing and prioritizing frames and the data field containing up to 64 bits of message contents. The mapping of the data field's bits to the signals it encodes is a proprietary secret, defined by the original equipment manufacturers (OEMs, e.g., Ford, GM), and the encodings change depending on make, model, year, and even vehicle specifications. This poses an obstacle for producing vehicle-agnostic solutions for automotive CANs, in particular, defensive and offensive cyber security, which are desirable for many applications, in particular to existing vehicles. See recent work of Verma et al. [24], and Nolan et al. [19] on discovering the syntax and semantics of automotive CAN data.\n\nCAN is a reliable and lightweight protocol, but it has few security features, e.g., no encryption nor authentication, and has been proven to be exploitable with direct access [2,9,15,17] or even remotely [16,25]. The attack surface for in-vehicle CANs is growing as cars become increasingly exposed e.g. via USB, cellular, bluetooth and the advent of vehicle-to-vehicle and -infrastructure networking. Providing effective intrusion detection for automotive CANs is a burgeoning research topic [14].\n\n\nRelated CAN IDS Works\n\nInitial automotive CAN IDS research has been rule-based [9,18], which pushes security to OEMs, as rules are dependent on CAN encodings (model-specific) and may require knowledge of specific attacks. Multiple works [7,17,21] exploit message frequency anomalies for vehicle-agnostic detection of message injection attacks. In response to the infamous Miller and Valesek remote Jeep hack [16] (which used a masquerade attack in which one ECU sent malicious braking signals while the brake ECU was silenced), multiple efforts have proposed data-driven efforts for ECU identification to detect AIDs originating from the wrong transmitter [4,5,11].\n\nThe logical next-generation attack involves a reprogrammed ECU sending appropriate AIDs with appropriate timing, but with augmented, potentially malicious, data field contents. After-market \"chipping\" kits exhibit this capability by reprogramming ECUs, although in practice these are used for performance-tuning, not malicious purposes.\n\nWorks are emerging that test supervised deep learners trained on specific attacks with labeled data [10,13]. We seek anomaly detection to avoid training towards a specific attack.\n\nCAN IDS research into unsupervised learning methodologies for detecting malicious messages has begun modeling correlations inherent to the CAN data that are broken by attacks. Tyree et al. [23] propose a manifold learning technique to identify relationships in CAN data that are broken during attacks that do not coordinate related signals. Their technique requires at least the ability to tokenize (partition) the up-to 64-bit CAN data fields into signal-sized messages but not fully translate the CAN data. The other three works seeking to exploit correlations of signals in the CAN data and, thus, require complete knowledge of the modeled signals' encodings: Ganesan et al. [6] learn correlation of value pairs (e.g., speed, accelerator pedal position) using both CAN and sensor data to detect injection attacks. IDS research of Li [12] and of Testud [22] propose a three-step process to model CAN packets and detect unexpected packets: (1) reverse engineer or partner with an OEM to obtain many signals in the CAN data, (2) train deep learning, neural network regressor(s) to predict the next signal value(s) from the history of observations, (3) use the error in predicted values from observed as an online anomaly detector.\n\nWe present initial results for a CAN prediction model without step (1). That is, previous work translated the 64-bit data field into the signals it encodes (requiring OEM knowledge or tedious reverse engineering) and built models of the signals. Rather, our approach models an AID's 64-bit data field. Hence, we commence prediction and detection (steps (2) and (3)) without requiring any translation of the CAN message bits to signals.\n\n\nContributions\n\nOur long-term goal is to provide an after-market IDS for ideally all passenger vehicles. This means we cannot rely on OEM-defined CAN mappings. En route to this goal we adopt the neural network CAN prediction model; specifically, from a history of CAN data our regressors predict the next CAN data field, and we too use prediction error to detect anomalous messages. Unlike the previous two similar works [12,22], we do not translate CAN data fields to signals, as we do not have the OEM's proprietary mappings. Instead, we train a deep neural network for each AID to predict its next 64-bit data field. The primary contribution of this work is presentation of initial results showing efficacy of the bit-level CAN models for attack detection. The benefit of this approach is straight-forward-it extends the general CAN modeling frameworks for anomaly detection (which relies critically on OEM-proprietary CAN mappings) to a vehicle-agnostic detector, as no CAN mappings are assumed. Although our focus is CAN IDS, CAN models can be used for other applications, e.g. CAN simulators. The essential hypothesis of CAN prediction models is that there exists a dependency of future messages on recently passed or other concurrent messages. Hence, such an IDS will be blind to any attack manipulating data who's values are impervious to these dependencies or simply do not manipulating values, e.g., DOS by spamming, bus-off attacks [3].\n\n\nCAN PREDICTION MODEL\n\nWhile our overall IDS is unsupervised-i.e., we do not require labeled attack and non-attack data-we exploit supervised learning to build a CAN prediction model. Specifically, we create labeled data by taking a fixed AID's most recently observed ten data fields and try to predict next (11 th ). Hence, we model each AID independently.\n\nLet\nX = {x i } N i=1 be the set of training examples and Y = {y i } N i=1\nbe the set of labels. Our training data is a tuple (x i , y i ) where x i \u2208 {0, 1} 10\u00d764 and y i \u2208 {0, 1} 64 as shown in Figure 3. Recurrent neural networks (RNNs) model temporal/sequential dependence by including the previous prediction's hidden state as well as given inputs into the current prediction [20]. Long Short-Term Memory (LSTM) layers provide a particular architecture for portions of an RNN that seek to leverage dependence in modeling better than \"vanilla\" RNNs, as they are crafted to avoid vanishing gradient problems common in RNN training [8]. Hence, this statistical machinery is a natural choice for our model. We build the model using Keras (www.keras.io), a Python deep learning module. See Figure 2. The model consists of three LSTM layers, a dropout layer, and two dense layers. The last layer having 64 nodes (one per predicted bit of the next data field) as the output and softmax as an activation function. Between the two dense layers, we include a dropout layer to prevent overfitting of our model. We set the layer's drop rate to 0.2; i.e., 20% of neurons in the first dense layer are dropped during training). To train the model For each desired AID, we use the described LSTM on ambient CAN data collected during normal driving conditions. We denote such a model M = M (X,Y,AID) , where X is the set of training examples and Y is the set of labels for each example. For a given input vector x i \u2208 X (previous ten observed data fields), let M (x i ) = y i denote the predicted next 64-bit data field, y i \u2208 Y.\n\nTo build an anomaly score from the AID's trained prediction model, we consider the error of each prediction, e i := \u2225y i \u2212\u0177 i \u2225 2 . To create the anomaly detector, after training, apply the model on the training data and compute the mean and variance of the observed prediction errors. Specifically, \u00b5 = X e i /N , and \u03c3 2 = X (e i \u2212 \u00b5) 2 /(N \u2212 1). Finally, we compute the Gaussian z-score of newly observed error z i = (e i \u2212 \u00b5)/\u03c3 and use the one-sided p-value for our anomaly score, p-value(z) = 1 \u2212 CDF(z), where CDF is the Gaussian normal cumulative distribution function. Note that if the error is less than expected (z < 0 ) p-value(z) > 0.5 and p-value(z) \u2192 1 as z \u2192 \u2212\u221e. Similarly, if the error is greater than expected (z > 0) p-value(z) < .5, and p-value(z) \u2192 0 as z \u2192 \u221e. Hence, a small p-values occurs if and only if the error is large relative to observations in training.\n\n\nEXPERIMENT\n\nWe present two indicative experiments. The first is a model of an AID that (we believe) communicates the four wheels' speeds-four signals that vary little between each other and individually all move \"continuously\", meaning limited variance from one message to the next. The second AID includes a binary reverse light indicator, which need not depend on its past values and we cannot say whether it depends on other bits in the AID. Our understanding is from manual reverse engineering.\n\nFor data collection we used the Vehicle Spy software, produced by Intrepid Control Systems, Inc. (www.intrepidcs.com/products/ software/vehicle-spy) allowing passive monitoring of CAN data via the OBD-II port. For training, we used a portion of CAN data recorded during ambient driving lasting 141 seconds. See Figure 4.\n\nTo test the detector, we inject CAN frames with each AID, separately, to emulate attacks on the CAN. It is important to stress that the anomaly detector does not consider the frequency nor the timestamp of CAN frame, only the sequence of data fields; hence, the high frequency injections emulate an ECU that is sending messages with false content. For each emulated attack (one per AID), we used an Arduino board for injecting CAN frames as well as the Vehicle Spy for recording CAN data, both connected to the vehicle via an OBD-II port. Reverse engineering of the signals allowed for physical verification that the attacks were effective. Note that our reverse engineering of these signals is not necessary for the model, but for understanding efficacy of the experiment/model.\n\n\nWheel Speed AID\n\nThe actual attack happened from 14s to 29s of the trip. During that time the \"attacker\" repeatedly injected the same AID with the same message in the 64-bit data field. As can be seen in Figure 5, the p-value of the observed signals occurring between 14s to 29s is extremely low. \n\n\nReverse Lights AID\n\nThe actual attack happened from 14.5s until 29s of the capture. During that time the \"attacker\" repeatedly injected the same AID with the same message in the 64-bit data field. Referring to Figure  6, it is important to note that the p-value of the observed signals is extremely low throughout the test set. However, it hits actual 0 during the attack period.\n\n\nResults Discussion\n\nOverall, we have a very strong difference in our anomaly score between attack and non-attack periods, but finding an a priori threshold seems problematic. We conjecture that the current architecture is a better model for \"continuous\" signals with many distinct 64-bit messages (as in Figure 5), that move in a a clear pattern (e.g., as speed increases, the 2 0 place bit increases from 0 to 1, then the 2 1 place bit increases from 0 to 1, ... ). Presumably the model is also learning co-variation between the four wheel speeds, which are similar values except when under attack. The second AID communicating seemingly binary signals is, unsurprisingly, harder for the model to predict. Perhaps taking inputs from a variety of other AIDs may enhance prediction accuracy.\n\n\nCONCLUSIONS & FUTURE WORK\n\nRecent approaches to build CAN IDSs train a \"CAN language model\", that is, a machine learning model that can accurately predict the next CAN message from previous or concurrent messages. Previous works have trained models on reverse engineered signals, requiring OEM-proprietary (secret) knowledge. In this paper we build a CAN model at the bit level, eliminating the need for CAN data translation and present initial results in use for an IDS. One advantage of this approach is application to existing vehicles, and could, with sufficient development, be deployed as an after-market OBD-II plug-in. We model the 64-bit data field for each AID and use prediction error to identify anomalies. Our results suggest that AIDs encoding data signals that move \"continuously\" or in conjunction with each other yield strong detection results for attacks that manipulate these signals. The results are less compelling for signals that exhibit less dependencies on their past and possibly on other portions of the data frame.\n\nFor future work, we would like to refine the architecture of the neural network to more accurately predict non-malicious messages. We note that preliminary testing with alternate neural network configurations yielded less accurate results, but lends credence to future work aimed at optimizing the architecture for CAN modeling. Additionally, construction of a model that handles more than just one AID at a time will presumably increase accuracy as CANs communicate states of many different but physically related subsystems. Finally, work is emerging to automatically discover encoded signals in the CAN data fields (e.g, [19,24]). The next step is to train the CAN models conditioned on information from these works.\n\nFigure 1 :\n1CAN 2.0 data frame depicted. Image from Cho & Shin\n\nFigure 2 :\n2Neural Network architecture diagram depicted. Dimensions of the vector passed between layers given. Batch size was set to 32. Dropout between dense layers set to randomly ignore 20% of neurons in the first Dense layer.\n\nFigure 3 :\n3Training data example, on the left, ten consecutive signals are labeled by 11 th (right).\n\nFigure 4 :\n4Time snippet of training data for two AIDs.\n\nFigure 5 :\n5(Top) Time snippet of wheel speed AID testing data non-attack period (the left half) and the attack period (the right half). (Middle) Plot depicts the model's prediction. (Bottom) P-value anomaly score depicted for wheel speed AID. Attack period: 14-29s.\n\nFigure 6 :\n6(Top) Time snippet of wheel speed AID testing data. Non-attack period occurs for roughly the first quarter and the attack period in the other three quarters. Top plot depicts actual data. (Middle)Plot depicts the model's prediction. (Bottom) P-value anomaly score depicted for reverse light AID. Attack period: 14.5-29s.\n\n\nwe used batch size of 32. Out of several tested architectures, where we varied the number/sizes of layers, this one was most accurate.Session: Anomaly Detection for Controller Area Network \nAutoSec '19, March 27, 2019, Richardson, TX, USA \n\n\nCAN Specification Version 2.0. Robert Bosch, Gmbh , Robert Bosch GmbH. 1991. CAN Specification Version 2.0. (1991).\n\nComprehensive Experimental Analyses of Automotive Attack Surfaces. Stephen Checkoway, USENIX Security Symposium. San FranciscoStephen Checkoway and others. 2011. Comprehensive Experimental Analyses of Automotive Attack Surfaces.. In USENIX Security Symposium. San Francisco.\n\nError handling of in-vehicle networks makes them vulnerable. Kyong-Tak Cho, G Kang, Shin, Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. the 2016 ACM SIGSAC Conference on Computer and Communications SecurityACMKyong-Tak Cho and Kang G Shin. 2016. Error handling of in-vehicle networks makes them vulnerable. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security. ACM, 1044-1055.\n\nFingerprinting Electronic Control Units for Vehicle Intrusion Detection. Kyong-Tak Cho, G Kang, Shin, USENIX Security Symp. Kyong-Tak Cho and Kang G Shin. 2016. Fingerprinting Electronic Control Units for Vehicle Intrusion Detection.. In USENIX Security Symp. 911-927.\n\n18. Identifying ECUs through Inimitable Characteristics of Signals in Controller Area Networks. IEEE Trans. Vehic. Tech. 18Wonsuk Choi and othersWonsuk Choi and others. '18. Identifying ECUs through Inimitable Characteris- tics of Signals in Controller Area Networks. IEEE Trans. Vehic. Tech. ('18).\n\nExploiting Consistency Among Heterogeneous Sensors for Vehicle Anomaly Detection. Arun Ganesan, Jayanthi Rao, Kang Shin, 10.4271/2017-01-1654SAE Technical Paper. Arun Ganesan, Jayanthi Rao, and Kang Shin. 2017. Exploiting Consistency Among Heterogeneous Sensors for Vehicle Anomaly Detection, In SAE Technical Paper. (03 2017). https://doi.org/10.4271/2017-01-1654\n\nAn intrusion detection method for securing in-vehicle CAN bus. Mabrouka Gmiden, Mohamed Hedi Gmiden, Hafedh Trabelsi, Proc. of Sciences and Techniques of Automatic Control and Computer Engineering. of Sciences and Techniques of Automatic Control and Computer EngineeringIEEEMabrouka Gmiden, Mohamed Hedi Gmiden, and Hafedh Trabelsi. 2016. An intrusion detection method for securing in-vehicle CAN bus. In Proc. of Sciences and Techniques of Automatic Control and Computer Engineering. IEEE.\n\nLong Short-Term Memory. Sepp Hochreiter, J\u00fcrgen Schmidhuber, 10.1162/neco.1997.9.8.1735Neural Comput. 9Sepp Hochreiter and J\u00fcrgen Schmidhuber. 1997. Long Short-Term Memory. Neural Comput. 9, 8 (Nov. 1997), 1735-1780. DOI:http://dx.doi.org/10.1162/ neco.1997.9.8.1735\n\nSecurity threats to automotive CAN networkspractical examples and selected short-term countermeasures. Tobias Hoppe, Inter. Conf. Comp. Safety, Reliability & Security. SpringerTobias Hoppe and others. 2008. Security threats to automotive CAN networks- practical examples and selected short-term countermeasures. In Inter. Conf. Comp. Safety, Reliability & Security. Springer.\n\nIntrusion detection system using deep neural network for in-vehicle network security. Min-Joo Kang, Je-Won Kang, PloS one. 11155781Min-Joo Kang and Je-Won Kang. 2016. Intrusion detection system using deep neural network for in-vehicle network security. PloS one 11, 6 (2016), e0155781.\n\nOTIDS: A Novel Intrusion Detection System for In-vehicle Network by using Remote Frame. Hyunsung Lee, Huy Kang Seong Hoon Jeong, Kim, PST (Privacy, Security and Trust. acceptedHyunsung Lee, Seong Hoon Jeong, and Huy Kang Kim. 2017. OTIDS: A Novel Intrusion Detection System for In-vehicle Network by using Remote Frame. In PST (Privacy, Security and Trust). (accepted).\n\nDeep Learning on CAN Bus. Jun Li, Jun Li. 2016. Deep Learning on CAN Bus. (2016). https://youtu.be/1QSo5sOfXtI\n\nCloud-Based Cyber-Physical Intrusion Detection for Vehicles Using Deep Learning. 10.1109/ACCESS.2017.2782159IEEE Access. 6George Loukas and othersGeorge Loukas and others. 2018. Cloud-Based Cyber-Physical Intrusion Detection for Vehicles Using Deep Learning. IEEE Access 6 (2018). DOI:http://dx.doi.org/ 10.1109/ACCESS.2017.2782159\n\nEmmanouil Panaousis, Panagiotis Sarigiannidis, Anatolij Bezemskij, and Tuan Vuong. 2019. A taxonomy and survey of cyber-physical intrusion detection approaches for vehicles. George Loukas, Eirini Karapistoli, Ad Hoc Networks. 84George Loukas, Eirini Karapistoli, Emmanouil Panaousis, Panagiotis Sarigian- nidis, Anatolij Bezemskij, and Tuan Vuong. 2019. A taxonomy and survey of cyber-physical intrusion detection approaches for vehicles. Ad Hoc Networks 84 (2019), 124-147.\n\nAdventures in automotive networks and control units. Charlie Miller, Chris Valasek, Def Con. 21Charlie Miller and Chris Valasek. 2013. Adventures in automotive networks and control units. Def Con 21 (2013), 260-264.\n\nRemote exploitation of an unaltered passenger vehicle. Charlie Miller, Chris Valasek, Black Hat USA. 201591Charlie Miller and Chris Valasek. 2015. Remote exploitation of an unaltered passenger vehicle. Black Hat USA 2015 (2015), 91.\n\nModeling inter-signal arrival times for accurate detection of CAN bus signal injection attacks: a data-driven approach to in-vehicle intrusion detection. Robert A Michael R Moore, Bridges, L Frank, Combs, S Michael, Stacy J Starr, Prowell, Proc. CISRC. CISRCACM11Michael R Moore, Robert A Bridges, Frank L Combs, Michael S Starr, and Stacy J Prowell. 2017. Modeling inter-signal arrival times for accurate detection of CAN bus signal injection attacks: a data-driven approach to in-vehicle intrusion detection. In Proc. CISRC. ACM, 11.\n\nA structured approach to anomaly detection for in-vehicle networks. Michael M\u00fcter, IAS. IEEEMichael M\u00fcter and others. 2010. A structured approach to anomaly detection for in-vehicle networks. In IAS. IEEE.\n\nUnsupervised Time Series Extraction from Controller Area Network Payloads. Brent Nolan, Others, Proc. IEEE CAVS. IEEE CAVSto appearBrent Nolan and others. 2018. Unsupervised Time Series Extraction from Con- troller Area Network Payloads. In Proc. IEEE CAVS. (to appear).\n\nLearning representations by backpropagating errors. E David, file:/localhost/opt/grobid/grobid-home/tmp/dx.doi.org/10.1038/323533a0Nature. 323Rumelhart and othersDavid E. Rumelhart and others. 1986. Learning representations by back- propagating errors. Nature 323 (Oct. 1986). dx.doi.org/10.1038/323533a0\n\nIntrusion detection system based on the analysis of time intervals of CAN messages for in-vehicle network. Hyun Min Song, Ha Rang Kim, Huy Kang Kim, ICOIN. IEEEHyun Min Song, Ha Rang Kim, and Huy Kang Kim. 2016. Intrusion detection system based on the analysis of time intervals of CAN messages for in-vehicle network. In ICOIN. IEEE.\n\nDetecting ICS Attacks Through Process Variable Analysis. Jean-Christophe Testud, Jean-Christophe Testud. 2017. Detecting ICS Attacks Through Process Variable Analysis. (2017). https://youtu.be/b4lut5uWs2w\n\nExploiting the Shape of CAN Data for In-Vehicle Intrusion Detection. Zachariah Tyree, A Robert, Bridges, L Frank, Michael R Combs, Moore, arXiv:1808.10840IEEE CAVS. to appearZachariah Tyree, Robert A Bridges, Frank L Combs, and Michael R Moore. 2018. Exploiting the Shape of CAN Data for In-Vehicle Intrusion Detection. In IEEE CAVS. (to appear), arXiv:1808.10840.\n\nACTT: Automotive CAN Tokenization and Translation. E Miki, Robert A Verma, Samuel C Bridges, Hollifield, arXiv:1811.07897Proc. IEEE CSCI. IEEE CSCIto appearMiki E Verma, Robert A Bridges, and Samuel C Hollifield. 2018. ACTT: Au- tomotive CAN Tokenization and Translation. In Proc. IEEE CSCI. (to appear) arXiv:1811.07897.\n\nA practical wireless attack on the connected car and security protocol for in-vehicle CAN. Samuel Woo, Tran. Intel. Trans. Sys. 162Samuel Woo and others. 2015. A practical wireless attack on the connected car and security protocol for in-vehicle CAN. Tran. Intel. Trans. Sys. 16, 2 (2015).\n\nSession: Anomaly Detection for Controller Area Network AutoSec '19. Richardson, TX, USASession: Anomaly Detection for Controller Area Network AutoSec '19, March 27, 2019, Richardson, TX, USA\n", "annotations": {"author": "[{\"end\":149,\"start\":117},{\"end\":167,\"start\":150},{\"end\":184,\"start\":168},{\"end\":191,\"start\":185}]", "publisher": null, "author_last_name": "[{\"end\":148,\"start\":117},{\"end\":166,\"start\":159},{\"end\":183,\"start\":176},{\"end\":190,\"start\":185}]", "author_first_name": "[{\"end\":156,\"start\":150},{\"end\":158,\"start\":157},{\"end\":173,\"start\":168},{\"end\":175,\"start\":174}]", "author_affiliation": null, "title": "[{\"end\":65,\"start\":1},{\"end\":256,\"start\":192}]", "venue": "[{\"end\":312,\"start\":258}]", "abstract": "[{\"end\":3141,\"start\":1715}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b3\"},\"end\":3685,\"start\":3682},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3928,\"start\":3925},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":4632,\"start\":4628},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":4655,\"start\":4651},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":4899,\"start\":4896},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":4901,\"start\":4899},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4904,\"start\":4901},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4907,\"start\":4904},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4929,\"start\":4925},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":4932,\"start\":4929},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":5218,\"start\":5214},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":5304,\"start\":5301},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":5307,\"start\":5304},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5462,\"start\":5459},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":5465,\"start\":5462},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":5468,\"start\":5465},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":5634,\"start\":5630},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5881,\"start\":5878},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":5883,\"start\":5881},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":5886,\"start\":5883},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":6331,\"start\":6327},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6334,\"start\":6331},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":6601,\"start\":6597},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7089,\"start\":7086},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":7248,\"start\":7244},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7267,\"start\":7263},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":7710,\"start\":7707},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":8502,\"start\":8498},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":8505,\"start\":8502},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":9523,\"start\":9520},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10268,\"start\":10264},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":10520,\"start\":10517},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":17139,\"start\":17135},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":17142,\"start\":17139}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":17294,\"start\":17231},{\"attributes\":{\"id\":\"fig_1\"},\"end\":17526,\"start\":17295},{\"attributes\":{\"id\":\"fig_2\"},\"end\":17629,\"start\":17527},{\"attributes\":{\"id\":\"fig_3\"},\"end\":17686,\"start\":17630},{\"attributes\":{\"id\":\"fig_4\"},\"end\":17954,\"start\":17687},{\"attributes\":{\"id\":\"fig_5\"},\"end\":18288,\"start\":17955},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":18531,\"start\":18289}]", "paragraph": "[{\"end\":4719,\"start\":3170},{\"end\":5219,\"start\":4721},{\"end\":5887,\"start\":5245},{\"end\":6225,\"start\":5889},{\"end\":6406,\"start\":6227},{\"end\":7638,\"start\":6408},{\"end\":8075,\"start\":7640},{\"end\":9524,\"start\":8093},{\"end\":9883,\"start\":9549},{\"end\":9888,\"start\":9885},{\"end\":11500,\"start\":9959},{\"end\":12385,\"start\":11502},{\"end\":12886,\"start\":12400},{\"end\":13208,\"start\":12888},{\"end\":13989,\"start\":13210},{\"end\":14289,\"start\":14009},{\"end\":14671,\"start\":14312},{\"end\":15464,\"start\":14694},{\"end\":16509,\"start\":15494},{\"end\":17230,\"start\":16511}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":9958,\"start\":9889}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":3168,\"start\":3143},{\"attributes\":{\"n\":\"1.1\"},\"end\":5243,\"start\":5222},{\"attributes\":{\"n\":\"1.2\"},\"end\":8091,\"start\":8078},{\"attributes\":{\"n\":\"2\"},\"end\":9547,\"start\":9527},{\"attributes\":{\"n\":\"3\"},\"end\":12398,\"start\":12388},{\"attributes\":{\"n\":\"3.1\"},\"end\":14007,\"start\":13992},{\"attributes\":{\"n\":\"3.2\"},\"end\":14310,\"start\":14292},{\"attributes\":{\"n\":\"3.3\"},\"end\":14692,\"start\":14674},{\"attributes\":{\"n\":\"4\"},\"end\":15492,\"start\":15467},{\"end\":17242,\"start\":17232},{\"end\":17306,\"start\":17296},{\"end\":17538,\"start\":17528},{\"end\":17641,\"start\":17631},{\"end\":17698,\"start\":17688},{\"end\":17966,\"start\":17956}]", "table": "[{\"end\":18531,\"start\":18425}]", "figure_caption": "[{\"end\":17294,\"start\":17244},{\"end\":17526,\"start\":17308},{\"end\":17629,\"start\":17540},{\"end\":17686,\"start\":17643},{\"end\":17954,\"start\":17700},{\"end\":18288,\"start\":17968},{\"end\":18425,\"start\":18291}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3938,\"start\":3929},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":10088,\"start\":10080},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":10681,\"start\":10673},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":13207,\"start\":13199},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":14204,\"start\":14196},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":14511,\"start\":14502},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":14986,\"start\":14978}]", "bib_author_first_name": "[{\"end\":18570,\"start\":18564},{\"end\":18582,\"start\":18578},{\"end\":18724,\"start\":18717},{\"end\":18996,\"start\":18987},{\"end\":19003,\"start\":19002},{\"end\":19463,\"start\":19454},{\"end\":19470,\"start\":19469},{\"end\":20038,\"start\":20034},{\"end\":20056,\"start\":20048},{\"end\":20066,\"start\":20062},{\"end\":20389,\"start\":20381},{\"end\":20405,\"start\":20398},{\"end\":20410,\"start\":20406},{\"end\":20425,\"start\":20419},{\"end\":20838,\"start\":20834},{\"end\":20857,\"start\":20851},{\"end\":21187,\"start\":21181},{\"end\":21548,\"start\":21541},{\"end\":21561,\"start\":21555},{\"end\":21838,\"start\":21830},{\"end\":21852,\"start\":21844},{\"end\":22142,\"start\":22139},{\"end\":22738,\"start\":22732},{\"end\":22753,\"start\":22747},{\"end\":23094,\"start\":23087},{\"end\":23108,\"start\":23103},{\"end\":23313,\"start\":23306},{\"end\":23327,\"start\":23322},{\"end\":23645,\"start\":23639},{\"end\":23647,\"start\":23646},{\"end\":23675,\"start\":23674},{\"end\":23691,\"start\":23690},{\"end\":23706,\"start\":23701},{\"end\":23708,\"start\":23707},{\"end\":24097,\"start\":24090},{\"end\":24309,\"start\":24304},{\"end\":24554,\"start\":24553},{\"end\":24918,\"start\":24914},{\"end\":24922,\"start\":24919},{\"end\":24931,\"start\":24929},{\"end\":24936,\"start\":24932},{\"end\":24950,\"start\":24942},{\"end\":25215,\"start\":25200},{\"end\":25427,\"start\":25418},{\"end\":25436,\"start\":25435},{\"end\":25455,\"start\":25454},{\"end\":25472,\"start\":25463},{\"end\":25767,\"start\":25766},{\"end\":25780,\"start\":25774},{\"end\":25782,\"start\":25781},{\"end\":25796,\"start\":25790},{\"end\":25798,\"start\":25797},{\"end\":26135,\"start\":26129}]", "bib_author_last_name": "[{\"end\":18576,\"start\":18571},{\"end\":18734,\"start\":18725},{\"end\":19000,\"start\":18997},{\"end\":19008,\"start\":19004},{\"end\":19014,\"start\":19010},{\"end\":19467,\"start\":19464},{\"end\":19475,\"start\":19471},{\"end\":19481,\"start\":19477},{\"end\":20046,\"start\":20039},{\"end\":20060,\"start\":20057},{\"end\":20071,\"start\":20067},{\"end\":20396,\"start\":20390},{\"end\":20417,\"start\":20411},{\"end\":20434,\"start\":20426},{\"end\":20849,\"start\":20839},{\"end\":20869,\"start\":20858},{\"end\":21193,\"start\":21188},{\"end\":21553,\"start\":21549},{\"end\":21566,\"start\":21562},{\"end\":21842,\"start\":21839},{\"end\":21869,\"start\":21853},{\"end\":21874,\"start\":21871},{\"end\":22145,\"start\":22143},{\"end\":22745,\"start\":22739},{\"end\":22765,\"start\":22754},{\"end\":23101,\"start\":23095},{\"end\":23116,\"start\":23109},{\"end\":23320,\"start\":23314},{\"end\":23335,\"start\":23328},{\"end\":23663,\"start\":23648},{\"end\":23672,\"start\":23665},{\"end\":23681,\"start\":23676},{\"end\":23688,\"start\":23683},{\"end\":23699,\"start\":23692},{\"end\":23714,\"start\":23709},{\"end\":23723,\"start\":23716},{\"end\":24103,\"start\":24098},{\"end\":24315,\"start\":24310},{\"end\":24323,\"start\":24317},{\"end\":24560,\"start\":24555},{\"end\":24927,\"start\":24923},{\"end\":24940,\"start\":24937},{\"end\":24954,\"start\":24951},{\"end\":25222,\"start\":25216},{\"end\":25433,\"start\":25428},{\"end\":25443,\"start\":25437},{\"end\":25452,\"start\":25445},{\"end\":25461,\"start\":25456},{\"end\":25478,\"start\":25473},{\"end\":25485,\"start\":25480},{\"end\":25772,\"start\":25768},{\"end\":25788,\"start\":25783},{\"end\":25806,\"start\":25799},{\"end\":25818,\"start\":25808},{\"end\":26139,\"start\":26136}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":18648,\"start\":18533},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":15858039},\"end\":18924,\"start\":18650},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":3336658},\"end\":19379,\"start\":18926},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":14729648},\"end\":19649,\"start\":19381},{\"attributes\":{\"id\":\"b4\"},\"end\":19950,\"start\":19651},{\"attributes\":{\"doi\":\"10.4271/2017-01-1654\",\"id\":\"b5\",\"matched_paper_id\":51767860},\"end\":20316,\"start\":19952},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":19396874},\"end\":20808,\"start\":20318},{\"attributes\":{\"doi\":\"10.1162/neco.1997.9.8.1735\",\"id\":\"b7\",\"matched_paper_id\":1915014},\"end\":21076,\"start\":20810},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":7830197},\"end\":21453,\"start\":21078},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":18256723},\"end\":21740,\"start\":21455},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":52916016},\"end\":22111,\"start\":21742},{\"attributes\":{\"id\":\"b11\"},\"end\":22223,\"start\":22113},{\"attributes\":{\"doi\":\"10.1109/ACCESS.2017.2782159\",\"id\":\"b12\",\"matched_paper_id\":3448908},\"end\":22556,\"start\":22225},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":58828847},\"end\":23032,\"start\":22558},{\"attributes\":{\"id\":\"b14\"},\"end\":23249,\"start\":23034},{\"attributes\":{\"id\":\"b15\"},\"end\":23483,\"start\":23251},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":207249940},\"end\":24020,\"start\":23485},{\"attributes\":{\"id\":\"b17\"},\"end\":24227,\"start\":24022},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":102351288},\"end\":24499,\"start\":24229},{\"attributes\":{\"doi\":\"file:/localhost/opt/grobid/grobid-home/tmp/dx.doi.org/10.1038/323533a0\",\"id\":\"b19\",\"matched_paper_id\":237368852},\"end\":24805,\"start\":24501},{\"attributes\":{\"id\":\"b20\"},\"end\":25141,\"start\":24807},{\"attributes\":{\"id\":\"b21\"},\"end\":25347,\"start\":25143},{\"attributes\":{\"doi\":\"arXiv:1808.10840\",\"id\":\"b22\",\"matched_paper_id\":52144819},\"end\":25713,\"start\":25349},{\"attributes\":{\"doi\":\"arXiv:1811.07897\",\"id\":\"b23\",\"matched_paper_id\":53728211},\"end\":26036,\"start\":25715},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":206740341},\"end\":26327,\"start\":26038},{\"attributes\":{\"id\":\"b25\"},\"end\":26519,\"start\":26329}]", "bib_title": "[{\"end\":18715,\"start\":18650},{\"end\":18985,\"start\":18926},{\"end\":19452,\"start\":19381},{\"end\":19745,\"start\":19651},{\"end\":20032,\"start\":19952},{\"end\":20379,\"start\":20318},{\"end\":20832,\"start\":20810},{\"end\":21179,\"start\":21078},{\"end\":21539,\"start\":21455},{\"end\":21828,\"start\":21742},{\"end\":22304,\"start\":22225},{\"end\":22730,\"start\":22558},{\"end\":23085,\"start\":23034},{\"end\":23304,\"start\":23251},{\"end\":23637,\"start\":23485},{\"end\":24302,\"start\":24229},{\"end\":24551,\"start\":24501},{\"end\":25416,\"start\":25349},{\"end\":25764,\"start\":25715},{\"end\":26127,\"start\":26038}]", "bib_author": "[{\"end\":18578,\"start\":18564},{\"end\":18585,\"start\":18578},{\"end\":18736,\"start\":18717},{\"end\":19002,\"start\":18987},{\"end\":19010,\"start\":19002},{\"end\":19016,\"start\":19010},{\"end\":19469,\"start\":19454},{\"end\":19477,\"start\":19469},{\"end\":19483,\"start\":19477},{\"end\":20048,\"start\":20034},{\"end\":20062,\"start\":20048},{\"end\":20073,\"start\":20062},{\"end\":20398,\"start\":20381},{\"end\":20419,\"start\":20398},{\"end\":20436,\"start\":20419},{\"end\":20851,\"start\":20834},{\"end\":20871,\"start\":20851},{\"end\":21195,\"start\":21181},{\"end\":21555,\"start\":21541},{\"end\":21568,\"start\":21555},{\"end\":21844,\"start\":21830},{\"end\":21871,\"start\":21844},{\"end\":21876,\"start\":21871},{\"end\":22147,\"start\":22139},{\"end\":22747,\"start\":22732},{\"end\":22767,\"start\":22747},{\"end\":23103,\"start\":23087},{\"end\":23118,\"start\":23103},{\"end\":23322,\"start\":23306},{\"end\":23337,\"start\":23322},{\"end\":23665,\"start\":23639},{\"end\":23674,\"start\":23665},{\"end\":23683,\"start\":23674},{\"end\":23690,\"start\":23683},{\"end\":23701,\"start\":23690},{\"end\":23716,\"start\":23701},{\"end\":23725,\"start\":23716},{\"end\":24105,\"start\":24090},{\"end\":24317,\"start\":24304},{\"end\":24325,\"start\":24317},{\"end\":24562,\"start\":24553},{\"end\":24929,\"start\":24914},{\"end\":24942,\"start\":24929},{\"end\":24956,\"start\":24942},{\"end\":25224,\"start\":25200},{\"end\":25435,\"start\":25418},{\"end\":25445,\"start\":25435},{\"end\":25454,\"start\":25445},{\"end\":25463,\"start\":25454},{\"end\":25480,\"start\":25463},{\"end\":25487,\"start\":25480},{\"end\":25774,\"start\":25766},{\"end\":25790,\"start\":25774},{\"end\":25808,\"start\":25790},{\"end\":25820,\"start\":25808},{\"end\":26141,\"start\":26129}]", "bib_venue": "[{\"end\":18562,\"start\":18533},{\"end\":18761,\"start\":18736},{\"end\":19101,\"start\":19016},{\"end\":19503,\"start\":19483},{\"end\":19770,\"start\":19747},{\"end\":20112,\"start\":20093},{\"end\":20514,\"start\":20436},{\"end\":20910,\"start\":20897},{\"end\":21244,\"start\":21195},{\"end\":21576,\"start\":21568},{\"end\":21908,\"start\":21876},{\"end\":22137,\"start\":22113},{\"end\":22344,\"start\":22333},{\"end\":22782,\"start\":22767},{\"end\":23125,\"start\":23118},{\"end\":23350,\"start\":23337},{\"end\":23736,\"start\":23725},{\"end\":24088,\"start\":24022},{\"end\":24340,\"start\":24325},{\"end\":24638,\"start\":24632},{\"end\":24912,\"start\":24807},{\"end\":25198,\"start\":25143},{\"end\":25512,\"start\":25503},{\"end\":25851,\"start\":25836},{\"end\":26164,\"start\":26141},{\"end\":26395,\"start\":26329},{\"end\":18776,\"start\":18763},{\"end\":19173,\"start\":19103},{\"end\":20588,\"start\":20516},{\"end\":23743,\"start\":23738},{\"end\":24351,\"start\":24342},{\"end\":25862,\"start\":25853}]"}}}, "year": 2023, "month": 12, "day": 17}