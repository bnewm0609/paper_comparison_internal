{"id": 251518153, "updated": "2023-10-07 14:40:46.649", "metadata": {"title": "MolSearch: Search-based Multi-objective Molecular Generation and Property Optimization", "authors": "[{\"first\":\"Mengying\",\"last\":\"Sun\",\"middle\":[]},{\"first\":\"Jing\",\"last\":\"Xing\",\"middle\":[]},{\"first\":\"Han\",\"last\":\"Meng\",\"middle\":[]},{\"first\":\"Huijun\",\"last\":\"Wang\",\"middle\":[]},{\"first\":\"Bin\",\"last\":\"Chen\",\"middle\":[]},{\"first\":\"Jiayu\",\"last\":\"Zhou\",\"middle\":[]}]", "venue": "KDD : proceedings. International Conference on Knowledge Discovery & Data Mining", "journal": "KDD : proceedings. International Conference on Knowledge Discovery & Data Mining", "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "Leveraging computational methods to generate small molecules with desired properties has been an active research area in the drug discovery field. Towards real-world applications, however, efficient generation of molecules that satisfy multiple property requirements simultaneously remains a key challenge. In this paper, we tackle this challenge using a search-based approach and propose a simple yet effective framework called MolSearch for multi-objective molecular generation (optimization).We show that given proper design and sufficient domain information, search-based methods can achieve performance comparable or even better than deep learning methods while being computationally efficient. Such efficiency enables massive exploration of chemical space given constrained computational resources. In particular, MolSearch starts with existing molecules and uses a two-stage search strategy to gradually modify them into new ones, based on transformation rules derived systematically and exhaustively from large compound libraries. We evaluate MolSearch in multiple benchmark generation settings and demonstrate its effectiveness and efficiency.", "fields_of_study": "[\"Medicine\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": "37056719", "pubmedcentral": null, "dblp": "conf/kdd/SunXMWCZ22", "doi": "10.1145/3534678.3542676"}}, "content": {"source": {"pdf_hash": "ca1490bf357a09a74d04c5172224af57aa6e56dc", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "f61b721b88a22ae7793c58bc54b59638d44b5933", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/ca1490bf357a09a74d04c5172224af57aa6e56dc.txt", "contents": "\nMolSearch: Search-based Multi-objective Molecular Generation and Property Optimization\nAugust 14-18, 2022\n\nMengying Sun \nJing Xing xingjin1@msu.edu \nHan Meng menghan1@msu.edu \nHuijun Wang huijun.wang@agios.com \nJiayu Zhou jiayuz@msu.edu \n\nMichigan State University East Lansing\nMichiganUSA\n\n\nMichigan State University Grand Rapids\nMichiganUSA\n\n\nMichigan State University East Lansing\nMichiganUSA\n\n\nAgios Pharmaceuticals Cambridge\nMassachusettsUSA\n\n\nMichigan State University Grand Rapids\nMichiganUSA\n\n\nMichigan State University East Lansing\nMichiganUSA\n\nMolSearch: Search-based Multi-objective Molecular Generation and Property Optimization\n\nKDD\nWashington, DC, USA22August 14-18, 202210.1145/3534678.3542676Bin Chen KEYWORDS Molecular Generation and Optimization, Monte Carlo Tree Search, Design Moves ACM Reference Format: Mengying Sun, Jing Xing, Han Meng, Huijun Wang, Bin Chen, and Jiayu Zhou. 2022. MolSearch: Search-based Multi-objective Molecular Generation and Property Optimization. In Proceedings of Proceedings of the 28th ACM SIGKDD Conference on Knowledge Discovery and Data Mining (KDD '22). ACM, New York, NY, USA, 9 pages. https://CCS CONCEPTSApplied computing ! Bioinformatics;Computing method- ologies ! Machine learning algorithms\nLeveraging computational methods to generate small molecules with desired properties has been an active research area in the drug discovery eld. Towards real-world applications, however, ecient generation of molecules that satisfy multiple property requirements simultaneously remains a key challenge. In this paper, we tackle this challenge using a search-based approach and propose a simple yet eective framework called MolSearch for multi-objective molecular generation (optimization). We show that given proper design and sucient domain information, search-based methods can achieve performance comparable or even better than deep learning methods while being computationally ecient. Such eciency enables massive exploration of chemical space given constrained computational resources. In particular, MolSearch starts with existing molecules and uses a two-stage search strategy to gradually modify them into new ones, based on transformation rules derived systematically and exhaustively from large compound libraries. We evaluate MolSearch in multiple benchmark generation settings and demonstrate its eectiveness and eciency.\n\nINTRODUCTION\n\nSearching new compounds with desired properties is a routine task in early-stage drug discovery [7]. Common examples include improving the binding activity against one or multiple therapeutic targets while keeping the drug-likeness property; increasing drug solubility while minimizing the change of ADME properties. However, a small modication of chemical structures may lead to an unwanted change of property that even seasoned chemists cannot foresee. Moreover, the virtually innite chemical space and the diverse properties for consideration impose signicant challenges in practice [31]. Advanced machine learning models built upon historical biological and medicinal chemistry data are posed to aid medicinal chemists in designing compounds with multiple objectives eciently and eectively.\n\nLeveraging computational methods to facilitate and speed up the drug discovery process has always been an active research area [34,40]. In particular, using deep learning (DL) and reinforcement learning (RL) to generate and optimize molecules has recently received broad attentions [19,37,39], which we will summarize in detail later in section 2. Despite the advances, such methods either rely on the quality of latent space obtained by generative models [32], or suer from high variation, making it hard to train [35]. In reality, DL/RL methods consume large computational resources while the generated molecules could be hard to synthesize. Methods combing multiple objectives often do not work well [13].\n\nIn this paper, instead of leveraging DL, we propose a practical search-driven approach based on Monte Carlo tree search (MCTS) to generate molecules. We show that under proper design, search methods can achieve comparable or even better results to DL methods in terms of multi-objective molecular generation and optimization, while being computationally much more ecient. The eciency and multi-objective nature allow it to be readily deployed in massive real-world applications such as early-stage drug discovery.\n\nTo design an ecient and eective search framework for practical multi-objective molecular generation and optimization, we need to answer the following questions. Q1: where to start; Q2: what to search; and Q3: how to search. For Q1, prior works using MCTS to generate molecules mostly start with empty or very small molecules [18,38]. Since most drug-like molecules have 10-40 atoms, the search tree can grow deep and the space grows exponentially with the depth, making the search process less ecient and eective. Some work thus uses pre-trained RNN as a simulator to expand the tree however it requires additional pretraining [38]. Moreover, real optimization projects often have some candidates in place. For Q2, most prior works use atom-wise actions to modify molecules, which makes it hard to improve target property while maintaining drug-likeness and synthesis abilities [39,43]. Fragmentwise actions tend to work better but the editing rules are mostly heuristic [20,37]. For Q3, most existing methods combine all the objectives into one score and optimize for that [27,37]. However, simple aggregation of scores neither fully considers the dierences of objective classes nor reects real optimization scenario.\n\nWe seek solutions to Q1-Q3 and propose MolSearch, a simple and practicable search framework for multi-objective molecular generation and optimization. In MolSearch, we start with existing molecules and optimize them towards desired ones (Q1). The modication is based on design moves [3], i.e., transformation rules that are chemically reasonable and derived from large compound libraries (Q2). The property objectives are split into two groups with its rationale explained in detail later. The rst group contains all biological properties such as inhibition scores to proteins, and the second group includes non-biological properties such as druglikeness (QED) and synthetic accessibility (SA). Correspondingly, the entire search process consists of two stages: a HIT-MCTS stage that aims to improve biological properties, followed by a LEAD-MCTS stage that focuses on non-biological properties while keeping biological ones above certain threshold. Each stage contains a multi-objective Monte Carlo search tree where dierent property objectives are considered separately rather than combined (Q3).\n\nWe evaluate MolSearch on benchmark tasks under dierent generation settings and compare it with various baselines. The results show that MolSearch is on par with or even better than the baselines based on evaluation metrics calculated from success rate, novelty and diversity, within much less running time. In summary, our contributions are as follows:\n\n\u2022 MolSearch is among the rst that make search-based approaches comparable to DL-based methods in terms of multiobjective molecular generation and optimization. \u2022 MolSearch combines mature components, e.g., tree search, design moves, multi-objective optimization, in a novel way such that the generated molecules not only have desired properties but also achieve a wide range of diversity. \u2022 MolSearch is computationally very ecient and can be easily adopted into any real drug discovery projects without additional knowledge beyond property targets. \u2022 Additional to molecular generation, MolSearch is more tailored for hit-to-lead optimization given the nature of its design, which makes it very general and applicable.\n\n\nRELATED WORK\n\nIn general, molecular property optimization comprises three components or less: representation, generative model, and optimization model. The representation of molecules can be simplied molecularinput line-entry system (SMILES) strings, circular ngerprints, and raw graphs, which often corresponds to certain type of generative models. Grouping by each component can be too detailed to capture the big picture, therefore we choose to categorize the related studies based on optimization models.\n\nThe rst group optimizes molecules via Bayesian optimization [11,16,19,23]. These methods rst learn a latent space of molecules via generative models such as auto-encoders (AEs), then optimize the property by navigating in that latent space, and generates molecules through the decoding process. Most methods in this category only optimize for non-biological properties such as QED and penalized logP 1 , and focus on metrics such as validity of generated molecules. They heavily rely on the quality of learned latent spaces, which impose challenges for multi-objective optimization.\n\nInstead of manipulating latent representations, the second category utilizes reinforcement learning (RL) to optimize molecular property. One line of research applies policy gradient to netune generative models, e.g., GAN-based generator [12,30], GNNbased generator [39], Flow-based generator [25,33,41] to generate molecules with better property scores. The other line of work directly learns the value function of molecule states and optimizes for a given property via double Q-learning [43].\n\nBesides RL, the third category uses genetic algorithms (GAs) to generate molecules with desired properties [1,18,27]. The generation process of genetic algorithms usually follows mutation and cross-over rules that are predened from a reference compound library or domain expertise, which are not easy to obtain in general. Some work [27] also combines deep learning, e.g., a discriminator into GA generator to increase the diversity of molecules.\n\nThe least explored category aims to optimize molecular property using search methods, e.g., Monte Carlo tree search (MCTS). The earliest work traces back to [18,38] in which the authors use pre-trained RNNs or genetic mutation rules as the simulator for tree expansion and simulation. [28] proposes atom-based MCTS method without predened simulator. Again, all the methods focus on single and non-biological properties and are not tailored for multi-objective optimization. Not until recently RationaleRL [20] enables multi-objective molecular generation by rst searching property-related fragments using MCTS and then completing the molecular graph using reinforcement learning.\n\nThere are also pioneering works that do not fall into any of the categories above, e.g., MARS [37] proposes a Markov sampling process based on molecular fragments and graph neural networks (GNNs) and achieves state-of-the-art performance. Li et al. [24] proposed a conditional graph generative framework for optimizing molecular properties. In summary, we see a trend of utilizing fragment-based actions and directly navigating in the chemical space as opposed to generative models in recent works. Interested readers can refer to [13,42] for a comprehensive understanding of advances in molecular generation and optimization.  \n\n\nProblem Denition\n\nMolecule modication can be mathematically formulated as a Markov decision process (MDP) [5] given that the generated molecule only depends on the molecule being modied. The MDP can be written as M = (S, A, f , R) where S denotes the set of states (molecules), A denotes the set of actions (modications), f : S \u21e5 A ! S is the state transition function. For molecule modication, the state transition is deterministic, i.e., p(s t +1 |s t , a t ) = 1 for a given state-action pair.\n\nThat is to say, by taking a modication action, the current molecule reaches the next molecule with that modication with probability 1. R : S ! R d is the reward received for a given state, where d > 1 if multiple reward objectives are considered. The goal is to take the action that maximizes the expected reward, which can be approximated as Eq (1) under repeated simulations [15]:\nQ(s, a) = 1 N (s, a) ' N (s) i=1 I i (s, a)z i ,(1)\nwhere N (s) denotes the simulation times starting from state s and N (s, a) is the times that action a has been taken from state s. I i (s, a) is an indicator function with value 1 if action a is selected from state s at i-th round, 0 otherwise. z i is the nal reward for i-th simulation round starting from state s. A larger value of Q(s, a) indicates higher expected reward by taking action a from state s.\n\n\nMonte Carlo Tree Search\n\nMonte Carlo Tree Search (MCTS) adopts a tree structure to perform simulations and estimate the value of actions. Meanwhile it also uses the previously estimated action values to guide the search process towards higher rewards [8]. The basic MCTS procedure consists of four steps per iteration: a) Selection. Starting from the root node, a best child is recursively selected until a leaf node, i.e., a node that has not been expanded or terminated, is reached. b) Expansion. The selected leaf node is expanded based on a policy until the maximum number of child nodes is reached. c) Simulation. From each child node, recursively generate the next state until termination and get the nal reward. d) Backpropagation. The reward is backpropagated along the visited nodes to update their statistics until the root node. The process is repeated until a certain computational budget is met. The most important step of MCTS is the selection step where a criterion needs to be determined to compare dierent child nodes. The most commonly used criteria is the upper condence bound (UCB1) [2,22] in which a child node is selected to maximize:\nUCB1 =X j + q 2 ln n n j ,\nwhereX j is the averaged reward obtained so far for node j, n j denotes times of node j being selected and n is the total times of iteration. The rst termX j favors exploitation, i.e., choose the node with greater average performance; while the second term q 2 ln n n j votes for exploration, i.e., choose nodes that have not been visited so far. UCB1 balances between exploitation and exploration to avoid being trapped in local optimums. For single-objective MCTS, UCB1 is a scalar and maximization picks the node with the largest value. For multi-objective MCTS, the reward becomes a vector and the comparison is no longer straightforward. Next we formally dene each component for multiobjective MCTS under the context of molecular generation.\n\n\nMulti-objective Monte Carlo Tree Search\n\nFor molecular generation, each node of the tree (e.g., j ) represents an intermediate molecule. It is associated with a molecule state s j , number of visits n j , and a reward vector\nX j = (x 1 , .., x d ) 2 R d\nwhere d is the number of objectives. Without loss of generality, we assume that each objective is to be maximized. Before presenting how the reward is calculated, we rst introduce the following denitions regarding comparisons between vectors:\nDenition 1. Pareto Dominate. Given two points X = (x 1 , .., x d ) and X 0 = (x 0 1 , .., x 0 d ) , X is said to dominate X 0 , i.e., X \u232b X 0 if and only if x i x 0 i , 8i = 1, ..,d. X is said to strictly dominate X 0 , i.e., X X 0 if and only if X \u232b X 0 and 9i such that x i > x 0 i .\nDenition 2. Pareto Front. Given a set of vectors A \u21e2 R d , the non-dominant set P A in A is dened as:\nP A = {X 2 A : \u00f6X 0 2 A s.t . X 0 > X }\nThe Pareto front consists of all non-dominated points [36].\n\n\nAlgorithm 1: UCT algorithm for MO-MCTS.\n\nInput: root node 0 with state s 0 , computation budge N , maximum number of child K, exploration scalar 1 Function SEARCH( 0 ):\n2 for i = 1, .., N do 3 l = SELECTION( 0 ) // l = leaf 4 c = EXPAND( l ) // c = child 5 r c = SIMULATION( c ) 6 BACKPROP( c , r c ) 7 return 0 0 ; 8 Function SELECTION( ): 9 while is fully expanded do 10 for k = 1, .., K child node do 11 U k = X k n k + q 4 ln n+ln d 2n k 12 V p = ParetoNodeSet(U 1 , .., U k ) 13 return Random(V p );\nFor a Monte Carlo search tree, we maintain a global pool of all the Pareto molecules found so far. At each simulation round, given a termination state (molecule) with property score h = (h 1 , .., h d ) 2 R d , by comparing it with all Pareto molecules in the global pool, the reward vector R = (r 1 , .., r d ) 2 R d of this state is dened as:\nr i = 1 N p ' N p l =1 I[h i > h l i ], 8i = 1, . . . ,d\nwhere N p is the number of Pareto molecules and h l i is the i-th property value of Pareto molecule l. The calculation of reward treats each dimension separately, regardless of their scale dierence, which gains an advantage over methods that aggregate all dimensions into one score using predened weights. We also update the global Pareto pool by adding new Pareto molecules if found and removing invalid ones based on the comparison result. The reward R will be used for backpropagation with the update formula:\nn n + 1, X X + R, parent of ,\nwhich concludes the backward part of MCTS. Next we present the forward part. Starting from the root node, we recursively select the best child to proceed. To determine the best child for a given parent, we calculate the utility for each child:\nU k = X k n k + s 4 ln n + ln d 2n k ,\nwhere X k is the average reward obtained so far, n k and n are the times child node k being visited and the total iterations. d is the reward dimension. Based on Denition 1 and 2, we compute the Pareto node set given statistics of all child nodes. Once the set is computed, we randomly select one child in the set to proceed. Once the selection step is done, we reach a node that has never expanded before. Then we expand the leaf node and start simulations from its children, get reward and backpropagate again. The overall MCTS procedure is illustrated in Figure 2 and Algorithm 1. Due to space limit, we do not present the procedure of expansion and simulation in Algorithm 1 since they are the same as classic single-objective  MCTS and can be found in many places such as [8].\n\nThe key component in expansion and simulation step is the policy that used to generate the next state. In MolSearch, within each search tree, expansion and simulation share the same policy to produce actions:\nA = actions(s ),\nfor each node given current state s . The possible actions are obtained using transformations we will mention in the next section. Due to the large chemical space, usually there are thousands of possible actions for a given state and not all of them are promising, therefore a subset of actions are selected and served as a candidate pool for both expansion and simulation.\n\nHIT-MCTS vs LEAD-MCTS. The two search stages in MolSearch dier in how the candidates are picked given the original possible actions. In HIT-MCTS, the candidate actions are those yielding states with better property scores as compared to the current parent state.\n\nIn LEAD-MCTS, the candidate actions are those producing states with better property scores than a constant threshold. Theoretical Analysis. The theoretical analysis of multi-objective MCTS has been presented in prior works following concentration inequalities and union bound. Readers can refer to [2,10,36].\n\n\nDesign Moves\n\nA key challenge in MolSearch is the actions to take when searching for new molecules. The modication rules should be chemically reasonable, covering a variety of modication directions, and being large in size in order to successfully navigate in the chemical space. Design moves, proposed in [3], is such an approach. It extracts transformations among molecules based on matched molecular pair (MMP) [17] and outputs a collection of rules that systematically summarize the modication of molecules that exist and chemically valid in the current large compound database such as ChEMBL [26]. The transformation rules contain both atom-wise and fragmentwise modication and for the purpose of simplicity, we refer all of them as fragments.\n\nEach rule consists of three major components, a left-hand-side fragment (lhs_frag), an environment, and a right-hand-side fragment (rhs_frag), and can be written as follows:\n\nlhs_frag + environment >> rhs_frag An example of design move transformation is shown in Figure 3. Each matched molecular pair has three parts. The constant part denotes the places that remain the same before and after transformation. The variable part denotes the fragment to be replaced. The environment is the most important part in design move which characterizes the context of a transformation. The range of the context is determined by the radius r and contains all the atoms that can be reached from the fragment to be replaced within step size r . Such constraint ensures the transformation is chemically reasonable and the larger the radius r , the more likely the assumption holds true [3]. In Figure 3, we see that even for the same lhs_frag and rhs_frag, due to that environments are dierent, the transformations are treated as dierent transformations rules.\n\nWe summarized the statistics of all the design move rules extracted from ChEMBL based on radius r = 3 in Table 1. We see that it contains more than 1 million transformation rules with more than 600K unique pairs of fragments to be replaced. There are also more than 200K fragments and 50K environments in the total rules. For a transformation rule, the frequency it happens in the database ranges from 1 to 20K, which covers both common and rare transformations. The number of environments for the same rule also ranges from 1 to 2.5K. Given ChEMBL is one of the largest chemical databases, the rules are expected to cover all the possible moves of common molecules of biological interest. Moreover, unlike most prior works which only allow atom or fragment addition, design moves contain modications that can either increase or decrease the molecular size (436,532 vs 443,995), making it more exible to nd better modication directions.\n\n\nRationale of MolSearch\n\nThe last important question regarding MolSearch framework is the two-stage design in which biological properties are rst optimized and then followed by optimization of non-biological properties. The reason is two-folded. First, we observe that lower non-biological property (e.g., QED and SA) values are often due to large size or large number of rings of molecules since the fragments are already chemically valid. That is to say, reducing the size of generated molecules can achieve better QED and SA scores in general. However, design move requires valid environment in order to perform modication, the larger the molecules are, the more actions could be found. Therefore, optimizing QED/SA has to come after optimizing biological properties. Second, such design is also inspired by the real-world drug discovery routine that we rst nd drugs that are biologically active and then optimize them regarding other properties.\n\nAnother interesting property of such design is that, in general, molecules from HIT-MCTS stage are quite large, due to that HIT-MCTS modies molecules into hits by adding property-related fragments repeatedly; However, it is ne because LEAD-MCTS will trim the molecules for a higher QED/SA score by dropping property-unrelated fragments. The entire process will ensure that the nal molecules satises all the property requirements.\n\n\nEXPERIMENT\n\nWe conduct extensive experiments on benchmark tasks following [20,37] to demonstrate the eectiveness of MolSearch. The results show that search methods can achieve comparable and sometimes superior performance compared to advanced deep learning methods given sucient information and proper design of the algorithm.\n\n\nExperiment Setup\n\nProperty Objectives. We consider two biological properties that measure the inhibition of proteins related to Alzheimer disease:\n\n\u2022 GSK3 , score of inhibiting glycogen synthase kinase-3 \u2022 JNK3, score of inhibiting c-Jun N-terminal kinase-3\n\nThe scores are predicted probabilities of inhibition by pretrained random forest models from [20]. For non-biological properties, we follow [20,37] and also consider drug-likeness (QED) [6] and synthesis accessibility (SA) [14] scores. The SA score (originally in [1,10]) is reversely normalized to [0, 1]. For all scores, the higher the better. The goal is to nd compounds that mostly inhibit two essential proteins in Alzheimer's such that their potency is maximized while achieving favorable medicinal chemistry properties. Multi-objective generation setting. We consider 6 dierent generation settings as in [20,37]:\n\n\u2022 GSK3 /JNK3: inhibit GSK3 or JNK3 without constraints on QED and SA scores. \u2022 GSK3 +JNK3: jointly inhibit GSK3 and JNK3 without constraints on QED and SA scores. \u2022 GSK3 /JNK3+QED+SA: inhibit GSK3 or JNK3 while being druglike and easy to synthesize. \u2022 GSK3 +JNK3+QED+SA: jointly inhibiting GSK3 and JNK3 while being druglike and easy to synthesize.\n\nBaselines. We compare MolSearch with state-of-the-art methods from each category summarized in section 2: 1) JT-VAE [19], a method uses Bayesian optimization based on hidden representations from a VAE based on molecule fragments. 2) GCPN [39], a method uses policy gradient to netune a pre-trained molecule generator based on GNN. 3) MolDQN [43], a method directly learns the values of actions for target properties via double Q-learning and generate molecules based on that. 4) GA+D [27], a method utilizes genetic algorithm for molecule generation paired with an adversarial module to increase diversity. 5) RationaleRL [20], a method uses MCTS to nd property-related fragments and then completes the graph using RL. 6) MARS [37], a method utilizes Markov sampling based on GNN and molecule fragments. Evaluation Metrics. We evaluate the generated molecules using metrics similar to prior works [20,37]: 1) success rate (SR): the proportion of resulted molecules that satisfy all the targeted objectives, i.e., QED 0.6, SA 0.67, GSK3 0.5, and JNK3 0.5. 2) Novelty (Nov): the proportion of resulted molecules that have similarity less than 0.4 compared to the nearest neighbor x SNN in the reference dataset, i.e., Nov = 1\nN \u00d5 N i=1 I[sim(x i , x SNN ) < 0.4]\nwhere the similarity is calculated as the Tanimoto coecient [4] between two Morgan ngerprints [29] of molecules. The reference dataset in prior works is training data while in our work, the reference data becomes the start molecules. 3) Diversity (Div): the pair-wise dissimilarity among the generated molecules, i.e., Div    [37]. For MolSearch, we repeat the experiments for 10 times and report the mean and standard deviation.\n= 2 N (N 1) \u00d5 N i, j=1;i,j [1 sim(x i , x j )]\n. 4) PM: the product of SR, Nov and Div metrics, representing the possibility of generated molecules being simultaneously active, novel and diverse [37]. Start Molecules. A critical step in MolSearch is to pick the start molecules. We rst download dataset from the Repurposing Hub (https://clue.io/repurposing), which consists of 6,758 FDA-approved and clinical trail drugs. We then cluster all the drugs based on their Tanimoto similarity using Butina algorithm [9] with threshold 0.4, a commonly used cuto to quantify the structural similarity between molecules. It results in 5,727 small clusters, indicating that most molecules are not similar to each other. We select the centroid of each cluster, i.e., 5,727 dissimilar molecules, as the pre-processed dataset and construct start molecules from it. For benchmark objectives, to avoid making the task easier, we remove 1) all successful molecules, i.e., GSK3 0.5, JNK3 0.5, QED 0.6, SA 0.67; 2) top molecules with either GSK3 or JNK3 score larger than 0.8 in the dataset. That is to say, no start molecules has biological score higher than 0.8. We then choose the remaining molecules with GSK3 and JNK3 score no less than 0.3 as the start molecules. Such selection strategy aligns with molecular optimization in reality that starts with molecules having some signals towards the desired property. In total 96 molecules satisfy the starting criteria. Implementation Details. For MCTS, we set the maximum level of tree depth as 5 and test dierent values of maximum child nodes K = [3,5,7] and the number of simulations N = [5,10,20]. For design move, we utilize rules derived from environmental radius r = 3 and do not impose frequency constraint on the actions, i.e., any action with frequency 1 will be considered in each modication step. Running Time. In the GSK3 +JNK3+QED+SA setting, RationaleRL takes 6 hours to netune the model; GA+D takes 300 steps and 4 hours to reach its best performance; MARS takes 10 hours to converge; MolDQN takes 5 and 10 hours to nish for empty and nonempty variants respectively. MolSearch takes on average 0.4-1.0 hours per molecule in both search stages (Table 4). Each molecule only occupies very small amount of memory and computational resources, making MolSearch much more ecient than deep learning methods regardless of computation constraints.\n\n\nBenchmark Results\n\nWe perform MolSearch, i.e., start molecules ! HIT MCTS ! LEAD MCTS 10 times for each generation settings. In each search stage, we Overall Performance. We summarize all the results in Table 2 and  Table 3. MolSearch outperforms all baselines on 3 generation settings and always rank high (1st or 2nd) in terms of PM. Specically, when considering non-bioactivity objectives, i.e., GSK3 +JNK3+QED+SA, MolSearch signicantly outperforms the best baseline by 21.4% on the PM metric. Among all the metrics, MolSearch falls short on the novelty metric since it starts from known molecules and modify them into new ones. However, the novelty still ranks good via the two-stage design of MolSearch such that the generated molecules are not too similar as the original ones. The diversity of molecules generated by MolSearch always ranks high, possibly due to 1) dissimilarity of start molecules, 2) separation of dierent property objectives and 3) Pareto search on all objective directions. First, MolDQN-empty starts with empty molecules and uses atom-wise actions, and the SR of generated molecules are extreme low (\u21e1 0.00) in all settings. When we look into the scores of generated molecules, as shown in Table 5, we nd the QED and SA score of generated molecules are relatively high while GSK3 and JNK3 scores are very low. This means that QED and  SA are easier to optimize than biological objectives when starting from empty molecules and using atom-wise actions. However, in most real applications, optimizing biological objectives are the major focus before one considers drug-likeness and synthesis abilities. Second, MolDQN-nonempty starts from the same molecules we used in MolSearch, however, the success rates are still low although improved compared to MolDQN-empty. This is due to that MolDQN only allows addition actions thus cannot reduce the size of molecules, making QED and SA drop signicantly. Third, the low performances of both MolDQN variants imply that atom-wise actions generally works less eective compared to fragment-based actions for improving biological properties. For MolSearch, the search trees can nd desired molecules with relatively small depth and width, therefore it is not necessary to use Deep Q-learning to approximate the action values. All the above observations echo the rationale of MolSearch's design.\n\nMolSearch Dynamics. We next verify if the change of property scores across stages aligns with design motivation of MolSearch. HIT-MCTS aims to improve biological properties and Figure 4a conrms a signicant elevation for GSK3 and JNK3 scores. LEAD-MCTS aims to improve non-biological properties and Figure 4b reects such improvement especially for QED (Figure 4d). Figure  4c demonstrates that, even if we remove all successful molecules and top molecules at start (0.3-0.8 dashed box with grey points), MolSearch is still able to nd molecules with both scores larger than 0.8 (red region outside dashed box), demonstrating its power. Figure 5a shows the number of molecules generated in each stage for three settings where both biological and non-biological objectives are considered. We observe an exponential increase from start molecules to the later two stages. GSK3 is easier to optimize as compared to JNK3. Figure 5b shows the number of nal molecules generated by MolSearch for all settings. As the number of objectives increases, less valid molecules are found, which is reasonable. Visualization. We compare the molecules generated under setting GSK3 +JNK3+QED+SA by dierent methods using t-SNE plots shown in Figure 6 (a)-(c). The red crosses are the molecules that satisfy all the requirements in reference (training) dataset, while grey dots are molecules generated by each method. For MolSearch, there are no successful molecules in the start (reference) dataset, instead we plot the successful ones in HIT-MCTS stage. The start molecules of MolSearch are also plotted for reference (Figure 6c). We observe that baseline methods such as GA+D and RationaleRL generate molecules with large clusters, indicating relatively low diversity. The molecules generated by MolSearch evenly span the entire embedding space and also cover some novel regions compared to start molecules. MARS is very similar to MolSearch whose   generated molecules enjoy both diversity and novelty, therefore we seek other comparison between MARS and MolSearch. As shown in Figure 6d, MolSearch is able to nd more dominant molecules in terms of biological properties as compared to MARS (5 runs). We visualize the structure of several molecules generated by MolSearch with high property scores in Figure 7. Figure 8 shows an example trajectory of MolSearch under the generation setting GSK3 + JNK3 + QED + SA. The property scores for the start molecule are relatively low. After HIT-MCTS stage, the generated molecules obtain higher GSK3 and JNK3 score by replacing certain substructures of the original molecule while also keeping certain original substructures. As we also can see, the QED score for HIT molecules are extremely low due to their large size. After LEAD-MCTS stage, the QED scores of the nal molecules are elevated by dropping fragments that are less property related. The scaold of the nal molecules is not simply the substructure of start molecules but rather a combination of fragments from start molecules and new fragments from transformation rules. Also, the replacement is not completed in one round because the added fragments are relatively large, indicating the states are reached by multiple search steps instead of one. Sensitivity Analysis.   two generation settings. Table 7 shows the number of valid molecules corresponding to Table 6. We observe that the performance is not very dierent regarding dierent hyper-parameters, but rather the number of generated molecules are highly aected by these hyperparameters. Because the maximum number of child nodes and simulations rounds actually increases the search range such that more molecules can be found along the way.\n\n\nDiscussion\n\nThe extensive experiments of MolSearch demonstrated that given proper design and sucient information, search-based method is also able to nd molecules that satisfy multiple property requirements simultaneously with performance comparable to advanced methods using deep learning and reinforcement learning, while being much more time ecient. For MolSearch, the benets comes from several aspects. For example, the two-stage design increases the novelty of generated molecules; Treating dierent objectives separately improves the diversity of the generated molecules; Fragment-based actions and starting from existing molecules maintain the synthesis abilities and drug-likeness of generated molecules. Additional to properties in benchmark tasks, MolSearch can be easily adopted into real drug discovery projects targeting other objectives. For example, replacing GSK3 and JNK3 scoring models with COVID related predictors [21] may lead to the identication of novel and synthesizable compounds. Properties other than QED/SA, such as solubility and ADMET properties can also be included to search for more promising candidates.\n\nMolSearch also has its own limitations. First, the bioactivity scores drop in LEAD-MCTS compared to HIT-MCTS although they are still signicantly higher than start molecules (Figure 4a). It is because the child nodes only need to maintain bioacitivity score above 0.5 threshold in LEAD-MCTS in exchange of higher nonbioacitvity scores. It is possible to improve the situation by setting more strict constraint during LEAD-MCTS. Second, the evaluation metrics are calculated based on unique molecules found in the search process, however, we do observe the molecules generated in LEAD-MCTS often contain many duplicates and thus causes redundancy. Third, for objectives that has relatively clear structural requirement, e.g., binding to a specic protein target, MolSearch is able to nd desired molecules. However, if the objective is not sensitive to structure changes, i.e., regulation eects of multiple genes, then MolSearch, or any other related methods works less eectively. Last but not least, the scoring models are not perfect in reality since they also come form machine learning models, which may aect the quality of generation results.\n\nFigure 1 :\n1Overall framework of MolSearch. For a given start molecule, it rst goes through a HIT-MCTS stage which aims to improve the biological properties, e.g., GSK3 and JNK3, followed by a LEAD-MCTS stage where non-biological properties such as QED are optimized. n refers to number of generated molecules and y-axis reects the normalized scores.\n\nFigure 2 :\n2Multi-objective Monte Carlo tree search procedure. Each node represents an intermediate molecule which has a reward vector associated with it. A search iteration consists of selection, expansion, simulation, and backpropagation. For MolSearch, HIT-MCTS and LEAD-MCTS dier in the expansion and simulation policy (blue boxes).\n\nFigure 4 :\n4Property dynamics across MolSearch stages. (a)(b): average scores over 10 runs at each stage. (c): distribution of bioactivity scores during Start and HIT-MCTS stage. (d): QED distribution between HIT-MCTS and LEAD-MCTS stage. keep track of valid molecules and add them to the nal set. Because the number of generated molecules is not controllable in MolSearch, we calculated the metrics for two sets of generated molecules: 1) MolSearch: all the molecules generated by MolSearch; 2) MolSearch-5000: top 5000 molecules generated by MolSearch, ranked by the average score of all properties considered in one setting, to match the number of molecules generated by other baseline methods.\n\nFigure 5 :\n5Number of generated molecules across MolSearch stages and dierent generation settings (10 runs).\n\nFigure 6 Figure 7 :\n67: t-SNE visualization of generated molecules and positive molecules in the reference (training) dataset. Sample molecules generated by MolSearch in the GSK3 +JNK3+QED+SA setting with associated scores.\n\nFigure 8 :\n8MolSearch path for GSK3 + JNK3 + QED + SA.\n\n\nTransformation: Cl >> F Figure 3: Example of design moves. A transformation is only valid conditional on the existence of certain environments.Constant \nEnvironment (radius=3) Variable \n\nF \nCl \n\nTransformation: Cl >> F \n\nCl \nF \n\ncount_stat \nn \ndescriptive_stat \nrule \nenv \n# fragments \n236,827 \nmin \n1 \n1 \n# environment \n55,599 \nmax \n20,075 2,480 \n# rules \n1,048,575 \nmedian \n1 \n1 \n# unique rules \n672,117 \nmean \n1.78 \n1.56 \nAtom Types \nC, N, O, Cl, F, P, Br, I, S \n# augment rules \n436,532 \n# trim rules \n443,995 \n\n\n\nTable 1 :\n1Statistics of rules extracted from ChEMBL on environment radius r = 3. # denotes \"number of\".\n\nTable 2 :\n2Overall performance of comparison methods on bio-activity objectives. Results of RationaleRL, MolDQN are obtained by running their open source code. Results of JT-VAE, GCPN, GA+D and MARS are taken from[20,37]. For MolSearch, we repeat the experiments for 10 times and report the mean and standard deviation.Objectives \nGSK3 +QED+SA \nJNK3+QED+SA \nGSK3 +JNK3+QED+SA \nMethod \nSR \nNov \nDiv \nPM \nSR \nNov \nDiv \nPM \nSR \nNov \nDiv \nPM \nJT-VAE \n0.096 0.958 0.680 \n0.063 \n0.218 1.000 0.600 \n0.131 \n0.054 1.000 0.277 \n0.015 \nGCPN \n0.000 0.000 0.000 \n0.000 \n0.000 0.000 0.000 \n0.000 \n0.000 0.000 0.000 \n0.000 \nRationaleRL \n0.891 0.341 0.891 \n0.270 \n0.787 0.190 0.874 \n0.131 \n0.750 0.555 0.706 \n0.294 \nGA+D \n0.89 \n1.00 \n0.68 \n0.61 \n0.86 \n1.00 \n0.50 \n0.43 \n0.86 \n1.00 \n0.36 \n0.31 \nMARS \n0.995 0.950 0.719 \n0.680 \n0.913 0.948 0.779 \n0.674 \n0.923 0.824 0.719 \n0.547 \nMolDQN-empty \n0.000 0.224 0.331 \n0.000 \n0.000 0.089 0.245 \n0.000 \n0.000 0.046 0.166 \n0.000 \nMolDQN-nonempty 0.000 0.431 0.850 \n0.000 \n0.000 0.525 0.856 \n0.000 \n0.000 0.499 0.857 \n0.000 \nMolSearch \n1.000 0.821 0.856 0.702 \u00b1 0.005 1.000 0.783 0.831 0.651 \u00b1 0.009 1.000 0.818 0.811 0.664 \u00b1 0.007 \nMolSearch-5000 \n1.000 0.810 0.869 0.704 \u00b1 0.009 1.000 0.743 0.843 0.626 \u00b1 0.012 1.000 0.797 0.827 0.660 \u00b1 0.009 \nRanking \n1st \n2nd \n1st \n\n\n\nTable 3 :\n3Overall performance of comparison methods on bio-activity plus non-bioactivity objectives. Results of RationaleRL, MolDQN are obtained by running their open source code. Results of JT-VAE, GCPN, GA+D and MARS are taken from\n\n\nAll MolSearch experiments are done on AMD EPYC CPU cores 2 . Baselines requiring deep learning libraries are done on TITAN RTX GPUs with 24GB Memory.n_child n_sim Avg Median STD \n3 \n10 \n0.4h \n0.38h \n0.19h \n5 \n20 \n1.02h \n0.87h \n0.93h \nTable 4: Running time per molecule for MolSearch. \n\n\n\n\nMolDQN because it is the deep learning version of MCTS that tries to learn the values of all the actions and generate molecules that maximize the values. The dierences between MolDQN and MolSearch can help verify the motivation and eectiveness of MolSearch.Start Molecule GSK3 \nJNK3 QED \nSA \nEmpty \n0.262 \n0.083 0.870 0.603 \nNon-empty \n0.334 \n0.216 0.217 0.586 \nTable 5: Average scores of generated molecules by MolDQN \nin GSK3 +JNK3+QED+SA setting. \nMoreover, we conduct extensive experiments for the baseline \n\n\nTable 6\n6shows the overall performance of MolSearch under dierent combination of hyper-parameters forSetting \nGSK3 +JNK3 \nGSK3 +JNK3+QED+SA \nK, N \nSR \nNov \nDiv \nPM \nSR \nNov \nDiv \nPM \n3, 5 \n1.00 \n0.72 \n0.83 \n0.60 \n1.00 \n0.77 \n0.82 \n0.63 \n3, 10 \n1.00 \n0.78 \n0.83 \n0.65 \n1.00 \n0.82 \n0.81 \n0.67 \n3, 20 \n1.00 \n0.77 \n0.83 \n0.64 \n1.00 \n0.80 \n0.81 \n0.65 \n5, 5 \n1.00 \n0.76 \n0.83 \n0.63 \n1.00 \n0.79 \n0.82 \n0.65 \n5, 10 \n1.00 \n0.77 \n0.83 \n0.64 \n1.00 \n0.81 \n0.81 \n0.66 \n5, 20 \n1.00 \n0.80 \n0.83 \n0.66 \n1.00 \n0.82 \n0.81 \n0.67 \n7, 5 \n1.00 \n0.76 \n0.83 \n0.63 \n1.00 \n0.79 \n0.81 \n0.64 \n7, 10 \n1.00 \n0.78 \n0.83 \n0.65 \n1.00 \n0.84 \n0.81 \n0.68 \n7, 20 \n1.00 \n0.80 \n0.83 \n0.66 \n1.00 \n0.82 \n0.81 \n0.67 \n\n\n\nTable 6 :\n6Performance of MolSearch under dierent hyperparameters for two generation settings.Setting \nGSK3 +JNK3 \nGSK3 +JNK3+QED+SA \nN/K \n3 \n5 \n7 \n3 \n5 \n7 \n5 \n9,373 \n14,776 \n18,077 \n3,543 \n5,463 \n6,773 \n10 \n13,960 \n21,982 \n28,659 \n5,499 \n7,772 \n10,295 \n20 \n16,085 \n29,912 \n43,778 \n6,233 \n10,406 \n13,884 \n\n\n\nTable 7 :\n7Number of generated molecules by MolSearch under dierent hyper-parameters for two generation settings.\nMETHODIn this section, we present the proposed framework MolSearch as shown inFigure 1. The entire process consists of two search stages: a HIT-MCTS stage and a LEAD-MCTS stage. HIT-MCTS aims to modify molecules for better biological properties while LEAD-MCTS stage seeks molecules with better non-biological properties. Each stage utilizes a multi-objective Monte Carlo search tree to search for desired molecules.1 water-octanol partition coecient penalized by synthesis accessibility and number of cycles having more than 6 atoms, i.e., PlogP(m)=logP(m)-SA(m)-cycle(m)\nMolSearch code available at https://github.com/illidanlab/MolSearch.\n\nGuiding deep molecular optimization with genetic exploration. Junsu Sungsoo Ahn, Hankook Kim, Jinwoo Lee, Shin, arXiv:2007.04897arXiv preprintSungsoo Ahn, Junsu Kim, Hankook Lee, and Jinwoo Shin. 2020. Guiding deep molecular optimization with genetic exploration. arXiv preprint arXiv:2007.04897 (2020).\n\nFinite-time analysis of the multiarmed bandit problem. Peter Auer, Nicolo Cesa-Bianchi, Paul Fischer, Machine learning. 47Peter Auer, Nicolo Cesa-Bianchi, and Paul Fischer. 2002. Finite-time analysis of the multiarmed bandit problem. Machine learning 47, 2 (2002), 235-256.\n\nThe Playbooks of Medicinal Chemistry Design Moves. J\u00e9r\u00f4me Mahendra Awale, Laura Hert, Sereina Guasch, Christian Riniker, Kramer, Journal of Chemical Information and Modeling. 61Mahendra Awale, J\u00e9r\u00f4me Hert, Laura Guasch, Sereina Riniker, and Christian Kramer. 2021. The Playbooks of Medicinal Chemistry Design Moves. Journal of Chemical Information and Modeling 61, 2 (2021), 729-742.\n\nWhy is Tanimoto index an appropriate choice for ngerprint-based similarity calculations. D\u00e1vid Bajusz, Anita R\u00e1cz, K\u00e1roly H\u00e9berger, Journal of cheminformatics. 7D\u00e1vid Bajusz, Anita R\u00e1cz, and K\u00e1roly H\u00e9berger. 2015. Why is Tanimoto index an appropriate choice for ngerprint-based similarity calculations? Journal of cheminformatics 7, 1 (2015), 1-13.\n\nA Markovian decision process. Richard Bellman, Journal of mathematics and mechanics. 6Richard Bellman. 1957. A Markovian decision process. Journal of mathematics and mechanics 6, 5 (1957), 679-684.\n\nQuantifying the chemical beauty of drugs. G Richard Bickerton, V Gaia, J\u00e9r\u00e9my Paolini, Besnard, Nature chemistry. 4Sorel Muresan, and Andrew L HopkinsG Richard Bickerton, Gaia V Paolini, J\u00e9r\u00e9my Besnard, Sorel Muresan, and An- drew L Hopkins. 2012. Quantifying the chemical beauty of drugs. Nature chemistry 4, 2 (2012), 90-98.\n\nBasic principles of drug discovery and development. E Benjamin, Blass, ElsevierBenjamin E Blass. 2015. Basic principles of drug discovery and development. Elsevier.\n\nSpyridon Samothrakis, and Simon Colton. 2012. A survey of monte carlo tree search methods. B Cameron, Edward Browne, Daniel Powley, Whitehouse, M Simon, Lucas, I Peter, Philipp Cowling, Stephen Rohlfshagen, Diego Tavener, Perez, IEEE Transactions on Computational Intelligence and AI in games. 4Cameron B Browne, Edward Powley, Daniel Whitehouse, Simon M Lucas, Peter I Cowling, Philipp Rohlfshagen, Stephen Tavener, Diego Perez, Spyridon Samoth- rakis, and Simon Colton. 2012. A survey of monte carlo tree search methods. IEEE Transactions on Computational Intelligence and AI in games 4, 1 (2012), 1-43.\n\nUnsupervised data base clustering based on daylight's ngerprint and Tanimoto similarity: A fast and automated way to cluster small and large data sets. Darko Butina, Journal of Chemical Information and Computer Sciences. 394Darko Butina. 1999. Unsupervised data base clustering based on daylight's ngerprint and Tanimoto similarity: A fast and automated way to cluster small and large data sets. Journal of Chemical Information and Computer Sciences 39, 4 (1999), 747-750.\n\nPareto monte carlo tree search for multiobjective informative planning. Weizhe Chen, Lantao Liu, arXiv:2111.01825arXiv preprintWeizhe Chen and Lantao Liu. 2021. Pareto monte carlo tree search for multi- objective informative planning. arXiv preprint arXiv:2111.01825 (2021).\n\nHanjun Dai, Yingtao Tian, Bo Dai, Steven Skiena, Le Song, arXiv:1802.08786Syntax-directed variational autoencoder for structured data. arXiv preprintHanjun Dai, Yingtao Tian, Bo Dai, Steven Skiena, and Le Song. 2018. Syntax-directed variational autoencoder for structured data. arXiv preprint arXiv:1802.08786 (2018).\n\nMolGAN: An implicit generative model for small molecular graphs. Nicola De, Cao , Thomas Kipf, arXiv:1805.11973arXiv preprintNicola De Cao and Thomas Kipf. 2018. MolGAN: An implicit generative model for small molecular graphs. arXiv preprint arXiv:1805.11973 (2018).\n\nDeep learning for molecular design-a review of the state of the art. Zois Daniel C Elton, Boukouvalas, Peter W Mark D Fuge, Chung, Molecular Systems Design & Engineering. 4Daniel C Elton, Zois Boukouvalas, Mark D Fuge, and Peter W Chung. 2019. Deep learning for molecular design-a review of the state of the art. Molecular Systems Design & Engineering 4, 4 (2019), 828-849.\n\nEstimation of synthetic accessibility score of drug-like molecules based on molecular complexity and fragment contributions. Peter Ertl, Ansgar Schuenhauer, Journal of cheminformatics. 1Peter Ertl and Ansgar Schuenhauer. 2009. Estimation of synthetic accessibil- ity score of drug-like molecules based on molecular complexity and fragment contributions. Journal of cheminformatics 1, 1 (2009), 1-11.\n\nMonte-Carlo tree search and rapid action value estimation in computer Go. Sylvain Gelly, David Silver, Articial Intelligence. 175Sylvain Gelly and David Silver. 2011. Monte-Carlo tree search and rapid action value estimation in computer Go. Articial Intelligence 175, 11 (2011), 1856-1875.\n\nAutomatic chemical design using a data-driven continuous representation of molecules. Rafael G\u00f3mez-Bombarelli, Jennifer N Wei, David Duvenaud, Jos\u00e9 Miguel Hern\u00e1ndez-Lobato, Benjam\u00edn S\u00e1nchez-Lengeling, Dennis Sheberla, Jorge Aguilera-Iparraguirre, Timothy D Hirzel, P Ryan, Al\u00e1n Adams, Aspuru-Guzik, ACS central science. 4Rafael G\u00f3mez-Bombarelli, Jennifer N Wei, David Duvenaud, Jos\u00e9 Miguel Hern\u00e1ndez-Lobato, Benjam\u00edn S\u00e1nchez-Lengeling, Dennis Sheberla, Jorge Aguilera-Iparraguirre, Timothy D Hirzel, Ryan P Adams, and Al\u00e1n Aspuru-Guzik. 2018. Automatic chemical design using a data-driven continuous representation of molecules. ACS central science 4, 2 (2018), 268-276.\n\nComputationally ecient algorithm to identify matched molecular pairs (MMPs) in large data sets. Jameed Hussain, Ceara Rea, Journal of chemical information and modeling. 50Jameed Hussain and Ceara Rea. 2010. Computationally ecient algorithm to identify matched molecular pairs (MMPs) in large data sets. Journal of chemical information and modeling 50, 3 (2010), 339-348.\n\nA graph-based genetic algorithm and generative model/Monte Carlo tree search for the exploration of chemical space. H Jan, Jensen, Chemical science. 10Jan H Jensen. 2019. A graph-based genetic algorithm and generative model/Monte Carlo tree search for the exploration of chemical space. Chemical science 10, 12 (2019), 3567-3572.\n\nJunction tree variational autoencoder for molecular graph generation. Wengong Jin, Regina Barzilay, Tommi Jaakkola, PMLRInternational conference on machine learning. Wengong Jin, Regina Barzilay, and Tommi Jaakkola. 2018. Junction tree varia- tional autoencoder for molecular graph generation. In International conference on machine learning. PMLR, 2323-2332.\n\nMulti-objective molecule generation using interpretable substructures. Wengong Jin, Regina Barzilay, Tommi Jaakkola, International Conference on Machine Learning. PMLR. Wengong Jin, Regina Barzilay, and Tommi Jaakkola. 2020. Multi-objective mole- cule generation using interpretable substructures. In International Conference on Machine Learning. PMLR, 4849-4859.\n\nA machine learning platform to estimate anti-SARS-CoV-2 activities. B Govinda, Giovanni Kc, Srijan Bocci, Md Mahmudulla Verma, Jayme Hassan, Jeremy J Holmes, Suman Yang, Tudor I Sirimulla, Oprea, Nature Machine Intelligence. 3Govinda B Kc, Giovanni Bocci, Srijan Verma, Md Mahmudulla Hassan, Jayme Holmes, Jeremy J Yang, Suman Sirimulla, and Tudor I Oprea. 2021. A machine learning platform to estimate anti-SARS-CoV-2 activities. Nature Machine Intelli- gence 3, 6 (2021), 527-535.\n\nBandit based monte-carlo planning. Levente Kocsis, Csaba Szepesv\u00e1ri, European conference on machine learning. SpringerLevente Kocsis and Csaba Szepesv\u00e1ri. 2006. Bandit based monte-carlo planning. In European conference on machine learning. Springer, 282-293.\n\nGrammar variational autoencoder. J Matt, Brooks Kusner, Jos\u00e9 Miguel Hern\u00e1ndez-Lobato Paige, International Conference on Machine Learning. PMLR. Matt J Kusner, Brooks Paige, and Jos\u00e9 Miguel Hern\u00e1ndez-Lobato. 2017. Grammar variational autoencoder. In International Conference on Machine Learning. PMLR, 1945-1954.\n\nMulti-objective de novo drug design with conditional graph generative model. Yibo Li, Liangren Zhang, Zhenming Liu, Journal of cheminformatics. 10Yibo Li, Liangren Zhang, and Zhenming Liu. 2018. Multi-objective de novo drug design with conditional graph generative model. Journal of cheminformatics 10, 1 (2018), 1-24.\n\nGraphDF: A discrete ow model for molecular graph generation. Youzhi Luo, Keqiang Yan, Shuiwang Ji, arXiv:2102.01189arXiv preprintYouzhi Luo, Keqiang Yan, and Shuiwang Ji. 2021. GraphDF: A discrete ow model for molecular graph generation. arXiv preprint arXiv:2102.01189 (2021).\n\nChEMBL: towards direct deposition of bioassay data. David Mendez, Anna Gaulton, Patr\u00edcia Bento, Jon Chambers, Marleen De Veij, Eloy F\u00e9lix, Paula Mar\u00eda, Juan F Magari\u00f1os, Prudence Mosquera, Micha\u0142 Mutowo, Nowotka, Nucleic acids research. 47David Mendez, Anna Gaulton, A Patr\u00edcia Bento, Jon Chambers, Marleen De Veij, Eloy F\u00e9lix, Mar\u00eda Paula Magari\u00f1os, Juan F Mosquera, Prudence Mutowo, Micha\u0142 Nowotka, et al. 2019. ChEMBL: towards direct deposition of bioassay data. Nucleic acids research 47, D1 (2019), D930-D940.\n\nAugmenting genetic algorithms with deep neural networks for exploring the chemical space. Akshatkumar Nigam, Pascal Friederich, Mario Krenn, Al\u00e1n Aspuru-Guzik, arXiv:1909.11655arXiv preprintAkshatKumar Nigam, Pascal Friederich, Mario Krenn, and Al\u00e1n Aspuru-Guzik. 2019. Augmenting genetic algorithms with deep neural networks for exploring the chemical space. arXiv preprint arXiv:1909.11655 (2019).\n\nGoal directed molecule generation using monte carlo tree search. Karthik Anand A Rajasekar, Balaraman Raman, Ravindran, arXiv:2010.16399arXiv preprintAnand A Rajasekar, Karthik Raman, and Balaraman Ravindran. 2020. Goal directed molecule generation using monte carlo tree search. arXiv preprint arXiv:2010.16399 (2020).\n\nExtended-connectivity ngerprints. David Rogers, Mathew Hahn, Journal of chemical information and modeling. 50David Rogers and Mathew Hahn. 2010. Extended-connectivity ngerprints. Journal of chemical information and modeling 50, 5 (2010), 742-754.\n\nOptimizing distributions over molecular space. An objectivereinforced generative adversarial network for inverse-design chemistry (OR-GANIC). Benjamin Sanchez-Lengeling, Carlos Outeiral, L Gabriel, Alan Guimaraes, Aspuru-Guzik, Benjamin Sanchez-Lengeling, Carlos Outeiral, Gabriel L Guimaraes, and Alan Aspuru-Guzik. 2017. Optimizing distributions over molecular space. An objective- reinforced generative adversarial network for inverse-design chemistry (OR- GANIC). (2017).\n\nComputer-based de novo design of drug-like molecules. Gisbert Schneider, Uli Fechner, Nature Reviews Drug Discovery. 4Gisbert Schneider and Uli Fechner. 2005. Computer-based de novo design of drug-like molecules. Nature Reviews Drug Discovery 4, 8 (2005), 649-663.\n\nTaking the human out of the loop: A review of Bayesian optimization. Bobak Shahriari, Kevin Swersky, Ziyu Wang, P Ryan, Nando De Adams, Freitas, Proc. IEEE. 104Bobak Shahriari, Kevin Swersky, Ziyu Wang, Ryan P Adams, and Nando De Fre- itas. 2015. Taking the human out of the loop: A review of Bayesian optimization. Proc. IEEE 104, 1 (2015), 148-175.\n\nGraphaf: a ow-based autoregressive model for molecular graph generation. Chence Shi, Minkai Xu, Zhaocheng Zhu, Weinan Zhang, Ming Zhang, Jian Tang, arXiv:2001.09382arXiv preprintChence Shi, Minkai Xu, Zhaocheng Zhu, Weinan Zhang, Ming Zhang, and Jian Tang. 2020. Graphaf: a ow-based autoregressive model for molecular graph generation. arXiv preprint arXiv:2001.09382 (2020).\n\nComputational methods in drug discovery. Gregory Sliwoski, Sandeepkumar Kothiwale, Jens Meiler, Edward W Lowe, Pharmacological reviews. 66Gregory Sliwoski, Sandeepkumar Kothiwale, Jens Meiler, and Edward W Lowe. 2014. Computational methods in drug discovery. Pharmacological reviews 66, 1 (2014), 334-395.\n\nPolicy gradient methods for reinforcement learning with function approximation. S Richard, David Sutton, Satinder Mcallester, Yishay Singh, Mansour, Advances in neural information processing systems. 12Richard S Sutton, David McAllester, Satinder Singh, and Yishay Mansour. 1999. Policy gradient methods for reinforcement learning with function approximation. Advances in neural information processing systems 12 (1999).\n\nMulti-objective monte-carlo tree search. Weijia Wang, Michele Sebag, In Asian conference on machine learning. PMLR. Weijia Wang and Michele Sebag. 2012. Multi-objective monte-carlo tree search. In Asian conference on machine learning. PMLR, 507-522.\n\nMars: Markov molecular sampling for multi-objective drug discovery. Yutong Xie, Chence Shi, Hao Zhou, Yuwei Yang, Weinan Zhang, Yong Yu, Lei Li, arXiv:2103.10432arXiv preprintYutong Xie, Chence Shi, Hao Zhou, Yuwei Yang, Weinan Zhang, Yong Yu, and Lei Li. 2021. Mars: Markov molecular sampling for multi-objective drug discovery. arXiv preprint arXiv:2103.10432 (2021).\n\nChemTS: an ecient python library for de novo molecular generation. Xiufeng Yang, Jinzhe Zhang, Kazuki Yoshizoe, Kei Terayama, Koji Tsuda, Science and technology of advanced materials. 18Xiufeng Yang, Jinzhe Zhang, Kazuki Yoshizoe, Kei Terayama, and Koji Tsuda. 2017. ChemTS: an ecient python library for de novo molecular generation. Science and technology of advanced materials 18, 1 (2017), 972-976.\n\nGraph convolutional policy network for goal-directed molecular graph generation. Jiaxuan You, Bowen Liu, Rex Ying, Vijay Pande, Jure Leskovec, arXiv:1806.02473arXiv preprintJiaxuan You, Bowen Liu, Rex Ying, Vijay Pande, and Jure Leskovec. 2018. Graph convolutional policy network for goal-directed molecular graph generation. arXiv preprint arXiv:1806.02473 (2018).\n\nComputer-aided drug design methods. Wenbo Yu, Alexander D Mackerell, Antibiotics. SpringerWenbo Yu and Alexander D MacKerell. 2017. Computer-aided drug design methods. In Antibiotics. Springer, 85-106.\n\nMoFlow: an invertible ow model for generating molecular graphs. Chengxi Zang, Fei Wang, Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining. the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data MiningChengxi Zang and Fei Wang. 2020. MoFlow: an invertible ow model for gen- erating molecular graphs. In Proceedings of the 26th ACM SIGKDD International Conference on Knowledge Discovery & Data Mining. 617-626.\n\nYi Zhang, arXiv:2110.054782021. An In-depth Summary of Recent Articial Intelligence Applications in Drug Design. arXiv preprintYi Zhang. 2021. An In-depth Summary of Recent Articial Intelligence Applica- tions in Drug Design. arXiv preprint arXiv:2110.05478 (2021).\n\nOptimization of molecules via deep reinforcement learning. Zhenpeng Zhou, Steven Kearnes, Li Li, Patrick Richard N Zare, Riley, Scientic reports. 9Zhenpeng Zhou, Steven Kearnes, Li Li, Richard N Zare, and Patrick Riley. 2019. Optimization of molecules via deep reinforcement learning. Scientic reports 9, 1 (2019), 1-10.\n", "annotations": {"author": "[{\"end\":121,\"start\":108},{\"end\":149,\"start\":122},{\"end\":176,\"start\":150},{\"end\":211,\"start\":177},{\"end\":238,\"start\":212},{\"end\":291,\"start\":239},{\"end\":344,\"start\":292},{\"end\":397,\"start\":345},{\"end\":448,\"start\":398},{\"end\":501,\"start\":449},{\"end\":554,\"start\":502}]", "publisher": null, "author_last_name": "[{\"end\":120,\"start\":117},{\"end\":131,\"start\":127},{\"end\":158,\"start\":154},{\"end\":188,\"start\":184},{\"end\":222,\"start\":218}]", "author_first_name": "[{\"end\":116,\"start\":108},{\"end\":126,\"start\":122},{\"end\":153,\"start\":150},{\"end\":183,\"start\":177},{\"end\":217,\"start\":212}]", "author_affiliation": "[{\"end\":290,\"start\":240},{\"end\":343,\"start\":293},{\"end\":396,\"start\":346},{\"end\":447,\"start\":399},{\"end\":500,\"start\":450},{\"end\":553,\"start\":503}]", "title": "[{\"end\":87,\"start\":1},{\"end\":641,\"start\":555}]", "venue": "[{\"end\":646,\"start\":643}]", "abstract": "[{\"end\":2384,\"start\":1252}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2499,\"start\":2496},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":2990,\"start\":2986},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":3327,\"start\":3323},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":3330,\"start\":3327},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":3482,\"start\":3478},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":3485,\"start\":3482},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":3488,\"start\":3485},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":3656,\"start\":3652},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":3715,\"start\":3711},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3903,\"start\":3899},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":4750,\"start\":4746},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":4753,\"start\":4750},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":5052,\"start\":5048},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":5303,\"start\":5299},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":5306,\"start\":5303},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5396,\"start\":5392},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":5399,\"start\":5396},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":5499,\"start\":5495},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":5502,\"start\":5499},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5927,\"start\":5924},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":8391,\"start\":8387},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":8394,\"start\":8391},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":8397,\"start\":8394},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":8400,\"start\":8397},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9152,\"start\":9148},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9155,\"start\":9152},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":9180,\"start\":9176},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9207,\"start\":9203},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":9210,\"start\":9207},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":9213,\"start\":9210},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":9403,\"start\":9399},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9516,\"start\":9513},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":9519,\"start\":9516},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":9522,\"start\":9519},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":9743,\"start\":9739},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":10015,\"start\":10011},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":10018,\"start\":10015},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":10143,\"start\":10139},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10363,\"start\":10359},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":10633,\"start\":10629},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10788,\"start\":10784},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":11070,\"start\":11066},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":11073,\"start\":11070},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":11275,\"start\":11272},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":12045,\"start\":12041},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":12764,\"start\":12761},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":13616,\"start\":13613},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":13619,\"start\":13616},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":15426,\"start\":15422},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":17943,\"start\":17940},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":19112,\"start\":19109},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":19115,\"start\":19112},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":19118,\"start\":19115},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":19431,\"start\":19428},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":19540,\"start\":19536},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":19723,\"start\":19719},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":20746,\"start\":20743},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":23318,\"start\":23314},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":23321,\"start\":23318},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":23925,\"start\":23921},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":23972,\"start\":23968},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":23975,\"start\":23972},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":24017,\"start\":24014},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":24055,\"start\":24051},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":24095,\"start\":24092},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":24098,\"start\":24095},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":24443,\"start\":24439},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":24446,\"start\":24443},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":24919,\"start\":24915},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":25041,\"start\":25037},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":25144,\"start\":25140},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":25287,\"start\":25283},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25425,\"start\":25421},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":25530,\"start\":25526},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25700,\"start\":25696},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":25703,\"start\":25700},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":26123,\"start\":26120},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":26158,\"start\":26154},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":26390,\"start\":26386},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":26689,\"start\":26685},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":27003,\"start\":27000},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":28074,\"start\":28071},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":28076,\"start\":28074},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28078,\"start\":28076},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":28116,\"start\":28113},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28119,\"start\":28116},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":28122,\"start\":28119},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":35860,\"start\":35856},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":39828,\"start\":39824},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":39831,\"start\":39828},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":43464,\"start\":43463}]", "figure": "[{\"attributes\":{\"id\":\"fig_1\"},\"end\":37556,\"start\":37205},{\"attributes\":{\"id\":\"fig_2\"},\"end\":37894,\"start\":37557},{\"attributes\":{\"id\":\"fig_3\"},\"end\":38593,\"start\":37895},{\"attributes\":{\"id\":\"fig_5\"},\"end\":38703,\"start\":38594},{\"attributes\":{\"id\":\"fig_6\"},\"end\":38928,\"start\":38704},{\"attributes\":{\"id\":\"fig_7\"},\"end\":38984,\"start\":38929},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":39503,\"start\":38985},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":39609,\"start\":39504},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":40905,\"start\":39610},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":41141,\"start\":40906},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":41430,\"start\":41142},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":41945,\"start\":41431},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":42623,\"start\":41946},{\"attributes\":{\"id\":\"tab_9\",\"type\":\"table\"},\"end\":42931,\"start\":42624},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":43046,\"start\":42932}]", "paragraph": "[{\"end\":3194,\"start\":2400},{\"end\":3904,\"start\":3196},{\"end\":4419,\"start\":3906},{\"end\":5639,\"start\":4421},{\"end\":6739,\"start\":5641},{\"end\":7093,\"start\":6741},{\"end\":7814,\"start\":7095},{\"end\":8325,\"start\":7831},{\"end\":8909,\"start\":8327},{\"end\":9404,\"start\":8911},{\"end\":9852,\"start\":9406},{\"end\":10533,\"start\":9854},{\"end\":11163,\"start\":10535},{\"end\":11662,\"start\":11184},{\"end\":12046,\"start\":11664},{\"end\":12507,\"start\":12099},{\"end\":13666,\"start\":12535},{\"end\":14440,\"start\":13694},{\"end\":14667,\"start\":14484},{\"end\":14939,\"start\":14697},{\"end\":15327,\"start\":15226},{\"end\":15427,\"start\":15368},{\"end\":15598,\"start\":15471},{\"end\":16279,\"start\":15935},{\"end\":16849,\"start\":16337},{\"end\":17123,\"start\":16880},{\"end\":17944,\"start\":17163},{\"end\":18154,\"start\":17946},{\"end\":18545,\"start\":18172},{\"end\":18809,\"start\":18547},{\"end\":19119,\"start\":18811},{\"end\":19870,\"start\":19136},{\"end\":20045,\"start\":19872},{\"end\":20917,\"start\":20047},{\"end\":21855,\"start\":20919},{\"end\":22806,\"start\":21882},{\"end\":23237,\"start\":22808},{\"end\":23566,\"start\":23252},{\"end\":23715,\"start\":23587},{\"end\":23826,\"start\":23717},{\"end\":24447,\"start\":23828},{\"end\":24797,\"start\":24449},{\"end\":26022,\"start\":24799},{\"end\":26489,\"start\":26060},{\"end\":28876,\"start\":26537},{\"end\":31237,\"start\":28898},{\"end\":34920,\"start\":31239},{\"end\":36059,\"start\":34935},{\"end\":37204,\"start\":36061}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":12098,\"start\":12047},{\"attributes\":{\"id\":\"formula_1\"},\"end\":13693,\"start\":13667},{\"attributes\":{\"id\":\"formula_2\"},\"end\":14696,\"start\":14668},{\"attributes\":{\"id\":\"formula_3\"},\"end\":15225,\"start\":14940},{\"attributes\":{\"id\":\"formula_4\"},\"end\":15367,\"start\":15328},{\"attributes\":{\"id\":\"formula_5\"},\"end\":15934,\"start\":15599},{\"attributes\":{\"id\":\"formula_6\"},\"end\":16336,\"start\":16280},{\"attributes\":{\"id\":\"formula_7\"},\"end\":16879,\"start\":16850},{\"attributes\":{\"id\":\"formula_8\"},\"end\":17162,\"start\":17124},{\"attributes\":{\"id\":\"formula_9\"},\"end\":18171,\"start\":18155},{\"attributes\":{\"id\":\"formula_10\"},\"end\":26059,\"start\":26023},{\"attributes\":{\"id\":\"formula_11\"},\"end\":26536,\"start\":26490}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":21031,\"start\":21024},{\"end\":28690,\"start\":28681},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":29102,\"start\":29082},{\"end\":30104,\"start\":30097},{\"attributes\":{\"ref_id\":\"tab_10\"},\"end\":34527,\"start\":34520},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":34588,\"start\":34581}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2398,\"start\":2386},{\"attributes\":{\"n\":\"2\"},\"end\":7829,\"start\":7817},{\"attributes\":{\"n\":\"3.1\"},\"end\":11182,\"start\":11166},{\"attributes\":{\"n\":\"3.2\"},\"end\":12533,\"start\":12510},{\"attributes\":{\"n\":\"3.3\"},\"end\":14482,\"start\":14443},{\"end\":15469,\"start\":15430},{\"attributes\":{\"n\":\"3.4\"},\"end\":19134,\"start\":19122},{\"attributes\":{\"n\":\"3.5\"},\"end\":21880,\"start\":21858},{\"attributes\":{\"n\":\"4\"},\"end\":23250,\"start\":23240},{\"attributes\":{\"n\":\"4.1\"},\"end\":23585,\"start\":23569},{\"attributes\":{\"n\":\"4.2\"},\"end\":28896,\"start\":28879},{\"attributes\":{\"n\":\"4.3\"},\"end\":34933,\"start\":34923},{\"end\":37216,\"start\":37206},{\"end\":37568,\"start\":37558},{\"end\":37906,\"start\":37896},{\"end\":38605,\"start\":38595},{\"end\":38724,\"start\":38705},{\"end\":38940,\"start\":38930},{\"end\":39514,\"start\":39505},{\"end\":39620,\"start\":39611},{\"end\":40916,\"start\":40907},{\"end\":41954,\"start\":41947},{\"end\":42634,\"start\":42625},{\"end\":42942,\"start\":42933}]", "table": "[{\"end\":39503,\"start\":39130},{\"end\":40905,\"start\":39930},{\"end\":41430,\"start\":41293},{\"end\":41945,\"start\":41690},{\"end\":42623,\"start\":42048},{\"end\":42931,\"start\":42719}]", "figure_caption": "[{\"end\":37556,\"start\":37218},{\"end\":37894,\"start\":37570},{\"end\":38593,\"start\":37908},{\"end\":38703,\"start\":38607},{\"end\":38928,\"start\":38727},{\"end\":38984,\"start\":38942},{\"end\":39130,\"start\":38987},{\"end\":39609,\"start\":39516},{\"end\":39930,\"start\":39622},{\"end\":41141,\"start\":40918},{\"end\":41293,\"start\":41144},{\"end\":41690,\"start\":41433},{\"end\":42048,\"start\":41956},{\"end\":42719,\"start\":42636},{\"end\":43046,\"start\":42944}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":17729,\"start\":17721},{\"end\":20143,\"start\":20135},{\"end\":20759,\"start\":20751},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":31425,\"start\":31416},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":31546,\"start\":31537},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":31600,\"start\":31590},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":31613,\"start\":31603},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":31882,\"start\":31873},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":32162,\"start\":32153},{\"end\":32466,\"start\":32458},{\"end\":32845,\"start\":32835},{\"end\":33306,\"start\":33297},{\"end\":33528,\"start\":33520},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":33538,\"start\":33530},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":36244,\"start\":36234}]", "bib_author_first_name": "[{\"end\":43757,\"start\":43752},{\"end\":43778,\"start\":43771},{\"end\":43790,\"start\":43784},{\"end\":44055,\"start\":44050},{\"end\":44068,\"start\":44062},{\"end\":44087,\"start\":44083},{\"end\":44327,\"start\":44321},{\"end\":44349,\"start\":44344},{\"end\":44363,\"start\":44356},{\"end\":44381,\"start\":44372},{\"end\":44749,\"start\":44744},{\"end\":44763,\"start\":44758},{\"end\":44776,\"start\":44770},{\"end\":45042,\"start\":45035},{\"end\":45268,\"start\":45267},{\"end\":45281,\"start\":45275},{\"end\":45585,\"start\":45584},{\"end\":45790,\"start\":45789},{\"end\":45806,\"start\":45800},{\"end\":45821,\"start\":45815},{\"end\":45843,\"start\":45842},{\"end\":45859,\"start\":45858},{\"end\":45874,\"start\":45867},{\"end\":45891,\"start\":45884},{\"end\":45910,\"start\":45905},{\"end\":46462,\"start\":46457},{\"end\":46857,\"start\":46851},{\"end\":46870,\"start\":46864},{\"end\":47061,\"start\":47055},{\"end\":47074,\"start\":47067},{\"end\":47083,\"start\":47081},{\"end\":47095,\"start\":47089},{\"end\":47106,\"start\":47104},{\"end\":47445,\"start\":47439},{\"end\":47453,\"start\":47450},{\"end\":47462,\"start\":47456},{\"end\":47715,\"start\":47711},{\"end\":47752,\"start\":47745},{\"end\":48147,\"start\":48142},{\"end\":48160,\"start\":48154},{\"end\":48499,\"start\":48492},{\"end\":48512,\"start\":48507},{\"end\":48801,\"start\":48795},{\"end\":48828,\"start\":48820},{\"end\":48830,\"start\":48829},{\"end\":48841,\"start\":48836},{\"end\":48856,\"start\":48852},{\"end\":48863,\"start\":48857},{\"end\":48890,\"start\":48882},{\"end\":48916,\"start\":48910},{\"end\":48932,\"start\":48927},{\"end\":48963,\"start\":48956},{\"end\":48965,\"start\":48964},{\"end\":48975,\"start\":48974},{\"end\":48986,\"start\":48982},{\"end\":49483,\"start\":49477},{\"end\":49498,\"start\":49493},{\"end\":49870,\"start\":49869},{\"end\":50161,\"start\":50154},{\"end\":50173,\"start\":50167},{\"end\":50189,\"start\":50184},{\"end\":50523,\"start\":50516},{\"end\":50535,\"start\":50529},{\"end\":50551,\"start\":50546},{\"end\":50879,\"start\":50878},{\"end\":50897,\"start\":50889},{\"end\":50908,\"start\":50902},{\"end\":50929,\"start\":50916},{\"end\":50942,\"start\":50937},{\"end\":50957,\"start\":50951},{\"end\":50959,\"start\":50958},{\"end\":50973,\"start\":50968},{\"end\":50985,\"start\":50980},{\"end\":50987,\"start\":50986},{\"end\":51336,\"start\":51329},{\"end\":51350,\"start\":51345},{\"end\":51588,\"start\":51587},{\"end\":51601,\"start\":51595},{\"end\":51638,\"start\":51610},{\"end\":51948,\"start\":51944},{\"end\":51961,\"start\":51953},{\"end\":51977,\"start\":51969},{\"end\":52254,\"start\":52248},{\"end\":52267,\"start\":52260},{\"end\":52281,\"start\":52273},{\"end\":52523,\"start\":52518},{\"end\":52536,\"start\":52532},{\"end\":52554,\"start\":52546},{\"end\":52565,\"start\":52562},{\"end\":52583,\"start\":52576},{\"end\":52586,\"start\":52584},{\"end\":52597,\"start\":52593},{\"end\":52610,\"start\":52605},{\"end\":52622,\"start\":52618},{\"end\":52624,\"start\":52623},{\"end\":52644,\"start\":52636},{\"end\":52661,\"start\":52655},{\"end\":53083,\"start\":53072},{\"end\":53097,\"start\":53091},{\"end\":53115,\"start\":53110},{\"end\":53127,\"start\":53123},{\"end\":53455,\"start\":53448},{\"end\":53484,\"start\":53475},{\"end\":53743,\"start\":53738},{\"end\":53758,\"start\":53752},{\"end\":54102,\"start\":54094},{\"end\":54128,\"start\":54122},{\"end\":54140,\"start\":54139},{\"end\":54154,\"start\":54150},{\"end\":54490,\"start\":54483},{\"end\":54505,\"start\":54502},{\"end\":54769,\"start\":54764},{\"end\":54786,\"start\":54781},{\"end\":54800,\"start\":54796},{\"end\":54808,\"start\":54807},{\"end\":54823,\"start\":54815},{\"end\":55126,\"start\":55120},{\"end\":55138,\"start\":55132},{\"end\":55152,\"start\":55143},{\"end\":55164,\"start\":55158},{\"end\":55176,\"start\":55172},{\"end\":55188,\"start\":55184},{\"end\":55472,\"start\":55465},{\"end\":55495,\"start\":55483},{\"end\":55511,\"start\":55507},{\"end\":55526,\"start\":55520},{\"end\":55528,\"start\":55527},{\"end\":55812,\"start\":55811},{\"end\":55827,\"start\":55822},{\"end\":55844,\"start\":55836},{\"end\":55863,\"start\":55857},{\"end\":56200,\"start\":56194},{\"end\":56214,\"start\":56207},{\"end\":56478,\"start\":56472},{\"end\":56490,\"start\":56484},{\"end\":56499,\"start\":56496},{\"end\":56511,\"start\":56506},{\"end\":56524,\"start\":56518},{\"end\":56536,\"start\":56532},{\"end\":56544,\"start\":56541},{\"end\":56849,\"start\":56842},{\"end\":56862,\"start\":56856},{\"end\":56876,\"start\":56870},{\"end\":56890,\"start\":56887},{\"end\":56905,\"start\":56901},{\"end\":57266,\"start\":57259},{\"end\":57277,\"start\":57272},{\"end\":57286,\"start\":57283},{\"end\":57298,\"start\":57293},{\"end\":57310,\"start\":57306},{\"end\":57586,\"start\":57581},{\"end\":57600,\"start\":57591},{\"end\":57602,\"start\":57601},{\"end\":57819,\"start\":57812},{\"end\":57829,\"start\":57826},{\"end\":58227,\"start\":58225},{\"end\":58559,\"start\":58551},{\"end\":58572,\"start\":58566},{\"end\":58584,\"start\":58582},{\"end\":58596,\"start\":58589}]", "bib_author_last_name": "[{\"end\":43769,\"start\":43758},{\"end\":43782,\"start\":43779},{\"end\":43794,\"start\":43791},{\"end\":43800,\"start\":43796},{\"end\":44060,\"start\":44056},{\"end\":44081,\"start\":44069},{\"end\":44095,\"start\":44088},{\"end\":44342,\"start\":44328},{\"end\":44354,\"start\":44350},{\"end\":44370,\"start\":44364},{\"end\":44389,\"start\":44382},{\"end\":44397,\"start\":44391},{\"end\":44756,\"start\":44750},{\"end\":44768,\"start\":44764},{\"end\":44785,\"start\":44777},{\"end\":45050,\"start\":45043},{\"end\":45265,\"start\":45246},{\"end\":45273,\"start\":45269},{\"end\":45289,\"start\":45282},{\"end\":45298,\"start\":45291},{\"end\":45594,\"start\":45586},{\"end\":45601,\"start\":45596},{\"end\":45798,\"start\":45791},{\"end\":45813,\"start\":45807},{\"end\":45828,\"start\":45822},{\"end\":45840,\"start\":45830},{\"end\":45849,\"start\":45844},{\"end\":45856,\"start\":45851},{\"end\":45865,\"start\":45860},{\"end\":45882,\"start\":45875},{\"end\":45903,\"start\":45892},{\"end\":45918,\"start\":45911},{\"end\":45925,\"start\":45920},{\"end\":46469,\"start\":46463},{\"end\":46862,\"start\":46858},{\"end\":46874,\"start\":46871},{\"end\":47065,\"start\":47062},{\"end\":47079,\"start\":47075},{\"end\":47087,\"start\":47084},{\"end\":47102,\"start\":47096},{\"end\":47111,\"start\":47107},{\"end\":47448,\"start\":47446},{\"end\":47467,\"start\":47463},{\"end\":47730,\"start\":47716},{\"end\":47743,\"start\":47732},{\"end\":47764,\"start\":47753},{\"end\":47771,\"start\":47766},{\"end\":48152,\"start\":48148},{\"end\":48172,\"start\":48161},{\"end\":48505,\"start\":48500},{\"end\":48519,\"start\":48513},{\"end\":48818,\"start\":48802},{\"end\":48834,\"start\":48831},{\"end\":48850,\"start\":48842},{\"end\":48880,\"start\":48864},{\"end\":48908,\"start\":48891},{\"end\":48925,\"start\":48917},{\"end\":48954,\"start\":48933},{\"end\":48972,\"start\":48966},{\"end\":48980,\"start\":48976},{\"end\":48992,\"start\":48987},{\"end\":49006,\"start\":48994},{\"end\":49491,\"start\":49484},{\"end\":49502,\"start\":49499},{\"end\":49874,\"start\":49871},{\"end\":49882,\"start\":49876},{\"end\":50165,\"start\":50162},{\"end\":50182,\"start\":50174},{\"end\":50198,\"start\":50190},{\"end\":50527,\"start\":50524},{\"end\":50544,\"start\":50536},{\"end\":50560,\"start\":50552},{\"end\":50887,\"start\":50880},{\"end\":50900,\"start\":50898},{\"end\":50914,\"start\":50909},{\"end\":50935,\"start\":50930},{\"end\":50949,\"start\":50943},{\"end\":50966,\"start\":50960},{\"end\":50978,\"start\":50974},{\"end\":50997,\"start\":50988},{\"end\":51004,\"start\":50999},{\"end\":51343,\"start\":51337},{\"end\":51361,\"start\":51351},{\"end\":51593,\"start\":51589},{\"end\":51608,\"start\":51602},{\"end\":51644,\"start\":51639},{\"end\":51951,\"start\":51949},{\"end\":51967,\"start\":51962},{\"end\":51981,\"start\":51978},{\"end\":52258,\"start\":52255},{\"end\":52271,\"start\":52268},{\"end\":52284,\"start\":52282},{\"end\":52530,\"start\":52524},{\"end\":52544,\"start\":52537},{\"end\":52560,\"start\":52555},{\"end\":52574,\"start\":52566},{\"end\":52591,\"start\":52587},{\"end\":52603,\"start\":52598},{\"end\":52616,\"start\":52611},{\"end\":52634,\"start\":52625},{\"end\":52653,\"start\":52645},{\"end\":52668,\"start\":52662},{\"end\":52677,\"start\":52670},{\"end\":53089,\"start\":53084},{\"end\":53108,\"start\":53098},{\"end\":53121,\"start\":53116},{\"end\":53140,\"start\":53128},{\"end\":53473,\"start\":53456},{\"end\":53490,\"start\":53485},{\"end\":53501,\"start\":53492},{\"end\":53750,\"start\":53744},{\"end\":53763,\"start\":53759},{\"end\":54120,\"start\":54103},{\"end\":54137,\"start\":54129},{\"end\":54148,\"start\":54141},{\"end\":54164,\"start\":54155},{\"end\":54178,\"start\":54166},{\"end\":54500,\"start\":54491},{\"end\":54513,\"start\":54506},{\"end\":54779,\"start\":54770},{\"end\":54794,\"start\":54787},{\"end\":54805,\"start\":54801},{\"end\":54813,\"start\":54809},{\"end\":54829,\"start\":54824},{\"end\":54838,\"start\":54831},{\"end\":55130,\"start\":55127},{\"end\":55141,\"start\":55139},{\"end\":55156,\"start\":55153},{\"end\":55170,\"start\":55165},{\"end\":55182,\"start\":55177},{\"end\":55193,\"start\":55189},{\"end\":55481,\"start\":55473},{\"end\":55505,\"start\":55496},{\"end\":55518,\"start\":55512},{\"end\":55533,\"start\":55529},{\"end\":55820,\"start\":55813},{\"end\":55834,\"start\":55828},{\"end\":55855,\"start\":55845},{\"end\":55869,\"start\":55864},{\"end\":55878,\"start\":55871},{\"end\":56205,\"start\":56201},{\"end\":56220,\"start\":56215},{\"end\":56482,\"start\":56479},{\"end\":56494,\"start\":56491},{\"end\":56504,\"start\":56500},{\"end\":56516,\"start\":56512},{\"end\":56530,\"start\":56525},{\"end\":56539,\"start\":56537},{\"end\":56547,\"start\":56545},{\"end\":56854,\"start\":56850},{\"end\":56868,\"start\":56863},{\"end\":56885,\"start\":56877},{\"end\":56899,\"start\":56891},{\"end\":56911,\"start\":56906},{\"end\":57270,\"start\":57267},{\"end\":57281,\"start\":57278},{\"end\":57291,\"start\":57287},{\"end\":57304,\"start\":57299},{\"end\":57319,\"start\":57311},{\"end\":57589,\"start\":57587},{\"end\":57612,\"start\":57603},{\"end\":57824,\"start\":57820},{\"end\":57834,\"start\":57830},{\"end\":58233,\"start\":58228},{\"end\":58564,\"start\":58560},{\"end\":58580,\"start\":58573},{\"end\":58587,\"start\":58585},{\"end\":58611,\"start\":58597},{\"end\":58618,\"start\":58613}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:2007.04897\",\"id\":\"b0\"},\"end\":43993,\"start\":43690},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":207609497},\"end\":44268,\"start\":43995},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":231760090},\"end\":44653,\"start\":44270},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":1221969},\"end\":45003,\"start\":44655},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":123329493},\"end\":45202,\"start\":45005},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":205289650},\"end\":45530,\"start\":45204},{\"attributes\":{\"id\":\"b6\"},\"end\":45696,\"start\":45532},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":9316331},\"end\":46303,\"start\":45698},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":3069234},\"end\":46777,\"start\":46305},{\"attributes\":{\"doi\":\"arXiv:2111.01825\",\"id\":\"b9\"},\"end\":47053,\"start\":46779},{\"attributes\":{\"doi\":\"arXiv:1802.08786\",\"id\":\"b10\"},\"end\":47372,\"start\":47055},{\"attributes\":{\"doi\":\"arXiv:1805.11973\",\"id\":\"b11\"},\"end\":47640,\"start\":47374},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":218594024},\"end\":48015,\"start\":47642},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":7423230},\"end\":48416,\"start\":48017},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":18941952},\"end\":48707,\"start\":48418},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":3347345},\"end\":49379,\"start\":48709},{\"attributes\":{\"id\":\"b16\"},\"end\":49751,\"start\":49381},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":104472633},\"end\":50082,\"start\":49753},{\"attributes\":{\"doi\":\"PMLR\",\"id\":\"b18\",\"matched_paper_id\":3364940},\"end\":50443,\"start\":50084},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":215827485},\"end\":50808,\"start\":50445},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":235590046},\"end\":51292,\"start\":50810},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":15184765},\"end\":51552,\"start\":51294},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":7648414},\"end\":51865,\"start\":51554},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":5012890},\"end\":52185,\"start\":51867},{\"attributes\":{\"doi\":\"arXiv:2102.01189\",\"id\":\"b24\"},\"end\":52464,\"start\":52187},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":53223613},\"end\":52980,\"start\":52466},{\"attributes\":{\"doi\":\"arXiv:1909.11655\",\"id\":\"b26\"},\"end\":53381,\"start\":52982},{\"attributes\":{\"doi\":\"arXiv:2010.16399\",\"id\":\"b27\"},\"end\":53702,\"start\":53383},{\"attributes\":{\"id\":\"b28\"},\"end\":53950,\"start\":53704},{\"attributes\":{\"id\":\"b29\"},\"end\":54427,\"start\":53952},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":2549851},\"end\":54693,\"start\":54429},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":14843594},\"end\":55045,\"start\":54695},{\"attributes\":{\"doi\":\"arXiv:2001.09382\",\"id\":\"b32\"},\"end\":55422,\"start\":55047},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":2439425},\"end\":55729,\"start\":55424},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":1211821},\"end\":56151,\"start\":55731},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":16405820},\"end\":56402,\"start\":56153},{\"attributes\":{\"doi\":\"arXiv:2103.10432\",\"id\":\"b36\"},\"end\":56773,\"start\":56404},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":3311716},\"end\":57176,\"start\":56775},{\"attributes\":{\"doi\":\"arXiv:1806.02473\",\"id\":\"b38\"},\"end\":57543,\"start\":57178},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":4963794},\"end\":57746,\"start\":57545},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":219792684},\"end\":58223,\"start\":57748},{\"attributes\":{\"doi\":\"arXiv:2110.05478\",\"id\":\"b41\"},\"end\":58490,\"start\":58225},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":53040150},\"end\":58812,\"start\":58492}]", "bib_title": "[{\"end\":44048,\"start\":43995},{\"end\":44319,\"start\":44270},{\"end\":44742,\"start\":44655},{\"end\":45033,\"start\":45005},{\"end\":45244,\"start\":45204},{\"end\":45787,\"start\":45698},{\"end\":46455,\"start\":46305},{\"end\":47709,\"start\":47642},{\"end\":48140,\"start\":48017},{\"end\":48490,\"start\":48418},{\"end\":48793,\"start\":48709},{\"end\":49475,\"start\":49381},{\"end\":49867,\"start\":49753},{\"end\":50152,\"start\":50084},{\"end\":50514,\"start\":50445},{\"end\":50876,\"start\":50810},{\"end\":51327,\"start\":51294},{\"end\":51585,\"start\":51554},{\"end\":51942,\"start\":51867},{\"end\":52516,\"start\":52466},{\"end\":53736,\"start\":53704},{\"end\":54481,\"start\":54429},{\"end\":54762,\"start\":54695},{\"end\":55463,\"start\":55424},{\"end\":55809,\"start\":55731},{\"end\":56192,\"start\":56153},{\"end\":56840,\"start\":56775},{\"end\":57579,\"start\":57545},{\"end\":57810,\"start\":57748},{\"end\":58549,\"start\":58492}]", "bib_author": "[{\"end\":43771,\"start\":43752},{\"end\":43784,\"start\":43771},{\"end\":43796,\"start\":43784},{\"end\":43802,\"start\":43796},{\"end\":44062,\"start\":44050},{\"end\":44083,\"start\":44062},{\"end\":44097,\"start\":44083},{\"end\":44344,\"start\":44321},{\"end\":44356,\"start\":44344},{\"end\":44372,\"start\":44356},{\"end\":44391,\"start\":44372},{\"end\":44399,\"start\":44391},{\"end\":44758,\"start\":44744},{\"end\":44770,\"start\":44758},{\"end\":44787,\"start\":44770},{\"end\":45052,\"start\":45035},{\"end\":45267,\"start\":45246},{\"end\":45275,\"start\":45267},{\"end\":45291,\"start\":45275},{\"end\":45300,\"start\":45291},{\"end\":45596,\"start\":45584},{\"end\":45603,\"start\":45596},{\"end\":45800,\"start\":45789},{\"end\":45815,\"start\":45800},{\"end\":45830,\"start\":45815},{\"end\":45842,\"start\":45830},{\"end\":45851,\"start\":45842},{\"end\":45858,\"start\":45851},{\"end\":45867,\"start\":45858},{\"end\":45884,\"start\":45867},{\"end\":45905,\"start\":45884},{\"end\":45920,\"start\":45905},{\"end\":45927,\"start\":45920},{\"end\":46471,\"start\":46457},{\"end\":46864,\"start\":46851},{\"end\":46876,\"start\":46864},{\"end\":47067,\"start\":47055},{\"end\":47081,\"start\":47067},{\"end\":47089,\"start\":47081},{\"end\":47104,\"start\":47089},{\"end\":47113,\"start\":47104},{\"end\":47450,\"start\":47439},{\"end\":47456,\"start\":47450},{\"end\":47469,\"start\":47456},{\"end\":47732,\"start\":47711},{\"end\":47745,\"start\":47732},{\"end\":47766,\"start\":47745},{\"end\":47773,\"start\":47766},{\"end\":48154,\"start\":48142},{\"end\":48174,\"start\":48154},{\"end\":48507,\"start\":48492},{\"end\":48521,\"start\":48507},{\"end\":48820,\"start\":48795},{\"end\":48836,\"start\":48820},{\"end\":48852,\"start\":48836},{\"end\":48882,\"start\":48852},{\"end\":48910,\"start\":48882},{\"end\":48927,\"start\":48910},{\"end\":48956,\"start\":48927},{\"end\":48974,\"start\":48956},{\"end\":48982,\"start\":48974},{\"end\":48994,\"start\":48982},{\"end\":49008,\"start\":48994},{\"end\":49493,\"start\":49477},{\"end\":49504,\"start\":49493},{\"end\":49876,\"start\":49869},{\"end\":49884,\"start\":49876},{\"end\":50167,\"start\":50154},{\"end\":50184,\"start\":50167},{\"end\":50200,\"start\":50184},{\"end\":50529,\"start\":50516},{\"end\":50546,\"start\":50529},{\"end\":50562,\"start\":50546},{\"end\":50889,\"start\":50878},{\"end\":50902,\"start\":50889},{\"end\":50916,\"start\":50902},{\"end\":50937,\"start\":50916},{\"end\":50951,\"start\":50937},{\"end\":50968,\"start\":50951},{\"end\":50980,\"start\":50968},{\"end\":50999,\"start\":50980},{\"end\":51006,\"start\":50999},{\"end\":51345,\"start\":51329},{\"end\":51363,\"start\":51345},{\"end\":51595,\"start\":51587},{\"end\":51610,\"start\":51595},{\"end\":51646,\"start\":51610},{\"end\":51953,\"start\":51944},{\"end\":51969,\"start\":51953},{\"end\":51983,\"start\":51969},{\"end\":52260,\"start\":52248},{\"end\":52273,\"start\":52260},{\"end\":52286,\"start\":52273},{\"end\":52532,\"start\":52518},{\"end\":52546,\"start\":52532},{\"end\":52562,\"start\":52546},{\"end\":52576,\"start\":52562},{\"end\":52593,\"start\":52576},{\"end\":52605,\"start\":52593},{\"end\":52618,\"start\":52605},{\"end\":52636,\"start\":52618},{\"end\":52655,\"start\":52636},{\"end\":52670,\"start\":52655},{\"end\":52679,\"start\":52670},{\"end\":53091,\"start\":53072},{\"end\":53110,\"start\":53091},{\"end\":53123,\"start\":53110},{\"end\":53142,\"start\":53123},{\"end\":53475,\"start\":53448},{\"end\":53492,\"start\":53475},{\"end\":53503,\"start\":53492},{\"end\":53752,\"start\":53738},{\"end\":53765,\"start\":53752},{\"end\":54122,\"start\":54094},{\"end\":54139,\"start\":54122},{\"end\":54150,\"start\":54139},{\"end\":54166,\"start\":54150},{\"end\":54180,\"start\":54166},{\"end\":54502,\"start\":54483},{\"end\":54515,\"start\":54502},{\"end\":54781,\"start\":54764},{\"end\":54796,\"start\":54781},{\"end\":54807,\"start\":54796},{\"end\":54815,\"start\":54807},{\"end\":54831,\"start\":54815},{\"end\":54840,\"start\":54831},{\"end\":55132,\"start\":55120},{\"end\":55143,\"start\":55132},{\"end\":55158,\"start\":55143},{\"end\":55172,\"start\":55158},{\"end\":55184,\"start\":55172},{\"end\":55195,\"start\":55184},{\"end\":55483,\"start\":55465},{\"end\":55507,\"start\":55483},{\"end\":55520,\"start\":55507},{\"end\":55535,\"start\":55520},{\"end\":55822,\"start\":55811},{\"end\":55836,\"start\":55822},{\"end\":55857,\"start\":55836},{\"end\":55871,\"start\":55857},{\"end\":55880,\"start\":55871},{\"end\":56207,\"start\":56194},{\"end\":56222,\"start\":56207},{\"end\":56484,\"start\":56472},{\"end\":56496,\"start\":56484},{\"end\":56506,\"start\":56496},{\"end\":56518,\"start\":56506},{\"end\":56532,\"start\":56518},{\"end\":56541,\"start\":56532},{\"end\":56549,\"start\":56541},{\"end\":56856,\"start\":56842},{\"end\":56870,\"start\":56856},{\"end\":56887,\"start\":56870},{\"end\":56901,\"start\":56887},{\"end\":56913,\"start\":56901},{\"end\":57272,\"start\":57259},{\"end\":57283,\"start\":57272},{\"end\":57293,\"start\":57283},{\"end\":57306,\"start\":57293},{\"end\":57321,\"start\":57306},{\"end\":57591,\"start\":57581},{\"end\":57614,\"start\":57591},{\"end\":57826,\"start\":57812},{\"end\":57836,\"start\":57826},{\"end\":58235,\"start\":58225},{\"end\":58566,\"start\":58551},{\"end\":58582,\"start\":58566},{\"end\":58589,\"start\":58582},{\"end\":58613,\"start\":58589},{\"end\":58620,\"start\":58613}]", "bib_venue": "[{\"end\":58015,\"start\":57934},{\"end\":43750,\"start\":43690},{\"end\":44113,\"start\":44097},{\"end\":44443,\"start\":44399},{\"end\":44813,\"start\":44787},{\"end\":45088,\"start\":45052},{\"end\":45316,\"start\":45300},{\"end\":45582,\"start\":45532},{\"end\":45990,\"start\":45927},{\"end\":46524,\"start\":46471},{\"end\":46849,\"start\":46779},{\"end\":47188,\"start\":47129},{\"end\":47437,\"start\":47374},{\"end\":47811,\"start\":47773},{\"end\":48200,\"start\":48174},{\"end\":48542,\"start\":48521},{\"end\":49027,\"start\":49008},{\"end\":49548,\"start\":49504},{\"end\":49900,\"start\":49884},{\"end\":50248,\"start\":50204},{\"end\":50612,\"start\":50562},{\"end\":51033,\"start\":51006},{\"end\":51402,\"start\":51363},{\"end\":51696,\"start\":51646},{\"end\":52009,\"start\":51983},{\"end\":52246,\"start\":52187},{\"end\":52701,\"start\":52679},{\"end\":53070,\"start\":52982},{\"end\":53446,\"start\":53383},{\"end\":53809,\"start\":53765},{\"end\":54092,\"start\":53952},{\"end\":54544,\"start\":54515},{\"end\":54850,\"start\":54840},{\"end\":55118,\"start\":55047},{\"end\":55558,\"start\":55535},{\"end\":55929,\"start\":55880},{\"end\":56267,\"start\":56222},{\"end\":56470,\"start\":56404},{\"end\":56957,\"start\":56913},{\"end\":57257,\"start\":57178},{\"end\":57625,\"start\":57614},{\"end\":57932,\"start\":57836},{\"end\":58336,\"start\":58251},{\"end\":58636,\"start\":58620}]"}}}, "year": 2023, "month": 12, "day": 17}