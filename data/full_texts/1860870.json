{"id": 1860870, "updated": "2023-04-05 18:39:15.342", "metadata": {"title": "Factorized graph matching", "authors": "[{\"first\":\"Feng\",\"last\":\"Zhou\",\"middle\":[]},{\"first\":\"F.\",\"last\":\"De la Torre\",\"middle\":[]}]", "venue": "2012 IEEE Conference on Computer Vision and Pattern Recognition", "journal": "2012 IEEE Conference on Computer Vision and Pattern Recognition", "publication_date": {"year": 2012, "month": null, "day": null}, "abstract": "Graph matching plays a central role in solving correspondence problems in computer vision. Graph matching problems that incorporate pair-wise constraints can be cast as a quadratic assignment problem (QAP). Unfortunately, QAP is NP-hard and many algorithms have been proposed to solve different relaxations. This paper presents factorized graph matching (FGM), a novel framework for interpreting and optimizing graph matching problems. In this work we show that the affinity matrix can be factorized as a Kronecker product of smaller matrices. There are three main benefits of using this factorization in graph matching: (1) There is no need to compute the costly (in space and time) pair-wise affinity matrix; (2) The factorization provides a taxonomy for graph matching and reveals the connection among several methods; (3) Using the factorization we derive a new approximation of the original problem that improves state-of-the-art algorithms in graph matching. Experimental results in synthetic and real databases illustrate the benefits of FGM. The code is available at http://humansensing.cs.cmu.edu/fgm.", "fields_of_study": "[\"Medicine\"]", "external_ids": {"arxiv": null, "mag": "2343970360", "acl": null, "pubmed": "26595909", "pubmedcentral": null, "dblp": "conf/cvpr/ZhouT12", "doi": "10.1109/cvpr.2012.6247667"}}, "content": {"source": {"pdf_hash": "186dce59aa6bd5bcb228c4f80f55ff032fa272b9", "pdf_src": "IEEE", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": "CCBY", "open_access_url": "https://figshare.com/articles/journal_contribution/Factorized_Graph_Matching/6554858/1/files/12037043.pdf", "status": "GREEN"}}, "grobid": {"id": "5dedb09c0de48fcaa00d5987ba6131ba8ad723cd", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/186dce59aa6bd5bcb228c4f80f55ff032fa272b9.txt", "contents": "\nFactorized Graph Matching\n\n\nFeng Zhou \nRobotics Institute\nCarnegie Mellon University\n\n\nFernando De La Torre \nRobotics Institute\nCarnegie Mellon University\n\n\nFactorized Graph Matching\n\nGraph matching plays a central role in solving correspondence problems in computer vision. Graph matching problems that incorporate pair-wise constraints can be cast as a quadratic assignment problem (QAP). Unfortunately, QAP is NP-hard and many algorithms have been proposed to solve different relaxations. This paper presents factorized graph matching (FGM), a novel framework for interpreting and optimizing graph matching problems. In this work we show that the affinity matrix can be factorized as a Kronecker product of smaller matrices. There are three main benefits of using this factorization in graph matching:(1) There is no need to compute the costly (in space and time) pair-wise affinity matrix; (2) The factorization provides a taxonomy for graph matching and reveals the connection among several methods; (3) Using the factorization we derive a new approximation of the original problem that improves state-of-the-art algorithms in graph matching. Experimental results in synthetic and real databases illustrate the benefits of FGM. The code is available at\n\nIntroduction\n\nGraph matching plays a central role in solving many correspondence problems in computer vision such as shape matching [4], object categorization [15], feature tracking [23,33], symmetry analysis [10,22] and action recognition [6,20]. Mathematically, pair-wise graph matching is formulated as the quadratic assignment problem (QAP) [27]. Unlike the linear assignment problem, which can be efficiently solved with the Hungarian algorithm [7], QAP is known to be NP-hard [19] and an exact optimal algorithm can only work for very small graphs. Therefore, the main body of research in QAP has focused on devising more accurate and faster algorithms to solve it approximately.\n\nAlthough extensive research has been done for decades, graph matching is still a challenging problem mainly due to two reasons: (1) In general, the objective function is nonconvex and prone to local minima; (2) The constraints that the solution has to satisfy are combinatorial. While there Figure 1. Matching two coffee mugs with 5 and 6 features respectively. The original pair-wise affinity matrix is of size 30\u00d730. Our algorithm exploits the particular structure of the affinity matrix and is able to factorize it as a Kronecker product of four smaller matrices. The top two matrices of size 5 \u00d7 7 and 6 \u00d7 8 represent the structure of the graphs in each image. The lower two matrices encode the affinities for nodes (5 \u00d7 6) and edges (7 \u00d7 8).\n\nare a number of papers [11,13,21,24,37,40] addressing the second issue, fewer papers [25,39] have investigated the first issue.\n\nIn this paper, we show that for most pair-wise graph matching problems the affinity matrix can be factorized as a Kronecker product of smaller matrices. Based on this fact, we proposed factorized graph matching (FGM), a novel framework for interpreting and optimizing graph matching problems. The benefits of our approach are three fold: (1) It avoids the computation of the cumbersome affinity matrix and hence potentially allows for a more efficient implementation, especially for large graphs; (2) Many graph matching methods can be understood as an instance of this factorization. This allows understanding commonalities and differences among many pair-wise graph matching problems; (3) The factorization leads to a new approximation of the graph matching problem that improves state-of-theart approaches. Fig. 1 illustrates an example of matching two coffee mugs using FGM. Note that FGM factorizes the large 30 \u00d7 30 affinity matrix into four smaller ones.\n\n\nPrevious work\n\nThis section reviews the problem formulation of graph matching and discusses recent advances in solving the QAP in graph matching.\n\n\nProblem formulation of graph matching\n\nWe denote (see notation 1 ) a graph by G = {P, Q, G}, where P = [p 1 , \u00b7 \u00b7 \u00b7 , p n ] \u2208 R dp\u00d7n and Q = [q 1 , \u00b7 \u00b7 \u00b7 , q m ] \u2208 R dq\u00d7m are the feature matrices computed for nodes and edges 2 respectively. The topology of G is specified by a node-edge incidence matrix G \u2208 {0, 1} n\u00d7m , where g ic = g jc = 1 if the i th and j th nodes are connected by the c th edge, and zero otherwise. For instance, Fig. 2a shows a pair of synthetic graphs and Fig. 2cd illustrate their incidence matrices.\n\nSuppose that we are given a pair of graphs,\nG 1 = {P 1 , Q 1 , G 1 } and G 2 = {P 2 , Q 2 , G 2 }.\nWe compute two affinity matrices, K p \u2208 R n1\u00d7n2 and K q \u2208 R m1\u00d7m2 , for measuring the similarity of each node and edge pair respectively. More specifically, \u03ba p i1i2 = \u03c6 p (p 1 i1 , p 2 i2 ) measures the similarity between the i th 1 node of G 1 and the i th 2 node of G 2 , and \u03ba q c1c2 = \u03c6 q (q 1 c1 , q 2 c2 ) measures the similarity between the c th 1 edge of G 1 and the c th 2 edge of G 2 . The problem of graph matching consists in finding a correspondence between the nodes of G 1 and G 2 that maximizes the following score of global consistency:\nJgm(X) = i 1 i 2 xi 1 i 2 \u03ba p i 1 i 2 + i 1 =i 2 ,j 1 =j 2 g 1 i 1 c 1 g 1 j 1 c 1 =1 g 2 i 2 c 2 g 2 j 2 c 2 =1 xi 1 i 2 xj 1 j 2 \u03ba q c 1 c 2 ,\nwhere X \u2208 {0, 1} n1\u00d7n2 denotes the node correspondence, i.e., x i1i2 = 1 if the i th 1 node of G 1 corresponds to the i th 2 node of G 2 . In most cases, X is constrained to be a one-toone matching, i.e., X1 n2 \u2264 1 n1 and X T 1 n1 \u2264 1 n2 . It is more convenient to write J gm (X) in a quadratic form, x T Kx, where x = vec(X) \u2208 {0, 1} n1n2 is an indicator vector and K \u2208 R n1n2\u00d7n1n2 is computed as follows:\n\u03bai 1 i 2 j 1 j 2 = \u23a7 \u23aa \u23aa \u23a8 \u23aa \u23aa \u23a9 \u03ba p i 1 i 2 , if i1 = j1 and i2 = j2, \u03ba q c 1 c 2 , if i1 = j1 and i2 = j2 and g 1 i 1 c 1 g 1 j 1 c 1 g 2 i 2 c 2 g 2 j 2 c 2 = 1, 0, otherwise.\nFor instance, Fig. 2e-g illustrates the composition of the affinity matrices. With these notations, the goal of graph matching is to optimize the following QAP:\nmax x x T Kx, s. t. Ax \u2264 b and x \u2208 {0, 1} n 1 n 2 , (1) where A = 1 T n 2 \u2297 In 1 In 2 \u2297 1 T n 1 and b = 1n 1 +n 2 .\nthe scalar in the i th row and j th column of the matrix X. All non-bold letters represent scalars. 1 m\u00d7n , 0 m\u00d7n \u2208 R m\u00d7n are matrices of ones and zeros. In \u2208 R n\u00d7n is an identity matrix. x p = p |x i | p denotes the p-norm. X 2 F = tr(X T X) designates the Frobenious norm. vec(X) denotes the vectorization of matrix X. diag(x) is a diagonal matrix whose diagonal elements are x. X \u2022 Y and X \u2297 Y are the Hadamard and Kronecker products of matrices. {i : j} lists the integers, {i, i + 1, \u00b7 \u00b7 \u00b7 , j \u2212 1, j}. eig(X) computes the leading eigen-vector of X. 2 In general, the edge feature can be asymmetrical, i.e., the feature used\nfor edge \u2212 \u2192 ij is different from \u2212 \u2192 ji.\nHowever, the symmetrical edge feature can express a wide range of graph matching problems. For instance, the pairwise distance and the absolute angle from the horizontal line both belong to this class of edge feature.\n\n\nAdvances in graph matching\n\nOver the past three decades, a myriad of approximations to solve the QAP in graph matching have been proposed in computer vision and machine learning (see [12,30] for a survey). These methods can be broadly categorized in two types based on the objective to be maximized: tr(A 1 XA 2 X T ) and x T Kx.\n\nThe first case corresponds to maximizing a trace-form objective function, tr(A 1 XA 2 X T ), where A 1 , A 2 \u2208 R n\u00d7n are the weighted adjacency matrices of the graphs and X \u2208 {0, 1} n\u00d7n is a permutation matrix. In the literature of operation research [27], this is known as Koopmans-Beckmann's QAP, which is a particular case of Lawler's QAP maximizing x T Kx when K = A 2 \u2297 A 1 . In the past two decades, various continuous relaxations have been proposed to solve this type of problems. Umeyama [36] proposed the first spectral algorithm by computing the eigenvectors of the adjacency matrices. Almohamad and Duffuaa [3] proposed to optimize an l 1 -norm objective function by linear programming. The most related work to ours is the one from Zaslavskiy et al. [39], in which a convex-concave approach was proposed to estimate the correspondence in an iterative manner. Despite its successfulness for matching characters and other visual objects with relatively simple structure, the graphs used by these methods still lack flexibility to match complex structures encountered in realistic computer vision problems.\n\nIn the more general case, the problem is formulated as the maximization of a quadratic cost x T Kx, where K \u2208 R n1n2\u00d7n1n2 encodes the pair-wise similarity between nodes and edges. In the past decade, much effort has been devoted to the development of approximate methods to solve the more general QAP. Gold and Rangarajan [21] proposed the graduated assignment algorithm to iteratively solve a series of linear approximations of the cost function using Taylor expansions. Leordeanu and Hebert [24] proposed an efficient approximation using an spectral relaxation. Cour et al. [13] presented a more general scheme that incorporates affine constraints in the spectral relaxation, thereby obtaining better approximation of the original problem. Van Wyk and van Wyk [37] proposed to iteratively project the approximate correspondence matrix onto the convex domain of the desired integer constraints. Torresani et al. [35] designed a complex objective function which can be efficiently optimized by dual decomposition. As a general tool for approximating combinatorial problems, semi-definite programming [34,31] was also used to approximate graph matching. Recently, Leordeanu et al. [25] proposed an integer projection algorithm to optimize the objective function in an integer domain. In addition to optimization-based work, probabilistic frameworks [11,40] were shown to be useful for interpreting and solving graph matching problems. In our work, we concentrate on solv- ing the most general type of graph matching problem using optimization techniques.\n\n\nFactorized graph matching (FGM)\n\nIt is well known that the QAP (Eq. 1) is one of the most difficult combinatorial optimization problems. In general, instances of size n > 20 cannot be exactly solved in practical time. Many methods have been proposed to compute an approximate solution. In particular, most efforts focus on maximizing J gm (X) by relaxing the binary constraints. For instance, a popular relaxation is to constrain X as a doubly stochastic matrix [11,21,37,40], which is the convex hull of permutation matrices. Though the constraint can be relaxed to be convex, we still need to tackle a hard non-convex quadratic programming since K is not necessarily negative definite.\n\nTo be able to derive a better optimization scheme for addressing the non-convex issue, this section exploits the underlying structure of K. In particular, K can be factorized into smaller matrices. With this new factorization of K, many graph matching methods can be re-interpreted in a coherent manner. Consider the synthetic graph shown in Fig. 2. Our main intuition relies on two observations. First, the large affinity matrix, K \u2208 R n1n2\u00d7n1n2 is divided into n 2 -by-n 2 smaller blocks K ij \u2208 R n1\u00d7n1 . Some of K ij s contain only zero-value elements and their positions are indexed by\nG 2 G T 2 , i.e., K ij = 0 n1\u00d7n1 if [G 2 G T 2 ] ij = 0. Second, all the non-diagonal elements of K ij can be com- puted as G 1 diag(k q c )G T 1 , where c \u2208 {1\n: m 2 } is the index of the edge connecting the i th and j th nodes of G 2 (i.e., g 2 ic = g 2 jc = 1). Based on these two observations, and after some linear algebra, it can be shown that K can be factorized as:\nK = (H2 \u2297 H1) diag(vec(L))(H2 \u2297 H1) T ,(2)\nwhere H1 = [G1,\nIn 1 ] \u2208 {0, 1} n 1 \u00d7(m 1 +n 1 ) , H2 = [G2, In 2 ] \u2208 {0, 1} n 2 \u00d7(m 2 +n 2 ) , L = Kq \u2212KqG T 2 \u2212G1Kq G1KqG T 2 + Kp \u2208 R (m 1 +n 1 )\u00d7(m 2 +n 2 ) .\nObserve that this factorization decouples the graph struc-ture (H 2 \u2297 H 1 ) from the pairwise feature (L). To the best of our knowledge, Eq. 2 is the first time that K is factorized as products of G 1 , G 2 , K p and K q . As we will see in the rest of the paper, this will have important implications for our graph matching algorithm. This closed-form paves the way to approaching the graph matching problem by manipulating the smaller and denser L instead of the very large and sparse K. Plugging the factorization of K into J gm (X) leads to an equivalent trace-form objective function:\nJgm(X) = x T (H2 \u2297 H1) diag(vec(L))(H2 \u2297 H1) T x = vec(H T 1 XH2) T diag(vec(L)) vec(H T 1 XH2) = tr L T (H T 1 XH2 \u2022 H T 1 XH2) .(3)\nObserve that L can always be factorized (e.g., SVD) as\nL = UV T = c i=1 u i v T i , where U = [u 1 , \u00b7 \u00b7 \u00b7 , u c ] \u2208 R (n1+m1)\u00d7c and V = [v 1 , \u00b7 \u00b7 \u00b7 , v c ] \u2208 R (n2+m2)\u00d7c and c \u2264 min(n 1 + m 1 , n 2 + m 2 )\n. Substituting it into Eq. 3 yields 3 an equivalent trace form of J gm (X):\nJgm(X) = c i=1 tr diag(ui)H T 1 XH2 diag(vi)H T 2 X T H1 = c i=1 tr(A 1 i XA 2 i X T ),(4)\nwhere\nA 1 i = H1 diag(ui)H T 1 and A 2 i = H2 diag(vi)H T 2 .\nAt this point, it is important to notice that Eq. 3 and Eq. 4 can represent many graph matching methods in a unified manner.\n\nSpectral relaxation: Suppose L has a rank-1 structure, i.e., c = 1 and L = uv T . Then the kernel matrix K can be factorized as K = A 2 \u2297 A 1 . Therefore, the solution of spectral matching algorithm using eigen-decomposition [24] can be efficiently computed as eig(K) = eig(A 2 ) \u2297 eig(A 1 ). In addition, we can use Umeyama's spectral algorithm [36] to find the approximate solution by maximizing tr(A 1 XA 2 X T ) subject to XX T = I.\n\nEdge matching: Observe that both H T 1 XH 2 and L have a 2-by-2 block structure and their top-left components are G T 1 XG 2 and K q respectively. Recall that G T 1 XG 2 \u2208 {0, 1} m1\u00d7m2 encodes the correspondence between edges. Intuitively, the goal of maximizing Eq. 3 is to seek for the edge-edge correspondence matrix G T 1 XG 2 such that G T 1 XG 2 \u2022 G T 1 XG 2 is as correlated as possible with K q . The idea of matching edges has also been used in the probabilistic matching algorithm [40], where Zass and Shashua proposed to maximize the correlation between X and G 1 K q G T 2 . Unified view: Eq. 4 reveals the connection between two types of graph matching problems, the less general one [3,36,39] that maximizes tr(A 1 XA 2 X T ), versus the more general one [11,13,21,24,25,37,40] that maximizes x T Kx. In particular, maximization of x T Kx can be equivalently cast as the maximization of the sum of c traces tr(A 1 i XA 2 i X T ), where A 1 i and A 2 i can be interpreted as adjacency matrices. In the special case when c = 1, the two types of problems are equivalent.\n\n\nOptimization for factorized graph matching\n\nDue to its combinatorial nature, Eq. 1 is usually approached by a two-step scheme: (1) solving a contiguously relaxed problem and (2) rounding the approximate solution to a binary one. Conventional methods perform these two steps independently. As mentioned in [25,39], however, this kind of separate treatment will inevitably cause accuracy loss, especially in the rounding step which is independent of the cost function (Eq. 1). Inspired by [29,39], we address these two issues in a coherent manner by iteratively optimizing an interpolation of two relaxations. This new scheme has three theoretical advantages: (1) The optimization performance is initialization-free; (2) The final solution is guaranteed to converge at an integer one and therefore no rounding step is needed; (3) The iteratively updating procedure resembles the idea of numerical continuation methods [2], which have been successfully used for solving nonlinear systems of equations in decades.\n\n\nA convex relaxation\n\nIn this section, we introduce a convex relaxation for Eq. 1 assuming X is orthogonal and using the properties of the new factorization.\n\nStrictly speaking, the X satisfying the constraint in Eq. 1 is not a permutation matrix when n 1 = n 2 . However, we can always slightly change the problem setting by introducing n 2 \u2212 n 1 dummy nodes in 4 G 1 . As a strict permutation matrix, X must also be an orthogonal matrix, i.e., X T X = XX T = I n2 . This fact motivates the following relaxation:\nJvex(X) = Jgm(X) \u2212 1 2 C(X) = \u2212 1 2 i A 1 i X \u2212 XA 2 i 2 F , where C(X) = i tr(A 1 i A 1 i XX T ) + tr(A 2 i A 2 i X T X).\nObserve that due to the orthogonal constraints, C(X) can be considered constant. In addition, maximizing J vex (X) is a convex problem because its Hessian with respect to vec(X),\n\u2212 i (I \u2297 A i 1 \u2212 A i 2 \u2297 I) T (I \u2297 A i 1 \u2212 A i 2 \u2297 I),\nis always negative semi-definite.\n\n\nA concave relaxation\n\nIn this section, we introduce a concave relaxation for Eq. 1 assuming X satisfies the integer constraint.\n\nFrom Eq. 2, we know that L is composed by four parts 4 Without loss of generality, let's assume n 1 \u2264 n 2 .\nL = L 1 \u2212 L 2 + L 3 + L 4 , where L1 = Kq 0 0 0 , L2 = 0 KqG T 2 G1Kq 0 , L3 = 0 0 0 G1KqG T 2 , L4 = 0 0 0 Kp .\nTherefore, J gm (X) can be expanded in the following way:\nJgm(X) = tr K T q (G T 1 XG2 \u2022 G T 1 XG2) \u2212 tr (KqG T 2 ) T (G T 1 X \u2022 G T 1 X) \u2212 tr (G1Kq) T (XG2 \u2022 XG2) + tr (G1KqG T 2 ) T (X \u2022 X) + tr K T p (X \u2022 X) .\nThe integer constraint in Eq. 1 implies X, G T 1 X and XG 2 are all binary matrices, from which we know that it is equivalent [28,39] to replace the quadratic terms X \u2022 X, G T 1 X \u2022 G T 1 X and XG 2 \u2022 XG 2 by the linear ones X, G T 1 X and XG 2 respectively. This fact leads to the following relaxation:\nJcav(X) = tr K T q (G T 1 XG2 \u2022 G T 1 XG2) \u2212 tr (G1KqG T 2 ) T X + tr K T p X .\nMaximizing J cav (X) is a concave problem because its Hessian, (G 2 \u2297 G 1 ) diag(vec(K q ))(G 2 \u2297 G 1 ) T , is positive semi-definite if the edge affinity is positive (i.e., K q \u2265 0).\n\n\nA path-following strategy\n\nIn this section, we describe a path-following strategy for optimizing Eq. 1. Inspired by [39], we approach the nonconvex QP by iteratively optimizing a series of the following sub-problems:\nmax X J\u03b1(X) = (1 \u2212 \u03b1)Jvex(X) + \u03b1Jcav(X),(5)s. t. X1n 2 \u2264 1n 1 , X T 1n 1 \u2264 1n 2 , X \u2265 0n 1 \u00d7n 2 ,\nwhere \u03b1 \u2208 [0, 1] is a tradeoff between the convex relaxation J vex (X) and the concave one J cav (X). When \u03b1 = 0, the problem is a convex optimization problem which has a global optimal solution no matter the choice of the initialization. When \u03b1 = 1, the problem is a concave optimization problem which always leads to an integer solution [5,28]. The process starts with \u03b1 = 0 and successively increasing \u03b1 until 1. Fig. 3 illustrates the procedure of optimizing a graph matching problem using this strategy. In Fig. 3a, we demonstrate the objective functions J \u03b1 and J gm with respect to the change of \u03b1. Note that there is a turning point around \u03b1 = 0.12 in the curve of J \u03b1 . This is because at this point the two relaxations achieve the same value, i.e., J vex = J cav . As \u03b1 \u2192 1, the values of J gm , J \u03b1 and J cav are getting closer to each other, and meanwhile, X is turning into a binary matrix (Fig. 3c). For a specific \u03b1, we optimize J \u03b1 (X) taking the Frank-Wolfe's algorithm (FW) [17,25,39], a simple yet powerful method for nonlinear programming. FW successively update the solution as X * = X 0 + \u03bbY given an initial X 0 . At each step, it needs to compute two components: (1) the optimal direction Y \u2208 R n1\u00d7n2 and (2) the optimal step size \u03bb \u2208 [0, 1]. To compute Y, we solve the following linear programming using the Hungarian algorithm:\nmax Y tr \u2207J\u03b1(X0) T (Y \u2212 X0) , s. t. Y1n 2 \u2264 1n 1 , Y T 1n 1 \u2264 1n 2 , Y \u2265 0n 1 \u00d7n 2 ,\nwhere the gradients can be efficiently computed using matrix operation:\n\u2207J\u03b1(X) = (1 \u2212 \u03b1)\u2207Jvex(X) + \u03b1\u2207Jcav(X), \u2207Jvex(X) = 2H1(H T 1 XH2 \u2022 L)H T 2 \u2212 H1(H T 1 H1 \u2022 UU T )H T 1 X \u2212 XH2(H T 2 H2 \u2022 VV T )H T 2 , \u2207Jcav(X) = 2G1(G T 1 XG2 \u2022 Kq)G T 2 \u2212 G1KqG T 2 + Kp.\nAnd the line search for the optimal \u03bb can be found in closed form by solving: \n\n\nOther implementation details\n\nA similar path-following strategy was proposed in [39] and its performance over the state-of-the-art methods has been therein demonstrated for solving a less general graph matching problem (i.e., tr(A 1 XA 2 X T )). We performed an extensive study of using this strategy for solving the most general graph matching problem (i.e., x T Kx) and we empirically found that it can be improved with the following steps:\n\nConvergence: Although the FW algorithm is easy to implement, it converges sub-linearly. To get faster convergence speed while keeping its advantages in efficiency and low memory cost, we adopt a modified Frank-Wolfe (MFW) [18] to find a better searching direction Y by a convex combination of previously obtained solutions. As it is shown in Fig. 3b, MFW converges much faster than FW.\n\nThe concave-convex structure: J \u03b1 (X) is naturally divided into a concave part and a convex one. To take the advantage of this structure, we adopt the concave-convex procedure (CCCP) [38] that approximates a non-convex objective function by a series of linearizations of the concave part given the current solution. In practice, we found that CCCP outperformed an individual FW in the case when J \u03b1 (X) is close to a convex one, i.e., \u03b1 is small. However, the performance of CCCP would downgrade as \u03b1 gets larger due to the increasing loss in the approximation of the concave part. For instance, Fig. 3b compares CCCP with FW and MFW for optimizing J \u03b1 (X). CCCP outperforms MFW when \u03b1 = 0.08. However, MFW converges fastest for \u03b1 = 0.30. Therefore, we adopt CCCP only in the beginning steps when \u03b1 is smaller than a manually defined threshold \u03b7.\n\nLocal vs global: Although the path-following strategy returns an integer solution by smoothly tracking the local optima in a convex space, it does not guarantee to obtain the global optimal of the non-convex objective function. An important reason is that at each step, it locally optimizes over J \u03b1 (X) instead of the global one J gm (X). And it is possible that J \u03b1 (X) gets improved while J gm (X) gets worse. In order to escape from this phenomenon, we keep increasing the global score of J gm (X) during the optimization by discarding the bad temporary solution that worsens the score of J gm (X) and computing an alternative one by applying one step of FW for optimizing J gm (X). This refinement is analogous to the usage of FW in [25]. As shown in Fig. 3a, the performance of the path-following algorithm can be greatly improved by only optimizing over J gm three times.\n\nAlgorithm 1: Factorized graph matching input : K p , K q , G 1 , G 2 , \u03b4, \u03b7 output: X 1 Initialize X to be a doubly stochastic matrix; 2 Factorize L = UV T with SVD; 3 for \u03b1 = 0 : \u03b4 : 1 do Path-following 4 if \u03b1 \u2264 \u03b7 then 5 Optimize Eq. 5 via CCCP to obtain X * ; 6 else 7\n\nOptimize Eq. 5 via MFW to obtain X * ; 8 if J gm (X * ) < J gm (X) then 9 Optimize Eq. 1 via one step of FW to obtain X * ;\n\n10 Update X \u2190 X * ;\n\nAlgorithm 1 summarizes the workflow of our algorithm. The initial X can be an arbitrary doubly stochastic matrix. The complexity of our algorithm can be roughly calculated as O T (\u03c4 hun + \u03c4 \u2207 + \u03c4 \u03bb ) + \u03c4 L , where T is the number of iterations for the FW and MFW, and \u03c4 L = (n 1 + m 1 )(n 2 + m 2 ) 2 is the cost of computing the SVD of L. The Hungarian algorithm can be finished in \u03c4 hun = max(n 3 1 , n 3 2 ). The gradient of \u2207J \u03b1 and the line search of \u03bb incur the same computational cost, \u03c4 \u2207 = \u03c4 \u03bb = (n 1 + m 1 )(n 2 + m 2 ).\n\n\nExperiments\n\nThis section reports experimental results on three datasets (one synthetic and two real) and compares our method against seven state-of-the-art algorithms:\n\nGraduated assignment (GA): GA [21] performs gradient ascent on a relaxed Eq. 1 driven by an annealing schedule. At each step, it maximizes a Taylor expansion of the non-convex QP around the previous approximate solution. The accuracy of the approximation is controlled by a continuation parameter, \u03b2 t+1 \u2190 \u03b1\u03b2 t \u2264 \u03b2 max . In all experiments, we set \u03b1 = 1.075, \u03b2 0 = .5 and \u03b2 max = 200.\n\nSpectral matching (SM): SM [24] optimizes a relaxed problem of Eq. 1 that drops the affine constraints and introduces a unit-length constraint on x, that is:\nmax X Jgm(X), s. t. x T x = 1.\nThe globally optimal solution of the relaxed problem is the leading eigenvector of K.\n\nSpectral matching with affine constraints (SMAC): SMAC [13] adds affine constraints to the SM problem maximizing:\nmax X Jgm(X), s. t. Ax = b and x T x = 1.\nThe solution is also an eigenvalue problem.\n\nInteger projected fixed point method (IPFP): IPFP [25] is based on FW. It can take any continuous or discrete solution as inputs and iteratively improve the solution. In our experiments, we implemented two versions: (1) IPFP-U, that starts from the same initial X as our method; (2) IPFP-S, that is initialized by SM.\n\nProbabilistic graph matching (PM): PM [40] designs the following convex objective function that can be globally optimized by applying the Sinkhorn's algorithm [32]:\nmin X D(Y X), s. t. X1n 2 \u2264 1n 1 , X T 1n 1 \u2264 1n 2 , X \u2265 0n 1 \u00d7n 2 ,\nwhere D(Y X) denotes the relative entropy error and Y \u2208 R n1\u00d7n2 is calculated by marginalizing K. It is worthwhile pointing out that with our notation, Y can be computed in a matrix form as Y = G 1 K q G T 2 . Re-weighted random walk matching (RRWM): RRWM [11] introduces a random walk view on the problem and obtains the solution by simulating random walks with re-weighting jumps enforcing the matching constraints on the association graph. We fixed its parameters \u03b1 = 0.2 and \u03b2 = 30 in all experiments.\n\nWe used existing code from the author's websites for all methods. Notice that all methods need a post-processing step to discretize X. To make a fair comparison, we applied the Hungarian algorithm to make this discretization in all methods. The parameters for our method were fixed to \u03b4 = 0.01 and \u03b7 = 0.1 in all experiments. The code was implemented in Matlab on a laptop platform with 2.4G Intel Core 2 Duo and 4G memory. FGM was able to obtain the solution within a minute for graphs with 50 nodes.\n\nWe evaluated both the matching accuracy and the objective score for the comparison of performance. The matching accuracy, tr(X T alg Xtru) tr(1n 2 \u00d7n 1 Xtru) , is calculated by computing the consistent matches between the correspondence matrix X alg given by algorithm and ground-truth X tru . The objective score,\nJgm(X alg )\nJgm(Xours) , is computed as the ratio between the objective values of our method and other algorithms.\n\n\nSynthetic dataset\n\nThis experiment performed a comparative evaluation of seven algorithms on randomly synthesized graphs following the experimental protocol of [11,13,21]. For each trial, we constructed two identical graphs, G 1 and G 2 , each of which consists of 20 inlier nodes and later we added n out outlier nodes (in both graphs). For each pair of nodes, the edge is randomly generated according to the edge density parameter \u03c1 \u2208 [0, 1]. Each edge in the first graph was assigned a random edge score distributed uniformly as q 1 c \u223c U(0, 1) and the corresponding edge q 2 c = q 1 c + in the second graph is perturbed by adding a random Gaussian noise \u223c N (0, \u03c3 2 ). The edge-affinity matrix K q was com-\nputed as k q c1c2 = exp(\u2212 (q 1 c 1 \u2212q 2 c 2 ) 2 0.15\n) and the node-affinity K p was set to zero.\n\nThe experiment tested the performance of GM methods under three parameter settings. For each setting, we generated 100 different pairs of graphs and evaluated the average accuracy and objective score. In the first setting (Fig. 4a), we increased the number of outliers from 0 to 20 while fixing the noise \u03c3 = 0 and considering only fully connected graphs (i.e., \u03c1 = 1). In the second case (Fig. 4b), we perturbed the edge weights by changing the noise parameter \u03c3 from 0 to 0.2, while fixing the other two parameter n out = 0 and \u03c1 = 1. In the last case (Fig. 4c), we verified the performance of matching sparse graphs by varying \u03c1 from 1 to 0.3. Under varying parameters, it can be observed that in most of cases, our method achieves the best performance over all other algorithms in terms of both accuracy and objective ratio. RRWM is comparable to our method. In particular, it slightly outperforms ours in the case when the graph edges contain large deformation (Fig. 4b). This is because the stochastic scheme adopted by RRWM can update the correspondence matrix more robustly than other optimization-based methods.\n\n\nCMU house dataset\n\nThe CMU house image sequence [1] is commonly used to test the performance of graph matching algorithms [8,11,14,35]. This dataset consists of 111 frames of a house, each of which has been manually labeled with 30 land- marks. We used Delaunay triangulation to connect the landmarks. The edge weight q c is computed as the pairwise distance between the connected nodes. Given an image pair, the edge-affinity matrix K q was computed by\nk q c1c2 = exp(\u2212 (q 1 c 1 \u2212q 2 c 2 ) 2 2500\n) and the node-affinity K p was set to zero. We tested the performance of all methods as a function of the separation between frames. We matched all possible image pairs, spaced exactly by 0 : 10 : 90 frames and computed the average matching accuracy and objective ratio per sequence gap. Fig. 5a demonstrates an example pair of two frames.\n\nWe tested the performance of graph matching methods under two scenarios. In the first case (Fig. 5b) we used all 30 nodes (i.e. landmarks) and in the second one (Fig. 5c) we matched sub-graphs by randomly picking 25 landmarks. It can be observed that in the first case (Fig. 5b), RRWM, IPFP-S and our method almost obtained perfect matching of the original graphs. As some nodes became invisible and the graph got corrupted (Fig. 5c), the performance of all the methods degrades. However, our method consistently achieved the best performance.\n\n\nPascal image dataset\n\nThe third experiment used the dataset from [26]. This dataset consists of 30 pairs of car images and 20 pairs of motorbike images selected from Pascal 2007 [16]. Each pair contains 30 \u223c 60 ground-truth correspondences. We computed for each node the feature, p i , as its orientation of the normal vector at that point to the contour where the point was sampled. We adopted the Delaunay triangulation to build graphs and each edge was represented by a couple of values, q c = [d c , \u03b8 c ] T , where d c is the pairwise distance between the connected nodes and \u03b8 c is the absolute angle between the edge and the horizontal line. Thus, for each pair of images, we computed the node affinity as k p ij = exp(\u2212|p i \u2212 p j |) and the edge affinity as Fig. 6a and Fig. 6b demonstrate example pairs of car and motorbike images respectively.\nk q c1c2 = exp(\u2212 1 2 |d c1 \u2212 d c2 | \u2212 1 2 |\u03b8 c1 \u2212 \u03b8 c2 |).\nTo test the performance against noise, we randomly selected 0 \u223c 20 outlier nodes from the background. In the case when no outliers exist, our method achieves above 80% matching rate in both datasets (Fig. 6bc), which is higher than 75% presented in [26]. From Fig. 6c, it is interesting to see that RRWM performs better in terms of accuracy for particular level of outliers, whereas our method obtains a higher objectives. This is because the ground-truth correspondence may not be always the optimal solution to the problem.\n\n\nConclusions\n\nThis paper presents FGM, a new graph matching algorithm that exploits the properties of the factorized affinity or graph matrix. Three main benefits follow from factorizing the affinity matrix. First, there is no need to explicitly compute the affinity matrix. Second, it provides a unified approach to frame several graph matching algorithms. Third, using the factorization, a new optimization based on FW and CCCP is proposed. Experimental results on synthetic and real datasets illustrate the performance of the new method.\n\nIn the paper we have illustrated the advantages of factorizing the pair-wise affinity matrix of typical graph matching problems. The most computationally consuming part of the algorithm is the large number of iterations needed for FW method to converge when J \u03b1 is close to a convex function. Therefore, more advanced techniques (e.g., conjugate gradient) can be used to speedup FW. In addition, we are currently exploring the extension of this factorization methods to other higher-order graph matching problems [9,14,40] as well as learning parameters for graph matching [8,26]. \n\nFigure 2 .\n2Example of graph matching and related matrices. (a) Two synthetic graphs. (b) The correspondence matrix X. (c) The 1 st graph's incidence matrix G1. (d) The 2 nd graph's incidence matrix G2. (e) The node affinity matrix Kp. (f) The edge affinity matrix Kq. (g) The global affinity matrix K.\n\n\nX0 + \u03bbY), s. t. \u03bb \u2208 [0, 1].\n\nFigure 3 .\n3The path-following optimization of the example inFig. 6b. (a) The comparison of the objectives optimized by our algorithm and other state-of-the-art graph matching methods (See the experiment section for the details of these methods). (b) The comparison of optimizing J\u03b1(X) for different \u03b1's. (c) The updating of X, where each curve corresponds a xij.\n\nFigure 4 .\n4Comparison of graph matching for synthetic datasets. (a) Performance as a function of the outlier number (nout). (b) Performance as a function of the edge noise (\u03c3). (c) Performance as a function of the density of edges (\u03c1).\n\nFigure 5 .Figure 6 .\n56Comparison of graph matching for CMU house datasets. (a) An example pair of frames with the correspondence generated by our method, where the blue lines indicate incorrect matches. (b) Performance when using 30 nodes. (c) Performance when using 25 nodes. Comparison of graph matching for the Pascal 2007 dataset. (a) An example pair of car images with the correspondence generated by our method, where the blue lines indicate incorrect matches. (b) An example pair of motorbike images. (c) Performance as a function of the outlier number for the car images. (d) Performance as a function of the outlier number for the motorbike images.\nBold capital letters denote a matrix X, bold lower-case letters a column vector x. x i represents the i th column of the matrix X. x ij denotes\nThe formula tr (uv T ) T (A\u2022B) = tr diag(u)A diag(v)B T always holds for arbitrary u \u2208 R m , v \u2208 R n and A, B \u2208 R m\u00d7n .\nAcknowledgements The first author was supported by the National Science Foundation (NSF) under Grant No. EEEC-0540865 and CPS-0931999. The second author was partially supported by the NSF grant RI-1116583. Any opinions, findings, and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the NSF.\nIntroduction to Numerical Continuation Methods. SIAM. E L Allgower, K Georg, E. L. Allgower and K. Georg. Introduction to Numerical Continuation Methods. SIAM, 2003.\n\nA linear programming approach for the weighted graph matching problem. H A Almohamad, S O Duffuaa, IEEE Trans. Pattern Anal. Mach. Intell. 155H. A. Almohamad and S. O. Duffuaa. A linear programming approach for the weighted graph matching problem. IEEE Trans. Pattern Anal. Mach. Intell., 15(5):522-525, 1993.\n\nShape matching and object recognition using low distortion correspondences. A C Berg, T L Berg, J Malik, CVPR. A. C. Berg, T. L. Berg, and J. Malik. Shape matching and object recognition using low distortion correspondences. In CVPR, 2005.\n\nA global optimization algorithm for concave quadratic programming problems. I M Bomze, G Danninger, SIAM J. Optim. 3I. M. Bomze and G. Danninger. A global optimization algorithm for concave quadratic programming problems. SIAM J. Optim., 3:826-842, 1993.\n\nLearning spatiotemporal graphs of human activities. W Brendel, S Todorovic, ICCV. W. Brendel and S. Todorovic. Learning spatiotemporal graphs of human activ- ities. In ICCV, 2011.\n\nAssignment Problems. SIAM. R Burkard, M Dellamico, S Martello, R. Burkard, M. DellAmico, and S. Martello. Assignment Problems. SIAM, 2009.\n\nLearning graph matching. T S Caetano, J J Mcauley, L Cheng, Q V Le, A J Smola, IEEE Trans. Pattern Anal. Mach. Intell. 316T. S. Caetano, J. J. McAuley, L. Cheng, Q. V. Le, and A. J. Smola. Learning graph matching. IEEE Trans. Pattern Anal. Mach. Intell., 31(6):1048-1058, 2009.\n\nEfficient high order matching. M Chertok, Y Keller, IEEE Trans. Pattern Anal. Mach. Intell. 3212M. Chertok and Y. Keller. Efficient high order matching. IEEE Trans. Pattern Anal. Mach. Intell., 32(12):2205-2215, 2010.\n\nSpectral symmetry analysis. M Chertok, Y Keller, IEEE Trans. Pattern Anal. Mach. Intell. 327M. Chertok and Y. Keller. Spectral symmetry analysis. IEEE Trans. Pattern Anal. Mach. Intell., 32(7):1227-1238, 2010.\n\nReweighted random walks for graph matching. M Cho, J Lee, K M Lee, ECCV. M. Cho, J. Lee, and K. M. Lee. Reweighted random walks for graph matching. In ECCV, 2010.\n\nThirty years of graph matching in pattern recognition. D Conte, P Foggia, C Sansone, M Vento, IJPRAI. 183D. Conte, P. Foggia, C. Sansone, and M. Vento. Thirty years of graph matching in pattern recognition. IJPRAI, 18(3):265-298, 2004.\n\nBalanced graph matching. T Cour, P Srinivasan, J Shi, NIPS. T. Cour, P. Srinivasan, and J. Shi. Balanced graph matching. In NIPS, 2006.\n\nA tensor-based algorithm for high-order graph matching. O Duchenne, F Bach, I.-S Kweon, J Ponce, IEEE Trans. Pattern Anal. Mach. Intell. 3312O. Duchenne, F. Bach, I.-S. Kweon, and J. Ponce. A tensor-based algo- rithm for high-order graph matching. IEEE Trans. Pattern Anal. Mach. Intell., 33(12):2383-2395, 2011.\n\nA graph-matching kernel for object categorization. O Duchenne, A Joulin, J Ponce, ICCV. O. Duchenne, A. Joulin, and J. Ponce. A graph-matching kernel for object categorization. In ICCV, 2011.\n\nThe PASCAL Visual Object Classes Challenge. M Everingham, L V Gool, C K I Williams, J Winn, A Zisserman, M. Everingham, L. V. Gool, C. K. I. Williams, J. Winn, and A. Zisserman. The PASCAL Visual Object Classes Challenge 2007 (VOC2007) Results. http://www.pascal- network.org/challenges/VOC/voc2007/workshop/index.html.\n\nAn algorithm for quadratic programming. M Frank, P Wolfe, Naval Research Logistics Quarterly. 31-2M. Frank and P. Wolfe. An algorithm for quadratic programming. Naval Re- search Logistics Quarterly, 3(1-2):95-110, 1956.\n\nA modified Frank-Wolfe algorithm for solving the traffic assignment problem. M Fukushima, Transp. Res. Part B: Methodological. 182M. Fukushima. A modified Frank-Wolfe algorithm for solving the traffic as- signment problem. Transp. Res. Part B: Methodological, 18(2):169-177, 1984.\n\nComputers and Intractability: A Guide to the Theory of NP-Completeness. M R Garey, D S Johnson, W. H. FreemanM. R. Garey and D. S. Johnson. Computers and Intractability: A Guide to the Theory of NP-Completeness. W. H. Freeman, 1979.\n\nA \"string of feature graphs model\" for recognition of complex activities in natural videos. U Gaur, Y Zhu, B Song, A Roy-Chowdhury, ICCV. U. Gaur, Y. Zhu, B. Song, and A. Roy-Chowdhury. A \"string of feature graphs model\" for recognition of complex activities in natural videos. In ICCV, 2011.\n\nA graduated assignment algorithm for graph matching. S Gold, A Rangarajan, IEEE Trans. Pattern Anal. Mach. Intell. 184S. Gold and A. Rangarajan. A graduated assignment algorithm for graph match- ing. IEEE Trans. Pattern Anal. Mach. Intell., 18(4):377-388, 1996.\n\nDiscovering texture regularity as a higher-order correspondence problem. J Hays, M Leordeanu, A A Efros, Y Liu, ECCV. J. Hays, M. Leordeanu, A. A. Efros, and Y. Liu. Discovering texture regularity as a higher-order correspondence problem. In ECCV, 2006.\n\nLinear scale and rotation invariant matching. H Jiang, S X Yu, D R Martin, IEEE Trans. Pattern Anal. Mach. Intell. 337H. Jiang, S. X. Yu, and D. R. Martin. Linear scale and rotation invariant match- ing. IEEE Trans. Pattern Anal. Mach. Intell., 33(7):1339-1355, 2011.\n\nA spectral technique for correspondence problems using pairwise constraints. M Leordeanu, M Hebert, ICCV. M. Leordeanu and M. Hebert. A spectral technique for correspondence prob- lems using pairwise constraints. In ICCV, 2005.\n\nAn integer projected fixed point method for graph matching and MAP inference. M Leordeanu, M Hebert, R Sukthankar, NIPS. M. Leordeanu, M. Hebert, and R. Sukthankar. An integer projected fixed point method for graph matching and MAP inference. In NIPS, 2009.\n\nUnsupervised learning for graph matching. M Leordeanu, R Sukthankar, M Hebert, Int. J. Comput. Vis. 951M. Leordeanu, R. Sukthankar, and M. Hebert. Unsupervised learning for graph matching. Int. J. Comput. Vis., 95(1):1-18, 2011.\n\nA survey for the quadratic assignment problem. E M Loiola, N M De Abreu, P O Boaventura, P Hahn, T M Querido, Eur. J. Oper. Res. 1762E. M. Loiola, N. M. de Abreu, P. O. Boaventura, P. Hahn, and T. M. Querido. A survey for the quadratic assignment problem. Eur. J. Oper. Res., 176(2):657- 690, 2007.\n\nA global solution to sparse correspondence problems. J Maciel, J Costeira, IEEE Trans. Pattern Anal. Mach. Intell. 252J. Maciel and J. Costeira. A global solution to sparse correspondence problems. IEEE Trans. Pattern Anal. Mach. Intell., 25(2):187-199, 2003.\n\nA continuation approach for solving nonlinear optimization problems with discrete variables. K M Ng, Stanford UniversityPhD thesisK. M. Ng. A continuation approach for solving nonlinear optimization prob- lems with discrete variables. PhD thesis, Stanford University, 2002.\n\nEvaluation of convex optimization techniques for the weighted graph-matching problem in computer vision. C Schellewald, S Roth, C Schn\u00f6rr, DAGM-Symposium. C. Schellewald, S. Roth, and C. Schn\u00f6rr. Evaluation of convex optimization techniques for the weighted graph-matching problem in computer vision. In DAGM-Symposium, 2001.\n\nProbabilistic subgraph matching based on convex relaxation. C Schellewald, C Schn\u00f6rr, EMMCVPR. C. Schellewald and C. Schn\u00f6rr. Probabilistic subgraph matching based on con- vex relaxation. In EMMCVPR, 2005.\n\nA relationship between arbitrary positive matrices and doubly stochastic matrices. R Sinkhorn, Amer. Math. Soc35R. Sinkhorn. A relationship between arbitrary positive matrices and doubly stochastic matrices. Amer. Math. Soc, 35(2):876-879, 1964.\n\nRecognizing and tracking human action. J Sullivan, S Carlsson, ECCV. J. Sullivan and S. Carlsson. Recognizing and tracking human action. In ECCV, 2002.\n\nSolving Markov random fields using semidefinite programming. P H S Torr, AISTATS. P. H. S. Torr. Solving Markov random fields using semidefinite programming. In AISTATS, 2003.\n\nFeature correspondence via graph matching: Models and global optimization. L Torresani, V Kolmogorov, C Rother, ECCV. L. Torresani, V. Kolmogorov, and C. Rother. Feature correspondence via graph matching: Models and global optimization. In ECCV, 2008.\n\nAn eigendecomposition approach to weighted graph matching problems. S Umeyama, IEEE Trans. Pattern Anal. Mach. Intell. 105S. Umeyama. An eigendecomposition approach to weighted graph matching problems. IEEE Trans. Pattern Anal. Mach. Intell., 10(5):695-703, 1988.\n\nA POCS-based graph matching algorithm. B J Van Wyk, M A Van Wyk, IEEE Trans. Pattern Anal. Mach. Intell. 2611B. J. van Wyk and M. A. van Wyk. A POCS-based graph matching algorithm. IEEE Trans. Pattern Anal. Mach. Intell., 26(11):1526-1530, 2004.\n\nThe concave-convex procedure. A L Yuille, A Rangarajan, Neural Comput. 154A. L. Yuille and A. Rangarajan. The concave-convex procedure. Neural Com- put., 15(4):915-936, 2003.\n\nA path following algorithm for the graph matching problem. M Zaslavskiy, F R Bach, J.-P Vert, IEEE Trans. Pattern Anal. Mach. Intell. 3112M. Zaslavskiy, F. R. Bach, and J.-P. Vert. A path following algorithm for the graph matching problem. IEEE Trans. Pattern Anal. Mach. Intell., 31(12):2227-2242, 2009.\n\nProbabilistic graph and hypergraph matching. R Zass, A Shashua, CVPR. R. Zass and A. Shashua. Probabilistic graph and hypergraph matching. In CVPR, 2008.\n", "annotations": {"author": "[{\"end\":87,\"start\":29},{\"end\":157,\"start\":88}]", "publisher": null, "author_last_name": "[{\"end\":38,\"start\":34},{\"end\":108,\"start\":97}]", "author_first_name": "[{\"end\":33,\"start\":29},{\"end\":96,\"start\":88}]", "author_affiliation": "[{\"end\":86,\"start\":40},{\"end\":156,\"start\":110}]", "title": "[{\"end\":26,\"start\":1},{\"end\":183,\"start\":158}]", "venue": null, "abstract": "[{\"end\":1258,\"start\":185}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b2\"},\"end\":1395,\"start\":1392},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":1423,\"start\":1419},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":1446,\"start\":1442},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":1449,\"start\":1446},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":1473,\"start\":1469},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":1476,\"start\":1473},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":1503,\"start\":1500},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":1506,\"start\":1503},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":1609,\"start\":1605},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":1713,\"start\":1710},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":1746,\"start\":1742},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2157,\"start\":2154},{\"end\":2692,\"start\":2685},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2722,\"start\":2718},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":2725,\"start\":2722},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":2728,\"start\":2725},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2731,\"start\":2728},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":2734,\"start\":2731},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":2737,\"start\":2734},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":2784,\"start\":2780},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":2787,\"start\":2784},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3514,\"start\":3511},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6682,\"start\":6681},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":7205,\"start\":7201},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":7208,\"start\":7205},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":7604,\"start\":7600},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":7849,\"start\":7845},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7970,\"start\":7967},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":8115,\"start\":8111},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":8792,\"start\":8788},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":8963,\"start\":8959},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9046,\"start\":9042},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":9232,\"start\":9228},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":9383,\"start\":9379},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":9570,\"start\":9566},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":9573,\"start\":9570},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":9650,\"start\":9646},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9818,\"start\":9814},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":9821,\"start\":9818},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":10488,\"start\":10484},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10491,\"start\":10488},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":10494,\"start\":10491},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":10497,\"start\":10494},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13397,\"start\":13393},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":13518,\"start\":13514},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":14101,\"start\":14097},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":14306,\"start\":14303},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":14309,\"start\":14306},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":14312,\"start\":14309},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":14379,\"start\":14375},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":14382,\"start\":14379},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14385,\"start\":14382},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":14388,\"start\":14385},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":14391,\"start\":14388},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":14394,\"start\":14391},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":14397,\"start\":14394},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":14999,\"start\":14995},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":15002,\"start\":14999},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":15181,\"start\":15177},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":15184,\"start\":15181},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":15609,\"start\":15606},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":16791,\"start\":16790},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":17301,\"start\":17297},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":17304,\"start\":17301},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":17861,\"start\":17857},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":18398,\"start\":18395},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":18401,\"start\":18398},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":19052,\"start\":19048},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":19055,\"start\":19052},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":19058,\"start\":19055},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":19920,\"start\":19916},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":20506,\"start\":20502},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":20854,\"start\":20850},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":22257,\"start\":22253},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":22600,\"start\":22599},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":22616,\"start\":22615},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":22707,\"start\":22706},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":22740,\"start\":22739},{\"end\":23221,\"start\":23218},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":23550,\"start\":23546},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":23933,\"start\":23929},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":24237,\"start\":24233},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":24433,\"start\":24429},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":24740,\"start\":24736},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":24861,\"start\":24857},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":25192,\"start\":25188},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":26538,\"start\":26534},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":26541,\"start\":26538},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":26544,\"start\":26541},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28432,\"start\":28429},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":28435,\"start\":28432},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":28438,\"start\":28435},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":28441,\"start\":28438},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":29762,\"start\":29758},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":29875,\"start\":29871},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":30859,\"start\":30855},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":32191,\"start\":32188},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":32194,\"start\":32191},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":32197,\"start\":32194},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":32251,\"start\":32248},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":32254,\"start\":32251}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":32560,\"start\":32257},{\"attributes\":{\"id\":\"fig_1\"},\"end\":32590,\"start\":32561},{\"attributes\":{\"id\":\"fig_2\"},\"end\":32955,\"start\":32591},{\"attributes\":{\"id\":\"fig_3\"},\"end\":33193,\"start\":32956},{\"attributes\":{\"id\":\"fig_4\"},\"end\":33853,\"start\":33194}]", "paragraph": "[{\"end\":1945,\"start\":1274},{\"end\":2693,\"start\":1947},{\"end\":2822,\"start\":2695},{\"end\":3785,\"start\":2824},{\"end\":3933,\"start\":3803},{\"end\":4462,\"start\":3975},{\"end\":4507,\"start\":4464},{\"end\":5117,\"start\":4563},{\"end\":5669,\"start\":5263},{\"end\":6009,\"start\":5849},{\"end\":6755,\"start\":6126},{\"end\":7015,\"start\":6798},{\"end\":7347,\"start\":7046},{\"end\":8464,\"start\":7349},{\"end\":10019,\"start\":8466},{\"end\":10709,\"start\":10055},{\"end\":11300,\"start\":10711},{\"end\":11674,\"start\":11462},{\"end\":11733,\"start\":11718},{\"end\":12470,\"start\":11881},{\"end\":12659,\"start\":12605},{\"end\":12888,\"start\":12813},{\"end\":12985,\"start\":12980},{\"end\":13166,\"start\":13042},{\"end\":13604,\"start\":13168},{\"end\":14687,\"start\":13606},{\"end\":15699,\"start\":14734},{\"end\":15858,\"start\":15723},{\"end\":16214,\"start\":15860},{\"end\":16516,\"start\":16338},{\"end\":16605,\"start\":16572},{\"end\":16735,\"start\":16630},{\"end\":16844,\"start\":16737},{\"end\":17015,\"start\":16958},{\"end\":17474,\"start\":17171},{\"end\":17738,\"start\":17555},{\"end\":17957,\"start\":17768},{\"end\":19409,\"start\":18056},{\"end\":19566,\"start\":19495},{\"end\":19833,\"start\":19755},{\"end\":20278,\"start\":19866},{\"end\":20665,\"start\":20280},{\"end\":21513,\"start\":20667},{\"end\":22393,\"start\":21515},{\"end\":22665,\"start\":22395},{\"end\":22790,\"start\":22667},{\"end\":22811,\"start\":22792},{\"end\":23343,\"start\":22813},{\"end\":23514,\"start\":23359},{\"end\":23900,\"start\":23516},{\"end\":24059,\"start\":23902},{\"end\":24176,\"start\":24091},{\"end\":24291,\"start\":24178},{\"end\":24377,\"start\":24334},{\"end\":24696,\"start\":24379},{\"end\":24862,\"start\":24698},{\"end\":25437,\"start\":24932},{\"end\":25940,\"start\":25439},{\"end\":26256,\"start\":25942},{\"end\":26371,\"start\":26269},{\"end\":27084,\"start\":26393},{\"end\":27182,\"start\":27138},{\"end\":28304,\"start\":27184},{\"end\":28760,\"start\":28326},{\"end\":29145,\"start\":28805},{\"end\":29690,\"start\":29147},{\"end\":30546,\"start\":29715},{\"end\":31131,\"start\":30606},{\"end\":31673,\"start\":31147},{\"end\":32256,\"start\":31675}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":4562,\"start\":4508},{\"attributes\":{\"id\":\"formula_1\"},\"end\":5262,\"start\":5118},{\"attributes\":{\"id\":\"formula_2\"},\"end\":5848,\"start\":5670},{\"attributes\":{\"id\":\"formula_3\"},\"end\":6125,\"start\":6010},{\"attributes\":{\"id\":\"formula_4\"},\"end\":6797,\"start\":6756},{\"attributes\":{\"id\":\"formula_5\"},\"end\":11461,\"start\":11301},{\"attributes\":{\"id\":\"formula_6\"},\"end\":11717,\"start\":11675},{\"attributes\":{\"id\":\"formula_7\"},\"end\":11880,\"start\":11734},{\"attributes\":{\"id\":\"formula_8\"},\"end\":12604,\"start\":12471},{\"attributes\":{\"id\":\"formula_9\"},\"end\":12812,\"start\":12660},{\"attributes\":{\"id\":\"formula_10\"},\"end\":12979,\"start\":12889},{\"attributes\":{\"id\":\"formula_11\"},\"end\":13041,\"start\":12986},{\"attributes\":{\"id\":\"formula_12\"},\"end\":16337,\"start\":16215},{\"attributes\":{\"id\":\"formula_13\"},\"end\":16571,\"start\":16517},{\"attributes\":{\"id\":\"formula_14\"},\"end\":16957,\"start\":16845},{\"attributes\":{\"id\":\"formula_15\"},\"end\":17170,\"start\":17016},{\"attributes\":{\"id\":\"formula_16\"},\"end\":17554,\"start\":17475},{\"attributes\":{\"id\":\"formula_17\"},\"end\":18001,\"start\":17958},{\"attributes\":{\"id\":\"formula_18\"},\"end\":18055,\"start\":18001},{\"attributes\":{\"id\":\"formula_19\"},\"end\":19494,\"start\":19410},{\"attributes\":{\"id\":\"formula_20\"},\"end\":19754,\"start\":19567},{\"attributes\":{\"id\":\"formula_21\"},\"end\":24090,\"start\":24060},{\"attributes\":{\"id\":\"formula_22\"},\"end\":24333,\"start\":24292},{\"attributes\":{\"id\":\"formula_23\"},\"end\":24931,\"start\":24863},{\"attributes\":{\"id\":\"formula_24\"},\"end\":26268,\"start\":26257},{\"attributes\":{\"id\":\"formula_25\"},\"end\":27137,\"start\":27085},{\"attributes\":{\"id\":\"formula_26\"},\"end\":28804,\"start\":28761},{\"attributes\":{\"id\":\"formula_27\"},\"end\":30605,\"start\":30547}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1272,\"start\":1260},{\"attributes\":{\"n\":\"2.\"},\"end\":3801,\"start\":3788},{\"attributes\":{\"n\":\"2.1.\"},\"end\":3973,\"start\":3936},{\"attributes\":{\"n\":\"2.2.\"},\"end\":7044,\"start\":7018},{\"attributes\":{\"n\":\"3.\"},\"end\":10053,\"start\":10022},{\"attributes\":{\"n\":\"4.\"},\"end\":14732,\"start\":14690},{\"attributes\":{\"n\":\"4.1.\"},\"end\":15721,\"start\":15702},{\"attributes\":{\"n\":\"4.2.\"},\"end\":16628,\"start\":16608},{\"attributes\":{\"n\":\"4.3.\"},\"end\":17766,\"start\":17741},{\"attributes\":{\"n\":\"4.4.\"},\"end\":19864,\"start\":19836},{\"attributes\":{\"n\":\"5.\"},\"end\":23357,\"start\":23346},{\"attributes\":{\"n\":\"5.1.\"},\"end\":26391,\"start\":26374},{\"attributes\":{\"n\":\"5.2.\"},\"end\":28324,\"start\":28307},{\"attributes\":{\"n\":\"5.3.\"},\"end\":29713,\"start\":29693},{\"attributes\":{\"n\":\"6.\"},\"end\":31145,\"start\":31134},{\"end\":32268,\"start\":32258},{\"end\":32602,\"start\":32592},{\"end\":32967,\"start\":32957},{\"end\":33215,\"start\":33195}]", "table": null, "figure_caption": "[{\"end\":32560,\"start\":32270},{\"end\":32590,\"start\":32563},{\"end\":32955,\"start\":32604},{\"end\":33193,\"start\":32969},{\"end\":33853,\"start\":33218}]", "figure_ref": "[{\"end\":2246,\"start\":2238},{\"end\":3640,\"start\":3634},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":4379,\"start\":4372},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":4425,\"start\":4417},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":5870,\"start\":5863},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":11059,\"start\":11053},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":18478,\"start\":18472},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":18575,\"start\":18568},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":18968,\"start\":18959},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":20629,\"start\":20622},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":21270,\"start\":21263},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":22278,\"start\":22271},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":27415,\"start\":27406},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":27582,\"start\":27573},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":27747,\"start\":27738},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":28159,\"start\":28150},{\"end\":29101,\"start\":29094},{\"end\":29247,\"start\":29238},{\"end\":29317,\"start\":29308},{\"end\":29425,\"start\":29416},{\"end\":29580,\"start\":29571},{\"end\":30466,\"start\":30459},{\"end\":30478,\"start\":30471},{\"end\":30815,\"start\":30805},{\"end\":30873,\"start\":30866}]", "bib_author_first_name": "[{\"end\":34545,\"start\":34544},{\"end\":34547,\"start\":34546},{\"end\":34559,\"start\":34558},{\"end\":34729,\"start\":34728},{\"end\":34731,\"start\":34730},{\"end\":34744,\"start\":34743},{\"end\":34746,\"start\":34745},{\"end\":35045,\"start\":35044},{\"end\":35047,\"start\":35046},{\"end\":35055,\"start\":35054},{\"end\":35057,\"start\":35056},{\"end\":35065,\"start\":35064},{\"end\":35286,\"start\":35285},{\"end\":35288,\"start\":35287},{\"end\":35297,\"start\":35296},{\"end\":35518,\"start\":35517},{\"end\":35529,\"start\":35528},{\"end\":35674,\"start\":35673},{\"end\":35685,\"start\":35684},{\"end\":35698,\"start\":35697},{\"end\":35812,\"start\":35811},{\"end\":35814,\"start\":35813},{\"end\":35825,\"start\":35824},{\"end\":35827,\"start\":35826},{\"end\":35838,\"start\":35837},{\"end\":35847,\"start\":35846},{\"end\":35849,\"start\":35848},{\"end\":35855,\"start\":35854},{\"end\":35857,\"start\":35856},{\"end\":36097,\"start\":36096},{\"end\":36108,\"start\":36107},{\"end\":36313,\"start\":36312},{\"end\":36324,\"start\":36323},{\"end\":36540,\"start\":36539},{\"end\":36547,\"start\":36546},{\"end\":36554,\"start\":36553},{\"end\":36556,\"start\":36555},{\"end\":36715,\"start\":36714},{\"end\":36724,\"start\":36723},{\"end\":36734,\"start\":36733},{\"end\":36745,\"start\":36744},{\"end\":36922,\"start\":36921},{\"end\":36930,\"start\":36929},{\"end\":36944,\"start\":36943},{\"end\":37090,\"start\":37089},{\"end\":37102,\"start\":37101},{\"end\":37113,\"start\":37109},{\"end\":37122,\"start\":37121},{\"end\":37399,\"start\":37398},{\"end\":37411,\"start\":37410},{\"end\":37421,\"start\":37420},{\"end\":37585,\"start\":37584},{\"end\":37599,\"start\":37598},{\"end\":37601,\"start\":37600},{\"end\":37609,\"start\":37608},{\"end\":37613,\"start\":37610},{\"end\":37625,\"start\":37624},{\"end\":37633,\"start\":37632},{\"end\":37902,\"start\":37901},{\"end\":37911,\"start\":37910},{\"end\":38160,\"start\":38159},{\"end\":38437,\"start\":38436},{\"end\":38439,\"start\":38438},{\"end\":38448,\"start\":38447},{\"end\":38450,\"start\":38449},{\"end\":38691,\"start\":38690},{\"end\":38699,\"start\":38698},{\"end\":38706,\"start\":38705},{\"end\":38714,\"start\":38713},{\"end\":38946,\"start\":38945},{\"end\":38954,\"start\":38953},{\"end\":39229,\"start\":39228},{\"end\":39237,\"start\":39236},{\"end\":39250,\"start\":39249},{\"end\":39252,\"start\":39251},{\"end\":39261,\"start\":39260},{\"end\":39457,\"start\":39456},{\"end\":39466,\"start\":39465},{\"end\":39468,\"start\":39467},{\"end\":39474,\"start\":39473},{\"end\":39476,\"start\":39475},{\"end\":39757,\"start\":39756},{\"end\":39770,\"start\":39769},{\"end\":39987,\"start\":39986},{\"end\":40000,\"start\":39999},{\"end\":40010,\"start\":40009},{\"end\":40210,\"start\":40209},{\"end\":40223,\"start\":40222},{\"end\":40237,\"start\":40236},{\"end\":40445,\"start\":40444},{\"end\":40447,\"start\":40446},{\"end\":40457,\"start\":40456},{\"end\":40459,\"start\":40458},{\"end\":40471,\"start\":40470},{\"end\":40473,\"start\":40472},{\"end\":40487,\"start\":40486},{\"end\":40495,\"start\":40494},{\"end\":40497,\"start\":40496},{\"end\":40751,\"start\":40750},{\"end\":40761,\"start\":40760},{\"end\":41052,\"start\":41051},{\"end\":41054,\"start\":41053},{\"end\":41339,\"start\":41338},{\"end\":41354,\"start\":41353},{\"end\":41362,\"start\":41361},{\"end\":41621,\"start\":41620},{\"end\":41636,\"start\":41635},{\"end\":41851,\"start\":41850},{\"end\":42054,\"start\":42053},{\"end\":42066,\"start\":42065},{\"end\":42229,\"start\":42228},{\"end\":42233,\"start\":42230},{\"end\":42420,\"start\":42419},{\"end\":42433,\"start\":42432},{\"end\":42447,\"start\":42446},{\"end\":42666,\"start\":42665},{\"end\":42902,\"start\":42901},{\"end\":42904,\"start\":42903},{\"end\":42915,\"start\":42914},{\"end\":42917,\"start\":42916},{\"end\":43140,\"start\":43139},{\"end\":43142,\"start\":43141},{\"end\":43152,\"start\":43151},{\"end\":43345,\"start\":43344},{\"end\":43359,\"start\":43358},{\"end\":43361,\"start\":43360},{\"end\":43372,\"start\":43368},{\"end\":43637,\"start\":43636},{\"end\":43645,\"start\":43644}]", "bib_author_last_name": "[{\"end\":34556,\"start\":34548},{\"end\":34565,\"start\":34560},{\"end\":34741,\"start\":34732},{\"end\":34754,\"start\":34747},{\"end\":35052,\"start\":35048},{\"end\":35062,\"start\":35058},{\"end\":35071,\"start\":35066},{\"end\":35294,\"start\":35289},{\"end\":35307,\"start\":35298},{\"end\":35526,\"start\":35519},{\"end\":35539,\"start\":35530},{\"end\":35682,\"start\":35675},{\"end\":35695,\"start\":35686},{\"end\":35707,\"start\":35699},{\"end\":35822,\"start\":35815},{\"end\":35835,\"start\":35828},{\"end\":35844,\"start\":35839},{\"end\":35852,\"start\":35850},{\"end\":35863,\"start\":35858},{\"end\":36105,\"start\":36098},{\"end\":36115,\"start\":36109},{\"end\":36321,\"start\":36314},{\"end\":36331,\"start\":36325},{\"end\":36544,\"start\":36541},{\"end\":36551,\"start\":36548},{\"end\":36560,\"start\":36557},{\"end\":36721,\"start\":36716},{\"end\":36731,\"start\":36725},{\"end\":36742,\"start\":36735},{\"end\":36751,\"start\":36746},{\"end\":36927,\"start\":36923},{\"end\":36941,\"start\":36931},{\"end\":36948,\"start\":36945},{\"end\":37099,\"start\":37091},{\"end\":37107,\"start\":37103},{\"end\":37119,\"start\":37114},{\"end\":37128,\"start\":37123},{\"end\":37408,\"start\":37400},{\"end\":37418,\"start\":37412},{\"end\":37427,\"start\":37422},{\"end\":37596,\"start\":37586},{\"end\":37606,\"start\":37602},{\"end\":37622,\"start\":37614},{\"end\":37630,\"start\":37626},{\"end\":37643,\"start\":37634},{\"end\":37908,\"start\":37903},{\"end\":37917,\"start\":37912},{\"end\":38170,\"start\":38161},{\"end\":38445,\"start\":38440},{\"end\":38458,\"start\":38451},{\"end\":38696,\"start\":38692},{\"end\":38703,\"start\":38700},{\"end\":38711,\"start\":38707},{\"end\":38728,\"start\":38715},{\"end\":38951,\"start\":38947},{\"end\":38965,\"start\":38955},{\"end\":39234,\"start\":39230},{\"end\":39247,\"start\":39238},{\"end\":39258,\"start\":39253},{\"end\":39265,\"start\":39262},{\"end\":39463,\"start\":39458},{\"end\":39471,\"start\":39469},{\"end\":39483,\"start\":39477},{\"end\":39767,\"start\":39758},{\"end\":39777,\"start\":39771},{\"end\":39997,\"start\":39988},{\"end\":40007,\"start\":40001},{\"end\":40021,\"start\":40011},{\"end\":40220,\"start\":40211},{\"end\":40234,\"start\":40224},{\"end\":40244,\"start\":40238},{\"end\":40454,\"start\":40448},{\"end\":40468,\"start\":40460},{\"end\":40484,\"start\":40474},{\"end\":40492,\"start\":40488},{\"end\":40505,\"start\":40498},{\"end\":40758,\"start\":40752},{\"end\":40770,\"start\":40762},{\"end\":41057,\"start\":41055},{\"end\":41351,\"start\":41340},{\"end\":41359,\"start\":41355},{\"end\":41370,\"start\":41363},{\"end\":41633,\"start\":41622},{\"end\":41644,\"start\":41637},{\"end\":41860,\"start\":41852},{\"end\":42063,\"start\":42055},{\"end\":42075,\"start\":42067},{\"end\":42238,\"start\":42234},{\"end\":42430,\"start\":42421},{\"end\":42444,\"start\":42434},{\"end\":42454,\"start\":42448},{\"end\":42674,\"start\":42667},{\"end\":42912,\"start\":42905},{\"end\":42925,\"start\":42918},{\"end\":43149,\"start\":43143},{\"end\":43163,\"start\":43153},{\"end\":43356,\"start\":43346},{\"end\":43366,\"start\":43362},{\"end\":43377,\"start\":43373},{\"end\":43642,\"start\":43638},{\"end\":43653,\"start\":43646}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":34655,\"start\":34490},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":14593701},\"end\":34966,\"start\":34657},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":6055435},\"end\":35207,\"start\":34968},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":207057788},\"end\":35463,\"start\":35209},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":8618770},\"end\":35644,\"start\":35465},{\"attributes\":{\"id\":\"b5\"},\"end\":35784,\"start\":35646},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":9161996},\"end\":36063,\"start\":35786},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":17934471},\"end\":36282,\"start\":36065},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":17625257},\"end\":36493,\"start\":36284},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":15740351},\"end\":36657,\"start\":36495},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":10943487},\"end\":36894,\"start\":36659},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":1338214},\"end\":37031,\"start\":36896},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":8619652},\"end\":37345,\"start\":37033},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":13375183},\"end\":37538,\"start\":37347},{\"attributes\":{\"id\":\"b14\"},\"end\":37859,\"start\":37540},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":122654717},\"end\":38080,\"start\":37861},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":120169966},\"end\":38362,\"start\":38082},{\"attributes\":{\"id\":\"b17\"},\"end\":38596,\"start\":38364},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":14449726},\"end\":38890,\"start\":38598},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":10369341},\"end\":39153,\"start\":38892},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":6024658},\"end\":39408,\"start\":39155},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":5752470},\"end\":39677,\"start\":39410},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":13535815},\"end\":39906,\"start\":39679},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1220948},\"end\":40165,\"start\":39908},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":8193038},\"end\":40395,\"start\":40167},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":15157606},\"end\":40695,\"start\":40397},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":13321667},\"end\":40956,\"start\":40697},{\"attributes\":{\"id\":\"b27\"},\"end\":41231,\"start\":40958},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":7258357},\"end\":41558,\"start\":41233},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":14743997},\"end\":41765,\"start\":41560},{\"attributes\":{\"id\":\"b30\"},\"end\":42012,\"start\":41767},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":16234776},\"end\":42165,\"start\":42014},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":18233279},\"end\":42342,\"start\":42167},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":2545075},\"end\":42595,\"start\":42344},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":17437456},\"end\":42860,\"start\":42597},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":1601591},\"end\":43107,\"start\":42862},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":1668136},\"end\":43283,\"start\":43109},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":2747544},\"end\":43589,\"start\":43285},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":12433094},\"end\":43744,\"start\":43591}]", "bib_title": "[{\"end\":34726,\"start\":34657},{\"end\":35042,\"start\":34968},{\"end\":35283,\"start\":35209},{\"end\":35515,\"start\":35465},{\"end\":35809,\"start\":35786},{\"end\":36094,\"start\":36065},{\"end\":36310,\"start\":36284},{\"end\":36537,\"start\":36495},{\"end\":36712,\"start\":36659},{\"end\":36919,\"start\":36896},{\"end\":37087,\"start\":37033},{\"end\":37396,\"start\":37347},{\"end\":37899,\"start\":37861},{\"end\":38157,\"start\":38082},{\"end\":38688,\"start\":38598},{\"end\":38943,\"start\":38892},{\"end\":39226,\"start\":39155},{\"end\":39454,\"start\":39410},{\"end\":39754,\"start\":39679},{\"end\":39984,\"start\":39908},{\"end\":40207,\"start\":40167},{\"end\":40442,\"start\":40397},{\"end\":40748,\"start\":40697},{\"end\":41336,\"start\":41233},{\"end\":41618,\"start\":41560},{\"end\":42051,\"start\":42014},{\"end\":42226,\"start\":42167},{\"end\":42417,\"start\":42344},{\"end\":42663,\"start\":42597},{\"end\":42899,\"start\":42862},{\"end\":43137,\"start\":43109},{\"end\":43342,\"start\":43285},{\"end\":43634,\"start\":43591}]", "bib_author": "[{\"end\":34558,\"start\":34544},{\"end\":34567,\"start\":34558},{\"end\":34743,\"start\":34728},{\"end\":34756,\"start\":34743},{\"end\":35054,\"start\":35044},{\"end\":35064,\"start\":35054},{\"end\":35073,\"start\":35064},{\"end\":35296,\"start\":35285},{\"end\":35309,\"start\":35296},{\"end\":35528,\"start\":35517},{\"end\":35541,\"start\":35528},{\"end\":35684,\"start\":35673},{\"end\":35697,\"start\":35684},{\"end\":35709,\"start\":35697},{\"end\":35824,\"start\":35811},{\"end\":35837,\"start\":35824},{\"end\":35846,\"start\":35837},{\"end\":35854,\"start\":35846},{\"end\":35865,\"start\":35854},{\"end\":36107,\"start\":36096},{\"end\":36117,\"start\":36107},{\"end\":36323,\"start\":36312},{\"end\":36333,\"start\":36323},{\"end\":36546,\"start\":36539},{\"end\":36553,\"start\":36546},{\"end\":36562,\"start\":36553},{\"end\":36723,\"start\":36714},{\"end\":36733,\"start\":36723},{\"end\":36744,\"start\":36733},{\"end\":36753,\"start\":36744},{\"end\":36929,\"start\":36921},{\"end\":36943,\"start\":36929},{\"end\":36950,\"start\":36943},{\"end\":37101,\"start\":37089},{\"end\":37109,\"start\":37101},{\"end\":37121,\"start\":37109},{\"end\":37130,\"start\":37121},{\"end\":37410,\"start\":37398},{\"end\":37420,\"start\":37410},{\"end\":37429,\"start\":37420},{\"end\":37598,\"start\":37584},{\"end\":37608,\"start\":37598},{\"end\":37624,\"start\":37608},{\"end\":37632,\"start\":37624},{\"end\":37645,\"start\":37632},{\"end\":37910,\"start\":37901},{\"end\":37919,\"start\":37910},{\"end\":38172,\"start\":38159},{\"end\":38447,\"start\":38436},{\"end\":38460,\"start\":38447},{\"end\":38698,\"start\":38690},{\"end\":38705,\"start\":38698},{\"end\":38713,\"start\":38705},{\"end\":38730,\"start\":38713},{\"end\":38953,\"start\":38945},{\"end\":38967,\"start\":38953},{\"end\":39236,\"start\":39228},{\"end\":39249,\"start\":39236},{\"end\":39260,\"start\":39249},{\"end\":39267,\"start\":39260},{\"end\":39465,\"start\":39456},{\"end\":39473,\"start\":39465},{\"end\":39485,\"start\":39473},{\"end\":39769,\"start\":39756},{\"end\":39779,\"start\":39769},{\"end\":39999,\"start\":39986},{\"end\":40009,\"start\":39999},{\"end\":40023,\"start\":40009},{\"end\":40222,\"start\":40209},{\"end\":40236,\"start\":40222},{\"end\":40246,\"start\":40236},{\"end\":40456,\"start\":40444},{\"end\":40470,\"start\":40456},{\"end\":40486,\"start\":40470},{\"end\":40494,\"start\":40486},{\"end\":40507,\"start\":40494},{\"end\":40760,\"start\":40750},{\"end\":40772,\"start\":40760},{\"end\":41059,\"start\":41051},{\"end\":41353,\"start\":41338},{\"end\":41361,\"start\":41353},{\"end\":41372,\"start\":41361},{\"end\":41635,\"start\":41620},{\"end\":41646,\"start\":41635},{\"end\":41862,\"start\":41850},{\"end\":42065,\"start\":42053},{\"end\":42077,\"start\":42065},{\"end\":42240,\"start\":42228},{\"end\":42432,\"start\":42419},{\"end\":42446,\"start\":42432},{\"end\":42456,\"start\":42446},{\"end\":42676,\"start\":42665},{\"end\":42914,\"start\":42901},{\"end\":42927,\"start\":42914},{\"end\":43151,\"start\":43139},{\"end\":43165,\"start\":43151},{\"end\":43358,\"start\":43344},{\"end\":43368,\"start\":43358},{\"end\":43379,\"start\":43368},{\"end\":43644,\"start\":43636},{\"end\":43655,\"start\":43644}]", "bib_venue": "[{\"end\":34542,\"start\":34490},{\"end\":34794,\"start\":34756},{\"end\":35077,\"start\":35073},{\"end\":35322,\"start\":35309},{\"end\":35545,\"start\":35541},{\"end\":35671,\"start\":35646},{\"end\":35903,\"start\":35865},{\"end\":36155,\"start\":36117},{\"end\":36371,\"start\":36333},{\"end\":36566,\"start\":36562},{\"end\":36759,\"start\":36753},{\"end\":36954,\"start\":36950},{\"end\":37168,\"start\":37130},{\"end\":37433,\"start\":37429},{\"end\":37582,\"start\":37540},{\"end\":37953,\"start\":37919},{\"end\":38207,\"start\":38172},{\"end\":38434,\"start\":38364},{\"end\":38734,\"start\":38730},{\"end\":39005,\"start\":38967},{\"end\":39271,\"start\":39267},{\"end\":39523,\"start\":39485},{\"end\":39783,\"start\":39779},{\"end\":40027,\"start\":40023},{\"end\":40265,\"start\":40246},{\"end\":40524,\"start\":40507},{\"end\":40810,\"start\":40772},{\"end\":41049,\"start\":40958},{\"end\":41386,\"start\":41372},{\"end\":41653,\"start\":41646},{\"end\":41848,\"start\":41767},{\"end\":42081,\"start\":42077},{\"end\":42247,\"start\":42240},{\"end\":42460,\"start\":42456},{\"end\":42714,\"start\":42676},{\"end\":42965,\"start\":42927},{\"end\":43178,\"start\":43165},{\"end\":43417,\"start\":43379},{\"end\":43659,\"start\":43655}]"}}}, "year": 2023, "month": 12, "day": 17}