{"id": 247958062, "updated": "2023-10-05 15:36:09.118", "metadata": {"title": "Towards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation&Verification at Runtime", "authors": "[{\"first\":\"Jurgen\",\"last\":\"Dobaj\",\"middle\":[]},{\"first\":\"Andreas\",\"last\":\"Riel\",\"middle\":[]},{\"first\":\"Thomas\",\"last\":\"Krug\",\"middle\":[]},{\"first\":\"Matthias\",\"last\":\"Seidl\",\"middle\":[]},{\"first\":\"Georg\",\"last\":\"Macher\",\"middle\":[]},{\"first\":\"Markus\",\"last\":\"Egretzberger\",\"middle\":[]}]", "venue": "ArXiv", "journal": null, "publication_date": {"year": 2022, "month": null, "day": null}, "abstract": "Industrial Product-Service Systems (IPSS) denote a service-oriented (SO) way of providing access to CPS capabilities. The design of such systems bears high risk due to uncertainty in requirements related to service function and behavior, operation environments, and evolving customer needs. Such risks and uncertainties are well known in the IT sector, where DevOps principles ensure continuous system improvement through reliable and frequent delivery processes. A modular and SO system architecture complements these processes to facilitate IT system adaptation and evolution. This work proposes a method to use and extend the Digital Twins (DTs) of IPSS assets for enabling the continuous optimization of CPS service delivery and the latter's adaptation to changing needs and environments. This reduces uncertainty during design and operations by assuring IPSS integrity and availability, especially for design and service adaptations at CPS runtime. The method builds on transferring IT DevOps principles to DT-enabled CPS IPSS. The chosen design approach integrates, reuses, and aligns the DT processing and communication resources with DevOps requirements derived from literature. We use these requirements to propose a DT-enabled self-adaptive CPS model, which guides the realization of DT-enabled DevOps in CPS IPSS. We further propose detailed design models for operation-critical DTs that integrate CPS closed-loop control and architecture-based CPS adaptation. This integrated approach enables the implementation of A/B testing as a use case and central concept to enable CPS IPSS service adaptation and reconfiguration. The self-adaptive CPS model and DT design concept have been validated in an evaluation environment for operation-critical CPS IPSS. The demonstrator achieved sub-millisecond cycle times during service A/B testing at runtime without causing CPS operation interferences and downtime.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2204.02022", "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/seams/DobajRKSME22", "doi": "10.1145/3524844.3528057"}}, "content": {"source": {"pdf_hash": "575434cce4ac068c3c763f4c26a4b21e7ee4eede", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2204.02022v3.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "32b953cc038715b8bd3e5052fc1213f61757cff2", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/575434cce4ac068c3c763f4c26a4b21e7ee4eede.txt", "contents": "\nTowards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation & Verification at Runtime\n2022. May 18-23\n\nJ\u00fcrgen Dobaj juergen.dobaj@tugraz.at \nAndreas Riel andreas.riel@grenoble-inp.fr \nThomas Krug t.krug@tugraz.at \nMatthias Seidl matthias.seidl@tugraz.at \nGeorg Macher georg.macher@tugraz.at \nMarkus Egretzberger markus.egretzberger@andritz.co \nJ\u00fcrgen Dobaj \nAndreas Riel \nThomas Krug \nMatthias Seidl \nGeorg Macher \nMarkus Egretzberger \n\nInstitute of Technical Informatics\nInstitute of Technical Informatics\nCNRS, G-SCOP Laboratory Grenoble Alps University Grenoble\nGraz University of Technology Graz\nAustria, France\n\n\nInstitute of Technical Informatics\nGraz University of Technology Graz\nAustria\n\n\nInstitute of Technical Informatics\nGraz University of Technology Graz\nAustria\n\n\nR&D Automation Andritz Hydro GmbH Vienna\nGraz University of Technology Graz\nAustria, Austria\n\n\nACM Reference format\n\n\nTowards Digital Twin-enabled DevOps for CPS providing Architecture-Based Service Adaptation & Verification at Runtime\n\n17th International Symposium on Software Engineering of Adaptive Self-Managing Systems (SEAMS'22)\nPITTSBURGH, PA, USA, ACM, New York, NY, USA122022. May 18-2310.1145/3524844.3528057-Preprint -Accepted for Publication at SEAMS 2022 Final published version available at: https://DevOpsDigital TwinSelf-AdaptationCPSDeploymentIPSS\nBackground: Industrial Product-Service Systems (IPSS) denote a service-oriented way of providing access to cyber-physical systems' (CPS) capabilities. The design of such systems bears high risk due to uncertainty in requirements related to service function and behavior, operation environments, and evolving customer needs. Such risks and uncertainties are well known in the IT sector, where DevOps principles ensure continuous system improvement through reliable and frequent delivery processes. A modular and service-oriented system architecture complements these processes to facilitate IT system adaptation and evolution.Objective: This work proposes a method to use and extend the Digital Twins (DTs) of IPSS assets for enabling the continuous optimization of CPS service delivery and the latter's adaptation to changing needs and environments. This reduces uncertainty during design and operations by assuring IPSS integrity and availability, especially for design and service adaptations at CPS runtime.Methodology: The method builds on transferring IT DevOps principles to DT-enabled CPS IPSS. The chosen design approach integrates, reuses, and aligns the DT processing and communication resources with DevOps requirements derived from literature.Results: We use these requirements to propose a DT-enabled selfadaptive CPS model, which guides the realization of DT-enabled DevOps in CPS IPSS. We further propose detailed design models for operation-critical DTs that integrate CPS closed-loop control and architecture-based CPS adaptation. This integrated approach enables the implementation of A/B testing as a use case and central concept to enable CPS IPSS service adaptation and reconfiguration.Conclusion: The self-adaptive CPS model and DT design concept have been validated in an evaluation environment for operationcritical CPS IPSS. The demonstrator achieved sub-millisecond cycle times during service A/B testing at runtime without causing CPS operation interferences and downtime.CCS CONCEPTS\u2022 Computer systems organization~Embedded and cyber-physical systems \u2022 Computer systems organization~Architectures\n\nIntroduction\n\nFor several decades various industries have been dealing with the dynamic interplay of products and services known as Product-Service Systems (PSS) [1]. Market competition, higher profitability of services, and the need for more sustainable customer relations through increased and extended product lifecycle control are among today's top PSS drivers. These benefits led to PSS adoption between business partners, known as Industrial Product-Service Systems (IPSS) [2].\n\nIPSS denote a service-oriented way of providing access to cyber-physical systems (CPS) capabilities. According to a very recent analysis by Brissaud et al. [3], remote asset maintenance and monitoring and remote asset reconfiguration are considered the most relevant CPS service capabilities at present and in the near future. Digital Twins (DTs) as virtual counterparts to these assets are accepted as an enabler for IPSS and the above use cases in particular.\n\nDue to their vast business and sustainability potentials, IPSS have been expected to be widely adopted in multiple sectors. However, Brissaud et al. [3] found that IPSS are not as widespread as suggested in a former study [1]. In their analysis, the high risks imposed on IPSS service providers is among the main adoption challenges. These risks arise from planning and design uncertainties [4] related to unclear requirements of service behavior, operation environments, and evolving customer needs. This finding is supported by industry studies [3,5], concluding that the risk imposed by technical, user behavioral, and service provisioning uncertainties is evident and must be properly managed for CPS IPSS adoption.\n\nAs for the former challenge, we propose reducing provider risks and design uncertainties by adopting the DevOps lifecycle for CPS by enabling the continuous delivery, adaptation, and improvement of CPS (IPSS) services. To that end, we propose a self-adaptive CPS design model that maps the Information Technology (IT) concept of frequent design-build-deployment cycles to the Operation Technology (OT) domain of CPS IPSS. These design models are developed based on the systematic transfer of DevOps principles to the CPS OT domain, thereby integrating the DT as a shared knowledgebase to enable context-aware self-adaptive CPS characteristics. These characteristics ensure CPS IPSS service sustainability through design, technology, and function evolution. As the main contribution of this work, we propose a novel software service deployment strategy that enables the autonomous deployment and verification of service changes in the CPS OT domain at runtime.\n\nThe remainder of this work is organized as follows. Section 2 describes the background, discusses related work, and states the research questions and methodology. Section 3 derives design requirements for CPS DevOps. Section 4 explains the proposed design models. Section 5 evaluates and discusses the results. Finally, Section 6 concludes the presented work.\n\n\nBackground and Related Work\n\nThis section introduces DevOps and discusses the gaps in DevOps for CPS. DevOps is a collection of principles from computer science that signify the integration and collaboration of IT development with IT operations activities [6][7][8]. Such integration of software service development (Dev) and operations (Ops) enables the continuous building, testing, and deployment of software services upon each software design modification. Consequently, provided services continuously improve, evolve, and can be validated in \"real\" operation. While such a scenario is pertinent for IT environments, we must note that we are far from achieving the same for OT environments.\n\n\nValue Creation through DevOps\n\nWe start our discussion on DevOps for CPS from a valueoriented perspective. To that end, we roughly divide the DevOps lifecycle into four value streams, as shown in Figure 1. The closed-loop implementation of these four value streams in CPS OT environments can only be achieved if the required CPS and OT capabilities (i.e., requirements) are well integrated across multiple DevOps lifecycle phases. In order to achieve an appropriate level of integration, we postulate that these capabilities must be taken into account during CPS design.\n\nFor example, particular key strengths of DevOps are the short (upstream and downstream) feedback cycles between Dev and Ops [8], which are enabled through rigorous operations monitoring and the frequent and reliable delivery and deployment of software services changes.\n\nUpstream Feedback. To implement upstream feedback, the service monitoring capabilities need to be integrated into the service operation and monitoring phases. Second, response capabilities must be provided to ensure data and information transfer from Ops to Dev. Third, the received data needs to be integrated and managed for subsequent analysis and planning.\n\nDownstream Feedback. To implement downstream delivery of releasable services, the service deployment capabilities need to be integrated into service operation to ensure CPS availability, integrity, and safety at all times. Therefore, downstream deployment needs to integrate autonomous monitoring and failure response capabilities into the CPS O&M space.\n\n\nDevOps in the Light of DTs and CPS IPSS\n\nNext, we want to take a brief look at the achievements of industry and research in CPS design, development, and operation, focusing on aspects that support the realization of DevOps value streams and feedback cycles.  A DT consists of a physical entity, its virtual counterpart, and the data connection in between. Today, DTs are used to optimize physical entities in virtual space by experimenting with its virtual counterpart. The obtained results are then reflected back into physical space. Such a procedure is called twinning. The twinning fidelity describes the twinning accuracy determined by the twinned parameters and the twinning rate of these parameters [9].\n\nDesign & Dev Space. Traditionally, CPS were designed as special-purpose static silo applications, built and configured once for decades of operation with fixed pre-scheduled and manually executed maintenance intervals [10,11]. With the ever-increasing CPS complexity, due to the advancing digitalization and interconnection, and the need for value cocreation across industries [12], also CPS design has had to evolve. Self-adaptive systems engineering supports the management of this constant evolution by reducing the complexity and the uncertainty associated with change [13,14].\n\nVerification and Validation. Today, DTs are used for shifting essential parts of the effort for predicting, evaluating, and preparing asset and CPS configurations virtually during design time rather than during expensive and availabilitycritical operation time [15]. For that purpose, model-based and data-driven simulation approaches are used [16][17][18][19]. When integrated into a framework, these approaches also enable virtual CPS engineering and commissioning [20] to reduce time, effort, and faults during physical commissioning.\n\nConnecting CPS Dev & Ops. Despite great advances in (DTbased) simulation, a residual risk remains when deploying virtually validated services and functions to the real world. To further reduce CPS operation risks due to model and simulation uncertainty [20], verification approaches ensure that the virtual design space reflects physical reality accurately enough. Such verifications can be achieved by, e.g., linking the Ops DT (i.e., real world data) and the Dev DT (i.e., the virtual simulation space) to compare virtual with physical CPS behavior. To ensure interoperability and compatibility in case of evolving and diverging DTs, adaptive frameworks for DT data abstraction are proposed [21,22] to facilitate long-term upstream and downstream DT data exchange and data reuse.\n\nO&M Space. In the operation space, DTs are used for remote operation and optimization of CPS assets and processes and predictive maintenance [23,24]. These DTs, e.g., minimize energy consumption and maximize asset lifetime and yield. Frequently such DTs rely on Model Predictive Control (MPC) facilitated through data-intensive machine-learning algorithms like Deep Neural Networks (DNN) [25]. Self-adaptive systems support CPS operations in, e.g., assuring dependability and resilience [26][27][28][29], and in adapting to changing environments and mission goals using, e.g., runtime models, goal-driven optimization techniques, and control theory [30][31][32][33][34][35], as well as to evolving software system needs by, e.g., relying on a modular design, architecture-based adaptation, and reuse [36][37][38][39][40][41].\n\nDevOps in the CPS Software Engineering Lifecycle. Agile software practices, including DevOps, are increasingly adopted by regulated industries, where safety and standard compliance are cornerstones in software development for operation-and mission-critical CPS (used interchangeably in the following). These industries rely on rigorous engineering processes to deliver certifiable or certification-ready software. As concluded in [42], agile practices and CI/CD pipelines produce highquality and certifiable software ready to be delivered more frequently to the end-user. However, such IT DevOps practices cannot be directly adopted due to stricter safety, compliance, and CPS architecture requirements. Leite et al. [8] made a similar observation when analyzing the DevOps concept and challenges in the IT sector. They note that adopting DevOps practices imposes significant challenges on system architecture, embedded systems, and IoT, including their design, management, and operation.\n\nThe Vision of DevOps for CPS. The increasing interest of regulated industry in DevOps practices resulted in proposals of concepts and roadmaps [43][44][45][46][47][48][49] pursuing the introduction of DevOps for CPS design and operations. Most of these works put the DT at the center of DevOps to serve as knowledgebase for organizing and automating DevOps processes in CPS. While all these and similar works we have found postulate that the DT can facilitate DevOps principles for CPS, we could not find any work that addresses CPS and DT service design for DevOps.\n\nSumming up, significant progress has been made in all four value streams individually. In these value streams, the DT and self-adaptive systems engineering are becoming increasingly important to reduce uncertainty in the emergent and highly complex CPS landscape [50]. Particular strengths of today's DTbased CPS IPSS are their data-driven prediction capabilities and the DT's ability to manage and exchange data across lifecycle phases. However, these data exchange capabilities, especially today's downstream and O&M capabilities, do not support frequent and reliable software service deployment, a key aspect of DevOps in IT environment [8]. To the best of the authors' knowledge, no work has addressed the research questions of adopting modern (IT-like) DevOps deployment strategies (DS) for critical CPS OT environments.\n\n\nDeployment Strategies and Architectures\n\nIn this section, we discuss the challenges of adopting IT DSs for the CPS OT environment. To that end, we describe state-of-theart (SotA) IT DSs, whose characteristics are summarized in Table 1. We adapted this table from a presentation by the Cloud Native Foundation [51] and added the characteristics of SotA OT DSs. Figure 2 shows two conceptual architecture models to discuss the differences between IT and OT software service deployment and the IT and OT DevOps lifecycle processes.\n\nArchitectural Aspects. The most significant difference, when comparing the architectures in Figure 2, is that two networking technologies are used in the CPS architecture: (a) an IT network (NW) to support business and development an OT NW to support operations processes and to handle and respond to user requests (subsequently also denoted as user traffic (UT) and operations dataflow (ODF)). The air gap in Figure 2 indicates that these NWs are strictly separated, similar to the support processes implemented in these NWs. The traffic generated by these support processes (e.g., business, dev, and ops processes) is denoted as management traffic (MT) and management dataflow (MDF). The separation into traffic types is used throughout this work as an essential characteristic to describe DSs and the relations between users, supporting processes, service instances, and the information processing and communication (IPC) resources executing these services. While there are many similarities between IT and OT NW technologies, there are also significant differences. Both NWs are designed for availability and high throughput rates. Since OT NWs are used to interact with the physical environment for critical application control, OT NW safety and integrity are essential for CPS operation. Further, the OT IPC resources and services must support real-time IPC in the sub-millisecond range to properly control \"fast\" physical processes. To meet these requirements, the OT IPC resources are organized in a strictly hierarchical manner (as indicated in Figure 2 by the IPC resource cluster). Resource-constrained embedded devices, for example, are located near IPC resource \"users\" to provide realtime control of physical assets and processes. Special purpose OT protocols and NWing technologies ensure safe and timely data transfer within and across OT NW hierarchy levels, called Automation Pyramid (AP) levels [52]. A detailed discussion of the AP and their impact on DevOps, DT, and CPS service design follows in Section 3. Next, we discuss different DSs.\n\nIT Deployment Strategies. We start with the service DSs used in modern Cloud and IT IPC environments listed in Table  1. The simplest DSs is to recreate all service instances. In this case (a) the services running in the \"current release\" IPC cluster are stopped, and subsequently, (b) the new services are started in the same cluster. During this procedure, the system is not available to users. The deployment, usually fully automated, is managed by the individual DevOps team(s) responsible for the specific service. In an IT IPC environment, the MT and UT can be routed through a load balancer (LB) that inspects, filters, and forwards the different traffic types to their destinations.\n\nThe LB's services are typically decoupled from the system service instances and operated in their individual IPC cluster.\n\nThe LB provides a standard interface to individual services, which enables the implementation of sophisticated DSs that, e.g., (a) ensure service availability during deployment (i.e., zero downtime), (b) enable testing of services and their comparison to current services in the real operation environments (i.e., real traffic testing), and (c) to perform the real traffic testing on specific users or user groups (i.e., targeted users). For example, shadow deployment allocates all the IPC resources to deploy all new service instances alongside the current release. 100% of incoming UT is routed to the current and new service releases, while only the responses of the current release are forwarded to the users. Hence, the shadow DS allows to compare releases causing zero downtime. The A/B testing DS, for example, allocates only IPC resources required for 30% of the overall user traffic. In this case, user requests are split and processed by the current (i.e., A) and new (i.e., B) service releases, as shown in Figure 2. The LB routes the responses from A and B to their respective users. Such a DS allows comparing userreactions based on different service behavior. The LB's purpose is to manage and hide the complexity of these DSs.\n\nOT Deployment Strategies. Implementing the above IT DSs and features in an OT environment is accompanied by several challenges. First, the strict real-time constraints and the interaction with distributed physical assets (represented by the users in Figure 2) prevent from using a \"central\" LB in OT environments. Instead, these constraints enforce a hierarchical structure that historically evolved to a NW of heterogeneous devices, protocols, and technologies. This structure and interaction with physical assets make IPC resources' dynamic allocation and management challenging [53]. As of Figure 2, it is feasible to realize only one dedicated IPC resource cluster to implement CPS functionality. Consequently, OT IPC resources are shared between (a) the Dev teams and processes, (b) the Ops teams and processes, and (c) the real-time and missioncritical CPS processes (i.e., the actual users). Balancing all these \"stakeholders\" requirements and constraints makes designing and adopting DevOps and IT-like DSs for CPS challenging. Based on our experience in the field, we can say that most software updates are executed manually by dedicated and specially trained Ops teams (i.e., operation and commissioning engineers) that have local or remote access to the OT IPC cluster. This manual updating allows to easily apply changes to subsystems, i.e., targeted users as shown in Table 1. However, changes can typically only be applied if these subsystem or the entire CPS is taken offline (which results in heavy costs and high risks). Very recently, automated remote updates are becoming popular. Most notably, future vehicles are enforced by law to support software updates for security patching. The automotive industry addresses this via automated over-the-air (OTA) updates [54], the first step towards IT-like deployment.\n\nSumming up, CPS are designed and developed as relatively static systems for a specific behavior and environment. Their maintenance is scheduled for fixed intervals, and significant ITlike hardware and software changes are usually not planned or supported only to a limited extent. Some sectors make their first steps towards more frequent software service updates. However, to the best of the author's knowledge, no OT DS exists that supports modern deployment features such as real-traffic testing on targeted users at zero downtime.\n\n\nResearch Questions and Methodology\n\nThe research objectives of this work are (a) to propose a selfadaptive service-oriented CPS model that uses the DT as a common knowledgebase throughout the DevOps lifecycle phases. Based on this model, we aim (b) to propose and evaluate the design of a novel A/B testing DS designed explicitly for OT environments to facilitate CPS DevOps by the features summarized in Table 1. From these objectives, we derive the following research questions (RQs), which contribute to the question of \"how CPS and its DTs shall be designed to realize DevOps for CPS OT environments\":\n\n\nRQ1 What are the design requirements of self-adaptive CPS IPC services and their DT(s) to enable IT-like service deployment?\n\nRQ2 How shall DTs be structured to create a high-fidelity context for autonomous CPS adaption?\n\nRQ3 What does a DT-enabled self-adaptive CPS's conceptual model (aligned to [55] Fig. 1) look like? RQ4 Can the model covering RQ3 be instantiated to implement the proposed A/B testing for CPS?\n\nIn the article presented here, we address RQ1, RQ2, and RQ3 through the following methodology: We derive and analyze the design requirements and models covering system and device scale based on (a) previous work [53,56], (b) the integration of design patterns for self-adaptive systems and CPS engineering [57][58][59][60], and (c) the analysis and integration of concepts from several industrial reference architectures and frameworks [61][62][63][64][65][66][67]. We align the resulting requirements and models to the AP [52] underlying industrial CPS (see Figures 3 and 4). Subsequently, we address RQ4 by proposing design models that facilitate the implementation of A/B testing for CPS. For validation, we implement and validate the A/B testing DS on an evaluation platform for distributed mission-critical CPS IPSS.\n\n\nCPS and DT Design\n\nIn this section, we address the first three (design-related) RQs. To that end, we have compiled Figure 3, which shows multiple conceptual viewpoints on CPS aspects with a strong focus on the inherent hierarchical structure and organization of CPS.\n\n\nStructure and Organization\n\nCPS IPSS Structure. All views (a-f) that are shown in Figure 3 are vertically aligned to the AP levels. This alignment shall reflect that all views are strictly related to each other and that individual design aspects within a single view may impact the CPS Functionality and Services. The IPC and CPS functions are actually implemented by the distributed service instances shown in Figure 3(e), which are executed on the IPC resources (a) to coordinate and control the physical assets and processes (i.e., the \"physical users\" of the cluster), (b) to coordinate and implement the support processes, and (c) to manage IPC cluster resources and their usage. The composition and cooperation of these IPC service instances within and across AP levels are essential for implementing the CPS functionality.\n\nThe DT as Enabler Technology. As of Section 2, the DT serves as common knowledgebase in the Dev and Ops space. We propose this DT knowledgebase as enabler technology to ensure proper composition, cooperation, and management of the service instances and their deployment across AP levels. To that end, the envisioned DT must provide a context that reflects the physical assets, the physical processes, and the IPC resources to be monitored, maintained, (re)configured, and updated throughout the DevOps lifecycle. That DT context must be accurate enough at all times for (a) decision-makers to make the right decisions remotely, (b) for developers to deploy and validate those decisions in virtual (design) space (c) for developers and operators to deploy and validate the releasable design in the physical (operation) space (i.e., real traffic testing), and (d) to then close the loop by operationalizing the virtually and physically validated design in the physical space.\n\nThe Dev DT and Ops DT layouts (shown in Figure 3(f) and explained above) provide such an accurate DT-enabled context by facilitating individual twinning fidelities within and across AP levels. For example, the control DT instance is a high-fidelity real-time representation of physical asset and process states to implement proper closed-loop control. On the higher AP levels, the twinning fidelity of the same states can be reduced to, e.g., KPIs on level 5 describing the number of produced goods. This fidelity adaptation is achieved by data preprocessing and filtering between the AP levels, which is necessary to meet the different IPC requirements that change between AP levels. The adaptive twinning fidelity between AP levels also allows addressing different computational needs of twinning, (modelbased) prediction, and simulation. Overall, the separation of the DT into a layered Dev DT and Ops DTs simplifies DT instance and communication design because only the requirements of specific AP levels have to be considered.\n\n\nDesign Requirements\n\nParadigm Change. Traditionally, users (learned to) adapt their behavior to the provided system functions. Nowadays, the system learns from the user and continuously adapts its service to user behavior, maximizing value for all stakeholders. This paradigm shift in system behavior is introduced with the IPSS concept in CPS, which must be accompanied by a paradigm shift in CPS design. Hence, modern CPS IPSS are no longer designed as static, siloed, special purpose systems. Instead, they need to become increasingly dynamic to adapt to changing needs, environments, and technologies. As of Sections 1 and 2, this requires CPS OT design to integrate agile processes and DSs.\n\nAbstraction & Interoperability. From a technology point of view, one of the big challenges in OT design is that mutually largely incompatible networking concepts control different levels in the AP. Even between the same technologies, there might exist vendor-specific incompatibilities. Hence, a lot of manual integration and configuration work is required for design changes. The standardization and introduction of new fieldbus technologies and industrial Ethernet shall address this issue by using the IP suite as an enabler for data exchange across AP levels, making the traditional AP structure flatter and easier to handle [52]. However, according to Wollschl\u00e4ger et al. [11] this will not decrease the prevalent heterogeneity of communication protocols and technologies. Instead, heterogeneity will rather be set to increase in the future. Therefore, the harmonization of the CPS IPSS services above the networking and communication layer is essential to ensure vertical and horizontal interoperability (requirement R1).\n\nAutonomy. The analysis presented in [56] states that the need for adaptation in CPS may arise due to technology advances, standardization, dynamic device integration unknown at the design time, and due to security flaws, which might result in changes of the communication infrastructure, protocols, or the software architecture itself. Hence, CPS must also be capable of adapting to future changes in its system requirements and its technology stack (R2). As described in Section 2, such CPS adaptations are commonly performed manually. However, these adaptations must be automated using CI/CD pipelines [8] to effectively achieve CPS DevOps. At the same time, the deployment to the operations space must be autonomous (i.e., no human-in-the-loop) to ensure CPS availability and integrity (R3).\n\n\nService-Orientation & Modularity.\n\nTo establish autonomous adaptation across AP levels, the strict separation of management (e.g., IPC service and network configuration, monitoring, and arbitration) and operation (e.g., asset control and CPS monitoring) concerns becomes essential (a) to provide freedom from interference, (b) to cope with design and adaptation complexity, and (c) to ensure system evolution through modularity. Such a separation addresses technological evolution and interoperability and enables the independent development and evolution of operations and management functions. Therefore, management and operation traffic (i.e., data flows) and management and operation services shall be strictly separated. Interactions between operation and management shall be minimal and implemented by wellcontrolled interfaces (R4) [53].\n\nContext. From an adaptation point of view, the hierarchical control pattern described in [57] is well suited to coordinate the above described decentralized, hierarchical, multi-step, and multi-technology CPS adaptations. DTs already available in CPS IPSS can be reused and extended to serve as knowledge repositories for contextual and coordinated adaptation. In particular, the Ops DT instances can provide the high-fidelity context-awareness to maintain CPS availability and integrity by: (a) ensuring that adaptations are only made in non-critical CPS states; and (b) canceling or delaying adaptations early if CPS performance is to be violated. So-called management DTs can run aside Ops DTs to maintain system integrity by creating self-awareness about IPC service, resource, and adaptation states required for coordinated adaptation across all AP levels.\n\n\nDT-enabled Self-Adaptive CPS Model\n\nThis section introduces the conceptual model of a DT-enabled self-adaptive CPS (see RQ3) to establish a common ground for the subsequent development of detailed CPS service design models and adaptation strategies. Figure 4 shows our proposed adaptation model that is aligned to the conceptual self-adaptive system model described in [55] Fig. 1.\n\nDT-enabled Self-Adaptation. The managing and managed subsystem boundaries in Figure 4 show the fundamental architecture of a self-adaptive system. The managed system (i.e., the entire CPS physical instance) is comprised of the SCADA and control services responsible for plant (fleet) control and physical system control. For that purpose, these services are executed on the OT IPC resource cluster on field, plant, and fleet levels. Sensors are used to replicate the physical system and process states into the (virtual) services for real-time closed-loop control. The actuators replicate the results back to the physical space, affecting physical system behavior.\n\nSimilar to the described closed-loop control mechanism, the managing system senses the current IPC resource and service states using probes and monitoring services. The DT services replicate these states into the virtual space. By this, also the physical system states can be replicated since they are already stored for processing within IPC resources. The so-created CPS virtual instances (i.e., the Dev DT and Ops DT) accurately reflect the entire CPS context (i.e., the CPS physical instance) to support CPS monitoring, control, maintenance, and adaptation. The software agents replicate virtually applied adaptations back into the physical space using effectors, thereby adjusting IPC and physical system states and behavior.\n\nDT-enabled Context. The described DT-enabled close-loop mechanism can establish the context-awareness required by the managing and managed systems for autonomous CPS adaptations. As already discussed, the accuracy of this context depends on the twinning fidelity, which depends on the twinned states/parameters and the individual twinning rates of these parameters. In the CPS context, the twinning fidelity also depends on the requirements and capabilities of the AP levels, which is not reflected in the conceptual model shown in Figure 4. The DT context here focuses on accurately covering highly dynamic physical and virtual (i.e., IPC resource and service) states to accurately reflect the CPSs' underlying embedded mechatronic control infrastructure.\n\nDT-enabled DevOps. The Dev and Ops support processes shown in Figure 4 interact with the Dev DT and the Ops DT to observe and adapt CPS behavior in virtual space. It, is the responsibility of the DT services to distribute and apply virtual changes to the physical CPS instance. \n\n\nTechnical Self-Adaptive CPS Design Models\n\nGeneric Device-Level Design Model. Based on our previous work [53,56] and the analysis of the above-identified design requirements R1-R4 against the AP, we conclude that the needed OT service and communication adaptations must be coordinated hierarchically across AP levels. However, the design requirements must be addressed on the device level to provide fine-granular CPS OT function and service adaptation. The implementation of these properties on the device level heavily depends on the used operating systems (OSs) and supported virtualization technologies such as hypervisors, containers, and virtual machines. Since selecting these technologies depends on individual use case needs and hardware capabilities, we describe a generic device-level design model that can be tailored for specific implementation needs. Figure 5 shows our proposed generic design model for OT devices. The model is structured into layers representing the OT stack. The top three layers implement the actual CPS functionality. The underlying layers provide the necessary IPC resources. OT and IT are strictly separated, represented by the usage of different OSs. A mediator controls and coordinates the interaction between OT and IT. The OT-side is responsible for CPS control and the twinning of operation parameters represented by the operations DT on the data layer. The IT-side is responsible for managing and configuring both IT and OT components. The management DT represents the current IT and OT IPC states to coordinate the adaptation on the device and between devices. Since this coordination is strictly separated from the time-and mission-critical OT functions, the use of IT tools and protocols is feasible. Management and operation only need to interact during system adaptation.\n\nFollowing the decentralized adaptation patterns as of [57], effectors (E) and probes (P) need to be implemented on all layers for each service and function to enable context-and selfaware adaptation at runtime. The implementation of effectors and probes depends on the individual technologies and functions to be adapted. Hence, service and function design shall follow the Microservice architecture pattern for the Industrial Internet-of-Things (IIoT) [56] to facilitate independent service, effector, and probe development, as well as DevOps principles [8]. Next, we discuss the design of the individual layers from bottom to top.\n\nLike the device design, the network (NW) layer is separated into two communication planes, i.e., the operation and management NWs. Gateways (GWs) are commonly used as mediators and protocol translators between two incompatible NWs. These GWs also require effectors and probes for management as of [53,58]. The interface layer connects the device with the NW layers. The OS layer provides device hardware (HW) abstraction and management functions, and standard services for software development. The communication (com.) layer consists of one or more network and protocol stacks (PSs) to provide compatibility with multiple (fieldbus) network technologies. The data layer aggregates data based on the DT concept. The service layer implements the actual functionality using features of all lower layers. The mediator may span multiple layers coordinating the data flow and service access between operation and management.\n\nSumming up the above design strategies, each device acts in principle like a software-controlled and software-defined data flow and service-provisioning gateway between the operation and management domain. Hence, design, management, and configuration strategies known from software-defined networking (SDN) [58,68] and the service mesh principle [53] are applicable. For example, the CoC pattern [58] is targeted toward the hierarchical management of heterogeneous networks, and the dependable mesh networking patterns [53] are targeted toward the integrated management of heterogeneous (Micro)services, networks, and devices. Both approaches propose using distributed controllers and hierarchical knowledge repositories for management.\n\nRuntime Adaptation & Verification Model. Next, we apply the above strategies and models to transfer the A/B testing DS from the IT domain to the OT domain. In particular, our DT-enabled DevOps for CPS (as of Table 1) shall support: (i) Shadow deployment of new services for (ii) real-traffic testing (iii) on targeted users (i.e., specific assets and (sub-)processes) in the \"real\" CPS OT operation environment with the ability to (iv) operationalize the newly deployed services (after virtual and physical validation), and thereby (v) causing zero CPS downtime during the entire deployment procedure.\n\nTo that end, we integrate the generic device-level model into the architecture adaptation model. Figure 6 shows the resulting A/B testing model of distributed OT control services. In particular, the proposed model enables the verification of a (redesigned) control algorithm (i.e., the B service) by deploying B to the operation environment. At the same time, B's behavior and performance shall be compared to the currently active control algorithm (i.e., the A service). To that end, the IPC resources required by B must be allocated and configured, and B's network and inter-service communication links must be established while A continues its normal operation. B shall start its shadow operation aside of A after configuring B's IPC CPS integrity shall be preserved by ensuring freedom of interference between A and B. Therefore, the signals from B to the actuators are blocked by software and not forwarded to the fieldbus network, ensuring that A is the only service controlling the physical system. Whereas, A and B receive the same sensor signals and can interact with and use all IPC resources above the fieldbus level. At these higher AP levels, freedom of interference is provided by separating not only the MDFs and ODFs but also the individual dedicated ODFs of A and B as shown in Figure 6 by using, e.g., priority-based flow control and time-triggered communication technologies [69].\n\nThe DT-based management services ensure integrity and availability by the autonomous coordination of the adaptation sequence. In addition, they continuously monitor the entire adaptation sequence and the A/B shadow operation (a) to abort eventually and roll back applied changes preserving CPS availability and integrity, and (2) to record and twin A, B, IPC, and CPS behavior and performance. Dev and Ops can use the twinned data for live and historical analysis in the design space.\n\nCPS services in the OT domain typically operate in a cycling and time-synchronous manner, which allows the implementation of relatively simple time-triggered softwareswitching mechanisms to activate B and deactivate A within the same processing cycle. Therefore, A and B must agree on a specific point in time (i.e., a specific processing cycle) where that switch is set for A and B simultaneously, which enables switching services A and B during operation. Since A can continue its operation beside B, a rollback can be performed using the same switch mechanism. Implementation Model. Next, we implement the above models on an OT control device. Therefore, we propose the pipeline-based IPC model shown in Figure 7. Figure 8 shows the corresponding task scheduling diagram for A/B testing.\n\nThe dataflow (DF) shown in Figure 7 is separated into a socalled management plane (MP) and operation plane (OP). Each plane is encompassed by the indicated twinning fidelity, i.e., the twinned parameters and the twinning rate. The tasks (i.e., circles representing threads, processes, and containers) on the OP within the blue box are operated in a cyclic timesynchronous mode, as shown in Figure 8. All other tasks outside that box operate in an asynchronous mode and can run whenever CPU resources are free. The protocol stacks, located on the subscriber and publisher sides, also represent tasks.\n\nThe input and output flow tasks are responsible for dataflow dispatching, monitoring, and priority-based flow control. The asynchronous management services (i.e., DT services as of Figure 5) can push adaptation and configuration requests to the operation plane's input flow control. These requests are forwarded to the cyclic input processing tasks. These tasks primarily receive data from the OP, besides the requests from the DT service from the MP.\n\nAs of Figure 8, the input processing tasks are the first tasks executed at each cycle start t0, indicating the current point in time. Other devices and tasks on the OP operate synchronously to cycle t0, which is achieved via hardware-supported distributed time-synchronization mechanisms. This synchronous operation is essential for accurate real-time closed-loop control and data exchange between OT services.\n\nIn principle, an execution cycle consists of four stages as of Figure 7: (1) (Pre-)processing and transfer of all input signals (i.e., subscriptions) to the data layer, where they are stored in the local high fidelity DTs. (2) Execution of the control algorithms that read the input signals and write the resulting control signals back to the DT in virtual space. (3) Forwarding of the closed-loop control signals to their specific destinations, such as actuators and other control devices. (4) Execution of asynchronous tasks like management, visualization, and logging tasks. These four principle steps bring us to the detailed discussion of our design and execution sequence. However, before going into the details, we make a short excurse to explain the underlying synchronization principle. As of Figure  5, the mediator is responsible for service and data layer synchronization. We decided to use the Disruptor pattern [67] as a basis for its implementation. The Disruptor is a bounded ring buffer data structure, as shown in the legend of Figure 7. It is designed to replace queues as synchronization mechanisms in multi-threaded producer-consumer applications that follow the event-based pipeline execution pattern. For such applications, the Disruptor enables high throughput ratios, low latency, and low jitter [70]. The Disruptor achieves this by using sequence counters as the only synchronization mechanism between threads, combined with a CPU-friendly memory layout and memory access pattern to exploit modern multi-core CPU hardware features. Further details on these mechanisms and analysis are given in [70] and [71].\n\nIn our above-described cyclic application, each cycle start denotes an event and multiple tasks are executed in sequence to operate on the same data entry (i.e., buffer entry), which perfectly matches the pipeline principle. However, the Disruptor structure needs to be adapted to meet our OT and adaptation requirements: (1) We must provide service and function adaptation at runtime, and (2) we must ensure that (producer) tasks on the OP, such as the input processor tasks, are not blocked if slower tasks (most likely on the MP) cannot take pace with the production and processing speed of the OP. Addressing point (1), we implemented the Disruptor as a shared-memory data structure, which enables adding and removing pipeline stages and tasks before every cycle starts. To that end, the management services can send an adaption request. As of Figure 8, the input tasks process this request shortly before (i.e., tprep for preparation time) the actual cycle start, which enables altering the individual pipeline stages and tasks in every cycle. The so-enabled adaptation of tasks and their execution order allows seamlessly changing the provided control device functionality at runtime.\n\nAddressing point (2), we modified the original Disruptor synchronization mechanism (i.e., the barrier mechanisms as of [71]) that prevents producers from overtaking consumers. We replaced the initially blocking mechanisms with a wait-free non-blocking mechanism. This mechanism ensures that the input processing tasks can always reserve a buffer entry for the next cycle. To that end, we introduce a transaction-based synchronization mechanism for consumers, under the premise that all consumers after pipeline stage 2 are only allowed to read from the Disruptor memory buffer. Whenever a producer (i.e., the input processing tasks) reserves a buffer entry, this entry is invalidated via a wait-free update (i.e., store-release instruction) of the cycle timestamp. This ensures that the producer is not blocked from making progress while all (asynchronous) consumers recognize the entry invalidation.\n\nIn the previous sections, we identified availability and integrity as essential for CPS. However, every adaptation at runtime introduces uncertainty and may result in availability and integrity violations. To minimize device-level adaptation risks, we first assign newly deployed operation tasks to a lower scheduling priority class. Hence, service B tasks are assigned to the class P2, as of Figure 8, which shall ensure on a modern multi-core CPU (in our analysis, we assumed four cores) that all other tasks can make progress, even in the case that B blocks an entire CPU core. Service B is terminated if management services detect IPC resource usage limit violations. Otherwise, the operator can decide to trigger the above described switching mechanisms to seamlessly deactivate A while making B the active service to interact with the physical system level.\n\n\nEvaluation and Discussion\n\nRegarding coverage of research questions RQ1 to RQ4, we can report as follows: As for RQ1, we derived design requirements of self-adaptive CPS IPC services and their DT(s), starting from a value-driven perspective of IPSS service needs on their underlying CPS IPC platform. This led us to the key requirements related to context-aware self-adaptability while assuring CPS availability and integrity.\n\nIntegrating context-awareness is achieved via the layered and distributed DT design that links all AP levels. The so established DT context is not limited to static and slowly changing physical properties and states like in traditional DT concepts. Instead, our DT context focuses on covering highly dynamic physical and virtual states to accurately reflect the CPSs' underlying embedded mechatronic control infrastructure, including its IPC resources and services. Such high fidelity is achieved by distributing and integrating the modular DT instances at all CPS scales (i.e., system, device, service) and AP levels. By this, every DT instance can operate at its individual fidelity for its dedicated purpose. Multiple DT instances agree on a common fidelity for data exchange by that establishing an adaptive CPS context across AP levels. As for RQ2, such a design enables a high-fidelity adaptive context across AP levels.\n\nAs for RQ3, we have developed a conceptual model of a DTenabled self-adaptive CPS that allows replicating the entire physical CPS context (i.e., physical asset, IPC resource, and IPC service states) into the virtual space and back again. This bidirectional twinning of the CPS context can be used by Dev and Ops teams for CPS monitoring, analysis, and adaptation.\n\nAs for RQ4, we instantiated the above conceptual model and demonstrated the feasibility of the proposed context-and selfaware deployment, adaptation, and A/B testing on a evaluation platform for distributed CPS control. From our perspective, the most relevant part of the demonstration is that our proposed DT concept can serve as a distributed knowledgebase for hierarchical coordinated CPS adaptation. In particular, we showed that complex CPS functions that span multiple AP levels could be deployed to the Ops space for validation without causing CPS interferences and downtime. From a design view, our results reveal that the proposed DT-enabled self-adaptive CPS models can be instantiated for specific real-world use cases, i.e., the A/B testing of services at device and system scale while meeting the strict OT availability, integrity, and real-time constraints of sub-millisecond cycle times. The demonstrated DS also shows that a modular design enables the DevOps-like closed-loop optimization of CPS service changes through architecture-based self-adaptation and verification at runtime.\n\nThe proposed models come also with challenges in terms of implementation complexity. Compared to traditional solutions, they require more IPC resources in terms of processing power, memory usage, and communication bandwidth to implement their functionality. Hence, future extended evaluation activities include investigating detailed timing, maximum tolerable IPC resource usage on device, NW, and system scale, and a detailed adaptation behavior analysis under uncertain CPS conditions.\n\n\nConclusion\n\nGuided by the CPS IPSS Automation Pyramid architecture and the IT DevOps concept, this article proposes generic technical design models that facilitate the implementation of adaptive and evolvable IPSS based on DT's. The use case that served as a design objective is A/B testing of CPS IPSS service changes in the operation-critical CPS environment at runtime. The main contribution of this work is to ensure full CPS IPSS availability and integrity during CPS adaptation and A/B testing. This contribution is pivotal for transferring the DevOps concept known in the IT domain to the OT domain, which opens the door for entirely new opportunities in terms of bringing closely together IPSS design and adaptive operation, both from a technical and organizational perspective.\n\n\n(a) The creation of value in the (Design &) Dev space by developing and testing new and improved services. (b) The creation of value by the downstream delivery of these services to the operations environment for their operationalization. (c) The creation of value by using, maintaining, and monitoring the provided services in the Operation & Maintenance (O&M) space. (d) The creation of value by operations monitoring and the delivery of upstream feedback for data-driven strategy and design planning in the Design (& Dev) space.\n\nFigure 1 :\n1DTs in the CPS DevOps Lifecycle\n\nFigure 3 :\n3Views Showing Conceptual Models of the Hierarchical CPS Structure from a DevOps, Service, and DT Perspective function of other views. In particular, view (a) maps the four DevOps value streams to (b) the AP levels. View (c) shows which IPC technologies are used on the individual AP levels, and (d) shows the typical physical layout of a CPS IPSS and its IPC clusters. View (e) maps the IT and OT deployment models as ofFigure 2onto the AP levels. Finally, view (f) shows the Dev DT and the Ops DT which are compositions of the individual DT instances distributed across the AP levels. The tiny boxes in view (d) indicate that these DT instances are further separated and distributed across the IPC NW resources.IT NW. AP level 5 is called business or management level. At this level, the DT provides key performance indicators (KPIs) of the overall CPS IPSS to drive business decisions. On level 4, the planning level, DTs are used for strategic system operations and design planning, development, simulation, and verification & validation. Due to their functional aspects levels 5 and 4 can be mapped to the Design & Dev space value stream. Modern IT solutions such as public and on-premises clouds are used for information processing and exchange at these levels.OT NW. Level 3 denotes the supervisory level responsible for supervisory control and data acquisition (SCADA) of a plant (fleet). Level 2 is the control level, responsible for domain and asset control. In particular, the programmable logic controllers (PLCs) are connected via the field level technologies (i.e., sensor, actuators, fieldbus networks on level 1) to the physical assets and processes under control on level 0. The domain controllers are intermediate layers to increase CPS fault tolerance and ease the coordination of distributed assets and processes. The lower AP levels implement the mission-critical IPC and CPS functions. Hence, they are designed for availability, integrity, safety, and time-synchronous cyclic real-time IPC.\n\nFigure 4 :\n4Conceptual DT-enabled Self-Adaptive CPS Model\n\nFigure 5 :\n5Generic Self-Adaptive Device Design Model services. The hierarchical DT services are responsible for managing the deployment (see Section 3).\n\nFigure 6 :\n6A/B Testing Model for OT Environments\n\nFigure 7 :Figure 8 :\n78Implementation Model (i.e., Dataflow Model) of a DT-enabled Architecture-based Self-Adaptive Control Device Scheduling\n\nTable 1 :\n1Features of IT and OT Deployment StrategiesFigure 2: Conceptual IT and OT Deployment Models -Preprint -Accepted for Publication at SEAMS 2022 Final published version available at: https://doi.org/10.1145/3524844.3528057Towards Digital Twin-enabled DevOps for CPS \nSEAMS'22, May 18-23, 2022, PITTSBURGH, PA, USA \n\n\nACKNOWLEDGMENTSThe authors thank Andritz Hydro GmbH and the Austrian Research Funding Agency FFG for supporting this research.\nKey Performance Indicators for Assessing the Planning and Delivery of Industrial Services. H Meier, H Lagemann, F Morlock, C Rathmann, 10.1016/j.procir.2013.07.056Procedia CIRP. 11H. Meier, H. Lagemann, F. Morlock, C. Rathmann, Key Performance Indicators for Assessing the Planning and Delivery of Industrial Services, Procedia CIRP 11 (2013) 99-104. https://doi.org/10.1016/j.procir.2013.07.056.\n\n. H Meier, R Roy, G Seliger, 10.1016/j.cirp.2010.05.004Industrial Product-Service Systems-IPS. 2CIRP AnnalsH. Meier, R. Roy, G. Seliger, Industrial Product-Service Systems-IPS 2, CIRP Annals 59 (2010) 607-627. https://doi.org/10.1016/j.cirp.2010.05.004.\n\nDesigning Valule-Driven Solutions: The Evolution of Industrial Product-Service Systems. D Brissaud, T Sakao, A Riel, J A Erkoyuncu, CIRP Annals -Manufacturing Technology. 712to appearD. Brissaud, T. Sakao, A. Riel, J.A. Erkoyuncu, Designing Valule-Driven Solutions: The Evolution of Industrial Product-Service Systems, CIRP Annals -Manufacturing Technology 71(2) (to appear).\n\nA framework for understanding uncertainty and its mitigation and exploitation in complex systems. H Mcmanus, D Hastings, 10.1109/EMR.2006.261384IEEE Eng. Manag. Rev. 3481H. McManus, D. Hastings, A framework for understanding uncertainty and its mitigation and exploitation in complex systems, IEEE Eng. Manag. Rev. 34 (2006) 81. https://doi.org/10.1109/EMR.2006.261384.\n\nState-of-the-art of design, evaluation, and operation methodologies in product service systems. M Qu, S Yu, D Chen, J Chu, B Tian, 10.1016/j.compind.2015.12.004Computers in Industry. 77M. Qu, S. Yu, D. Chen, J. Chu, B. Tian, State-of-the-art of design, evaluation, and operation methodologies in product service systems, Computers in Industry 77 (2016) 1-14. https://doi.org/10.1016/j.compind.2015.12.004.\n\nWhy Enterprises Must Adopt Devops to Enable Continuous Delivery. J Humble, J Molesky, Cutter IT Journal. 24J. Humble, J. Molesky, Why Enterprises Must Adopt Devops to Enable Continuous Delivery, Cutter IT Journal 24 (2011) 6-12.\n\n. C Ebert, G Gallardo, J Hernantes, N Serrano, Devops, Softw, 10.1109/MS.2016.6833C. Ebert, G. Gallardo, J. Hernantes, N. Serrano, DevOps, IEEE Softw. 33 (2016) 94-100. https://doi.org/10.1109/MS.2016.68.\n\nA Survey of DevOps Concepts and Challenges. L Leite, C Rocha, F Kon, D Milojicic, P Meirelles, 10.1145/3359981ACM Comput. Surv. 52L. Leite, C. Rocha, F. Kon, D. Milojicic, P. Meirelles, A Survey of DevOps Concepts and Challenges, ACM Comput. Surv. 52 (2020) 1-35. https://doi.org/10.1145/3359981.\n\nCharacterising the Digital Twin: A systematic literature review. D Jones, C Snider, A Nassehi, J Yon, B Hicks, 10.1016/j.cirpj.2020.02.002CIRP Journal of Manufacturing Science and Technology. 29D. Jones, C. Snider, A. Nassehi, J. Yon, B. Hicks, Characterising the Digital Twin: A systematic literature review, CIRP Journal of Manufacturing Science and Technology 29 (2020) 36-52. https://doi.org/10.1016/j.cirpj.2020.02.002.\n\nThe Evolution of Factory and Building Automation. T Sauter, S Soucek, W Kastner, D Dietrich, EEE Ind. Electron. Mag. 5T. Sauter, S. Soucek, W. Kastner, D. Dietrich, The Evolution of Factory and Building Automation, EEE Ind. Electron. Mag. 5 (2011) 35-48.\n\n. 10.1109/MIE.2011.942175https://doi.org/10.1109/MIE.2011.942175.\n\nThe Future of Industrial Communication: Automation Networks in the Era of the Internet of Things and Industry 4.0. M Wollschlaeger, T Sauter, J Jasperneite, 10.1109/MIE.2017.2649104EEE Ind. Electron. Mag. 11M. Wollschlaeger, T. Sauter, J. Jasperneite, The Future of Industrial Communication: Automation Networks in the Era of the Internet of Things and Industry 4.0, EEE Ind. Electron. Mag. 11 (2017) 17-27. https://doi.org/10.1109/MIE.2017.2649104.\n\nUnderstanding the implications of digitisation and automation in the context of Industry 4.0: A triangulation approach and elements of a research agenda for the construction industry. T D Oesterreich, F Teuteberg, 10.1016/j.compind.2016.09.006Computers in Industry. 83T.D. Oesterreich, F. Teuteberg, Understanding the implications of digitisation and automation in the context of Industry 4.0: A triangulation approach and elements of a research agenda for the construction industry, Computers in Industry 83 (2016) 121-139. https://doi.org/10.1016/j.compind.2016.09.006.\n\n. R De Lemos, D Garlan, C Ghezzi, H. GieseSpringer International PublishingChamSoftware Engineering for Self-Adaptive Systems III. AssurancesR. de Lemos, D. Garlan, C. Ghezzi, H. Giese (Eds.), Software Engineering for Self-Adaptive Systems III. Assurances, Springer International Publishing, Cham, 2017.\n\n. R De Lemos, H Giese, H A M\u00fcller, M Shaw, J Andersson, M Litoiu, B Schmerl, G Tamura, N M Villegas, T Vogel, D Weyns, L Baresi, B Becker, N Bencomo, Y Brun, B Cukic, R Desmarais, S Dustdar, G Engels, K Geihs, K M G\u00f6schka, A Gorla, V Grassi, P Inverardi, G Karsai, J Kramer, A Lopes, J Magee, S Malek, S Mankovskii, R Mirandola, J Mylopoulos, O Nierstrasz, M Pezz\u00e8, C Prehofer, W Sch\u00e4fer, R Schlichting, D B Smith, J P Sousa, L Tahvildari, K Wong, J Wuttke, 10.1007/978-3-642-35813-5_17475Software Engineering for Self-Adaptive Systems: A Second Research RoadmapR. de Lemos, H. Giese, H.A. M\u00fcller, M. Shaw, J. Andersson, M. Litoiu, B. Schmerl, G. Tamura, N.M. Villegas, T. Vogel, D. Weyns, L. Baresi, B. Becker, N. Bencomo, Y. Brun, B. Cukic, R. Desmarais, S. Dustdar, G. Engels, K. Geihs, K.M. G\u00f6schka, A. Gorla, V. Grassi, P. Inverardi, G. Karsai, J. Kramer, A. Lopes, J. Magee, S. Malek, S. Mankovskii, R. Mirandola, J. Mylopoulos, O. Nierstrasz, M. Pezz\u00e8, C. Prehofer, W. Sch\u00e4fer, R. Schlichting, D.B. Smith, J.P. Sousa, L. Tahvildari, K. Wong, J. Wuttke, Software Engineering for Self-Adaptive Systems: A Second Research Roadmap 7475 (2013) 1-32. https://doi.org/10.1007/978-3-642- 35813-5_1.\n\nF Tao, Q Qi, L Wang, A Nee, 10.1016/j.eng.2019.01.014Digital Twins and Cyber-Physical Systems toward Smart Manufacturing and Industry 4.0: Correlation and Comparison, Engineering. 5F. Tao, Q. Qi, L. Wang, A. Nee, Digital Twins and Cyber-Physical Systems toward Smart Manufacturing and Industry 4.0: Correlation and Comparison, Engineering 5 (2019) 653-661. https://doi.org/10.1016/j.eng.2019.01.014.\n\nS Boschert, R Rosen, Digital Twin-The Simulation Aspect. P. Hehenberger, D. BradleyChamSpringer International PublishingMechatronic FuturesS. Boschert, R. Rosen, Digital Twin-The Simulation Aspect, in: P. Hehenberger, D. Bradley (Eds.), Mechatronic Futures, Springer International Publishing, Cham, 2016, pp. 59-74.\n\nModeling Dimensions of Self-Adaptive Software Systems. J Andersson, R De Lemos, S Malek, D Weyns, B.H.C. Cheng, R. de Lemos, H. Giese, P. Inverardi, J. MageeSpringerBerlin Heidelberg; Berlin, HeidelbergSoftware Engineering for Self-Adaptive SystemsJ. Andersson, R. de Lemos, S. Malek, D. Weyns, Modeling Dimensions of Self-Adaptive Software Systems, in: B.H.C. Cheng, R. de Lemos, H. Giese, P. Inverardi, J. Magee (Eds.), Software Engineering for Self-Adaptive Systems, Springer Berlin Heidelberg, Berlin, Heidelberg, 2009, pp. 27-47.\n\nM Angelo, A Napolitano, M Caporuscio, Cyphef , Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings. the 40th International Conference on Software Engineering: Companion ProceeedingsGothenburg Sweden; New York, NY, USAACMM. D'Angelo, A. Napolitano, M. Caporuscio, CyPhEF, in: Proceedings of the 40th International Conference on Software Engineering: Companion Proceeedings, Gothenburg Sweden, ACM, New York, NY, USA, 2018, pp. 101-104.\n\nWeb-based digital twin modeling and remote control of cyberphysical production systems. C Liu, P Jiang, W Jiang, 10.1016/j.rcim.2020.101956Robotics and Computer-Integrated Manufacturing. 64101956C. Liu, P. Jiang, W. Jiang, Web-based digital twin modeling and remote control of cyber- physical production systems, Robotics and Computer-Integrated Manufacturing 64 (2020) 101956. https://doi.org/10.1016/j.rcim.2020.101956.\n\nVirtual engineering of cyber-physical automation systems: The case of control logic. G F Schneider, H Wicaksono, J Ovtcharova, 10.1016/j.aei.2018.11.009Advanced Engineering Informatics. 39Accepted for Publication at SEAMS 2022 Final published version available atG.F. Schneider, H. Wicaksono, J. Ovtcharova, Virtual engineering of cyber-physical automation systems: The case of control logic, Advanced Engineering Informatics 39 (2019) 127-143. https://doi.org/10.1016/j.aei.2018.11.009. -Preprint - Accepted for Publication at SEAMS 2022 Final published version available at: https://doi.org/10.1145/3524844.3528057\n\nSEAMS'22. PITTSBURGH, PA, USA Dobaj, Riel, Krug, Seidl, Macher, EgretzbergerSEAMS'22, May 18-23, 2022, PITTSBURGH, PA, USA Dobaj, Riel, Krug, Seidl, Macher, Egretzberger\n\nA design framework for adaptive digital twins. J A Erkoyuncu, I F Del Amo, D Ariansyah, D Bulka, R Vrabi\u010d, R Roy, CIRP Annals. 69J.A. Erkoyuncu, I.F. del Amo, D. Ariansyah, D. Bulka, R. Vrabi\u010d, R. Roy, A design framework for adaptive digital twins, CIRP Annals 69 (2020) 145-148.\n\n. 10.1016/j.cirp.2020.04.086https://doi.org/10.1016/j.cirp.2020.04.086.\n\nD Lehner, A Garmendia, M Wimmer, 2021 26th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA ). Vasteras, SwedenIEEETowards Flexible Evolution of Digital Twins with Fluent APIsD. Lehner, A. Garmendia, M. Wimmer, Towards Flexible Evolution of Digital Twins with Fluent APIs, in: 2021 26th IEEE International Conference on Emerging Technologies and Factory Automation (ETFA ), Vasteras, Sweden, IEEE, 2021, pp. 1-4.\n\nF Reiche, H Timinger, Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics. ess Model for Integrated Product Lifecycles Using Digital Twins and Predictive AnalyticsDubrovnik, CroatiaIEEE2021 IEEE Technology & Engineering Management Conference -Europe (TEMSCON-EUR)F. Reiche, H. Timinger, Process Model for Integrated Product Lifecycles Using Digital Twins and Predictive Analytics, in: 2021 IEEE Technology & Engineering Management Conference -Europe (TEMSCON-EUR), Dubrovnik, Croatia, IEEE, 2021, pp. 1-5.\n\nDigital Twin for maintenance: A literature review. I Errandonea, S Beltr\u00e1n, S Arrizabalaga, 10.1016/j.compind.2020.103316Computers in Industry. 123103316I. Errandonea, S. Beltr\u00e1n, S. Arrizabalaga, Digital Twin for maintenance: A literature review, Computers in Industry 123 (2020) 103316. https://doi.org/10.1016/j.compind.2020.103316.\n\nMachine learning and reasoning for predictive maintenance in Industry 4.0: Current status and challenges. J Dalzochio, R Kunst, E Pignaton, A Binotto, S Sanyal, J Favilla, J Barbosa, Computers in Industry. 123103298J. Dalzochio, R. Kunst, E. Pignaton, A. Binotto, S. Sanyal, J. Favilla, J. Barbosa, Machine learning and reasoning for predictive maintenance in Industry 4.0: Current status and challenges, Computers in Industry 123 (2020) 103298.\n\n. 10.1016/j.compind.2020.103298https://doi.org/10.1016/j.compind.2020.103298.\n\nTowards integrating undependable selfadaptive systems in safety-critical environments. G Weiss, P Schleiss, D Schneider, M Trapp, Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems -SEAMS '18. the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems -SEAMS '18Gothenburg, Sweden; New York, New York, USAACM PressG. Weiss, P. Schleiss, D. Schneider, M. Trapp, Towards integrating undependable self- adaptive systems in safety-critical environments, in: Proceedings of the 13th International Conference on Software Engineering for Adaptive and Self-Managing Systems -SEAMS '18, Gothenburg, Sweden, ACM Press, New York, New York, USA, 2018, pp. 26-32.\n\nA fault-tolerant architectural approach for dependable systems. R De Lemos, P A De Castro Guerra, C Rubira, 10.1109/MS.2006.35IEEE Softw. 23R. de Lemos, P.A. de Castro Guerra, C. Rubira, A fault-tolerant architectural approach for dependable systems, IEEE Softw. 23 (2006) 80-87. https://doi.org/10.1109/MS.2006.35.\n\nEngineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases. R Calinescu, D Weyns, S Gerasimou, M U Iftikhar, I Habli, T Kelly, 10.1109/TSE.2017.2738640IIEEE Trans. Software Eng. 44R. Calinescu, D. Weyns, S. Gerasimou, M.U. Iftikhar, I. Habli, T. Kelly, Engineering Trustworthy Self-Adaptive Software with Dynamic Assurance Cases, IIEEE Trans. Software Eng. 44 (2018) 1039-1069. https://doi.org/10.1109/TSE.2017.2738640.\n\nIncreasing System Dependability through Architecture-Based Self-Repair. D Garlan, S.-W Cheng, B Schmerl, R. de Lemos, C. Gacek, A. RomanovskySpringerBerlin Heidelberg; Berlin, HeidelbergArchitecting Dependable SystemsD. Garlan, S.-W. Cheng, B. Schmerl, Increasing System Dependability through Architecture- Based Self-Repair, in: R. de Lemos, C. Gacek, A. Romanovsky (Eds.), Architecting Dependable Systems, Springer Berlin Heidelberg, Berlin, Heidelberg, 2003, pp. 61-89.\n\nToward Self-Manageable and Adaptive Industrial Cyber-Physical Systems With Knowledge-Driven Autonomic Service Management. W Dai, V N Dubinin, J H Christensen, V Vyatkin, X Guan, IEEE Trans. Ind. Inf. 13W. Dai, V.N. Dubinin, J.H. Christensen, V. Vyatkin, X. Guan, Toward Self-Manageable and Adaptive Industrial Cyber-Physical Systems With Knowledge-Driven Autonomic Service Management, IEEE Trans. Ind. Inf. 13 (2017) 725-736.\n\n. 10.1109/TII.2016.2595401https://doi.org/10.1109/TII.2016.2595401.\n\nContext-sensitive Adaptive Production Processes. C T Sungur, U Breitenb\u00fccher, F Leymann, M Wieland, Procedia CIRP. 41C.T. Sungur, U. Breitenb\u00fccher, F. Leymann, M. Wieland, Context-sensitive Adaptive Production Processes, Procedia CIRP 41 (2016) 147-152.\n\n. 10.1016/j.procir.2015.12.076https://doi.org/10.1016/j.procir.2015.12.076.\n\n. A Filieri, M Maggio, K Angelopoulos, N Ippolito, I Gerostathopoulos, A B Hempel, H Hoffmann, P Jamshidi, E Kalyvianaki, C Klein, F Krikava, S Misailovic, A V , A. Filieri, M. Maggio, K. Angelopoulos, N. D'Ippolito, I. Gerostathopoulos, A.B. Hempel, H. Hoffmann, P. Jamshidi, E. Kalyvianaki, C. Klein, F. Krikava, S. Misailovic, A.V.\n\nS Papadopoulos, A M Ray, S Sharifloo, M Shevtsov, T Ujma, Vogel, 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems. Florence, ItalyIEEESoftware Engineering Meets Control TheoryPapadopoulos, S. Ray, A.M. Sharifloo, S. Shevtsov, M. Ujma, T. Vogel, Software Engineering Meets Control Theory, in: 2015 IEEE/ACM 10th International Symposium on Software Engineering for Adaptive and Self-Managing Systems, Florence, Italy, IEEE, 2015, pp. 71- 82.\n\nSelf-adaptive Software with Decentralised Control Loops. R Calinescu, S Gerasimou, A Banks, Fundamental Approaches to Software Engineering. A. Egyed, I. SchaeferBerlin Heidelberg; Berlin, HeidelbergSpringerR. Calinescu, S. Gerasimou, A. Banks, Self-adaptive Software with Decentralised Control Loops, in: A. Egyed, I. Schaefer (Eds.), Fundamental Approaches to Software Engineering, Springer Berlin Heidelberg, Berlin, Heidelberg, 2015, pp. 235-251.\n\nMAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems. D G D La Iglesia, D Weyns, 10.1145/2724719ACM Trans. Auton. Adapt. Syst. 10D.G.D. La Iglesia, D. Weyns, MAPE-K Formal Templates to Rigorously Design Behaviors for Self-Adaptive Systems, ACM Trans. Auton. Adapt. Syst. 10 (2015) 1-31. https://doi.org/10.1145/2724719.\n\nEnvironment as a first class abstraction in multiagent systems. D Weyns, A Omicini, J Odell, 10.1007/s10458-006-0012-0Auton Agent Multi-Agent Syst. 14D. Weyns, A. Omicini, J. Odell, Environment as a first class abstraction in multiagent systems, Auton Agent Multi-Agent Syst 14 (2006) 5-30. https://doi.org/10.1007/s10458-006-0012-0.\n\nEvolving an adaptive industrial software system to use architecture-based self-adaptation. J Camara, P Correia, R De Lemos, D Garlan, P Gomes, B Schmerl, R Ventura, 2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS). San Francisco, CA, USAIEEEJ. Camara, P. Correia, R. de Lemos, D. Garlan, P. Gomes, B. Schmerl, R. Ventura, Evolving an adaptive industrial software system to use architecture-based self-adaptation, in: 2013 8th International Symposium on Software Engineering for Adaptive and Self-Managing Systems (SEAMS), San Francisco, CA, USA, IEEE, 2013, pp. 13-22.\n\nApplying Architecture-Based Adaptation to Automate the Management of Internet-of-Things. D Weyns, M U Iftikhar, D Hughes, N Matthys, Software Architecture. C.E. Cuesta, D. Garlan, J. P\u00e9rezChamSpringer International PublishingD. Weyns, M.U. Iftikhar, D. Hughes, N. Matthys, Applying Architecture-Based Adaptation to Automate the Management of Internet-of-Things, in: C.E. Cuesta, D. Garlan, J. P\u00e9rez (Eds.), Software Architecture, Springer International Publishing, Cham, 2018, pp. 49-67.\n\nA systematic literature review on methods that handle multiple quality attributes in architecture-based self-adaptive systems. S Mahdavi-Hezavehi, V H Durelli, D Weyns, P Avgeriou, Information and Software Technology. 90S. Mahdavi-Hezavehi, V.H. Durelli, D. Weyns, P. Avgeriou, A systematic literature review on methods that handle multiple quality attributes in architecture-based self-adaptive systems, Information and Software Technology 90 (2017) 1-26.\n\n. 10.1016/j.infsof.2017.03.013https://doi.org/10.1016/j.infsof.2017.03.013.\n\nSoftware Architecture-Based Self-Adaptation. D Garlan, B Schmerl, S.-W Cheng, Autonomic Computing and Networking. Zhang, Y., Yang, L., Denko, M.Boston, MASpringerD. Garlan, B. Schmerl, S.-W. Cheng, Software Architecture-Based Self-Adaptation, in: In: Zhang, Y., Yang, L., Denko, M. (eds) Autonomic Computing and Networking. Springer, Boston, MA, pp. 31-55.\n\nASPLe: A methodology to develop self-adaptive software systems with systematic reuse. N Abbas, J Andersson, D Weyns, 10.1016/j.jss.2020.110626Journal of Systems and Software. 167110626N. Abbas, J. Andersson, D. Weyns, ASPLe: A methodology to develop self-adaptive software systems with systematic reuse, Journal of Systems and Software 167 (2020) 110626. https://doi.org/10.1016/j.jss.2020.110626.\n\nRainbow: architecture-based self-adaptation with reusable infrastructure. D Garlan, S.-W Cheng, A.-C Huang, B Schmerl, P Steenkiste, 10.1109/MC.2004.175Computer. 37D. Garlan, S.-W. Cheng, A.-C. Huang, B. Schmerl, P. Steenkiste, Rainbow: architecture-based self-adaptation with reusable infrastructure, Computer 37 (2004) 46-54. https://doi.org/10.1109/MC.2004.175.\n\nTowards a continuous certification of safety-critical avionics software. C Baron, V Louis, 10.1016/j.compind.2020.103382Computers in Industry. 125103382C. Baron, V. Louis, Towards a continuous certification of safety-critical avionics software, Computers in Industry 125 (2021) 103382. https://doi.org/10.1016/j.compind.2020.103382.\n\nSoftware Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment. B Combemale, M Wimmer, J.-M. Bruel, M. Mazzara, B. MeyerSpringer International PublishingChamTowards a Model-Based DevOps for Cyber-Physical SystemsB. Combemale, M. Wimmer, Towards a Model-Based DevOps for Cyber-Physical Systems, in: J.-M. Bruel, M. Mazzara, B. Meyer (Eds.), Software Engineering Aspects of Continuous Development and New Paradigms of Software Production and Deployment, Springer International Publishing, Cham, 2020, pp. 84-94.\n\nTwinOps -DevOps meets model-based engineering and digital twins for the engineering of CPS. J Hugues, A Hristosov, J J Hudak, J Yankel, Proceedings of the 23rd. the 23rdJ. Hugues, A. Hristosov, J.J. Hudak, J. Yankel, TwinOps -DevOps meets model-based engineering and digital twins for the engineering of CPS, in: Proceedings of the 23rd\n\nACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings, Virtual Event Canada. New York, NY, USA, 2020ACMACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings, Virtual Event Canada, ACM, New York, NY, USA, 2020, pp. 1-5.\n\nTowards a DevOps Approach in Cyber Physical Production Systems Using Digital Twins. M Querejeta, L Etxeberria, G Sagardui, Computer Safety, Reliability, and Security. SAFECOMP 2020 Workshops. A. Casimiro, F. Ortmeier, E. Schoitsch, F. Bitsch, P. FerreiraChamSpringer International PublishingM. Ugarte Querejeta, L. Etxeberria, G. Sagardui, Towards a DevOps Approach in Cyber Physical Production Systems Using Digital Twins, in: A. Casimiro, F. Ortmeier, E. Schoitsch, F. Bitsch, P. Ferreira (Eds.), Computer Safety, Reliability, and Security. SAFECOMP 2020 Workshops, Springer International Publishing, Cham, 2020, pp. 205-216.\n\nW Hasselbring, S Henning, B Latte, A Mobius, T Richter, S Schalk, M Wojcieszak, Devops, 2019 -3/26/20192019 IEEE International Conference on Software Architecture Companion (ICSA-C). Hamburg, GermanyW. Hasselbring, S. Henning, B. Latte, A. Mobius, T. Richter, S. Schalk, M. Wojcieszak, Industrial DevOps, in: 2019 IEEE International Conference on Software Architecture Companion (ICSA-C), Hamburg, Germany, IEEE, 3/25/2019 -3/26/2019, pp. 123-126.\n\nAgent-Based DevOps of Software and Hardware Resources for Digital Twins of Infrastructural Objects. R Kostromin, A Feoktistov, The 4th International Conference on Future Networks and Distributed Systems (ICFNDS). St.Petersburg Russian Federation; New York, NY, USAACMR. Kostromin, A. Feoktistov, Agent-Based DevOps of Software and Hardware Resources for Digital Twins of Infrastructural Objects, in: The 4th International Conference on Future Networks and Distributed Systems (ICFNDS), St.Petersburg Russian Federation, ACM, New York, NY, USA, 2020, pp. 1-6.\n\nTowards Cyber-Physical Infrastructure as-a-Service (CPIaaS) in the Era of Industry 4.0, in: Systems, Software and Services Process Improvement. J Dobaj, M Krisper, G Macher, Springer International PublishingChamJ. Dobaj, M. Krisper, G. Macher, Towards Cyber-Physical Infrastructure as-a-Service (CPIaaS) in the Era of Industry 4.0, in: Systems, Software and Services Process Improvement, Springer International Publishing, Cham, 2019, pp. 310-321.\n\nThe Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution. J Mertens, J Denil, Computer Safety, Reliability, and Security. SAFECOMP 2021 Workshops. I. Habli, M. Sujan, S. Gerasimou, E. Schoitsch, F. BitschChamSpringer International PublishingJ. Mertens, J. Denil, The Digital Twin as a Common Knowledge Base in DevOps to Support Continuous System Evolution, in: I. Habli, M. Sujan, S. Gerasimou, E. Schoitsch, F. Bitsch (Eds.), Computer Safety, Reliability, and Security. SAFECOMP 2021 Workshops, Springer International Publishing, Cham, 2021, pp. 158-170.\n\nUndesirable Emergent Behavior in Complex Systems. M Grieves, J Vickers, Digital Twin: Mitigating Unpredictable. F.-J. Kahlen, S. Flumerfelt, A. AlvesSpringer International PublishingM. Grieves, J. Vickers, Digital Twin: Mitigating Unpredictable, Undesirable Emergent Behavior in Complex Systems, in: F.-J. Kahlen, S. Flumerfelt, A. Alves (Eds.), Transdisciplinary Perspectives on Complex Systems, Springer International Publishing, Cham, 2017, pp. 85-113.\n\nE Tremel, Deployment strategies on Kubernetes, Cloud Native Foundation. E. Tremel, Deployment strategies on Kubernetes, Cloud Native Foundation, 2019.\n\nThe Three Generations of Field-Level Networks-Evolution and Compatibility Issues. T Sauter, IEEE Trans. Ind. Electron. 57T. Sauter, The Three Generations of Field-Level Networks-Evolution and Compatibility Issues, IEEE Trans. Ind. Electron. 57 (2010) 3585-3595.\n\n. 10.1109/TIE.2010.2062473https://doi.org/10.1109/TIE.2010.2062473.\n\nDependable mesh networking patterns. J Dobaj, M Schuss, M Krisper, C A Boano, G Macher, Proceedings of the 24th European Conference on Pattern Languages of Programs. the 24th European Conference on Pattern Languages of ProgramsIrsee Germany; New York, NY, USAACMJ. Dobaj, M. Schuss, M. Krisper, C.A. Boano, G. Macher, Dependable mesh networking patterns, in: Proceedings of the 24th European Conference on Pattern Languages of Programs, Irsee Germany, ACM, New York, NY, USA, 2019, pp. 1-14.\n\nTowards a security-driven automotive development lifecycle. J Dobaj, G Macher, D Ekert, A Riel, R Messnarz, 10.1002/smr.2407Journal of Software: Evolution and Process. J. Dobaj, G. Macher, D. Ekert, A. Riel, R. Messnarz, Towards a security-driven automotive development lifecycle, Journal of Software: Evolution and Process (2021). https://doi.org/10.1002/smr.2407.\n\nHandbook of Software Engineering. D Weyns, S. Cha, R.N. Taylor, K. KangSpringer International PublishingChamSoftware Engineering of Self-adaptive SystemsD. Weyns, Software Engineering of Self-adaptive Systems, in: S. Cha, R.N. Taylor, K. Kang (Eds.), Handbook of Software Engineering, Springer International Publishing, Cham, 2019, pp. 399-443.\n\nA Microservice Architecture for the Industrial Internet-Of-Things. J Dobaj, J Iber, M Krisper, C Kreiner, ACMIrsee Germany; New York, NY, USAJ. Dobaj, J. Iber, M. Krisper, C. Kreiner, A Microservice Architecture for the Industrial Internet-Of-Things, Irsee Germany, ACM, New York, NY, USA, 2018, pp. 1-15.\n\nD Weyns, B Schmerl, V Grassi, S Malek, R Mirandola, C Prehofer, J Wuttke, J Andersson, H Giese, K M G\u00f6schka, 10.1007/978-3-642-35813-5_4On Patterns for Decentralized Control in Self-Adaptive Systems. 7475D. Weyns, B. Schmerl, V. Grassi, S. Malek, R. Mirandola, C. Prehofer, J. Wuttke, J. Andersson, H. Giese, K.M. G\u00f6schka, On Patterns for Decentralized Control in Self-Adaptive Systems 7475 (2013) 76-107. https://doi.org/10.1007/978-3-642-35813-5_4.\n\nController of Controllers Architecture for Management of Heterogeneous Industrial Networks. F Ansah, S S P Olaya, D Krummacker, C Fischer, A Winkel, R Guillaume, L Wisniewski, M Ehrlich, W Mandarawi, H Trsek, H De Meer, M Wollschlaeger, H D Schotten, J Jasperneite, F. Ansah, S.S.P. Olaya, D. Krummacker, C. Fischer, A. Winkel, R. Guillaume, L. Wisniewski, M. Ehrlich, W. Mandarawi, H. Trsek, H. de Meer, M. Wollschlaeger, H.D. Schotten, J. Jasperneite, Controller of Controllers Architecture for Management of Heterogeneous Industrial Networks, in: pp. 1-8.\n\nMicroservice Patterns for the Life Cycle of Industrial Edge Software. F Li, J Fr\u00f6hlich, D Schall, M Lachenmayr, C St\u00fcckj\u00fcrgen, S Meixner, F Buschmann, Proceedings of the 23rd European Conference on Pattern Languages of Programs. the 23rd European Conference on Pattern Languages of ProgramsIrsee Germany; New York, NY, USA, 07042018ACMF. Li, J. Fr\u00f6hlich, D. Schall, M. Lachenmayr, C. St\u00fcckj\u00fcrgen, S. Meixner, F. Buschmann, Microservice Patterns for the Life Cycle of Industrial Edge Software, in: Proceedings of the 23rd European Conference on Pattern Languages of Programs, Irsee Germany, ACM, New York, NY, USA, 07042018, pp. 1-11.\n\nArchitectural Patterns for Integrating AI Technology into Safety-Critical Systems. G Macher, M Seidl, M Dzambic, J Dobaj, 26th European Conference on Pattern Languages of Programs. Graz Austria; New York, NY, USAACMG. Macher, M. Seidl, M. Dzambic, J. Dobaj, Architectural Patterns for Integrating AI Technology into Safety-Critical Systems, in: 26th European Conference on Pattern Languages of Programs, Graz Austria, ACM, New York, NY, USA, 2021, pp. 1-8.\n\nA six-layer architecture for the digital twin: a manufacturing case study implementation. A J H Redelinghuys, A H Basson, K Kruger, 10.1007/s10845-019-01516-6J Intell Manuf. 31A.J.H. Redelinghuys, A.H. Basson, K. Kruger, A six-layer architecture for the digital twin: a manufacturing case study implementation, J Intell Manuf 31 (2020) 1383-1402. https://doi.org/10.1007/s10845-019-01516-6.\n\nReview of digital twin applications in manufacturing. C Cimino, E Negri, L Fumagalli, 10.1016/j.compind.2019.103130Computers in Industry. 113103130C. Cimino, E. Negri, L. Fumagalli, Review of digital twin applications in manufacturing, Computers in Industry 113 (2019) 103130. https://doi.org/10.1016/j.compind.2019.103130.\n\nAnalysis of Control Architectures in the Context of Industry 4.0. H Meissner, R Ilsen, J C Aurich, 10.1016/j.procir.2016.06.113Procedia CIRP. 62H. Meissner, R. Ilsen, J.C. Aurich, Analysis of Control Architectures in the Context of Industry 4.0, Procedia CIRP 62 (2017) 165-169. https://doi.org/10.1016/j.procir.2016.06.113.\n\n. The Industrial Internet of Things. 5Connectivity FrameworkIndustrial Internet Consortium Connectivity Task GroupIndustrial Internet Consortium Connectivity Task Group, The Industrial Internet of Things Volume G5: Connectivity Framework.\n\nDigital Twin as a Service (DTaaS) in Industry 4.0: An Architecture Reference Model. S Aheleroff, X Xu, R Y Zhong, Y Lu, 10.1016/j.aei.2020.101225Advanced Engineering Informatics. 47101225S. Aheleroff, X. Xu, R.Y. Zhong, Y. Lu, Digital Twin as a Service (DTaaS) in Industry 4.0: An Architecture Reference Model, Advanced Engineering Informatics 47 (2021) 101225. https://doi.org/10.1016/j.aei.2020.101225.\n\n. Smart Grid Reference Architecture. Smart Grid Coordination GroupSmart Grid Coordination Group, Smart Grid Reference Architecture, 2012.\n\nThe Reference Architectural Model. M Hankel, B Rexroth, Industrie 4.0 (RAMI 4.0M. Hankel, B. Rexroth, The Reference Architectural Model Industrie 4.0 (RAMI 4.0), 2015.\n\nEvaluating Software-defined Networking for Deterministic Communication in Distributed Industrial Automation Systems. Ben Schneider, Alois Zoitl, Monika Wenger, Limassol, Cyprus, IEEE, Piscataway, NJBen Schneider, Alois Zoitl, Monika Wenger, Jan Olaf Blech, Evaluating Software-defined Networking for Deterministic Communication in Distributed Industrial Automation Systems: September 12-15, 2017, Limassol, Cyprus, IEEE, Piscataway, NJ, 2017.\n\nM Raagaard, P Pop, M Guti\u00e9rrez, W Steiner, Runtime Reconfiguration of Time-Sensitive Networking (TSN) Schedules for Fog Computing. Piscataway, NJM. Raagaard, P. Pop, M. Guti\u00e9rrez, W. Steiner, Runtime Reconfiguration of Time-Sensitive Networking (TSN) Schedules for Fog Computing: Oct. 30, 2017-Nov. 1, 2017, IEEE, Piscataway, NJ, 2017.\n\nDisruptor: High performance alternative to bounded queues for exchanging data between concurrent threads. M Thompson, D Farley, M Barker, P Gee, A Stewart, M. Thompson, D. Farley, M. Barker, P. Gee, A. Stewart, Disruptor: High performance alternative to bounded queues for exchanging data between concurrent threads, 2011.\n\nModeling and analysis of the disruptor framework in CSP. Y Fang, H Zhu, F Zeyda, Y Fei, 2018 IEEE 8th Annual Computing and Communication Workshop and Conference (CCWC). Las Vegas, NVIEEEY. Fang, H. Zhu, F. Zeyda, Y. Fei, Modeling and analysis of the disruptor framework in CSP, in: 2018 IEEE 8th Annual Computing and Communication Workshop and Conference (CCWC), Las Vegas, NV, IEEE, 2018, pp. 803-809.\n", "annotations": {"author": "[{\"end\":173,\"start\":136},{\"end\":216,\"start\":174},{\"end\":246,\"start\":217},{\"end\":287,\"start\":247},{\"end\":324,\"start\":288},{\"end\":376,\"start\":325},{\"end\":390,\"start\":377},{\"end\":404,\"start\":391},{\"end\":417,\"start\":405},{\"end\":433,\"start\":418},{\"end\":447,\"start\":434},{\"end\":468,\"start\":448},{\"end\":649,\"start\":469},{\"end\":729,\"start\":650},{\"end\":809,\"start\":730},{\"end\":904,\"start\":810},{\"end\":928,\"start\":905}]", "publisher": null, "author_last_name": "[{\"end\":148,\"start\":143},{\"end\":186,\"start\":182},{\"end\":228,\"start\":224},{\"end\":261,\"start\":256},{\"end\":300,\"start\":294},{\"end\":344,\"start\":332},{\"end\":389,\"start\":384},{\"end\":403,\"start\":399},{\"end\":416,\"start\":412},{\"end\":432,\"start\":427},{\"end\":446,\"start\":440},{\"end\":467,\"start\":455}]", "author_first_name": "[{\"end\":142,\"start\":136},{\"end\":181,\"start\":174},{\"end\":223,\"start\":217},{\"end\":255,\"start\":247},{\"end\":293,\"start\":288},{\"end\":331,\"start\":325},{\"end\":383,\"start\":377},{\"end\":398,\"start\":391},{\"end\":411,\"start\":405},{\"end\":426,\"start\":418},{\"end\":439,\"start\":434},{\"end\":454,\"start\":448}]", "author_affiliation": "[{\"end\":648,\"start\":470},{\"end\":728,\"start\":651},{\"end\":808,\"start\":731},{\"end\":903,\"start\":811},{\"end\":927,\"start\":906}]", "title": "[{\"end\":118,\"start\":1},{\"end\":1046,\"start\":929}]", "venue": "[{\"end\":1145,\"start\":1048}]", "abstract": "[{\"end\":3500,\"start\":1376}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3667,\"start\":3664},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3984,\"start\":3981},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4146,\"start\":4143},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4602,\"start\":4599},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":4675,\"start\":4672},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4844,\"start\":4841},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5000,\"start\":4997},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":5002,\"start\":5000},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":6753,\"start\":6750},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":6756,\"start\":6753},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":6759,\"start\":6756},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7890,\"start\":7887},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":9462,\"start\":9459},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":9687,\"start\":9683},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9690,\"start\":9687},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":9846,\"start\":9842},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":10042,\"start\":10038},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":10045,\"start\":10042},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":10313,\"start\":10309},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":10396,\"start\":10392},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":10400,\"start\":10396},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":10404,\"start\":10400},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":10408,\"start\":10404},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10519,\"start\":10515},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":10844,\"start\":10840},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":11284,\"start\":11280},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":11287,\"start\":11284},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":11515,\"start\":11511},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":11518,\"start\":11515},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":11762,\"start\":11758},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":11861,\"start\":11857},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":11865,\"start\":11861},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":11869,\"start\":11865},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":11873,\"start\":11869},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":12023,\"start\":12019},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":12027,\"start\":12023},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":12031,\"start\":12027},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":12035,\"start\":12031},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":12039,\"start\":12035},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":12043,\"start\":12039},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":12174,\"start\":12170},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":12178,\"start\":12174},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":12182,\"start\":12178},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":12186,\"start\":12182},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":12190,\"start\":12186},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":12194,\"start\":12190},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":12631,\"start\":12627},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":12917,\"start\":12914},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":13334,\"start\":13330},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":13338,\"start\":13334},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":13342,\"start\":13338},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":13346,\"start\":13342},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":13350,\"start\":13346},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":13354,\"start\":13350},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":13358,\"start\":13354},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":14022,\"start\":14018},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":14398,\"start\":14395},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":14896,\"start\":14892},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":17031,\"start\":17027},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":19819,\"start\":19815},{\"attributes\":{\"ref_id\":\"b63\"},\"end\":21019,\"start\":21015},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":22512,\"start\":22508},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":22843,\"start\":22839},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":22846,\"start\":22843},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":22937,\"start\":22933},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":22941,\"start\":22937},{\"attributes\":{\"ref_id\":\"b68\"},\"end\":22945,\"start\":22941},{\"attributes\":{\"ref_id\":\"b69\"},\"end\":22949,\"start\":22945},{\"attributes\":{\"ref_id\":\"b70\"},\"end\":23067,\"start\":23063},{\"attributes\":{\"ref_id\":\"b71\"},\"end\":23071,\"start\":23067},{\"attributes\":{\"ref_id\":\"b72\"},\"end\":23075,\"start\":23071},{\"attributes\":{\"ref_id\":\"b73\"},\"end\":23079,\"start\":23075},{\"attributes\":{\"ref_id\":\"b74\"},\"end\":23083,\"start\":23079},{\"attributes\":{\"ref_id\":\"b75\"},\"end\":23087,\"start\":23083},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":23091,\"start\":23087},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":23154,\"start\":23150},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":27890,\"start\":27886},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":27938,\"start\":27934},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":28326,\"start\":28322},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28893,\"start\":28890},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":29926,\"start\":29922},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":30022,\"start\":30018},{\"attributes\":{\"ref_id\":\"b64\"},\"end\":31166,\"start\":31162},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":33722,\"start\":33718},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":33725,\"start\":33722},{\"attributes\":{\"ref_id\":\"b66\"},\"end\":35493,\"start\":35489},{\"attributes\":{\"ref_id\":\"b65\"},\"end\":35892,\"start\":35888},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":35993,\"start\":35990},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":36370,\"start\":36366},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":36373,\"start\":36370},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":37301,\"start\":37297},{\"attributes\":{\"ref_id\":\"b77\"},\"end\":37304,\"start\":37301},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":37340,\"start\":37336},{\"attributes\":{\"ref_id\":\"b67\"},\"end\":37390,\"start\":37386},{\"attributes\":{\"ref_id\":\"b62\"},\"end\":37513,\"start\":37509},{\"attributes\":{\"ref_id\":\"b78\"},\"end\":39729,\"start\":39725},{\"attributes\":{\"ref_id\":\"b76\"},\"end\":43405,\"start\":43401},{\"attributes\":{\"ref_id\":\"b79\"},\"end\":43801,\"start\":43797},{\"attributes\":{\"ref_id\":\"b79\"},\"end\":44100,\"start\":44096},{\"attributes\":{\"ref_id\":\"b80\"},\"end\":44109,\"start\":44105},{\"attributes\":{\"ref_id\":\"b80\"},\"end\":45427,\"start\":45423}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":51703,\"start\":51171},{\"attributes\":{\"id\":\"fig_1\"},\"end\":51748,\"start\":51704},{\"attributes\":{\"id\":\"fig_3\"},\"end\":53773,\"start\":51749},{\"attributes\":{\"id\":\"fig_5\"},\"end\":53832,\"start\":53774},{\"attributes\":{\"id\":\"fig_6\"},\"end\":53987,\"start\":53833},{\"attributes\":{\"id\":\"fig_7\"},\"end\":54038,\"start\":53988},{\"attributes\":{\"id\":\"fig_8\"},\"end\":54181,\"start\":54039},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":54507,\"start\":54182}]", "paragraph": "[{\"end\":3985,\"start\":3516},{\"end\":4448,\"start\":3987},{\"end\":5169,\"start\":4450},{\"end\":6130,\"start\":5171},{\"end\":6491,\"start\":6132},{\"end\":7188,\"start\":6523},{\"end\":7761,\"start\":7222},{\"end\":8032,\"start\":7763},{\"end\":8394,\"start\":8034},{\"end\":8750,\"start\":8396},{\"end\":9463,\"start\":8794},{\"end\":10046,\"start\":9465},{\"end\":10585,\"start\":10048},{\"end\":11368,\"start\":10587},{\"end\":12195,\"start\":11370},{\"end\":13185,\"start\":12197},{\"end\":13753,\"start\":13187},{\"end\":14580,\"start\":13755},{\"end\":15111,\"start\":14624},{\"end\":17173,\"start\":15113},{\"end\":17865,\"start\":17175},{\"end\":17988,\"start\":17867},{\"end\":19232,\"start\":17990},{\"end\":21063,\"start\":19234},{\"end\":21599,\"start\":21065},{\"end\":22207,\"start\":21638},{\"end\":22430,\"start\":22336},{\"end\":22625,\"start\":22432},{\"end\":23448,\"start\":22627},{\"end\":23717,\"start\":23470},{\"end\":24549,\"start\":23748},{\"end\":25524,\"start\":24551},{\"end\":26557,\"start\":25526},{\"end\":27255,\"start\":26581},{\"end\":28284,\"start\":27257},{\"end\":29080,\"start\":28286},{\"end\":29927,\"start\":29118},{\"end\":30790,\"start\":29929},{\"end\":31174,\"start\":30829},{\"end\":31840,\"start\":31176},{\"end\":32572,\"start\":31842},{\"end\":33330,\"start\":32574},{\"end\":33610,\"start\":33332},{\"end\":35433,\"start\":33656},{\"end\":36067,\"start\":35435},{\"end\":36988,\"start\":36069},{\"end\":37726,\"start\":36990},{\"end\":38329,\"start\":37728},{\"end\":39730,\"start\":38331},{\"end\":40216,\"start\":39732},{\"end\":41008,\"start\":40218},{\"end\":41609,\"start\":41010},{\"end\":42062,\"start\":41611},{\"end\":42474,\"start\":42064},{\"end\":44110,\"start\":42476},{\"end\":45302,\"start\":44112},{\"end\":46204,\"start\":45304},{\"end\":47069,\"start\":46206},{\"end\":47498,\"start\":47099},{\"end\":48426,\"start\":47500},{\"end\":48791,\"start\":48428},{\"end\":49892,\"start\":48793},{\"end\":50381,\"start\":49894},{\"end\":51170,\"start\":50396}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":14817,\"start\":14810},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":17294,\"start\":17286},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":20622,\"start\":20615},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":22014,\"start\":22007},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":37943,\"start\":37936}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":3514,\"start\":3502},{\"attributes\":{\"n\":\"2\"},\"end\":6521,\"start\":6494},{\"attributes\":{\"n\":\"2.1\"},\"end\":7220,\"start\":7191},{\"attributes\":{\"n\":\"2.2\"},\"end\":8792,\"start\":8753},{\"attributes\":{\"n\":\"2.3\"},\"end\":14622,\"start\":14583},{\"attributes\":{\"n\":\"2.4\"},\"end\":21636,\"start\":21602},{\"end\":22334,\"start\":22210},{\"attributes\":{\"n\":\"3\"},\"end\":23468,\"start\":23451},{\"attributes\":{\"n\":\"3.1\"},\"end\":23746,\"start\":23720},{\"attributes\":{\"n\":\"3.2\"},\"end\":26579,\"start\":26560},{\"end\":29116,\"start\":29083},{\"attributes\":{\"n\":\"3.3\"},\"end\":30827,\"start\":30793},{\"attributes\":{\"n\":\"4\"},\"end\":33654,\"start\":33613},{\"attributes\":{\"n\":\"5\"},\"end\":47097,\"start\":47072},{\"attributes\":{\"n\":\"6\"},\"end\":50394,\"start\":50384},{\"end\":51715,\"start\":51705},{\"end\":51760,\"start\":51750},{\"end\":53785,\"start\":53775},{\"end\":53844,\"start\":53834},{\"end\":53999,\"start\":53989},{\"end\":54060,\"start\":54040},{\"end\":54192,\"start\":54183}]", "table": "[{\"end\":54507,\"start\":54413}]", "figure_caption": "[{\"end\":51703,\"start\":51173},{\"end\":51748,\"start\":51717},{\"end\":53773,\"start\":51762},{\"end\":53832,\"start\":53787},{\"end\":53987,\"start\":53846},{\"end\":54038,\"start\":54001},{\"end\":54181,\"start\":54063},{\"end\":54413,\"start\":54194}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":7395,\"start\":7387},{\"end\":14951,\"start\":14943},{\"end\":15213,\"start\":15205},{\"end\":15531,\"start\":15523},{\"end\":16675,\"start\":16667},{\"end\":19017,\"start\":19009},{\"end\":19492,\"start\":19484},{\"end\":19835,\"start\":19827},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":22519,\"start\":22513},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":23202,\"start\":23186},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":23574,\"start\":23566},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":23810,\"start\":23802},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":24139,\"start\":24131},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":25574,\"start\":25566},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":31051,\"start\":31043},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":31173,\"start\":31167},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":31261,\"start\":31253},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":33114,\"start\":33106},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":33402,\"start\":33394},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":34486,\"start\":34478},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":38436,\"start\":38428},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":39634,\"start\":39626},{\"end\":40933,\"start\":40925},{\"end\":40943,\"start\":40935},{\"end\":41045,\"start\":41037},{\"end\":41408,\"start\":41400},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":41800,\"start\":41792},{\"end\":42078,\"start\":42070},{\"end\":42547,\"start\":42539},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":43287,\"start\":43278},{\"end\":43530,\"start\":43522},{\"end\":44968,\"start\":44960},{\"end\":46607,\"start\":46599}]", "bib_author_first_name": "[{\"end\":54727,\"start\":54726},{\"end\":54736,\"start\":54735},{\"end\":54748,\"start\":54747},{\"end\":54759,\"start\":54758},{\"end\":55036,\"start\":55035},{\"end\":55045,\"start\":55044},{\"end\":55052,\"start\":55051},{\"end\":55377,\"start\":55376},{\"end\":55389,\"start\":55388},{\"end\":55398,\"start\":55397},{\"end\":55406,\"start\":55405},{\"end\":55408,\"start\":55407},{\"end\":55764,\"start\":55763},{\"end\":55775,\"start\":55774},{\"end\":56133,\"start\":56132},{\"end\":56139,\"start\":56138},{\"end\":56145,\"start\":56144},{\"end\":56153,\"start\":56152},{\"end\":56160,\"start\":56159},{\"end\":56509,\"start\":56508},{\"end\":56519,\"start\":56518},{\"end\":56676,\"start\":56675},{\"end\":56685,\"start\":56684},{\"end\":56697,\"start\":56696},{\"end\":56710,\"start\":56709},{\"end\":56924,\"start\":56923},{\"end\":56933,\"start\":56932},{\"end\":56942,\"start\":56941},{\"end\":56949,\"start\":56948},{\"end\":56962,\"start\":56961},{\"end\":57243,\"start\":57242},{\"end\":57252,\"start\":57251},{\"end\":57262,\"start\":57261},{\"end\":57273,\"start\":57272},{\"end\":57280,\"start\":57279},{\"end\":57654,\"start\":57653},{\"end\":57664,\"start\":57663},{\"end\":57674,\"start\":57673},{\"end\":57685,\"start\":57684},{\"end\":58042,\"start\":58041},{\"end\":58059,\"start\":58058},{\"end\":58069,\"start\":58068},{\"end\":58562,\"start\":58561},{\"end\":58564,\"start\":58563},{\"end\":58579,\"start\":58578},{\"end\":58953,\"start\":58952},{\"end\":58965,\"start\":58964},{\"end\":58975,\"start\":58974},{\"end\":59258,\"start\":59257},{\"end\":59270,\"start\":59269},{\"end\":59279,\"start\":59278},{\"end\":59281,\"start\":59280},{\"end\":59291,\"start\":59290},{\"end\":59299,\"start\":59298},{\"end\":59312,\"start\":59311},{\"end\":59322,\"start\":59321},{\"end\":59333,\"start\":59332},{\"end\":59343,\"start\":59342},{\"end\":59345,\"start\":59344},{\"end\":59357,\"start\":59356},{\"end\":59366,\"start\":59365},{\"end\":59375,\"start\":59374},{\"end\":59385,\"start\":59384},{\"end\":59395,\"start\":59394},{\"end\":59406,\"start\":59405},{\"end\":59414,\"start\":59413},{\"end\":59423,\"start\":59422},{\"end\":59436,\"start\":59435},{\"end\":59447,\"start\":59446},{\"end\":59457,\"start\":59456},{\"end\":59466,\"start\":59465},{\"end\":59468,\"start\":59467},{\"end\":59479,\"start\":59478},{\"end\":59488,\"start\":59487},{\"end\":59498,\"start\":59497},{\"end\":59511,\"start\":59510},{\"end\":59521,\"start\":59520},{\"end\":59531,\"start\":59530},{\"end\":59540,\"start\":59539},{\"end\":59549,\"start\":59548},{\"end\":59558,\"start\":59557},{\"end\":59572,\"start\":59571},{\"end\":59585,\"start\":59584},{\"end\":59599,\"start\":59598},{\"end\":59613,\"start\":59612},{\"end\":59622,\"start\":59621},{\"end\":59634,\"start\":59633},{\"end\":59645,\"start\":59644},{\"end\":59660,\"start\":59659},{\"end\":59662,\"start\":59661},{\"end\":59671,\"start\":59670},{\"end\":59673,\"start\":59672},{\"end\":59682,\"start\":59681},{\"end\":59696,\"start\":59695},{\"end\":59704,\"start\":59703},{\"end\":60455,\"start\":60454},{\"end\":60462,\"start\":60461},{\"end\":60468,\"start\":60467},{\"end\":60476,\"start\":60475},{\"end\":60856,\"start\":60855},{\"end\":60868,\"start\":60867},{\"end\":61228,\"start\":61227},{\"end\":61241,\"start\":61240},{\"end\":61253,\"start\":61252},{\"end\":61262,\"start\":61261},{\"end\":61709,\"start\":61708},{\"end\":61719,\"start\":61718},{\"end\":61733,\"start\":61732},{\"end\":61752,\"start\":61746},{\"end\":62278,\"start\":62277},{\"end\":62285,\"start\":62284},{\"end\":62294,\"start\":62293},{\"end\":62698,\"start\":62697},{\"end\":62700,\"start\":62699},{\"end\":62713,\"start\":62712},{\"end\":62726,\"start\":62725},{\"end\":63449,\"start\":63448},{\"end\":63451,\"start\":63450},{\"end\":63464,\"start\":63463},{\"end\":63466,\"start\":63465},{\"end\":63477,\"start\":63476},{\"end\":63490,\"start\":63489},{\"end\":63499,\"start\":63498},{\"end\":63509,\"start\":63508},{\"end\":63756,\"start\":63755},{\"end\":63766,\"start\":63765},{\"end\":63779,\"start\":63778},{\"end\":64205,\"start\":64204},{\"end\":64215,\"start\":64214},{\"end\":64804,\"start\":64803},{\"end\":64818,\"start\":64817},{\"end\":64829,\"start\":64828},{\"end\":65196,\"start\":65195},{\"end\":65209,\"start\":65208},{\"end\":65218,\"start\":65217},{\"end\":65230,\"start\":65229},{\"end\":65241,\"start\":65240},{\"end\":65251,\"start\":65250},{\"end\":65262,\"start\":65261},{\"end\":65703,\"start\":65702},{\"end\":65712,\"start\":65711},{\"end\":65724,\"start\":65723},{\"end\":65737,\"start\":65736},{\"end\":66431,\"start\":66430},{\"end\":66443,\"start\":66442},{\"end\":66445,\"start\":66444},{\"end\":66465,\"start\":66464},{\"end\":66761,\"start\":66760},{\"end\":66774,\"start\":66773},{\"end\":66783,\"start\":66782},{\"end\":66796,\"start\":66795},{\"end\":66798,\"start\":66797},{\"end\":66810,\"start\":66809},{\"end\":66819,\"start\":66818},{\"end\":67194,\"start\":67193},{\"end\":67207,\"start\":67203},{\"end\":67216,\"start\":67215},{\"end\":67718,\"start\":67717},{\"end\":67725,\"start\":67724},{\"end\":67727,\"start\":67726},{\"end\":67738,\"start\":67737},{\"end\":67740,\"start\":67739},{\"end\":67755,\"start\":67754},{\"end\":67766,\"start\":67765},{\"end\":68141,\"start\":68140},{\"end\":68143,\"start\":68142},{\"end\":68153,\"start\":68152},{\"end\":68170,\"start\":68169},{\"end\":68181,\"start\":68180},{\"end\":68426,\"start\":68425},{\"end\":68437,\"start\":68436},{\"end\":68447,\"start\":68446},{\"end\":68463,\"start\":68462},{\"end\":68475,\"start\":68474},{\"end\":68495,\"start\":68494},{\"end\":68497,\"start\":68496},{\"end\":68507,\"start\":68506},{\"end\":68519,\"start\":68518},{\"end\":68531,\"start\":68530},{\"end\":68546,\"start\":68545},{\"end\":68555,\"start\":68554},{\"end\":68566,\"start\":68565},{\"end\":68580,\"start\":68579},{\"end\":68582,\"start\":68581},{\"end\":68760,\"start\":68759},{\"end\":68776,\"start\":68775},{\"end\":68778,\"start\":68777},{\"end\":68785,\"start\":68784},{\"end\":68798,\"start\":68797},{\"end\":68810,\"start\":68809},{\"end\":69315,\"start\":69314},{\"end\":69328,\"start\":69327},{\"end\":69341,\"start\":69340},{\"end\":69791,\"start\":69790},{\"end\":69795,\"start\":69792},{\"end\":69809,\"start\":69808},{\"end\":70122,\"start\":70121},{\"end\":70131,\"start\":70130},{\"end\":70142,\"start\":70141},{\"end\":70484,\"start\":70483},{\"end\":70494,\"start\":70493},{\"end\":70505,\"start\":70504},{\"end\":70517,\"start\":70516},{\"end\":70527,\"start\":70526},{\"end\":70536,\"start\":70535},{\"end\":70547,\"start\":70546},{\"end\":71107,\"start\":71106},{\"end\":71116,\"start\":71115},{\"end\":71118,\"start\":71117},{\"end\":71130,\"start\":71129},{\"end\":71140,\"start\":71139},{\"end\":71634,\"start\":71633},{\"end\":71654,\"start\":71653},{\"end\":71656,\"start\":71655},{\"end\":71667,\"start\":71666},{\"end\":71676,\"start\":71675},{\"end\":72087,\"start\":72086},{\"end\":72097,\"start\":72096},{\"end\":72111,\"start\":72107},{\"end\":72486,\"start\":72485},{\"end\":72495,\"start\":72494},{\"end\":72508,\"start\":72507},{\"end\":72873,\"start\":72872},{\"end\":72886,\"start\":72882},{\"end\":72898,\"start\":72894},{\"end\":72907,\"start\":72906},{\"end\":72918,\"start\":72917},{\"end\":73238,\"start\":73237},{\"end\":73247,\"start\":73246},{\"end\":73611,\"start\":73610},{\"end\":73624,\"start\":73623},{\"end\":74150,\"start\":74149},{\"end\":74160,\"start\":74159},{\"end\":74173,\"start\":74172},{\"end\":74175,\"start\":74174},{\"end\":74184,\"start\":74183},{\"end\":74806,\"start\":74805},{\"end\":74819,\"start\":74818},{\"end\":74833,\"start\":74832},{\"end\":75351,\"start\":75350},{\"end\":75366,\"start\":75365},{\"end\":75377,\"start\":75376},{\"end\":75386,\"start\":75385},{\"end\":75396,\"start\":75395},{\"end\":75407,\"start\":75406},{\"end\":75417,\"start\":75416},{\"end\":75900,\"start\":75899},{\"end\":75913,\"start\":75912},{\"end\":76504,\"start\":76503},{\"end\":76513,\"start\":76512},{\"end\":76524,\"start\":76523},{\"end\":76903,\"start\":76902},{\"end\":76914,\"start\":76913},{\"end\":77452,\"start\":77451},{\"end\":77463,\"start\":77462},{\"end\":77859,\"start\":77858},{\"end\":78093,\"start\":78092},{\"end\":78380,\"start\":78379},{\"end\":78389,\"start\":78388},{\"end\":78399,\"start\":78398},{\"end\":78410,\"start\":78409},{\"end\":78412,\"start\":78411},{\"end\":78421,\"start\":78420},{\"end\":78896,\"start\":78895},{\"end\":78905,\"start\":78904},{\"end\":78915,\"start\":78914},{\"end\":78924,\"start\":78923},{\"end\":78932,\"start\":78931},{\"end\":79237,\"start\":79236},{\"end\":79616,\"start\":79615},{\"end\":79625,\"start\":79624},{\"end\":79633,\"start\":79632},{\"end\":79644,\"start\":79643},{\"end\":79856,\"start\":79855},{\"end\":79865,\"start\":79864},{\"end\":79876,\"start\":79875},{\"end\":79886,\"start\":79885},{\"end\":79895,\"start\":79894},{\"end\":79908,\"start\":79907},{\"end\":79920,\"start\":79919},{\"end\":79930,\"start\":79929},{\"end\":79943,\"start\":79942},{\"end\":79952,\"start\":79951},{\"end\":79954,\"start\":79953},{\"end\":80400,\"start\":80399},{\"end\":80409,\"start\":80408},{\"end\":80413,\"start\":80410},{\"end\":80422,\"start\":80421},{\"end\":80436,\"start\":80435},{\"end\":80447,\"start\":80446},{\"end\":80457,\"start\":80456},{\"end\":80470,\"start\":80469},{\"end\":80484,\"start\":80483},{\"end\":80495,\"start\":80494},{\"end\":80508,\"start\":80507},{\"end\":80517,\"start\":80516},{\"end\":80528,\"start\":80527},{\"end\":80545,\"start\":80544},{\"end\":80547,\"start\":80546},{\"end\":80559,\"start\":80558},{\"end\":80938,\"start\":80937},{\"end\":80944,\"start\":80943},{\"end\":80956,\"start\":80955},{\"end\":80966,\"start\":80965},{\"end\":80980,\"start\":80979},{\"end\":80995,\"start\":80994},{\"end\":81006,\"start\":81005},{\"end\":81586,\"start\":81585},{\"end\":81596,\"start\":81595},{\"end\":81605,\"start\":81604},{\"end\":81616,\"start\":81615},{\"end\":82051,\"start\":82050},{\"end\":82055,\"start\":82052},{\"end\":82071,\"start\":82070},{\"end\":82073,\"start\":82072},{\"end\":82083,\"start\":82082},{\"end\":82407,\"start\":82406},{\"end\":82417,\"start\":82416},{\"end\":82426,\"start\":82425},{\"end\":82744,\"start\":82743},{\"end\":82756,\"start\":82755},{\"end\":82765,\"start\":82764},{\"end\":82767,\"start\":82766},{\"end\":83328,\"start\":83327},{\"end\":83341,\"start\":83340},{\"end\":83347,\"start\":83346},{\"end\":83349,\"start\":83348},{\"end\":83358,\"start\":83357},{\"end\":83824,\"start\":83823},{\"end\":83834,\"start\":83833},{\"end\":84077,\"start\":84074},{\"end\":84094,\"start\":84089},{\"end\":84108,\"start\":84102},{\"end\":84402,\"start\":84401},{\"end\":84414,\"start\":84413},{\"end\":84421,\"start\":84420},{\"end\":84434,\"start\":84433},{\"end\":84845,\"start\":84844},{\"end\":84857,\"start\":84856},{\"end\":84867,\"start\":84866},{\"end\":84877,\"start\":84876},{\"end\":84884,\"start\":84883},{\"end\":85120,\"start\":85119},{\"end\":85128,\"start\":85127},{\"end\":85135,\"start\":85134},{\"end\":85144,\"start\":85143}]", "bib_author_last_name": "[{\"end\":54733,\"start\":54728},{\"end\":54745,\"start\":54737},{\"end\":54756,\"start\":54749},{\"end\":54768,\"start\":54760},{\"end\":55042,\"start\":55037},{\"end\":55049,\"start\":55046},{\"end\":55060,\"start\":55053},{\"end\":55386,\"start\":55378},{\"end\":55395,\"start\":55390},{\"end\":55403,\"start\":55399},{\"end\":55418,\"start\":55409},{\"end\":55772,\"start\":55765},{\"end\":55784,\"start\":55776},{\"end\":56136,\"start\":56134},{\"end\":56142,\"start\":56140},{\"end\":56150,\"start\":56146},{\"end\":56157,\"start\":56154},{\"end\":56165,\"start\":56161},{\"end\":56516,\"start\":56510},{\"end\":56527,\"start\":56520},{\"end\":56682,\"start\":56677},{\"end\":56694,\"start\":56686},{\"end\":56707,\"start\":56698},{\"end\":56718,\"start\":56711},{\"end\":56726,\"start\":56720},{\"end\":56733,\"start\":56728},{\"end\":56930,\"start\":56925},{\"end\":56939,\"start\":56934},{\"end\":56946,\"start\":56943},{\"end\":56959,\"start\":56950},{\"end\":56972,\"start\":56963},{\"end\":57249,\"start\":57244},{\"end\":57259,\"start\":57253},{\"end\":57270,\"start\":57263},{\"end\":57277,\"start\":57274},{\"end\":57286,\"start\":57281},{\"end\":57661,\"start\":57655},{\"end\":57671,\"start\":57665},{\"end\":57682,\"start\":57675},{\"end\":57694,\"start\":57686},{\"end\":58056,\"start\":58043},{\"end\":58066,\"start\":58060},{\"end\":58081,\"start\":58070},{\"end\":58576,\"start\":58565},{\"end\":58589,\"start\":58580},{\"end\":58962,\"start\":58954},{\"end\":58972,\"start\":58966},{\"end\":58982,\"start\":58976},{\"end\":59267,\"start\":59259},{\"end\":59276,\"start\":59271},{\"end\":59288,\"start\":59282},{\"end\":59296,\"start\":59292},{\"end\":59309,\"start\":59300},{\"end\":59319,\"start\":59313},{\"end\":59330,\"start\":59323},{\"end\":59340,\"start\":59334},{\"end\":59354,\"start\":59346},{\"end\":59363,\"start\":59358},{\"end\":59372,\"start\":59367},{\"end\":59382,\"start\":59376},{\"end\":59392,\"start\":59386},{\"end\":59403,\"start\":59396},{\"end\":59411,\"start\":59407},{\"end\":59420,\"start\":59415},{\"end\":59433,\"start\":59424},{\"end\":59444,\"start\":59437},{\"end\":59454,\"start\":59448},{\"end\":59463,\"start\":59458},{\"end\":59476,\"start\":59469},{\"end\":59485,\"start\":59480},{\"end\":59495,\"start\":59489},{\"end\":59508,\"start\":59499},{\"end\":59518,\"start\":59512},{\"end\":59528,\"start\":59522},{\"end\":59537,\"start\":59532},{\"end\":59546,\"start\":59541},{\"end\":59555,\"start\":59550},{\"end\":59569,\"start\":59559},{\"end\":59582,\"start\":59573},{\"end\":59596,\"start\":59586},{\"end\":59610,\"start\":59600},{\"end\":59619,\"start\":59614},{\"end\":59631,\"start\":59623},{\"end\":59642,\"start\":59635},{\"end\":59657,\"start\":59646},{\"end\":59668,\"start\":59663},{\"end\":59679,\"start\":59674},{\"end\":59693,\"start\":59683},{\"end\":59701,\"start\":59697},{\"end\":59711,\"start\":59705},{\"end\":60459,\"start\":60456},{\"end\":60465,\"start\":60463},{\"end\":60473,\"start\":60469},{\"end\":60480,\"start\":60477},{\"end\":60865,\"start\":60857},{\"end\":60874,\"start\":60869},{\"end\":61238,\"start\":61229},{\"end\":61250,\"start\":61242},{\"end\":61259,\"start\":61254},{\"end\":61268,\"start\":61263},{\"end\":61716,\"start\":61710},{\"end\":61730,\"start\":61720},{\"end\":61744,\"start\":61734},{\"end\":62282,\"start\":62279},{\"end\":62291,\"start\":62286},{\"end\":62300,\"start\":62295},{\"end\":62710,\"start\":62701},{\"end\":62723,\"start\":62714},{\"end\":62737,\"start\":62727},{\"end\":63461,\"start\":63452},{\"end\":63474,\"start\":63467},{\"end\":63487,\"start\":63478},{\"end\":63496,\"start\":63491},{\"end\":63506,\"start\":63500},{\"end\":63513,\"start\":63510},{\"end\":63763,\"start\":63757},{\"end\":63776,\"start\":63767},{\"end\":63786,\"start\":63780},{\"end\":64212,\"start\":64206},{\"end\":64224,\"start\":64216},{\"end\":64815,\"start\":64805},{\"end\":64826,\"start\":64819},{\"end\":64842,\"start\":64830},{\"end\":65206,\"start\":65197},{\"end\":65215,\"start\":65210},{\"end\":65227,\"start\":65219},{\"end\":65238,\"start\":65231},{\"end\":65248,\"start\":65242},{\"end\":65259,\"start\":65252},{\"end\":65270,\"start\":65263},{\"end\":65709,\"start\":65704},{\"end\":65721,\"start\":65713},{\"end\":65734,\"start\":65725},{\"end\":65743,\"start\":65738},{\"end\":66440,\"start\":66432},{\"end\":66462,\"start\":66446},{\"end\":66472,\"start\":66466},{\"end\":66771,\"start\":66762},{\"end\":66780,\"start\":66775},{\"end\":66793,\"start\":66784},{\"end\":66807,\"start\":66799},{\"end\":66816,\"start\":66811},{\"end\":66825,\"start\":66820},{\"end\":67201,\"start\":67195},{\"end\":67213,\"start\":67208},{\"end\":67224,\"start\":67217},{\"end\":67722,\"start\":67719},{\"end\":67735,\"start\":67728},{\"end\":67752,\"start\":67741},{\"end\":67763,\"start\":67756},{\"end\":67771,\"start\":67767},{\"end\":68150,\"start\":68144},{\"end\":68167,\"start\":68154},{\"end\":68178,\"start\":68171},{\"end\":68189,\"start\":68182},{\"end\":68434,\"start\":68427},{\"end\":68444,\"start\":68438},{\"end\":68460,\"start\":68448},{\"end\":68472,\"start\":68464},{\"end\":68492,\"start\":68476},{\"end\":68504,\"start\":68498},{\"end\":68516,\"start\":68508},{\"end\":68528,\"start\":68520},{\"end\":68543,\"start\":68532},{\"end\":68552,\"start\":68547},{\"end\":68563,\"start\":68556},{\"end\":68577,\"start\":68567},{\"end\":68773,\"start\":68761},{\"end\":68782,\"start\":68779},{\"end\":68795,\"start\":68786},{\"end\":68807,\"start\":68799},{\"end\":68815,\"start\":68811},{\"end\":68822,\"start\":68817},{\"end\":69325,\"start\":69316},{\"end\":69338,\"start\":69329},{\"end\":69347,\"start\":69342},{\"end\":69806,\"start\":69796},{\"end\":69815,\"start\":69810},{\"end\":70128,\"start\":70123},{\"end\":70139,\"start\":70132},{\"end\":70148,\"start\":70143},{\"end\":70491,\"start\":70485},{\"end\":70502,\"start\":70495},{\"end\":70514,\"start\":70506},{\"end\":70524,\"start\":70518},{\"end\":70533,\"start\":70528},{\"end\":70544,\"start\":70537},{\"end\":70555,\"start\":70548},{\"end\":71113,\"start\":71108},{\"end\":71127,\"start\":71119},{\"end\":71137,\"start\":71131},{\"end\":71148,\"start\":71141},{\"end\":71651,\"start\":71635},{\"end\":71664,\"start\":71657},{\"end\":71673,\"start\":71668},{\"end\":71685,\"start\":71677},{\"end\":72094,\"start\":72088},{\"end\":72105,\"start\":72098},{\"end\":72117,\"start\":72112},{\"end\":72492,\"start\":72487},{\"end\":72505,\"start\":72496},{\"end\":72514,\"start\":72509},{\"end\":72880,\"start\":72874},{\"end\":72892,\"start\":72887},{\"end\":72904,\"start\":72899},{\"end\":72915,\"start\":72908},{\"end\":72929,\"start\":72919},{\"end\":73244,\"start\":73239},{\"end\":73253,\"start\":73248},{\"end\":73621,\"start\":73612},{\"end\":73631,\"start\":73625},{\"end\":74157,\"start\":74151},{\"end\":74170,\"start\":74161},{\"end\":74181,\"start\":74176},{\"end\":74191,\"start\":74185},{\"end\":74816,\"start\":74807},{\"end\":74830,\"start\":74820},{\"end\":74842,\"start\":74834},{\"end\":75363,\"start\":75352},{\"end\":75374,\"start\":75367},{\"end\":75383,\"start\":75378},{\"end\":75393,\"start\":75387},{\"end\":75404,\"start\":75397},{\"end\":75414,\"start\":75408},{\"end\":75428,\"start\":75418},{\"end\":75436,\"start\":75430},{\"end\":75910,\"start\":75901},{\"end\":75924,\"start\":75914},{\"end\":76510,\"start\":76505},{\"end\":76521,\"start\":76514},{\"end\":76531,\"start\":76525},{\"end\":76911,\"start\":76904},{\"end\":76920,\"start\":76915},{\"end\":77460,\"start\":77453},{\"end\":77471,\"start\":77464},{\"end\":77866,\"start\":77860},{\"end\":78100,\"start\":78094},{\"end\":78386,\"start\":78381},{\"end\":78396,\"start\":78390},{\"end\":78407,\"start\":78400},{\"end\":78418,\"start\":78413},{\"end\":78428,\"start\":78422},{\"end\":78902,\"start\":78897},{\"end\":78912,\"start\":78906},{\"end\":78921,\"start\":78916},{\"end\":78929,\"start\":78925},{\"end\":78941,\"start\":78933},{\"end\":79243,\"start\":79238},{\"end\":79622,\"start\":79617},{\"end\":79630,\"start\":79626},{\"end\":79641,\"start\":79634},{\"end\":79652,\"start\":79645},{\"end\":79862,\"start\":79857},{\"end\":79873,\"start\":79866},{\"end\":79883,\"start\":79877},{\"end\":79892,\"start\":79887},{\"end\":79905,\"start\":79896},{\"end\":79917,\"start\":79909},{\"end\":79927,\"start\":79921},{\"end\":79940,\"start\":79931},{\"end\":79949,\"start\":79944},{\"end\":79962,\"start\":79955},{\"end\":80406,\"start\":80401},{\"end\":80419,\"start\":80414},{\"end\":80433,\"start\":80423},{\"end\":80444,\"start\":80437},{\"end\":80454,\"start\":80448},{\"end\":80467,\"start\":80458},{\"end\":80481,\"start\":80471},{\"end\":80492,\"start\":80485},{\"end\":80505,\"start\":80496},{\"end\":80514,\"start\":80509},{\"end\":80525,\"start\":80518},{\"end\":80542,\"start\":80529},{\"end\":80556,\"start\":80548},{\"end\":80571,\"start\":80560},{\"end\":80941,\"start\":80939},{\"end\":80953,\"start\":80945},{\"end\":80963,\"start\":80957},{\"end\":80977,\"start\":80967},{\"end\":80992,\"start\":80981},{\"end\":81003,\"start\":80996},{\"end\":81016,\"start\":81007},{\"end\":81593,\"start\":81587},{\"end\":81602,\"start\":81597},{\"end\":81613,\"start\":81606},{\"end\":81622,\"start\":81617},{\"end\":82068,\"start\":82056},{\"end\":82080,\"start\":82074},{\"end\":82090,\"start\":82084},{\"end\":82414,\"start\":82408},{\"end\":82423,\"start\":82418},{\"end\":82436,\"start\":82427},{\"end\":82753,\"start\":82745},{\"end\":82762,\"start\":82757},{\"end\":82774,\"start\":82768},{\"end\":83338,\"start\":83329},{\"end\":83344,\"start\":83342},{\"end\":83355,\"start\":83350},{\"end\":83361,\"start\":83359},{\"end\":83831,\"start\":83825},{\"end\":83842,\"start\":83835},{\"end\":84087,\"start\":84078},{\"end\":84100,\"start\":84095},{\"end\":84115,\"start\":84109},{\"end\":84411,\"start\":84403},{\"end\":84418,\"start\":84415},{\"end\":84431,\"start\":84422},{\"end\":84442,\"start\":84435},{\"end\":84854,\"start\":84846},{\"end\":84864,\"start\":84858},{\"end\":84874,\"start\":84868},{\"end\":84881,\"start\":84878},{\"end\":84892,\"start\":84885},{\"end\":85125,\"start\":85121},{\"end\":85132,\"start\":85129},{\"end\":85141,\"start\":85136},{\"end\":85148,\"start\":85145}]", "bib_entry": "[{\"attributes\":{\"doi\":\"10.1016/j.procir.2013.07.056\",\"id\":\"b0\",\"matched_paper_id\":110879811},\"end\":55031,\"start\":54635},{\"attributes\":{\"doi\":\"10.1016/j.cirp.2010.05.004\",\"id\":\"b1\"},\"end\":55286,\"start\":55033},{\"attributes\":{\"id\":\"b2\"},\"end\":55663,\"start\":55288},{\"attributes\":{\"doi\":\"10.1109/EMR.2006.261384\",\"id\":\"b3\",\"matched_paper_id\":29982179},\"end\":56034,\"start\":55665},{\"attributes\":{\"doi\":\"10.1016/j.compind.2015.12.004\",\"id\":\"b4\",\"matched_paper_id\":46444645},\"end\":56441,\"start\":56036},{\"attributes\":{\"id\":\"b5\"},\"end\":56671,\"start\":56443},{\"attributes\":{\"doi\":\"10.1109/MS.2016.68\",\"id\":\"b6\"},\"end\":56877,\"start\":56673},{\"attributes\":{\"doi\":\"10.1145/3359981\",\"id\":\"b7\",\"matched_paper_id\":202565500},\"end\":57175,\"start\":56879},{\"attributes\":{\"doi\":\"10.1016/j.cirpj.2020.02.002\",\"id\":\"b8\",\"matched_paper_id\":216362509},\"end\":57601,\"start\":57177},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":26287574},\"end\":57857,\"start\":57603},{\"attributes\":{\"doi\":\"10.1109/MIE.2011.942175\",\"id\":\"b10\"},\"end\":57924,\"start\":57859},{\"attributes\":{\"doi\":\"10.1109/MIE.2017.2649104\",\"id\":\"b11\",\"matched_paper_id\":41685384},\"end\":58375,\"start\":57926},{\"attributes\":{\"doi\":\"10.1016/j.compind.2016.09.006\",\"id\":\"b12\",\"matched_paper_id\":38915897},\"end\":58948,\"start\":58377},{\"attributes\":{\"id\":\"b13\"},\"end\":59253,\"start\":58950},{\"attributes\":{\"doi\":\"10.1007/978-3-642-35813-5_1\",\"id\":\"b14\"},\"end\":60452,\"start\":59255},{\"attributes\":{\"doi\":\"10.1016/j.eng.2019.01.014\",\"id\":\"b15\"},\"end\":60853,\"start\":60454},{\"attributes\":{\"id\":\"b16\"},\"end\":61170,\"start\":60855},{\"attributes\":{\"id\":\"b17\"},\"end\":61706,\"start\":61172},{\"attributes\":{\"id\":\"b18\"},\"end\":62187,\"start\":61708},{\"attributes\":{\"doi\":\"10.1016/j.rcim.2020.101956\",\"id\":\"b19\",\"matched_paper_id\":213822665},\"end\":62610,\"start\":62189},{\"attributes\":{\"doi\":\"10.1016/j.aei.2018.11.009\",\"id\":\"b20\",\"matched_paper_id\":85518616},\"end\":63228,\"start\":62612},{\"attributes\":{\"id\":\"b21\"},\"end\":63399,\"start\":63230},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":219486138},\"end\":63680,\"start\":63401},{\"attributes\":{\"doi\":\"10.1016/j.cirp.2020.04.086\",\"id\":\"b23\"},\"end\":63753,\"start\":63682},{\"attributes\":{\"id\":\"b24\"},\"end\":64202,\"start\":63755},{\"attributes\":{\"id\":\"b25\"},\"end\":64750,\"start\":64204},{\"attributes\":{\"doi\":\"10.1016/j.compind.2020.103316\",\"id\":\"b26\",\"matched_paper_id\":225170408},\"end\":65087,\"start\":64752},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":225037060},\"end\":65534,\"start\":65089},{\"attributes\":{\"doi\":\"10.1016/j.compind.2020.103298\",\"id\":\"b28\"},\"end\":65613,\"start\":65536},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":50770853},\"end\":66364,\"start\":65615},{\"attributes\":{\"doi\":\"10.1109/MS.2006.35\",\"id\":\"b30\",\"matched_paper_id\":10205440},\"end\":66681,\"start\":66366},{\"attributes\":{\"doi\":\"10.1109/TSE.2017.2738640\",\"id\":\"b31\",\"matched_paper_id\":53283141},\"end\":67119,\"start\":66683},{\"attributes\":{\"id\":\"b32\"},\"end\":67593,\"start\":67121},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":15247066},\"end\":68020,\"start\":67595},{\"attributes\":{\"doi\":\"10.1109/TII.2016.2595401\",\"id\":\"b34\"},\"end\":68089,\"start\":68022},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":4820917},\"end\":68344,\"start\":68091},{\"attributes\":{\"doi\":\"10.1016/j.procir.2015.12.076\",\"id\":\"b36\"},\"end\":68421,\"start\":68346},{\"attributes\":{\"id\":\"b37\"},\"end\":68757,\"start\":68423},{\"attributes\":{\"id\":\"b38\"},\"end\":69255,\"start\":68759},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":18915165},\"end\":69706,\"start\":69257},{\"attributes\":{\"doi\":\"10.1145/2724719\",\"id\":\"b40\",\"matched_paper_id\":15743561},\"end\":70055,\"start\":69708},{\"attributes\":{\"doi\":\"10.1007/s10458-006-0012-0\",\"id\":\"b41\",\"matched_paper_id\":13347050},\"end\":70390,\"start\":70057},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":4612794},\"end\":71015,\"start\":70392},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":52304882},\"end\":71504,\"start\":71017},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":21467564},\"end\":71962,\"start\":71506},{\"attributes\":{\"doi\":\"10.1016/j.infsof.2017.03.013\",\"id\":\"b45\"},\"end\":72039,\"start\":71964},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":30338070},\"end\":72397,\"start\":72041},{\"attributes\":{\"doi\":\"10.1016/j.jss.2020.110626\",\"id\":\"b47\",\"matched_paper_id\":217084722},\"end\":72796,\"start\":72399},{\"attributes\":{\"doi\":\"10.1109/MC.2004.175\",\"id\":\"b48\",\"matched_paper_id\":9335785},\"end\":73162,\"start\":72798},{\"attributes\":{\"doi\":\"10.1016/j.compind.2020.103382\",\"id\":\"b49\",\"matched_paper_id\":231947747},\"end\":73496,\"start\":73164},{\"attributes\":{\"id\":\"b50\"},\"end\":74055,\"start\":73498},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":225070126},\"end\":74393,\"start\":74057},{\"attributes\":{\"id\":\"b52\"},\"end\":74719,\"start\":74395},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":221309756},\"end\":75348,\"start\":74721},{\"attributes\":{\"doi\":\"2019 -3/26/2019\",\"id\":\"b54\"},\"end\":75797,\"start\":75350},{\"attributes\":{\"id\":\"b55\",\"matched_paper_id\":234487396},\"end\":76357,\"start\":75799},{\"attributes\":{\"id\":\"b56\"},\"end\":76806,\"start\":76359},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":237309701},\"end\":77399,\"start\":76808},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":14945167},\"end\":77856,\"start\":77401},{\"attributes\":{\"id\":\"b59\"},\"end\":78008,\"start\":77858},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":9750622},\"end\":78271,\"start\":78010},{\"attributes\":{\"doi\":\"10.1109/TIE.2010.2062473\",\"id\":\"b61\"},\"end\":78340,\"start\":78273},{\"attributes\":{\"id\":\"b62\",\"matched_paper_id\":208946726},\"end\":78833,\"start\":78342},{\"attributes\":{\"doi\":\"10.1002/smr.2407\",\"id\":\"b63\",\"matched_paper_id\":244702323},\"end\":79200,\"start\":78835},{\"attributes\":{\"id\":\"b64\"},\"end\":79546,\"start\":79202},{\"attributes\":{\"id\":\"b65\"},\"end\":79853,\"start\":79548},{\"attributes\":{\"doi\":\"10.1007/978-3-642-35813-5_4\",\"id\":\"b66\"},\"end\":80305,\"start\":79855},{\"attributes\":{\"id\":\"b67\"},\"end\":80865,\"start\":80307},{\"attributes\":{\"id\":\"b68\",\"matched_paper_id\":57760221},\"end\":81500,\"start\":80867},{\"attributes\":{\"id\":\"b69\",\"matched_paper_id\":246211780},\"end\":81958,\"start\":81502},{\"attributes\":{\"doi\":\"10.1007/s10845-019-01516-6\",\"id\":\"b70\",\"matched_paper_id\":213429714},\"end\":82350,\"start\":81960},{\"attributes\":{\"doi\":\"10.1016/j.compind.2019.103130\",\"id\":\"b71\",\"matched_paper_id\":207960356},\"end\":82675,\"start\":82352},{\"attributes\":{\"doi\":\"10.1016/j.procir.2016.06.113\",\"id\":\"b72\",\"matched_paper_id\":114836903},\"end\":83001,\"start\":82677},{\"attributes\":{\"id\":\"b73\"},\"end\":83241,\"start\":83003},{\"attributes\":{\"doi\":\"10.1016/j.aei.2020.101225\",\"id\":\"b74\",\"matched_paper_id\":230556710},\"end\":83647,\"start\":83243},{\"attributes\":{\"id\":\"b75\"},\"end\":83786,\"start\":83649},{\"attributes\":{\"id\":\"b76\"},\"end\":83955,\"start\":83788},{\"attributes\":{\"id\":\"b77\"},\"end\":84399,\"start\":83957},{\"attributes\":{\"id\":\"b78\"},\"end\":84736,\"start\":84401},{\"attributes\":{\"id\":\"b79\"},\"end\":85060,\"start\":84738},{\"attributes\":{\"id\":\"b80\",\"matched_paper_id\":3675544},\"end\":85464,\"start\":85062}]", "bib_title": "[{\"end\":54724,\"start\":54635},{\"end\":55374,\"start\":55288},{\"end\":55761,\"start\":55665},{\"end\":56130,\"start\":56036},{\"end\":56506,\"start\":56443},{\"end\":56921,\"start\":56879},{\"end\":57240,\"start\":57177},{\"end\":57651,\"start\":57603},{\"end\":58039,\"start\":57926},{\"end\":58559,\"start\":58377},{\"end\":62275,\"start\":62189},{\"end\":62695,\"start\":62612},{\"end\":63446,\"start\":63401},{\"end\":64801,\"start\":64752},{\"end\":65193,\"start\":65089},{\"end\":65700,\"start\":65615},{\"end\":66428,\"start\":66366},{\"end\":66758,\"start\":66683},{\"end\":67715,\"start\":67595},{\"end\":68138,\"start\":68091},{\"end\":69312,\"start\":69257},{\"end\":69788,\"start\":69708},{\"end\":70119,\"start\":70057},{\"end\":70481,\"start\":70392},{\"end\":71104,\"start\":71017},{\"end\":71631,\"start\":71506},{\"end\":72084,\"start\":72041},{\"end\":72483,\"start\":72399},{\"end\":72870,\"start\":72798},{\"end\":73235,\"start\":73164},{\"end\":74147,\"start\":74057},{\"end\":74803,\"start\":74721},{\"end\":75897,\"start\":75799},{\"end\":76900,\"start\":76808},{\"end\":77449,\"start\":77401},{\"end\":78090,\"start\":78010},{\"end\":78377,\"start\":78342},{\"end\":78893,\"start\":78835},{\"end\":80935,\"start\":80867},{\"end\":81583,\"start\":81502},{\"end\":82048,\"start\":81960},{\"end\":82404,\"start\":82352},{\"end\":82741,\"start\":82677},{\"end\":83325,\"start\":83243},{\"end\":85117,\"start\":85062}]", "bib_author": "[{\"end\":54735,\"start\":54726},{\"end\":54747,\"start\":54735},{\"end\":54758,\"start\":54747},{\"end\":54770,\"start\":54758},{\"end\":55044,\"start\":55035},{\"end\":55051,\"start\":55044},{\"end\":55062,\"start\":55051},{\"end\":55388,\"start\":55376},{\"end\":55397,\"start\":55388},{\"end\":55405,\"start\":55397},{\"end\":55420,\"start\":55405},{\"end\":55774,\"start\":55763},{\"end\":55786,\"start\":55774},{\"end\":56138,\"start\":56132},{\"end\":56144,\"start\":56138},{\"end\":56152,\"start\":56144},{\"end\":56159,\"start\":56152},{\"end\":56167,\"start\":56159},{\"end\":56518,\"start\":56508},{\"end\":56529,\"start\":56518},{\"end\":56684,\"start\":56675},{\"end\":56696,\"start\":56684},{\"end\":56709,\"start\":56696},{\"end\":56720,\"start\":56709},{\"end\":56728,\"start\":56720},{\"end\":56735,\"start\":56728},{\"end\":56932,\"start\":56923},{\"end\":56941,\"start\":56932},{\"end\":56948,\"start\":56941},{\"end\":56961,\"start\":56948},{\"end\":56974,\"start\":56961},{\"end\":57251,\"start\":57242},{\"end\":57261,\"start\":57251},{\"end\":57272,\"start\":57261},{\"end\":57279,\"start\":57272},{\"end\":57288,\"start\":57279},{\"end\":57663,\"start\":57653},{\"end\":57673,\"start\":57663},{\"end\":57684,\"start\":57673},{\"end\":57696,\"start\":57684},{\"end\":58058,\"start\":58041},{\"end\":58068,\"start\":58058},{\"end\":58083,\"start\":58068},{\"end\":58578,\"start\":58561},{\"end\":58591,\"start\":58578},{\"end\":58964,\"start\":58952},{\"end\":58974,\"start\":58964},{\"end\":58984,\"start\":58974},{\"end\":59269,\"start\":59257},{\"end\":59278,\"start\":59269},{\"end\":59290,\"start\":59278},{\"end\":59298,\"start\":59290},{\"end\":59311,\"start\":59298},{\"end\":59321,\"start\":59311},{\"end\":59332,\"start\":59321},{\"end\":59342,\"start\":59332},{\"end\":59356,\"start\":59342},{\"end\":59365,\"start\":59356},{\"end\":59374,\"start\":59365},{\"end\":59384,\"start\":59374},{\"end\":59394,\"start\":59384},{\"end\":59405,\"start\":59394},{\"end\":59413,\"start\":59405},{\"end\":59422,\"start\":59413},{\"end\":59435,\"start\":59422},{\"end\":59446,\"start\":59435},{\"end\":59456,\"start\":59446},{\"end\":59465,\"start\":59456},{\"end\":59478,\"start\":59465},{\"end\":59487,\"start\":59478},{\"end\":59497,\"start\":59487},{\"end\":59510,\"start\":59497},{\"end\":59520,\"start\":59510},{\"end\":59530,\"start\":59520},{\"end\":59539,\"start\":59530},{\"end\":59548,\"start\":59539},{\"end\":59557,\"start\":59548},{\"end\":59571,\"start\":59557},{\"end\":59584,\"start\":59571},{\"end\":59598,\"start\":59584},{\"end\":59612,\"start\":59598},{\"end\":59621,\"start\":59612},{\"end\":59633,\"start\":59621},{\"end\":59644,\"start\":59633},{\"end\":59659,\"start\":59644},{\"end\":59670,\"start\":59659},{\"end\":59681,\"start\":59670},{\"end\":59695,\"start\":59681},{\"end\":59703,\"start\":59695},{\"end\":59713,\"start\":59703},{\"end\":60461,\"start\":60454},{\"end\":60467,\"start\":60461},{\"end\":60475,\"start\":60467},{\"end\":60482,\"start\":60475},{\"end\":60867,\"start\":60855},{\"end\":60876,\"start\":60867},{\"end\":61240,\"start\":61227},{\"end\":61252,\"start\":61240},{\"end\":61261,\"start\":61252},{\"end\":61270,\"start\":61261},{\"end\":61718,\"start\":61708},{\"end\":61732,\"start\":61718},{\"end\":61746,\"start\":61732},{\"end\":61755,\"start\":61746},{\"end\":62284,\"start\":62277},{\"end\":62293,\"start\":62284},{\"end\":62302,\"start\":62293},{\"end\":62712,\"start\":62697},{\"end\":62725,\"start\":62712},{\"end\":62739,\"start\":62725},{\"end\":63463,\"start\":63448},{\"end\":63476,\"start\":63463},{\"end\":63489,\"start\":63476},{\"end\":63498,\"start\":63489},{\"end\":63508,\"start\":63498},{\"end\":63515,\"start\":63508},{\"end\":63765,\"start\":63755},{\"end\":63778,\"start\":63765},{\"end\":63788,\"start\":63778},{\"end\":64214,\"start\":64204},{\"end\":64226,\"start\":64214},{\"end\":64817,\"start\":64803},{\"end\":64828,\"start\":64817},{\"end\":64844,\"start\":64828},{\"end\":65208,\"start\":65195},{\"end\":65217,\"start\":65208},{\"end\":65229,\"start\":65217},{\"end\":65240,\"start\":65229},{\"end\":65250,\"start\":65240},{\"end\":65261,\"start\":65250},{\"end\":65272,\"start\":65261},{\"end\":65711,\"start\":65702},{\"end\":65723,\"start\":65711},{\"end\":65736,\"start\":65723},{\"end\":65745,\"start\":65736},{\"end\":66442,\"start\":66430},{\"end\":66464,\"start\":66442},{\"end\":66474,\"start\":66464},{\"end\":66773,\"start\":66760},{\"end\":66782,\"start\":66773},{\"end\":66795,\"start\":66782},{\"end\":66809,\"start\":66795},{\"end\":66818,\"start\":66809},{\"end\":66827,\"start\":66818},{\"end\":67203,\"start\":67193},{\"end\":67215,\"start\":67203},{\"end\":67226,\"start\":67215},{\"end\":67724,\"start\":67717},{\"end\":67737,\"start\":67724},{\"end\":67754,\"start\":67737},{\"end\":67765,\"start\":67754},{\"end\":67773,\"start\":67765},{\"end\":68152,\"start\":68140},{\"end\":68169,\"start\":68152},{\"end\":68180,\"start\":68169},{\"end\":68191,\"start\":68180},{\"end\":68436,\"start\":68425},{\"end\":68446,\"start\":68436},{\"end\":68462,\"start\":68446},{\"end\":68474,\"start\":68462},{\"end\":68494,\"start\":68474},{\"end\":68506,\"start\":68494},{\"end\":68518,\"start\":68506},{\"end\":68530,\"start\":68518},{\"end\":68545,\"start\":68530},{\"end\":68554,\"start\":68545},{\"end\":68565,\"start\":68554},{\"end\":68579,\"start\":68565},{\"end\":68585,\"start\":68579},{\"end\":68775,\"start\":68759},{\"end\":68784,\"start\":68775},{\"end\":68797,\"start\":68784},{\"end\":68809,\"start\":68797},{\"end\":68817,\"start\":68809},{\"end\":68824,\"start\":68817},{\"end\":69327,\"start\":69314},{\"end\":69340,\"start\":69327},{\"end\":69349,\"start\":69340},{\"end\":69808,\"start\":69790},{\"end\":69817,\"start\":69808},{\"end\":70130,\"start\":70121},{\"end\":70141,\"start\":70130},{\"end\":70150,\"start\":70141},{\"end\":70493,\"start\":70483},{\"end\":70504,\"start\":70493},{\"end\":70516,\"start\":70504},{\"end\":70526,\"start\":70516},{\"end\":70535,\"start\":70526},{\"end\":70546,\"start\":70535},{\"end\":70557,\"start\":70546},{\"end\":71115,\"start\":71106},{\"end\":71129,\"start\":71115},{\"end\":71139,\"start\":71129},{\"end\":71150,\"start\":71139},{\"end\":71653,\"start\":71633},{\"end\":71666,\"start\":71653},{\"end\":71675,\"start\":71666},{\"end\":71687,\"start\":71675},{\"end\":72096,\"start\":72086},{\"end\":72107,\"start\":72096},{\"end\":72119,\"start\":72107},{\"end\":72494,\"start\":72485},{\"end\":72507,\"start\":72494},{\"end\":72516,\"start\":72507},{\"end\":72882,\"start\":72872},{\"end\":72894,\"start\":72882},{\"end\":72906,\"start\":72894},{\"end\":72917,\"start\":72906},{\"end\":72931,\"start\":72917},{\"end\":73246,\"start\":73237},{\"end\":73255,\"start\":73246},{\"end\":73623,\"start\":73610},{\"end\":73633,\"start\":73623},{\"end\":74159,\"start\":74149},{\"end\":74172,\"start\":74159},{\"end\":74183,\"start\":74172},{\"end\":74193,\"start\":74183},{\"end\":74818,\"start\":74805},{\"end\":74832,\"start\":74818},{\"end\":74844,\"start\":74832},{\"end\":75365,\"start\":75350},{\"end\":75376,\"start\":75365},{\"end\":75385,\"start\":75376},{\"end\":75395,\"start\":75385},{\"end\":75406,\"start\":75395},{\"end\":75416,\"start\":75406},{\"end\":75430,\"start\":75416},{\"end\":75438,\"start\":75430},{\"end\":75912,\"start\":75899},{\"end\":75926,\"start\":75912},{\"end\":76512,\"start\":76503},{\"end\":76523,\"start\":76512},{\"end\":76533,\"start\":76523},{\"end\":76913,\"start\":76902},{\"end\":76922,\"start\":76913},{\"end\":77462,\"start\":77451},{\"end\":77473,\"start\":77462},{\"end\":77868,\"start\":77858},{\"end\":78102,\"start\":78092},{\"end\":78388,\"start\":78379},{\"end\":78398,\"start\":78388},{\"end\":78409,\"start\":78398},{\"end\":78420,\"start\":78409},{\"end\":78430,\"start\":78420},{\"end\":78904,\"start\":78895},{\"end\":78914,\"start\":78904},{\"end\":78923,\"start\":78914},{\"end\":78931,\"start\":78923},{\"end\":78943,\"start\":78931},{\"end\":79245,\"start\":79236},{\"end\":79624,\"start\":79615},{\"end\":79632,\"start\":79624},{\"end\":79643,\"start\":79632},{\"end\":79654,\"start\":79643},{\"end\":79864,\"start\":79855},{\"end\":79875,\"start\":79864},{\"end\":79885,\"start\":79875},{\"end\":79894,\"start\":79885},{\"end\":79907,\"start\":79894},{\"end\":79919,\"start\":79907},{\"end\":79929,\"start\":79919},{\"end\":79942,\"start\":79929},{\"end\":79951,\"start\":79942},{\"end\":79964,\"start\":79951},{\"end\":80408,\"start\":80399},{\"end\":80421,\"start\":80408},{\"end\":80435,\"start\":80421},{\"end\":80446,\"start\":80435},{\"end\":80456,\"start\":80446},{\"end\":80469,\"start\":80456},{\"end\":80483,\"start\":80469},{\"end\":80494,\"start\":80483},{\"end\":80507,\"start\":80494},{\"end\":80516,\"start\":80507},{\"end\":80527,\"start\":80516},{\"end\":80544,\"start\":80527},{\"end\":80558,\"start\":80544},{\"end\":80573,\"start\":80558},{\"end\":80943,\"start\":80937},{\"end\":80955,\"start\":80943},{\"end\":80965,\"start\":80955},{\"end\":80979,\"start\":80965},{\"end\":80994,\"start\":80979},{\"end\":81005,\"start\":80994},{\"end\":81018,\"start\":81005},{\"end\":81595,\"start\":81585},{\"end\":81604,\"start\":81595},{\"end\":81615,\"start\":81604},{\"end\":81624,\"start\":81615},{\"end\":82070,\"start\":82050},{\"end\":82082,\"start\":82070},{\"end\":82092,\"start\":82082},{\"end\":82416,\"start\":82406},{\"end\":82425,\"start\":82416},{\"end\":82438,\"start\":82425},{\"end\":82755,\"start\":82743},{\"end\":82764,\"start\":82755},{\"end\":82776,\"start\":82764},{\"end\":83340,\"start\":83327},{\"end\":83346,\"start\":83340},{\"end\":83357,\"start\":83346},{\"end\":83363,\"start\":83357},{\"end\":83833,\"start\":83823},{\"end\":83844,\"start\":83833},{\"end\":84089,\"start\":84074},{\"end\":84102,\"start\":84089},{\"end\":84117,\"start\":84102},{\"end\":84413,\"start\":84401},{\"end\":84420,\"start\":84413},{\"end\":84433,\"start\":84420},{\"end\":84444,\"start\":84433},{\"end\":84856,\"start\":84844},{\"end\":84866,\"start\":84856},{\"end\":84876,\"start\":84866},{\"end\":84883,\"start\":84876},{\"end\":84894,\"start\":84883},{\"end\":85127,\"start\":85119},{\"end\":85134,\"start\":85127},{\"end\":85143,\"start\":85134},{\"end\":85150,\"start\":85143}]", "bib_venue": "[{\"end\":60942,\"start\":60938},{\"end\":61970,\"start\":61853},{\"end\":63306,\"start\":63240},{\"end\":63901,\"start\":63885},{\"end\":64426,\"start\":64320},{\"end\":66019,\"start\":65869},{\"end\":68946,\"start\":68931},{\"end\":69455,\"start\":69418},{\"end\":70684,\"start\":70662},{\"end\":71209,\"start\":71205},{\"end\":72195,\"start\":72185},{\"end\":74226,\"start\":74218},{\"end\":74548,\"start\":74525},{\"end\":74979,\"start\":74975},{\"end\":75549,\"start\":75533},{\"end\":76063,\"start\":76012},{\"end\":77052,\"start\":77048},{\"end\":78601,\"start\":78508},{\"end\":81199,\"start\":81096},{\"end\":81714,\"start\":81683},{\"end\":84546,\"start\":84532},{\"end\":85244,\"start\":85231},{\"end\":54811,\"start\":54798},{\"end\":55126,\"start\":55088},{\"end\":55457,\"start\":55420},{\"end\":55829,\"start\":55809},{\"end\":56217,\"start\":56196},{\"end\":56546,\"start\":56529},{\"end\":57005,\"start\":56989},{\"end\":57367,\"start\":57315},{\"end\":57718,\"start\":57696},{\"end\":58129,\"start\":58107},{\"end\":58641,\"start\":58620},{\"end\":60632,\"start\":60507},{\"end\":60910,\"start\":60876},{\"end\":61225,\"start\":61172},{\"end\":61851,\"start\":61755},{\"end\":62374,\"start\":62328},{\"end\":62796,\"start\":62764},{\"end\":63238,\"start\":63230},{\"end\":63526,\"start\":63515},{\"end\":63883,\"start\":63788},{\"end\":64318,\"start\":64226},{\"end\":64894,\"start\":64873},{\"end\":65293,\"start\":65272},{\"end\":65867,\"start\":65745},{\"end\":66502,\"start\":66492},{\"end\":66876,\"start\":66851},{\"end\":67191,\"start\":67121},{\"end\":67793,\"start\":67773},{\"end\":68204,\"start\":68191},{\"end\":68929,\"start\":68824},{\"end\":69395,\"start\":69349},{\"end\":69861,\"start\":69832},{\"end\":70203,\"start\":70175},{\"end\":70660,\"start\":70557},{\"end\":71171,\"start\":71150},{\"end\":71722,\"start\":71687},{\"end\":72153,\"start\":72119},{\"end\":72572,\"start\":72541},{\"end\":72958,\"start\":72950},{\"end\":73305,\"start\":73284},{\"end\":73608,\"start\":73498},{\"end\":74216,\"start\":74193},{\"end\":74523,\"start\":74395},{\"end\":74911,\"start\":74844},{\"end\":75531,\"start\":75453},{\"end\":76010,\"start\":75926},{\"end\":76501,\"start\":76359},{\"end\":76989,\"start\":76922},{\"end\":77511,\"start\":77473},{\"end\":77928,\"start\":77868},{\"end\":78127,\"start\":78102},{\"end\":78506,\"start\":78430},{\"end\":79001,\"start\":78959},{\"end\":79234,\"start\":79202},{\"end\":79613,\"start\":79548},{\"end\":80053,\"start\":79991},{\"end\":80397,\"start\":80307},{\"end\":81094,\"start\":81018},{\"end\":81681,\"start\":81624},{\"end\":82132,\"start\":82118},{\"end\":82488,\"start\":82467},{\"end\":82817,\"start\":82804},{\"end\":83038,\"start\":83005},{\"end\":83420,\"start\":83388},{\"end\":83684,\"start\":83651},{\"end\":83821,\"start\":83788},{\"end\":84072,\"start\":83957},{\"end\":84530,\"start\":84444},{\"end\":84842,\"start\":84738},{\"end\":85229,\"start\":85150}]"}}}, "year": 2023, "month": 12, "day": 17}