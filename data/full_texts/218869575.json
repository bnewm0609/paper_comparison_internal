{"id": 218869575, "updated": "2023-10-06 15:37:19.391", "metadata": {"title": "Retrieval-Augmented Generation for Knowledge-Intensive NLP Tasks", "authors": "[{\"first\":\"Patrick\",\"last\":\"Lewis\",\"middle\":[]},{\"first\":\"Ethan\",\"last\":\"Perez\",\"middle\":[]},{\"first\":\"Aleksandara\",\"last\":\"Piktus\",\"middle\":[]},{\"first\":\"Fabio\",\"last\":\"Petroni\",\"middle\":[]},{\"first\":\"Vladimir\",\"last\":\"Karpukhin\",\"middle\":[]},{\"first\":\"Naman\",\"last\":\"Goyal\",\"middle\":[]},{\"first\":\"Heinrich\",\"last\":\"Kuttler\",\"middle\":[]},{\"first\":\"Mike\",\"last\":\"Lewis\",\"middle\":[]},{\"first\":\"Wen-tau\",\"last\":\"Yih\",\"middle\":[]},{\"first\":\"Tim\",\"last\":\"Rocktaschel\",\"middle\":[]},{\"first\":\"Sebastian\",\"last\":\"Riedel\",\"middle\":[]},{\"first\":\"Douwe\",\"last\":\"Kiela\",\"middle\":[]}]", "venue": "NeurIPS", "journal": null, "publication_date": {"year": 2020, "month": 5, "day": 22}, "abstract": "Large pre-trained language models have been shown to store factual knowledge in their parameters, and achieve state-of-the-art results when fine-tuned on downstream NLP tasks. However, their ability to access and precisely manipulate knowledge is still limited, and hence on knowledge-intensive tasks, their performance lags behind task-specific architectures. Additionally, providing provenance for their decisions and updating their world knowledge remain open research problems. Pre-trained models with a differentiable access mechanism to explicit non-parametric memory can overcome this issue, but have so far been only investigated for extractive downstream tasks. We explore a general-purpose fine-tuning recipe for retrieval-augmented generation (RAG) -- models which combine pre-trained parametric and non-parametric memory for language generation. We introduce RAG models where the parametric memory is a pre-trained seq2seq model and the non-parametric memory is a dense vector index of Wikipedia, accessed with a pre-trained neural retriever. We compare two RAG formulations, one which conditions on the same retrieved passages across the whole generated sequence, the other can use different passages per token. We fine-tune and evaluate our models on a wide range of knowledge-intensive NLP tasks and set the state-of-the-art on three open domain QA tasks, outperforming parametric seq2seq models and task-specific retrieve-and-extract architectures. For language generation tasks, we find that RAG models generate more specific, diverse and factual language than a state-of-the-art parametric-only seq2seq baseline.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2005.11401", "mag": "3098425262", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/nips/LewisPPPKGKLYR020", "doi": null}}, "content": {"source": {"pdf_hash": "659bf9ce7175e1ec266ff54359e2bd76e0b7ff31", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2005.11401v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "8120d6ac143f7e5dbf816268a9786ade65bf2a16", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/659bf9ce7175e1ec266ff54359e2bd76e0b7ff31.txt", "contents": "\nRetrieval-Augmented Generation for Knowledge-Intensive NLP Tasks\n\n\nPatrick Lewis plewis@fb.com \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nEthan Perez \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nAleksandra Piktus \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nFabio Petroni \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nVladimir Karpukhin \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nNaman Goyal \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nHeinrich K\u00fcttler \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nMike Lewis \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nWen-Tau Yih \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nTim Rockt\u00e4schel \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nSebastian Riedel \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nDouwe Kiela \nFacebook AI Research\n\u2021 University College London\nNew York University\n\n\nRetrieval-Augmented Generation for Knowledge-Intensive NLP Tasks\n\nLarge pre-trained language models have been shown to store factual knowledge in their parameters, and achieve state-of-the-art results when fine-tuned on downstream NLP tasks. However, their ability to access and precisely manipulate knowledge is still limited, and hence on knowledge-intensive tasks, their performance lags behind task-specific architectures. Additionally, providing provenance for their decisions and updating their world knowledge remain open research problems. Pre-trained models with a differentiable access mechanism to explicit nonparametric memory can overcome this issue, but have so far been only investigated for extractive downstream tasks. We explore a general-purpose fine-tuning recipe for retrieval-augmented generation (RAG) -models which combine pre-trained parametric and non-parametric memory for language generation. We introduce RAG models where the parametric memory is a pre-trained seq2seq model and the non-parametric memory is a dense vector index of Wikipedia, accessed with a pre-trained neural retriever. We compare two RAG formulations, one which conditions on the same retrieved passages across the whole generated sequence, the other can use different passages per token. We fine-tune and evaluate our models on a wide range of knowledge-intensive NLP tasks and set the state-of-the-art on three open domain QA tasks, outperforming parametric seq2seq models and task-specific retrieve-and-extract architectures. For language generation tasks, we find that RAG models generate more specific, diverse and factual language than a state-of-the-art parametric-only seq2seq baseline.Preprint. Under review.\n\nIntroduction\n\nPre-trained neural language models have been shown to learn a substantial amount of in-depth knowledge from data [41]. They can do so without any access to an external memory, as a parameterized implicit knowledge base [45,46]. While this development is exciting, such models do have downsides: They cannot easily expand or revise their memory, can't straightforwardly provide insight into their predictions, and may produce \"hallucinations\" [34]. Hybrid models that combine parametric memory with non-parametric (i.e., retrieval-based) memories [18,22,42] can address some of these issues because knowledge can be directly revised and expanded, and its access can be inspected and interpreted. REALM [18] and ORQA [27], two recently introduced models that combine masked language models [8] with a differentiable retriever, have shown promising results, Figure 1: An overview of retrieval-augmented generation (RAG). We combine a pre-trained retriever (Query Encoder + Document Index) with a pre-trained encoder-decoder (Generator) and fine-tune end-to-end. For some query x, we use Maximum Inner Product Search (MIPS) to find the top-K most relevant documents of all documents z i . To make the final prediction y, we treat z as a latent variable and marginalize over the encoder-decoder predictions given different documents.\n\nbut have only explored open-domain extractive question answering. Here, we bring hybrid parametric and non-parametric memory to the \"workhorse of NLP,\" i.e. sequence-to-sequence (seq2seq) models.\n\nWe endow pre-trained, parametric-memory generation models with a non-parametric memory through a general-purpose fine-tuning approach which we refer to as retrieval-augmented generation (RAG). We build RAG models where the parametric memory is a pre-trained generative seq2seq transformer, and the non-parametric memory is a dense vector index of Wikipedia, accessed using a pre-trained neural retriever. We combine these components in an end-to-end probabilistic model; the document retriever (Dense Passage Retriever [22], henceforth DPR) provides latent documents conditioned on the input, and the seq2seq model (BART [28]) then conditions on both these latent documents and the input to generate the output. We marginalize the latent variables through a top-K approximation, either on a per answer basis (assuming the same document is responsible for all tokens) or a per answer token basis (assuming different documents can be responsible for different tokens). Just like T5 [45] or BART, RAG can be fine-tuned on any seq2seq task, whereby both the sequence generator and retriever are jointly learned.\n\nThere has been extensive previous work proposing architectures to enrich systems with non-parametric memory which are trained from scratch for specific tasks-e.g. in memory networks [58,49], stackaugmented networks [21] and memory layers for transformers [26]. In contrast, we explore a setting where both parametric and non-parametric memory components are pre-trained and pre-loaded with extensive knowledge. Crucially, by using pre-trained knowledge-access mechanisms, the ability to access knowledge is present without additional training.\n\nOur results highlight the benefits of combining parametric and non-parametric memory with generation for knowledge-intensive tasks. Our RAG models achieve state-of-the-art results on open Natural Questions [25], WebQuestions [3] and CuratedTrec [2] and strongly outperform recent approaches that use specialised pre-training objectives on TriviaQA [20]. Despite these being extractive tasks, we find that unconstrained generation outperforms previous extractive approaches. For knowledge-intensive generation, we experiment with MS-MARCO [1] and Jeopardy question generation, and we find that our models generate responses that are more factual, specific, and diverse than a BART baseline. For the FEVER [50] fact verification task, we achieve results within 4% of sophisticated, state-of-the-art pipeline models which use strong supervision. Finally, we show that the non-parametric memory can be replaced in order to control generation, demonstrating a simple mechanism to update the knowledge that the model uses as facts about the world change.\n\n\nMethods\n\nWe explore RAG models which use the input sequence x to retrieve text passages z and use these passages as additional context when generating the target sequence y. As shown in Figure 1, our models leverage two components: (i) a retriever p \u03b7 (z|x) with parameters \u03b7 that returns (top-K truncated) distributions over text passages given a query x and (ii) a generator p \u03b8 (y i |x, z, y 1:i\u22121 ) parametrized by \u03b8 that generates a current token based on a context of the previous i \u2212 1 tokens y 1:i\u22121 , the original input x and a retrieved passage z.\n\nTo train the retriever and generator end-to-end, we treat the retrieved document as a latent variable. We propose two models that marginalize over the latent documents in different ways to produce a distribution over generated text. In one approach, RAG-Sequence, the model uses the same document to predict each target token. In the other approach, RAG-Token, the model can predict each target token based on a different document. In what follows, we formally introduce both models and then describe the p \u03b7 and p \u03b8 components, as well as the training and decoding procedure in more detail.\n\n\nModels\n\n\nRAG-Sequence Model\n\nThe RAG-Sequence model uses the same retrieved document to generate the complete sequence. Technically, it treats the retrieved passage as a single latent variable that is marginalized to get the seq2seq probability p(y|x) via a top-K approximation,\np RAG-Sequence (y|x) = z\u2208top-k(p(\u00b7|x)) p \u03b7 (z|x) N i p \u03b8 (y i |x, z, y 1:i\u22121 ).\n\nRAG-Token Model\n\nIn the RAG-Token model we can draw a different latent passage for each target token and marginalize accordingly. This allows the generator to choose content from several documents when producing an answer. Formally, we define:\np RAG-Token (y|x) = N i z\u2208top-k(p(\u00b7|x)) p \u03b7 (z i |x)p \u03b8 (y i |x, z i , y 1:i\u22121 ).\nFinally, we note that RAG can be used for sequence classification tasks by considering the target class as a target sequence of length one, in which case RAG-Sequence and RAG-Token are equivalent.\n\n\nRetriever: DPR\n\nThe retrieval component p \u03b7 (z|x) is based on DPR [22]. DPR follows a bi-encoder architecture:\np \u03b7 (z|x) \u221d exp d(z), q(x)\nwhere d(z) is a dense representation of the document produced by a BERT BASE transformer [8], and q(x) a representation of the query by another BERT BASE transformer with a different set of parameters.\n\nTo efficiently calculate top-k(p \u03b7 (\u00b7|x)), the list of k elements z with highest prior probability p \u03b7 (z|x), DPR employs a Maximum Inner Product Search (MIPS) index provided by the FAISS library [19].\n\nFor non-parametric pre-trained memory, we use a pre-trained bi-encoder from [22] to both initialize our retriever and to build the document index. This retriever was trained to retrieve documents which contain answers to TriviaQA [20] questions and Natural Questions [25].\n\n\nGenerator: BART\n\nThe generator component p \u03b8 (y i |x, z, y 1:i\u22121 ) could be modelled using any encoder-decoder. We use BART-large [28], a pre-trained seq2seq transformer [52] with 400M parameters. To combine the input x with the retrieved content z when generating from BART, we simply concatenate them.\n\nBART was pre-trained using a denoising objective and a variety of different noising functions. It has obtained state-of-the-art results on a diverse set of generation tasks and outperforms comparably-sized T5 models [28]. We refer to the BART generator parameters \u03b8 as the parametric memory henceforth.\n\n\nTraining\n\nWe jointly train the retriever and generator components without any direct supervision on what document should be retrieved. Given a fine-tuning training corpus of input/output pairs (x j , y j ), we minimize the negative marginal log-likelihood of each target, j \u2212 log p(y j |x j ) using stochastic gradient descent with Adam [24]. Updating the document encoder during training is costly as it requires the document index to be periodically updated as REALM does during pre-training [18]. We do not find this step necessary for strong performance, and we keep the document encoder (and index) fixed, only fine-tuning the query encoder and the generator.\n\n\nDecoding\n\nAt test/decoding time, RAG-Sequence and RAG-Token require different ways to approximate arg max y p(y|x).\n\n\nRAG-Token\n\nThe RAG-Token model can be seen as a standard, autoregressive, seq2seq generator with transition probability:\np \u03b8 (y i |x, y 1:i\u22121 ) = z\u2208top-k(p(\u00b7|x)) p \u03b7 (z i |x)p \u03b8 (y i |x, z i , y 1:i\u22121 )\nTo decode, we can plug p \u03b8 (y i |x, y 1:i\u22121 ) into a standard beam decoder.\n\n\nRAG-Sequence\n\nThe likelihood p(y|x) does not break into a conventional per-token likelihood for the RAG-Sequence, and hence we cannot solve it with a single beam search pass. Instead, we run beam search for each candidate document z, scoring each hypothesis using p \u03b8 (y i |x, z, y 1:i\u22121 ). This yields a set of hypotheses Y of which some might not have appeared in the beams of all documents. To estimate the probability of an hypothesis y across all beams, we run an additional forward pass for each document z for which y does not appear in the beam, multiply the generator score with p \u03b7 (z|x) and then sum up the probabilities across beams for the marginals. We refer to this decoding procedure as \"Thorough Decoding.\"\n\nFor longer output sequences, |Y | can become large, requiring many forward passes. For more efficient decoding, we can make a further approximation that p \u03b8 (y|x, z i ) \u2248 0 where y was not generated during beam search from x, z i . This avoids the need to run additional forward passes once the candidate set Y has been generated. We refer to this decoding procedure as \"Fast Decoding\".\n\n\nExperiments\n\nWe experiment with RAG in a wide range of knowledge-intensive tasks. For all experiments, we use a single Wikipedia dump for our non-parametric knowledge source. Following Lee et al. [27] and Karpukhin et al. [22], we use the December 2018 dump. Each Wikipedia article is split into disjoint 100-word chunks, to make a total of 21,015,324 documents. 1 We use the DPR document encoder to compute document embeddings for each document, and we build a single MIPS index using FAISS [19] using Hierarchical Navigable Small World approximation for efficient retrieval [33], which is then used for all experiments. During training, we retrieve the top k documents for each query, where we consider k \u2208 {5, 10}. We determine k for test time using validation data. In the remainder of this section, we will discuss the experimental details for each of these task settings.\n\n\nOpen-domain Question Answering\n\nOpen-domain QA is an important real-world NLP application and is often used as test-bed for knowledge-intensive tasks [18]. We tackle open-domain QA by treating questions and answers as simple input-output text pairs (x, y), and we train RAG by directly minimizing the negative loglikelihood of answers. We compare our results to the popular extractive QA paradigm [5,7,27,22], where answers are extracted as spans from retrieved documents, relying primarily on non-parametric knowledge. In addition, we also compare to \"Closed-Book QA\" approaches [46], which, like RAG, generate answers, but do not exploit latent retrieval, instead relying purely on parametric knowledge.\n\nWe consider four popular open-domain QA datasets: Natural Questions (NQ) [25], TriviaQA (TQA) [20]. WebQuestions (WQ) [3] and CuratedTrec (CT) [2]. The answers for CuratedTrec are given in the form of regular expressions, which has been cited as a reason why it is unsuitable for answer-generation models [18]. To overcome this, we use a pre-processing step where we first retrieve the top 1000 documents for each query, and use the answer that most frequently matches the regex pattern as the supervision target. If no matches are found, we resort to a simple heuristic: generate all possible permutations for each regex, replacing non-deterministic symbols in the regex nested tree structure with a whitespace. As CuratedTrec and WebQuestions are small datasets, we follow DPR [22] by initializing CuratedTrec and WebQuestions models with our Natural Questions RAG model. We use the same training/dev/testing splitting method as in previous work [27,22] and report the standard Exact Match (EM) metric. For TriviaQA, in order to compare to T5 [46], we do an additional test evaluation on the TriviaQA Wiki test set.\n\n\nAbstractive Question Answering\n\nBecause RAG leverages an encoder-decoder model, it can go beyond extractive question-answering and answer questions with free-form, abstractive text generation. To test RAG's ability to generate natural language responses in a knowledge-intensive setting, we use the MS-MARCO Natural Language Generation task v2.1 [38]. This task consists of natural language questions submitted to a search engine, ten snippets retrieved from a search engine for each question, and a full sentence natural language answer annotated from these retrieved passages.\n\nAs we are interested in models that can perform their own latent retrieval, we do not use the supplied passages, only the questions and answers, thus treating MS-MARCO as an open-domain abstractive question answering task. MS-MARCO does contain some questions that cannot be answered in a way that matches the reference answer without access to the context passages, such as \"What is the weather in volcano, CA?\" so we note that performance on Open-MSMARCO will be lower than models that do use these gold context passages.\n\nWe further note that there are questions in MS-MARCO that cannot be answered using a Wikipedia knowledge source alone. In these cases, RAG can rely on the parametric implicit knowledge in its BART parameters in order to generate commonsense responses.\n\n\nJeopardy Question Generation\n\nIn order to further evaluate RAG's generation abilities in a non-question answering setting, we propose to study Open-domain question generation. Rather than repurpose questions from standard open-domain QA tasks, which typically consist of short and simple questions, we instead propose to study the more demanding task of generating of Jeopardy questions. Jeopardy is an unusual format that consists of trying to guess an entity from a fact about that entity. For example, \"The World Cup\" is the answer to the jeopardy question \"In 1986 Mexico scored as the first country to host this international sports competition twice.\" As Jeopardy \"questions\" are precise, factual statements, generating Jeopardy-style questions conditioned on the answer entity they refer to constitutes a challenging knowledge-intensive generation task.\n\nWe use the raw Jeopardy data and splits from SearchQA [10], consisting of 97,391 training, 13,713 development, and 26,848 test datapoints. As this is a new task, we also train a BART system to compare RAG to. Following [60], we evaluate generations using the SQuAD-tuned Q-BLEU-1 metric [37]. Q-BLEU-1 is a variant of BLEU-1 which puts a higher weight on the matching entities, and has higher correlation with human judgment for question generation compared to standard word overlap metrics.\n\nAs automatic metrics can be unreliable, especially on such open-ended tasks, we also perform a human evaluation of generations. We run two evaluations, one to assess the factuality of generations, and one to assess specificity. We follow the recent best-practice of performing a pairwise comparative evaluation between two systems [30]. Assessors are shown an answer entity and two generated questions about that entity, one from BART and one from RAG. They are then asked to pick one of four possible options-Sentence A is better, Sentence B is better, both are correct or neither is good.\n\n\nFact Verification\n\nFEVER [50] is a fact verification dataset that involves classifying whether a natural language claim is supported or refuted by Wikipedia, or whether there is not enough information to decide. The  task requires retrieving evidence from Wikipedia relating to the claim and then reasoning about the retrieved evidence to classify whether the claim is true, false, or unverifiable from Wikipedia alone. FEVER is a retrieval problem coupled with an entailment reasoning task. It also provides a good test bed for exploring the RAG models' ability to handle classification rather than generation.\n\nWe map FEVER class labels (supports, refutes, or not enough info) to single output tokens and directly train with claim-class pairs. Crucially, unlike most other approaches to FEVER, we do not use supervision on retrieved evidence. We explore two different FEVER variants: the standard 3-way classification task (supports/refutes/not enough info) and the 2-way FEVER (supports/refutes) task studied in Thorne and Vlachos [51]. In both cases we report label accuracy.\n\n\nImplementation Details\n\nFor Open-domain QA we report test numbers using 15 retrieved documents for RAG-Token models. For RAG-Sequence models, we report test results using 50 retrieved documents, and we use the Thorough Decoding approach since answers are generally short. We use greedy decoding for QA as we did not find beam search improved results. For Open-MSMarco and Jeopardy question generation, we report test numbers using ten retrieved documents for both RAG-Token and RAG-Sequence, and we also train a BART-large model as a baseline. We use a beam size of four, and use the Fast Decoding approach for RAG-Sequence models, as Thorough Decoding did not improve performance. RAG combines the generation flexibility of the \"closed-book\" (parametric only) approaches and the performance of \"open-book\" retrieval-based approaches. Unlike REALM and T5+SSM, RAG enjoys strong results without expensive specialized \"salient span masking\" pre-training [18], relying on off-the-shelf components. It is worth noting that RAG's retriever is initialized using DPR's retriever,  Table 3: Human assessments for the Jeopardy Question Generation Task.\n\n\nResults\n\n\nOpen-domain Question Answering\n\nwhich does use retrieval supervision on Natural Questions and TriviaQA. RAG compares favourably to DPR QA system on open-domain QA, which uses a BERT-based cross-encoder system to re-rank documents, along with an extractive reader. RAG demonstrates that neither a re-ranker nor extractive reader is necessary for state-of-the-art machine reading performance. Generating answers even when it is possible to extract them has a number of advantages. Documents which contain clues as to the correct answer but do not contain the correct answer verbatim themselves can still contribute probability mass towards a correct answer being generated, which is not possible with standard extractive approaches, leading to more effective marginalization across documents. Furthermore, RAG is able to generate correct answers even when the correct answer is not present in any of the retrieved documents, achieving an accuracy of 11.8% in such cases for Natural Questions, whereas an extractive model would score 0%.\n\n\nAbstractive Question Answering\n\nAs shown in Table 2, RAG-Sequence outperforms BART on Open MS-MARCO generation by 2.6 Bleu points and 2.6 Rouge-L points. It approaches the performance of state-of-the-art models, which is impressive considering that (i) these models have access to passages that contain the specific information required to generate the reference answer, (ii) many questions are unanswerable without access to gold passages, and (iii) other questions are unanswerable from Wikipedia alone. Table 4 shows some generated answers from our models. Qualitatively, we find that RAG models hallucinate less and generate factually correct text more often than BART. Later we also show that RAG generations are more diverse than BART generations (see Section 4.6). Table 2 shows automatic metric results on the Jeopardy question generation task. We find that RAG-Token performs better than the RAG-Sequence model in this setting, with both models outperforming BART using the Q-BLEU-1 metric. Table 3 shows the results from the human evaluation. The human evaluation was carried out with 452 pairs of generations from BART and RAG-Token. The annotators indicated that BART was more factual than RAG in only 7.1% of cases, while RAG was more factual in 42.7% of cases and both RAG and BART were factual in a further 17% of cases, clearly demonstrating the comparative effectiveness of RAG on the task over a state-of-the-art conditional generation model. The annotators also strongly prefer RAG generations in terms of specificity.\n\n\nJeopardy Question Generation\n\nTypical example of generations from each model are shown in Table 4. BART generates a more generic response (which is incorrect), whereas the RAG models generate specific and correct facts about Washington state.\n\nWe hypothesise that RAG-Token performs best for this task as Jeopardy questions often contain two separate pieces of information about the entity, and RAG-Token is able to synthesize a response by combining disparate information from different retrieved documents in one generation. Figure 2 shows an example where content from two documents has been combined to produce the generated question. Document 2 contains information about Hemingway's \"The Sun also rises,\" and the contribution for \"Sun\" is very high for document 2. Similarly, \"A Farewell to Arms\" is mentioned in Document 1, which dominates the posterior when this title is generated. Intriguingly, after the first token of these book titles are generated, the distribution over documents flattens again. This observation suggests that the generator completes the book titles without depending on specific documents. In other words, the model's parametric knowledge is sufficient to complete the titles.\n\nWe show evidence for the above interpretation by feeding the BART-only baseline with the partial decoding \"The Sun. BART completes the generation \"The Sun Also Rises\" is a novel by this  author of \"The Sun Also Rises\" indicating the title \"The Sun Also Rises\" is stored in BART's parameters. Similarly, feeding the partial decoding \"The Sun Also Rises\" is a novel by this author of \"A will result in BART completing the generation with \"The Sun Also Rises\" is a novel by this author of \"A Farewell to Arms. This example shows how the parametric and nonparametric memories work together-the non-parametric component helps to guide the generation in a particular direction, drawing out specific knowledge stored in the parametric memory. For 2-way classification, we compare against the model from [51], which trains RoBERTa [31] to classify the claim as true or false given the gold evidence sentence. RAG achieves an accuracy within 2.7% of this model, despite being supplied with only the claim and retrieving its own evidence.\n\n\nFact Verification\n\nWe also analyze whether the documents retrieved by RAG correspond to the documents annotated as gold evidence in FEVER. We analyze the overlap in Wikipedia articles between the top k documents retrieved by RAG and the gold, annotated evidence documents. We find that the top article retrieved by RAG is a gold document for the claim in 71% of cases, and a gold article is present in the top 10 retrieved articles in 90% of cases.\n\n\nAblations\n\nTo gain a better understanding of what factors affect RAG's performance, we perform a number of ablation experiments for our tasks on their respective development sets.   Using more documents Models are trained with either 5 or 10 retrieved latent documents, and we do not observe significant differences in performance between them. We also have the flexibility to adjust the number of retrieved documents at test time, which does affect performance. Figure 3 (left) shows that retrieving more documents at test time monotonically improves Open-domain QA results for RAG-Sequence, but performance peaks for RAG-Token at 10 retrieved documents. Figure 3 (right) shows that retrieving more documents leads to higher Rouge-L for RAG-Token at the expense of Bleu-1, but the effect is less pronounced for RAG-Sequence.\n\nRetrieval A key feature of RAG is the ability to learn to retrieve relevant information for the task at hand. To assess the effectiveness of the retrieval mechanism, we run ablations on RAG where we prevent gradients from propagating into the retriever. Table 5 shows the results across all tasks. In each case, learned retrieval improves results, with the largest improvements in question answering. Figure 3 (center) shows that the learned retriever shows a higher recall for gold documents compared to the fixed retriever. The improvements on TriviaQA and Natural Questions are notable, as we initialize the retriever from DPR, which is trained with strong, document-level supervision to perform well on these tasks. We also compare RAG's dense embedding-based retrieval mechanism to a word overlap-based BM25 retriever [47]. Here, we replace RAG's differentiable retriever with a fixed BM25 system. We use the BM25 retrieval scores as logits when calculating p \u03b7 (z i |x). Table 5 and Figure 3 show the results. For FEVER, we find that BM25 performs best, perhaps since FEVER claims are heavily entity-centric and thus well-suited for word overlap-based retrieval. On all other tasks, we find the differentiable retrieval to be helpful, especially question answering, where it is crucial.\n\n\nGeneration Diversity\n\nSection 4.3 established that RAG models generate are more factual and specific than BART for Jeopardy question generation. Similar to Li et al. [29], Vijayakumar et al. [53] and Massarelli et al. [35], we also investigate the diversity of generations by calculating the ratio of distinct ngrams to total ngrams generated by different models.  Table 6: Ratio of distinct tri-grams to total tri-grams in the development set generations for MS-MARCO and Jeopardy Question Generation.\n\ndiverse than RAG-Token generations, and both generate significantly more diverse outputs than BART without requiring any diversity-promoting decoding strategy.\n\n\nHot-swapping indices\n\nAn advantage of non-parametric knowledge models such as RAG is that the knowledge base can be easily updated at test time. Parametric-only models such as T5 or BART require additional training to update their behavior as facts about the world change. As a demonstration, we build an index using the DrQA Wikipedia dump [5], (dated December 21st, 2016) and compare generations from RAG using this index to the newer index used in our main results (December 20th, 2018). We prepared a list of 82 heads of states who had changed between these dates and used a template \"Who is {position}?\" (e.g., \"Who is the prime minister of the UK?\") to query our Natural Questions -finetuned RAG model with each index. RAG achieved an accuracy of 70% using the 2016 index for 2016 world leaders and an accuracy of 68% using the 2018 index for the 2018 world leaders. Only 21% of the model's predictions were the same using the two indices, and accuracy using mismatched indices is very low (12% using the 2018 index for 2016 leaders and 4% using the 2016 index for 2018 leaders). Our result shows that we can effectively update RAG's behavior with new world knowledge by simply replacing its non-parametric memory.\n\n\nRelated Work\n\nSingle-Task Retrieval Prior work has shown that retrieval improves performance across a variety of NLP tasks when considered in isolation. Such tasks include open-domain question answering [5,25], fact checking [50], fact completion [42], long-form question answering [12], Wikipedia article generation [32], dialogue [36,59,9,13], translation [16], and language modeling [17,23]. Our work unifies previous successes in incorporating retrieval into individual tasks, showing that a single retrieval-based architecture is capable of achieving strong performance across several tasks.\n\nGeneral-Purpose Architectures for NLP Prior work on general-purpose architectures for NLP tasks has shown great success without the use of retrieval. A single, pre-trained language model has been shown to achieve strong performance on various classification tasks in the GLUE benchmarks [54,55] after fine-tuning [43,8]. GPT-2 [44] later showed that a single, left-to-right, pre-trained language model could achieve strong performance across both discriminative and generative tasks. For further improvement, BART [28] and T5 [45,46] propose a single, pre-trained encoder-decoder model that leverages bi-directional attention to achieve stronger performance on discriminative and generative tasks. Our work aims to expand the space of possible tasks with a single, unified architecture, by learning a retrieval module to augment pre-trained, generative language models.\n\nLearned Retrieval There is significant work on learning to retrieve documents in information retrieval, more recently with pre-trained, neural language models [39,22] similar to ours. Some work optimizes the retrieval module to aid in a specific, downstream task such as question answering, using search [40], reinforcement learning [6,57,56], or a latent variable approach [27,18] as in our work. These successes leverage different retrieval-based architectures and optimization techniques to achieve strong performance on a single task, while we show that a single retrieval-based architecture can be fine-tuned for strong performance on a variety of tasks.\n\nMemory-based Architectures Our document index can be seen as a large external memory for neural networks to attend to, analagous to memory networks [58,48]. Concurrent work [14] learns to retrieve a trained embedding for each entity in the input, rather than to retrieve raw text as in our work. Other work improves the ability of dialog models to generate factual text by attending over fact embeddings [9,13] or, closer to our work, over retrieved text directly [15]. A key feature of our memory is that it is comprised of raw text rather distributed representations, which makes the memory both (i) human-readable, lending a form of interpretability to our model, and (ii) human-writable, enabling us to dynamically update the model's memory by editing the document index.\n\n\nDiscussion\n\nIn this work, we presented hybrid generation models with access to parametric and non-parametric retrieval-based external memory, in the form of Wikipedia. We showed that our RAG models obtain state-of-the-art performance on open domain question answering. We found that people prefer RAG's generation over purely parametric BART and find RAG more factual, and we conducted a detailed investigation of the learned retrieval component, validating its effectiveness. We also showed that the model's grounding in external data leads it to generate more diverse, and illustrated by how the retrieval index can be hot-swapped on the fly without having to retrain the model. In future work, it would be interesting to investigate if the two components can be jointly pre-trained from scratch, either on a denoising objective similar to BART, or through some other objective. Our work opens new research directions on how parametric and non-parametric memories interact and how to most effectively combine the different components, showing promise in being applied to a wide variety of NLP tasks. A Human evaluation Figure 4 shows the user interface for human evaluation. To avoid any biases for screen position, which model corresponded to sentence A and sentence B was randomly selected for each example.\n\nAnnotators were encouraged to research the topic using the internet, and were given detailed instructions and worked examples in a full instructions tab. We included some gold sentences in order to assess the accuracy of the annotators. Two annotators did not perform well on these examples and their annotations were removed from the results.\n\n\nB Further details on Open-Domain QA\n\nFor open-domain QA, multiple answer annotations are often available for a given question. These answer annotations are exploited by extractive models during training as typically all the answer annotations are used to find matches within documents when preparing training data. For RAG, we also make use of multiple annotation examples for Natural Questions and WebQuestions by training the model with each (q, a) pair separately, leading to a small increase in accuracy. For TriviaQA, there are often many valid answers to a given question, some of which are not suitable training targets, such as emoji or spelling variants. For TriviaQA, we filter out answer candidates if they do not occur in top 1000 documents for the query.\n\n\nTriviaQA Evaluation setups\n\nThe open-domain QA community customarily uses public development datasets as test datasets, as test data for QA datasets is often restricted and dedicated to reading compehension purposes. We report our results using the datasets splits used in DPR [22], which are consistent with common practice in Open-domain QA. For TriviaQA, this test dataset is the public TriviaQA Web Development split. Roberts et al. [46] used the TriviaQA official Wikipedia test set instead. F\u00e9vry et al. [14] follow this convention in order to compare with Roberts et al. [46] (See appendix of [14]). We report results on both test sets to enable fair comparison to both approaches. We find that our performance is much higher using the official Wiki test set, rather than the more conventional open-domain test set, which we attribute to the official Wiki test set questions being simpler to answer from Wikipedia.\n\n\nC Further details on FEVER\n\nFor FEVER classification, we follow the practice from [28], and first re-generate the claim, and then classify using the representation of the final hidden state, before finally marginalizing across documents to obtain the class probabilities. The FEVER task traditionally has two sub-tasks. The first is to classify the claim as either \"Supported\", \"Refuted\" or \"Not Enough Info\", which is the task we explore in the main paper. FEVER's other sub-task involves extracting sentences from Wikipedia as evidence supporting the classification prediction. As FEVER uses a different Wikipedia dump to us, directly tackling this task is not straightforward. We hope to address this in future work.\n\n\nD \"Null document\" Probabilities\n\nWe experimented with adding \"Null document\" mechanism to RAG, similar to REALM [18] in order to model cases where no useful information could be retrieved for a given input. Here, if k documents were retrieved, we would additionally \"retrieve\" an empty document and predict a logit for the null document, before marginalizing over k + 1 predictions. We explored modelling this null document logit by learning (i) a document embedding for the null document, (ii) a static learnt bias term, or (iii) a neural network to predict the logit. We did not find that these improved performance, so in the interests of simplicity, we omit them. For Open MS-MARCO, where useful retrieved documents cannot always be retrieved, we observe that the model learns to always retrieve a particular set of documents for questions that are less likely to benefit from retrieval, suggesting that null document mechanisms may not be necessary for RAG.\n\n\nE Parameters\n\nOur RAG models contain the trainable parameters for the BERT-base query and document encoder of DPR, with 110M parameters each (although we do not train the document encoder ourselves) and 406M trainable parameters from BART-large, 406M parameters, making a total of 626M trainable parameters. The best performing \"closed-book\" (parametric only) open-domain QA model is T5-11B with 11 Billion trainable parameters. The T5 model with the closest number of parameters to our models is T5-large (770M parameters), which achieves a score of 28.9 EM on Natural Questions [46], substantially below the 44.5 that RAG-Sequence achieves, indicating that hybrid parametric/nonparametric models require far fewer trainable parameters for strong open-domain QA performance. The non-parametric memory index does not consist of trainable parameters, but does consists of 21M 728 dimensional vectors, consisting of 15.3B values.\n\n\nF Retrieval Collapse\n\nIn preliminary experiments, we observed that for some tasks such as story generation [11], the retrieval component would \"collapse\" and learn to retrieve the same documents regardless of the input. In these cases, once retrieval had collapsed, the generator would learn to ignore the documents, and the RAG model would perform equivalently to BART. The collapse could be due to a less-explicit requirement for factual knowledge in some tasks, or the longer target sequences, which could result in less informative gradients for the retriever. Perez et al. [40] also found spurious retrieval results when optimizing a retrieval component in order to improve performance on downstream tasks.\n\nDocument 1 :Figure 2 :\n12his works are considered classics of American literature ... His wartime experiences formed the basis for his novel \"A Farewell to Arms\"(1929)  ... Document 2: ... artists of the 1920s \"Lost Generation\" expatriate community. His debut novel, \"The Sun Also Rises\", RAG-Token document posterior p(z i |x, y i , y \u2212i ) for each generated token for input \"Hemingway\" for Jeopardy generation with 5 retrieved documents. The posterior for document 1 is high when generating \"A Farewell to Arms\" and for document 2 when generating \"The Sun Also Rises\" The middle ear is the part of the ear between the middle ear and the nose.RAG-T The middle ear is the portion of the ear internal to the eardrum. RAG-S The middle ear includes the tympanic cavity and the three ossicles. what currency needed in scotland BART The currency needed in Scotland is Pound sterling. RAG-T Pound is the currency needed in Scotland. RAG-S The currency needed in Scotland is the pound sterling. This state has the largest number of counties in the U.S. RAG-T It's the only U.S. state named for a U.S. president RAG-S It's the state where you'll find Mount Rainier National Park The Divine Comedy BART * This epic poem by Dante is divided into 3 parts: the Inferno, the Purgatorio & the Purgatorio RAG-T Dante's \"Inferno\" is the first part of this epic poem RAG-S This 14th century work is divided into 3 sections: \"Inferno\", \"Purgatorio\" & \"Paradiso\"\n\nFigure 3 :\n3Left: NQ performance as more documents are retrieved. Center: Fraction of answers in NQ where the answer occurs somewhere in the top K documents. Right: MS-MARCO Bleu-1 and Rouge-L as more documents are retrieved.\n\nFigure 4 :\n4Annotation interface for human evaluation of factuality. A pop-out for detailed instructions and a worked example appear when clicking \"view tool guide\".\n\n\nTable 1: Open-Domain QA Test Scores. For TQA, the left column uses the test split commonly used in Open-Domain QA. The right column uses the hidden TQA Wiki test split. See Appendix B for further information.Model \n\nNQ \nTQA \nWQ \nCT \n\nClosed-Book \nT5-11B [46] \n34.5 \n-/50.1 37.4 \n-\nT5-11B + SSM [46] 36.6 \n-/60.5 44.7 \n-\n\nOpen-Book \nREALM [18] \n40.4 \n-/ -\n40.7 46.8 \nDPR [22] \n41.5 57.9/ -\n41.1 50.6 \n\nRAG-Token \n44.1 55.2/66.1 45.5 50.0 \nRAG-Sequence \n44.5 56.1/68.0 45.2 52.2 \n\nModel \nJeopardy QGen \nMS-MARCO \nFEVER-3 FEVER-2 \nB-1 \nQB-1 \nR-L \nB-1 \nLabel Accuracy \n\nSotA \n-\n-\n49.8* 49.9* \n76.8 \n92.2* \n\nBART \n15.1 \n19.7 \n38.2 \n41.6 \n64.0 \n81.1 \n\nRAG-Token \n17.3 \n22.2 \n40.1 \n41.5 \n72.5 \n89.5 \nRAG-Sequence 14.7 \n21.4 \n40.8 \n44.2 \n\n\n\nTable 2 :\n2Generation and classification task Test Scores. SotA for MS-MARCO is[4], FEVER-3 is[61] and FEVER-2 is [51] * Uses gold context/evidence, best-performing model without gold access underlined. As FEVER is a classification dataset, RAG-Token and RAG-Sequence are equivalent.\n\nTable 1\n1shows results for RAG along with recent state-of-the-art models. On all four open-domain QA tasks, RAG sets a new state-of-the-art (in the case of TQA only on the T5-comparable split).\n\nTable 4 :\n4Example Generations for MS-MARCO and Jeopardy Question generation. RAG models generate mpre specific and factually accurate responses, whereas BART generate more factually incorrect (marked by '?'), or partially correct (marked by *) and more generic responses.\n\nTable 2\n2shows our results on the FEVER 3-way and 2-way classification task. For 3-way classification, \nRAG achieves accuracies that are within 4.3% of state-of-the-art models, which are complex pipeline \nsystems with domain-specific architectures and substantial engineering, trained using intermediate \nsupervision, which RAG does not require. \n\n\n\nTable 5 :\n5Ablations on the development set. As FEVER is a classification dataset, RAG-Token and RAG-Sequence are equivalent.\n\nTable 6\n6shows that RAG-Sequence generations are more \n\nThe reader is referred to Karpukhin et al.[22] for further details on how Wikipedia is pre-processed.\nAcknowledgmentsEP thanks supports from the NSF Graduate Research Fellowship.\nPayal Bajaj, Daniel Campos, Nick Craswell, Li Deng, Jianfeng Gao, Xiaodong Liu, Rangan Majumder, Andrew Mcnamara, Bhaskar Mitra, Tri Nguyen, Mir Rosenberg, Xia Song, Alina Stoica, Saurabh Tiwary, Tong Wang, Marco, arXiv:1611.09268arXiv: 1611.09268A Human Generated MAchine Reading COmprehension Dataset. Payal Bajaj, Daniel Campos, Nick Craswell, Li Deng, Jianfeng Gao, Xiaodong Liu, Rangan Majumder, Andrew McNamara, Bhaskar Mitra, Tri Nguyen, Mir Rosenberg, Xia Song, Alina Stoica, Saurabh Tiwary, and Tong Wang. MS MARCO: A Human Generated MAchine Reading COmprehension Dataset. arXiv:1611.09268 [cs], November 2016. URL http: //arxiv.org/abs/1611.09268. arXiv: 1611.09268.\n\nModeling of the question answering task in the yodaqa system. Petr Baudi\u0161, Jan \u0160ediv\u1ef3, International Conference of the Cross-Language Evaluation Forum for European Languages. SpringerPetr Baudi\u0161 and Jan \u0160ediv\u1ef3. Modeling of the question answering task in the yodaqa system. In International Conference of the Cross-Language Evaluation Forum for European Languages, pages 222-228. Springer, 2015. URL https://link.springer.com/chapter/10.1007% 2F978-3-319-24027-5_20.\n\nSemantic Parsing on Freebase from Question-Answer Pairs. Jonathan Berant, Andrew Chou, Roy Frostig, Percy Liang, Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing. the 2013 Conference on Empirical Methods in Natural Language ProcessingSeattle, Washington, USAAssociation for Computational LinguisticsJonathan Berant, Andrew Chou, Roy Frostig, and Percy Liang. Semantic Parsing on Freebase from Question-Answer Pairs. In Proceedings of the 2013 Conference on Empirical Methods in Natural Language Processing, pages 1533-1544, Seattle, Washington, USA, October 2013. Association for Computational Linguistics. URL http://www.aclweb.org/anthology/ D13-1160.\n\nPalm: Pre-training an autoencod-ing&autoregressive language model for context-conditioned generation. ArXiv, abs. Bin Bi, Chenliang Li, Chen Wu, Ming Yan, Wei Wang, Bin Bi, Chenliang Li, Chen Wu, Ming Yan, and Wei Wang. Palm: Pre-training an autoencod- ing&autoregressive language model for context-conditioned generation. ArXiv, abs/2004.07159, 2020. URL https://arxiv.org/abs/2004.07159.\n\nReading Wikipedia to Answer Open-Domain Questions. Danqi Chen, Adam Fisch, Jason Weston, Antoine Bordes, 10.18653/v1/P17-1171Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics. the 55th Annual Meeting of the Association for Computational LinguisticsVancouver, CanadaAssociation for Computational Linguistics1Long Papers)Danqi Chen, Adam Fisch, Jason Weston, and Antoine Bordes. Reading Wikipedia to Answer Open-Domain Questions. In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1870-1879, Vancouver, Canada, July 2017. Association for Computational Linguistics. doi: 10.18653/v1/P17-1171. URL https://www.aclweb.org/anthology/P17-1171.\n\nCoarse-to-fine question answering for long documents. Eunsol Choi, Daniel Hewlett, Jakob Uszkoreit, Illia Polosukhin, Alexandre Lacoste, Jonathan Berant, 10.18653/v1/P17-1020Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics. the 55th Annual Meeting of the Association for Computational LinguisticsVancouver, CanadaAssociation for Computational Linguistics1Long Papers)Eunsol Choi, Daniel Hewlett, Jakob Uszkoreit, Illia Polosukhin, Alexandre Lacoste, and Jonathan Berant. Coarse-to-fine question answering for long documents. In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 209-220, Vancouver, Canada, July 2017. Association for Computational Linguistics. doi: 10.18653/v1/P17-1020. URL https://www.aclweb.org/anthology/P17-1020.\n\nSimple and Effective Multi-Paragraph Reading Comprehension. Christopher Clark, Matt Gardner, arXiv:1710.10723arXiv: 1710.10723Christopher Clark and Matt Gardner. Simple and Effective Multi-Paragraph Reading Compre- hension. arXiv:1710.10723 [cs], October 2017. URL http://arxiv.org/abs/1710.10723. arXiv: 1710.10723.\n\nBERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. Jacob Devlin, Ming-Wei Chang, Kenton Lee, Kristina Toutanova, 10.18653/v1/N19-1423Proceedings of the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. the 2019 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language TechnologiesMinneapolis, MinnesotaAssociation for Computational Linguistics1Jacob Devlin, Ming-Wei Chang, Kenton Lee, and Kristina Toutanova. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding. In Proceedings of the 2019 Con- ference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long and Short Papers), pages 4171-4186, Minneapolis, Minnesota, June 2019. Association for Computational Linguistics. doi: 10.18653/v1/N19-1423. URL https://www.aclweb.org/anthology/N19-1423.\n\nWizard of wikipedia: Knowledge-powered conversational agents. Emily Dinan, Stephen Roller, Kurt Shuster, Angela Fan, Michael Auli, Jason Weston, International Conference on Learning Representations. Emily Dinan, Stephen Roller, Kurt Shuster, Angela Fan, Michael Auli, and Jason Weston. Wiz- ard of wikipedia: Knowledge-powered conversational agents. In International Conference on Learning Representations, 2019. URL https://openreview.net/forum?id=r1l73iRqKm.\n\nSearchQA: A New Q&A Dataset Augmented with Context from a Search Engine. Matthew Dunn, Levent Sagun, Mike Higgins, V Ugur Guney, Volkan Cirik, Kyunghyun Cho, arXiv:1704.05179arXiv: 1704.05179Matthew Dunn, Levent Sagun, Mike Higgins, V. Ugur Guney, Volkan Cirik, and Kyunghyun Cho. SearchQA: A New Q&A Dataset Augmented with Context from a Search Engine. arXiv:1704.05179 [cs], April 2017. URL http://arxiv.org/abs/1704.05179. arXiv: 1704.05179.\n\nHierarchical neural story generation. Angela Fan, Mike Lewis, Yann Dauphin, 10.18653/v1/P18-1082Proceedings of the 56th Annual Meeting of the Association for Computational Linguistics. the 56th Annual Meeting of the Association for Computational LinguisticsMelbourne, AustraliaAssociation for Computational Linguistics1Long Papers)Angela Fan, Mike Lewis, and Yann Dauphin. Hierarchical neural story generation. In Proceed- ings of the 56th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 889-898, Melbourne, Australia, July 2018. Association for Computational Linguistics. doi: 10.18653/v1/P18-1082. URL https://www.aclweb.org/anthology/ P18-1082.\n\nELI5: Long form question answering. Angela Fan, Yacine Jernite, Ethan Perez, David Grangier, Jason Weston, Michael Auli, 10.18653/v1/P19-1346Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics. the 57th Annual Meeting of the Association for Computational LinguisticsFlorence, ItalyAssociation for Computational LinguisticsAngela Fan, Yacine Jernite, Ethan Perez, David Grangier, Jason Weston, and Michael Auli. ELI5: Long form question answering. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3558-3567, Florence, Italy, July 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1346. URL https://www.aclweb.org/ anthology/P19-1346.\n\nAugmenting transformers with KNN-based composite memory. Angela Fan, Claire Gardent, Chloe Braud, Antoine Bordes, Angela Fan, Claire Gardent, Chloe Braud, and Antoine Bordes. Augmenting transformers with KNN-based composite memory, 2020. URL https://openreview.net/forum?id= H1gx1CNKPH.\n\nEntities as experts: Sparse memory access with entity supervision. ArXiv, abs. Thibault F\u00e9vry, Baldini Livio, Nicholas Soares, Eunsol Fitzgerald, Tom Choi, Kwiatkowski, Thibault F\u00e9vry, Livio Baldini Soares, Nicholas FitzGerald, Eunsol Choi, and Tom Kwiatkowski. Entities as experts: Sparse memory access with entity supervision. ArXiv, abs/2004.07202, 2020. URL https://arxiv.org/abs/2004.07202.\n\nA knowledge-grounded neural conversation model. Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Michel Wen Tau Yih, Galley, AAAI Conference on Artificial Intelligence. Marjan Ghazvininejad, Chris Brockett, Ming-Wei Chang, Bill Dolan, Jianfeng Gao, Wen tau Yih, and Michel Galley. A knowledge-grounded neural conversation model. In AAAI Conference on Artificial Intelligence, 2018. URL https://www.aaai.org/ocs/index.php/ AAAI/AAAI18/paper/view/16710.\n\nSearch engine guided neural machine translation. Jiatao Gu, Yong Wang, Kyunghyun Cho, O K Victor, Li, AAAI Conference on Artificial Intelligence. Jiatao Gu, Yong Wang, Kyunghyun Cho, and Victor O.K. Li. Search engine guided neural machine translation. In AAAI Conference on Artificial Intelligence, 2018. URL https: //www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/view/17282.\n\nGenerating sentences by editing prototypes. Kelvin Guu, B Tatsunori, Yonatan Hashimoto, Percy Oren, Liang, 10.1162/tacl_a_00030Transactions of the Association for Computational Linguistics. 6Kelvin Guu, Tatsunori B. Hashimoto, Yonatan Oren, and Percy Liang. Generating sentences by editing prototypes. Transactions of the Association for Computational Linguistics, 6:437-450, 2018. doi: 10.1162/tacl_a_00030. URL https://www.aclweb.org/anthology/Q18-1031.\n\nREALM: Retrieval-augmented language model pre-training. ArXiv, abs. Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, Ming-Wei Chang, Kelvin Guu, Kenton Lee, Zora Tung, Panupong Pasupat, and Ming-Wei Chang. REALM: Retrieval-augmented language model pre-training. ArXiv, abs/2002.08909, 2020. URL https: //arxiv.org/abs/2002.08909.\n\nBillion-scale similarity search with gpus. Jeff Johnson, Matthijs Douze, Herv\u00e9 J\u00e9gou, arXiv:1702.08734arXiv preprintJeff Johnson, Matthijs Douze, and Herv\u00e9 J\u00e9gou. Billion-scale similarity search with gpus. arXiv preprint arXiv:1702.08734, 2017. URL https://arxiv.org/abs/1702.08734.\n\nTriviaQA: A Large Scale Distantly Supervised Challenge Dataset for Reading Comprehension. Mandar Joshi, Eunsol Choi, Daniel Weld, Luke Zettlemoyer, 10.18653/v1/P17-1147Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics. the 55th Annual Meeting of the Association for Computational LinguisticsVancouver, CanadaAssociation for Computational Linguistics1Long Papers)Mandar Joshi, Eunsol Choi, Daniel Weld, and Luke Zettlemoyer. TriviaQA: A Large Scale Distantly Supervised Challenge Dataset for Reading Comprehension. In Proceedings of the 55th Annual Meeting of the Association for Computational Linguistics (Volume 1: Long Papers), pages 1601-1611, Vancouver, Canada, July 2017. Association for Computational Linguistics. doi: 10.18653/v1/P17-1147. URL https://www.aclweb.org/anthology/P17-1147.\n\nInferring algorithmic patterns with stackaugmented recurrent nets. Armand Joulin, Tomas Mikolov, Proceedings of the 28th International Conference on Neural Information Processing Systems. the 28th International Conference on Neural Information Processing SystemsCambridge, MA, USAMIT Press1Armand Joulin and Tomas Mikolov. Inferring algorithmic patterns with stack- augmented recurrent nets. In Proceedings of the 28th International Conference on Neural Information Processing Systems -Volume 1, NIPS'15, page 190-198, Cam- bridge, MA, USA, 2015. MIT Press. URL https://papers.nips.cc/paper/ 5857-inferring-algorithmic-patterns-with-stack-augmented-recurrent-nets.\n\nDense passage retrieval for open-domain question answering. Vladimir Karpukhin, Barlas Oguz, Sewon Min, Ledell Wu, Sergey Edunov, Danqi Chen, Wen-Tau Yih, arXiv:2004.04906arXiv preprintVladimir Karpukhin, Barlas Oguz, Sewon Min, Ledell Wu, Sergey Edunov, Danqi Chen, and Wen-tau Yih. Dense passage retrieval for open-domain question answering. arXiv preprint arXiv:2004.04906, 2020. URL https://arxiv.org/abs/2004.04906.\n\nGeneralization through memorization: Nearest neighbor language models. Urvashi Khandelwal, Omer Levy, Dan Jurafsky, Luke Zettlemoyer, Mike Lewis, International Conference on Learning Representations. Urvashi Khandelwal, Omer Levy, Dan Jurafsky, Luke Zettlemoyer, and Mike Lewis. Generaliza- tion through memorization: Nearest neighbor language models. In International Conference on Learning Representations, 2020. URL https://openreview.net/forum?id=HklBjCEKvH.\n\nAdam: A method for stochastic optimization. P Diederik, Jimmy Kingma, Ba, 3rd International Conference on Learning Representations. San Diego, CA, USAConference Track ProceedingsDiederik P. Kingma and Jimmy Ba. Adam: A method for stochastic optimization. In Yoshua Bengio and Yann LeCun, editors, 3rd International Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015. URL http://arxiv.org/abs/1412.6980.\n\nNatural Questions: a Benchmark for Question Answering Research. Tom Kwiatkowski, Jennimaria Palomaki, Olivia Redfield, Michael Collins, Ankur Parikh, Chris Alberti, Danielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Kenton Lee, Kristina N Toutanova, Llion Jones, Ming-Wei Chang, Andrew Dai, Jakob Uszkoreit, Quoc Le, Slav Petrov, Transactions of the Association of Computational Linguistics. Tom Kwiatkowski, Jennimaria Palomaki, Olivia Redfield, Michael Collins, Ankur Parikh, Chris Alberti, Danielle Epstein, Illia Polosukhin, Matthew Kelcey, Jacob Devlin, Ken- ton Lee, Kristina N. Toutanova, Llion Jones, Ming-Wei Chang, Andrew Dai, Jakob Uszkoreit, Quoc Le, and Slav Petrov. Natural Questions: a Benchmark for Ques- tion Answering Research. Transactions of the Association of Computational Lin- guistics, 2019. URL https://tomkwiat.users.x20web.corp.google.com/papers/ natural-questions/main-1455-kwiatkowski.pdf.\n\nLarge memory layers with product keys. Guillaume Lample, Alexandre Sablayrolles, Marc&apos; Aurelio Ranzato, Ludovic Denoyer, Herve Jegou, Advances in Neural Information Processing Systems. H. Wallach, H. Larochelle, A. Beygelzimer, F. d' Alch\u00e9-Buc, E. Fox, and R. GarnettCurran Associates, Inc32Guillaume Lample, Alexandre Sablayrolles, Marc' Aurelio Ranzato, Ludovic Denoyer, and Herve Jegou. Large memory layers with product keys. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d' Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural In- formation Processing Systems 32, pages 8548-8559. Curran Associates, Inc., 2019. URL http: //papers.nips.cc/paper/9061-large-memory-layers-with-product-keys.pdf.\n\nLatent retrieval for weakly supervised open domain question answering. Kenton Lee, Ming-Wei Chang, Kristina Toutanova, 10.18653/v1/P19-1612Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics. the 57th Annual Meeting of the Association for Computational LinguisticsFlorence, ItalyAssociation for Computational LinguisticsKenton Lee, Ming-Wei Chang, and Kristina Toutanova. Latent retrieval for weakly supervised open domain question answering. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 6086-6096, Florence, Italy, July 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1612. URL https://www.aclweb.org/ anthology/P19-1612.\n\nBART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension. Mike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Veselin Stoyanov, Luke Zettlemoyer, arXiv:1910.13461arXiv preprintMike Lewis, Yinhan Liu, Naman Goyal, Marjan Ghazvininejad, Abdelrahman Mohamed, Omer Levy, Veselin Stoyanov, and Luke Zettlemoyer. BART: Denoising sequence-to-sequence pre-training for natural language generation, translation, and comprehension. arXiv preprint arXiv:1910.13461, 2019. URL https://arxiv.org/abs/1910.13461.\n\nA diversity-promoting objective function for neural conversation models. Jiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao, Bill Dolan, 10.18653/v1/N16-1014Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language TechnologiesSan Diego, CaliforniaAssociation for Computational LinguisticsJiwei Li, Michel Galley, Chris Brockett, Jianfeng Gao, and Bill Dolan. A diversity-promoting objective function for neural conversation models. In Proceedings of the 2016 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, pages 110-119, San Diego, California, June 2016. Association for Computational Linguistics. doi: 10.18653/v1/N16-1014. URL https://www.aclweb.org/anthology/ N16-1014.\n\nAcute-eval: Improved dialogue evaluation with optimized questions and multi-turn comparisons. Margaret Li, Jason Weston, Stephen Roller, abs/1909.03087ArXiv. Margaret Li, Jason Weston, and Stephen Roller. Acute-eval: Improved dialogue evaluation with optimized questions and multi-turn comparisons. ArXiv, abs/1909.03087, 2019. URL https://arxiv.org/abs/1909.03087.\n\nRobust neural machine translation with joint textual and phonetic embedding. Hairong Liu, Mingbo Ma, Liang Huang, Hao Xiong, Zhongjun He, 10.18653/v1/P19-1291Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics. the 57th Annual Meeting of the Association for Computational LinguisticsFlorence, ItalyAssociation for Computational LinguisticsHairong Liu, Mingbo Ma, Liang Huang, Hao Xiong, and Zhongjun He. Robust neural machine translation with joint textual and phonetic embedding. In Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics, pages 3044-3049, Florence, Italy, July 2019. Association for Computational Linguistics. doi: 10.18653/v1/P19-1291. URL https://www.aclweb.org/anthology/P19-1291.\n\nGenerating wikipedia by summarizing long sequences. J Peter, * Liu, Mohammad Saleh, * , Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, Noam Shazeer, International Conference on Learning Representations. Peter J. Liu*, Mohammad Saleh*, Etienne Pot, Ben Goodrich, Ryan Sepassi, Lukasz Kaiser, and Noam Shazeer. Generating wikipedia by summarizing long sequences. In International Conference on Learning Representations, 2018. URL https://openreview.net/forum? id=Hyg0vbWC-.\n\nEfficient and robust approximate nearest neighbor search using hierarchical navigable small world graphs. A Yury, D A Malkov, Yashunin, IEEE Transactions on Pattern Analysis and Machine Intelligence. 42Yury A. Malkov and D. A. Yashunin. Efficient and robust approximate nearest neighbor search using hierarchical navigable small world graphs. IEEE Transactions on Pattern Analysis and Machine Intelligence, 42:824-836, 2016. URL https://arxiv.org/abs/1603.09320.\n\nGary Marcus, arXiv:2002.06177The next decade in ai: four steps towards robust artificial intelligence. arXiv preprintGary Marcus. The next decade in ai: four steps towards robust artificial intelligence. arXiv preprint arXiv:2002.06177, 2020. URL https://arxiv.org/abs/2002.06177.\n\nHow decoding strategies affect the verifiability of generated text. Luca Massarelli, Fabio Petroni, Aleksandra Piktus, Myle Ott, Tim Rockt\u00e4schel, Vassilis Plachouras, Fabrizio Silvestri, Sebastian Riedel, arXiv:1911.03587arXiv preprintLuca Massarelli, Fabio Petroni, Aleksandra Piktus, Myle Ott, Tim Rockt\u00e4schel, Vassilis Plachouras, Fabrizio Silvestri, and Sebastian Riedel. How decoding strategies affect the verifiability of generated text. arXiv preprint arXiv:1911.03587, 2019. URL https: //arxiv.org/abs/1911.03587.\n\nTowards exploiting background knowledge for building conversation systems. Nikita Moghe, Siddhartha Arora, Suman Banerjee, Mitesh M Khapra, 10.18653/v1/D18-1255Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing. the 2018 Conference on Empirical Methods in Natural Language ProcessingBrussels, BelgiumAssociation for Computational LinguisticsNikita Moghe, Siddhartha Arora, Suman Banerjee, and Mitesh M. Khapra. Towards exploit- ing background knowledge for building conversation systems. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 2322-2332, Brus- sels, Belgium, October-November 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1255. URL https://www.aclweb.org/anthology/D18-1255.\n\nTowards a better metric for evaluating question generation systems. Preksha Nema, Mitesh M Khapra, 10.18653/v1/D18-1429Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing. the 2018 Conference on Empirical Methods in Natural Language ProcessingBrussels, BelgiumAssociation for Computational LinguisticsPreksha Nema and Mitesh M. Khapra. Towards a better metric for evaluating question generation systems. In Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing, pages 3950-3959, Brussels, Belgium, October-November 2018. Association for Computational Linguistics. doi: 10.18653/v1/D18-1429. URL https://www.aclweb.org/ anthology/D18-1429.\n\nA human generated machine reading comprehension dataset. Tri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao, Saurabh Tiwary, Rangan Majumder, Li Deng, Marco, Proceedings of the Workshop on Cognitive Computation: Integrating neural and symbolic approaches 2016 co-located with the 30th Annual Conference on Neural Information Processing Systems (NIPS 2016). Tarek Richard Besold, Antoine Bordes, Artur S. d'Avila Garcez, and Greg Waynethe Workshop on Cognitive Computation: Integrating neural and symbolic approaches 2016 co-located with the 30th Annual Conference on Neural Information Processing Systems (NIPS 2016)Barcelona, Spain1773CEUR Workshop Proceedings. CEUR-WS.orgTri Nguyen, Mir Rosenberg, Xia Song, Jianfeng Gao, Saurabh Tiwary, Rangan Majumder, and Li Deng. MS MARCO: A human generated machine reading comprehension dataset. In Tarek Richard Besold, Antoine Bordes, Artur S. d'Avila Garcez, and Greg Wayne, editors, Proceedings of the Workshop on Cognitive Computation: Integrating neural and symbolic approaches 2016 co-located with the 30th Annual Conference on Neural Information Processing Systems (NIPS 2016), Barcelona, Spain, December 9, 2016, volume 1773 of CEUR Workshop Proceedings. CEUR-WS.org, 2016. URL http://ceur-ws.org/Vol-1773/CoCoNIPS_ 2016_paper9.pdf.\n\nRodrigo Nogueira, Kyunghyun Cho, arXiv:1901.04085Passage re-ranking with BERT. arXiv preprintRodrigo Nogueira and Kyunghyun Cho. Passage re-ranking with BERT. arXiv preprint arXiv:1901.04085, 2019. URL https://arxiv.org/abs/1901.04085.\n\nFinding generalizable evidence by learning to convince q&a models. Ethan Perez, Siddharth Karamcheti, Rob Fergus, Jason Weston, Douwe Kiela, Kyunghyun Cho, 10.18653/v1/D19-1244Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP). the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP)Hong Kong, ChinaAssociation for Computational LinguisticsEthan Perez, Siddharth Karamcheti, Rob Fergus, Jason Weston, Douwe Kiela, and Kyunghyun Cho. Finding generalizable evidence by learning to convince q&a models. In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 2402-2411, Hong Kong, China, November 2019. Association for Computational Linguistics. doi: 10.18653/v1/D19-1244. URL https://www.aclweb.org/anthology/D19-1244.\n\nLanguage models as knowledge bases?. Fabio Petroni, Tim Rockt\u00e4schel, Sebastian Riedel, Patrick Lewis, Anton Bakhtin, Yuxiang Wu, Alexander Miller, 10.18653/v1/D19-1250Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP). the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP)Hong Kong, ChinaAssociation for Computational LinguisticsFabio Petroni, Tim Rockt\u00e4schel, Sebastian Riedel, Patrick Lewis, Anton Bakhtin, Yuxiang Wu, and Alexander Miller. Language models as knowledge bases? In Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 2463-2473, Hong Kong, China, November 2019. Association for Computational Linguistics. doi: 10.18653/v1/ D19-1250. URL https://www.aclweb.org/anthology/D19-1250.\n\nHow context affects language models' factual predictions. Fabio Petroni, Patrick Lewis, Aleksandra Piktus, Tim Rockt\u00e4schel, Yuxiang Wu, Alexander H Miller, Sebastian Riedel, Automated Knowledge Base Construction. Fabio Petroni, Patrick Lewis, Aleksandra Piktus, Tim Rockt\u00e4schel, Yuxiang Wu, Alexander H. Miller, and Sebastian Riedel. How context affects language models' factual predictions. In Automated Knowledge Base Construction, 2020. URL https://openreview.net/forum? id=025X0zPfn.\n\nImproving Language Understanding by Generative Pre-Training. Alec Radford, Alec Radford. Improving Language Understanding by Generative Pre-Training, 2018. URL https://s3-us-west-2.amazonaws.com/openai-assets/research-covers/ language-unsupervised/language_understanding_paper.pdf.\n\nLanguage models are unsupervised multitask learners. Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, Ilya Sutskever, Alec Radford, Jeff Wu, Rewon Child, David Luan, Dario Amodei, and Ilya Sutskever. Language models are unsupervised multitask learners, 2019. URL https://d4mucfpksywv.cloudfront.net/better-language-models/language_ models_are_unsupervised_multitask_learners.pdf.\n\nExploring the limits of transfer learning with a unified text-to-text transformer. Colin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, Peter J Liu, arXiv e-printsColin Raffel, Noam Shazeer, Adam Roberts, Katherine Lee, Sharan Narang, Michael Matena, Yanqi Zhou, Wei Li, and Peter J. Liu. Exploring the limits of transfer learning with a unified text-to-text transformer. arXiv e-prints, 2019. URL https://arxiv.org/abs/1910.10683.\n\nHow much knowledge can you pack into the parameters of a language model? arXiv e-prints. Adam Roberts, Colin Raffel, Noam Shazeer, Adam Roberts, Colin Raffel, and Noam Shazeer. How much knowledge can you pack into the parameters of a language model? arXiv e-prints, 2020. URL https://arxiv.org/abs/ 2002.08910.\n\nThe probabilistic relevance framework: Bm25 and beyond. Found. Stephen Robertson, Hugo Zaragoza, 10.1561/15000000191554-0669. doi: 10.1561/ 1500000019Trends Inf. Retr. 34Stephen Robertson and Hugo Zaragoza. The probabilistic relevance framework: Bm25 and beyond. Found. Trends Inf. Retr., 3(4):333-389, April 2009. ISSN 1554-0669. doi: 10.1561/ 1500000019. URL https://doi.org/10.1561/1500000019.\n\nEnd-to-end memory networks. Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, Advances in Neural Information Processing Systems. C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. GarnettCurran Associates, Inc28Sainbayar Sukhbaatar, arthur szlam, Jason Weston, and Rob Fergus. End-to-end memory net- works. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in Neural Information Processing Systems 28, pages 2440-2448. Curran Associates, Inc., 2015. URL http://papers.nips.cc/paper/5846-end-to-end-memory-networks.pdf.\n\nEnd-To-End Memory Networks. Sainbayar Sukhbaatar, Jason Weston, Rob Fergus, Advances in Neural Information Processing Systems. C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. GarnettCurran Associates, Inc28Sainbayar Sukhbaatar, arthur szlam, Jason Weston, and Rob Fergus. End-To-End Memory Net- works. In C. Cortes, N. D. Lawrence, D. D. Lee, M. Sugiyama, and R. Garnett, editors, Advances in Neural Information Processing Systems 28, pages 2440-2448. Curran Associates, Inc., 2015. URL http://papers.nips.cc/paper/5846-end-to-end-memory-networks.pdf.\n\nFEVER: a large-scale dataset for fact extraction and VERification. James Thorne, Andreas Vlachos, Christos Christodoulopoulos, Arpit Mittal, 10.18653/v1/N18-1074Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language TechnologiesNew Orleans, LouisianaAssociation for Computational Linguistics1Long PapersJames Thorne, Andreas Vlachos, Christos Christodoulopoulos, and Arpit Mittal. FEVER: a large-scale dataset for fact extraction and VERification. In Proceedings of the 2018 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, Volume 1 (Long Papers), pages 809-819, New Orleans, Louisiana, June 2018. Association for Computational Linguistics. doi: 10.18653/v1/N18-1074. URL https://www.aclweb.org/anthology/N18-1074.\n\nAvoiding catastrophic forgetting in mitigating model biases in sentence-pair classification with elastic weight consolidation. ArXiv, abs. H James, Andreas Thorne, Vlachos, James H. Thorne and Andreas Vlachos. Avoiding catastrophic forgetting in mitigating model biases in sentence-pair classification with elastic weight consolidation. ArXiv, abs/2004.14366, 2020. URL https://arxiv.org/abs/2004.14366.\n\nAttention is all you need. Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, Kaiser, ; I Illia Polosukhin, U V Guyon, S Luxburg, H Bengio, R Wallach, S Fergus, R Vishwanathan, Garnett, Advances in Neural Information Processing Systems. Curran Associates, Inc30Ashish Vaswani, Noam Shazeer, Niki Parmar, Jakob Uszkoreit, Llion Jones, Aidan N Gomez, \u0141 ukasz Kaiser, and Illia Polosukhin. Attention is all you need. In I. Guyon, U. V. Luxburg, S. Bengio, H. Wallach, R. Fergus, S. Vishwanathan, and R. Garnett, editors, Advances in Neural Information Processing Systems 30, pages 5998-6008. Curran Associates, Inc., 2017. URL http://papers.nips.cc/paper/7181-attention-is-all-you-need.pdf.\n\nDiverse beam search for improved description of complex scenes. Ashwin Vijayakumar, Michael Cogswell, Ramprasaath Selvaraju, Qing Sun, Stefan Lee, David Crandall, Dhruv Batra, Ashwin Vijayakumar, Michael Cogswell, Ramprasaath Selvaraju, Qing Sun, Stefan Lee, David Crandall, and Dhruv Batra. Diverse beam search for improved description of com- plex scenes. 2018. URL https://www.aaai.org/ocs/index.php/AAAI/AAAI18/paper/ view/17329.\n\nGLUE: A multi-task benchmark and analysis platform for natural language understanding. Alex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, Samuel Bowman, 10.18653/v1/W18-5446Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP. the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLPBrussels, BelgiumAssociation for Computational LinguisticsAlex Wang, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel Bowman. GLUE: A multi-task benchmark and analysis platform for natural language understanding. In Proceedings of the 2018 EMNLP Workshop BlackboxNLP: Analyzing and Interpreting Neural Networks for NLP, pages 353-355, Brussels, Belgium, November 2018. Association for Computational Linguistics. doi: 10.18653/v1/W18-5446. URL https://www.aclweb.org/ anthology/W18-5446.\n\nSuperGLUE: A Stickier Benchmark for General-Purpose Language Understanding Systems. Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, Samuel Bowman, Advances in Neural Information Processing Systems. H. Wallach, H. Larochelle, A. Beygelzimer, F. d\\textquotesingle Alch\u00e9-Buc, E. Fox, and R. GarnettCurran Associates, Inc32Alex Wang, Yada Pruksachatkun, Nikita Nangia, Amanpreet Singh, Julian Michael, Felix Hill, Omer Levy, and Samuel Bowman. SuperGLUE: A Stickier Benchmark for General- Purpose Language Understanding Systems. In H. Wallach, H. Larochelle, A. Beygelzimer, F. d\\textquotesingle Alch\u00e9-Buc, E. Fox, and R. Garnett, editors, Advances in Neural Information Processing Systems 32, pages 3261-3275. Curran Associates, Inc., 2019. URL https:// arxiv.org/abs/1905.00537.\n\nR 3 : Reinforced ranker-reader for open-domain question answering. Shuohang Wang, Mo Yu, Xiaoxiao Guo, Zhiguo Wang, Tim Klinger, Wei Zhang, Shiyu Chang, Gerry Tesauro, Bowen Zhou, Jing Jiang, Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI-18), the 30th innovative Applications of Artificial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI-18). Sheila A. McIlraith and Kilian Q. Weinbergerthe Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI-18), the 30th innovative Applications of Artificial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI-18)New Orleans, Louisiana, USAAAAI PressShuohang Wang, Mo Yu, Xiaoxiao Guo, Zhiguo Wang, Tim Klinger, Wei Zhang, Shiyu Chang, Gerry Tesauro, Bowen Zhou, and Jing Jiang. R 3 : Reinforced ranker-reader for open-domain question answering. In Sheila A. McIlraith and Kilian Q. Weinberger, editors, Proceedings of the Thirty-Second AAAI Conference on Artificial Intelligence, (AAAI-18), the 30th innovative Applications of Artificial Intelligence (IAAI-18), and the 8th AAAI Symposium on Educational Advances in Artificial Intelligence (EAAI-18), New Orleans, Louisiana, USA, February 2-7, 2018, pages 5981-5988. AAAI Press, 2018. URL https://www.aaai.org/ocs/index. php/AAAI/AAAI18/paper/view/16712.\n\nEvidence aggregation for answer reranking in open-domain question answering. Shuohang Wang, Mo Yu, Jing Jiang, Wei Zhang, Xiaoxiao Guo, Shiyu Chang, Zhiguo Wang, Tim Klinger, Gerald Tesauro, Murray Campbell, ICLR. Shuohang Wang, Mo Yu, Jing Jiang, Wei Zhang, Xiaoxiao Guo, Shiyu Chang, Zhiguo Wang, Tim Klinger, Gerald Tesauro, and Murray Campbell. Evidence aggregation for answer re- ranking in open-domain question answering. In ICLR, 2018. URL https://openreview. net/forum?id=rJl3yM-Ab.\n\nMemory networks. Jason Weston, Sumit Chopra, Antoine Bordes, 3rd International Conference on Learning Representations. San Diego, CA, USAConference Track ProceedingsJason Weston, Sumit Chopra, and Antoine Bordes. Memory networks. In Yoshua Bengio and Yann LeCun, editors, 3rd International Conference on Learning Representations, ICLR 2015, San Diego, CA, USA, May 7-9, 2015, Conference Track Proceedings, 2015. URL http://arxiv.org/abs/1410.3916.\n\nRetrieve and refine: Improved sequence generation models for dialogue. Jason Weston, Emily Dinan, Alexander Miller, 10.18653/v1/W18-5713Proceedings of the 2018 EMNLP Workshop SCAI: The 2nd International Workshop on Search-Oriented Conversational AI. the 2018 EMNLP Workshop SCAI: The 2nd International Workshop on Search-Oriented Conversational AIBrussels, BelgiumAssociation for Computational LinguisticsJason Weston, Emily Dinan, and Alexander Miller. Retrieve and refine: Improved sequence generation models for dialogue. In Proceedings of the 2018 EMNLP Workshop SCAI: The 2nd International Workshop on Search-Oriented Conversational AI, pages 87-92, Brussels, Belgium, October 2018. Association for Computational Linguistics. doi: 10.18653/v1/W18-5713. URL https://www.aclweb.org/anthology/W18-5713.\n\nAddressing semantic drift in question generation for semisupervised question answering. Shiyue Zhang, Mohit Bansal, 10.18653/v1/D19-1253Proceedings of the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP). the 2019 Conference on Empirical Methods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP)Hong Kong, ChinaAssociation for Computational LinguisticsNovember 2019Shiyue Zhang and Mohit Bansal. Addressing semantic drift in question generation for semi- supervised question answering. In Proceedings of the 2019 Conference on Empirical Meth- ods in Natural Language Processing and the 9th International Joint Conference on Natural Language Processing (EMNLP-IJCNLP), pages 2495-2509, Hong Kong, China, Novem- ber 2019. Association for Computational Linguistics. doi: 10.18653/v1/D19-1253. URL https://www.aclweb.org/anthology/D19-1253.\n\nReasoning over semantic-level graph for fact checking. Wanjun Zhong, Jingjing Xu, Duyu Tang, Zenan Xu, Nan Duan, Ming Zhou, Jiahai Wang, Jian Yin, abs/1909.03745ArXiv. Wanjun Zhong, Jingjing Xu, Duyu Tang, Zenan Xu, Nan Duan, Ming Zhou, Jiahai Wang, and Jian Yin. Reasoning over semantic-level graph for fact checking. ArXiv, abs/1909.03745, 2019. URL https://arxiv.org/abs/1909.03745.\n", "annotations": {"author": "[{\"end\":167,\"start\":68},{\"end\":251,\"start\":168},{\"end\":341,\"start\":252},{\"end\":427,\"start\":342},{\"end\":518,\"start\":428},{\"end\":602,\"start\":519},{\"end\":691,\"start\":603},{\"end\":774,\"start\":692},{\"end\":858,\"start\":775},{\"end\":946,\"start\":859},{\"end\":1035,\"start\":947},{\"end\":1119,\"start\":1036}]", "publisher": null, "author_last_name": "[{\"end\":81,\"start\":76},{\"end\":179,\"start\":174},{\"end\":269,\"start\":263},{\"end\":355,\"start\":348},{\"end\":446,\"start\":437},{\"end\":530,\"start\":525},{\"end\":619,\"start\":612},{\"end\":702,\"start\":697},{\"end\":786,\"start\":783},{\"end\":874,\"start\":863},{\"end\":963,\"start\":957},{\"end\":1047,\"start\":1042}]", "author_first_name": "[{\"end\":75,\"start\":68},{\"end\":173,\"start\":168},{\"end\":262,\"start\":252},{\"end\":347,\"start\":342},{\"end\":436,\"start\":428},{\"end\":524,\"start\":519},{\"end\":611,\"start\":603},{\"end\":696,\"start\":692},{\"end\":782,\"start\":775},{\"end\":862,\"start\":859},{\"end\":956,\"start\":947},{\"end\":1041,\"start\":1036}]", "author_affiliation": "[{\"end\":166,\"start\":97},{\"end\":250,\"start\":181},{\"end\":340,\"start\":271},{\"end\":426,\"start\":357},{\"end\":517,\"start\":448},{\"end\":601,\"start\":532},{\"end\":690,\"start\":621},{\"end\":773,\"start\":704},{\"end\":857,\"start\":788},{\"end\":945,\"start\":876},{\"end\":1034,\"start\":965},{\"end\":1118,\"start\":1049}]", "title": "[{\"end\":65,\"start\":1},{\"end\":1184,\"start\":1120}]", "venue": null, "abstract": "[{\"end\":2836,\"start\":1186}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b40\"},\"end\":2969,\"start\":2965},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":3075,\"start\":3071},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":3078,\"start\":3075},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":3298,\"start\":3294},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3402,\"start\":3398},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":3405,\"start\":3402},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":3408,\"start\":3405},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":3557,\"start\":3553},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":3571,\"start\":3567},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3643,\"start\":3640},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":4902,\"start\":4898},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":5004,\"start\":5000},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":5363,\"start\":5359},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":5674,\"start\":5670},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":5677,\"start\":5674},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":5707,\"start\":5703},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5747,\"start\":5743},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":6243,\"start\":6239},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":6261,\"start\":6258},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6281,\"start\":6278},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":6385,\"start\":6381},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":6574,\"start\":6571},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":6741,\"start\":6737},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9192,\"start\":9188},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":9352,\"start\":9349},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":9663,\"start\":9659},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9746,\"start\":9742},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":9900,\"start\":9896},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":9937,\"start\":9933},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":10075,\"start\":10071},{\"attributes\":{\"ref_id\":\"b51\"},\"end\":10115,\"start\":10111},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":10466,\"start\":10462},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":10892,\"start\":10888},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":11049,\"start\":11045},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":12931,\"start\":12927},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":12957,\"start\":12953},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":13095,\"start\":13094},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":13227,\"start\":13223},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":13311,\"start\":13307},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":13765,\"start\":13761},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":14011,\"start\":14008},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":14013,\"start\":14011},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":14016,\"start\":14013},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":14019,\"start\":14016},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":14195,\"start\":14191},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":14395,\"start\":14391},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14416,\"start\":14412},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":14439,\"start\":14436},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":14464,\"start\":14461},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":14627,\"start\":14623},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":15101,\"start\":15097},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":15270,\"start\":15266},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":15273,\"start\":15270},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":15367,\"start\":15363},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":15788,\"start\":15784},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":17717,\"start\":17713},{\"attributes\":{\"ref_id\":\"b59\"},\"end\":17882,\"start\":17878},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":17950,\"start\":17946},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":18487,\"start\":18483},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":18774,\"start\":18770},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":19783,\"start\":19779},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":20783,\"start\":20779},{\"attributes\":{\"ref_id\":\"b50\"},\"end\":25571,\"start\":25567},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":25598,\"start\":25594},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":27907,\"start\":27903},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":28545,\"start\":28541},{\"attributes\":{\"ref_id\":\"b52\"},\"end\":28570,\"start\":28566},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":28597,\"start\":28593},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":29385,\"start\":29382},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":30470,\"start\":30467},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":30473,\"start\":30470},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":30493,\"start\":30489},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":30515,\"start\":30511},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":30550,\"start\":30546},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":30585,\"start\":30581},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":30600,\"start\":30596},{\"attributes\":{\"ref_id\":\"b58\"},\"end\":30603,\"start\":30600},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":30605,\"start\":30603},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":30608,\"start\":30605},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":30626,\"start\":30622},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":30654,\"start\":30650},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":30657,\"start\":30654},{\"attributes\":{\"ref_id\":\"b53\"},\"end\":31153,\"start\":31149},{\"attributes\":{\"ref_id\":\"b54\"},\"end\":31156,\"start\":31153},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":31179,\"start\":31175},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":31181,\"start\":31179},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":31193,\"start\":31189},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":31380,\"start\":31376},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":31392,\"start\":31388},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":31395,\"start\":31392},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":31896,\"start\":31892},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":31899,\"start\":31896},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":32041,\"start\":32037},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":32069,\"start\":32066},{\"attributes\":{\"ref_id\":\"b56\"},\"end\":32072,\"start\":32069},{\"attributes\":{\"ref_id\":\"b55\"},\"end\":32075,\"start\":32072},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":32111,\"start\":32107},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":32114,\"start\":32111},{\"attributes\":{\"ref_id\":\"b57\"},\"end\":32546,\"start\":32542},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":32549,\"start\":32546},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":32571,\"start\":32567},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":32801,\"start\":32798},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":32804,\"start\":32801},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":32862,\"start\":32858},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":35882,\"start\":35878},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":36042,\"start\":36038},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":36115,\"start\":36111},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":36183,\"start\":36179},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":36205,\"start\":36201},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":36611,\"start\":36607},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":37363,\"start\":37359},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":38796,\"start\":38792},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":39253,\"start\":39249},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":39724,\"start\":39720},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":42510,\"start\":42507},{\"attributes\":{\"ref_id\":\"b60\"},\"end\":42526,\"start\":42522},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":43761,\"start\":43757}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":41298,\"start\":39854},{\"attributes\":{\"id\":\"fig_1\"},\"end\":41525,\"start\":41299},{\"attributes\":{\"id\":\"fig_2\"},\"end\":41692,\"start\":41526},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":42426,\"start\":41693},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":42711,\"start\":42427},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":42906,\"start\":42712},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":43180,\"start\":42907},{\"attributes\":{\"id\":\"tab_5\",\"type\":\"table\"},\"end\":43530,\"start\":43181},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":43657,\"start\":43531},{\"attributes\":{\"id\":\"tab_8\",\"type\":\"table\"},\"end\":43714,\"start\":43658}]", "paragraph": "[{\"end\":4180,\"start\":2852},{\"end\":4377,\"start\":4182},{\"end\":5486,\"start\":4379},{\"end\":6031,\"start\":5488},{\"end\":7081,\"start\":6033},{\"end\":7641,\"start\":7093},{\"end\":8234,\"start\":7643},{\"end\":8515,\"start\":8266},{\"end\":8840,\"start\":8614},{\"end\":9119,\"start\":8923},{\"end\":9232,\"start\":9138},{\"end\":9461,\"start\":9260},{\"end\":9664,\"start\":9463},{\"end\":9938,\"start\":9666},{\"end\":10244,\"start\":9958},{\"end\":10548,\"start\":10246},{\"end\":11215,\"start\":10561},{\"end\":11333,\"start\":11228},{\"end\":11456,\"start\":11347},{\"end\":11614,\"start\":11539},{\"end\":12340,\"start\":11631},{\"end\":12728,\"start\":12342},{\"end\":13608,\"start\":12744},{\"end\":14316,\"start\":13643},{\"end\":15435,\"start\":14318},{\"end\":16016,\"start\":15470},{\"end\":16541,\"start\":16018},{\"end\":16794,\"start\":16543},{\"end\":17657,\"start\":16827},{\"end\":18150,\"start\":17659},{\"end\":18742,\"start\":18152},{\"end\":19356,\"start\":18764},{\"end\":19824,\"start\":19358},{\"end\":20970,\"start\":19851},{\"end\":22017,\"start\":21015},{\"end\":23557,\"start\":22052},{\"end\":23802,\"start\":23590},{\"end\":24769,\"start\":23804},{\"end\":25799,\"start\":24771},{\"end\":26250,\"start\":25821},{\"end\":27078,\"start\":26264},{\"end\":28372,\"start\":27080},{\"end\":28877,\"start\":28397},{\"end\":29038,\"start\":28879},{\"end\":30261,\"start\":29063},{\"end\":30860,\"start\":30278},{\"end\":31731,\"start\":30862},{\"end\":32392,\"start\":31733},{\"end\":33169,\"start\":32394},{\"end\":34483,\"start\":33184},{\"end\":34828,\"start\":34485},{\"end\":35598,\"start\":34868},{\"end\":36522,\"start\":35629},{\"end\":37244,\"start\":36553},{\"end\":38209,\"start\":37280},{\"end\":39139,\"start\":38226},{\"end\":39853,\"start\":39164}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":8595,\"start\":8516},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8922,\"start\":8841},{\"attributes\":{\"id\":\"formula_2\"},\"end\":9259,\"start\":9233},{\"attributes\":{\"id\":\"formula_3\"},\"end\":11538,\"start\":11457}]", "table_ref": "[{\"end\":20908,\"start\":20901},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":22071,\"start\":22064},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":22533,\"start\":22526},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":22799,\"start\":22792},{\"end\":23027,\"start\":23020},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":23657,\"start\":23650},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":27341,\"start\":27334},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":28064,\"start\":28057},{\"attributes\":{\"ref_id\":\"tab_8\"},\"end\":28747,\"start\":28740}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2850,\"start\":2838},{\"attributes\":{\"n\":\"2\"},\"end\":7091,\"start\":7084},{\"attributes\":{\"n\":\"2.1\"},\"end\":8243,\"start\":8237},{\"end\":8264,\"start\":8246},{\"end\":8612,\"start\":8597},{\"attributes\":{\"n\":\"2.2\"},\"end\":9136,\"start\":9122},{\"attributes\":{\"n\":\"2.3\"},\"end\":9956,\"start\":9941},{\"attributes\":{\"n\":\"2.4\"},\"end\":10559,\"start\":10551},{\"attributes\":{\"n\":\"2.5\"},\"end\":11226,\"start\":11218},{\"end\":11345,\"start\":11336},{\"end\":11629,\"start\":11617},{\"attributes\":{\"n\":\"3\"},\"end\":12742,\"start\":12731},{\"attributes\":{\"n\":\"3.1\"},\"end\":13641,\"start\":13611},{\"attributes\":{\"n\":\"3.2\"},\"end\":15468,\"start\":15438},{\"attributes\":{\"n\":\"3.3\"},\"end\":16825,\"start\":16797},{\"attributes\":{\"n\":\"3.4\"},\"end\":18762,\"start\":18745},{\"attributes\":{\"n\":\"3.5\"},\"end\":19849,\"start\":19827},{\"attributes\":{\"n\":\"4\"},\"end\":20980,\"start\":20973},{\"attributes\":{\"n\":\"4.1\"},\"end\":21013,\"start\":20983},{\"attributes\":{\"n\":\"4.2\"},\"end\":22050,\"start\":22020},{\"attributes\":{\"n\":\"4.3\"},\"end\":23588,\"start\":23560},{\"attributes\":{\"n\":\"4.4\"},\"end\":25819,\"start\":25802},{\"attributes\":{\"n\":\"4.5\"},\"end\":26262,\"start\":26253},{\"attributes\":{\"n\":\"4.6\"},\"end\":28395,\"start\":28375},{\"attributes\":{\"n\":\"4.7\"},\"end\":29061,\"start\":29041},{\"attributes\":{\"n\":\"5\"},\"end\":30276,\"start\":30264},{\"attributes\":{\"n\":\"6\"},\"end\":33182,\"start\":33172},{\"end\":34866,\"start\":34831},{\"end\":35627,\"start\":35601},{\"end\":36551,\"start\":36525},{\"end\":37278,\"start\":37247},{\"end\":38224,\"start\":38212},{\"end\":39162,\"start\":39142},{\"end\":39877,\"start\":39855},{\"end\":41310,\"start\":41300},{\"end\":41537,\"start\":41527},{\"end\":42437,\"start\":42428},{\"end\":42720,\"start\":42713},{\"end\":42917,\"start\":42908},{\"end\":43189,\"start\":43182},{\"end\":43541,\"start\":43532},{\"end\":43666,\"start\":43659}]", "table": "[{\"end\":42426,\"start\":41903},{\"end\":43530,\"start\":43191},{\"end\":43714,\"start\":43668}]", "figure_caption": "[{\"end\":41298,\"start\":39880},{\"end\":41525,\"start\":41312},{\"end\":41692,\"start\":41539},{\"end\":41903,\"start\":41695},{\"end\":42711,\"start\":42439},{\"end\":42906,\"start\":42722},{\"end\":43180,\"start\":42919},{\"end\":43657,\"start\":43543}]", "figure_ref": "[{\"end\":3715,\"start\":3707},{\"end\":7278,\"start\":7270},{\"end\":24095,\"start\":24087},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":26724,\"start\":26716},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":26917,\"start\":26909},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":27498,\"start\":27481},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":28077,\"start\":28069},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":34301,\"start\":34293}]", "bib_author_first_name": "[{\"end\":43899,\"start\":43894},{\"end\":43913,\"start\":43907},{\"end\":43926,\"start\":43922},{\"end\":43939,\"start\":43937},{\"end\":43954,\"start\":43946},{\"end\":43968,\"start\":43960},{\"end\":43980,\"start\":43974},{\"end\":43997,\"start\":43991},{\"end\":44015,\"start\":44008},{\"end\":44026,\"start\":44023},{\"end\":44038,\"start\":44035},{\"end\":44053,\"start\":44050},{\"end\":44065,\"start\":44060},{\"end\":44081,\"start\":44074},{\"end\":44094,\"start\":44090},{\"end\":44638,\"start\":44634},{\"end\":44650,\"start\":44647},{\"end\":45104,\"start\":45096},{\"end\":45119,\"start\":45113},{\"end\":45129,\"start\":45126},{\"end\":45144,\"start\":45139},{\"end\":45849,\"start\":45846},{\"end\":45863,\"start\":45854},{\"end\":45872,\"start\":45868},{\"end\":45881,\"start\":45877},{\"end\":45890,\"start\":45887},{\"end\":46179,\"start\":46174},{\"end\":46190,\"start\":46186},{\"end\":46203,\"start\":46198},{\"end\":46219,\"start\":46212},{\"end\":46930,\"start\":46924},{\"end\":46943,\"start\":46937},{\"end\":46958,\"start\":46953},{\"end\":46975,\"start\":46970},{\"end\":46997,\"start\":46988},{\"end\":47015,\"start\":47007},{\"end\":47784,\"start\":47773},{\"end\":47796,\"start\":47792},{\"end\":48118,\"start\":48113},{\"end\":48135,\"start\":48127},{\"end\":48149,\"start\":48143},{\"end\":48163,\"start\":48155},{\"end\":49098,\"start\":49093},{\"end\":49113,\"start\":49106},{\"end\":49126,\"start\":49122},{\"end\":49142,\"start\":49136},{\"end\":49155,\"start\":49148},{\"end\":49167,\"start\":49162},{\"end\":49573,\"start\":49566},{\"end\":49586,\"start\":49580},{\"end\":49598,\"start\":49594},{\"end\":49609,\"start\":49608},{\"end\":49614,\"start\":49610},{\"end\":49628,\"start\":49622},{\"end\":49645,\"start\":49636},{\"end\":49983,\"start\":49977},{\"end\":49993,\"start\":49989},{\"end\":50005,\"start\":50001},{\"end\":50677,\"start\":50671},{\"end\":50689,\"start\":50683},{\"end\":50704,\"start\":50699},{\"end\":50717,\"start\":50712},{\"end\":50733,\"start\":50728},{\"end\":50749,\"start\":50742},{\"end\":51437,\"start\":51431},{\"end\":51449,\"start\":51443},{\"end\":51464,\"start\":51459},{\"end\":51479,\"start\":51472},{\"end\":51749,\"start\":51741},{\"end\":51764,\"start\":51757},{\"end\":51780,\"start\":51772},{\"end\":51795,\"start\":51789},{\"end\":51811,\"start\":51808},{\"end\":52113,\"start\":52107},{\"end\":52134,\"start\":52129},{\"end\":52153,\"start\":52145},{\"end\":52165,\"start\":52161},{\"end\":52181,\"start\":52173},{\"end\":52193,\"start\":52187},{\"end\":52598,\"start\":52592},{\"end\":52607,\"start\":52603},{\"end\":52623,\"start\":52614},{\"end\":52630,\"start\":52629},{\"end\":52632,\"start\":52631},{\"end\":52969,\"start\":52963},{\"end\":52976,\"start\":52975},{\"end\":52995,\"start\":52988},{\"end\":53012,\"start\":53007},{\"end\":53450,\"start\":53444},{\"end\":53462,\"start\":53456},{\"end\":53472,\"start\":53468},{\"end\":53487,\"start\":53479},{\"end\":53505,\"start\":53497},{\"end\":53758,\"start\":53754},{\"end\":53776,\"start\":53768},{\"end\":53789,\"start\":53784},{\"end\":54091,\"start\":54085},{\"end\":54105,\"start\":54099},{\"end\":54118,\"start\":54112},{\"end\":54129,\"start\":54125},{\"end\":54901,\"start\":54895},{\"end\":54915,\"start\":54910},{\"end\":55562,\"start\":55554},{\"end\":55580,\"start\":55574},{\"end\":55592,\"start\":55587},{\"end\":55604,\"start\":55598},{\"end\":55615,\"start\":55609},{\"end\":55629,\"start\":55624},{\"end\":55643,\"start\":55636},{\"end\":55994,\"start\":55987},{\"end\":56011,\"start\":56007},{\"end\":56021,\"start\":56018},{\"end\":56036,\"start\":56032},{\"end\":56054,\"start\":56050},{\"end\":56425,\"start\":56424},{\"end\":56441,\"start\":56436},{\"end\":56921,\"start\":56918},{\"end\":56945,\"start\":56935},{\"end\":56962,\"start\":56956},{\"end\":56980,\"start\":56973},{\"end\":56995,\"start\":56990},{\"end\":57009,\"start\":57004},{\"end\":57027,\"start\":57019},{\"end\":57042,\"start\":57037},{\"end\":57062,\"start\":57055},{\"end\":57076,\"start\":57071},{\"end\":57091,\"start\":57085},{\"end\":57105,\"start\":57097},{\"end\":57107,\"start\":57106},{\"end\":57124,\"start\":57119},{\"end\":57140,\"start\":57132},{\"end\":57154,\"start\":57148},{\"end\":57165,\"start\":57160},{\"end\":57181,\"start\":57177},{\"end\":57190,\"start\":57186},{\"end\":57837,\"start\":57828},{\"end\":57855,\"start\":57846},{\"end\":57888,\"start\":57870},{\"end\":57905,\"start\":57898},{\"end\":57920,\"start\":57915},{\"end\":58582,\"start\":58576},{\"end\":58596,\"start\":58588},{\"end\":58612,\"start\":58604},{\"end\":59359,\"start\":59355},{\"end\":59373,\"start\":59367},{\"end\":59384,\"start\":59379},{\"end\":59398,\"start\":59392},{\"end\":59425,\"start\":59414},{\"end\":59439,\"start\":59435},{\"end\":59453,\"start\":59446},{\"end\":59468,\"start\":59464},{\"end\":59914,\"start\":59909},{\"end\":59925,\"start\":59919},{\"end\":59939,\"start\":59934},{\"end\":59958,\"start\":59950},{\"end\":59968,\"start\":59964},{\"end\":60890,\"start\":60882},{\"end\":60900,\"start\":60895},{\"end\":60916,\"start\":60909},{\"end\":61239,\"start\":61232},{\"end\":61251,\"start\":61245},{\"end\":61261,\"start\":61256},{\"end\":61272,\"start\":61269},{\"end\":61288,\"start\":61280},{\"end\":61980,\"start\":61979},{\"end\":61989,\"start\":61988},{\"end\":62003,\"start\":61995},{\"end\":62012,\"start\":62011},{\"end\":62022,\"start\":62015},{\"end\":62031,\"start\":62028},{\"end\":62046,\"start\":62042},{\"end\":62062,\"start\":62056},{\"end\":62075,\"start\":62071},{\"end\":62516,\"start\":62515},{\"end\":62524,\"start\":62523},{\"end\":62526,\"start\":62525},{\"end\":62877,\"start\":62873},{\"end\":63227,\"start\":63223},{\"end\":63245,\"start\":63240},{\"end\":63265,\"start\":63255},{\"end\":63278,\"start\":63274},{\"end\":63287,\"start\":63284},{\"end\":63309,\"start\":63301},{\"end\":63330,\"start\":63322},{\"end\":63351,\"start\":63342},{\"end\":63759,\"start\":63753},{\"end\":63777,\"start\":63767},{\"end\":63790,\"start\":63785},{\"end\":63807,\"start\":63801},{\"end\":63809,\"start\":63808},{\"end\":64547,\"start\":64540},{\"end\":64560,\"start\":64554},{\"end\":64562,\"start\":64561},{\"end\":65240,\"start\":65237},{\"end\":65252,\"start\":65249},{\"end\":65267,\"start\":65264},{\"end\":65282,\"start\":65274},{\"end\":65295,\"start\":65288},{\"end\":65310,\"start\":65304},{\"end\":65323,\"start\":65321},{\"end\":66471,\"start\":66464},{\"end\":66491,\"start\":66482},{\"end\":66773,\"start\":66768},{\"end\":66790,\"start\":66781},{\"end\":66806,\"start\":66803},{\"end\":66820,\"start\":66815},{\"end\":66834,\"start\":66829},{\"end\":66851,\"start\":66842},{\"end\":67821,\"start\":67816},{\"end\":67834,\"start\":67831},{\"end\":67857,\"start\":67848},{\"end\":67873,\"start\":67866},{\"end\":67886,\"start\":67881},{\"end\":67903,\"start\":67896},{\"end\":67917,\"start\":67908},{\"end\":68902,\"start\":68897},{\"end\":68919,\"start\":68912},{\"end\":68937,\"start\":68927},{\"end\":68949,\"start\":68946},{\"end\":68970,\"start\":68963},{\"end\":68984,\"start\":68975},{\"end\":68986,\"start\":68985},{\"end\":69004,\"start\":68995},{\"end\":69393,\"start\":69389},{\"end\":69668,\"start\":69664},{\"end\":69682,\"start\":69678},{\"end\":69692,\"start\":69687},{\"end\":69705,\"start\":69700},{\"end\":69717,\"start\":69712},{\"end\":69730,\"start\":69726},{\"end\":70093,\"start\":70088},{\"end\":70106,\"start\":70102},{\"end\":70120,\"start\":70116},{\"end\":70139,\"start\":70130},{\"end\":70151,\"start\":70145},{\"end\":70167,\"start\":70160},{\"end\":70181,\"start\":70176},{\"end\":70191,\"start\":70188},{\"end\":70201,\"start\":70196},{\"end\":70203,\"start\":70202},{\"end\":70586,\"start\":70582},{\"end\":70601,\"start\":70596},{\"end\":70614,\"start\":70610},{\"end\":70875,\"start\":70868},{\"end\":70891,\"start\":70887},{\"end\":71240,\"start\":71231},{\"end\":71258,\"start\":71253},{\"end\":71270,\"start\":71267},{\"end\":71803,\"start\":71794},{\"end\":71821,\"start\":71816},{\"end\":71833,\"start\":71830},{\"end\":72401,\"start\":72396},{\"end\":72417,\"start\":72410},{\"end\":72435,\"start\":72427},{\"end\":72461,\"start\":72456},{\"end\":73460,\"start\":73459},{\"end\":73475,\"start\":73468},{\"end\":73758,\"start\":73752},{\"end\":73772,\"start\":73768},{\"end\":73786,\"start\":73782},{\"end\":73800,\"start\":73795},{\"end\":73817,\"start\":73812},{\"end\":73830,\"start\":73825},{\"end\":73832,\"start\":73831},{\"end\":73849,\"start\":73848},{\"end\":73851,\"start\":73850},{\"end\":73871,\"start\":73870},{\"end\":73873,\"start\":73872},{\"end\":73882,\"start\":73881},{\"end\":73893,\"start\":73892},{\"end\":73903,\"start\":73902},{\"end\":73914,\"start\":73913},{\"end\":73924,\"start\":73923},{\"end\":74521,\"start\":74515},{\"end\":74542,\"start\":74535},{\"end\":74564,\"start\":74553},{\"end\":74580,\"start\":74576},{\"end\":74592,\"start\":74586},{\"end\":74603,\"start\":74598},{\"end\":74619,\"start\":74614},{\"end\":74977,\"start\":74973},{\"end\":74993,\"start\":74984},{\"end\":75007,\"start\":75001},{\"end\":75022,\"start\":75017},{\"end\":75033,\"start\":75029},{\"end\":75046,\"start\":75040},{\"end\":75860,\"start\":75856},{\"end\":75871,\"start\":75867},{\"end\":75893,\"start\":75887},{\"end\":75911,\"start\":75902},{\"end\":75925,\"start\":75919},{\"end\":75940,\"start\":75935},{\"end\":75951,\"start\":75947},{\"end\":75964,\"start\":75958},{\"end\":76679,\"start\":76671},{\"end\":76688,\"start\":76686},{\"end\":76701,\"start\":76693},{\"end\":76713,\"start\":76707},{\"end\":76723,\"start\":76720},{\"end\":76736,\"start\":76733},{\"end\":76749,\"start\":76744},{\"end\":76762,\"start\":76757},{\"end\":76777,\"start\":76772},{\"end\":76788,\"start\":76784},{\"end\":78098,\"start\":78090},{\"end\":78107,\"start\":78105},{\"end\":78116,\"start\":78112},{\"end\":78127,\"start\":78124},{\"end\":78143,\"start\":78135},{\"end\":78154,\"start\":78149},{\"end\":78168,\"start\":78162},{\"end\":78178,\"start\":78175},{\"end\":78194,\"start\":78188},{\"end\":78210,\"start\":78204},{\"end\":78527,\"start\":78522},{\"end\":78541,\"start\":78536},{\"end\":78557,\"start\":78550},{\"end\":79030,\"start\":79025},{\"end\":79044,\"start\":79039},{\"end\":79061,\"start\":79052},{\"end\":79854,\"start\":79848},{\"end\":79867,\"start\":79862},{\"end\":80837,\"start\":80831},{\"end\":80853,\"start\":80845},{\"end\":80862,\"start\":80858},{\"end\":80874,\"start\":80869},{\"end\":80882,\"start\":80879},{\"end\":80893,\"start\":80889},{\"end\":80906,\"start\":80900},{\"end\":80917,\"start\":80913}]", "bib_author_last_name": "[{\"end\":43905,\"start\":43900},{\"end\":43920,\"start\":43914},{\"end\":43935,\"start\":43927},{\"end\":43944,\"start\":43940},{\"end\":43958,\"start\":43955},{\"end\":43972,\"start\":43969},{\"end\":43989,\"start\":43981},{\"end\":44006,\"start\":43998},{\"end\":44021,\"start\":44016},{\"end\":44033,\"start\":44027},{\"end\":44048,\"start\":44039},{\"end\":44058,\"start\":44054},{\"end\":44072,\"start\":44066},{\"end\":44088,\"start\":44082},{\"end\":44099,\"start\":44095},{\"end\":44106,\"start\":44101},{\"end\":44645,\"start\":44639},{\"end\":44657,\"start\":44651},{\"end\":45111,\"start\":45105},{\"end\":45124,\"start\":45120},{\"end\":45137,\"start\":45130},{\"end\":45150,\"start\":45145},{\"end\":45852,\"start\":45850},{\"end\":45866,\"start\":45864},{\"end\":45875,\"start\":45873},{\"end\":45885,\"start\":45882},{\"end\":45895,\"start\":45891},{\"end\":46184,\"start\":46180},{\"end\":46196,\"start\":46191},{\"end\":46210,\"start\":46204},{\"end\":46226,\"start\":46220},{\"end\":46935,\"start\":46931},{\"end\":46951,\"start\":46944},{\"end\":46968,\"start\":46959},{\"end\":46986,\"start\":46976},{\"end\":47005,\"start\":46998},{\"end\":47022,\"start\":47016},{\"end\":47790,\"start\":47785},{\"end\":47804,\"start\":47797},{\"end\":48125,\"start\":48119},{\"end\":48141,\"start\":48136},{\"end\":48153,\"start\":48150},{\"end\":48173,\"start\":48164},{\"end\":49104,\"start\":49099},{\"end\":49120,\"start\":49114},{\"end\":49134,\"start\":49127},{\"end\":49146,\"start\":49143},{\"end\":49160,\"start\":49156},{\"end\":49174,\"start\":49168},{\"end\":49578,\"start\":49574},{\"end\":49592,\"start\":49587},{\"end\":49606,\"start\":49599},{\"end\":49620,\"start\":49615},{\"end\":49634,\"start\":49629},{\"end\":49649,\"start\":49646},{\"end\":49987,\"start\":49984},{\"end\":49999,\"start\":49994},{\"end\":50013,\"start\":50006},{\"end\":50681,\"start\":50678},{\"end\":50697,\"start\":50690},{\"end\":50710,\"start\":50705},{\"end\":50726,\"start\":50718},{\"end\":50740,\"start\":50734},{\"end\":50754,\"start\":50750},{\"end\":51441,\"start\":51438},{\"end\":51457,\"start\":51450},{\"end\":51470,\"start\":51465},{\"end\":51486,\"start\":51480},{\"end\":51755,\"start\":51750},{\"end\":51770,\"start\":51765},{\"end\":51787,\"start\":51781},{\"end\":51806,\"start\":51796},{\"end\":51816,\"start\":51812},{\"end\":51829,\"start\":51818},{\"end\":52127,\"start\":52114},{\"end\":52143,\"start\":52135},{\"end\":52159,\"start\":52154},{\"end\":52171,\"start\":52166},{\"end\":52185,\"start\":52182},{\"end\":52205,\"start\":52194},{\"end\":52213,\"start\":52207},{\"end\":52601,\"start\":52599},{\"end\":52612,\"start\":52608},{\"end\":52627,\"start\":52624},{\"end\":52639,\"start\":52633},{\"end\":52643,\"start\":52641},{\"end\":52973,\"start\":52970},{\"end\":52986,\"start\":52977},{\"end\":53005,\"start\":52996},{\"end\":53017,\"start\":53013},{\"end\":53024,\"start\":53019},{\"end\":53454,\"start\":53451},{\"end\":53466,\"start\":53463},{\"end\":53477,\"start\":53473},{\"end\":53495,\"start\":53488},{\"end\":53511,\"start\":53506},{\"end\":53766,\"start\":53759},{\"end\":53782,\"start\":53777},{\"end\":53795,\"start\":53790},{\"end\":54097,\"start\":54092},{\"end\":54110,\"start\":54106},{\"end\":54123,\"start\":54119},{\"end\":54141,\"start\":54130},{\"end\":54908,\"start\":54902},{\"end\":54923,\"start\":54916},{\"end\":55572,\"start\":55563},{\"end\":55585,\"start\":55581},{\"end\":55596,\"start\":55593},{\"end\":55607,\"start\":55605},{\"end\":55622,\"start\":55616},{\"end\":55634,\"start\":55630},{\"end\":55647,\"start\":55644},{\"end\":56005,\"start\":55995},{\"end\":56016,\"start\":56012},{\"end\":56030,\"start\":56022},{\"end\":56048,\"start\":56037},{\"end\":56060,\"start\":56055},{\"end\":56434,\"start\":56426},{\"end\":56448,\"start\":56442},{\"end\":56452,\"start\":56450},{\"end\":56933,\"start\":56922},{\"end\":56954,\"start\":56946},{\"end\":56971,\"start\":56963},{\"end\":56988,\"start\":56981},{\"end\":57002,\"start\":56996},{\"end\":57017,\"start\":57010},{\"end\":57035,\"start\":57028},{\"end\":57053,\"start\":57043},{\"end\":57069,\"start\":57063},{\"end\":57083,\"start\":57077},{\"end\":57095,\"start\":57092},{\"end\":57117,\"start\":57108},{\"end\":57130,\"start\":57125},{\"end\":57146,\"start\":57141},{\"end\":57158,\"start\":57155},{\"end\":57175,\"start\":57166},{\"end\":57184,\"start\":57182},{\"end\":57197,\"start\":57191},{\"end\":57844,\"start\":57838},{\"end\":57868,\"start\":57856},{\"end\":57896,\"start\":57889},{\"end\":57913,\"start\":57906},{\"end\":57926,\"start\":57921},{\"end\":58586,\"start\":58583},{\"end\":58602,\"start\":58597},{\"end\":58622,\"start\":58613},{\"end\":59365,\"start\":59360},{\"end\":59377,\"start\":59374},{\"end\":59390,\"start\":59385},{\"end\":59412,\"start\":59399},{\"end\":59433,\"start\":59426},{\"end\":59444,\"start\":59440},{\"end\":59462,\"start\":59454},{\"end\":59480,\"start\":59469},{\"end\":59917,\"start\":59915},{\"end\":59932,\"start\":59926},{\"end\":59948,\"start\":59940},{\"end\":59962,\"start\":59959},{\"end\":59974,\"start\":59969},{\"end\":60893,\"start\":60891},{\"end\":60907,\"start\":60901},{\"end\":60923,\"start\":60917},{\"end\":61243,\"start\":61240},{\"end\":61254,\"start\":61252},{\"end\":61267,\"start\":61262},{\"end\":61278,\"start\":61273},{\"end\":61291,\"start\":61289},{\"end\":61986,\"start\":61981},{\"end\":61993,\"start\":61990},{\"end\":62009,\"start\":62004},{\"end\":62026,\"start\":62023},{\"end\":62040,\"start\":62032},{\"end\":62054,\"start\":62047},{\"end\":62069,\"start\":62063},{\"end\":62083,\"start\":62076},{\"end\":62521,\"start\":62517},{\"end\":62533,\"start\":62527},{\"end\":62543,\"start\":62535},{\"end\":62884,\"start\":62878},{\"end\":63238,\"start\":63228},{\"end\":63253,\"start\":63246},{\"end\":63272,\"start\":63266},{\"end\":63282,\"start\":63279},{\"end\":63299,\"start\":63288},{\"end\":63320,\"start\":63310},{\"end\":63340,\"start\":63331},{\"end\":63358,\"start\":63352},{\"end\":63765,\"start\":63760},{\"end\":63783,\"start\":63778},{\"end\":63799,\"start\":63791},{\"end\":63816,\"start\":63810},{\"end\":64552,\"start\":64548},{\"end\":64569,\"start\":64563},{\"end\":65247,\"start\":65241},{\"end\":65262,\"start\":65253},{\"end\":65272,\"start\":65268},{\"end\":65286,\"start\":65283},{\"end\":65302,\"start\":65296},{\"end\":65319,\"start\":65311},{\"end\":65328,\"start\":65324},{\"end\":65335,\"start\":65330},{\"end\":66480,\"start\":66472},{\"end\":66495,\"start\":66492},{\"end\":66779,\"start\":66774},{\"end\":66801,\"start\":66791},{\"end\":66813,\"start\":66807},{\"end\":66827,\"start\":66821},{\"end\":66840,\"start\":66835},{\"end\":66855,\"start\":66852},{\"end\":67829,\"start\":67822},{\"end\":67846,\"start\":67835},{\"end\":67864,\"start\":67858},{\"end\":67879,\"start\":67874},{\"end\":67894,\"start\":67887},{\"end\":67906,\"start\":67904},{\"end\":67924,\"start\":67918},{\"end\":68910,\"start\":68903},{\"end\":68925,\"start\":68920},{\"end\":68944,\"start\":68938},{\"end\":68961,\"start\":68950},{\"end\":68973,\"start\":68971},{\"end\":68993,\"start\":68987},{\"end\":69011,\"start\":69005},{\"end\":69401,\"start\":69394},{\"end\":69676,\"start\":69669},{\"end\":69685,\"start\":69683},{\"end\":69698,\"start\":69693},{\"end\":69710,\"start\":69706},{\"end\":69724,\"start\":69718},{\"end\":69740,\"start\":69731},{\"end\":70100,\"start\":70094},{\"end\":70114,\"start\":70107},{\"end\":70128,\"start\":70121},{\"end\":70143,\"start\":70140},{\"end\":70158,\"start\":70152},{\"end\":70174,\"start\":70168},{\"end\":70186,\"start\":70182},{\"end\":70194,\"start\":70192},{\"end\":70207,\"start\":70204},{\"end\":70594,\"start\":70587},{\"end\":70608,\"start\":70602},{\"end\":70622,\"start\":70615},{\"end\":70885,\"start\":70876},{\"end\":70900,\"start\":70892},{\"end\":71251,\"start\":71241},{\"end\":71265,\"start\":71259},{\"end\":71277,\"start\":71271},{\"end\":71814,\"start\":71804},{\"end\":71828,\"start\":71822},{\"end\":71840,\"start\":71834},{\"end\":72408,\"start\":72402},{\"end\":72425,\"start\":72418},{\"end\":72454,\"start\":72436},{\"end\":72468,\"start\":72462},{\"end\":73466,\"start\":73461},{\"end\":73482,\"start\":73476},{\"end\":73491,\"start\":73484},{\"end\":73766,\"start\":73759},{\"end\":73780,\"start\":73773},{\"end\":73793,\"start\":73787},{\"end\":73810,\"start\":73801},{\"end\":73823,\"start\":73818},{\"end\":73838,\"start\":73833},{\"end\":73846,\"start\":73840},{\"end\":73868,\"start\":73852},{\"end\":73879,\"start\":73874},{\"end\":73890,\"start\":73883},{\"end\":73900,\"start\":73894},{\"end\":73911,\"start\":73904},{\"end\":73921,\"start\":73915},{\"end\":73937,\"start\":73925},{\"end\":73946,\"start\":73939},{\"end\":74533,\"start\":74522},{\"end\":74551,\"start\":74543},{\"end\":74574,\"start\":74565},{\"end\":74584,\"start\":74581},{\"end\":74596,\"start\":74593},{\"end\":74612,\"start\":74604},{\"end\":74625,\"start\":74620},{\"end\":74982,\"start\":74978},{\"end\":74999,\"start\":74994},{\"end\":75015,\"start\":75008},{\"end\":75027,\"start\":75023},{\"end\":75038,\"start\":75034},{\"end\":75053,\"start\":75047},{\"end\":75865,\"start\":75861},{\"end\":75885,\"start\":75872},{\"end\":75900,\"start\":75894},{\"end\":75917,\"start\":75912},{\"end\":75933,\"start\":75926},{\"end\":75945,\"start\":75941},{\"end\":75956,\"start\":75952},{\"end\":75971,\"start\":75965},{\"end\":76684,\"start\":76680},{\"end\":76691,\"start\":76689},{\"end\":76705,\"start\":76702},{\"end\":76718,\"start\":76714},{\"end\":76731,\"start\":76724},{\"end\":76742,\"start\":76737},{\"end\":76755,\"start\":76750},{\"end\":76770,\"start\":76763},{\"end\":76782,\"start\":76778},{\"end\":76794,\"start\":76789},{\"end\":78103,\"start\":78099},{\"end\":78110,\"start\":78108},{\"end\":78122,\"start\":78117},{\"end\":78133,\"start\":78128},{\"end\":78147,\"start\":78144},{\"end\":78160,\"start\":78155},{\"end\":78173,\"start\":78169},{\"end\":78186,\"start\":78179},{\"end\":78202,\"start\":78195},{\"end\":78219,\"start\":78211},{\"end\":78534,\"start\":78528},{\"end\":78548,\"start\":78542},{\"end\":78564,\"start\":78558},{\"end\":79037,\"start\":79031},{\"end\":79050,\"start\":79045},{\"end\":79068,\"start\":79062},{\"end\":79860,\"start\":79855},{\"end\":79874,\"start\":79868},{\"end\":80843,\"start\":80838},{\"end\":80856,\"start\":80854},{\"end\":80867,\"start\":80863},{\"end\":80877,\"start\":80875},{\"end\":80887,\"start\":80883},{\"end\":80898,\"start\":80894},{\"end\":80911,\"start\":80907},{\"end\":80921,\"start\":80918}]", "bib_entry": "[{\"attributes\":{\"doi\":\"arXiv:1611.09268\",\"id\":\"b0\"},\"end\":44570,\"start\":43894},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":17723267},\"end\":45037,\"start\":44572},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":6401679},\"end\":45730,\"start\":45039},{\"attributes\":{\"id\":\"b3\"},\"end\":46121,\"start\":45732},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":3618568},\"end\":46868,\"start\":46123},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":17476563},\"end\":47711,\"start\":46870},{\"attributes\":{\"id\":\"b6\"},\"end\":48029,\"start\":47713},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":52967399},\"end\":49029,\"start\":48031},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":53218829},\"end\":49491,\"start\":49031},{\"attributes\":{\"id\":\"b9\"},\"end\":49937,\"start\":49493},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":44134226},\"end\":50633,\"start\":49939},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":196170479},\"end\":51372,\"start\":50635},{\"attributes\":{\"id\":\"b12\"},\"end\":51660,\"start\":51374},{\"attributes\":{\"id\":\"b13\"},\"end\":52057,\"start\":51662},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":15442925},\"end\":52541,\"start\":52059},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":19206366},\"end\":52917,\"start\":52543},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":2318481},\"end\":53374,\"start\":52919},{\"attributes\":{\"id\":\"b17\"},\"end\":53709,\"start\":53376},{\"attributes\":{\"id\":\"b18\"},\"end\":53993,\"start\":53711},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":26501419},\"end\":54826,\"start\":53995},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":172783},\"end\":55492,\"start\":54828},{\"attributes\":{\"id\":\"b21\"},\"end\":55914,\"start\":55494},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":207870430},\"end\":56378,\"start\":55916},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":6628106},\"end\":56852,\"start\":56380},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":86611921},\"end\":57787,\"start\":56854},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":195886317},\"end\":58503,\"start\":57789},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":173990818},\"end\":59238,\"start\":58505},{\"attributes\":{\"id\":\"b27\"},\"end\":59834,\"start\":59240},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":7287895},\"end\":60786,\"start\":59836},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":202538657},\"end\":61153,\"start\":60788},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":53113716},\"end\":61925,\"start\":61155},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":3608234},\"end\":62407,\"start\":61927},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":8915893},\"end\":62871,\"start\":62409},{\"attributes\":{\"id\":\"b33\"},\"end\":63153,\"start\":62873},{\"attributes\":{\"id\":\"b34\"},\"end\":63676,\"start\":63155},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":52333947},\"end\":64470,\"start\":63678},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":52134966},\"end\":65178,\"start\":64472},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":1289517},\"end\":66462,\"start\":65180},{\"attributes\":{\"id\":\"b38\"},\"end\":66699,\"start\":66464},{\"attributes\":{\"id\":\"b39\",\"matched_paper_id\":202572744},\"end\":67777,\"start\":66701},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":202539551},\"end\":68837,\"start\":67779},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":212411919},\"end\":69326,\"start\":68839},{\"attributes\":{\"id\":\"b42\"},\"end\":69609,\"start\":69328},{\"attributes\":{\"id\":\"b43\"},\"end\":70003,\"start\":69611},{\"attributes\":{\"id\":\"b44\"},\"end\":70491,\"start\":70005},{\"attributes\":{\"id\":\"b45\"},\"end\":70803,\"start\":70493},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":207178704},\"end\":71201,\"start\":70805},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":1399322},\"end\":71764,\"start\":71203},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":1399322},\"end\":72327,\"start\":71766},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":4711425},\"end\":73318,\"start\":72329},{\"attributes\":{\"id\":\"b50\"},\"end\":73723,\"start\":73320},{\"attributes\":{\"id\":\"b51\",\"matched_paper_id\":13756489},\"end\":74449,\"start\":73725},{\"attributes\":{\"id\":\"b52\"},\"end\":74884,\"start\":74451},{\"attributes\":{\"id\":\"b53\",\"matched_paper_id\":5034059},\"end\":75770,\"start\":74886},{\"attributes\":{\"id\":\"b54\",\"matched_paper_id\":143424870},\"end\":76602,\"start\":75772},{\"attributes\":{\"id\":\"b55\"},\"end\":78011,\"start\":76604},{\"attributes\":{\"id\":\"b56\",\"matched_paper_id\":13764176},\"end\":78503,\"start\":78013},{\"attributes\":{\"id\":\"b57\",\"matched_paper_id\":2926851},\"end\":78952,\"start\":78505},{\"attributes\":{\"id\":\"b58\",\"matched_paper_id\":52006529},\"end\":79758,\"start\":78954},{\"attributes\":{\"id\":\"b59\",\"matched_paper_id\":202572810},\"end\":80774,\"start\":79760},{\"attributes\":{\"id\":\"b60\",\"matched_paper_id\":202540088},\"end\":81161,\"start\":80776}]", "bib_title": "[{\"end\":44632,\"start\":44572},{\"end\":45094,\"start\":45039},{\"end\":46172,\"start\":46123},{\"end\":46922,\"start\":46870},{\"end\":48111,\"start\":48031},{\"end\":49091,\"start\":49031},{\"end\":49975,\"start\":49939},{\"end\":50669,\"start\":50635},{\"end\":52105,\"start\":52059},{\"end\":52590,\"start\":52543},{\"end\":52961,\"start\":52919},{\"end\":54083,\"start\":53995},{\"end\":54893,\"start\":54828},{\"end\":55985,\"start\":55916},{\"end\":56422,\"start\":56380},{\"end\":56916,\"start\":56854},{\"end\":57826,\"start\":57789},{\"end\":58574,\"start\":58505},{\"end\":59907,\"start\":59836},{\"end\":60880,\"start\":60788},{\"end\":61230,\"start\":61155},{\"end\":61977,\"start\":61927},{\"end\":62513,\"start\":62409},{\"end\":63751,\"start\":63678},{\"end\":64538,\"start\":64472},{\"end\":65235,\"start\":65180},{\"end\":66766,\"start\":66701},{\"end\":67814,\"start\":67779},{\"end\":68895,\"start\":68839},{\"end\":70866,\"start\":70805},{\"end\":71229,\"start\":71203},{\"end\":71792,\"start\":71766},{\"end\":72394,\"start\":72329},{\"end\":73750,\"start\":73725},{\"end\":74971,\"start\":74886},{\"end\":75854,\"start\":75772},{\"end\":76669,\"start\":76604},{\"end\":78088,\"start\":78013},{\"end\":78520,\"start\":78505},{\"end\":79023,\"start\":78954},{\"end\":79846,\"start\":79760},{\"end\":80829,\"start\":80776}]", "bib_author": "[{\"end\":43907,\"start\":43894},{\"end\":43922,\"start\":43907},{\"end\":43937,\"start\":43922},{\"end\":43946,\"start\":43937},{\"end\":43960,\"start\":43946},{\"end\":43974,\"start\":43960},{\"end\":43991,\"start\":43974},{\"end\":44008,\"start\":43991},{\"end\":44023,\"start\":44008},{\"end\":44035,\"start\":44023},{\"end\":44050,\"start\":44035},{\"end\":44060,\"start\":44050},{\"end\":44074,\"start\":44060},{\"end\":44090,\"start\":44074},{\"end\":44101,\"start\":44090},{\"end\":44108,\"start\":44101},{\"end\":44647,\"start\":44634},{\"end\":44659,\"start\":44647},{\"end\":45113,\"start\":45096},{\"end\":45126,\"start\":45113},{\"end\":45139,\"start\":45126},{\"end\":45152,\"start\":45139},{\"end\":45854,\"start\":45846},{\"end\":45868,\"start\":45854},{\"end\":45877,\"start\":45868},{\"end\":45887,\"start\":45877},{\"end\":45897,\"start\":45887},{\"end\":46186,\"start\":46174},{\"end\":46198,\"start\":46186},{\"end\":46212,\"start\":46198},{\"end\":46228,\"start\":46212},{\"end\":46937,\"start\":46924},{\"end\":46953,\"start\":46937},{\"end\":46970,\"start\":46953},{\"end\":46988,\"start\":46970},{\"end\":47007,\"start\":46988},{\"end\":47024,\"start\":47007},{\"end\":47792,\"start\":47773},{\"end\":47806,\"start\":47792},{\"end\":48127,\"start\":48113},{\"end\":48143,\"start\":48127},{\"end\":48155,\"start\":48143},{\"end\":48175,\"start\":48155},{\"end\":49106,\"start\":49093},{\"end\":49122,\"start\":49106},{\"end\":49136,\"start\":49122},{\"end\":49148,\"start\":49136},{\"end\":49162,\"start\":49148},{\"end\":49176,\"start\":49162},{\"end\":49580,\"start\":49566},{\"end\":49594,\"start\":49580},{\"end\":49608,\"start\":49594},{\"end\":49622,\"start\":49608},{\"end\":49636,\"start\":49622},{\"end\":49651,\"start\":49636},{\"end\":49989,\"start\":49977},{\"end\":50001,\"start\":49989},{\"end\":50015,\"start\":50001},{\"end\":50683,\"start\":50671},{\"end\":50699,\"start\":50683},{\"end\":50712,\"start\":50699},{\"end\":50728,\"start\":50712},{\"end\":50742,\"start\":50728},{\"end\":50756,\"start\":50742},{\"end\":51443,\"start\":51431},{\"end\":51459,\"start\":51443},{\"end\":51472,\"start\":51459},{\"end\":51488,\"start\":51472},{\"end\":51757,\"start\":51741},{\"end\":51772,\"start\":51757},{\"end\":51789,\"start\":51772},{\"end\":51808,\"start\":51789},{\"end\":51818,\"start\":51808},{\"end\":51831,\"start\":51818},{\"end\":52129,\"start\":52107},{\"end\":52145,\"start\":52129},{\"end\":52161,\"start\":52145},{\"end\":52173,\"start\":52161},{\"end\":52187,\"start\":52173},{\"end\":52207,\"start\":52187},{\"end\":52215,\"start\":52207},{\"end\":52603,\"start\":52592},{\"end\":52614,\"start\":52603},{\"end\":52629,\"start\":52614},{\"end\":52641,\"start\":52629},{\"end\":52645,\"start\":52641},{\"end\":52975,\"start\":52963},{\"end\":52988,\"start\":52975},{\"end\":53007,\"start\":52988},{\"end\":53019,\"start\":53007},{\"end\":53026,\"start\":53019},{\"end\":53456,\"start\":53444},{\"end\":53468,\"start\":53456},{\"end\":53479,\"start\":53468},{\"end\":53497,\"start\":53479},{\"end\":53513,\"start\":53497},{\"end\":53768,\"start\":53754},{\"end\":53784,\"start\":53768},{\"end\":53797,\"start\":53784},{\"end\":54099,\"start\":54085},{\"end\":54112,\"start\":54099},{\"end\":54125,\"start\":54112},{\"end\":54143,\"start\":54125},{\"end\":54910,\"start\":54895},{\"end\":54925,\"start\":54910},{\"end\":55574,\"start\":55554},{\"end\":55587,\"start\":55574},{\"end\":55598,\"start\":55587},{\"end\":55609,\"start\":55598},{\"end\":55624,\"start\":55609},{\"end\":55636,\"start\":55624},{\"end\":55649,\"start\":55636},{\"end\":56007,\"start\":55987},{\"end\":56018,\"start\":56007},{\"end\":56032,\"start\":56018},{\"end\":56050,\"start\":56032},{\"end\":56062,\"start\":56050},{\"end\":56436,\"start\":56424},{\"end\":56450,\"start\":56436},{\"end\":56454,\"start\":56450},{\"end\":56935,\"start\":56918},{\"end\":56956,\"start\":56935},{\"end\":56973,\"start\":56956},{\"end\":56990,\"start\":56973},{\"end\":57004,\"start\":56990},{\"end\":57019,\"start\":57004},{\"end\":57037,\"start\":57019},{\"end\":57055,\"start\":57037},{\"end\":57071,\"start\":57055},{\"end\":57085,\"start\":57071},{\"end\":57097,\"start\":57085},{\"end\":57119,\"start\":57097},{\"end\":57132,\"start\":57119},{\"end\":57148,\"start\":57132},{\"end\":57160,\"start\":57148},{\"end\":57177,\"start\":57160},{\"end\":57186,\"start\":57177},{\"end\":57199,\"start\":57186},{\"end\":57846,\"start\":57828},{\"end\":57870,\"start\":57846},{\"end\":57898,\"start\":57870},{\"end\":57915,\"start\":57898},{\"end\":57928,\"start\":57915},{\"end\":58588,\"start\":58576},{\"end\":58604,\"start\":58588},{\"end\":58624,\"start\":58604},{\"end\":59367,\"start\":59355},{\"end\":59379,\"start\":59367},{\"end\":59392,\"start\":59379},{\"end\":59414,\"start\":59392},{\"end\":59435,\"start\":59414},{\"end\":59446,\"start\":59435},{\"end\":59464,\"start\":59446},{\"end\":59482,\"start\":59464},{\"end\":59919,\"start\":59909},{\"end\":59934,\"start\":59919},{\"end\":59950,\"start\":59934},{\"end\":59964,\"start\":59950},{\"end\":59976,\"start\":59964},{\"end\":60895,\"start\":60882},{\"end\":60909,\"start\":60895},{\"end\":60925,\"start\":60909},{\"end\":61245,\"start\":61232},{\"end\":61256,\"start\":61245},{\"end\":61269,\"start\":61256},{\"end\":61280,\"start\":61269},{\"end\":61293,\"start\":61280},{\"end\":61988,\"start\":61979},{\"end\":61995,\"start\":61988},{\"end\":62011,\"start\":61995},{\"end\":62015,\"start\":62011},{\"end\":62028,\"start\":62015},{\"end\":62042,\"start\":62028},{\"end\":62056,\"start\":62042},{\"end\":62071,\"start\":62056},{\"end\":62085,\"start\":62071},{\"end\":62523,\"start\":62515},{\"end\":62535,\"start\":62523},{\"end\":62545,\"start\":62535},{\"end\":62886,\"start\":62873},{\"end\":63240,\"start\":63223},{\"end\":63255,\"start\":63240},{\"end\":63274,\"start\":63255},{\"end\":63284,\"start\":63274},{\"end\":63301,\"start\":63284},{\"end\":63322,\"start\":63301},{\"end\":63342,\"start\":63322},{\"end\":63360,\"start\":63342},{\"end\":63767,\"start\":63753},{\"end\":63785,\"start\":63767},{\"end\":63801,\"start\":63785},{\"end\":63818,\"start\":63801},{\"end\":64554,\"start\":64540},{\"end\":64571,\"start\":64554},{\"end\":65249,\"start\":65237},{\"end\":65264,\"start\":65249},{\"end\":65274,\"start\":65264},{\"end\":65288,\"start\":65274},{\"end\":65304,\"start\":65288},{\"end\":65321,\"start\":65304},{\"end\":65330,\"start\":65321},{\"end\":65337,\"start\":65330},{\"end\":66482,\"start\":66464},{\"end\":66497,\"start\":66482},{\"end\":66781,\"start\":66768},{\"end\":66803,\"start\":66781},{\"end\":66815,\"start\":66803},{\"end\":66829,\"start\":66815},{\"end\":66842,\"start\":66829},{\"end\":66857,\"start\":66842},{\"end\":67831,\"start\":67816},{\"end\":67848,\"start\":67831},{\"end\":67866,\"start\":67848},{\"end\":67881,\"start\":67866},{\"end\":67896,\"start\":67881},{\"end\":67908,\"start\":67896},{\"end\":67926,\"start\":67908},{\"end\":68912,\"start\":68897},{\"end\":68927,\"start\":68912},{\"end\":68946,\"start\":68927},{\"end\":68963,\"start\":68946},{\"end\":68975,\"start\":68963},{\"end\":68995,\"start\":68975},{\"end\":69013,\"start\":68995},{\"end\":69403,\"start\":69389},{\"end\":69678,\"start\":69664},{\"end\":69687,\"start\":69678},{\"end\":69700,\"start\":69687},{\"end\":69712,\"start\":69700},{\"end\":69726,\"start\":69712},{\"end\":69742,\"start\":69726},{\"end\":70102,\"start\":70088},{\"end\":70116,\"start\":70102},{\"end\":70130,\"start\":70116},{\"end\":70145,\"start\":70130},{\"end\":70160,\"start\":70145},{\"end\":70176,\"start\":70160},{\"end\":70188,\"start\":70176},{\"end\":70196,\"start\":70188},{\"end\":70209,\"start\":70196},{\"end\":70596,\"start\":70582},{\"end\":70610,\"start\":70596},{\"end\":70624,\"start\":70610},{\"end\":70887,\"start\":70868},{\"end\":70902,\"start\":70887},{\"end\":71253,\"start\":71231},{\"end\":71267,\"start\":71253},{\"end\":71279,\"start\":71267},{\"end\":71816,\"start\":71794},{\"end\":71830,\"start\":71816},{\"end\":71842,\"start\":71830},{\"end\":72410,\"start\":72396},{\"end\":72427,\"start\":72410},{\"end\":72456,\"start\":72427},{\"end\":72470,\"start\":72456},{\"end\":73468,\"start\":73459},{\"end\":73484,\"start\":73468},{\"end\":73493,\"start\":73484},{\"end\":73768,\"start\":73752},{\"end\":73782,\"start\":73768},{\"end\":73795,\"start\":73782},{\"end\":73812,\"start\":73795},{\"end\":73825,\"start\":73812},{\"end\":73840,\"start\":73825},{\"end\":73848,\"start\":73840},{\"end\":73870,\"start\":73848},{\"end\":73881,\"start\":73870},{\"end\":73892,\"start\":73881},{\"end\":73902,\"start\":73892},{\"end\":73913,\"start\":73902},{\"end\":73923,\"start\":73913},{\"end\":73939,\"start\":73923},{\"end\":73948,\"start\":73939},{\"end\":74535,\"start\":74515},{\"end\":74553,\"start\":74535},{\"end\":74576,\"start\":74553},{\"end\":74586,\"start\":74576},{\"end\":74598,\"start\":74586},{\"end\":74614,\"start\":74598},{\"end\":74627,\"start\":74614},{\"end\":74984,\"start\":74973},{\"end\":75001,\"start\":74984},{\"end\":75017,\"start\":75001},{\"end\":75029,\"start\":75017},{\"end\":75040,\"start\":75029},{\"end\":75055,\"start\":75040},{\"end\":75867,\"start\":75856},{\"end\":75887,\"start\":75867},{\"end\":75902,\"start\":75887},{\"end\":75919,\"start\":75902},{\"end\":75935,\"start\":75919},{\"end\":75947,\"start\":75935},{\"end\":75958,\"start\":75947},{\"end\":75973,\"start\":75958},{\"end\":76686,\"start\":76671},{\"end\":76693,\"start\":76686},{\"end\":76707,\"start\":76693},{\"end\":76720,\"start\":76707},{\"end\":76733,\"start\":76720},{\"end\":76744,\"start\":76733},{\"end\":76757,\"start\":76744},{\"end\":76772,\"start\":76757},{\"end\":76784,\"start\":76772},{\"end\":76796,\"start\":76784},{\"end\":78105,\"start\":78090},{\"end\":78112,\"start\":78105},{\"end\":78124,\"start\":78112},{\"end\":78135,\"start\":78124},{\"end\":78149,\"start\":78135},{\"end\":78162,\"start\":78149},{\"end\":78175,\"start\":78162},{\"end\":78188,\"start\":78175},{\"end\":78204,\"start\":78188},{\"end\":78221,\"start\":78204},{\"end\":78536,\"start\":78522},{\"end\":78550,\"start\":78536},{\"end\":78566,\"start\":78550},{\"end\":79039,\"start\":79025},{\"end\":79052,\"start\":79039},{\"end\":79070,\"start\":79052},{\"end\":79862,\"start\":79848},{\"end\":79876,\"start\":79862},{\"end\":80845,\"start\":80831},{\"end\":80858,\"start\":80845},{\"end\":80869,\"start\":80858},{\"end\":80879,\"start\":80869},{\"end\":80889,\"start\":80879},{\"end\":80900,\"start\":80889},{\"end\":80913,\"start\":80900},{\"end\":80923,\"start\":80913}]", "bib_venue": "[{\"end\":45335,\"start\":45240},{\"end\":46426,\"start\":46337},{\"end\":47222,\"start\":47133},{\"end\":48488,\"start\":48339},{\"end\":50216,\"start\":50124},{\"end\":50952,\"start\":50865},{\"end\":54341,\"start\":54252},{\"end\":55108,\"start\":55016},{\"end\":56530,\"start\":56512},{\"end\":58820,\"start\":58733},{\"end\":60288,\"start\":60140},{\"end\":61489,\"start\":61402},{\"end\":64014,\"start\":63926},{\"end\":64767,\"start\":64679},{\"end\":65811,\"start\":65613},{\"end\":67230,\"start\":67054},{\"end\":68299,\"start\":68123},{\"end\":72783,\"start\":72634},{\"end\":75283,\"start\":75179},{\"end\":77346,\"start\":77088},{\"end\":78642,\"start\":78624},{\"end\":79318,\"start\":79204},{\"end\":80249,\"start\":80073},{\"end\":44196,\"start\":44141},{\"end\":44745,\"start\":44659},{\"end\":45238,\"start\":45152},{\"end\":45844,\"start\":45732},{\"end\":46335,\"start\":46248},{\"end\":47131,\"start\":47044},{\"end\":47771,\"start\":47713},{\"end\":48337,\"start\":48195},{\"end\":49228,\"start\":49176},{\"end\":49564,\"start\":49493},{\"end\":50122,\"start\":50035},{\"end\":50863,\"start\":50776},{\"end\":51429,\"start\":51374},{\"end\":51739,\"start\":51662},{\"end\":52257,\"start\":52215},{\"end\":52687,\"start\":52645},{\"end\":53107,\"start\":53046},{\"end\":53442,\"start\":53376},{\"end\":53752,\"start\":53711},{\"end\":54250,\"start\":54163},{\"end\":55014,\"start\":54925},{\"end\":55552,\"start\":55494},{\"end\":56114,\"start\":56062},{\"end\":56510,\"start\":56454},{\"end\":57259,\"start\":57199},{\"end\":57977,\"start\":57928},{\"end\":58731,\"start\":58644},{\"end\":59353,\"start\":59240},{\"end\":60138,\"start\":59996},{\"end\":60944,\"start\":60939},{\"end\":61400,\"start\":61313},{\"end\":62137,\"start\":62085},{\"end\":62607,\"start\":62545},{\"end\":62974,\"start\":62902},{\"end\":63221,\"start\":63155},{\"end\":63924,\"start\":63838},{\"end\":64677,\"start\":64591},{\"end\":65534,\"start\":65337},{\"end\":66541,\"start\":66513},{\"end\":67052,\"start\":66877},{\"end\":68121,\"start\":67946},{\"end\":69050,\"start\":69013},{\"end\":69387,\"start\":69328},{\"end\":69662,\"start\":69611},{\"end\":70086,\"start\":70005},{\"end\":70580,\"start\":70493},{\"end\":70971,\"start\":70955},{\"end\":71328,\"start\":71279},{\"end\":71891,\"start\":71842},{\"end\":72632,\"start\":72490},{\"end\":73457,\"start\":73320},{\"end\":73997,\"start\":73948},{\"end\":74513,\"start\":74451},{\"end\":75177,\"start\":75075},{\"end\":76022,\"start\":75973},{\"end\":77042,\"start\":76796},{\"end\":78225,\"start\":78221},{\"end\":78622,\"start\":78566},{\"end\":79202,\"start\":79090},{\"end\":80071,\"start\":79896},{\"end\":80942,\"start\":80937}]"}}}, "year": 2023, "month": 12, "day": 17}