{"id": 220935924, "updated": "2023-10-06 12:24:13.959", "metadata": {"title": "Blind Face Restoration via Deep Multi-scale Component Dictionaries", "authors": "[{\"first\":\"Xiaoming\",\"last\":\"Li\",\"middle\":[]},{\"first\":\"Chaofeng\",\"last\":\"Chen\",\"middle\":[]},{\"first\":\"Shangchen\",\"last\":\"Zhou\",\"middle\":[]},{\"first\":\"Xianhui\",\"last\":\"Lin\",\"middle\":[]},{\"first\":\"Wangmeng\",\"last\":\"Zuo\",\"middle\":[]},{\"first\":\"Lei\",\"last\":\"Zhang\",\"middle\":[]}]", "venue": "Computer Vision \u2013 ECCV 2020", "journal": "Computer Vision \u2013 ECCV 2020", "publication_date": {"year": 2020, "month": 8, "day": 2}, "abstract": "Recent reference-based face restoration methods have received considerable attention due to their great capability in recovering high-frequency details on real low-quality images. However, most of these methods require a high-quality reference image of the same identity, making them only applicable in limited scenes. To address this issue, this paper suggests a deep face dictionary network (termed as DFDNet) to guide the restoration process of degraded observations. To begin with, we use K-means to generate deep dictionaries for perceptually significant face components (\\ie, left/right eyes, nose and mouth) from high-quality images. Next, with the degraded input, we match and select the most similar component features from their corresponding dictionaries and transfer the high-quality details to the input via the proposed dictionary feature transfer (DFT) block. In particular, component AdaIN is leveraged to eliminate the style diversity between the input and dictionary features (\\eg, illumination), and a confidence score is proposed to adaptively fuse the dictionary feature to the input. Finally, multi-scale dictionaries are adopted in a progressive manner to enable the coarse-to-fine restoration. Experiments show that our proposed method can achieve plausible performance in both quantitative and qualitative evaluation, and more importantly, can generate realistic and promising results on real degraded images without requiring an identity-belonging reference. The source code and models are available at \\url{https://github.com/csxmli2016/DFDNet}.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2008.00418", "mag": "3106746951", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/eccv/LiCZLZZ20", "doi": "10.1007/978-3-030-58545-7_23"}}, "content": {"source": {"pdf_hash": "e87b8a26b86763b65a2f6f3ff9798c686368d975", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2008.00418v1.pdf\"]", "oa_url_match": true, "oa_info": {"license": null, "open_access_url": "http://arxiv.org/pdf/2008.00418", "status": "GREEN"}}, "grobid": {"id": "944b1c29a3aeca286ea11349e8295a4ed51c6d60", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/e87b8a26b86763b65a2f6f3ff9798c686368d975.txt", "contents": "\nBlind Face Restoration via Deep Multi-scale Component Dictionaries\n\n\nXiaoming Li \nFaculty of Computing\nHarbin Institute of Technology\nChina\n\nDepartment of Computer Science\nThe University of Hong\nKong\n\nSchool of Computer Science and Engineering\nNanyang Technological University\n\n\nDAMO Academy\nAlibaba Group\n\n\nPeng Cheng Lab\nShenzhen\n\nDepartment of Computing\nThe Hong Kong Polytechnic University\n\n\nBlind Face Restoration via Deep Multi-scale Component Dictionaries\nFace hallucination \u00b7 deep face dictionary \u00b7 guided image restoration \u00b7 convolutional neural networks\nRecent reference-based face restoration methods have received considerable attention due to their great capability in recovering highfrequency details on real low-quality images. However, most of these methods require a high-quality reference image of the same identity, making them only applicable in limited scenes. To address this issue, this paper suggests a deep face dictionary network (termed as DFDNet) to guide the restoration process of degraded observations. To begin with, we use K-means to generate deep dictionaries for perceptually significant face components (i.e., left/right eyes, nose and mouth) from high-quality images. Next, with the degraded input, we match and select the most similar component features from their corresponding dictionaries and transfer the high-quality details to the input via the proposed dictionary feature transfer (DFT) block. In particular, component AdaIN is leveraged to eliminate the style diversity between the input and dictionary features (e.g., illumination), and a confidence score is proposed to adaptively fuse the dictionary feature to the input. Finally, multi-scale dictionaries are adopted in a progressive manner to enable the coarse-to-fine restoration. Experiments show that our proposed method can achieve plausible performance in both quantitative and qualitative evaluation, and more importantly, can generate realistic and promising results on real degraded images without requiring an identity-belonging reference. The source code and models are available at https://github.com/csxmli2016/DFDNet.\n\nIntroduction\n\nBlind face restoration (or face hallucination) aims at recovering realistic details from real low-quality (LQ) image to its high-quality (HQ) one, without knowing the degradation types or parameters. Compared with single image restoration tasks, e.g., image super-resolution [9,36,46], denoising [42,43], and deblurring [22,23], blind image restoration suffers from more challenges, yet is of great practical value in restoring real LQ images.\n\nRecently, benefited from the carefully designed architecture and the incorporation of related priors in deep neural convolutional networks, the restoration results tend to be more plausible and acceptable. Though great achievements have been made, the real LQ images usually contain complex and diverse distributions that are impractical to synthesize, making the blind restoration problem intractable. To solve this issue, reference-based methods [7,26,35,47] have been suggested by using reference prior in image restoration task to improve the process of network learning and alleviate the dependency of network on degraded input. Among these methods, GFRNet [26] and GWAINet [7] adopt a frontal HQ image as reference to guide the restoration of degraded observation. However, these two methods suffer from two drawbacks. 1) They have to obtain a frontal HQ reference which is from the same identity with LQ image. 2) The differences of poses and expressions between the reference and degraded input will affect the reconstruction performance. These two requirements limit their applicative ability to some specific scenarios (e.g., old film restoration or phone album that supports identity group).\n\nIn this paper, we present a DFDNet by building deep face dictionaries to address the aforementioned difficulties. We note that the four face components (i.e., left/right eyes, nose and mouth) are similar among different people. Thus, in this work, we off-line build face component dictionaries by adopting K-means on large amounts of HQ face images. This manner can obtain more accurate component reference without requiring the corresponding identity-belonging HQ images, which makes the proposed model applicable in most face restoration scenes. To be specific, we firstly use pre-trained VggFace [3] to extract the multi-scale features of HQ face images in different feature scale (e.g., output of different convolutional layers). Secondly, we adopt RoIAlign [14] to crop their component features based on the facial landmarks. K-means is then applied on these features to generate the K clusters for each component on different feature levels. After that, component adaptive instance normalization (CAdaIN) is proposed to norm the corresponding dictionary feature which helps to eliminate the effect of style diversity (i.e., illumination or skin color). Finally, with the degraded input, we match and select the dictionary component clusters which have the smallest feature distance to guide the following restoration process in an adaptive and progressive manner. A confidence score is predicted to balance the input component feature and the selected dictionary feature. In addition, we use multi-scale dictionaries to guide the restoration progressively which further improves the performance. Compared with the former reference-based methods (i.e., GFRNet [26] and GWAINet [7]), which have only one HQ reference, our DFDNet has more component candidates to be selected as a reference, thus making our model achieve superior performance.\n\nExtensive experiments are conducted to evaluate the performance of our proposed DFDNet. The quantitative and qualitative results show the benefits of deep multi-scale face dictionaries brought in our method. Moreover, DFDNet can also generate plausible and promising results on real LQ images. Without requiring identity-belonging HQ reference, our method is flexible and practical in most face restoration applications.\n\nTo sum up, the main contributions of this work are:\n\n-We use deep component dictionaries as reference candidates to guide the degraded face restoration. The proposed DFDNet can generalize to face images without requiring the identity-belonging HQ reference, which is more applicative and efficient than those reference-based methods. -We suggest a DFT block by utilizing CAdaIN to eliminate the distribution diversity between the input and dictionary clusters for better dictionary feature transfer, and we also propose a confidence score to adaptively fuse the dictionary feature to the input with different degradation level. -We adopt a progressive manner for training DFDNet by incorporating the component dictionaries in different feature scales. This can make our DFDNet learn coarse-to-fine details. -Our proposed DFDNet can achieve promising performance on both synthetic and real degraded images, showing its potential in real applications.\n\n\nRelated Work\n\nIn this section, we discuss recent works about single image and reference-based image restoration methods which are closely related to our work.\n\n\nSingle Image Restoration\n\nAlong with the benefits brought by deep CNNs, single image restoration has achieved great success in many tasks, e.g., image super-resolution [9,19,24,44,46], denoising [13,38,42,43], deblurring [22,29,41], and compression artifact removal [8,10,12]. Due to the specific facial structure, there are also several well-developed methods for face hallucination [2, 4-6, 15, 37, 39, 40, 48]. Among these methods, Huang et al. [15] suggest to ultra-resolve a very low resolution face image by using the neural networks to predict the wavelet coefficients of HQ images. Cao et al. [2] propose reinforcement learning to discover the attended regions and then enhance them with a learnable local network. To better recover the structure details, there are also some methods that incorporate the image prior knowledge in the restoring process. Wang et al. [35] propose to use semantic segmentation probability maps as class prior to recover class-aware textures on natural image super-resolution task. It firstly takes the LR images through a segmentation network to generate the class probability maps. And then these maps and LQ features are fused together by spatial feature transformation. As for face images, Shen et al. [33] propose to learn a global semantic face prior as input to impose local structure on the output. Similarly, Xu et al. [39] use a multi-tasks model to predict the facial components heatmaps and use them for incorporating structure information. Chen et al. [4] learn the facial geometry prior (i.e., landmarks heatmaps and parsing maps) and take them to recover the high-resolution results. Yu et al. [40] develop a facial attribute-embedded network by incorporating face attributes vector in the LR feature space. Kim et al. [6] adopt a progressive manner to generate the successive higher resolution output and propose a facial attention loss on landmarks to constrain the structure of reconstruction. However, most of these facial prior knowledge mainly focus on geometry constrains (i.e., landmarks or heatmaps), which may not bring direct facial details for the restoration of LQ image. Thus, most of these single image restoration methods failed to generate plausible and realistic details on real LQ face images because of the ill-posed problem and the limitation of a single image or facial structure prior brought to the learning process of networks.\n\n\nReference-Based Image Restoration\n\nDue to the limitation of single image restoration methods on real-world LQ images, there are some works that use an additional image to guide the restoration process, which can bring the object structure details to the final result. As for natural image restoration, Zhang et al. [47] utilize a reference image which has similar content with a LR image and then adopt a global matching scheme to search the similar content patches. These reference feature patches are then used to swap the texture feature of LR images. This method can achieve great visual improvements. However, it is very time and memory consuming in searching similar patches from the global content. Moreover, the requirement of reference further limits its application, because finding a natural image with a similar content for each LR input is also terrible and sometimes it is impossible to obtain these types of image. Different from natural image, face owns specific structures and share the similar components on different images of the same identity. Based on this observation, two reference-based methods have been developed for face restoration. Li et al. [26] and Dogan et al. [7] use a fixed frontal HQ reference for each identity to provide identity-aware features to benefit the restoration process. However, we note that face images are usually taken under unconstrained conditions, e.g., different background, poses, expressions, illuminations, etc. To solve this problem, they utilize a WarpNet to predict flow field to warp the reference to align with the LQ image. However, the alignment still does not solve all the differences between the reference and input, i.e., mouth close to open. Besides, the warped reference is usually unnatural and may take obvious artifacts to the final reconstruction result. We note that each component between different identity has the similar structure (i.e., teeth, nose, and eyes). It is intuitive to split the whole face into different parts, and generate the representative components for each one. To achieve this goal, we firstly use K-means on HQ images to cluster different component features off-line.   latter restoration. Moreover, with the conducted dictionaries, we do not require an identity-belonging reference anymore, and more component candidates can be selected as reference. It is much more accurate and effective than only one face image in reference-based restoration and can be applied in the unconstrained applications.\n\n\nProposed Method\n\nInspired by the former reference-based image restoration methods [7,26,47], this work attempts to overcome the limitation of requiring reference image in face restoration. Given a LQ image I d , our proposed DFDNet aims to generate plausible and realistic HQ one\u00ce h with the conducted component dictionaries. The whole pipeline is shown in Fig. 1. In the first stage ( Fig. 1 (a)), we firstly generate the deep component dictionaries from the high-quality images I h via k-means. These dictionaries can be selected as candidate component references. In the second stage ( Fig. 1 (b)), for each component of the degraded observation I d , our DFDNet selects the dictionary features that have the most similar structure with the input. Specially, we re-norm the whole dictionaries via component AdaIN (termed as CAdaIN) based on the input component to eliminate the distribution or style diversity. The selected dictionary features are then utilized to guide the restoration process via dictionary feature transformation. Furthermore, we introduce a confidence score on the selected dictionary feature to generalize different degradation levels through weighted feature fusion. The progressive manner from coarse to fine is also beneficial to the restoration process. In the following, we first describe the off-line generation of multi-scale deep component dictionaries. Then the details of our proposed DFDNet along with the dictionaries feature transfer (DFT) blocks are interpreted. The objective functions for training are finally presented.\n\n\nOff-line Generation of Component Dictionaries\n\nTo build the deep component dictionaries that cover the most types of faces, we adopt FFHQ dataset [18] due to its high-quality and considerable variation in terms of age, ethnicity, pose, expression, etc. We utilize DeepPose [32] and Face ++1 to recognize their poses and expressions (i.e., anger, disgust, fear, happiness, neutral, sadness and surprise), respectively, to balance the distribution of each attribute. Among these 70,000 high-quality images of FFHQ, we select 10,000 ones to build our dictionaries. Given a high-quality image I h , we first use pre-trained VggFace [3] to extract its features on different scales. With the facial landmarks L h detected by dlib [20], we utilize RoIAlign [14] to crop and re-sample these four components on each scale to a fixed size. We then adopt K-means [30] to generate K clusters for each component, resulting in our component dictionaries. In particular, for handling 256 \u00d7 256 images, the feature sizes of left/right eyes, nose and mouth on scale-1 are set to 40/40, 25, 55, respectively. The sizes are down-sampled one by one by two times for the following scale-{2, 3, 4}. These dictionary feature can be formulated as:\nDics,c = FDic I h |L h ; \u0398V gg ,(1)\nwhere s \u2208 {1, 2, 3, 4} is the dictionary scale, c \u2208 {left eye, right eye, nose, mouth} is the type of components, and \u0398 V gg is the fixed parameters from VggFace.\n\n\nDeep Face Dictionary Network\n\nAfter building the high-quality component dictionaries, our DFDNet is then proposed to transfer the dictionary features to the degraded input I d . The\n\nproposed DFDNet can be formulated as:\nI = F(I d |L d , Dic; \u0398),(2)\nwhere L d and Dic represent the facial landmarks of I d and the component dictionaries in Eqn. 1, respectively. \u0398 denotes the learnable parameters of DFDNet.\n\nTo guarantee the features of I d and Dic in the same feature space, we take the pre-trained VggFace model as the encoder of DFDNet, which has the same network architecture and parameters in the dictionary generation network (Fig. 1  (a)). Suppose that the encoder of DFDNet is different from VggFace or trainable in the training phase, it easily generates different features which are inconsistent with the pre-conducted dictionaries. For better transferring the dictionary feature to the input components, we suggest a DFT block and use it in a progressive manner. It mainly contains five parts, i.e., RoIAlign, CAdaIN, Feature Match, Confidence Score and Reverse RoIAlign. As for the encoder features of I d , we first utilize RoIAlign to generate four component regions. We note that these input components may have different distribution/style with the cluster of conducted dictionaries Dic s,c , we here suggest a component adaptive instance norm [16] (CAdaIN) to re-norm each cluster in the dictionaries. The feature match scheme is then utilized to select the cluster with the similar texture. In addition, a confidence score is predicted based on the residual between the selected cluster and the input feature to better provide complementary details on input. The reverse RoIAlign is finally adopted to paste the restored features to the corresponding locations. For better transformation of restored features to the decoder, we modify the UNet [31] and propose to use spatial feature transform (SFT) [35] to transfer the dictionary features to the degraded input.\n\nCAdaIN. We note that face images are usually under unconstrained conditions, e.g., different illuminations, skin color. To eliminate the effect of these diversities between the input components and dictionaries, we adopt component AdaIN (CAdaIN) to re-norm the clusters in component dictionaries for accurate feature matching. AdaIN [16] can remain the structure while translate the content to the desired style. Denote F d s,c and Dic k s,c as the c-th component features of the input I d and the k-th cluster from the component dictionaries at scale s, respectively. The re-normed dictionaries RDic s,c by CAdaIN is formulated by:\nRDic k s,c = \u03c3 F d s,c Dic k s,c \u2212 \u00b5 Dic k s,c \u03c3 Dic k s,c + \u00b5 F d s,c(3)\nwhere s and c are the dictionary scale and the type of components defined in Eqn. 1. \u03c3 and \u00b5 are the mean and standard deviation. The re-normed dictionaries RDic k s,c has the similar distribution with input components F d s,c , which can not only eliminate the style difference, but also facilitate the feature match scheme.\n\nFeature Match. As for the input component feature F d s,c and the re-normed dictionaries RDic s,c , we adopt inner product to measure the similarity between the F d s,c and all the clusters in RDic s,c . For k-th cluster in component dictionary, the similarity is defined as:\nS k s,c = F d s,c , RDic k s,c ,(4)\nThe input component feature F d s,c matches across all the clusters in the re-normed component dictionaries to select the most similar one. F d s,c has the same size with k-th cluster in the corresponding dictionaries, thus this inner product operation can be regarded as a convolutional layer with zero bias and weights of F c s,d performed over all the clusters. This is very efficient to obtain the dictionaries' similarity scores. Among all the scores S s,c , we select the re-normed cluster with the highest similarity as the matched dictionaries, termed as RDic * s,c . This selected component feature RDic * s,c is then utilized to provide the high-quality details to guide the restoration of the input components in the following section.\n\nConfidence Score. We note that the slight degradation of input (e.g., \u00d72 super-resolution) relies little on the dictionaries and vice versa. To generalize our DFDNet to different degradation level, we take the residual between F d s,c and RDic * s,c as input to predict a confidence score that performs on the selected dictionary feature RDic * s,c . The result is expected to contain the absent highquality details which can add back to F d s,c . The output of confidence score can be formulated by:\nFs,c = F d s,c + RDic * s,c * F Conf (RDic * s,c \u2212 F d s,c ; \u0398C ),(5)\nwhere \u0398 C is the learnable parameters of confidence score block F Conf .\n\nReverse RoIAlign. After all the input components are processed by the former section, here we utilize a reverse operation of RoIAlign by takingF s,c and c \u2208 {left/right eyes, nose and mouth} to their original locations of F d s,c . Denote the result of reverse RoIAlignF s . This manner can easily keep and translate other features (e.g., background) to the decoder for better restoration.\n\nInspired by SFT [35], which is proposed to learn a feature modulation function that incorporates some prior condition through affine transformation. The scale \u03b1 and shift \u03b2 parameters are learned from the restored featuresF s with two convolutional layers. The scale-s SFT layer is formulated as:\nSF Ts = \u03b1 F decoder s + \u03b2 ,(6)\nwhere \u03b1 and \u03b2 are both element-wise weights which have the same shape (i.e., height, width, number of channels) with F decoder s . After the progressive DFT block, our DFDNet can gradually learn the fine details for the final result\u00ce.\n\n\nModel Objective\n\nThe learning objective for training our DFDNet contains two parts, 1) reconstruction loss that constrains the result\u00ce close to the ground-truth I h , 2) adversarial loss [11] for recovering realistic details.\n\nReconstruction Loss. We adopt mean square error (MSE) on both pixel and feature space (perceptual loss [17]). The whole reconstruction loss is defined as,\nLrec = \u03bb l2 \u00ce \u2212 I h 2 + M m=1 \u03bbp,m CmHmWm \u03a8m(\u00ce) \u2212 \u03a8m(I h ) 2 (7)\nwhere \u03a8 m denotes the m-th convolution layer of VggFace model \u03a8 . C, H and W are the channel, height, and width for the m-th feature. \u03bb l2 and \u03bb p,m are the trade-off parameters. The first term tends to generate blurry results, while the second one (perceptual loss) is beneficial for improving visual quality for the reconstruction results. The combination of the two terms is common in computer vision tasks and also is effective in the stable training of neural networks. In our experimental settings, we set M equal to 4.\n\nAdversarial Loss. It is widely used to generate realistic details in image restoration tasks. In this work, we adopt multi-scale discriminators [34] at different size of the restoration results. Moreover, for stable training of each discriminator, we adopt SNGAN [28] by incorporating the spectral normalization after each convolution layer. The objective function for training multi-scale discriminators is defined as:\nadv,Dr = R r E I h \u2193r \u223cP (I h \u2193r ) min 0, Dr(I h \u2193r ) \u2212 1 +E\u00ce \u2193r \u223cP (\u00ce\u2193r) min 0, \u22121 \u2212 Dr(\u00ce \u2193r ) ,(8)\nwhere \u2193r denotes the down-sampling operation with scale factor r and r \u2208 {1, 2, 4, 8}. Similarly, the loss for training generator F is defined as:\nadv,G = \u2212\u03bba,r R r E I d \u223cP (I d ) Dr F I d |L d , Dic; \u0398 \u2193r ,(9)\nwhere \u03bb a,r is the trade-off parameters for each scale discriminator. To sum up, the full objective function for training our DFDNet can be written as the combination of reconstruction and adversarial loss,\nL = rec + adv,G .(10)\n\nExperiments\n\nSince the performance of reference-based methods are usually superior to other single image or face restoration methods [26], in this paper, we mainly compare our DFDNet with reference-based (i.e., GFRNet [26], GWAINet [7]) and face prior-based methods (i.e., Shen et al. [33], Kim et al. [6]). We also report the results of single natural image (i.e., RCAN [46], ESRGAN [36]) and face (i.e., WaveletSR [15]) super-resolution methods. Among these methods, Shen et al. [33] and Kim et al. [6] can only handle 128 \u00d7 128 images, while others can restore 256 \u00d7 256 images. For fair comparisons, our DFDNet is trained on these two sizes (termed as DFDNet128 and DFDNet256). RCAN [46] and ESRGAN [36] were originally trained on the natural images, thus we retrain them using our training data for further fair comparison (termed as *RCAN and *ESRGAN). WaveletSR [15] was also retrained by using our training data with their released training code (termed as *WaveletSR). Following [26], PSNR, SSIM and LPIPS [45] are reported on the super-resolution task (\u00d74 and \u00d78) which also has the random injection of Gaussian noise and blur operation for quantitatively evaluating on the blind restoration task. In terms of qualitative comparison, we demonstrate the comparisons on the synthetic and real-world low-quality images. More visual results including high resolution restoration performance (i.e., 512 \u00d7 512) can be found in our supplemental materials.\n\n\nTraining Details\n\nAs mentioned in Section 3.1, we select 10,000 images from FFHQ [18] to build our component dictionaries. We note that GFRNet, GWAINet and WaveletSR adopt VggFace2 [3] as their training data, we also use it for training and validating our DFDNet for fair comparison. To evaluate the generality of our method, we build two test datasets, i.e., 2,000 test images from VggFace2 [3] which are not overlapped with the training data, and another 2,000 images from CelebA [27].\n\nEach of them has a high-quality reference from the same identity for running GFRNet and GWAINet. To synthesize the training data that approximate to the real LQ images, we adopt the same degradation model suggested in GFRNet [26],\nI d = (I h \u2297 k) \u2193r + n \u03c3 JP EGq(11)\nwhere k denotes two common types of blur kernel, i.e., Gaussian blur with \u2208 {1 : 0.1 : 5} and 32 motion blur kernels from [1,25]. Down-sampler r, Gaussian noise n \u03c3 and JPEG compression quality q are randomly sampled from {1 : 0.1 : 8}, {0 : 1 : 15} and {40 : 1 : 80}, respectively. The trade-off parameters for training DFDNet are set as follows: \u03bb l2 = 100, \u03bb p,1 = 0.5, \u03bb p,2 = 1, \u03bb p,3 = 2, \u03bb p,4 = 4, \u03bb a,1 = 4, \u03bb a,2 = 2, \u03bb a,4 = 1, \u03bb a,8 = 1. The Adam optimizer [21] is adopted to train our DFDNet with learning rate lr = 2 \u00d7 10 \u22124 , \u03b2 1 = 0.5 and \u03b2 2 = 0.999. lr is reduced by 2 times when the reconstruction loss on validation set becomes non-decreasing. The whole model including the generation of multi-scale component dictionaries and the training of DFDNet are executed on a server with 128G RAM and 4 Tesla V100. It takes 4 days to train our DFDNet.\n\n\nResults on Synthetic Images\n\nQualitative evaluation. The quantitative results of these competing methods on super-resolution task are shown in Table 1. We can have the following observations: 1) Compared with all the competing methods, our DFDNet is superior to others by a large margin on two datasets and two super-resolution tasks (i.e., at least 0.4 dB in \u00d74 and 0.3 dB in \u00d78 higher than the 2-nd best method). 2)  Even though the retrained *RCAN and *ESRGAN have achieved great improvements, the performance is still inferior to GFRNet, GWAINet and our DFDNet, mainly due to the lack of high-quality facial references. 3) With the same training data, reference-based methods (i.e., GFRNet [26] and GWAINet [7]) outperform other methods, but are still inferior to our DFDNet, which can be attributed to the incorporation of high-quality component dictionaries and the progressive dictionary feature transfer manner. Given a LQ image, our DFDNet has more candidates to be selected as component reference, resulting in the flexible and effective restoration. 4) Our component dictionaries are conducted on FFHQ [18] and DFDNet is trained on VggFace2 [3], but the performance on CelebA [27] still outperforms other methods, indicating the great generalization of our DFDNet.\n\nVisual Comparisons. Figs. 2 and 3 show the restoration results of these competing methods on \u00d74 and \u00d78 super-resolution tasks. Shen et al. [33] and Kim et al. [6] were proposed to handle face deblur and super-resolution problems. Since they only released their test model, we did not re-implement them with the same training data and degradation model in this paper, resulting in their poor performance. The retrained *RCAN, *ESRGAN and *WaveletSR still limited in generating plausible facial structure, which may be caused by the lack of    reasonable guidance for face restoration. In terms of reference-based methods, GFRNet [26] and GWAINet [7] generate plausible structures but fail to restore realistic details. In contrast to these competing methods, our DFDNet can reconstruct promising structure with richer details on these notable face regions (i.e., eyes and mouth). Moreover, even though the degraded input is not frontal, our DFDNet can also have plausible performance (2-nd rows in Figs. 2 and 3).\n\nPerformance on Real-world Low-quality Images. Our goal is to restore the real low-quality images without knowing the degradation types and parameters. To evaluate the performance of our DFDNet on blind face restoration, we select the real images from Google Image with face resolution lower than 80 \u00d7 80 and each of them has an identity-belonging high-quality reference for running GFRNet [26] and GWAINet [7]. Here we only show the visual results on competing methods with top-5 quantitative performance in Fig. 4. Among these competing methods, only GFRNet [26] is proposed to handle blind face restoration, thus can well generalize to real degraded images. However, its results still contain obvious artifacts due to the inconsistent reference of only one high-quality image. With the incorporation of component dictionaries, our DFDNet can generate plausible and realistic results, especially in the eyes and mouth region, indicating the effectiveness of our DFDNet in handling real degraded observations. Moreover, our DFDNet does not require the identity-belonging reference, showing practical values in wide applications.\n\n\nInput\n\nOurs(#16) Ours(#128) Ground-truth Ours(#64) Ours(#256) Ours(#512) \n\n\nAblation Study\n\nTo evaluate the effectiveness of our proposed DFDNet, we conduct two groups of ablative experiments, i.e., the cluster number K for each component dictionary, and the progressive dictionary feature transfer block (DFT). For the first one, we generate different number of clusters in our component dictionaries. In this paper, we consider the cluster K \u2208 {16, 64, 128, 256, 512}. For each variant, we retrain our DFDNet256 with the same experimental settings but with different cluster numbers, which are defined as Ours(#K). The quantitative results on our VggFace2 test data are shown in Table 2. One can see that Ours(#64) has nearly the same performance with GFRNet [26]. We analyze that because GFRNet [26] adopts alignment between reference and degraded input, making Ours(#16) performs poorer than it. By increasing the cluster numbers, our DFDNet tends to achieve better results. We note that Ours(#256) performs on par with Ours(#512) but has less time-consuming in feature match. Thus, we adopt Ours(#256) as our default model. Visual comparisons between these five variants are also presented in Fig. 5. We can see that when K is larger, the restoration results tend to be clear and are much more realistic, indicating the effectiveness of our dictionaries in guiding the restoration process. For the second one, to evaluate the effectiveness of our progressive DFT block, we consider the following variants: 1) Ours(Full ): the final model in this paper, 2) Ours(0DFT ): our DFDNet by removing all the DFT blocks and directly using SFT to transfer the encoder feature to the decoder, 3) Ours(2DFT ): our DFDNet with two DFT blocks (i.e., DFT-{3,4} block), 4) Ours(-Ada) and Ours(-CS ): by removing the CAdaIN and Confidence Score in all the DFT blocks of final  model, respectively. The quantitative results on our VggFace2 [3] test data are reported in Table 3. We can have the following observations. (i) By increasing the number of DFT block, obvious gains (at least 2.2 dB in \u00d74 and 0.6 dB in \u00d78) are achieved, indicating the effectiveness of our progressive manner. (ii) The performance is severely degraded when removing the CAdaIN. This may be caused by the inconsistent distribution of degraded feature and dictionaries, resulting in the wrong matched features for restoration. (iii) With the incorporation of confidence score, which can help balance the input and the matched dictionary feature, our DFDNet can also achieve plausible improvements. Fig. 6 shows the restoration results of these variants. We can see that compared with Ours(0DFT ) and Ours(2DFT ), Ours(Full ) is much clear and contains rich details. Results of Ours(-Ada) are inconsistent with ground-truth (i.e., mouth region in 1-st row). By the way, when the degradation is slight (1-st row), Ours(-CS ) which directly swaps the dictionary feature to the degraded image can easily change the original content (mouth region), making the undesired modification of face components.\n\n\nConclusion\n\nIn this paper, we present a blind face restoration model, i.e., DFDNet, to solve the limitation of reference-based methods. To eliminate the dependence of identitybelonging high-quality reference, we firstly suggest traditional K-means on large amount of high-quality images to cluster perceptually significant facial component. For dictionary feature transfer, we then propose a DFT block by addressing the following problems, distribution diversity between degraded input and dictionary feature with proposed component AdaIN, feature match scheme with fast inner product similarity, and generalization to degradation level with the confidence score. Finally, the multi-scale component dictionaries are incorporated in the multiple DFT blocks in a progressive manner, which can make our DFDNet learn the coarse-to-fine details for face restoration. Experiments validate the effectiveness of our DFDNet in handling the synthetic and real-world low-quality images. Moreover, we did not require an identity-belonging reference, showing the practical value in wide scenes in the real-world applications.\n\n\nArchitecture of our DFDNet for dictionary feature transfer.\n\nFigure 1 :\n1Overview of our proposed method. It mainly contains two parts: (a) the off-line generation of multi-scale component dictionaries from large amounts of high-quality images which have diverse poses and expressions. K-means is adopted to generate K clusters for each component (i.e., left/right eyes, nose and mouth) on different feature scales. (b) The restoration process and dictionary feature transfer (DFT) block that are utilized to provide the reference details in a progressive manner. Here, DFT-i block takes the Scale-i component dictionaries for reference in the same feature level.\n\nFigure 2 :\n2Visual comparisons of these competing methods on \u00d74 SR task. Close-up in the right bottom of GFRNet is the required guidance.\n\nFigure 3 :\n3Visual comparisons of these competing methods on \u00d78 SR task. Close-up in the right bottom of GFRNet is the required guidance.\n\n.\nGround\n\nFigure 4 :\n4Visual comparisons of competing methods with top performance on real-world low-quality images. Close-up at the right bottom is the required guidance.\n\nFigure 5 :Figure 6 :\n56Restoration results of our DFDNet with different cluster numbers. Restoration results of our DFDNet variants.\n\n\nThen we match the LQ features from the conducted component dictionaries to select the one with the similar structures to guide theleft eyes dictionaries \n\nmouth dictionaries \n\nScale-1 Components \nDictionaries Dic1,c \n\nDictionaries Generation \n\nDFT Block \n\nDictionaries Generation \n\nDictionaries \nGeneration \n\nScale-2 Components \nDictionaries Dic2,c \n\nScale-3 Components \nDictionaries Dic3,c \nReverse \nRoIAlign \n\nRoIAlign \n\nDFT Block \n\nDictionary Feature \nTransfer Block \n\nResblock \n\nConv. + SN \n+ LReLU \n\nLearnable Parameters \n\nDFT-2 Block \n\nDFT-4 Block \n\nDFT-3 Block \n\nDilated \nResblock \n\nConv. + SN \n+ LReLU \n\nLearnable Parameters \n\nDFT-1 Block \n\nCAdaIN \nFeature \nMatch \n\nCAdaIN \nFeature \nMatch \n\nConfidence Score \n\nConfidence Score \n\nReverse \nRoIAlign \n\nRoIAlign \n\nDFT Block \n\nDFT-2 Block \n\nDFT-4 Block \n\nDFT-3 Block \n\nDilated \nResblock \n\nConv. + SN \n+ LReLU \n\nLearnable Parameters \n\nDFT-1 Block \n\nCAdaIN \nFeature \nMatch \n\nCAdaIN \nFeature \nMatch \n\nConfidence Score \n\nConfidence Score \n\nReverse \nRoIAlign \n\nRoIAlign \n\nDFT Block \n\n\u8f93\u5165\u4f4e\u8d28\u91cf\u56fe \n\n\u7f51\u7edc\u8f93\u51fa\u56fe \n\n\u4efb\u610f\u589e\u5f3a\u7f51\u7edc \n\n\u9884\u589e\u5f3a\u540e\u7684\u9ad8\u6e05\u56fe\u50cf \nGround-truth \n\n\u539f\u59cb\u9ad8\u6e05\u56fe\u50cf \nGround-truth \n\n\u589e\u5f3a \n\n\u6b27\u6c0f\u8ddd\u79bb \n\u635f\u5931 \n\nF d \n\ns,c \n\nDics,c \nF d \n\ns,c \n\nRDics,c \nF d \n\ns,c \n\nRDic *  s,cFs,c \n\n\n\nTable 1 :\n1Quantitative comparisons on two datasets and two tasks (\u00d74 and \u00d78).PSNR\u2191 SSIM\u2191 LPIPS\u2193 PSNR\u2191 SSIM\u2191 LPIPS\u2193 PSNR\u2191 SSIM\u2191 LPIPS\u2193 PSNR\u2191 SSIM\u2191 LPIPS\u2193VggFace2 [3] \nCelebA [27] \n\n\u00d74 \n\u00d78 \n\u00d74 \n\u00d78 \nMethods \n\nShen et al. [33] 20.56 .745 .080 18.79 .717 .126 21.04 .751 .079 18.64 .714 .131 \nKim et al. [6] \n-\n-\n-\n20.99 .759 .095 \n-\n-\n-\n20.72 .749 .104 \nDFDNet128 \n25.76 .893 .035 23.42 .841 .071 25.92 .899 .031 23.40 .839 .080 \n\nRCAN [46] \n24.87 .889 .283 21.36 .819 .295 24.93 .892 .267 21.11 .814 .302 \n*RCAN \n25.32 .896 .247 22.94 .836 .271 25.47 .901 .217 22.84 .831 .283 \nESRGAN [36] 24.13 .876 .223 \n-\n-\n-\n24.31 .878 .210 \n-\n-\n-\n*ESRGAN \n24.91 .891 .194 \n-\n-\n-\n25.04 .896 .193 \n-\n-\n-\nWaveletSR [15] 24.30 .878 .236 21.70 .823 .273 24.51 .884 .247 21.42 .820 .279 \nGFRNet [26] 27.13 .912 .132 23.37 .856 .269 27.32 .915 .124 23.12 .852 .273 \nGWAINet [7] \n-\n-\n-\n23.41 .860 .260 \n-\n-\n-\n23.38 .859 .270 \nDFDNet256 27.54 .923 .114 23.73 .872 .239 27.77 .925 .103 23.69 .872 .241 \n\n\n\nTable 2 :\n2Comparisons on cluster number. Ours(#16) 26.79 .908 .144 .23.21 .839 .257 Ours(#64) 27.15 .914 .126 23.38 .856 .266 Ours(#128) 27.43 .919 .120 23.56 .867 .248 Ours(#256) 27.54 .923 .114 23.73 .872 .239 Ours(#512) 27.55 .923 .110 23.75 .873 .231\u00d74 \n\u00d78 \nMethods \n\nPSNR\u2191SSIM\u2191LPIPS\u2193PSNR\u2191SSIM\u2191LPIPS\u2193 \n\n\n\nTable 3 :\n3Comparisons on variants of DFT. Ours(0DFT ) 25.30 .896 .239 23.06 .839 .253 Ours(2DFT ) 26.43 .905 .161 23.24 .848 .261 Ours(-Ada) 25.47 .897 .190 22.97 .836 .270 Ours(-CS ) 27.23 .914 .129 23.51 .862 .246 Ours(Full) 27.54 .923 .114 23.73 .872 .239\u00d74 \n\u00d78 \nMethods \n\nPSNR\u2191SSIM\u2191LPIPS\u2193PSNR\u2191SSIM\u2191LPIPS\u2193 \n\n\nhttps://www.faceplusplus.com.cn/emotion-recognition/\nAcknowledgments. This work is partially supported by the National Natural Science Foundation of China (NSFC) under Grant No.s 61671182, U19A2073 and Hong Kong RGC RIF grant (R5001-18).\nModeling the performance of image restoration from motion blur. G Boracchi, A Foi, TIP. Boracchi, G., Foi, A.: Modeling the performance of image restoration from motion blur. TIP (2012)\n\nAttention-aware face hallucination via deep reinforcement learning. Q Cao, L Lin, Y Shi, X Liang, G Li, CVPRCao, Q., Lin, L., Shi, Y., Liang, X., Li, G.: Attention-aware face hallucination via deep reinforcement learning. In: CVPR (2017)\n\nVggface2: A dataset for recognising faces across pose and age. Q Cao, L Shen, W Xie, O M Parkhi, A Zisserman, FGCao, Q., Shen, L., Xie, W., Parkhi, O.M., Zisserman, A.: Vggface2: A dataset for recognising faces across pose and age. In: FG (2018)\n\nFsrnet: End-to-end learning face super-resolution with facial priors. Y Chen, Y Tai, X Liu, C Shen, J Yang, CVPRChen, Y., Tai, Y., Liu, X., Shen, C., Yang, J.: Fsrnet: End-to-end learning face super-resolution with facial priors. In: CVPR (June 2018)\n\nDeep face deblurring. G G Chrysos, S Zafeiriou, CVPRWChrysos, G.G., Zafeiriou, S.: Deep face deblurring. In: CVPRW (2017)\n\nProgressive face super-resolution via attention to facial landmark. Deokyun Kim, Minseon Kim, G K D S K , BMVCDeokyun Kim, Minseon Kim, G.K.D.S.K.: Progressive face super-resolution via attention to facial landmark. In: BMVC (2019)\n\nExemplar guided face image super-resolution without facial landmarks. B Dogan, S Gu, R Timofte, CVPRWDogan, B., Gu, S., Timofte, R.: Exemplar guided face image super-resolution without facial landmarks. In: CVPRW (2019)\n\nCompression artifacts reduction by a deep convolutional network. C Dong, Y Deng, C Loy, X Tang, ICCVDong, C., Deng, Y., Change Loy, C., Tang, X.: Compression artifacts reduction by a deep convolutional network. In: ICCV (2015)\n\nLearning a deep convolutional network for image super-resolution. C Dong, C C Loy, K He, X Tang, ECCVDong, C., Loy, C.C., He, K., Tang, X.: Learning a deep convolutional network for image super-resolution. In: ECCV (2014)\n\nDeep generative adversarial compression artifact removal. L Galteri, L Seidenari, M Bertini, A Del Bimbo, Galteri, L., Seidenari, L., Bertini, M., Del Bimbo, A.: Deep generative adversarial compression artifact removal. In: ICCV (2017)\n\nI Goodfellow, J Pouget-Abadie, M Mirza, B Xu, D Warde-Farley, S Ozair, A Courville, Y Bengio, Generative adversarial nets. NeurIPSGoodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., Courville, A., Bengio, Y.: Generative adversarial nets. In: NeurIPS (2014)\n\nOne-to-many network for visually pleasing compression artifacts reduction. J Guo, H Chao, CVPRGuo, J., Chao, H.: One-to-many network for visually pleasing compression artifacts reduction. In: CVPR (2017)\n\nToward convolutional blind denoising of real photographs. S Guo, Z Yan, K Zhang, W Zuo, L Zhang, CVPRGuo, S., Yan, Z., Zhang, K., Zuo, W., Zhang, L.: Toward convolutional blind denoising of real photographs. In: CVPR (2019)\n\nK He, G Gkioxari, P Doll\u00e1r, R Girshick, Mask R-CNN. In: ICCV. He, K., Gkioxari, G., Doll\u00e1r, P., Girshick, R.: Mask R-CNN. In: ICCV (2017)\n\nWavelet-srnet: A wavelet-based cnn for multi-scale face super resolution. H Huang, R He, Z Sun, T Tan, Huang, H., He, R., Sun, Z., Tan, T.: Wavelet-srnet: A wavelet-based cnn for multi-scale face super resolution. In: ICCV (2017)\n\nArbitrary style transfer in real-time with adaptive instance normalization. X Huang, S Belongie, Huang, X., Belongie, S.: Arbitrary style transfer in real-time with adaptive instance normalization. In: ICCV (2017)\n\nPerceptual losses for real-time style transfer and super-resolution. J Johnson, A Alahi, L Fei-Fei, ECCVJohnson, J., Alahi, A., Fei-Fei, L.: Perceptual losses for real-time style transfer and super-resolution. In: ECCV (2016)\n\nA style-based generator architecture for generative adversarial networks. T Karras, S Laine, T Aila, CVPRKarras, T., Laine, S., Aila, T.: A style-based generator architecture for generative adversarial networks. In: CVPR (2019)\n\nAccurate image super-resolution using very deep convolutional networks. J Kim, J Kwon Lee, K Mu Lee, CVPRKim, J., Kwon Lee, J., Mu Lee, K.: Accurate image super-resolution using very deep convolutional networks. In: CVPR (2016)\n\nDlib-ml: A machine learning toolkit. D E King, Journal of Machine Learning Research. King, D.E.: Dlib-ml: A machine learning toolkit. Journal of Machine Learning Research (2009)\n\nAdam: A method for stochastic optimization. D P Kingma, J Ba, arXiv:1412.6980arXiv preprintKingma, D.P., Ba, J.: Adam: A method for stochastic optimization. arXiv preprint arXiv:1412.6980 (2014)\n\nDeblurgan: Blind motion deblurring using conditional adversarial networks. O Kupyn, V Budzan, M Mykhailych, D Mishkin, J Matas, CVPRKupyn, O., Budzan, V., Mykhailych, M., Mishkin, D., Matas, J.: Deblurgan: Blind motion deblurring using conditional adversarial networks. In: CVPR (2018)\n\nDeblurgan-v2: Deblurring (orders-ofmagnitude) faster and better. O Kupyn, T Martyniuk, J Wu, Z Wang, ICCVKupyn, O., Martyniuk, T., Wu, J., Wang, Z.: Deblurgan-v2: Deblurring (orders-of- magnitude) faster and better. In: ICCV (2019)\n\nPhoto-realistic single image super-resolution using a generative adversarial network. C Ledig, L Theis, F Husz\u00e1r, J Caballero, A Cunningham, A Acosta, A Aitken, A Tejani, J Totz, Z Wang, CVPRLedig, C., Theis, L., Husz\u00e1r, F., Caballero, J., Cunningham, A., Acosta, A., Aitken, A., Tejani, A., Totz, J., Wang, Z., et al.: Photo-realistic single image super-resolution using a generative adversarial network. In: CVPR (2017)\n\nUnderstanding and evaluating blind deconvolution algorithms. A Levin, Y Weiss, F Durand, W T Freeman, CVPRLevin, A., Weiss, Y., Durand, F., Freeman, W.T.: Understanding and evaluating blind deconvolution algorithms. In: CVPR (2009)\n\nLearning warped guidance for blind face restoration. X Li, M Liu, Y Ye, W Zuo, L Lin, R Yang, ECCVLi, X., Liu, M., Ye, Y., Zuo, W., Lin, L., Yang, R.: Learning warped guidance for blind face restoration. In: ECCV (2018)\n\nDeep learning face attributes in the wild. Z Liu, P Luo, X Wang, X Tang, ICCVLiu, Z., Luo, P., Wang, X., Tang, X.: Deep learning face attributes in the wild. In: ICCV (2015)\n\nSpectral normalization for generative adversarial networks. T Miyato, T Kataoka, M Koyama, Y Yoshida, ICLRMiyato, T., Kataoka, T., Koyama, M., Yoshida, Y.: Spectral normalization for generative adversarial networks. In: ICLR (2018)\n\nDeep multi-scale convolutional neural network for dynamic scene deblurring. S Nah, T Hyun Kim, K Mu Lee, CVPRNah, S., Hyun Kim, T., Mu Lee, K.: Deep multi-scale convolutional neural network for dynamic scene deblurring. In: CVPR (2017)\n\nScikit-learn: Machine learning in Python. F Pedregosa, G Varoquaux, A Gramfort, V Michel, B Thirion, O Grisel, M Blondel, P Prettenhofer, R Weiss, V Dubourg, J Vanderplas, A Passos, D Cournapeau, M Brucher, M Perrot, E Duchesnay, Journal of Machine Learning Research. Pedregosa, F., Varoquaux, G., Gramfort, A., Michel, V., Thirion, B., Grisel, O., Blondel, M., Prettenhofer, P., Weiss, R., Dubourg, V., Vanderplas, J., Passos, A., Cournapeau, D., Brucher, M., Perrot, M., Duchesnay, E.: Scikit-learn: Machine learning in Python. Journal of Machine Learning Research (2011)\n\nU-net: Convolutional networks for biomedical image segmentation. O Ronneberger, P Fischer, T Brox, MICCAIRonneberger, O., Fischer, P., Brox, T.: U-net: Convolutional networks for biomedical image segmentation. In: MICCAI (2015)\n\nFine-grained head pose estimation without keypoints. N Ruiz, E Chong, J M Rehg, CVPRWRuiz, N., Chong, E., Rehg, J.M.: Fine-grained head pose estimation without keypoints. In: CVPRW (2018)\n\nDeep semantic face deblurring. Z Shen, W S Lai, T Xu, J Kautz, M H Yang, CVPRShen, Z., Lai, W.S., Xu, T., Kautz, J., Yang, M.H.: Deep semantic face deblurring. In: CVPR (2018)\n\nHigh-resolution image synthesis and semantic manipulation with conditional gans. T C Wang, M Y Liu, J Y Zhu, A Tao, J Kautz, B Catanzaro, CVPRWang, T.C., Liu, M.Y., Zhu, J.Y., Tao, A., Kautz, J., Catanzaro, B.: High-resolution image synthesis and semantic manipulation with conditional gans. In: CVPR (2018)\n\nRecovering realistic texture in image super-resolution by deep spatial feature transform. X Wang, K Yu, C Dong, C Loy, CVPRWang, X., Yu, K., Dong, C., Change Loy, C.: Recovering realistic texture in image super-resolution by deep spatial feature transform. In: CVPR (2018)\n\nEsrgan: Enhanced super-resolution generative adversarial networks. X Wang, K Yu, S Wu, J Gu, Y Liu, C Dong, Y Qiao, C Loy, ECCVWWang, X., Yu, K., Wu, S., Gu, J., Liu, Y., Dong, C., Qiao, Y., Change Loy, C.: Esrgan: Enhanced super-resolution generative adversarial networks. In: ECCVW (2018)\n\nLearning to superresolve blurry face and text images. X Xu, D Sun, J Pan, Y Zhang, H Pfister, M H Yang, Xu, X., Sun, D., Pan, J., Zhang, Y., Pfister, H., Yang, M.H.: Learning to super- resolve blurry face and text images. In: ICCV (2017)\n\nBm3d-net: A convolutional neural network for transform-domain collaborative filtering. D Yang, J Sun, IEEE Signal Processing Letters. Yang, D., Sun, J.: Bm3d-net: A convolutional neural network for transform-domain collaborative filtering. IEEE Signal Processing Letters (2017)\n\nFace super-resolution guided by facial component heatmaps. X Yu, B Fernando, B Ghanem, F Porikli, R Hartley, ECCVYu, X., Fernando, B., Ghanem, B., Porikli, F., Hartley, R.: Face super-resolution guided by facial component heatmaps. In: ECCV (2018)\n\nSuper-resolving very low-resolution face images with supplementary attributes. X Yu, B Fernando, R Hartley, F Porikli, CVPRYu, X., Fernando, B., Hartley, R., Porikli, F.: Super-resolving very low-resolution face images with supplementary attributes. In: CVPR (2018)\n\nDeep stacked hierarchical multi-patch network for image deblurring. H Zhang, Y Dai, H Li, P Koniusz, CVPRZhang, H., Dai, Y., Li, H., Koniusz, P.: Deep stacked hierarchical multi-patch network for image deblurring. In: CVPR (2019)\n\nBeyond a gaussian denoiser: Residual learning of deep cnn for image denoising. K Zhang, W Zuo, Y Chen, D Meng, L Zhang, TIP. Zhang, K., Zuo, W., Chen, Y., Meng, D., Zhang, L.: Beyond a gaussian denoiser: Residual learning of deep cnn for image denoising. TIP (2017)\n\nFfdnet: Toward a fast and flexible solution for cnn-based image denoising. K Zhang, W Zuo, L Zhang, TIP. Zhang, K., Zuo, W., Zhang, L.: Ffdnet: Toward a fast and flexible solution for cnn-based image denoising. TIP (2018)\n\nDeep plug-and-play super-resolution for arbitrary blur kernels. K Zhang, W Zuo, L Zhang, CVPRZhang, K., Zuo, W., Zhang, L.: Deep plug-and-play super-resolution for arbitrary blur kernels. In: CVPR (2019)\n\nThe unreasonable effectiveness of deep features as a perceptual metric. R Zhang, P Isola, A A Efros, E Shechtman, O Wang, CVPRZhang, R., Isola, P., Efros, A.A., Shechtman, E., Wang, O.: The unreasonable effectiveness of deep features as a perceptual metric. In: CVPR (2018)\n\nImage super-resolution using very deep residual channel attention networks. Y Zhang, K Li, K Li, L Wang, B Zhong, Y Fu, ECCVZhang, Y., Li, K., Li, K., Wang, L., Zhong, B., Fu, Y.: Image super-resolution using very deep residual channel attention networks. In: ECCV (2018)\n\nImage super-resolution by neural texture transfer. Z Zhang, Z Wang, Z Lin, H Qi, CVPRZhang, Z., Wang, Z., Lin, Z., Qi, H.: Image super-resolution by neural texture transfer. In: CVPR (2019)\n\nDeep cascaded bi-network for face hallucination. S Zhu, S Liu, C C Loy, X Tang, ECCVZhu, S., Liu, S., Loy, C.C., Tang, X.: Deep cascaded bi-network for face hallucination. In: ECCV (2016)\n", "annotations": {"author": "[{\"end\":396,\"start\":70}]", "publisher": null, "author_last_name": "[{\"end\":81,\"start\":79}]", "author_first_name": "[{\"end\":78,\"start\":70}]", "author_affiliation": "[{\"end\":140,\"start\":83},{\"end\":200,\"start\":142},{\"end\":278,\"start\":202},{\"end\":307,\"start\":280},{\"end\":332,\"start\":309},{\"end\":395,\"start\":334}]", "title": "[{\"end\":67,\"start\":1},{\"end\":463,\"start\":397}]", "venue": null, "abstract": "[{\"end\":2132,\"start\":565}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2426,\"start\":2423},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":2429,\"start\":2426},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":2432,\"start\":2429},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":2448,\"start\":2444},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":2451,\"start\":2448},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2472,\"start\":2468},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":2475,\"start\":2472},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3044,\"start\":3041},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3047,\"start\":3044},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":3050,\"start\":3047},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":3053,\"start\":3050},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3259,\"start\":3255},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3275,\"start\":3272},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4399,\"start\":4396},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4563,\"start\":4559},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":5466,\"start\":5462},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":5482,\"start\":5479},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7350,\"start\":7347},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":7353,\"start\":7350},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":7356,\"start\":7353},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":7359,\"start\":7356},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":7362,\"start\":7359},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":7378,\"start\":7374},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":7381,\"start\":7378},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":7384,\"start\":7381},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":7387,\"start\":7384},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":7404,\"start\":7400},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":7407,\"start\":7404},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":7410,\"start\":7407},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":7448,\"start\":7445},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":7451,\"start\":7448},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":7454,\"start\":7451},{\"end\":7591,\"start\":7563},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7631,\"start\":7627},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":7783,\"start\":7780},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":8056,\"start\":8052},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":8426,\"start\":8422},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":8548,\"start\":8544},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":8684,\"start\":8681},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":8829,\"start\":8825},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":8953,\"start\":8950},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":9905,\"start\":9901},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":10762,\"start\":10758},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":10783,\"start\":10780},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":12177,\"start\":12174},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":12180,\"start\":12177},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":12183,\"start\":12180},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":13806,\"start\":13802},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":13933,\"start\":13929},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":14287,\"start\":14284},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":14384,\"start\":14380},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":14410,\"start\":14406},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":14512,\"start\":14508},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":16446,\"start\":16442},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":16948,\"start\":16944},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":17004,\"start\":17000},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":17402,\"start\":17398},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":20215,\"start\":20211},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":20951,\"start\":20947},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":21094,\"start\":21090},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":21882,\"start\":21878},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":22001,\"start\":21997},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":22834,\"start\":22830},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":22919,\"start\":22915},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":22932,\"start\":22929},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":22986,\"start\":22982},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":23002,\"start\":22999},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":23072,\"start\":23068},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":23085,\"start\":23081},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":23117,\"start\":23113},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":23182,\"start\":23178},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":23201,\"start\":23198},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":23388,\"start\":23384},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":23404,\"start\":23400},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":23570,\"start\":23566},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":23689,\"start\":23685},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":23716,\"start\":23712},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":24243,\"start\":24239},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24342,\"start\":24339},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":24553,\"start\":24550},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":24644,\"start\":24640},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":24876,\"start\":24872},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":25039,\"start\":25036},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":25042,\"start\":25039},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25387,\"start\":25383},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":26478,\"start\":26474},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":26494,\"start\":26491},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":26897,\"start\":26893},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":26935,\"start\":26932},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":26971,\"start\":26967},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":27200,\"start\":27196},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":27219,\"start\":27216},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":27689,\"start\":27685},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":27705,\"start\":27702},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":28464,\"start\":28460},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":28480,\"start\":28477},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":28634,\"start\":28630},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":29967,\"start\":29963},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":30004,\"start\":30000},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":31132,\"start\":31129}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":33438,\"start\":33377},{\"attributes\":{\"id\":\"fig_1\"},\"end\":34042,\"start\":33439},{\"attributes\":{\"id\":\"fig_2\"},\"end\":34181,\"start\":34043},{\"attributes\":{\"id\":\"fig_3\"},\"end\":34320,\"start\":34182},{\"attributes\":{\"id\":\"fig_4\"},\"end\":34330,\"start\":34321},{\"attributes\":{\"id\":\"fig_5\"},\"end\":34493,\"start\":34331},{\"attributes\":{\"id\":\"fig_6\"},\"end\":34627,\"start\":34494},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":35824,\"start\":34628},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":36807,\"start\":35825},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":37117,\"start\":36808},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":37431,\"start\":37118}]", "paragraph": "[{\"end\":2591,\"start\":2148},{\"end\":3795,\"start\":2593},{\"end\":5642,\"start\":3797},{\"end\":6064,\"start\":5644},{\"end\":6117,\"start\":6066},{\"end\":7015,\"start\":6119},{\"end\":7176,\"start\":7032},{\"end\":9583,\"start\":7205},{\"end\":12089,\"start\":9621},{\"end\":13653,\"start\":12109},{\"end\":14879,\"start\":13703},{\"end\":15078,\"start\":14916},{\"end\":15262,\"start\":15111},{\"end\":15301,\"start\":15264},{\"end\":15488,\"start\":15331},{\"end\":17063,\"start\":15490},{\"end\":17697,\"start\":17065},{\"end\":18097,\"start\":17772},{\"end\":18374,\"start\":18099},{\"end\":19157,\"start\":18411},{\"end\":19659,\"start\":19159},{\"end\":19802,\"start\":19730},{\"end\":20193,\"start\":19804},{\"end\":20491,\"start\":20195},{\"end\":20757,\"start\":20523},{\"end\":20985,\"start\":20777},{\"end\":21141,\"start\":20987},{\"end\":21732,\"start\":21207},{\"end\":22153,\"start\":21734},{\"end\":22401,\"start\":22255},{\"end\":22673,\"start\":22467},{\"end\":24155,\"start\":22710},{\"end\":24645,\"start\":24176},{\"end\":24877,\"start\":24647},{\"end\":25777,\"start\":24914},{\"end\":27055,\"start\":25809},{\"end\":28069,\"start\":27057},{\"end\":29199,\"start\":28071},{\"end\":29275,\"start\":29209},{\"end\":32261,\"start\":29294},{\"end\":33376,\"start\":32276}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":14915,\"start\":14880},{\"attributes\":{\"id\":\"formula_1\"},\"end\":15330,\"start\":15302},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17771,\"start\":17698},{\"attributes\":{\"id\":\"formula_3\"},\"end\":18410,\"start\":18375},{\"attributes\":{\"id\":\"formula_4\"},\"end\":19729,\"start\":19660},{\"attributes\":{\"id\":\"formula_5\"},\"end\":20522,\"start\":20492},{\"attributes\":{\"id\":\"formula_6\"},\"end\":21206,\"start\":21142},{\"attributes\":{\"id\":\"formula_7\"},\"end\":22254,\"start\":22154},{\"attributes\":{\"id\":\"formula_8\"},\"end\":22466,\"start\":22402},{\"attributes\":{\"id\":\"formula_9\"},\"end\":22695,\"start\":22674},{\"attributes\":{\"id\":\"formula_10\"},\"end\":24913,\"start\":24878}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":25930,\"start\":25923},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":29890,\"start\":29883},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":31166,\"start\":31159}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2146,\"start\":2134},{\"attributes\":{\"n\":\"2\"},\"end\":7030,\"start\":7018},{\"attributes\":{\"n\":\"2.1\"},\"end\":7203,\"start\":7179},{\"attributes\":{\"n\":\"2.2\"},\"end\":9619,\"start\":9586},{\"attributes\":{\"n\":\"3\"},\"end\":12107,\"start\":12092},{\"attributes\":{\"n\":\"3.1\"},\"end\":13701,\"start\":13656},{\"attributes\":{\"n\":\"3.2\"},\"end\":15109,\"start\":15081},{\"attributes\":{\"n\":\"3.3\"},\"end\":20775,\"start\":20760},{\"attributes\":{\"n\":\"4\"},\"end\":22708,\"start\":22697},{\"attributes\":{\"n\":\"4.1\"},\"end\":24174,\"start\":24158},{\"attributes\":{\"n\":\"4.2\"},\"end\":25807,\"start\":25780},{\"end\":29207,\"start\":29202},{\"attributes\":{\"n\":\"4.3\"},\"end\":29292,\"start\":29278},{\"attributes\":{\"n\":\"5\"},\"end\":32274,\"start\":32264},{\"end\":33450,\"start\":33440},{\"end\":34054,\"start\":34044},{\"end\":34193,\"start\":34183},{\"end\":34323,\"start\":34322},{\"end\":34342,\"start\":34332},{\"end\":34515,\"start\":34495},{\"end\":35835,\"start\":35826},{\"end\":36818,\"start\":36809},{\"end\":37128,\"start\":37119}]", "table": "[{\"end\":35824,\"start\":34760},{\"end\":36807,\"start\":35979},{\"end\":37117,\"start\":37064},{\"end\":37431,\"start\":37378}]", "figure_caption": "[{\"end\":33438,\"start\":33379},{\"end\":34042,\"start\":33452},{\"end\":34181,\"start\":34056},{\"end\":34320,\"start\":34195},{\"end\":34330,\"start\":34324},{\"end\":34493,\"start\":34344},{\"end\":34627,\"start\":34518},{\"end\":34760,\"start\":34630},{\"end\":35979,\"start\":35837},{\"end\":37064,\"start\":36820},{\"end\":37378,\"start\":37130}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":12455,\"start\":12449},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":12488,\"start\":12478},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":12691,\"start\":12681},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":15726,\"start\":15714},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":27090,\"start\":27077},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":28067,\"start\":28054},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":28585,\"start\":28579},{\"end\":30406,\"start\":30400},{\"end\":31768,\"start\":31762}]", "bib_author_first_name": "[{\"end\":37735,\"start\":37734},{\"end\":37747,\"start\":37746},{\"end\":37926,\"start\":37925},{\"end\":37933,\"start\":37932},{\"end\":37940,\"start\":37939},{\"end\":37947,\"start\":37946},{\"end\":37956,\"start\":37955},{\"end\":38160,\"start\":38159},{\"end\":38167,\"start\":38166},{\"end\":38175,\"start\":38174},{\"end\":38182,\"start\":38181},{\"end\":38184,\"start\":38183},{\"end\":38194,\"start\":38193},{\"end\":38414,\"start\":38413},{\"end\":38422,\"start\":38421},{\"end\":38429,\"start\":38428},{\"end\":38436,\"start\":38435},{\"end\":38444,\"start\":38443},{\"end\":38618,\"start\":38617},{\"end\":38620,\"start\":38619},{\"end\":38631,\"start\":38630},{\"end\":38793,\"start\":38786},{\"end\":38806,\"start\":38799},{\"end\":38813,\"start\":38812},{\"end\":38821,\"start\":38814},{\"end\":39022,\"start\":39021},{\"end\":39031,\"start\":39030},{\"end\":39037,\"start\":39036},{\"end\":39238,\"start\":39237},{\"end\":39246,\"start\":39245},{\"end\":39254,\"start\":39253},{\"end\":39261,\"start\":39260},{\"end\":39467,\"start\":39466},{\"end\":39475,\"start\":39474},{\"end\":39477,\"start\":39476},{\"end\":39484,\"start\":39483},{\"end\":39490,\"start\":39489},{\"end\":39682,\"start\":39681},{\"end\":39693,\"start\":39692},{\"end\":39706,\"start\":39705},{\"end\":39717,\"start\":39716},{\"end\":39861,\"start\":39860},{\"end\":39875,\"start\":39874},{\"end\":39892,\"start\":39891},{\"end\":39901,\"start\":39900},{\"end\":39907,\"start\":39906},{\"end\":39923,\"start\":39922},{\"end\":39932,\"start\":39931},{\"end\":39945,\"start\":39944},{\"end\":40225,\"start\":40224},{\"end\":40232,\"start\":40231},{\"end\":40413,\"start\":40412},{\"end\":40420,\"start\":40419},{\"end\":40427,\"start\":40426},{\"end\":40436,\"start\":40435},{\"end\":40443,\"start\":40442},{\"end\":40580,\"start\":40579},{\"end\":40586,\"start\":40585},{\"end\":40598,\"start\":40597},{\"end\":40608,\"start\":40607},{\"end\":40793,\"start\":40792},{\"end\":40802,\"start\":40801},{\"end\":40808,\"start\":40807},{\"end\":40815,\"start\":40814},{\"end\":41026,\"start\":41025},{\"end\":41035,\"start\":41034},{\"end\":41234,\"start\":41233},{\"end\":41245,\"start\":41244},{\"end\":41254,\"start\":41253},{\"end\":41466,\"start\":41465},{\"end\":41476,\"start\":41475},{\"end\":41485,\"start\":41484},{\"end\":41693,\"start\":41692},{\"end\":41700,\"start\":41699},{\"end\":41712,\"start\":41711},{\"end\":41887,\"start\":41886},{\"end\":41889,\"start\":41888},{\"end\":42073,\"start\":42072},{\"end\":42075,\"start\":42074},{\"end\":42085,\"start\":42084},{\"end\":42300,\"start\":42299},{\"end\":42309,\"start\":42308},{\"end\":42319,\"start\":42318},{\"end\":42333,\"start\":42332},{\"end\":42344,\"start\":42343},{\"end\":42577,\"start\":42576},{\"end\":42586,\"start\":42585},{\"end\":42599,\"start\":42598},{\"end\":42605,\"start\":42604},{\"end\":42831,\"start\":42830},{\"end\":42840,\"start\":42839},{\"end\":42849,\"start\":42848},{\"end\":42859,\"start\":42858},{\"end\":42872,\"start\":42871},{\"end\":42886,\"start\":42885},{\"end\":42896,\"start\":42895},{\"end\":42906,\"start\":42905},{\"end\":42916,\"start\":42915},{\"end\":42924,\"start\":42923},{\"end\":43229,\"start\":43228},{\"end\":43238,\"start\":43237},{\"end\":43247,\"start\":43246},{\"end\":43257,\"start\":43256},{\"end\":43259,\"start\":43258},{\"end\":43454,\"start\":43453},{\"end\":43460,\"start\":43459},{\"end\":43467,\"start\":43466},{\"end\":43473,\"start\":43472},{\"end\":43480,\"start\":43479},{\"end\":43487,\"start\":43486},{\"end\":43665,\"start\":43664},{\"end\":43672,\"start\":43671},{\"end\":43679,\"start\":43678},{\"end\":43687,\"start\":43686},{\"end\":43857,\"start\":43856},{\"end\":43867,\"start\":43866},{\"end\":43878,\"start\":43877},{\"end\":43888,\"start\":43887},{\"end\":44106,\"start\":44105},{\"end\":44113,\"start\":44112},{\"end\":44125,\"start\":44124},{\"end\":44309,\"start\":44308},{\"end\":44322,\"start\":44321},{\"end\":44335,\"start\":44334},{\"end\":44347,\"start\":44346},{\"end\":44357,\"start\":44356},{\"end\":44368,\"start\":44367},{\"end\":44378,\"start\":44377},{\"end\":44389,\"start\":44388},{\"end\":44405,\"start\":44404},{\"end\":44414,\"start\":44413},{\"end\":44425,\"start\":44424},{\"end\":44439,\"start\":44438},{\"end\":44449,\"start\":44448},{\"end\":44463,\"start\":44462},{\"end\":44474,\"start\":44473},{\"end\":44484,\"start\":44483},{\"end\":44907,\"start\":44906},{\"end\":44922,\"start\":44921},{\"end\":44933,\"start\":44932},{\"end\":45124,\"start\":45123},{\"end\":45132,\"start\":45131},{\"end\":45141,\"start\":45140},{\"end\":45143,\"start\":45142},{\"end\":45291,\"start\":45290},{\"end\":45299,\"start\":45298},{\"end\":45301,\"start\":45300},{\"end\":45308,\"start\":45307},{\"end\":45314,\"start\":45313},{\"end\":45323,\"start\":45322},{\"end\":45325,\"start\":45324},{\"end\":45518,\"start\":45517},{\"end\":45520,\"start\":45519},{\"end\":45528,\"start\":45527},{\"end\":45530,\"start\":45529},{\"end\":45537,\"start\":45536},{\"end\":45539,\"start\":45538},{\"end\":45546,\"start\":45545},{\"end\":45553,\"start\":45552},{\"end\":45562,\"start\":45561},{\"end\":45836,\"start\":45835},{\"end\":45844,\"start\":45843},{\"end\":45850,\"start\":45849},{\"end\":45858,\"start\":45857},{\"end\":46087,\"start\":46086},{\"end\":46095,\"start\":46094},{\"end\":46101,\"start\":46100},{\"end\":46107,\"start\":46106},{\"end\":46113,\"start\":46112},{\"end\":46120,\"start\":46119},{\"end\":46128,\"start\":46127},{\"end\":46136,\"start\":46135},{\"end\":46366,\"start\":46365},{\"end\":46372,\"start\":46371},{\"end\":46379,\"start\":46378},{\"end\":46386,\"start\":46385},{\"end\":46395,\"start\":46394},{\"end\":46406,\"start\":46405},{\"end\":46408,\"start\":46407},{\"end\":46638,\"start\":46637},{\"end\":46646,\"start\":46645},{\"end\":46889,\"start\":46888},{\"end\":46895,\"start\":46894},{\"end\":46907,\"start\":46906},{\"end\":46917,\"start\":46916},{\"end\":46928,\"start\":46927},{\"end\":47158,\"start\":47157},{\"end\":47164,\"start\":47163},{\"end\":47176,\"start\":47175},{\"end\":47187,\"start\":47186},{\"end\":47414,\"start\":47413},{\"end\":47423,\"start\":47422},{\"end\":47430,\"start\":47429},{\"end\":47436,\"start\":47435},{\"end\":47656,\"start\":47655},{\"end\":47665,\"start\":47664},{\"end\":47672,\"start\":47671},{\"end\":47680,\"start\":47679},{\"end\":47688,\"start\":47687},{\"end\":47919,\"start\":47918},{\"end\":47928,\"start\":47927},{\"end\":47935,\"start\":47934},{\"end\":48131,\"start\":48130},{\"end\":48140,\"start\":48139},{\"end\":48147,\"start\":48146},{\"end\":48344,\"start\":48343},{\"end\":48353,\"start\":48352},{\"end\":48362,\"start\":48361},{\"end\":48364,\"start\":48363},{\"end\":48373,\"start\":48372},{\"end\":48386,\"start\":48385},{\"end\":48623,\"start\":48622},{\"end\":48632,\"start\":48631},{\"end\":48638,\"start\":48637},{\"end\":48644,\"start\":48643},{\"end\":48652,\"start\":48651},{\"end\":48661,\"start\":48660},{\"end\":48871,\"start\":48870},{\"end\":48880,\"start\":48879},{\"end\":48888,\"start\":48887},{\"end\":48895,\"start\":48894},{\"end\":49060,\"start\":49059},{\"end\":49067,\"start\":49066},{\"end\":49074,\"start\":49073},{\"end\":49076,\"start\":49075},{\"end\":49083,\"start\":49082}]", "bib_author_last_name": "[{\"end\":37744,\"start\":37736},{\"end\":37751,\"start\":37748},{\"end\":37930,\"start\":37927},{\"end\":37937,\"start\":37934},{\"end\":37944,\"start\":37941},{\"end\":37953,\"start\":37948},{\"end\":37959,\"start\":37957},{\"end\":38164,\"start\":38161},{\"end\":38172,\"start\":38168},{\"end\":38179,\"start\":38176},{\"end\":38191,\"start\":38185},{\"end\":38204,\"start\":38195},{\"end\":38419,\"start\":38415},{\"end\":38426,\"start\":38423},{\"end\":38433,\"start\":38430},{\"end\":38441,\"start\":38437},{\"end\":38449,\"start\":38445},{\"end\":38628,\"start\":38621},{\"end\":38641,\"start\":38632},{\"end\":38797,\"start\":38794},{\"end\":38810,\"start\":38807},{\"end\":39028,\"start\":39023},{\"end\":39034,\"start\":39032},{\"end\":39045,\"start\":39038},{\"end\":39243,\"start\":39239},{\"end\":39251,\"start\":39247},{\"end\":39258,\"start\":39255},{\"end\":39266,\"start\":39262},{\"end\":39472,\"start\":39468},{\"end\":39481,\"start\":39478},{\"end\":39487,\"start\":39485},{\"end\":39495,\"start\":39491},{\"end\":39690,\"start\":39683},{\"end\":39703,\"start\":39694},{\"end\":39714,\"start\":39707},{\"end\":39727,\"start\":39718},{\"end\":39872,\"start\":39862},{\"end\":39889,\"start\":39876},{\"end\":39898,\"start\":39893},{\"end\":39904,\"start\":39902},{\"end\":39920,\"start\":39908},{\"end\":39929,\"start\":39924},{\"end\":39942,\"start\":39933},{\"end\":39952,\"start\":39946},{\"end\":40229,\"start\":40226},{\"end\":40237,\"start\":40233},{\"end\":40417,\"start\":40414},{\"end\":40424,\"start\":40421},{\"end\":40433,\"start\":40428},{\"end\":40440,\"start\":40437},{\"end\":40449,\"start\":40444},{\"end\":40583,\"start\":40581},{\"end\":40595,\"start\":40587},{\"end\":40605,\"start\":40599},{\"end\":40617,\"start\":40609},{\"end\":40799,\"start\":40794},{\"end\":40805,\"start\":40803},{\"end\":40812,\"start\":40809},{\"end\":40819,\"start\":40816},{\"end\":41032,\"start\":41027},{\"end\":41044,\"start\":41036},{\"end\":41242,\"start\":41235},{\"end\":41251,\"start\":41246},{\"end\":41262,\"start\":41255},{\"end\":41473,\"start\":41467},{\"end\":41482,\"start\":41477},{\"end\":41490,\"start\":41486},{\"end\":41697,\"start\":41694},{\"end\":41709,\"start\":41701},{\"end\":41719,\"start\":41713},{\"end\":41894,\"start\":41890},{\"end\":42082,\"start\":42076},{\"end\":42088,\"start\":42086},{\"end\":42306,\"start\":42301},{\"end\":42316,\"start\":42310},{\"end\":42330,\"start\":42320},{\"end\":42341,\"start\":42334},{\"end\":42350,\"start\":42345},{\"end\":42583,\"start\":42578},{\"end\":42596,\"start\":42587},{\"end\":42602,\"start\":42600},{\"end\":42610,\"start\":42606},{\"end\":42837,\"start\":42832},{\"end\":42846,\"start\":42841},{\"end\":42856,\"start\":42850},{\"end\":42869,\"start\":42860},{\"end\":42883,\"start\":42873},{\"end\":42893,\"start\":42887},{\"end\":42903,\"start\":42897},{\"end\":42913,\"start\":42907},{\"end\":42921,\"start\":42917},{\"end\":42929,\"start\":42925},{\"end\":43235,\"start\":43230},{\"end\":43244,\"start\":43239},{\"end\":43254,\"start\":43248},{\"end\":43267,\"start\":43260},{\"end\":43457,\"start\":43455},{\"end\":43464,\"start\":43461},{\"end\":43470,\"start\":43468},{\"end\":43477,\"start\":43474},{\"end\":43484,\"start\":43481},{\"end\":43492,\"start\":43488},{\"end\":43669,\"start\":43666},{\"end\":43676,\"start\":43673},{\"end\":43684,\"start\":43680},{\"end\":43692,\"start\":43688},{\"end\":43864,\"start\":43858},{\"end\":43875,\"start\":43868},{\"end\":43885,\"start\":43879},{\"end\":43896,\"start\":43889},{\"end\":44110,\"start\":44107},{\"end\":44122,\"start\":44114},{\"end\":44132,\"start\":44126},{\"end\":44319,\"start\":44310},{\"end\":44332,\"start\":44323},{\"end\":44344,\"start\":44336},{\"end\":44354,\"start\":44348},{\"end\":44365,\"start\":44358},{\"end\":44375,\"start\":44369},{\"end\":44386,\"start\":44379},{\"end\":44402,\"start\":44390},{\"end\":44411,\"start\":44406},{\"end\":44422,\"start\":44415},{\"end\":44436,\"start\":44426},{\"end\":44446,\"start\":44440},{\"end\":44460,\"start\":44450},{\"end\":44471,\"start\":44464},{\"end\":44481,\"start\":44475},{\"end\":44494,\"start\":44485},{\"end\":44919,\"start\":44908},{\"end\":44930,\"start\":44923},{\"end\":44938,\"start\":44934},{\"end\":45129,\"start\":45125},{\"end\":45138,\"start\":45133},{\"end\":45148,\"start\":45144},{\"end\":45296,\"start\":45292},{\"end\":45305,\"start\":45302},{\"end\":45311,\"start\":45309},{\"end\":45320,\"start\":45315},{\"end\":45330,\"start\":45326},{\"end\":45525,\"start\":45521},{\"end\":45534,\"start\":45531},{\"end\":45543,\"start\":45540},{\"end\":45550,\"start\":45547},{\"end\":45559,\"start\":45554},{\"end\":45572,\"start\":45563},{\"end\":45841,\"start\":45837},{\"end\":45847,\"start\":45845},{\"end\":45855,\"start\":45851},{\"end\":45862,\"start\":45859},{\"end\":46092,\"start\":46088},{\"end\":46098,\"start\":46096},{\"end\":46104,\"start\":46102},{\"end\":46110,\"start\":46108},{\"end\":46117,\"start\":46114},{\"end\":46125,\"start\":46121},{\"end\":46133,\"start\":46129},{\"end\":46140,\"start\":46137},{\"end\":46369,\"start\":46367},{\"end\":46376,\"start\":46373},{\"end\":46383,\"start\":46380},{\"end\":46392,\"start\":46387},{\"end\":46403,\"start\":46396},{\"end\":46413,\"start\":46409},{\"end\":46643,\"start\":46639},{\"end\":46650,\"start\":46647},{\"end\":46892,\"start\":46890},{\"end\":46904,\"start\":46896},{\"end\":46914,\"start\":46908},{\"end\":46925,\"start\":46918},{\"end\":46936,\"start\":46929},{\"end\":47161,\"start\":47159},{\"end\":47173,\"start\":47165},{\"end\":47184,\"start\":47177},{\"end\":47195,\"start\":47188},{\"end\":47420,\"start\":47415},{\"end\":47427,\"start\":47424},{\"end\":47433,\"start\":47431},{\"end\":47444,\"start\":47437},{\"end\":47662,\"start\":47657},{\"end\":47669,\"start\":47666},{\"end\":47677,\"start\":47673},{\"end\":47685,\"start\":47681},{\"end\":47694,\"start\":47689},{\"end\":47925,\"start\":47920},{\"end\":47932,\"start\":47929},{\"end\":47941,\"start\":47936},{\"end\":48137,\"start\":48132},{\"end\":48144,\"start\":48141},{\"end\":48153,\"start\":48148},{\"end\":48350,\"start\":48345},{\"end\":48359,\"start\":48354},{\"end\":48370,\"start\":48365},{\"end\":48383,\"start\":48374},{\"end\":48391,\"start\":48387},{\"end\":48629,\"start\":48624},{\"end\":48635,\"start\":48633},{\"end\":48641,\"start\":48639},{\"end\":48649,\"start\":48645},{\"end\":48658,\"start\":48653},{\"end\":48664,\"start\":48662},{\"end\":48877,\"start\":48872},{\"end\":48885,\"start\":48881},{\"end\":48892,\"start\":48889},{\"end\":48898,\"start\":48896},{\"end\":49064,\"start\":49061},{\"end\":49071,\"start\":49068},{\"end\":49080,\"start\":49077},{\"end\":49088,\"start\":49084}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":8878176},\"end\":37855,\"start\":37670},{\"attributes\":{\"id\":\"b1\"},\"end\":38094,\"start\":37857},{\"attributes\":{\"id\":\"b2\"},\"end\":38341,\"start\":38096},{\"attributes\":{\"id\":\"b3\"},\"end\":38593,\"start\":38343},{\"attributes\":{\"id\":\"b4\"},\"end\":38716,\"start\":38595},{\"attributes\":{\"id\":\"b5\"},\"end\":38949,\"start\":38718},{\"attributes\":{\"id\":\"b6\"},\"end\":39170,\"start\":38951},{\"attributes\":{\"id\":\"b7\"},\"end\":39398,\"start\":39172},{\"attributes\":{\"id\":\"b8\"},\"end\":39621,\"start\":39400},{\"attributes\":{\"id\":\"b9\"},\"end\":39858,\"start\":39623},{\"attributes\":{\"id\":\"b10\"},\"end\":40147,\"start\":39860},{\"attributes\":{\"id\":\"b11\"},\"end\":40352,\"start\":40149},{\"attributes\":{\"id\":\"b12\"},\"end\":40577,\"start\":40354},{\"attributes\":{\"id\":\"b13\"},\"end\":40716,\"start\":40579},{\"attributes\":{\"id\":\"b14\"},\"end\":40947,\"start\":40718},{\"attributes\":{\"id\":\"b15\"},\"end\":41162,\"start\":40949},{\"attributes\":{\"id\":\"b16\"},\"end\":41389,\"start\":41164},{\"attributes\":{\"id\":\"b17\"},\"end\":41618,\"start\":41391},{\"attributes\":{\"id\":\"b18\"},\"end\":41847,\"start\":41620},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":6155330},\"end\":42026,\"start\":41849},{\"attributes\":{\"doi\":\"arXiv:1412.6980\",\"id\":\"b20\"},\"end\":42222,\"start\":42028},{\"attributes\":{\"id\":\"b21\"},\"end\":42509,\"start\":42224},{\"attributes\":{\"id\":\"b22\"},\"end\":42742,\"start\":42511},{\"attributes\":{\"id\":\"b23\"},\"end\":43165,\"start\":42744},{\"attributes\":{\"id\":\"b24\"},\"end\":43398,\"start\":43167},{\"attributes\":{\"id\":\"b25\"},\"end\":43619,\"start\":43400},{\"attributes\":{\"id\":\"b26\"},\"end\":43794,\"start\":43621},{\"attributes\":{\"id\":\"b27\"},\"end\":44027,\"start\":43796},{\"attributes\":{\"id\":\"b28\"},\"end\":44264,\"start\":44029},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":10659969},\"end\":44839,\"start\":44266},{\"attributes\":{\"id\":\"b30\"},\"end\":45068,\"start\":44841},{\"attributes\":{\"id\":\"b31\"},\"end\":45257,\"start\":45070},{\"attributes\":{\"id\":\"b32\"},\"end\":45434,\"start\":45259},{\"attributes\":{\"id\":\"b33\"},\"end\":45743,\"start\":45436},{\"attributes\":{\"id\":\"b34\"},\"end\":46017,\"start\":45745},{\"attributes\":{\"id\":\"b35\"},\"end\":46309,\"start\":46019},{\"attributes\":{\"id\":\"b36\"},\"end\":46548,\"start\":46311},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":29803791},\"end\":46827,\"start\":46550},{\"attributes\":{\"id\":\"b38\"},\"end\":47076,\"start\":46829},{\"attributes\":{\"id\":\"b39\"},\"end\":47343,\"start\":47078},{\"attributes\":{\"id\":\"b40\"},\"end\":47574,\"start\":47345},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":996788},\"end\":47841,\"start\":47576},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":10514149},\"end\":48064,\"start\":47843},{\"attributes\":{\"id\":\"b43\"},\"end\":48269,\"start\":48066},{\"attributes\":{\"id\":\"b44\"},\"end\":48544,\"start\":48271},{\"attributes\":{\"id\":\"b45\"},\"end\":48817,\"start\":48546},{\"attributes\":{\"id\":\"b46\"},\"end\":49008,\"start\":48819},{\"attributes\":{\"id\":\"b47\"},\"end\":49197,\"start\":49010}]", "bib_title": "[{\"end\":37732,\"start\":37670},{\"end\":41884,\"start\":41849},{\"end\":44306,\"start\":44266},{\"end\":46635,\"start\":46550},{\"end\":47653,\"start\":47576},{\"end\":47916,\"start\":47843}]", "bib_author": "[{\"end\":37746,\"start\":37734},{\"end\":37753,\"start\":37746},{\"end\":37932,\"start\":37925},{\"end\":37939,\"start\":37932},{\"end\":37946,\"start\":37939},{\"end\":37955,\"start\":37946},{\"end\":37961,\"start\":37955},{\"end\":38166,\"start\":38159},{\"end\":38174,\"start\":38166},{\"end\":38181,\"start\":38174},{\"end\":38193,\"start\":38181},{\"end\":38206,\"start\":38193},{\"end\":38421,\"start\":38413},{\"end\":38428,\"start\":38421},{\"end\":38435,\"start\":38428},{\"end\":38443,\"start\":38435},{\"end\":38451,\"start\":38443},{\"end\":38630,\"start\":38617},{\"end\":38643,\"start\":38630},{\"end\":38799,\"start\":38786},{\"end\":38812,\"start\":38799},{\"end\":38824,\"start\":38812},{\"end\":39030,\"start\":39021},{\"end\":39036,\"start\":39030},{\"end\":39047,\"start\":39036},{\"end\":39245,\"start\":39237},{\"end\":39253,\"start\":39245},{\"end\":39260,\"start\":39253},{\"end\":39268,\"start\":39260},{\"end\":39474,\"start\":39466},{\"end\":39483,\"start\":39474},{\"end\":39489,\"start\":39483},{\"end\":39497,\"start\":39489},{\"end\":39692,\"start\":39681},{\"end\":39705,\"start\":39692},{\"end\":39716,\"start\":39705},{\"end\":39729,\"start\":39716},{\"end\":39874,\"start\":39860},{\"end\":39891,\"start\":39874},{\"end\":39900,\"start\":39891},{\"end\":39906,\"start\":39900},{\"end\":39922,\"start\":39906},{\"end\":39931,\"start\":39922},{\"end\":39944,\"start\":39931},{\"end\":39954,\"start\":39944},{\"end\":40231,\"start\":40224},{\"end\":40239,\"start\":40231},{\"end\":40419,\"start\":40412},{\"end\":40426,\"start\":40419},{\"end\":40435,\"start\":40426},{\"end\":40442,\"start\":40435},{\"end\":40451,\"start\":40442},{\"end\":40585,\"start\":40579},{\"end\":40597,\"start\":40585},{\"end\":40607,\"start\":40597},{\"end\":40619,\"start\":40607},{\"end\":40801,\"start\":40792},{\"end\":40807,\"start\":40801},{\"end\":40814,\"start\":40807},{\"end\":40821,\"start\":40814},{\"end\":41034,\"start\":41025},{\"end\":41046,\"start\":41034},{\"end\":41244,\"start\":41233},{\"end\":41253,\"start\":41244},{\"end\":41264,\"start\":41253},{\"end\":41475,\"start\":41465},{\"end\":41484,\"start\":41475},{\"end\":41492,\"start\":41484},{\"end\":41699,\"start\":41692},{\"end\":41711,\"start\":41699},{\"end\":41721,\"start\":41711},{\"end\":41896,\"start\":41886},{\"end\":42084,\"start\":42072},{\"end\":42090,\"start\":42084},{\"end\":42308,\"start\":42299},{\"end\":42318,\"start\":42308},{\"end\":42332,\"start\":42318},{\"end\":42343,\"start\":42332},{\"end\":42352,\"start\":42343},{\"end\":42585,\"start\":42576},{\"end\":42598,\"start\":42585},{\"end\":42604,\"start\":42598},{\"end\":42612,\"start\":42604},{\"end\":42839,\"start\":42830},{\"end\":42848,\"start\":42839},{\"end\":42858,\"start\":42848},{\"end\":42871,\"start\":42858},{\"end\":42885,\"start\":42871},{\"end\":42895,\"start\":42885},{\"end\":42905,\"start\":42895},{\"end\":42915,\"start\":42905},{\"end\":42923,\"start\":42915},{\"end\":42931,\"start\":42923},{\"end\":43237,\"start\":43228},{\"end\":43246,\"start\":43237},{\"end\":43256,\"start\":43246},{\"end\":43269,\"start\":43256},{\"end\":43459,\"start\":43453},{\"end\":43466,\"start\":43459},{\"end\":43472,\"start\":43466},{\"end\":43479,\"start\":43472},{\"end\":43486,\"start\":43479},{\"end\":43494,\"start\":43486},{\"end\":43671,\"start\":43664},{\"end\":43678,\"start\":43671},{\"end\":43686,\"start\":43678},{\"end\":43694,\"start\":43686},{\"end\":43866,\"start\":43856},{\"end\":43877,\"start\":43866},{\"end\":43887,\"start\":43877},{\"end\":43898,\"start\":43887},{\"end\":44112,\"start\":44105},{\"end\":44124,\"start\":44112},{\"end\":44134,\"start\":44124},{\"end\":44321,\"start\":44308},{\"end\":44334,\"start\":44321},{\"end\":44346,\"start\":44334},{\"end\":44356,\"start\":44346},{\"end\":44367,\"start\":44356},{\"end\":44377,\"start\":44367},{\"end\":44388,\"start\":44377},{\"end\":44404,\"start\":44388},{\"end\":44413,\"start\":44404},{\"end\":44424,\"start\":44413},{\"end\":44438,\"start\":44424},{\"end\":44448,\"start\":44438},{\"end\":44462,\"start\":44448},{\"end\":44473,\"start\":44462},{\"end\":44483,\"start\":44473},{\"end\":44496,\"start\":44483},{\"end\":44921,\"start\":44906},{\"end\":44932,\"start\":44921},{\"end\":44940,\"start\":44932},{\"end\":45131,\"start\":45123},{\"end\":45140,\"start\":45131},{\"end\":45150,\"start\":45140},{\"end\":45298,\"start\":45290},{\"end\":45307,\"start\":45298},{\"end\":45313,\"start\":45307},{\"end\":45322,\"start\":45313},{\"end\":45332,\"start\":45322},{\"end\":45527,\"start\":45517},{\"end\":45536,\"start\":45527},{\"end\":45545,\"start\":45536},{\"end\":45552,\"start\":45545},{\"end\":45561,\"start\":45552},{\"end\":45574,\"start\":45561},{\"end\":45843,\"start\":45835},{\"end\":45849,\"start\":45843},{\"end\":45857,\"start\":45849},{\"end\":45864,\"start\":45857},{\"end\":46094,\"start\":46086},{\"end\":46100,\"start\":46094},{\"end\":46106,\"start\":46100},{\"end\":46112,\"start\":46106},{\"end\":46119,\"start\":46112},{\"end\":46127,\"start\":46119},{\"end\":46135,\"start\":46127},{\"end\":46142,\"start\":46135},{\"end\":46371,\"start\":46365},{\"end\":46378,\"start\":46371},{\"end\":46385,\"start\":46378},{\"end\":46394,\"start\":46385},{\"end\":46405,\"start\":46394},{\"end\":46415,\"start\":46405},{\"end\":46645,\"start\":46637},{\"end\":46652,\"start\":46645},{\"end\":46894,\"start\":46888},{\"end\":46906,\"start\":46894},{\"end\":46916,\"start\":46906},{\"end\":46927,\"start\":46916},{\"end\":46938,\"start\":46927},{\"end\":47163,\"start\":47157},{\"end\":47175,\"start\":47163},{\"end\":47186,\"start\":47175},{\"end\":47197,\"start\":47186},{\"end\":47422,\"start\":47413},{\"end\":47429,\"start\":47422},{\"end\":47435,\"start\":47429},{\"end\":47446,\"start\":47435},{\"end\":47664,\"start\":47655},{\"end\":47671,\"start\":47664},{\"end\":47679,\"start\":47671},{\"end\":47687,\"start\":47679},{\"end\":47696,\"start\":47687},{\"end\":47927,\"start\":47918},{\"end\":47934,\"start\":47927},{\"end\":47943,\"start\":47934},{\"end\":48139,\"start\":48130},{\"end\":48146,\"start\":48139},{\"end\":48155,\"start\":48146},{\"end\":48352,\"start\":48343},{\"end\":48361,\"start\":48352},{\"end\":48372,\"start\":48361},{\"end\":48385,\"start\":48372},{\"end\":48393,\"start\":48385},{\"end\":48631,\"start\":48622},{\"end\":48637,\"start\":48631},{\"end\":48643,\"start\":48637},{\"end\":48651,\"start\":48643},{\"end\":48660,\"start\":48651},{\"end\":48666,\"start\":48660},{\"end\":48879,\"start\":48870},{\"end\":48887,\"start\":48879},{\"end\":48894,\"start\":48887},{\"end\":48900,\"start\":48894},{\"end\":49066,\"start\":49059},{\"end\":49073,\"start\":49066},{\"end\":49082,\"start\":49073},{\"end\":49090,\"start\":49082}]", "bib_venue": "[{\"end\":37756,\"start\":37753},{\"end\":37923,\"start\":37857},{\"end\":38157,\"start\":38096},{\"end\":38411,\"start\":38343},{\"end\":38615,\"start\":38595},{\"end\":38784,\"start\":38718},{\"end\":39019,\"start\":38951},{\"end\":39235,\"start\":39172},{\"end\":39464,\"start\":39400},{\"end\":39679,\"start\":39623},{\"end\":39981,\"start\":39954},{\"end\":40222,\"start\":40149},{\"end\":40410,\"start\":40354},{\"end\":40639,\"start\":40619},{\"end\":40790,\"start\":40718},{\"end\":41023,\"start\":40949},{\"end\":41231,\"start\":41164},{\"end\":41463,\"start\":41391},{\"end\":41690,\"start\":41620},{\"end\":41932,\"start\":41896},{\"end\":42070,\"start\":42028},{\"end\":42297,\"start\":42224},{\"end\":42574,\"start\":42511},{\"end\":42828,\"start\":42744},{\"end\":43226,\"start\":43167},{\"end\":43451,\"start\":43400},{\"end\":43662,\"start\":43621},{\"end\":43854,\"start\":43796},{\"end\":44103,\"start\":44029},{\"end\":44532,\"start\":44496},{\"end\":44904,\"start\":44841},{\"end\":45121,\"start\":45070},{\"end\":45288,\"start\":45259},{\"end\":45515,\"start\":45436},{\"end\":45833,\"start\":45745},{\"end\":46084,\"start\":46019},{\"end\":46363,\"start\":46311},{\"end\":46682,\"start\":46652},{\"end\":46886,\"start\":46829},{\"end\":47155,\"start\":47078},{\"end\":47411,\"start\":47345},{\"end\":47699,\"start\":47696},{\"end\":47946,\"start\":47943},{\"end\":48128,\"start\":48066},{\"end\":48341,\"start\":48271},{\"end\":48620,\"start\":48546},{\"end\":48868,\"start\":48819},{\"end\":49057,\"start\":49010}]"}}}, "year": 2023, "month": 12, "day": 17}