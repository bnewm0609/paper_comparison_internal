{"id": 5970112, "updated": "2023-04-05 09:17:48.807", "metadata": {"title": "A Tutorial on Graph-Based SLAM", "authors": "[{\"first\":\"G\",\"last\":\"Grisetti\",\"middle\":[]},{\"first\":\"R\",\"last\":\"Ku\u0308mmerle\",\"middle\":[]},{\"first\":\"C\",\"last\":\"Stachniss\",\"middle\":[]},{\"first\":\"W\",\"last\":\"Burgard\",\"middle\":[]}]", "venue": "IEEE Intelligent Transportation Systems Magazine", "journal": "IEEE Intelligent Transportation Systems Magazine", "publication_date": {"year": 2010, "month": null, "day": null}, "abstract": "Being able to build a map of the environment and to simultaneously localize within this map is an essential skill for mobile robots navigating in unknown environments in absence of external referencing systems such as GPS. This so-called simultaneous localization and mapping (SLAM) problem has been one of the most popular research topics in mobile robotics for the last two decades and efficient approaches for solving this task have been proposed. One intuitive way of formulating SLAM is to use a graph whose nodes correspond to the poses of the robot at different points in time and whose edges represent constraints between the poses. The latter are obtained from observations of the environment or from movement actions carried out by the robot. Once such a graph is constructed, the map can be computed by finding the spatial configuration of the nodes that is mostly consistent with the measurements modeled by the edges. In this paper, we provide an introductory description to the graph-based SLAM problem. Furthermore, we discuss a state-of-the-art solution that is based on least-squares error minimization and exploits the structure of the SLAM problems during optimization. The goal of this tutorial is to enable the reader to implement the proposed methods from scratch.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2080823437", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "journals/itsm/GrisettiKSB10", "doi": "10.1109/mits.2010.939925"}}, "content": {"source": {"pdf_hash": "96e8a7db6e52742dd7cfdf1c85e146fa069078fa", "pdf_src": "ScienceParsePlus", "pdf_uri": null, "oa_url_match": false, "oa_info": {"license": null, "open_access_url": "http://ais.informatik.uni-freiburg.de/teaching/ws10/praktikum/slamtutorial.pdf", "status": "GREEN"}}, "grobid": {"id": "d4a8504175256e4d026cb4f327533f66d48d99d3", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/96e8a7db6e52742dd7cfdf1c85e146fa069078fa.txt", "contents": "\nA Tutorial on Graph-Based SLAM\n\n\nGiorgio Grisetti \nDepartment of Computer Science\nUniversity of Freiburg\n79110FreiburgGermany\n\nRainer K\u00fcmmerle \nDepartment of Computer Science\nUniversity of Freiburg\n79110FreiburgGermany\n\nCyrill Stachniss \nDepartment of Computer Science\nUniversity of Freiburg\n79110FreiburgGermany\n\nWolfram Burgard \nDepartment of Computer Science\nUniversity of Freiburg\n79110FreiburgGermany\n\nA Tutorial on Graph-Based SLAM\n1\nBeing able to build a map of the environment and to simultaneously localize within this map is an essential skill for mobile robots navigating in unknown environments in absence of external referencing systems such as GPS. This so-called simultaneous localization and mapping (SLAM) problem has been one of the most popular research topics in mobile robotics for the last two decades and efficient approaches for solving this task have been proposed. One intuitive way of formulating SLAM is to use a graph whose nodes correspond to the poses of the robot at different points in time and whose edges represent constraints between the poses. The latter are obtained from observations of the environment or from movement actions carried out by the robot. Once such a graph is constructed, the map can be computed by finding the spatial configuration of the nodes that is mostly consistent with the measurements modeled by the edges. In this paper, we provide an introductory description to the graph-based SLAM problem. Furthermore, we discuss a state-of-the-art solution that is based on least-squares error minimization and exploits the structure of the SLAM problems during optimization. The goal of this tutorial is to enable the reader to implement the proposed methods from scratch.\n\nI. INTRODUCTION\n\nTo efficiently solve many tasks envisioned to be carried out by mobile robots including transportation, search and rescue, or automated vacuum cleaning robots need a map of the environment. The availability of an accurate map allows for the design of systems that can operate in complex environments only based on their on-board sensors and without relying on external reference system like, e.g., GPS. The acquisition of maps of indoor environments, where typically no GPS is available, has been a major research focus in the robotics community over the last decades. Learning maps under pose uncertainty is often referred to as the simultaneous localization and mapping (SLAM) problem. In the literature, a large variety of solutions to this problem is available. These approaches can be classified either as filtering or smoothing. Filtering approaches model the problem as an on-line state estimation where the state of the system consists in the current robot position and the map. The estimate is augmented and refined by incorporating the new measurements as they become available. Popular techniques like Kalman and information filters [28], [3], particle filters [22], [12], [9], or information filters [7], [31] fall into this category. To highlight their incremental nature, the filtering approaches are usually referred to as on-line SLAM methods. Conversely, smoothing approaches estimate the full trajectory of the robot from the full set of measurements [21], [5], [27]. These approaches address the so-called full SLAM problem, and they typically rely on leastsquare error minimization techniques. Figure 1 shows three examples of real robotic systems that use SLAM technology: an autonomous car, a tour-guide robot, and an industrial mobile manipulation robot. Image (a) shows the autonomous car Junior as well as a model of a parking garage that has been mapped with that car. Thanks to the acquired model, the car is able to park itself autonomously at user selected locations in the garage. Image (b) shows the TPR-Robina robot developed by Toyota which is also used in the context of guided tours in museums. This robot uses SLAM technology to update its map whenever the environment has been changed. Robot manufacturers such as KUKA, recently presented mobile manipulators as shown in Image (c). Here, SLAM technology is needed to operate such devices in flexible way in changing industrial environments. Figure 2 illustrates 2D and 3D maps that can be estimated by the SLAM algorithm discussed in this paper.\n\nAn intuitive way to address the SLAM problem is via its so-called graph-based formulation. Solving a graph-based SLAM problem involves to construct a graph whose nodes represent robot poses or landmarks and in which an edge between two nodes encodes a sensor measurement that constrains the connected poses. Obviously, such constraints can be contradictory since observations are always affected by noise. Once such a graph is constructed, the crucial problem is to find a configuration of the nodes that is maximally consistent with the measurements. This involves solving a large error minimization problem.\n\nThe graph-based formulation of the SLAM problem has been proposed by Lu and Milios in 1997 [21]. However, it took several years to make this formulation popular due to the comparably high complexity of solving the error minimization problem using standard techniques. Recent insights into the structure of the SLAM problem and advancements in the fields of sparse linear algebra resulted in efficient approaches to the optimization problem at hand. Consequently, graph-based SLAM methods have undergone a renaissance and currently belong to the state-of-the-art techniques with respect to speed and accuracy. The aim of this tutorial is to introduce the SLAM problem in its probabilistic form and to guide the reader to the synthesis of an effective and state-of-the-art graph-based SLAM method. To understand this tutorial a good knowledge of linear algebra, multivariate minimization, and probability theory are required.\n\n\nII. PROBABILISTIC FORMULATION OF SLAM\n\nSolving the SLAM problem consists of estimating the robot trajectory and the map of the environment as the robot moves in it. Due to the inherent noise in the sensor measurements, a SLAM problem is usually described by means of probabilistic tools. The robot is assumed to move in an unknown environment, along a trajectory described by the sequence of random \np(x 1:T , m | z 1:T , u 1:T , x 0 ).(1)\nThe initial position x 0 defines the position of the map and can be chosen arbitrarily. For convenience of notation, in the remainder of this document we will omit x 0 . The poses x 1:T and the odometry u 1:T are usually represented as 2D or 3D transformations in SE(2) or in SE (3), while the map can be represented in different ways. Maps can be parametrized as a set of spatially located landmarks, by dense representations like occupancy grids, surface maps, or by raw sensor measurements. The choice of a particular map representation depends on the sensors used, on the characteristics of the environment, and on the estimation algorithm. Landmark maps [28], [22] are often preferred in environments where locally distinguishable features can be identified and especially when cameras are used. In contrast, dense representations [33], [12], [9] are usually used in conjunction with range sensors. Independently of the type of the representation, the map is defined by the measurements and the locations where these measurements have been acquired [17], [18]. Figure 2 illustrates three typical dense map representations for 3D and 2D: multilevel surface maps, point clouds and occupancy grids. Figure 3 shows a typical 2D landmark based map. Estimating the posterior given in (1) involves operating in high dimensional state spaces. This would not be tractable if the SLAM problem would not have a well defined structure. This structure arises from certain and commonly done assumptions, namely the static world assumption and the Markov assumption. A convenient way to describe this structure is via the dynamic Bayesian network (DBN) depicted in Figure 4. A Bayesian network is a graphical model that describes a stochastic process as a directed graph. The graph has one node for each random variable in the process, and a directed edge (or  arrow) between two nodes models a conditional dependence between them.\n\nIn Figure 4, one can distinguish blue/gray nodes indicating the observed variables (here z 1:T and u 1:T ) and white nodes which are the hidden variables. The hidden variables \n(x t | x t\u22121 , u t ) is\nrepresented by the two edges leading to x t and represents the probability that the robot at time t is in x t given that at time t \u2212 1 it was in x t and it acquired an odometry measurement u t .\n\nThe observation model p(z t | x t , m t ) models the probability of performing the observation z t given that the robot is at location x t in the map. It is represented by the arrows entering in z t . The exteroceptive observation z t depends only on the current location x t of the robot and on the (static) map m. Expressing SLAM as a DBN highlights its temporal structure, and therefore this formalism is well suited to describe filtering processes that can be used to tackle the SLAM problem.\n\nAn alternative representation to the DBN is via the so-called \"graph-based\" or \"network-based\" formulation of the SLAM problem, that highlights the underlying spatial structure. In graph-based SLAM, the poses of the robot are modeled by nodes in a graph and labeled with their position in the environment [21], [18]. Spatial constraints between poses that result from observations z t or from odometry measurements u t are encoded in the edges between the nodes. More in detail, a graph-based SLAM algorithm constructs a graph out of the raw sensor measurements. Each node in the graph represents a robot position and a measurement acquired at that position. An edge between two nodes represents a spatial constraint relating the two robot poses. A constraint consists in a probability distribution over the relative transformations between the two poses. These transformations are either odometry measurements between sequential robot positions or are determined by aligning the observations acquired at the two robot locations. Once the graph is constructed one seeks to find the configuration of the robot poses that best satisfies the constraints. Thus, in graph-based SLAM the problem is decoupled in two tasks: constructing the graph from the raw measurements (graph construction), determining the most likely configuration of the poses given the edges of the graph (graph optimization). The graph construction is usually called front-end and it is heavily sensor dependent, while the second part is called back-end and relies on an abstract representation of the data which is sensor agnostic. A short example of a front-end for 2D laser SLAM is described in Section V-A. In this tutorial we will describe an easy-to-implement but efficient back-end for graph-based SLAM. Figure 5 depicts an uncorrected pose-graph and the corresponding corrected one.\n\n\nIII. RELATED WORK\n\nThere is a large variety of SLAM approaches available in the robotics community. Throughout this tutorial we focus on graph-based approaches and therefore will consider such approaches in the discussion of related work. Lu and Milios [21] were the first to refine a map by globally optimizing the system of equations to reduce the error introduced by constraints. Gutmann and Konolige [11] proposed an effective way for constructing such a network and for detecting loop closures while running an incremental estimation algorithm. Since then, many approaches for minimizing the error in the constraint network have been proposed. For example, Howard et al. [15] apply relaxation to localize the robot and build a map. Frese et al. [8] propose a variant of Gauss-Seidel relaxation called multi-level relaxation (MLR). It applies relaxation at different resolutions. Dellaert and Kaess [5] were the first to exploit sparse matrix factorizations to solve the linearized problem in off-line SLAM. Subsequently Kaess et al. [16] presented iSAM, an on-line version that exploits partial reorderings to compute the sparse factorization.\n\nRecently, Konolige et al. [19] proposed an open-source implementation of a pose-graph method that constructs the linearized system in an efficient way. Olson et al. [27] presented an efficient optimization approach which is based on the stochastic gradient descent and can efficiently correct even large pose-graphs. Grisetti et al. proposed an extension of Olson's approach that uses a tree parametrization of the nodes in 2D and 3D. In this way, they increase the convergence speed [10].\n\nGraphSLAM [32] applies variable elimination techniques to reduce the dimensionality of the optimization problem. The ATLAS framework [2] constructs a two-level hierarchy of graphs and employs a Kalman filter to construct the bottom level. Then, a global optimization approach aligns the local maps at the second level. Similar to ATLAS, Estrada et al.\n\nproposed Hierarchical SLAM [6] as a technique for using independent local maps.\n\nMost optimization techniques focus on computing the best map given the constraints and are called SLAM back-ends. In contrast to that, SLAM front-ends seek to interpret the sensor data to obtain the constraints that are the basis for the optimization approaches. Olson [25], for example, presented a front-end with outlier rejection based on spectral clustering. For making data associations in the SLAM frontends statistical tests such as the \u03c7 2 test or joint compatibility test [23] are often applied. The work of N\u00fcchter et al. [24] aims at building an integrated SLAM system for 3D mapping. The main focus lies on the SLAM front-end for finding constraints. For optimization, a variant of the approach of Lu and Milios [21] for 3D settings is applied. The methods proposed in this paper can be effectively applied to all these front-ends.\n\n\nIV. GRAPH-BASED SLAM\n\nA graph-based SLAM approach constructs a simplified estimation problem by abstracting the raw sensor measurements. These raw measurements are replaced by the edges in the graph which can then be seen as \"virtual measurements\". More in detail an edge between two nodes is labeled with a probability distribution over the relative locations of the two poses, conditioned to their mutual measurements. In general, the observation model p(z t | x t , m t ) is multi-modal and therefore the Gaussian assumption does not hold. This means that a single observation z t might result in multiple potential edges connecting different poses in the graph and the graph connectivity needs itself to be described as a probability distribution. Directly dealing with this multi-modality in the estimation process would lead to a combinatorial explosion of the complexity. As a result of that, most practical approaches restrict the estimate to the most likely topology. Thus, one needs to determine the most likely constraint resulting from an observation. This decision depends on the probability distribution over the robot poses. This problem is known as data association and is usually addressed by the SLAM front-end. To compute the correct data-association, a front-end usually requires a consistent estimate of the conditional prior over the robot trajectory p(x 1:T | z 1:T , u 1:T ). This requires to interleave the execution of the front-end and of the backend while the robot explores the environment. Therefore, the accuracy and the efficiency of the back-end is crucial to the design of a good SLAM system. In this tutorial, we will not describe sophisticated approaches to the data association problem. Such methods tackle association by means of spectral clustering [27], joint compatibility branch and bound [23], or backtracking [13]. We rather assume that the given front-end provides consistent estimates.\n\nIf the observations are affected by (locally) Gaussian noise and the data association is known, the goal of a graph-based mapping algorithm is to compute a Gaussian approximation of the posterior over the robot trajectory. This involves computing the mean of this Gaussian as the configuration of the nodes that maximizes the likelihood of the observations. Once this mean is known the information matrix of the Gaussian can be obtained in a straightforward fashion, as explained in Section IV-B. In the following we will characterize the task of finding this maximum as a constraint optimization problem. We will also introduce parts of the notation illustrated in Figure 6. Let x = (x 1 , . . . , x T ) T be a vector of parameters, where x i describes the pose of node i. Let z ij and \u2126 ij be respectively the mean and the information matrix of a virtual measurement between the node i and the node j. This virtual measurement is a transformation that makes the observations acquired from i maximally overlap with the observation acquired from j. Let z ij (x i , x j ) be the prediction of a virtual measurement given a This edge originates from the measurement z ij . From the relative position of the two nodes, it is possible to compute the expected measurement\u1e91 ij that represents x j seen in the frame of x i . The error e ij (x i , x j ) depends on the displacement between the expected and the real measurement. An edge is fully characterized by its error function e ij (x i , x j ) and by the information matrix \u2126 ij of the measurement that accounts for its uncertainty.\n\nconfiguration of the nodes x i and x j . Usually this prediction is the relative transformation between the two nodes. The loglikelihood l ij of a measurement z ij is therefore\nl ij \u221d [z ij \u2212\u1e91 ij (x i , x j )] T \u2126 ij [z ij \u2212\u1e91 ij (x i , x j )].(2)\nLet e(x i , x j , z ij ) be a function that computes a difference between the expected observation\u1e91 ij and the real observation z ij gathered by the robot. For simplicity of notation, we will encode the indices of the measurement in the indices of the error function\ne ij (x i , x j ) = z ij \u2212\u1e91 ij (x i , x j ).\n(3) Figure 7 illustrates the functions and the quantities that play a role in defining an edge of the graph. Let C be the set of pairs of indices for which a constraint (observation) z exists. The goal of a maximum likelihood approach is to find the configuration of the nodes x * that minimizes the negative log likelihood F(x) of all the observations\nF(x) = i,j \u2208C e T ij \u2126 ij e ij Fij ,(4)\nthus, it seeks to solve the following equation:\nx * = argmin x F(x).(5)\nIn the remainder of this section we will describe an approach to solve Eq. 5 and to compute a Gaussian approximation of the posterior over the robot trajectory. Whereas the proposed approach utilizes standard optimization methods, like the Gauss-Newton or the Levenberg-Marquardt algorithms, it is particularly efficient because it effectively exploits the structure of the problem.\n\nWe first describe a direct implementation of traditional nonlinear least-squares optimization. Subsequently, we introduce a workaround that allows to deal with the singularities in the representation of the robot poses in an elegant manner.\n\n\nA. Error Minimization via Iterative Local Linearizations\n\nIf a good initial guessx of the robot's poses is known, the numerical solution of Eq. (5) can be obtained by using the popular Gauss-Newton or Levenberg-Marquardt algorithms. The idea is to approximate the error function by its first order Taylor expansion around the current initial guessx\ne ij (x i + \u2206x i ,x j + \u2206x j ) = e ij (x + \u2206x) (6) \u2243 e ij + J ij \u2206x.(7)\nHere, J ij is the Jacobian of e ij (x) computed inx and e ij def.\n\n= e ij (x). Substituting Eq. (7) in the error terms F ij of Eq. (4), we obtain:\nFij(x + \u2206x) = eij(x + \u2206x) T \u2126ijeij(x + \u2206x) (8) \u2243 (eij + Jij\u2206x) T \u2126ij (eij + Jij\u2206x) (9) = e T ij \u2126ijeij c ij +2 e T ij \u2126ijJij b ij \u2206x + \u2206x T J T ij \u2126ijJij H ij \u2206x(10) = cij + 2bij\u2206x + \u2206x T Hij\u2206x(11)\nWith this local approximation, we can rewrite the function F(x) in Eq. (4) as\nF(x + \u2206x) = i,j \u2208C Fij(x + \u2206x) (12) \u2243 i,j \u2208C cij + 2bij\u2206x + \u2206x T Hij\u2206x (13) = c + 2b T \u2206x + \u2206x T H\u2206x.(14)\nThe quadratic form in Eq. (14) is obtained from Eq. (13) by setting c = c ij , b = b ij , and H = H ij . It can be minimized in \u2206x by solving the linear system\nH \u2206x * = \u2212b.(15)\nThe matrix H is the information matrix of the system, since it is obtained by projecting the measurement error in the space of the trajectories via the Jacobians. It is sparse by construction, having non-zeros between poses connected by a constraint. Its number of non-zero blocks is twice the number of constrains plus the number of nodes. This allows to solve Eq. (15) by sparse Cholesky factorization. An efficient yet compact implementation of sparse Cholesky factorization can be found in the library CSparse [4]. The linearized solution is then obtained by adding to the initial guess the computed increments\nx * =x + \u2206x * .(16)\nThe popular Gauss-Newton algorithm iterates the linearization in Eq. (14), the solution in Eq. (15), and the update step in Eq. (16). In every iteration, the previous solution is used as the linearization point and the initial guess. The procedure described above is a general approach to multivariate function minimization, here derived for the special case of the SLAM problem. The general approach, however, assumes that the space of parameters x is Euclidean, which is not valid for SLAM and may lead to sub-optimal solutions.\n\n\nB. Considerations about the Structure of the Linearized System\n\nAccording to Eq. (14), the matrix H and the vector b are obtained by summing up a set of matrices and vectors, one for every constraint. Every constraint will contribute to the system with an addend term. The structure of this addend depends on the Jacobian of the error function. Since the error function of a constraint depends only on the values of two nodes, the Jacobian in Eq. (7) has the following form:\nJ ij = \uf8eb \uf8ec \uf8ed0 \u00b7 \u00b7 \u00b7 0 A ij node i 0 \u00b7 \u00b7 \u00b7 0 B ij node j 0 \u00b7 \u00b7 \u00b7 0 \uf8f6 \uf8f7 \uf8f8 . (17)\nHere A ij and B ij are the derivatives of the error function with respect to x i and x j . From Eq. (10) we obtain the following structure for the block matrix H ij :\nH ij = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed . . . A T ij \u2126 ij A ij \u00b7 \u00b7 \u00b7 A T ij \u2126 ij B ij . . . . . . . . . B T ij \u2126 ij A ij \u00b7 \u00b7 \u00b7 B T ij \u2126 ij B ij . . . \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8 (18) b ij = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed . . . A T ij \u2126 ij e ij . . . B T ij \u2126 ij e ij . . . \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8(19)\nFor simplicity of notation we omitted the zero blocks. Algorithm 1 summarizes an iterative Gauss-Newton procedure to determine both the mean and the information matrix of the posterior over the robot poses. Since most of the structures in the system are sparse, we recommend to use memory efficient representations to store the Hessian H of the system. Since the structure of the Hessian is known in advance from the connectivity of the graph, we recommend to pre-allocate the Hessian once at the beginning of the iterations and to update it in place by looping over all edges whenever a new linearization is required. Each edge contributes to the blocks H [ii] , H [ij] , H [ji] , and H [jj] and to the blocks b [i] and b [j] of the coefficient vector. An additional optimization is to compute only the upper triangular part of H, since it is symmetric. Note that the error of a constraint e ij depends only on the relative position of the connected poses x i and x j . Accordingly, the error F(x) of a particular configuration of the poses x is invariant under a rigid transformation of all the poses. This results in Eq. 15 being under determined. To numerically solve this system it is therefore common practice to constrain one of the increments \u2206x k to be zero. This can be done by adding the identity matrix to the k th diagonal block H [kk]. Without loss of generality in Algorithm 1 we fix the first node x 1 . An alternative way to fix a particular node of the pose-graph consists in suppressing the k th block row and the k th block column of the linear system in Eq. 15.\n\n\nAlgorithm 1\n\nComputes the mean x * and the information matrix H * of the multivariate Gaussian approximation of the robot pose posterior from a graph of constraints. Require:x =x 1:T : initial guess. C = { e ij (\u00b7), \u2126 ij }:\n\nconstraints Ensure: x * : new solution, H * new information matrix // find the maximum likelihood solution while \u00acconverged do b \u2190 0 H \u2190 0 for all e ij , \u2126 ij \u2208 C do // Compute the Jacobians A ij and B ij of the error function\nA ij \u2190 \u2202eij (x) \u2202xi x=x B ij \u2190 \u2202eij (x) \u2202xj x=x\n// compute the contribution of this constraint to the linear system\nH [ii] += A T ij \u2126 ij A ij H [ij] += A T ij \u2126 ij B ij H [ji] += B T ij \u2126 ij A ij H [jj] += B T ij \u2126 ij B ij // compute the coefficient vector b [i] += A T ij \u2126 ij e ij b [j] += B T\nij \u2126 ij e ij end for // keep the first node fixed H [11] += I // solve the linear system using sparse Cholesky factorization\n\u2206x \u2190 solve(H \u2206x = \u2212b) // update the parameters x += \u2206x end while x * \u2190x H * \u2190 H // release the first node H * [11] \u2212= I return x * , H *\n\nC. Least Squares on a Manifold\n\nA common approach in numeric to deal with non-Euclidean spaces is to perform the optimization on a manifold. A manifold is a mathematical space that is not necessarily Euclidean on a global scale, but can be seen as Euclidean on a local scale [20]. Note that the manifold-based approach described here is similar to the way of minimizing functions in SO(3) as described by Taylor and Kriegman [30].\n\nIn the context of the SLAM problem, each parameter block x i consists of a translation vector t i and a rotational component \u03b1 i . The translation t i clearly forms a Euclidean space, while the rotational components \u03b1 i span over the non-Euclidean 2D or 3D rotation group SO(2) or SO(3). To avoid singularities, these spaces are usually described in an over-parametrized way, e.g., by rotation matrices or quaternions. Directly applying Eq. (16) to these over-parametrized representations breaks the constraints induced by the overparametrization. The over-parametrization results in additional degrees of freedom and thus introduces errors in the solution.\n\nTo overcome this problem, one can use a minimal representation for the rotation (like, e.g., Euler angles in 3D). This, however, is subject to singularities. The singularities in the 2D case can be easily recovered by normalizing the angle, however in 3D this procedure is not straightforward.\n\nAn alternative idea is to consider the underlying space as a manifold and to define an operator \u229e that maps a local variation \u2206x in the Euclidean space to a variation on the manifold, \u2206x \u2192 x \u229e \u2206x. We refer the reader to the work of Hertzberg [14] for the mathematical details. With this operator, a new error function can be defined as (21) wherex spans over the original over-parametrized space, for instance quaternions. The term \u2206x is a small increment around the original positionx and is expressed in a minimal representation.\ne ij (\u2206x i , \u2206x j ) def. = e ij (x i \u229e \u2206x i ,x j \u229e \u2206x j ) (20) = e ij (x \u229e \u2206x) \u2243\u0207 ij +J ij \u2206x,\nAs an example, in 3D SLAM a good choice of the parametrization of the rotations is the vector part of the unit quaternion. In more detail, one can represent the increments \u2206x as 6D vectors \u2206x T = (\u2206t Tq T ), where \u2206t denotes the translation andq T = (\u2206q x \u2206q y \u2206q z ) T is the vector part of the unit quaternion representing the 3D rotation.\n\nConversely,x T = (t TqT ) uses a quaternionq to encode the rotational part. Thus, the operator \u229e can be expressed by first converting \u2206q to a full quaternion \u2206q and then applying the transformation \u2206x T = (\u2206t T \u2206q T ) tox. In the equations describing the error minimization, these operations can nicely be encapsulated by the \u229e operator. The JacobianJ ij can be expressed byJ\nij = \u2202e ij (x \u229e \u2206x) \u2202\u2206x \u2206x=0 .(22)\nSince in the previous equation e depends only on \u2206x i and \u2206x j we can further expand it as follows:\nJij (23) = \uf8eb \uf8ec \uf8ec \uf8ec \uf8ec \uf8ed \u00b7 \u00b7 \u00b7 \u2202eij(x \u229e \u2206x) \u2202\u2206xi \u2206x=0 \u00c3 ij \u00b7 \u00b7 \u00b7 \u2202eij(x \u229e \u2206x) \u2202\u2206xj \u2206x=0 B ij \u00b7 \u00b7 \u00b7 \uf8f6 \uf8f7 \uf8f7 \uf8f7 \uf8f7 \uf8f8\nUsing the rule for the partial derivatives and exploiting the fact that the Jacobian is evaluated in \u2206x = 0, the non-zero blocks become:\n\u2202e ij (x \u229e \u2206x i ) \u2202\u2206x i = \u2202e ij (x) \u2202x i Aij \u00b7x i \u229e \u2206x i \u2202\u2206x i \u2206x=0 Mi (24) \u2202e ij (x \u229e \u2206x j ) \u2202\u2206x j = \u2202e ij (x) \u2202x j Bij \u00b7x j \u229e \u2206x j \u2202\u2206x j \u2206x=0 Mj(25)\nAccordingly, one can easily derive from the Jacobian not defined on a manifold of Eq. 17 a Jacobian on a manifold just by multiplying its non-zero blocks with the derivative of the \u229e operator computed inx i andx j . With a straightforward extension of the notation, we can insert Eq. (21) in Eq. (9). This leads to the following linear system:H\n\u2206x * = \u2212b.(26)\nSince the increments \u2206x * are computed in the local Euclidean surroundings of the initial guessx, they need to be re-mapped into the original over-parametrized space by the \u229e operator. Accordingly, the update rule of Eq. (16) becomes\nx * =x \u229e \u2206x * .(27)\nThus, formalizing the minimization problem on a manifold consists of first computing a set of increments in a local Euclidean approximation around the initial guess by Eq. (26), and second accumulating the increments in the global non-Euclidean space by Eq. (27). Note that the linear system computed on a manifold representation has the same structure of the linear system computed on an Euclidean space. One can easily derive a manifold version of a graph minimization from a non-manifold version, only by defining an \u229e operator and its Jacobian M i w.r.t. the corresponding parameter block. Algorithm 2 provides a manifold version of the Gauss-Newton method for SLAM. The HessianH of the manifold problem no longer represents the information matrix of the trajectories but of the trajectory increments \u2206x. To obtain the information matrix of the trajectory Algorithm 2 computes H in the original space of the poses x.\n\n\nV. PRACTICAL APPLICATIONS\n\nIn this section we describe some applications of the proposed methods. In the first scenario we describe a complete 2D mapping system, and in the second scenario we briefly describe a 3D mapping system and we highlight the advantages of a manifold representation.\n\n\nA. 2D Laser Based Mapping\n\nWe processed the data recorded with the mobile robot equipped with a laser range finder illustrated in Figure 8 at the Intel Research Laboratory in Seattle. This data consists of odometry measurements describing 2D transformations Algorithm 2 Manifold version of Algorithm 1. While this algorithm has the same computational complexity, it is substantially more robust than the non-manifold version, especially in the 3D case.\n\nRequire:x =x 1:T : initial guess. C = { e ij (\u00b7), \u2126 ij }:\n\nconstraints Ensure: x * : new solution,H * new information matrix // find the maximum likelihood solution while \u00acconverged do // Compute the auxiliary Jacobians M 1:T over the manifold\nfor allx i \u2208x do M i \u2190x i\u229e\u2206xi \u2202\u2206xi \u2206x=0 end for b \u2190 0H \u2190 0\nfor all e ij , \u2126 ij \u2208 C do // Compute the Jacobians A ij and B ij of the error function\nA ij \u2190 \u2202eij (x) \u2202xi x=x B ij \u2190 \u2202eij (x) \u2202xj x=x // Project the Jacobians through the manifold A ij \u2190 A ij M iBij \u2190 B ij M j // compute the nonzero Hessian blocks H [ii] +=\u00c3 T ij \u2126 ij\u00c3ijH[ij] +=\u00c3 T ij \u2126 ijBij H [ji] +=B T ij \u2126 ij\u00c3ijH[jj] +=B T ij \u2126 ijBij // compute the coefficient vector b [i] +=\u00c3 T\nij \u2126 ij e ijb[j] +=B T ij \u2126 ij e ij end for // keep the first node fixed H [11] += I // solve the linear system using sparse Cholesky factorization \u2206x \u2190 solve(H \u2206x = \u2212b) // update the parameters for allx i \u2208x d\u020f\n\nx i \u2190x i \u229e \u2206x i end for end while x * \u2190x // the maximum is found, now compute the Hessian in the original space corresponding to the movements of the platform between consecutive time frames, and 2D laser range data.\nH * \u2190 0 for all e ij , \u2126 ij \u2208 C do H [ii] += A T ij \u2126 ij A ij H [ij] += A T ij \u2126 ij B ij H [ji] += B T ij \u2126 ij A ij H [jj] += B T ij \u2126 ij B ij end for return x * , H *\nThe graph is constructed in the following way:\n\n\u2022 Whenever the robot moves more than 0.5 meters or rotates more than 0.5 radians, the algorithm adds a new vertex to the graph and labels it with the current laser observation. \u2022 This laser scan is matched with the previously acquired one to improve the odometry estimate and the corresponding edge is added to the graph. We use a variant of the scan-matcher described by Olson [26]. \u2022 When the robot reenters a known area after traveling for a long time in a previously unknown region, the algorithm seeks for matches of the current scan with the past measurements (loop closing). If a matching between the current observation and the observation of another node succeeds, the algorithm adds a new edge to the graph. The edge is labeled with the relative transformation that makes the two scans to overlap best. Matching the current measurement with all previous scans would be extremely inefficient and error prone, since it does not consider the known prior about the robot location. Instead, the algorithm selects the candidate nodes in the past as the ones whose 3\u03c3 marginal covariances contains the current robot pose. These covariances can be obtained as the diagonal blocks of the inverse of a reduced Hessian H red . H red is obtained from H by removing rows and the columns of the newly inserted robot pose. H red is the information matrix of all the trajectory when assuming fixed the current position. \u2022 The algorithm performs the optimization whenever a loop closure is detected.\n\nAt the end of the run, the graph consists of 1, 802 nodes and 3, 546 edges. Even for this relatively large problem the optimization can be carried on in 100 ms on a standard laptop (Intel Core2@2.4 GHz). Since the robot travels at a velocity of around 1 m/s the graph optimization could be executed after adding every node instead of after detecting a loop closure. Figure 9 shows the effect of the optimization process on the trajectory, while Figure 10 illustrates the uncertainty ellipses. The robot is located in the region where the ellipse become small. Note that the poses in SE(2) do not need to be over parameterized, so in this case there is no advantage in utilizing manifolds.\n\n\nB. 3D Laser Based Mapping\n\nExtending to 3D the SLAM algorithm presented in the previous section is rather straightforward. One has only to replace the 2D scan matching and loop closure detection with their 3D counterparts that operate on 3D point clouds instead than on single laser scans. In our implementation we utilize the popular ICP algorithm [1] and for determining the loop closures we use the algorithm by Steder et al. [29]. Additionally, each node of the graph and each constraint lives in SE (3). Typical outputs of this algorithm are illustrated in Figures 2(a) and (b).\n\nThe minimum number of parameters required to represent an element of SE(3) is 6, a possible choice consists in a 3D translation vector plus the three Euler angles. Utilizing this parametrization leads to Algorithm 1. However, this minimal representation is subject to singularities that can be avoided by utilizing an over-parametrized state space. Alternatively, one can describe the relative perturbations of the optimization problem \u2206x in a minimal representation while leaving the poses in the original over-parametrized space. This leads to Algorithm 2. In this section we compare these two variants of the optimization algorithm on a pose-graph obtained by a simulated robot. Note that the sparsity pattern of the Hessian is the same in both cases. Furthermore, the time to compute the linear system is negligible compared to the time to solve it. Accordingly, the choice of the parametrization mainly affects the convergence speed, not the time required to perform one iteration. To highlight this effect we show the evolution of the error per iteration during one optimization run by using the two algorithms.\n\nWe use a simulated 3D dataset of a robot traveling on the surface of a sphere. The measurements were affected by a significant error, and initializing the system by using the odometry information resulted in the graph illustrated in the left part of Figure 11. Starting from this initial guess we executed the Gauss-Newton Algorithm with and without the manifold linearization, i.e., here by using Euler angles.   Figure 12 shows the evolution of the error during the iterations of the two approaches. First both approaches are able to decrease the error. However, not appropriately considering the singularities leads to a divergence of Algorithm 1 while Algorithm 2 converges to the right solution.\n\n\nVI. CONCLUSIONS\n\nIn this paper we presented a tutorial on graph-based SLAM. Our aim was to provide the reader with sufficient details and insights to allow for an easy implementation of the proposed methods. The algorithms presented in this paper can be used as a building blocks of more sophisticated methods, however optimized implementations of these algorithms can deal with surprisingly large problems.\n\n\nAPPENDIX\n\nIn the following we will provide the definitions and the derivations for the Jacobians to implement the suggested algorithm. Due to space limitations we do not expand the Jacobians in the 3D case. However, these Jacobians can either be computed numerically or by using a computer algebra system.\n\n\nError Functions and Jacobians for the 2D case\n\nThe basic entities in the 2D case are defined as\nx \u22a4 i = (t \u22a4 i , \u03b8 i ) (28) z \u22a4 ij = (t \u22a4 ij , \u03b8 ij )(29)\nwhere t i and t ij are 2D vectors and \u03b8 i and \u03b8 ij are rotation angles which are normalized to [\u2212\u03c0, \u03c0). The error function is\ne ij (x) = R \u22a4 ij (R \u22a4 i (t j \u2212 t i ) \u2212 t ij ) \u03b8 j \u2212 \u03b8 i \u2212 \u03b8 ij ,(30)\nwhere R i and R ij are the 2 \u00d7 2 rotation matrices of \u03b8 i and \u03b8 ij with the following structure\nR i = cos(\u03b8 i ) \u2212 sin(\u03b8 i ) sin(\u03b8 i ) cos(\u03b8 i ) .(31)\nThe Jacobians of the error function are\nA ij = \u2202e ij (x) \u2202x i = \u2212R \u22a4 ij R \u22a4 i R \u22a4 ij \u2202R \u22a4 i \u2202\u03b8i (t j \u2212 t i ) 0 \u22a4 \u22121 (32) B ij = \u2202e ij (x) \u2202x j = R \u22a4 ij R \u22a4 i 0 0 \u22a4 1 .(33)\nThe \u229e operator is defined as\nx \u229e \u2206x = x + \u2206x(34)\nThe angles are normalized to [\u2212\u03c0, \u03c0) after applying the increments. The Jacobians of the manifold in the 2D case evaluate to the identity matrix:\nM i = x i \u229e \u2206x i \u2202\u2206x i \u2206x=0 = I 3(35)M j = x j \u229e \u2206x j \u2202\u2206x j \u2206x=0 = I 3(36)\n.\n\n\nError Functions for the 3D case\n\nThe basic entities in the 3D case are defined as\nx \u22a4 i = (t \u22a4 i , q \u22a4 i ) (37) z \u22a4 ij = (t \u22a4 ij , q \u22a4 ij ),(38)\nwhere q denotes the unit quaternion q \u22a4 = (q x , q y , q z , q w ) \u22a4 , i.e., q = 1. The error function is\ne ij (x) = z \u22121 ij \u2295 (x \u22121 i \u2295 x j ) [1:6] ,(39)\nFig. 1 .\n1Applications of SLAM technology. (a) An autonomous instrumented car developed at Stanford. This car can acquire maps by utilizing only its on-board sensors. These maps can be subsequently used for autonomous navigation. (b) The museum guide robot TPR-Robina developed by Toyota (picture courtesy of Toyota Motor Company). This robot acquires a new map every time the museum is reconfigured. (c) The KUKA Concept robot \"Omnirob\", a mobile manipulator designed autonomously navigate and operate in the environment with the sole use of its on-board sensors (picture courtesy of KUKA Roboter GmbH). variables x 1:T = {x 1 , . . . , x T }. While moving, it acquires a sequence of odometry measurements u 1:T = {u 1 , . . . , u T } and perceptions of the environment z 1:T = {z 1 , . . . , z T }. Solving the full SLAM problem consists of estimating the posterior probability of the robot's trajectory x 1:T and the map m of the environment given all the measurements plus an initial position x 0 :\n\nFig. 3 .\n3Landmark based maps acquired at the German Aerospace Center. In this setup the landmarks consist in white circles painted on the ground that are detected by the robot through vision, as shown in the left image. The right image illustrates the trajectory of the robot and the estimated positions of the landmarks. These images are courtesy of Udo Frese and Christoph Hertzberg.\n\nFig. 4 .\n4Dynamic Bayesian Network of the SLAM process.\n\nFig. 2 .\n2x 1:T and m model the robot's trajectory and the map of the environment. The connectivity of the DBN follows a recurrent (a) A 3D map of the Stanford parking garage acquired with an instrumented car (bottom), and the corresponding satellite view (top). This map has been subsequently used to realize an autonomous parking behavior. (b) Point cloud map acquired at the university of Freiburg (courtesy of Kai. M. Wurm) and relative satellite image. (c) Occupancy grid map acquired at the hospital of Freiburg. Top: a bird's eye view of the area, bottom: the occupancy grid representation. The gray areas represent unobserved regions, the white part represents traversable space while the black points indicate occupied regions. pattern characterized by the state transition model and by the observation model. The transition model p\n\nFig. 5 .\n5Pose-graph corresponding to a data-set recorded at MIT Killian Court (courtesy of Mike Bosse and John Leonard) (left) and after (right) optimization. The maps are obtained by rendering the laser scans according to the robot positions in the graph.\n\nFig. 6 .\n6A pose-graph representation of a SLAM process. Every node in the graph corresponds to a robot pose. Nearby poses are connected by edges that model spatial constraints between robot poses arising from measurements. Edges e t\u22121 t between consecutive poses model odometry measurements, while the other edges represent spatial constraints arising from multiple observations of the same part of the environment.\n\nFig. 7 .\n7Aspects of an edge connecting the vertex x i and the vertex x j .\n\nFig. 8 .\n8A typical robot used in 2D mapping experiments. The platform is a standard ActivMedia Pioneer 2 equipped with a SICK-LMS range finder.\n\nFig. 9 .\n9Intel Research Lab. Left: Unoptimized pose graph overlayed on top of the resulting map. Right: The optimized pose graph and the resulting consistent map.\n\nFig. 10 .\n10Pose uncertainty estimate for a real-world data set.\n\nFig. 11 .\n11Pose-graph obtained by simulating a robot moving on a sphere. Left: Initial configuration. Right: After optimizing the pose graph the sphere has accurately been recovered by Algorithm 2.\n\nFig. 12 .\n12Evolution of the error F(x) for Gauss-Newton optimization with Euler angles and with manifold linearization to the 3D sphere dataset.\nwhere \u2295 is the motion composition operatorand the operator (\u00b7)[1:6]selects the first 6 elements of its vector argument. The Jacobians of the error function are:The \u229e operator mapswhere \u2206t i denotes the translation and \u2206q \u22a4 = (\u2206q x , \u2206q y , \u2206q z ) \u22a4 is the vector part of the unit quaternion representing the 3D rotation and thus \u2206q i \u2264 1. The Jacobians of the manifold in the 3D case are given by\nA method for registration of 3-d shapes. J Paul, Neil D Besl, Mckay, IEEE Transactions on Pattern Analysis and Machine Intelligence. 142Paul J. Besl and Neil D. McKay. A method for registration of 3-d shapes. IEEE Transactions on Pattern Analysis and Machine Intelligence, 14(2):239-256, 1992.\n\nAn ATLAS framework for scalable mapping. M Bosse, P M Newman, J J Leonard, S Teller, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)M. Bosse, P. M. Newman, J. J. Leonard, and S. Teller. An ATLAS framework for scalable mapping. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), pages 1899-1906, 2003.\n\nThe SPmap: A probabilistic framework for simultaneous localization and map building. J A Castellanos, J M M Montiel, J Neira, J D Tard\u00f3s, IEEE Transactions on Robotics and Automation. 155J.A. Castellanos, J.M.M. Montiel, J. Neira, and J.D. Tard\u00f3s. The SPmap: A probabilistic framework for simultaneous localization and map build- ing. IEEE Transactions on Robotics and Automation, 15(5):948-953, 1999.\n\nDirect Methods for Sparse Linear Systems. T A Davis, Part of the SIAM Book Series on the Fundamentals of Algorithms. SIAM, PhiladelphiaT. A. Davis. Direct Methods for Sparse Linear Systems. SIAM, Philadelphia, 2006. Part of the SIAM Book Series on the Fundamentals of Algorithms.\n\nSquare root SAM: Simultaneous location and mapping via square root information smoothing. F Dellaert, M Kaess, Int. Journal of Robotics Research. F. Dellaert and M. Kaess. Square root SAM: Simultaneous location and mapping via square root information smoothing. Int. Journal of Robotics Research, 2006.\n\nHierachical SLAM: Realtime accurate mapping of large environments. C Estrada, J Neira, J D Tard\u00f3s, IEEE Transactions on Robotics. 214C. Estrada, J. Neira, and J.D. Tard\u00f3s. Hierachical SLAM: Real- time accurate mapping of large environments. IEEE Transactions on Robotics, 21(4):588-596, 2005.\n\nExactly sparse delayed-state filters. R Eustice, H Singh, J J Leonard, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)Barcelona, SpainR. Eustice, H. Singh, and J.J. Leonard. Exactly sparse delayed-state filters. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), pages 2428-2435, Barcelona, Spain, 2005.\n\nA multilevel relaxation algorithm for simultaneous localisation and mapping. U Frese, P Larsson, T Duckett, IEEE Transactions on Robotics. 212U. Frese, P. Larsson, and T. Duckett. A multilevel relaxation algorithm for simultaneous localisation and mapping. IEEE Transactions on Robotics, 21(2):1-12, 2005.\n\nImproved techniques for grid mapping with rao-blackwellized particle filters. G Grisetti, C Stachniss, W Burgard, IEEE Transactions on Robotics. 231G. Grisetti, C. Stachniss, and W. Burgard. Improved techniques for grid mapping with rao-blackwellized particle filters. IEEE Transactions on Robotics, 23(1):34-46, 2007.\n\nNon-linear constraint network optimization for efficient map learning. G Grisetti, C Stachniss, W Burgard, IEEE Transactions on Intelligent Transportation Systems. G. Grisetti, C. Stachniss, and W. Burgard. Non-linear constraint network optimization for efficient map learning. IEEE Transactions on Intelligent Transportation Systems, 2009.\n\nIncremental mapping of large cyclic environments. J.-S Gutmann, K Konolige, Proc. of the IEEE Int. Symposium on Computational Intelligence in Robotics and Automation (CIRA). of the IEEE Int. Symposium on Computational Intelligence in Robotics and Automation (CIRA)J.-S. Gutmann and K. Konolige. Incremental mapping of large cyclic environments. In Proc. of the IEEE Int. Symposium on Computational Intelligence in Robotics and Automation (CIRA), 1999.\n\nAn efficient FastSLAM algorithm for generating maps of large-scale cyclic environments from raw laser range measurements. D H\u00e4hnel, W Burgard, D Fox, S Thrun, Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS)Las Vegas, NV, USAD. H\u00e4hnel, W. Burgard, D. Fox, and S. Thrun. An efficient FastSLAM algorithm for generating maps of large-scale cyclic environments from raw laser range measurements. In Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS), pages 206-211, Las Vegas, NV, USA, 2003.\n\nTowards lazy data association in slam. D H\u00e4hnel, W Burgard, B Wegbreit, S Thrun, Proc. of the Int. Symposium of Robotics Research (ISRR). of the Int. Symposium of Robotics Research (ISRR)Siena, ItalyD. H\u00e4hnel, W. Burgard, B. Wegbreit, and S. Thrun. Towards lazy data association in slam. In Proc. of the Int. Symposium of Robotics Research (ISRR), pages 421-431, Siena, Italy, 2003.\n\nA framework for sparse, non-linear least squares problems on manifolds. C Hertzberg, Univ. BremenMaster's thesisC. Hertzberg. A framework for sparse, non-linear least squares problems on manifolds. Master's thesis, Univ. Bremen, 2008.\n\nRelaxation on a mesh: a formalism for generalized localization. A Howard, M J Matari\u0107, G Sukhatme, Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS)A. Howard, M.J. Matari\u0107, and G. Sukhatme. Relaxation on a mesh: a formalism for generalized localization. In Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS), 2001.\n\niSAM: Fast incremental smoothing and mapping with efficient data association. M Kaess, A Ranganathan, F Dellaert, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)Rome, ItalyM. Kaess, A. Ranganathan, and F. Dellaert. iSAM: Fast incremental smoothing and mapping with efficient data association. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), Rome, Italy, 2007.\n\nA gradient method for realtime robot control. K Konolige, Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS)K. Konolige. A gradient method for realtime robot control. In Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS), 2000.\n\nView-based maps. K Konolige, J Bowman, J D Chen, P Mihelich, M Calonder, V Lepetit, P Fua, International Journal of Robotics Research (IJRR). 2910K. Konolige, J. Bowman, J. D. Chen, P. Mihelich, M. Calonder, V. Lepetit, and P. Fua. View-based maps. International Journal of Robotics Research (IJRR), 29(10), 2010.\n\nSparse pose adjustment for 2d mapping. K Konolige, G Grisetti, R K\u00fcmmerle, W Burgard, B Limketkai, R Vincent, Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS)K. Konolige, G. Grisetti, R. K\u00fcmmerle, W. Burgard, B. Limketkai, and R. Vincent. Sparse pose adjustment for 2d mapping. In Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS), 2010.\n\nIntroduction to Smooth Manifolds. J M Lee, Graduate Texts in Mathematics. 218Springer VerlagJ.M. Lee. Introduction to Smooth Manifolds, volume 218 of Graduate Texts in Mathematics. Springer Verlag, 2003.\n\nGlobally consistent range scan alignment for environment mapping. F Lu, E Milios, Autonomous Robots. 4F. Lu and E. Milios. Globally consistent range scan alignment for environment mapping. Autonomous Robots, 4:333-349, 1997.\n\nFastSLAM: A factored solution to simultaneous localization and mapping. M Montemerlo, S Thrun, D Koller, B Wegbreit, Proc. of the National Conference on Artificial Intelligence (AAAI). of the National Conference on Artificial Intelligence (AAAI)Edmonton, CanadaM. Montemerlo, S. Thrun, D. Koller, and B. Wegbreit. FastSLAM: A factored solution to simultaneous localization and mapping. In Proc. of the National Conference on Artificial Intelligence (AAAI), pages 593- 598, Edmonton, Canada, 2002.\n\nData association in stochastic mapping using the joint compatibility test. J Neira, J D Tard\u00f3s, IEEE Transactions on Robotics and Automation. 176J. Neira and J.D. Tard\u00f3s. Data association in stochastic mapping using the joint compatibility test. IEEE Transactions on Robotics and Automation, 17(6):890-897, 2001.\n\n6D SLAM with approximate data association. A N\u00fcchter, K Lingemann, J Hertzberg, H Surmann, Proc. of the Int. Conference on Advanced Robotics (ICAR). of the Int. Conference on Advanced Robotics (ICAR)A. N\u00fcchter, K. Lingemann, J. Hertzberg, and H. Surmann. 6D SLAM with approximate data association. In Proc. of the Int. Conference on Advanced Robotics (ICAR), pages 242-249, 2005.\n\nRobust and Efficient Robotic Mapping. E Olson, MIT, Cambridge, MA, USAPhD thesisE. Olson. Robust and Efficient Robotic Mapping. PhD thesis, MIT, Cambridge, MA, USA, June 2008.\n\nReal-time correlative scan matching. E Olson, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)E. Olson. Real-time correlative scan matching. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), 2009.\n\nFast iterative optimization of pose graphs with poor initial estimates. E Olson, J Leonard, S Teller, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)E. Olson, J. Leonard, and S. Teller. Fast iterative optimization of pose graphs with poor initial estimates. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), pages 2262-2269, 2006.\n\nEstimating uncertain spatial realtionships in robotics. R Smith, M Self, P Cheeseman, Autonomous Robot Vehicles. I. Cox and G. WilfongSpringer VerlagR. Smith, M. Self, and P. Cheeseman. Estimating uncertain spatial realtionships in robotics. In I. Cox and G. Wilfong, editors, Autonomous Robot Vehicles, pages 167-193. Springer Verlag, 1990.\n\nRobust place recognition for 3D range data based on point features. B Steder, G Grisetti, W Burgard, Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA). of the IEEE Int. Conf. on Robotics & Automation (ICRA)B. Steder, G. Grisetti, and W. Burgard. Robust place recognition for 3D range data based on point features. In Proc. of the IEEE Int. Conf. on Robotics & Automation (ICRA), 2010.\n\nMinimization on the Lie group SO(3) and related manifolds. C J Taylor, D J Kriegman, 9405Yale UniversityTechnical ReportC.J. Taylor and D.J. Kriegman. Minimization on the Lie group SO(3) and related manifolds. Technical Report 9405, Yale University, 1994.\n\nSimultaneous localization and mapping with sparse extended information filters. S Thrun, Y Liu, D Koller, A Y Ng, Z Ghahramani, H Durrant-Whyte, Int. Journal of Robotics Research. 237/8S. Thrun, Y. Liu, D. Koller, A.Y. Ng, Z. Ghahramani, and H. Durrant- Whyte. Simultaneous localization and mapping with sparse extended information filters. Int. Journal of Robotics Research, 23(7/8):693-716, 2004.\n\nThe graph SLAM algorithm with applications to large-scale mapping of urban structures. S Thrun, M Montemerlo, Int. Journal of Robotics Research. 255-6403S. Thrun and M. Montemerlo. The graph SLAM algorithm with applications to large-scale mapping of urban structures. Int. Journal of Robotics Research, 25(5-6):403, 2006.\n\nMulti-level surface maps for outdoor terrain mapping and loop closing. R Triebel, P Pfaff, W Burgard, Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS). of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS)R. Triebel, P. Pfaff, and W. Burgard. Multi-level surface maps for outdoor terrain mapping and loop closing. In Proc. of the IEEE/RSJ Int. Conf. on Intelligent Robots and Systems (IROS), 2006.\n", "annotations": {"author": "[{\"end\":127,\"start\":34},{\"end\":220,\"start\":128},{\"end\":314,\"start\":221},{\"end\":407,\"start\":315}]", "publisher": null, "author_last_name": "[{\"end\":50,\"start\":42},{\"end\":143,\"start\":135},{\"end\":237,\"start\":228},{\"end\":330,\"start\":323}]", "author_first_name": "[{\"end\":41,\"start\":34},{\"end\":134,\"start\":128},{\"end\":227,\"start\":221},{\"end\":322,\"start\":315}]", "author_affiliation": "[{\"end\":126,\"start\":52},{\"end\":219,\"start\":145},{\"end\":313,\"start\":239},{\"end\":406,\"start\":332}]", "title": "[{\"end\":31,\"start\":1},{\"end\":438,\"start\":408}]", "venue": null, "abstract": "[{\"end\":1727,\"start\":441}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b27\"},\"end\":2894,\"start\":2890},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2899,\"start\":2896},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":2922,\"start\":2918},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":2928,\"start\":2924},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":2933,\"start\":2930},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":2961,\"start\":2958},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":2967,\"start\":2963},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":3219,\"start\":3215},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3224,\"start\":3221},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":3230,\"start\":3226},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":4986,\"start\":4982},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":6920,\"start\":6916},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6926,\"start\":6922},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":7097,\"start\":7093},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":7103,\"start\":7099},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":7108,\"start\":7105},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":7315,\"start\":7311},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7321,\"start\":7317},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9384,\"start\":9380},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":9390,\"start\":9386},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":11193,\"start\":11189},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":11344,\"start\":11340},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":11616,\"start\":11612},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":11689,\"start\":11686},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":11842,\"start\":11839},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":11978,\"start\":11974},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":12116,\"start\":12112},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":12255,\"start\":12251},{\"end\":12418,\"start\":12403},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":12574,\"start\":12570},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":12591,\"start\":12587},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":12713,\"start\":12710},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":12960,\"start\":12957},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":13284,\"start\":13280},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13496,\"start\":13492},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":13547,\"start\":13543},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":13739,\"start\":13735},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":15649,\"start\":15645},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":15692,\"start\":15688},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":15714,\"start\":15710},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":20667,\"start\":20664},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":20858,\"start\":20854},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":20884,\"start\":20880},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":20917,\"start\":20913},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":21403,\"start\":21399},{\"end\":22957,\"start\":22953},{\"end\":22966,\"start\":22962},{\"end\":22975,\"start\":22971},{\"end\":22988,\"start\":22984},{\"end\":23012,\"start\":23009},{\"end\":23644,\"start\":23640},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":24686,\"start\":24682},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":25172,\"start\":25168},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":25322,\"start\":25318},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":26525,\"start\":26521},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":26619,\"start\":26615},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":28445,\"start\":28441},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":28456,\"start\":28453},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":28947,\"start\":28943},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":29033,\"start\":29029},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":31211,\"start\":31207},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":32160,\"start\":32156},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":34315,\"start\":34312},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":34396,\"start\":34392}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":39336,\"start\":38333},{\"attributes\":{\"id\":\"fig_1\"},\"end\":39724,\"start\":39337},{\"attributes\":{\"id\":\"fig_2\"},\"end\":39781,\"start\":39725},{\"attributes\":{\"id\":\"fig_3\"},\"end\":40624,\"start\":39782},{\"attributes\":{\"id\":\"fig_4\"},\"end\":40883,\"start\":40625},{\"attributes\":{\"id\":\"fig_5\"},\"end\":41301,\"start\":40884},{\"attributes\":{\"id\":\"fig_6\"},\"end\":41378,\"start\":41302},{\"attributes\":{\"id\":\"fig_7\"},\"end\":41524,\"start\":41379},{\"attributes\":{\"id\":\"fig_8\"},\"end\":41689,\"start\":41525},{\"attributes\":{\"id\":\"fig_9\"},\"end\":41755,\"start\":41690},{\"attributes\":{\"id\":\"fig_10\"},\"end\":41955,\"start\":41756},{\"attributes\":{\"id\":\"fig_11\"},\"end\":42102,\"start\":41956}]", "paragraph": "[{\"end\":4278,\"start\":1746},{\"end\":4889,\"start\":4280},{\"end\":5814,\"start\":4891},{\"end\":6216,\"start\":5856},{\"end\":8178,\"start\":6257},{\"end\":8356,\"start\":8180},{\"end\":8575,\"start\":8381},{\"end\":9073,\"start\":8577},{\"end\":10933,\"start\":9075},{\"end\":12084,\"start\":10955},{\"end\":12575,\"start\":12086},{\"end\":12928,\"start\":12577},{\"end\":13009,\"start\":12930},{\"end\":13854,\"start\":13011},{\"end\":15788,\"start\":13879},{\"end\":17370,\"start\":15790},{\"end\":17548,\"start\":17372},{\"end\":17885,\"start\":17619},{\"end\":18283,\"start\":17931},{\"end\":18371,\"start\":18324},{\"end\":18778,\"start\":18396},{\"end\":19020,\"start\":18780},{\"end\":19371,\"start\":19081},{\"end\":19509,\"start\":19444},{\"end\":19590,\"start\":19511},{\"end\":19866,\"start\":19789},{\"end\":20132,\"start\":19973},{\"end\":20764,\"start\":20150},{\"end\":21315,\"start\":20785},{\"end\":21792,\"start\":21382},{\"end\":22038,\"start\":21872},{\"end\":23878,\"start\":22296},{\"end\":24104,\"start\":23894},{\"end\":24332,\"start\":24106},{\"end\":24448,\"start\":24381},{\"end\":24754,\"start\":24630},{\"end\":25323,\"start\":24925},{\"end\":25982,\"start\":25325},{\"end\":26277,\"start\":25984},{\"end\":26810,\"start\":26279},{\"end\":27247,\"start\":26906},{\"end\":27624,\"start\":27249},{\"end\":27759,\"start\":27660},{\"end\":28005,\"start\":27869},{\"end\":28501,\"start\":28157},{\"end\":28750,\"start\":28517},{\"end\":29691,\"start\":28771},{\"end\":29984,\"start\":29721},{\"end\":30439,\"start\":30014},{\"end\":30498,\"start\":30441},{\"end\":30684,\"start\":30500},{\"end\":30831,\"start\":30744},{\"end\":31343,\"start\":31132},{\"end\":31561,\"start\":31345},{\"end\":31776,\"start\":31730},{\"end\":33270,\"start\":31778},{\"end\":33960,\"start\":33272},{\"end\":34546,\"start\":33990},{\"end\":35665,\"start\":34548},{\"end\":36367,\"start\":35667},{\"end\":36777,\"start\":36387},{\"end\":37085,\"start\":36790},{\"end\":37183,\"start\":37135},{\"end\":37367,\"start\":37242},{\"end\":37533,\"start\":37438},{\"end\":37627,\"start\":37588},{\"end\":37788,\"start\":37760},{\"end\":37954,\"start\":37809},{\"end\":38031,\"start\":38030},{\"end\":38115,\"start\":38067},{\"end\":38284,\"start\":38179}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":6256,\"start\":6217},{\"attributes\":{\"id\":\"formula_1\"},\"end\":8380,\"start\":8357},{\"attributes\":{\"id\":\"formula_2\"},\"end\":17618,\"start\":17549},{\"attributes\":{\"id\":\"formula_3\"},\"end\":17930,\"start\":17886},{\"attributes\":{\"id\":\"formula_4\"},\"end\":18323,\"start\":18284},{\"attributes\":{\"id\":\"formula_5\"},\"end\":18395,\"start\":18372},{\"attributes\":{\"id\":\"formula_6\"},\"end\":19443,\"start\":19372},{\"attributes\":{\"id\":\"formula_7\"},\"end\":19788,\"start\":19591},{\"attributes\":{\"id\":\"formula_8\"},\"end\":19972,\"start\":19867},{\"attributes\":{\"id\":\"formula_9\"},\"end\":20149,\"start\":20133},{\"attributes\":{\"id\":\"formula_10\"},\"end\":20784,\"start\":20765},{\"attributes\":{\"id\":\"formula_11\"},\"end\":21871,\"start\":21793},{\"attributes\":{\"id\":\"formula_12\"},\"end\":22295,\"start\":22039},{\"attributes\":{\"id\":\"formula_13\"},\"end\":24380,\"start\":24333},{\"attributes\":{\"id\":\"formula_14\"},\"end\":24629,\"start\":24449},{\"attributes\":{\"id\":\"formula_15\"},\"end\":24891,\"start\":24755},{\"attributes\":{\"id\":\"formula_16\"},\"end\":26905,\"start\":26811},{\"attributes\":{\"id\":\"formula_17\"},\"end\":27659,\"start\":27625},{\"attributes\":{\"id\":\"formula_18\"},\"end\":27868,\"start\":27760},{\"attributes\":{\"id\":\"formula_19\"},\"end\":28156,\"start\":28006},{\"attributes\":{\"id\":\"formula_20\"},\"end\":28516,\"start\":28502},{\"attributes\":{\"id\":\"formula_21\"},\"end\":28770,\"start\":28751},{\"attributes\":{\"id\":\"formula_22\"},\"end\":30743,\"start\":30685},{\"attributes\":{\"id\":\"formula_23\"},\"end\":31131,\"start\":30832},{\"attributes\":{\"id\":\"formula_24\"},\"end\":31729,\"start\":31562},{\"attributes\":{\"id\":\"formula_25\"},\"end\":37241,\"start\":37184},{\"attributes\":{\"id\":\"formula_26\"},\"end\":37437,\"start\":37368},{\"attributes\":{\"id\":\"formula_27\"},\"end\":37587,\"start\":37534},{\"attributes\":{\"id\":\"formula_28\"},\"end\":37759,\"start\":37628},{\"attributes\":{\"id\":\"formula_29\"},\"end\":37808,\"start\":37789},{\"attributes\":{\"id\":\"formula_30\"},\"end\":37992,\"start\":37955},{\"attributes\":{\"id\":\"formula_31\"},\"end\":38029,\"start\":37992},{\"attributes\":{\"id\":\"formula_32\"},\"end\":38178,\"start\":38116},{\"attributes\":{\"id\":\"formula_33\"},\"end\":38333,\"start\":38285}]", "table_ref": null, "section_header": "[{\"end\":1744,\"start\":1729},{\"end\":5854,\"start\":5817},{\"end\":10953,\"start\":10936},{\"end\":13877,\"start\":13857},{\"end\":19079,\"start\":19023},{\"end\":21380,\"start\":21318},{\"end\":23892,\"start\":23881},{\"end\":24923,\"start\":24893},{\"end\":29719,\"start\":29694},{\"end\":30012,\"start\":29987},{\"end\":33988,\"start\":33963},{\"end\":36385,\"start\":36370},{\"end\":36788,\"start\":36780},{\"end\":37133,\"start\":37088},{\"end\":38065,\"start\":38034},{\"end\":38342,\"start\":38334},{\"end\":39346,\"start\":39338},{\"end\":39734,\"start\":39726},{\"end\":39791,\"start\":39783},{\"end\":40634,\"start\":40626},{\"end\":40893,\"start\":40885},{\"end\":41311,\"start\":41303},{\"end\":41388,\"start\":41380},{\"end\":41534,\"start\":41526},{\"end\":41700,\"start\":41691},{\"end\":41766,\"start\":41757},{\"end\":41966,\"start\":41957}]", "table": null, "figure_caption": "[{\"end\":39336,\"start\":38344},{\"end\":39724,\"start\":39348},{\"end\":39781,\"start\":39736},{\"end\":40624,\"start\":39793},{\"end\":40883,\"start\":40636},{\"end\":41301,\"start\":40895},{\"end\":41378,\"start\":41313},{\"end\":41524,\"start\":41390},{\"end\":41689,\"start\":41536},{\"end\":41755,\"start\":41703},{\"end\":41955,\"start\":41769},{\"end\":42102,\"start\":41969}]", "figure_ref": "[{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":3368,\"start\":3360},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":4182,\"start\":4174},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":7331,\"start\":7323},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":7466,\"start\":7458},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":7920,\"start\":7912},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":8191,\"start\":8183},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":10862,\"start\":10854},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":16464,\"start\":16456},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":17943,\"start\":17935},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":30125,\"start\":30117},{\"attributes\":{\"ref_id\":\"fig_8\"},\"end\":33646,\"start\":33638},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":33726,\"start\":33717},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":34545,\"start\":34525},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":35926,\"start\":35917},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":36090,\"start\":36081}]", "bib_author_first_name": "[{\"end\":42542,\"start\":42541},{\"end\":42553,\"start\":42549},{\"end\":42555,\"start\":42554},{\"end\":42837,\"start\":42836},{\"end\":42846,\"start\":42845},{\"end\":42848,\"start\":42847},{\"end\":42858,\"start\":42857},{\"end\":42860,\"start\":42859},{\"end\":42871,\"start\":42870},{\"end\":43266,\"start\":43265},{\"end\":43268,\"start\":43267},{\"end\":43283,\"start\":43282},{\"end\":43287,\"start\":43284},{\"end\":43298,\"start\":43297},{\"end\":43307,\"start\":43306},{\"end\":43309,\"start\":43308},{\"end\":43626,\"start\":43625},{\"end\":43628,\"start\":43627},{\"end\":43955,\"start\":43954},{\"end\":43967,\"start\":43966},{\"end\":44236,\"start\":44235},{\"end\":44247,\"start\":44246},{\"end\":44256,\"start\":44255},{\"end\":44258,\"start\":44257},{\"end\":44501,\"start\":44500},{\"end\":44512,\"start\":44511},{\"end\":44521,\"start\":44520},{\"end\":44523,\"start\":44522},{\"end\":44928,\"start\":44927},{\"end\":44937,\"start\":44936},{\"end\":44948,\"start\":44947},{\"end\":45236,\"start\":45235},{\"end\":45248,\"start\":45247},{\"end\":45261,\"start\":45260},{\"end\":45549,\"start\":45548},{\"end\":45561,\"start\":45560},{\"end\":45574,\"start\":45573},{\"end\":45873,\"start\":45869},{\"end\":45884,\"start\":45883},{\"end\":46395,\"start\":46394},{\"end\":46405,\"start\":46404},{\"end\":46416,\"start\":46415},{\"end\":46423,\"start\":46422},{\"end\":46918,\"start\":46917},{\"end\":46928,\"start\":46927},{\"end\":46939,\"start\":46938},{\"end\":46951,\"start\":46950},{\"end\":47335,\"start\":47334},{\"end\":47563,\"start\":47562},{\"end\":47573,\"start\":47572},{\"end\":47575,\"start\":47574},{\"end\":47586,\"start\":47585},{\"end\":48009,\"start\":48008},{\"end\":48018,\"start\":48017},{\"end\":48033,\"start\":48032},{\"end\":48424,\"start\":48423},{\"end\":48739,\"start\":48738},{\"end\":48751,\"start\":48750},{\"end\":48761,\"start\":48760},{\"end\":48763,\"start\":48762},{\"end\":48771,\"start\":48770},{\"end\":48783,\"start\":48782},{\"end\":48795,\"start\":48794},{\"end\":48806,\"start\":48805},{\"end\":49076,\"start\":49075},{\"end\":49088,\"start\":49087},{\"end\":49100,\"start\":49099},{\"end\":49112,\"start\":49111},{\"end\":49123,\"start\":49122},{\"end\":49136,\"start\":49135},{\"end\":49528,\"start\":49527},{\"end\":49530,\"start\":49529},{\"end\":49765,\"start\":49764},{\"end\":49771,\"start\":49770},{\"end\":49997,\"start\":49996},{\"end\":50011,\"start\":50010},{\"end\":50020,\"start\":50019},{\"end\":50030,\"start\":50029},{\"end\":50498,\"start\":50497},{\"end\":50507,\"start\":50506},{\"end\":50509,\"start\":50508},{\"end\":50780,\"start\":50779},{\"end\":50791,\"start\":50790},{\"end\":50804,\"start\":50803},{\"end\":50817,\"start\":50816},{\"end\":51156,\"start\":51155},{\"end\":51332,\"start\":51331},{\"end\":51648,\"start\":51647},{\"end\":51657,\"start\":51656},{\"end\":51668,\"start\":51667},{\"end\":52048,\"start\":52047},{\"end\":52057,\"start\":52056},{\"end\":52065,\"start\":52064},{\"end\":52403,\"start\":52402},{\"end\":52413,\"start\":52412},{\"end\":52425,\"start\":52424},{\"end\":52791,\"start\":52790},{\"end\":52793,\"start\":52792},{\"end\":52803,\"start\":52802},{\"end\":52805,\"start\":52804},{\"end\":53069,\"start\":53068},{\"end\":53078,\"start\":53077},{\"end\":53085,\"start\":53084},{\"end\":53095,\"start\":53094},{\"end\":53097,\"start\":53096},{\"end\":53103,\"start\":53102},{\"end\":53117,\"start\":53116},{\"end\":53476,\"start\":53475},{\"end\":53485,\"start\":53484},{\"end\":53783,\"start\":53782},{\"end\":53794,\"start\":53793},{\"end\":53803,\"start\":53802}]", "bib_author_last_name": "[{\"end\":42547,\"start\":42543},{\"end\":42560,\"start\":42556},{\"end\":42567,\"start\":42562},{\"end\":42843,\"start\":42838},{\"end\":42855,\"start\":42849},{\"end\":42868,\"start\":42861},{\"end\":42878,\"start\":42872},{\"end\":43280,\"start\":43269},{\"end\":43295,\"start\":43288},{\"end\":43304,\"start\":43299},{\"end\":43316,\"start\":43310},{\"end\":43634,\"start\":43629},{\"end\":43964,\"start\":43956},{\"end\":43973,\"start\":43968},{\"end\":44244,\"start\":44237},{\"end\":44253,\"start\":44248},{\"end\":44265,\"start\":44259},{\"end\":44509,\"start\":44502},{\"end\":44518,\"start\":44513},{\"end\":44531,\"start\":44524},{\"end\":44934,\"start\":44929},{\"end\":44945,\"start\":44938},{\"end\":44956,\"start\":44949},{\"end\":45245,\"start\":45237},{\"end\":45258,\"start\":45249},{\"end\":45269,\"start\":45262},{\"end\":45558,\"start\":45550},{\"end\":45571,\"start\":45562},{\"end\":45582,\"start\":45575},{\"end\":45881,\"start\":45874},{\"end\":45893,\"start\":45885},{\"end\":46402,\"start\":46396},{\"end\":46413,\"start\":46406},{\"end\":46420,\"start\":46417},{\"end\":46429,\"start\":46424},{\"end\":46925,\"start\":46919},{\"end\":46936,\"start\":46929},{\"end\":46948,\"start\":46940},{\"end\":46957,\"start\":46952},{\"end\":47345,\"start\":47336},{\"end\":47570,\"start\":47564},{\"end\":47583,\"start\":47576},{\"end\":47595,\"start\":47587},{\"end\":48015,\"start\":48010},{\"end\":48030,\"start\":48019},{\"end\":48042,\"start\":48034},{\"end\":48433,\"start\":48425},{\"end\":48748,\"start\":48740},{\"end\":48758,\"start\":48752},{\"end\":48768,\"start\":48764},{\"end\":48780,\"start\":48772},{\"end\":48792,\"start\":48784},{\"end\":48803,\"start\":48796},{\"end\":48810,\"start\":48807},{\"end\":49085,\"start\":49077},{\"end\":49097,\"start\":49089},{\"end\":49109,\"start\":49101},{\"end\":49120,\"start\":49113},{\"end\":49133,\"start\":49124},{\"end\":49144,\"start\":49137},{\"end\":49534,\"start\":49531},{\"end\":49768,\"start\":49766},{\"end\":49778,\"start\":49772},{\"end\":50008,\"start\":49998},{\"end\":50017,\"start\":50012},{\"end\":50027,\"start\":50021},{\"end\":50039,\"start\":50031},{\"end\":50504,\"start\":50499},{\"end\":50516,\"start\":50510},{\"end\":50788,\"start\":50781},{\"end\":50801,\"start\":50792},{\"end\":50814,\"start\":50805},{\"end\":50825,\"start\":50818},{\"end\":51162,\"start\":51157},{\"end\":51338,\"start\":51333},{\"end\":51654,\"start\":51649},{\"end\":51665,\"start\":51658},{\"end\":51675,\"start\":51669},{\"end\":52054,\"start\":52049},{\"end\":52062,\"start\":52058},{\"end\":52075,\"start\":52066},{\"end\":52410,\"start\":52404},{\"end\":52422,\"start\":52414},{\"end\":52433,\"start\":52426},{\"end\":52800,\"start\":52794},{\"end\":52814,\"start\":52806},{\"end\":53075,\"start\":53070},{\"end\":53082,\"start\":53079},{\"end\":53092,\"start\":53086},{\"end\":53100,\"start\":53098},{\"end\":53114,\"start\":53104},{\"end\":53131,\"start\":53118},{\"end\":53482,\"start\":53477},{\"end\":53496,\"start\":53486},{\"end\":53791,\"start\":53784},{\"end\":53800,\"start\":53795},{\"end\":53811,\"start\":53804}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":21874346},\"end\":42793,\"start\":42500},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":7928706},\"end\":43178,\"start\":42795},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":2982398},\"end\":43581,\"start\":43180},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":60831637},\"end\":43862,\"start\":43583},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":667030},\"end\":44166,\"start\":43864},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":6663389},\"end\":44460,\"start\":44168},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":1158664},\"end\":44848,\"start\":44462},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":8385576},\"end\":45155,\"start\":44850},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":321256},\"end\":45475,\"start\":45157},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":696189},\"end\":45817,\"start\":45477},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":13789267},\"end\":46270,\"start\":45819},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":9399956},\"end\":46876,\"start\":46272},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":35840510},\"end\":47260,\"start\":46878},{\"attributes\":{\"id\":\"b13\"},\"end\":47496,\"start\":47262},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":2685895},\"end\":47928,\"start\":47498},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":6609280},\"end\":48375,\"start\":47930},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":7035050},\"end\":48719,\"start\":48377},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":7367040},\"end\":49034,\"start\":48721},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":8132160},\"end\":49491,\"start\":49036},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":117041671},\"end\":49696,\"start\":49493},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":12781727},\"end\":49922,\"start\":49698},{\"attributes\":{\"id\":\"b21\"},\"end\":50420,\"start\":49924},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":1460879},\"end\":50734,\"start\":50422},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":8108622},\"end\":51115,\"start\":50736},{\"attributes\":{\"id\":\"b24\"},\"end\":51292,\"start\":51117},{\"attributes\":{\"id\":\"b25\",\"matched_paper_id\":14840767},\"end\":51573,\"start\":51294},{\"attributes\":{\"id\":\"b26\"},\"end\":51989,\"start\":51575},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":8122125},\"end\":52332,\"start\":51991},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":15495694},\"end\":52729,\"start\":52334},{\"attributes\":{\"doi\":\"9405\",\"id\":\"b29\"},\"end\":52986,\"start\":52731},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":1571615},\"end\":53386,\"start\":52988},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":16610913},\"end\":53709,\"start\":53388},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":11657939},\"end\":54147,\"start\":53711}]", "bib_title": "[{\"end\":42539,\"start\":42500},{\"end\":42834,\"start\":42795},{\"end\":43263,\"start\":43180},{\"end\":43623,\"start\":43583},{\"end\":43952,\"start\":43864},{\"end\":44233,\"start\":44168},{\"end\":44498,\"start\":44462},{\"end\":44925,\"start\":44850},{\"end\":45233,\"start\":45157},{\"end\":45546,\"start\":45477},{\"end\":45867,\"start\":45819},{\"end\":46392,\"start\":46272},{\"end\":46915,\"start\":46878},{\"end\":47560,\"start\":47498},{\"end\":48006,\"start\":47930},{\"end\":48421,\"start\":48377},{\"end\":48736,\"start\":48721},{\"end\":49073,\"start\":49036},{\"end\":49525,\"start\":49493},{\"end\":49762,\"start\":49698},{\"end\":49994,\"start\":49924},{\"end\":50495,\"start\":50422},{\"end\":50777,\"start\":50736},{\"end\":51329,\"start\":51294},{\"end\":51645,\"start\":51575},{\"end\":52045,\"start\":51991},{\"end\":52400,\"start\":52334},{\"end\":53066,\"start\":52988},{\"end\":53473,\"start\":53388},{\"end\":53780,\"start\":53711}]", "bib_author": "[{\"end\":42549,\"start\":42541},{\"end\":42562,\"start\":42549},{\"end\":42569,\"start\":42562},{\"end\":42845,\"start\":42836},{\"end\":42857,\"start\":42845},{\"end\":42870,\"start\":42857},{\"end\":42880,\"start\":42870},{\"end\":43282,\"start\":43265},{\"end\":43297,\"start\":43282},{\"end\":43306,\"start\":43297},{\"end\":43318,\"start\":43306},{\"end\":43636,\"start\":43625},{\"end\":43966,\"start\":43954},{\"end\":43975,\"start\":43966},{\"end\":44246,\"start\":44235},{\"end\":44255,\"start\":44246},{\"end\":44267,\"start\":44255},{\"end\":44511,\"start\":44500},{\"end\":44520,\"start\":44511},{\"end\":44533,\"start\":44520},{\"end\":44936,\"start\":44927},{\"end\":44947,\"start\":44936},{\"end\":44958,\"start\":44947},{\"end\":45247,\"start\":45235},{\"end\":45260,\"start\":45247},{\"end\":45271,\"start\":45260},{\"end\":45560,\"start\":45548},{\"end\":45573,\"start\":45560},{\"end\":45584,\"start\":45573},{\"end\":45883,\"start\":45869},{\"end\":45895,\"start\":45883},{\"end\":46404,\"start\":46394},{\"end\":46415,\"start\":46404},{\"end\":46422,\"start\":46415},{\"end\":46431,\"start\":46422},{\"end\":46927,\"start\":46917},{\"end\":46938,\"start\":46927},{\"end\":46950,\"start\":46938},{\"end\":46959,\"start\":46950},{\"end\":47347,\"start\":47334},{\"end\":47572,\"start\":47562},{\"end\":47585,\"start\":47572},{\"end\":47597,\"start\":47585},{\"end\":48017,\"start\":48008},{\"end\":48032,\"start\":48017},{\"end\":48044,\"start\":48032},{\"end\":48435,\"start\":48423},{\"end\":48750,\"start\":48738},{\"end\":48760,\"start\":48750},{\"end\":48770,\"start\":48760},{\"end\":48782,\"start\":48770},{\"end\":48794,\"start\":48782},{\"end\":48805,\"start\":48794},{\"end\":48812,\"start\":48805},{\"end\":49087,\"start\":49075},{\"end\":49099,\"start\":49087},{\"end\":49111,\"start\":49099},{\"end\":49122,\"start\":49111},{\"end\":49135,\"start\":49122},{\"end\":49146,\"start\":49135},{\"end\":49536,\"start\":49527},{\"end\":49770,\"start\":49764},{\"end\":49780,\"start\":49770},{\"end\":50010,\"start\":49996},{\"end\":50019,\"start\":50010},{\"end\":50029,\"start\":50019},{\"end\":50041,\"start\":50029},{\"end\":50506,\"start\":50497},{\"end\":50518,\"start\":50506},{\"end\":50790,\"start\":50779},{\"end\":50803,\"start\":50790},{\"end\":50816,\"start\":50803},{\"end\":50827,\"start\":50816},{\"end\":51164,\"start\":51155},{\"end\":51340,\"start\":51331},{\"end\":51656,\"start\":51647},{\"end\":51667,\"start\":51656},{\"end\":51677,\"start\":51667},{\"end\":52056,\"start\":52047},{\"end\":52064,\"start\":52056},{\"end\":52077,\"start\":52064},{\"end\":52412,\"start\":52402},{\"end\":52424,\"start\":52412},{\"end\":52435,\"start\":52424},{\"end\":52802,\"start\":52790},{\"end\":52816,\"start\":52802},{\"end\":53077,\"start\":53068},{\"end\":53084,\"start\":53077},{\"end\":53094,\"start\":53084},{\"end\":53102,\"start\":53094},{\"end\":53116,\"start\":53102},{\"end\":53133,\"start\":53116},{\"end\":53484,\"start\":53475},{\"end\":53498,\"start\":53484},{\"end\":53793,\"start\":53782},{\"end\":53802,\"start\":53793},{\"end\":53813,\"start\":53802}]", "bib_venue": "[{\"end\":42631,\"start\":42569},{\"end\":42940,\"start\":42880},{\"end\":43362,\"start\":43318},{\"end\":43698,\"start\":43636},{\"end\":44008,\"start\":43975},{\"end\":44296,\"start\":44267},{\"end\":44593,\"start\":44533},{\"end\":44987,\"start\":44958},{\"end\":45300,\"start\":45271},{\"end\":45639,\"start\":45584},{\"end\":45991,\"start\":45895},{\"end\":46504,\"start\":46431},{\"end\":47014,\"start\":46959},{\"end\":47332,\"start\":47262},{\"end\":47670,\"start\":47597},{\"end\":48104,\"start\":48044},{\"end\":48508,\"start\":48435},{\"end\":48861,\"start\":48812},{\"end\":49219,\"start\":49146},{\"end\":49565,\"start\":49536},{\"end\":49797,\"start\":49780},{\"end\":50107,\"start\":50041},{\"end\":50562,\"start\":50518},{\"end\":50883,\"start\":50827},{\"end\":51153,\"start\":51117},{\"end\":51400,\"start\":51340},{\"end\":51737,\"start\":51677},{\"end\":52102,\"start\":52077},{\"end\":52495,\"start\":52435},{\"end\":52788,\"start\":52731},{\"end\":53166,\"start\":53133},{\"end\":53531,\"start\":53498},{\"end\":53886,\"start\":53813},{\"end\":42996,\"start\":42942},{\"end\":43718,\"start\":43700},{\"end\":44665,\"start\":44595},{\"end\":46083,\"start\":45993},{\"end\":46591,\"start\":46506},{\"end\":47077,\"start\":47016},{\"end\":47739,\"start\":47672},{\"end\":48171,\"start\":48106},{\"end\":48577,\"start\":48510},{\"end\":49288,\"start\":49221},{\"end\":50185,\"start\":50109},{\"end\":50935,\"start\":50885},{\"end\":51456,\"start\":51402},{\"end\":51793,\"start\":51739},{\"end\":52551,\"start\":52497},{\"end\":53955,\"start\":53888}]"}}}, "year": 2023, "month": 12, "day": 17}