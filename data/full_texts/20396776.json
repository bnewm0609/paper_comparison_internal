{"id": 20396776, "updated": "2022-03-13 18:07:32.274", "metadata": {"title": "TTPDrill: Automatic and Accurate Extraction of Threat Actions from Unstructured Text of CTI Sources", "authors": "[{\"first\":\"Ghaith\",\"last\":\"Husari\",\"middle\":[]},{\"first\":\"Ehab\",\"last\":\"Al-Shaer\",\"middle\":[]},{\"first\":\"Mohiuddin\",\"last\":\"Ahmed\",\"middle\":[]},{\"first\":\"Bill\",\"last\":\"Chu\",\"middle\":[]},{\"first\":\"Xi\",\"last\":\"Niu\",\"middle\":[]}]", "venue": null, "journal": "Proceedings of the 33rd Annual Computer Security Applications Conference", "publication_date": {"year": 2017, "month": null, "day": null}, "abstract": "With the rapid growth of the cyber attacks, sharing of cyber threat intelligence (CTI) becomes essential to identify and respond to cyber attack in timely and cost-effective manner. However, with the lack of standard languages and automated analytics of cyber threat information, analyzing complex and unstructured text of CTI reports is extremely time- and labor-consuming. Without addressing this challenge, CTI sharing will be highly impractical, and attack uncertainty and time-to-defend will continue to increase. Considering the high volume and speed of CTI sharing, our aim in this paper is to develop automated and context-aware analytics of cyber threat intelligence to accurately learn attack pattern (TTPs) from commonly available CTI sources in order to timely implement cyber defense actions. Our paper has three key contributions. First, it presents a novel threat-action ontology that is sufficiently rich to understand the specifications and context of malicious actions. Second, we developed a novel text mining approach that combines enhanced techniques of Natural Language Processing (NLP) and Information retrieval (IR) to extract threat actions based on semantic (rather than syntactic) relationship. Third, our CTI analysis can construct a complete attack pattern by mapping each threat action to the appropriate techniques, tactics and kill chain phases, and translating it any threat sharing standards, such as STIX 2.1. Our CTI analytic techniques were implemented in a tool, called TTPDrill, and evaluated using a randomly selected set of Symantec Threat Reports. Our evaluation tests show that TTPDrill achieves more than 82% of precision and recall in a variety of measures, very reasonable for this problem domain.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": "2771963642", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/acsac/HusariAACN17", "doi": "10.1145/3134600.3134646"}}, "content": {"source": {"pdf_hash": "8f5e4001c7b52d0e70644b11e7103c58d600b01b", "pdf_src": "ACM", "pdf_uri": null, "oa_url_match": false, "oa_info": null}, "grobid": {"id": "7b45e4ddb619435f333e0478cc46eaea187d7d42", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/8f5e4001c7b52d0e70644b11e7103c58d600b01b.txt", "contents": "\nTTPDrill: Automatic and Accurate Extraction of Threat Actions from Unstructured Text of CTI Sources\n\n\nGhaith Husari ghusari@uncc.edu \nDepartment of Soware and Information Systems\nUniversity of North Carolina at Charloe Charloe\nNCUSA\n\nEhab Al-Shaer ealshaer@uncc.edu \nDepartment of Soware and Information Systems\nUniversity of North Carolina at Charloe Charloe\nNCUSA\n\nMohiuddin Ahmed mahmed27@uncc.edu \nDepartment of Soware and Information Systems\nUniversity of North Carolina at Charloe Charloe\nNCUSA\n\nBill Chu billchu@uncc.edu \nDepartment of Soware and Information Systems\nUniversity of North Carolina at Charloe Charloe\nNCUSA\n\nXi Niu \nDepartment of Soware and Information Systems\nUniversity of North Carolina at Charloe Charloe\nNCUSA\n\nTTPDrill: Automatic and Accurate Extraction of Threat Actions from Unstructured Text of CTI Sources\n10.1145/3134600.3134646\nWith the rapid growth of the cyber aacks, sharing of cyber threat intelligence (CTI) becomes essential to identify and respond to cyber aack in timely and cost-eective manner. However, with the lack of standard languages and automated analytics of cyber threat information, analyzing complex and unstructured text of CTI reports is extremely time-and labor-consuming. Without addressing this challenge, CTI sharing will be highly impractical, and aack uncertainty and time-to-defend will continue to increase.Considering the high volume and speed of CTI sharing, our aim in this paper is to develop automated and context-aware analytics of cyber threat intelligence to accurately learn aack paern (TTPs) from commonly available CTI sources in order to timely implement cyber defense actions. Our paper has three key contributions. First, it presents a novel threat-action ontology that is suciently rich to understand the specications and context of malicious actions. Second, we developed a novel text mining approach that combines enhanced techniques of Natural Language Processing (NLP) and Information retrieval (IR) to extract threat actions based on semantic (rather than syntactic) relationship. ird, our CTI analysis can construct a complete aack paern by mapping each threat action to the appropriate techniques, tactics and kill chain phases, and translating it any threat sharing standards, such as STIX 2.1. Our CTI analytic techniques were implemented in a tool, called TTPDrill, and evaluated using a randomly selected set of Symantec reat Reports. Our evaluation tests show that TTPDrill achieves more than 82% of precision and recall in a variety of measures, very reasonable for this problem domain.\n\nINTRODUCTION\n\nCyber aacks have been rapidly increasing in both volume and sophistication [12]. is results in an information explosion of cyber threat intelligence (CTI) reports, much of which wrien in unstructured text, describing aack tactics, technique and procedures (TTP) for the sake of understanding and hunting malicious actors. It is very time-and labor-consuming to manually gather relevant information from this large body of CTI reports and analyze them in a Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for prot or commercial advantage and that copies bear this notice and the full citation on the rst page. Copyrights for components of this work owned by others than ACM must be honored. Abstracting with credit is permied. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specic permission and/or a fee. Request permissions from permissions@acm.org. timely manner. ese challenges can diminish the practical utility of threat information sharing, and signicantly increase both aack uncertainty and time-to-defend. On the other hand, actionable CTI such as blacklists (e.g., CleanMX [3] and URL PhishTank [22]) that provides observables and indicators of compromise (IoC) [21] such as IP addresses and URLs lacks the contextual information necessary to characterize the aack behavior, which is important for aack detection and mitigation.\n\nConsider Symantec threat reports shown in Figures 1 and 2 [4]. Figure 1 shows a description of Dimnie, an advanced threat that takes screen shots, logs keystrokes, and exltrates collected information to a remote location. Figure 2 shows MySafeSavings which displays pop-up ads. Knowing the threat actions associated with a black listed IP address, whether it is associated with Dimnie vs. MySafeSavings provides valuable context to prioritize valuable security resources and plan appropriate responses.\n\nGiven the speed at which threat information are shared and the large quantities of CTI reports, the aim of this paper is to develop automated analytics of cyber threat intelligence report to extract structured TTPs enabling timely and cost-eective implementation of cyber defense.\n\nis paper presents three key contributions in this area. First, we developed a threat-action ontology that incorporates novel concepts for describing aack paerns and techniques of cyber threats. Our proposed ontology provides contextually rich threat action specication that include the verb, object type and value, action preconditions (such as system conguration), and the action goal. In addition, our ontology captures the relationships between microlevel and macro-level concepts of cyber threats. e micro-level and macro-level concepts represent, respectively, the threat action and the corresponding kill-chain context in term of tactics and techniques. For instance, \"delete log le\" is an instance of a micro-level concept (threat action) that the adversary executes to achieve a macro-level concept such as \"defense evasion\" (tactic). us, the ontology captures the relationships between components of threat actions, the action tactical goal, and action strategic goal in the kill chain. We learn and construct this threat-action ontology semi-automatically based on MITRE's CAPEC and ATT&CK threat repository, which catalogs a rich set of pre-and post-exploit malicious actions. en, we build the ontology by following a top-down approach for creating the classes of the ontology. is processes is further explained in Section 3. e second contribution of this work is extracting threat actions from threat reports wrien in unstructured text, such as Symantec reports [4], and then mapping them to aack paerns and techniques (TTPs) incorporated in the threat-action ontology learned \"Trojan Dimnie is discovered March 28, 2017\" \"creates file\" \"creates registry entry\" \"query DNS server\" \"takes screenshots\" \"log keystrokes\" \"send stolen information to location\" from MITRE repositories. is was achieved through novel integration of concepts from Natural Language Processing or NLP (specically, Part-Of-Speech tagging [5]), and Information Retrieval IR (specically, TF-IDF method with BM25 weighting [25]) to identify and characterize malicious actions from a given CTI text. In NLP part, we carefully constructed a set of NLP rules based on our threat-action ontology, to identify words in the text that constitute a threat actions. Our NLP analysis can identify special terms such as \"le1.exe\" and maps them to words of meaningful semantic, \"executable le\" that can be understood by existing NLP tools [6]. In addition, we have incorporated WordNet [17], esaurus [8], and Watson Synonym [30]. e third contribution of this work is to map threat actions to the appropriate techniques, tactics and kill chain phases to construct full TTP represented in STIX Aack Paern [19], widely used in cyber threat information community.\n\nWe develop our proposed techniques in a tool, called TTPDrill, that can be used analyze any unstructured threat intelligence reports and extract threat actions and TTPs in a threat sharing format, such as STIX 2.1.  Figure 3: e Architecture of TTPDrill. Figure 3 overviews the major components of TTPDrill. First, it scrapes reports from websites, sanitizes text content, and discards irrelevant articles such as advertisements. en, using NLP Part-Of-Speech (POS) parsing, candidate threat actions (subject, verb, object) are extracted from each article. ese actions are then weighted and ltered using an enhanced BM25 TF-IDF method to nd best matches of threat actions in the threat ontology. is ontology contains threat actions of aack techniques and paerns described in ATT&CK [18] and CAPEC [1]. Table 1 shows an example of candidate threat actions extracted from the Symantec report of Trojan Dimnie using the Stanford Dependency Parser. A sample part of our ontology is shown in Table 2, where each row represents a threat action. We only show 5 aributes due to space limitation, see the appendix for more examples of threat actions. reat reports oen contains indicators of compromises (IoCs), e.g. specic IP addressed used by a malware. Such data confuses NLP tools. For this reason, we construct a list of regular expressions (regexes) to capture these values and replace them with meaningful words (in natural language). Figure 4 shows examples of this process.  We use an enhanced BM25 weighting function for the TF-IDF method [25] to match candidate actions to threat actions in the   [18] ontology. Enhancements are made to beer handle synonyms. If the similarity is above an empirically determined threshold, the candidate threat action is mapped to the ontology action with the highest matching score. For threat actions that have been successfully mapped to the threat action ontology, TTPDrill generates structured CTI reports using STIX Version 2.1 that contains these actions in addition to inferred aributes (from the ontology) such as intents, kill chain phases, etc. Table 3 shows a nal TTP identied based on the candidate actions in Table 1. Note that sometimes multiple candidate actions are mapped to one threat technique. For example, candidate actions \"create DLL le\" and \"create registry entry\", in Table 3, are mapped to DLL injection technique in the ontology. We will describe each of these steps in detail in the rest of the paper.\n\n\nTTPDRILL OVERVIEW\n\n\nTHREAT ACTION ONTOLOGY\n\nAn ontology is a formal description of a certain domain [20]. It consists of concepts (known as classes) found in the domain of interest. Classes may form an is-a hierarchy. Each class may have aributes (or properties) and instances. Although there have been previous eorts to create cyber-security-related ontologies, e.g. [13] [16], none of them capture the necessary details for threat actions needed to describe TTPs. Creating an ontology for adversaries and malware is a dicult task as the threat landscape is uid. Our approach is to create and maintain the threat ontology using MITRE'S ATT&CK and CAPEC eorts. First, ATT&CK and CAPEC has comprehensive list of known cyber aack tactics and techniques. Second, MITRE is commied to update these descriptions over time. Both ATT&CK and CAPEC are wrien in English. ere is no structured machine representation available\n\nWe take a top-down approach for creating our ontology. We start by creating classes for the most general concepts (e.g., adversary tactic) and move on to more specialized concepts (e.g., threat action), Figure 5 shows the high-level (\"KillChain Phase\") and the low-level (\"action\") concepts in our ontology. Table 4 lists types of classes in our threat ontology. We describe some key classes below.\n\nreat Action is a central class in our ontology. Each instance of this class is a specic threat action (i.e. verb). For example, \"modify\" is a threat action in the sentence \"modify registry to load malicious DLL\". Table 2 shows an excerpt of these actions. Each instance of threat action has a number of aributes which are lled with instances of other classes in the ontology. Example threat action aributes include Kill Chain Phase and Intent. Kill Chain is a compound aribute including type, name, and temporal order.\n\ntype is a String indicating the type of kill chain used. Although we consider the Lockheed Martin (LM) Kill Chain Model in this work [12], the type eld allows future extensions for other types of kill chain models. e Name has a String value that species the name of the kill chain phase (e.g., exploitation, control, etc.). Temporal order is an Integer value that contains the temporal order of the kill chain phase.\n\nClass Tactic describes the general strategy of a threat action (e.g., privilege escalation, exltration, etc.). ATT&CK provides 10 categories for all identied aack techniques while CAPEC provides 9 categories. Aer careful analysis of these categories, we extract their names as tactics and liked them to threat actions in the ontology accordingly.\n\nClass Technique species aack techniques under a certain tactic. For instance, privilege escalation is a tactic that can be accomplished by the technique DLL injection.   Class Name Class Description Kill Chain Phase Basic kill chain information like phase name (e.g., \"Control\"), phase temporal order (e.g., \"5\") Tactic\n\nGeneral description of how to achieve a phase (e.g., \"Privilege Escalation\") Technique\n\nMore specialized description of how to achieve a certain tactic (e.g., \"DLL Injection\") reat Action\n\nDescribes the verb to perform a malicious activity like overwrite, upload, terminate Object\n\nDescribes the action's target like \"le\" in \"delete le\", \"process\" in \"terminate process\", etc. Pre-condition Action perquisites, which are required prior to carrying out the action like having root privileges Intent Describes the goal (or subgoal) of the action like \"running malicious code\", \"information the\", etc.\n\nOur threat action ontology incorporates 392 threat actions that execute 187 aack paerns or techniques categorized under 19 tactics. Figure 5 shows an instantiated entry of the threat action ontology. A technique could be executed by several threat actions, for example, the technique Disabling Security Tools can be in the following threat actions: (1) killing (terminate) the process of the security soware, or by (2) delete the registry entry so that the security tool will not start at run time. Table 2 shows an excerpt of the of threat action ontology instances, where each row represents a threat action.\n\nTo evaluate our ontology, we perform completeness check by selecting 80 random Symantec threat reports and manually extracted a total of 1512 threat actions. e ontology contained 1364 of these actions (90%), while 148 actions were not in the ontology. However, actions that are not in the ontology are too general or trivial to be included in ATT&CK and CAPEC (e.g. \"display message, show picture\"). us, none of such actions convey substantive information about the threats.\n\n\nTHREAT ACTION EXTRACTION AND ANALYSIS\n\nTo automatically extract threat actions from public sources, rst the content of these sources needs to be scraped and sanitized to get rid of noise such as HTML tags. In its current design, TTPDrill expects each report to be about one specic malware. e name of the malware can be trivially identied (e.g. part of the title). We make this decision because a very large body of cyber threat intelligence reports are structured this way. We then identify and lter out irrelevant content (i.e., advertisements) that do not contain threat actions. TTPDrill then extracts candidate threat actions and maps them to known actions in the threat-action ontology. In this section we explain these steps in detail.\n\n\nScraping and Preprocessing\n\nScraper: e article archive scraper collects reports from a set of technical CTI websites (e.g., Symantec Security Center [4]). First, the scraper explores all links on each page of the website and downloads their contents. Some of the scraped articles (web pages) may contain information irrelevant to CTI such as advertisements, help, about, and contact-us. To overcome this challenge, we build a support vector machine (SVM) document classier to lter out articles with such content. However, before we do that, we must sanitize scraped texts.\n\nText sanitization: Articles scraped in the last step require preprocessing to remove presentation elements such as HTML tags, images, and ashes. We remove such elements by comparing all pages' DOM trees to locate the nodes that correspond to these elements. ese nodes can be identied because for a given source, they have same content on the page's DOM tree (e.g., the website logo picture will be the same for all articles). Once these nodes are identied, they are dropped.\n\nArticle classication:We refer to each web page as an article. Aer each article has been sanitized, it may not be relevant to CTI.\n\nTo lter out such articles, we built an SVM classier using the following features:\n\n\u2022 Number of words: Based on our observation, articles that contain TTPs are almost always longer (in number of words) because they communicate detailed descriptions about threats, their actions, and targets. Other articles, such as ads or news on security tools are considerably shorter. \u2022 SecurityAction-word density: we extract all verbs from various highly-reputable publicly-available information security standards, namely, ATT&CK, CAPEC, CWE, and CVE using part-of-speech (POS) NLP technique. To label verbs in these texts, we use Stanford Dependency Parser [6]. en, we calculate the SecurityAction-word density by computing the percentage of times these verbs appear in an article compared to the total number of words in it. e intuition behind this is that articles which describe cybersecurity threats will have a higher SecurityActionword density than other non-TTP containing articles (e.g., advertisement). \u2022 SecurityTarget-word density: TTP-containing articles describe threats, therefore, they contain more security nouns (e.g., registry, vulnerability) than their counterparts of non-TTP containing articles. Similar to the previous feature, we extract all noun phrases from the same information security standards and use them to calculate SecurityTargetword density, by computing the percentage of times the noun-phrase (extracted) appear in an article compared to the total number of words in it.\n\nWe train the classication model using 30 relevant (threat-actioncontaining) articles and 60 advertisement articles. We evaluated the model using 10-fold cross validation [28], and it achieved a recall of 99% and precision of 99%. To validate the classication results, we used this model to classify 17,000 articles scraped from Symentec security center [4] into either relevant or irrelevant categories and manually checked 100 randomly classied articles. Recall and precision of the classication were 99% and 98% respectively.\n\nRegular Expressions: Special terms used in threat reports confuse NLP tools. For instance, they have diculty parsing the following sentence: \"Malware connects to 192.168.1.1\" correctly due to the use of periods in the IP address. We built a set of regular expressions (regex) for common objects in our ontology such as IP address, port number, domain, etc. Once a regex matches a string, it replaces it with a generic name in preparation for further processing. For example, the string \"l 1.exe\" in the sentence \"create l 1.exe\" will be captured by a regex and replaced with the words \"executable le\", so the whole sentence will become \"create executable le\". Note that these strings (e.g. l 1.exe) are not discarded. We keep track of each replaced string for later use. For example, these values will be included in the generated STIX threat reports as specic indicators.\n\n\nreat Action Identication\n\nAs mentioned earlier, TTPDrill extracts threat actions from the collected articles in two steps. e rst step is to identify candidate threat actions that appear in threat reports. e second step is to map these candidate actions to threat actions in ontology based on a similarity score. In this section, we will detail the rst step.\n\nA threat action consists of a grammatical structure of Subject, Verb, and Object (SVO), where the subject is the name of a malware, the verb is the action, and the object is the target of the action. TTPDrill utilizes Stanford typed dependency parser [6] to identify and extract such structures. ese extracted SVOs are the candidate threat actions. Table 5 shows the Stanford typed dependencies used by TTPDrill to identify and extract candidate actions. Figure 6 shows an example of typed dependency output for the sentence \"Trojan Dimnie sends information to remote locations\". e nodes in the gure correspond to words or phrases, and the directed edges correspond to the type of the relationship between a source node and a destination node. e source node is called the governor, and the destination node is called the dependent [6]. For instance, the relation between  Figure 6: Typed dependency output of the sentence \"Trojan Dimnie sends information to remote locations\". the words \"Trojan\" and \"sends\" is labeled as \"nsubj\" (i.e., a noun phrase which is the syntactic subject of a clause). e governor of this relation is the verb \"sends\", and the dependent of this relation is \"Trojan\". So by using only the rst typed dependency in Table 5 (governor <verb>, dependent<subj>),the words \"Trojan sends\" are extracted from the text, as they have \"nsubj\" relation, a governor, and a dependent. Table 1 shows the entire set of candidate threat actions extracted using the typed dependencies shown in Table 5.\n\n\nreat Action Mapping and Filtering\n\nis section describe how TTPDrill maps each extracted candidate action to threat action(s) in the ontology. We measure the similarity between the candidate actions and known threat actions in the ontology by using the TF-IDF method with the enhanced BM25 weighing function. is function ranks the ontology entries based on their similarity to a given action extracted from a CTI report. For simplicity, we later call the score provided by the TF-IDF method with enhanced BM25 weight function, the IR-matching score. In calculating the similarity score, each ontology entry is represented as a document of a \"bag of words\" by concatenating all its classes (action, target, intent, etc). e similarity score was calculated  Figure 7: Workow of candidate action mapping to the ontology.\n\nbetween this document and a CTI extracted candidate action (as a query). Figure 7 shows an example of mapping candidate threat action to known aack techniques and paerns in the the threat action ontology. In the rst panel gure, an ontology entry is represented as a document with a bag of words; in the second panel gure, a candidate extracted action is viewed as a query (also a bag of words). Enhanced TF-IDF method with BM25 weighting was adopted to calculate the similarity between the two bags of words. Synonyms (such as \"logs\" and \"records\") were taken into consideration using WordNet, esaurus, and Watson Synonym to improve the text understanding.\n\nTTPDrill uses a cut-o threshold to eliminate threat actions with low similarity scores. We will discuss how this cut-o threshold is empirically determined in the evaluation section. Each candidate threat action is mapped to the threat action in the ontology with the highest score.\n\nMost single candidate actions map to known aack actions. We refer to such actions as primitive actions. However, sometimes a threat action involve multiple components, with each component corresponding to a single candidate actions. For instance, the following candidate threat actions: (1) Trojan Dimnie creates a DLL le, and (2) Trojan Dimnie modies registry, should be combined together and mapped to the known aack technique \"DLL Injection\". In this aack technique, the registry is modied to load a malicious DLL le. We refer to the combination of such actions as (composite action). Here is how we determine whether a candidate action should be kept single or be combined with other candidate actions to be mapped to an ontology entry. For each candidate action, we compute its similarity scores with each ontology entry. We then combine multiple candidate actions as a composite one and compute its similarity scores with each ontology entry as well to evaluate the increase of the similarity scores. e majority of actions are single actions (SVOs). We consider a composite action only if it brings a signicant increase in similarity score. We will discuss how this threshold of increase is identied in the evaluation section. We do not combine all permutations of primitive actions to composite actions, for example, it's unlikely that the rst action in an article to be combined with another action mentioned at the end of it. We only consider actions within a window of m sentences in the article to be candidates for composite actions. All permutations of the primitive actions within the window will be considered as possible composite actions. Our experiments showed that a window of three sentences (m=3) is sucient, as a longer window does not produce sense-making composite actions. Table 3 shows the output aer ltering and mapping candidate actions to known techniques in the ontology. It is worth noting that the rst two actions in the table are merged into one composite action and mapped to one technique (DLL Injection [18]).\n\n\nCONSTRUCTING TTP KILLCHAINS\n\nAer identifying threat actions and mapping them to the appropriate techniques, tactics, and kill chain phases, the TTPDrill automatically generates structured CTI reports that describe and detail the captured threat actions and the observed data in a structured manner. For this purpose, we use the popular CTI sharing language STIX v2.1 [19]. TTPDrill may map a candidate threat action to more than one aack technique in the ontology. is case occurs when there is a tie in the similarity score between the candidate threat action (x) and known techniques (t1 . . . tn). For instance, bm(x, t1) = bm(x, t2). For such cases, TTPDrill generates alternative sets of TTPs equal to the number of known techniques that had the same similarity score with the candidate threat action. Table 6 shows two possible TTPs for the Trojan Dimnie, where the last candidate action is mapped to two possible aack techniques in the ontology.\n\n\nTTP Identication\n\nAs mentioned earlier, TTPs describe how and what a threat does. ey are abstracted from observed threats to describe the paerns of malicious activities (i.e., threat actions) of a certain threat. Once threat actions have been mapped to known aack paerns and techniques as described in Section 4.3, actions that could not be mapped to known aack paerns and techniques, are discarded, so only actions that are recognized as known aack paerns and techniques are kept together as a TTP of the given threat.\n\nIn the next part, we describe how an identied TTP is put into STIX 2.1 format, to be shared with the sharing community.  \n\n\nGenerating TTP constructs\n\nIdentied threat actions in CTI reports are ltered then linked to an entry in the threat action ontology, so it is mapped to a known technique (e.g., DLL Injection technique in ATT&CK or SQL Injection aack paern in CAPEC), pre-condition (e.g., \"registry writeprivilege has been acquired\"), tactic (e.g., privilege escalation), and kill chain phase (e.g., exploit). As mentioned earlier, STIX denes a set of Domain Objects (SDOs) that correspond to common concepts represented in CTI. Using these objects and STIX relationships, TTPDrill can automatically create comprehensive and structured cyber threat intelligence. TTPDrill creates a STIX report for each threat by creating the relevant SDOs and lling the aributes of these SDOs and the relationships among them. In this part, we explain the aributes of these objects and relationships.\n\nAttack Pattern is a STIX object that describes and provides detailed information about how aacks are performed and the patterns that they follow. For example, \"Force Use of Corrupted Files\" is an aack paern where an aack forces an application to use a malicious le with the intent to bypass access controls, denial of service, or buer overows. e aack paern SDO has ve properties that TTPDrill lls as follows: (1) type: this is a required eld in STIX 2.1 and if an aack paern is identied, this value has to be lled with the string \"aack-paern\"; (2) external references: an optional value that contains external source e.g., capec, TTPDrill lls this eld the source name as \"capec\" and externalid as \"CAPEC-[id]\" (e.g., CAPEC-263), this format is specied by STIX 2.1; (3) name: the name of the aack paern (e.g., Force Use of Corrupted Files); (4) description: provides more details about the aack paern. TTPDrill lls this value with the technique description from the relevant threat action ontology entry. (5) killchain phases: this property contains a list of kill chain phases for the aack paern. is part is lled with the relevant kill chain phases in the ontology. Figure 8 shows an example of aack paern SDO created by TTPDrill for the aack technique Input Capture.\n\nObserved data is an object that captures the artifacts of malicious activities such as IP address, a le, or a registry value. is object contains ve properties, namely, (1) type, a required eld that must be lled with the string \"observable-data\", (2) rst observed, the timestamp when the data was observed for the rst time. TTPDrill lls this eld with the current timestamp when it { \"type\": \"attack-pattern\", \"id\": \"attack-pattern--0c7b5b88-8ff7-4a4d-aa9d-feb398cd0061\", \"created\": \"2017-06-8T08:17:27.000Z\", \"modified\": \"2017-06-8T08:17:27.000Z\", \"name\": \"Input Capture\", \"description\": \"Adversary logs keystrokes to obtain credentials\", \"kill_chain_phases\": \"Maintain\", \"external_references\":  observes the data for the rst time. (3) last observed, lled with the timestamp when the data was last observed. (4) number observed, lled with the number of times this data was observed. (5) objects, represents an object (or a list of objects) from a dictionary of cyber observable objects. For this purpose, TTPDrill utilizes CybOX language (as recommended by STIX 2.1) to create an observable object. CybOX Object Listing denes more than 80 objects ( Version 2.1 denes exactly 88 objects). For example, if a threat action creates a le (e.g.,badlib1.dll), TTPDrill identies the le in an article by its regex, then it creates the CybOX object file and reference it to the observed data object. Figure 9 shows an example of CybOX object.\n\n\n{\n\n\"type\": \"malware\", \"id\": \"malware--0c7b5b88-8ff7-4a4d-aa9d-feb398cd0061\", \"created\": \"2017-06-8T08:17:27.000Z\", \"modified\": \"2017-06-8T08:17:27.000Z\", \"name\": \"Dimnie\", \"description\": \"Threat performs DLL injection, system information discovery, screen capture, input capture, data exfiltration over\u2026\", \"labels\": [\"Trojan\"] \"kill_chain_phases\": [\"Control\",\"Execute\",\"Maintain\"] } Figure 10: Example of a STIX malware generated by TTP-Drill.\n\nMalware the Malware SDO characterizes a given malware through description property, which provides detailed information about how and what the malware does. is SDO has ve main properties, they are, (1) type, a String value that must be lled with the value \"malware\" as stated by STIX V2.1. (2) name, which is a String value, lled by TTPDrill with the name used to identify the malware (e.g., \"Dimnie\"). (3) label, which is the type of the malware being described (e.g., \"Trojan\"). (4) description, which is lled by TTPDrill with the known aack paerns or techniques that were mapped to the threat actions extracted from the threat report (e.g., \"DLL injection\"). (5) kill chain phases, this contains a list of kill chain phases for which this malware can be used. TTPDrill lls this list with the kill chain phases of the known aack paerns and techniques from the ontology. Figure 10 shows an example of a STIX malware SDO generated by TTPDrill for the malware \"Dimnie\". Vulnerability is an object that describes a bug in the soware that is exploited by a threat. When an article describes a threat that exploits a certain vulnerability, TTPDrill extracts the vulnerability from the threat's article using its corresponding regex and creates a STIX vulnerability object. is object has four main properties (1) type, lled with the string value \"vulnerability\". (2) external references, lled with CVE vulnerability identier (e.g., CVE-2017-0001).\n\n(3) name and (4) description are lled with the corresponding CVE name and description (scraped from CVE MITRE website). When an article mentioned a soware vulnerability that is related to the aack paern, TTPDrill, creates a relationship of type targets between an aack paern SDO and vulnerability SDO and lls the target eld with the vulnerability id to describe that the aack pattern exploits that vulnerability. For example, aack-paern: SQL injection targets vulnerability:CVE-2006-5525.\n\n\nEVALUATION\n\nWe successfully processed 17,000 threat reports from the Symantec website using TTPDrill. Figure 11 shows the threat action distribution over the threat reports. It is interesting that most threats aim to collect and exltrate data to remote locations. Furthermore, these threats gain the acquired privilege (i.e., privilege escalation) through registry modication and using DLL injection techniques. Our evaluation seeks to answer the following questions: (a) how to \n\n\nDetermining TTPDrill similarity score thresholds\n\nWe want to determine two thresholds for TTPDrill: cut o threshold for a single action and a composite action selection threshold. Cut o threshold For any candidate action x, we compute bm25(x, t) for all threat action t in our ontology. For any threat action t, if bm25(x, t) > S th , we consider t is a possible match for x. We selected a set of cut o threshold values and calculated their impact on precision, recall, and F 1 score for the 30 cases as depicted in Figure 12. Dierent factors may be considered in selecting the cut o threshold. A high threshold indicates a cautious approach: leaning towards accuracy of extracted threats rather than completeness. is strategy minimizes falsely labeled threat actions at the expense of missed threat actions. As shown the Figure, when S th is set to 14, the precision reaches 1 (100% accuracy) and recall drops to less than 0.5 (50% completeness). e other possible strategy is to lean towards extracting all of the threat actions at the expense of extracting mislabeled actions (false positives).\n\nAs we can see from the Figure, F 1 score reaches its maximum value when S th is set to 6. For the purpose of our evaluation, we pick 6 as the cut o threshold by giving equal weight to both precision and recall. ere may be situations where one may want to set the cut o threshold to favor precision over recall or vice versa. We discuss these substitutions next. Figure 12 shows that the optimal range for S th threshold that can keep a good balance between recall and precision values is between 4.0 and 6.5. In this range, the precision and recall values are within 75% 90% and 75% 85% ranges, respectively. Since seing S th to a value higher than 6.5 increases the precision slowly but decreases recall sharply, there is no obvious gain for selecting a threshold beyond this range for general cases.\n\nComposite actions threshold, C th , is a number in (0,1). For a set of threat action candidates c1, . . . , cn, it is considered a composite threat action and mapped to threat action t in our ontology i bm25({c1, . . . , cn}, t) > (1 + C th ) \u21e4 bm25(ci, t) for each of ci in this set, where bm25(ci, t) > S th for each ci. We use a similar approach to select the composite action threshold. Again, for this evaluation we select this threshold to maximize F 1 score. at threshold value is 0.8, we will map a threat action to a set of composite action candidates if the IR-Matching score of this mapping is 80% larger than mapping the same threat action to each action candidate separately.\n\n\nTTPDrill eectiveness\n\nWe selected another 50 Symantec reports to evaluate the eectiveness of TTPDrill. ere is no overlap between this 50 reports and the 30 reports we used to determine thresholds for TTPDrill. We rst manually analyzed these reports by mapping them to threat actions in our ontology. We then used TTPDrill to map these reports and compare its results with our manual mapping. At total of 813 candidate actions were involved in the 50 reports. TTPDrill agreed with human labeling 683 times, or 84%. In cases, multiple candidate actions map to the same threat technique. TTPDrill mapped 16% of candidate actions, or 130, dierently than our manual labeling. ese cases can can be separated into two groups: acceptable and mislabeled. e acceptable group consists of 85 candidate actions. For each case in this group, TTPDrill's mapping does not dier from human decision in fundamental way. For example, candidate action \"transfer data to remote location\" was manually-mapped to the ATT&CK technique Exltration Over Command and Control Channel. TTPDrill mapped this action to the ATT&CK technique Automated Exltration which transfers data to remote location using scripting. Although human decision is dierent from TTPDrill, they are very similar to each other as they are related to the same tactic , which is Exltration, and the same kill chain phase, Execute. Combining TTPDrill's labeling that either agrees with human decision or is an acceptable label, the precision for TTPDrill at extracting primitive actions is 94%. e other 45 candidate actions (5.6%) are mislabeled based on a high similarity score with an aack technique in the ontology. For example, candidate action \"trojan performs the following actions\", which is meant to list all actions that a malware does, is mislabeled as aack technique Scripting [18], that states \"perform multiple actions using scripts\". As part of future work, machine learning could be used to reduce such mislabeling.\n\nTTPDrill achieved 82% recall for primitive actions, which means 18% of candidate actions were dropped because of low IR-matching score as described in Section 4.3. ere are two main reasons for this, they are, (1) the verb in the candidate action is too general, and (2) the object in the candidate is a term unknown to the ontology. As an example for the the rst case, \"steal information\" is used in threat report rather than technically specic verbs such \"transfer\" or \"upload\" found in the ontology. Steal is not a synonym with either \"transfer\" or \"upload\". To human, one can easily understand \"steal information\" as either \"transfer\" or \"upload\" information. But it is dicult for the machine to infer this relationship. In the second case, a candidate threat contains a name of an application rather than the generic term \"application\" or \"soware\" that is known to the ontology, which results into discarding that threat action.\n\nFor instance, candidate action \"Trojan disables IE6\" is in the threat report. A human can easily understand \"IE6\" as an application. However, without a comprehensive database of application names, it is very dicult for the machine to make that connection. Signicantly increasing the recall rate requires to have a synonym list tailored for information technology and cybersecurity.\n\nAs mentioned earlier, some candidate actions are more meaningful in the context of other actions. Moreover, such actions are partial actions that only when combined with other actions, they become meaningful (as a composite-action). Table 3 shows an example of candidate actions \"create DLL le\" and \"modify registry\" are combined and mapped to aack technique DLL injection (ATT&CK technique T1055 [18]). For identifying composite actions, TTPDrill has a precision of 81%. Six composite actions were mislabeled. For example, candidate actions \"create le\" and \"execute trojan\" are mistakenly combined as execution through API.\n\nWe identied 31 composite threat actions in the selected 50 reports. TTPDrill correctly mapped 27 of them at a recall rate of 87%. e other missed 4 actions (13%) are missed due to two reasons: (1) the composite actions score was under the acceptable threshold for composite actions (i.e., C th ), and (2) the number of statements between the two actions was larger than our sentences window (m=3) discussed in Section 4.3. Further research is needed to improve precision and recall rates for mapping composite actions.\n\nTTPDrill may generate alternative sets of TTPs for a given threat. is is the case when there is a tie in the IR-matching score between a candidate action and two or more known threat actions in the ontology, as illustrated in Table 6. Over the 50 reports used in evaluation, half of them results in a single TTP. Half of the reports have less than 5 threat actions. Table 7 summarizes descriptive statistics of TTPs for the 50 reports. TTPDrill is ecient, it can process a threat report in under a second. Table 8 shows average execution time for TTPDrill to process reports of varying sizes. For example, TTPDrill takes less than 700 ms to process a threat report of 163 words that contained 47 candidate actions. is report contains the largest number of threat actions in our data set and therefore, can be seen as worst-case scenario in terms of required processing time. To demonstrate the robustness of TTPDrill, it successfully processed over 17,000 Symantec threat reports. Figure 11 shows the distribution of top 10 aack techniques found the threat reports.\n\n\nRELATED WORK\n\nCyber threat intelligence is vital for organizations and security community to defend against the rapidly-evolving cyber threats. Public threat reports such as Malware-don't-need-Coee [9], Symantec, Kaspersky, McAfee, reatExchange [10], and dibnet [7], are valuable sources for threat intelligence sharing. However, they are only available in unstructured text format. ere have been many eorts to provide standardized machine-readable format to facilitate cyber threat information sharing such as STIX [2] [19], YARA [29] and OpenIOC [15]. Our approach, TTPDrill, bridges the gap between unstructured threat information and structured threat tactics, techniques and procedures.\n\nCompared to other elds, such as medical informatics, NLP has only been used recently for cybersecurity research. Zhu et al. [31], proposed the FeatureSmith, a system that extracts Android malware behaviors (SVOs) from scientic papers using typed dependency and part-of-speech. To lter irrelevant behaviors, the system selects behaviors in the paper that contain the word Android. Liao et al. presented iACE, a technique for extracting IoCs (i.e., IPs, MD5 hashes of malicious les) from unstructured text. e technique uses a xed set of terms (e.g., aachment, download) and use regular expressions to identify artifacts (e.g., MD5-like string) in the text [14]. iACE lters sentences using NLP techniques. It extracts artifacts only. e work in [32] utilized NLP to extract the key terms of natural language privacy policies for analyzing web security. e works in [23] [24] analyzed Android application descriptions Using NLP to infer the permissions that they require. Saboke et, al. [26] built a classier that utilizes a set of features (e.g., specic words) to detect trending cyber aacks in tweets with the term \"CVE\".\n\nIn contrast, our work focuses on extracting malicious threat actions (SVOs) and aribute them to known aack paerns and techniques based on a threat-action ontology. is mapping, performed by our enhanced BM25 method, provides context information to assess the risk of a malware, e.g. whether it is stealing information or delivering adds as shown in Figures 1 and 2. To the best of our knowledge there is no other eort that provides the same level of accuracy and analysis . TTPDrill can be easily extended to generates a threat actions in any machine-readable threat sharing format, such as STIX, with rich context information from the threat-action ontology (intent, kill chain phase, etc.).\n\n\nCONCLUSION AND FUTURE WORK\n\nIn this paper, we present a TTPDrill tool that implements techniques for automatic extraction of threat actions and construction of TTP in STIX format from unstructured text of threat reports. TTPDrill develops novel enhanced techniques using both NLP and IR. We customize the state-of-the-art NLP techniques to extract the most relevant threat actions in cybersecurity domain from cyber threat intelligence reports. e extracted threat actions are suciently rich to describe the actions of the adversary, objects in cyberspace, preconditions to make this action successful, and the immediate goal of these actions. en, we map these actions to known aack paerns and techniques. using threat-action ontology that incorporates concepts to describe aack paerns and techniques. en, TTPDrill uses our novel enhanced version of TF-IDF with bm25 weighting method to classify threat actions to known aack paerns and techniques. is threat-action to aack techniques classication enables identifying the kill chain phases and learning the entire aack cycle.\n\nWe evaluated TTPDrill using 17,000 threat reports released by Symantec security center in the past 17 years. e tool achieved an average of 84% precision and 82% recall. TTPDrill also constructs structured CTI reports of these threats using the common cyber threat sharing language STIX 2.1 to be shared with the community. To the best of our knowledge, this is the rst work that addresses the automation of TTP extraction from unstructured sources with very reasonable accuracy.\n\nIn the future, we will extend this work by using dierent NLP parsers such as Google NLP API [11] and CCG parser [27] to extract threat actions from the threat reports to analyze and compare the performance and accuracy of these parsers. We will also extend our dataset of CTI reports to include dierent threat sources and dierent languages. Moreover, we will construct a TTP graph that includes the TTPs generated by this work for further analysis and prediction of new TTPs. \n\nACSAC 2017 ,\n2017Orlando, FL, USA \u00a9 2017 ACM. 978-1-4503-5345-8/17/12. . . $15.00 DOI: 10.1145/3134600.3134646\n\nFigure 1 :Figure 2 :\n12Example of Symantec report of an advanced threat.\"creates folder\" \"creates file\" \"creates registry entry\"\"display out of context pop-up advertisement\" Example of Symantec report of an adware.\n\nFigure 4 :\n4Example of observed data handling by regexes.\n\nFigure 5 :\n5Instance of the reat Action Ontology\n\nFigure 8 :\n8Example of a STIX attack pattern generated by TTPDrill.<cybox:Observable id=\"example:Observable-e24a-42b5-bb29-7bd56fa9655f\"> <cybox:Description>This is a file observation.</cybox:Description> <cybox:Object id=\"example:Object-1d3e6-4138-891b-291576dc5d41\"> <cybox:Properties xsi:type=\"FileObj:FileObjectType\"> <FileObj:File_Name>badlib1.dll</FileObj:File_Name> <FileObj:File_Path>\\Programs\\Startup\\</FileObj:File_Path> <FileObj:File_Extension>.dll</FileObj:File_Extension> </cybox:Properties> </cybox:Object> </cybox:Observable> </cybox:Observables>\n\nFigure 9 :\n9Example of a CybOX object generated by TTPDrill.\n\nFigure 11 :\n11reat Action distribution over 17,000 threat reports empirically determine the thresholds for similarity scores; (b) how successful TTPDrill is at extracting TTPs from the threat reports; and (c) how is the computation eciency of TTPDrill.\n\nFigure 12 :Figure 13 :\n1213e Impact of the cut o threshold S th on the ace Impact of the composite action threshold C th on the accuracy measures.\n\n\nStandard Standard Threat & blogarticles \n\nArticle \nArchive \nScraper \n\nText Content \nSanitization \n\nRelevant \nArticle \nClassification \n\nWeighing and \nFiltering \n\nCandidate \nThreat \nActions \n\nPreprocessing \n\nThreat \nAction \nPatterns \n\nTTP \nConstructs \n\nKill Chain Model \n\nDependency Parser \n\nTTPSig \n\nThreat Action \nIdentification \n\nTTP \nGeneration \n\nThreat Action Ontology \n\nDictionaries \n\n\n\n\n\u2022 The Trojan connects to 46.165.246.234\u2022 The worm uploads data to gmail.com/upload.php \u2022 It creates the following file f1.exe\u2022 The infection exploits CVE-2017-0001 \n\nIP address \n\nwebsite, domain \n\nexecutable file \n\nsoftware vulnerability \n\nobserved data \n\ncorresponding word \n\nregex matching \n\n\n\nTable 1 :\n1An example of candidate threat actions extraction threat description e Trojan Dimnie is used to steal information from the computer. \u2026 When the Trojan is executed, it creates the following le: lename1.dll\u2026e Trojan creates the following registry entries\u2026e Trojan may then perform the following actions: obtain system information, take screenshots, log keystrokes. e Trojan may send the stolen information to the following location:gmail.com/upload.phpcandidate actions \n\nuse Trojan Dimnie \nTrojan Dimnie steal information \nTrojan Dimnie steal from computer \nexecute Trojan \ncreates le: lename1.dll \nTrojan creates registry entry:HKEY LOCAL MACHINE.. \nTrojan perform actions \nobtain system information \ntake screenshots \nlog keystrokes \nTrojan send stolen information \nTrojan send to location:gmail.com/upload.php \n\n\n\nTable 2 :\n2An Excerpt of known threat actions in the ontologyAction \nObject \nIntent \nTactic \nTechnique \n\nsend \nTCP probe \nOS type \nCollect \nFingerprinting \ndiscovery \nInformation \n[1] \nlog \nkeystrokes \nobtain \nCollection, \nInput Capture \ncredentials \nCredential \n[18] \nAccess \nsend \ndata \nsteal \nExltration \nExltration \ninformation \nover Alternative \nProtocol \n\nTable 3 :\n3Dimnie candidate actions mapped to the ontologyCandidate \nObserved \nMapped \nactions \ndata(IoC) \ntechniques \n\ncreate DLL le \nlename1.dll \nDLL Injection \ncreate registry \nHKEY LOCAL MACHINE.. \nentry \nobtain system \n-\nSystem Information \ninformation \n-\nDiscovery \n\ntake screenshots \n-\nScreen Capture \n\nlog keystrokes \n-\nInput Capture \n\nsend information \ngmail.com/upload.php \nExltration over \nto location \nAlternative Protocol \n\n\n\nTable 4 :\n4reat Action Ontology Classes\n\nTable 5 :\n5Stanford typed dependencies used in this studytyped dependency \nreat Action \nnsubj \ngovernor <verb>, dependent.<subj> \ndobj \ngovernor<verb>, dependent.<obj> \nnsubjpass \ngovernor<verb>, dependent.<obj> \nnmod:agent \ngovernor<verb>, dependent.<subj> \nnmod:from \ngovernor<verb> from, dependent.<obj> \nnmod:to \ngovernor<verb> to, dependent.<obj> \nnmod:with \ngovernor<verb> with, dependent.<obj> \nnmod:via \ngovernor<verb> via, dependent.<obj> \nnmod:over \ngovernor<verb> over, dependent.<obj> \nnmod:for \ngovernor<verb> for, dependent.<obj> \nnmod:through \ngovernor<verb> through, dependent.<obj> \nnmod:using \ngovernor<verb> using, dependent.<obj> \nnmod:into \ngovernor<verb> into, dependent.<obj> \n\n\n\nTable 6 :\n6Example of alternative TTPs for Trojan Dimnie\n\nTable 7 :\n7statistics per threat articleSets of \nNumber of \nNumber of \nTTPs extracted Techniques in TTP Composite actions \n\nmedian \n2 \n5 \n1 \nmin \n1 \n3 \n0 \nmax \n4 \n12 \n2 \n\n\n\nTable 8 :\n8Running time for dierent article sizesaverage time total threat article length \n(ms/article) \nactions \n(in words) \n\n302 \n6 \n115 \n326 \n10 \n122 \n481 \n16 \n42 \n698 \n47 \n163 \n\n\n\nTable 9 :\n9Examples of Extracted reat Actions\n\nCommon aack paern enumeration and classication (capec) schema description. Barnum, Cigital IncS Barnum. 2008. Common aack paern enumeration and classi- cation (capec) schema description. Cigital Inc, hp://capec. mitre. org/documents/documentation/CAPEC Schema Descr iption v1 3 (2008).\n\nStandardizing cyber threat intelligence information with the Structured reat Information eXpression (STIX. MITRE Corporation. Sean Barnum, 11Sean Barnum. 2012. Standardizing cyber threat intelligence information with the Structured reat Information eXpression (STIX. MITRE Corporation 11 (2012).\n\nPublic Access ery for URL. Cleanmx, CleanMX. 2006. Public Access ery for URL. (2006). hp://support.clean-mx. com/clean-mx/viruses.php\n\nSymantec Security Center. Symantec Corp, Symantec Corp. 1995. Symantec Security Center. (1995). hps://www.symantec. com/security response/\n\nA practical part-of-speech tagger. Doug Cuing, Julian Kupiec, Jan Pedersen, Penelope Sibun, Proceedings of the third conference on Applied natural language processing. the third conference on Applied natural language processingAssociation for Computational LinguisticsDoug Cuing, Julian Kupiec, Jan Pedersen, and Penelope Sibun. 1992. A practical part-of-speech tagger. In Proceedings of the third conference on Applied natural language processing. Association for Computational Linguistics, 133-140.\n\ne Stanford typed dependencies representation. Marie-Catherine De Marnee, Christopher D Manning, Coling 2008: proceedings of the workshop on cross-framework and cross-domain parser evaluation. Association for Computational Linguistics. Marie-Catherine De Marnee and Christopher D Manning. 2008. e Stanford typed dependencies representation. In Coling 2008: proceedings of the workshop on cross-framework and cross-domain parser evaluation. Association for Compu- tational Linguistics, 1-8.\n\nDefense Industrial Base Cybersecurity Information Sharing Program. Dibnet, Dibnet. 2017. Defense Industrial Base Cybersecurity Information Sharing Pro- gram. (2017). hp://dibnet.dod.mil/\n\nMalware don't need Coee. Malware don't need Coee. 2012. (2012). hp://malware.dontneedcoee.com/\n\n. Google, Natural Language API. Google. 2017. Natural Language API. (2017). hps://cloud.google.com/ natural-language/\n\nIntelligencedriven computer network defense informed by analysis of adversary campaigns and intrusion kill chains. M Eric, Hutchins, J Michael, Cloppert, Rohan M Amin, Leading Issues in Information Warfare & Security Research. 180Eric M Hutchins, Michael J Cloppert, and Rohan M Amin. 2011. Intelligence- driven computer network defense informed by analysis of adversary campaigns and intrusion kill chains. Leading Issues in Information Warfare & Security Research 1 (2011), 80.\n\nTaxonomies of Aacks and Vulnerabilities in Computer Systems. V Igure, R Williams, 10.1109/COMST.2008.4483667Commun. Surveys Tuts. 10V. Igure and R. Williams. 2008. Taxonomies of Aacks and Vulnerabilities in Computer Systems. Commun. Surveys Tuts. 10, 1 (Jan. 2008), 6-19. hps: //doi.org/10.1109/COMST.2008.4483667\n\nAcing the IOC Game: Toward Automatic Discovery and Analysis of Open-Source Cyber reat Intelligence. Xiaojing Liao, Kan Yuan, Xiaofeng Wang, Zhou Li, Luyi Xing, Raheem Beyah, 10.1145/2976749.2978315Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16). the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)New York, NY, USAACMXiaojing Liao, Kan Yuan, XiaoFeng Wang, Zhou Li, Luyi Xing, and Raheem Beyah. 2016. Acing the IOC Game: Toward Automatic Discovery and Analysis of Open-Source Cyber reat Intelligence. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16). ACM, New York, NY, USA, 755-766. hps://doi.org/10.1145/2976749.2978315\n\nMANDIANT. 2011. e OpenIOC Framework. MANDIANT. 2011. e OpenIOC Framework. (2011). hp://www.openioc.org\n\nTaxonomies of cyber adversaries and aacks: a survey of incidents and approaches. Carol Meyers, Sarah Powers, Daniel Faissol, 7Lawrence Livermore National LaboratoryCarol Meyers, Sarah Powers, and Daniel Faissol. 2009. Taxonomies of cyber ad- versaries and aacks: a survey of incidents and approaches. Lawrence Livermore National Laboratory (April 2009) 7 (2009), 1-22.\n\nWordNet: a lexical database for English. A George, Miller, Commun. ACM. 38George A Miller. 1995. WordNet: a lexical database for English. Commun. ACM 38, 11 (1995), 39-41.\n\nAdversarial Tactics, Techniques & Common Knowledge (ATT&CK). Mitre, MITRE. 2014. Adversarial Tactics, Techniques & Common Knowledge (ATT&CK). (2014). hps://aack.mitre.org\n\nStandardizing cyber threat intelligence information with the Structured reat Information eXpression (STIX) Version 2.1. MITRE. 2017. Standardizing cyber threat intelligence information with the Structured reat Information eXpression (STIX) Version 2.1. (2017). hps: //oasis-open.github.io/cti-documentation/\n\nOntology development 101: A guide to creating your rst ontology. F Natalya, Deborah L Noy, Mcguinness, Natalya F Noy, Deborah L McGuinness, et al. 2001. Ontology development 101: A guide to creating your rst ontology. (2001).\n\nDeveloping an Ontology of the Cyber Security Domain. Leo Obrst, Penny Chase, Richard Markelo, STIDS. Leo Obrst, Penny Chase, and Richard Markelo. 2012. Developing an Ontology of the Cyber Security Domain.. In STIDS. 49-56.\n\nWHYPER: Towards Automating Risk Assessment of Mobile Applications. Rahul Pandita, Xusheng Xiao, Wei Yang, William Enck, Tao Xie, Presented as part of the 22nd USENIX Security Symposium (USENIX Security 13). USENIX. Washington, D.CRahul Pandita, Xusheng Xiao, Wei Yang, William Enck, and Tao Xie. 2013. WHYPER: Towards Automating Risk Assessment of Mobile Applications. In Presented as part of the 22nd USENIX Security Symposium (USENIX Security 13). USENIX, Washington, D.C., 527-542. hps://www.usenix.org/conference/ usenixsecurity13/technical-sessions/presentation/pandita\n\nAutoCog: Measuring the Description-to-permission Fidelity in Android Applications. Vaibhav Zhengyang, Xinyi Rastogi, Yan Zhang, Tiantian Chen, Zhong Zhu, Chen, 10.1145/2660267.2660287Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14). the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14)New York, NY, USAACMZhengyang , Vaibhav Rastogi, Xinyi Zhang, Yan Chen, Tiantian Zhu, and Zhong Chen. 2014. AutoCog: Measuring the Description-to-permission Fidelity in Android Applications. In Proceedings of the 2014 ACM SIGSAC Conference on Computer and Communications Security (CCS '14). ACM, New York, NY, USA, 1354-1365. hps://doi.org/10.1145/2660267.2660287\n\nSome simple eective approximations to the 2-poisson model for probabilistic weighted retrieval. E Stephen, Steve Robertson, Walker, Proceedings of the 17th annual international ACM SIGIR conference on Research and development in information retrieval. the 17th annual international ACM SIGIR conference on Research and development in information retrievalSpringer-Verlag New York, IncStephen E Robertson and Steve Walker. 1994. Some simple eective approxima- tions to the 2-poisson model for probabilistic weighted retrieval. In Proceedings of the 17th annual international ACM SIGIR conference on Research and development in information retrieval. Springer-Verlag New York, Inc., 232-241.\n\nVulnerability Disclosure in the Age of Social Media: Exploiting Twier for Predicting Real-World Exploits. Carl Saboke, Octavian Suciu, Tudor Dumitras, 24th USENIX Security Symposium (USENIX Security 15). USENIX Association. Washington, D.CCarl Saboke, Octavian Suciu, and Tudor Dumitras. 2015. Vulnerability Disclo- sure in the Age of Social Media: Exploiting Twier for Predicting Real-World Exploits. In 24th USENIX Security Symposium (USENIX Security 15). USENIX Association, Washington, D.C., 1041-1056. hps://www.usenix.org/conference/ usenixsecurity15/technical-sessions/presentation/saboke\n\nCombinatory Categorial Grammar Parser. Mark Steedman, Mark Steedman. 2017. Combinatory Categorial Grammar Parser. (2017). hp: //groups.inf.ed.ac.uk/ccg/\n\nCross-validatory choice and assessment of statistical predictions. Mervyn Stone, Journal of the royal statistical society. Series B (Methodological). Mervyn Stone. 1974. Cross-validatory choice and assessment of statistical pre- dictions. Journal of the royal statistical society. Series B (Methodological) (1974), 111-147.\n\n. Virustotal, VirusTotal. 2014. Yara. (2014). hp://plusvic.github.io/yara/\n\n. Watson, Watson Synonym Service. Watson. 2017. Watson Synonym Service. (2017). hp://watson.kmi.open.ac.uk/ API/explain-syn.html\n\nFeatureSmith: Automatically Engineering Features for Malware Detection by Mining the Security Literature. Ziyun Zhu, Tudor Dumitras, 10.1145/2976749.2978304Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16). the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16)New York, NY, USAACMZiyun Zhu and Tudor Dumitras. 2016. FeatureSmith: Automatically Engineering Features for Malware Detection by Mining the Security Literature. In Proceedings of the 2016 ACM SIGSAC Conference on Computer and Communications Security (CCS '16). ACM, New York, NY, USA, 767-778. hps://doi.org/10.1145/2976749. 2978304\n\nPrivee: An Architecture for Automatically Analyzing Web Privacy Policies. Sebastian Zimmeck, Steven M Bellovin, 23rd USENIX Security Symposium (USENIX Security 14). USENIX Association. San Diego, CASebastian Zimmeck and Steven M. Bellovin. 2014. Privee: An Architecture for Automatically Analyzing Web Privacy Policies. In 23rd USENIX Security Symposium (USENIX Security 14). USENIX Association, San Diego, CA, 1- 16. hps://www.usenix.org/conference/usenixsecurity14/technical-sessions/ presentation/zimmeck\n", "annotations": {"author": "[{\"end\":234,\"start\":103},{\"end\":367,\"start\":235},{\"end\":502,\"start\":368},{\"end\":629,\"start\":503},{\"end\":737,\"start\":630}]", "publisher": null, "author_last_name": "[{\"end\":116,\"start\":110},{\"end\":248,\"start\":240},{\"end\":383,\"start\":378},{\"end\":511,\"start\":508},{\"end\":636,\"start\":633}]", "author_first_name": "[{\"end\":109,\"start\":103},{\"end\":239,\"start\":235},{\"end\":377,\"start\":368},{\"end\":507,\"start\":503},{\"end\":632,\"start\":630}]", "author_affiliation": "[{\"end\":233,\"start\":135},{\"end\":366,\"start\":268},{\"end\":501,\"start\":403},{\"end\":628,\"start\":530},{\"end\":736,\"start\":638}]", "title": "[{\"end\":100,\"start\":1},{\"end\":837,\"start\":738}]", "venue": null, "abstract": "[{\"end\":2578,\"start\":862}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b9\"},\"end\":2673,\"start\":2669},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":3852,\"start\":3849},{\"end\":3875,\"start\":3871},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":3942,\"start\":3938},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":4167,\"start\":4164},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":6369,\"start\":6366},{\"end\":6525,\"start\":6510},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":6818,\"start\":6815},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":6901,\"start\":6897},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":7304,\"start\":7301},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7352,\"start\":7348},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":7390,\"start\":7386},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":7569,\"start\":7565},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":8407,\"start\":8403},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":8421,\"start\":8418},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9164,\"start\":9160},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":9223,\"start\":9219},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":10192,\"start\":10188},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":10460,\"start\":10456},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":12061,\"start\":12057},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":15596,\"start\":15593},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":17275,\"start\":17272},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":18298,\"start\":18294},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":18480,\"start\":18477},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":20141,\"start\":20138},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":20721,\"start\":20718},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":25199,\"start\":25195},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":25575,\"start\":25571},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":37660,\"start\":37656},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":39518,\"start\":39514},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":41531,\"start\":41528},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":41595,\"start\":41592},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":41849,\"start\":41846},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":41854,\"start\":41850},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":41865,\"start\":41861},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":41882,\"start\":41878},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":42151,\"start\":42147},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":42681,\"start\":42677},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":42768,\"start\":42764},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":42887,\"start\":42883},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":42892,\"start\":42888},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":43008,\"start\":43004},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":45487,\"start\":45483},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":45507,\"start\":45503}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":45979,\"start\":45868},{\"attributes\":{\"id\":\"fig_1\"},\"end\":46195,\"start\":45980},{\"attributes\":{\"id\":\"fig_2\"},\"end\":46254,\"start\":46196},{\"attributes\":{\"id\":\"fig_3\"},\"end\":46304,\"start\":46255},{\"attributes\":{\"id\":\"fig_5\"},\"end\":46867,\"start\":46305},{\"attributes\":{\"id\":\"fig_6\"},\"end\":46929,\"start\":46868},{\"attributes\":{\"id\":\"fig_7\"},\"end\":47183,\"start\":46930},{\"attributes\":{\"id\":\"fig_8\"},\"end\":47331,\"start\":47184},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":47723,\"start\":47332},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":48020,\"start\":47724},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":48847,\"start\":48021},{\"attributes\":{\"id\":\"tab_3\",\"type\":\"table\"},\"end\":49209,\"start\":48848},{\"attributes\":{\"id\":\"tab_4\",\"type\":\"table\"},\"end\":49648,\"start\":49210},{\"attributes\":{\"id\":\"tab_6\",\"type\":\"table\"},\"end\":49689,\"start\":49649},{\"attributes\":{\"id\":\"tab_7\",\"type\":\"table\"},\"end\":50392,\"start\":49690},{\"attributes\":{\"id\":\"tab_10\",\"type\":\"table\"},\"end\":50450,\"start\":50393},{\"attributes\":{\"id\":\"tab_11\",\"type\":\"table\"},\"end\":50623,\"start\":50451},{\"attributes\":{\"id\":\"tab_12\",\"type\":\"table\"},\"end\":50807,\"start\":50624},{\"attributes\":{\"id\":\"tab_13\",\"type\":\"table\"},\"end\":50854,\"start\":50808}]", "paragraph": "[{\"end\":4104,\"start\":2594},{\"end\":4608,\"start\":4106},{\"end\":4890,\"start\":4610},{\"end\":7621,\"start\":4892},{\"end\":10085,\"start\":7623},{\"end\":11002,\"start\":10132},{\"end\":11402,\"start\":11004},{\"end\":11922,\"start\":11404},{\"end\":12340,\"start\":11924},{\"end\":12688,\"start\":12342},{\"end\":13009,\"start\":12690},{\"end\":13097,\"start\":13011},{\"end\":13198,\"start\":13099},{\"end\":13291,\"start\":13200},{\"end\":13609,\"start\":13293},{\"end\":14221,\"start\":13611},{\"end\":14697,\"start\":14223},{\"end\":15441,\"start\":14739},{\"end\":16016,\"start\":15472},{\"end\":16492,\"start\":16018},{\"end\":16623,\"start\":16494},{\"end\":16706,\"start\":16625},{\"end\":18122,\"start\":16708},{\"end\":18651,\"start\":18124},{\"end\":19525,\"start\":18653},{\"end\":19885,\"start\":19554},{\"end\":21395,\"start\":19887},{\"end\":22213,\"start\":21433},{\"end\":22871,\"start\":22215},{\"end\":23154,\"start\":22873},{\"end\":25201,\"start\":23156},{\"end\":26155,\"start\":25233},{\"end\":26677,\"start\":26176},{\"end\":26800,\"start\":26679},{\"end\":27668,\"start\":26830},{\"end\":28937,\"start\":27670},{\"end\":30370,\"start\":28939},{\"end\":30816,\"start\":30376},{\"end\":32260,\"start\":30818},{\"end\":32750,\"start\":32262},{\"end\":33232,\"start\":32765},{\"end\":34331,\"start\":33285},{\"end\":35134,\"start\":34333},{\"end\":35824,\"start\":35136},{\"end\":37798,\"start\":35849},{\"end\":38732,\"start\":37800},{\"end\":39115,\"start\":38734},{\"end\":39741,\"start\":39117},{\"end\":40260,\"start\":39743},{\"end\":41327,\"start\":40262},{\"end\":42021,\"start\":41344},{\"end\":43140,\"start\":42023},{\"end\":43833,\"start\":43142},{\"end\":44909,\"start\":43864},{\"end\":45389,\"start\":44911},{\"end\":45867,\"start\":45391}]", "formula": null, "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":8430,\"start\":8423},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":8615,\"start\":8608},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":9718,\"start\":9711},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":9785,\"start\":9778},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":9956,\"start\":9949},{\"attributes\":{\"ref_id\":\"tab_6\"},\"end\":11319,\"start\":11312},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":11624,\"start\":11617},{\"attributes\":{\"ref_id\":\"tab_3\"},\"end\":14117,\"start\":14110},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":20243,\"start\":20236},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":21132,\"start\":21125},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":21289,\"start\":21282},{\"attributes\":{\"ref_id\":\"tab_7\"},\"end\":21394,\"start\":21387},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":24961,\"start\":24954},{\"attributes\":{\"ref_id\":\"tab_10\"},\"end\":26017,\"start\":26010},{\"attributes\":{\"ref_id\":\"tab_4\"},\"end\":39357,\"start\":39350},{\"attributes\":{\"ref_id\":\"tab_10\"},\"end\":40495,\"start\":40488},{\"attributes\":{\"ref_id\":\"tab_11\"},\"end\":40635,\"start\":40628},{\"attributes\":{\"ref_id\":\"tab_12\"},\"end\":40775,\"start\":40768}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":2592,\"start\":2580},{\"attributes\":{\"n\":\"2\"},\"end\":10105,\"start\":10088},{\"attributes\":{\"n\":\"3\"},\"end\":10130,\"start\":10108},{\"attributes\":{\"n\":\"4\"},\"end\":14737,\"start\":14700},{\"attributes\":{\"n\":\"4.1\"},\"end\":15470,\"start\":15444},{\"attributes\":{\"n\":\"4.2\"},\"end\":19552,\"start\":19528},{\"attributes\":{\"n\":\"4.3\"},\"end\":21431,\"start\":21398},{\"attributes\":{\"n\":\"5\"},\"end\":25231,\"start\":25204},{\"attributes\":{\"n\":\"5.1\"},\"end\":26174,\"start\":26158},{\"attributes\":{\"n\":\"5.2\"},\"end\":26828,\"start\":26803},{\"end\":30374,\"start\":30373},{\"attributes\":{\"n\":\"6\"},\"end\":32763,\"start\":32753},{\"attributes\":{\"n\":\"6.1\"},\"end\":33283,\"start\":33235},{\"attributes\":{\"n\":\"6.2\"},\"end\":35847,\"start\":35827},{\"attributes\":{\"n\":\"7\"},\"end\":41342,\"start\":41330},{\"attributes\":{\"n\":\"8\"},\"end\":43862,\"start\":43836},{\"end\":45881,\"start\":45869},{\"end\":46001,\"start\":45981},{\"end\":46207,\"start\":46197},{\"end\":46266,\"start\":46256},{\"end\":46316,\"start\":46306},{\"end\":46879,\"start\":46869},{\"end\":46942,\"start\":46931},{\"end\":47207,\"start\":47185},{\"end\":48031,\"start\":48022},{\"end\":48858,\"start\":48849},{\"end\":49220,\"start\":49211},{\"end\":49659,\"start\":49650},{\"end\":49700,\"start\":49691},{\"end\":50403,\"start\":50394},{\"end\":50461,\"start\":50452},{\"end\":50634,\"start\":50625},{\"end\":50818,\"start\":50809}]", "table": "[{\"end\":47723,\"start\":47365},{\"end\":48020,\"start\":47851},{\"end\":48847,\"start\":48483},{\"end\":49209,\"start\":48910},{\"end\":49648,\"start\":49269},{\"end\":50392,\"start\":49748},{\"end\":50623,\"start\":50492},{\"end\":50807,\"start\":50674}]", "figure_caption": "[{\"end\":45979,\"start\":45886},{\"end\":46195,\"start\":46004},{\"end\":46254,\"start\":46209},{\"end\":46304,\"start\":46268},{\"end\":46867,\"start\":46318},{\"end\":46929,\"start\":46881},{\"end\":47183,\"start\":46945},{\"end\":47331,\"start\":47212},{\"end\":47365,\"start\":47334},{\"end\":47851,\"start\":47726},{\"end\":48483,\"start\":48033},{\"end\":48910,\"start\":48860},{\"end\":49269,\"start\":49222},{\"end\":49689,\"start\":49661},{\"end\":49748,\"start\":49702},{\"end\":50450,\"start\":50405},{\"end\":50492,\"start\":50463},{\"end\":50674,\"start\":50636},{\"end\":50854,\"start\":50820}]", "figure_ref": "[{\"end\":4177,\"start\":4169},{\"end\":4336,\"start\":4328},{\"end\":7847,\"start\":7839},{\"end\":7885,\"start\":7877},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":9061,\"start\":9053},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":11215,\"start\":11207},{\"attributes\":{\"ref_id\":\"fig_3\"},\"end\":13751,\"start\":13743},{\"end\":20350,\"start\":20342},{\"end\":20767,\"start\":20759},{\"end\":22160,\"start\":22152},{\"end\":22296,\"start\":22288},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":28844,\"start\":28836},{\"attributes\":{\"ref_id\":\"fig_6\"},\"end\":30336,\"start\":30328},{\"end\":30765,\"start\":30756},{\"end\":31699,\"start\":31690},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":32864,\"start\":32855},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":33760,\"start\":33751},{\"end\":34064,\"start\":34057},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":34704,\"start\":34695},{\"attributes\":{\"ref_id\":\"fig_7\"},\"end\":41252,\"start\":41243},{\"end\":43505,\"start\":43490}]", "bib_author_first_name": "[{\"end\":51273,\"start\":51269},{\"end\":51609,\"start\":51601},{\"end\":51754,\"start\":51750},{\"end\":51768,\"start\":51762},{\"end\":51780,\"start\":51777},{\"end\":51799,\"start\":51791},{\"end\":52281,\"start\":52263},{\"end\":52303,\"start\":52290},{\"end\":53226,\"start\":53225},{\"end\":53244,\"start\":53243},{\"end\":53653,\"start\":53652},{\"end\":53662,\"start\":53661},{\"end\":54014,\"start\":54006},{\"end\":54024,\"start\":54021},{\"end\":54039,\"start\":54031},{\"end\":54050,\"start\":54046},{\"end\":54059,\"start\":54055},{\"end\":54072,\"start\":54066},{\"end\":54846,\"start\":54841},{\"end\":54860,\"start\":54855},{\"end\":54875,\"start\":54869},{\"end\":55172,\"start\":55171},{\"end\":55850,\"start\":55849},{\"end\":55867,\"start\":55860},{\"end\":55869,\"start\":55868},{\"end\":56067,\"start\":56064},{\"end\":56080,\"start\":56075},{\"end\":56095,\"start\":56088},{\"end\":56307,\"start\":56302},{\"end\":56324,\"start\":56317},{\"end\":56334,\"start\":56331},{\"end\":56348,\"start\":56341},{\"end\":56358,\"start\":56355},{\"end\":56901,\"start\":56894},{\"end\":56918,\"start\":56913},{\"end\":56931,\"start\":56928},{\"end\":56947,\"start\":56939},{\"end\":56959,\"start\":56954},{\"end\":57633,\"start\":57632},{\"end\":57648,\"start\":57643},{\"end\":58337,\"start\":58333},{\"end\":58354,\"start\":58346},{\"end\":58367,\"start\":58362},{\"end\":58867,\"start\":58863},{\"end\":59051,\"start\":59045},{\"end\":59620,\"start\":59615},{\"end\":59631,\"start\":59626},{\"end\":60260,\"start\":60251},{\"end\":60276,\"start\":60270},{\"end\":60278,\"start\":60277}]", "bib_author_last_name": "[{\"end\":50937,\"start\":50931},{\"end\":51280,\"start\":51274},{\"end\":51474,\"start\":51467},{\"end\":51614,\"start\":51610},{\"end\":51760,\"start\":51755},{\"end\":51775,\"start\":51769},{\"end\":51789,\"start\":51781},{\"end\":51805,\"start\":51800},{\"end\":52288,\"start\":52282},{\"end\":52311,\"start\":52304},{\"end\":52780,\"start\":52774},{\"end\":52999,\"start\":52993},{\"end\":53231,\"start\":53227},{\"end\":53241,\"start\":53233},{\"end\":53252,\"start\":53245},{\"end\":53262,\"start\":53254},{\"end\":53276,\"start\":53264},{\"end\":53659,\"start\":53654},{\"end\":53671,\"start\":53663},{\"end\":54019,\"start\":54015},{\"end\":54029,\"start\":54025},{\"end\":54044,\"start\":54040},{\"end\":54053,\"start\":54051},{\"end\":54064,\"start\":54060},{\"end\":54078,\"start\":54073},{\"end\":54853,\"start\":54847},{\"end\":54867,\"start\":54861},{\"end\":54883,\"start\":54876},{\"end\":55179,\"start\":55173},{\"end\":55187,\"start\":55181},{\"end\":55369,\"start\":55364},{\"end\":55858,\"start\":55851},{\"end\":55873,\"start\":55870},{\"end\":55885,\"start\":55875},{\"end\":56073,\"start\":56068},{\"end\":56086,\"start\":56081},{\"end\":56103,\"start\":56096},{\"end\":56315,\"start\":56308},{\"end\":56329,\"start\":56325},{\"end\":56339,\"start\":56335},{\"end\":56353,\"start\":56349},{\"end\":56362,\"start\":56359},{\"end\":56911,\"start\":56902},{\"end\":56926,\"start\":56919},{\"end\":56937,\"start\":56932},{\"end\":56952,\"start\":56948},{\"end\":56963,\"start\":56960},{\"end\":56969,\"start\":56965},{\"end\":57641,\"start\":57634},{\"end\":57658,\"start\":57649},{\"end\":57666,\"start\":57660},{\"end\":58344,\"start\":58338},{\"end\":58360,\"start\":58355},{\"end\":58376,\"start\":58368},{\"end\":58876,\"start\":58868},{\"end\":59057,\"start\":59052},{\"end\":59315,\"start\":59305},{\"end\":59387,\"start\":59381},{\"end\":59624,\"start\":59621},{\"end\":59640,\"start\":59632},{\"end\":60268,\"start\":60261},{\"end\":60287,\"start\":60279}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":51141,\"start\":50856},{\"attributes\":{\"id\":\"b1\"},\"end\":51438,\"start\":51143},{\"attributes\":{\"id\":\"b2\"},\"end\":51573,\"start\":51440},{\"attributes\":{\"id\":\"b3\"},\"end\":51713,\"start\":51575},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":7617879},\"end\":52215,\"start\":51715},{\"attributes\":{\"id\":\"b5\"},\"end\":52705,\"start\":52217},{\"attributes\":{\"id\":\"b6\"},\"end\":52893,\"start\":52707},{\"attributes\":{\"id\":\"b7\"},\"end\":52989,\"start\":52895},{\"attributes\":{\"id\":\"b8\"},\"end\":53108,\"start\":52991},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":6421896},\"end\":53589,\"start\":53110},{\"attributes\":{\"doi\":\"10.1109/COMST.2008.4483667\",\"id\":\"b10\",\"matched_paper_id\":41216552},\"end\":53904,\"start\":53591},{\"attributes\":{\"doi\":\"10.1145/2976749.2978315\",\"id\":\"b11\",\"matched_paper_id\":6118751},\"end\":54654,\"start\":53906},{\"attributes\":{\"id\":\"b12\"},\"end\":54758,\"start\":54656},{\"attributes\":{\"id\":\"b13\"},\"end\":55128,\"start\":54760},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":1671874},\"end\":55301,\"start\":55130},{\"attributes\":{\"id\":\"b15\"},\"end\":55473,\"start\":55303},{\"attributes\":{\"id\":\"b16\"},\"end\":55782,\"start\":55475},{\"attributes\":{\"id\":\"b17\"},\"end\":56009,\"start\":55784},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":36375},\"end\":56233,\"start\":56011},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":10077521},\"end\":56809,\"start\":56235},{\"attributes\":{\"doi\":\"10.1145/2660267.2660287\",\"id\":\"b20\",\"matched_paper_id\":17811541},\"end\":57534,\"start\":56811},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":2218552},\"end\":58225,\"start\":57536},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":17316176},\"end\":58822,\"start\":58227},{\"attributes\":{\"id\":\"b23\"},\"end\":58976,\"start\":58824},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":62698647},\"end\":59301,\"start\":58978},{\"attributes\":{\"id\":\"b25\"},\"end\":59377,\"start\":59303},{\"attributes\":{\"id\":\"b26\"},\"end\":59507,\"start\":59379},{\"attributes\":{\"doi\":\"10.1145/2976749.2978304\",\"id\":\"b27\",\"matched_paper_id\":12958836},\"end\":60175,\"start\":59509},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":1077913},\"end\":60684,\"start\":60177}]", "bib_title": "[{\"end\":51748,\"start\":51715},{\"end\":52261,\"start\":52217},{\"end\":53223,\"start\":53110},{\"end\":53650,\"start\":53591},{\"end\":54004,\"start\":53906},{\"end\":55169,\"start\":55130},{\"end\":56062,\"start\":56011},{\"end\":56300,\"start\":56235},{\"end\":56892,\"start\":56811},{\"end\":57630,\"start\":57536},{\"end\":58331,\"start\":58227},{\"end\":59043,\"start\":58978},{\"end\":59613,\"start\":59509},{\"end\":60249,\"start\":60177}]", "bib_author": "[{\"end\":50939,\"start\":50931},{\"end\":51282,\"start\":51269},{\"end\":51476,\"start\":51467},{\"end\":51616,\"start\":51601},{\"end\":51762,\"start\":51750},{\"end\":51777,\"start\":51762},{\"end\":51791,\"start\":51777},{\"end\":51807,\"start\":51791},{\"end\":52290,\"start\":52263},{\"end\":52313,\"start\":52290},{\"end\":52782,\"start\":52774},{\"end\":53001,\"start\":52993},{\"end\":53233,\"start\":53225},{\"end\":53243,\"start\":53233},{\"end\":53254,\"start\":53243},{\"end\":53264,\"start\":53254},{\"end\":53278,\"start\":53264},{\"end\":53661,\"start\":53652},{\"end\":53673,\"start\":53661},{\"end\":54021,\"start\":54006},{\"end\":54031,\"start\":54021},{\"end\":54046,\"start\":54031},{\"end\":54055,\"start\":54046},{\"end\":54066,\"start\":54055},{\"end\":54080,\"start\":54066},{\"end\":54855,\"start\":54841},{\"end\":54869,\"start\":54855},{\"end\":54885,\"start\":54869},{\"end\":55181,\"start\":55171},{\"end\":55189,\"start\":55181},{\"end\":55371,\"start\":55364},{\"end\":55860,\"start\":55849},{\"end\":55875,\"start\":55860},{\"end\":55887,\"start\":55875},{\"end\":56075,\"start\":56064},{\"end\":56088,\"start\":56075},{\"end\":56105,\"start\":56088},{\"end\":56317,\"start\":56302},{\"end\":56331,\"start\":56317},{\"end\":56341,\"start\":56331},{\"end\":56355,\"start\":56341},{\"end\":56364,\"start\":56355},{\"end\":56913,\"start\":56894},{\"end\":56928,\"start\":56913},{\"end\":56939,\"start\":56928},{\"end\":56954,\"start\":56939},{\"end\":56965,\"start\":56954},{\"end\":56971,\"start\":56965},{\"end\":57643,\"start\":57632},{\"end\":57660,\"start\":57643},{\"end\":57668,\"start\":57660},{\"end\":58346,\"start\":58333},{\"end\":58362,\"start\":58346},{\"end\":58378,\"start\":58362},{\"end\":58878,\"start\":58863},{\"end\":59059,\"start\":59045},{\"end\":59317,\"start\":59305},{\"end\":59389,\"start\":59381},{\"end\":59626,\"start\":59615},{\"end\":59642,\"start\":59626},{\"end\":60270,\"start\":60251},{\"end\":60289,\"start\":60270}]", "bib_venue": "[{\"end\":51942,\"start\":51883},{\"end\":54297,\"start\":54200},{\"end\":56465,\"start\":56450},{\"end\":57188,\"start\":57091},{\"end\":57891,\"start\":57788},{\"end\":58466,\"start\":58451},{\"end\":59859,\"start\":59762},{\"end\":60375,\"start\":60362},{\"end\":50929,\"start\":50856},{\"end\":51267,\"start\":51143},{\"end\":51465,\"start\":51440},{\"end\":51599,\"start\":51575},{\"end\":51881,\"start\":51807},{\"end\":52450,\"start\":52313},{\"end\":52772,\"start\":52707},{\"end\":52918,\"start\":52895},{\"end\":53021,\"start\":53001},{\"end\":53335,\"start\":53278},{\"end\":53719,\"start\":53699},{\"end\":54198,\"start\":54103},{\"end\":54691,\"start\":54656},{\"end\":54839,\"start\":54760},{\"end\":55200,\"start\":55189},{\"end\":55362,\"start\":55303},{\"end\":55593,\"start\":55475},{\"end\":55847,\"start\":55784},{\"end\":56110,\"start\":56105},{\"end\":56448,\"start\":56364},{\"end\":57089,\"start\":56994},{\"end\":57786,\"start\":57668},{\"end\":58449,\"start\":58378},{\"end\":58861,\"start\":58824},{\"end\":59126,\"start\":59059},{\"end\":59411,\"start\":59389},{\"end\":59760,\"start\":59665},{\"end\":60360,\"start\":60289}]"}}}, "year": 2023, "month": 12, "day": 17}