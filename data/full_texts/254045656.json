{"id": 254045656, "updated": "2023-10-05 07:35:03.045", "metadata": {"title": "Uniform Circle Formation for Fully, Semi-, and Asynchronous Opaque Robots with Lights \u22c6", "authors": "[{\"first\":\"Caterina\",\"last\":\"Feletti\",\"middle\":[]},{\"first\":\"Carlo\",\"last\":\"Mereghetti\",\"middle\":[]},{\"first\":\"Beatrice\",\"last\":\"Palano\",\"middle\":[]}]", "venue": "Applied Sciences", "journal": "Applied Sciences", "publication_date": {"year": 2023, "month": null, "day": null}, "abstract": "We study the Uniform Circle Formation ( UCF ) problem, which asks a swarm of mobile agents, arbi-trarily positioned onto the plane, to arrange on the vertices of a regular polygon. Each agent, customarily called robot, runs a distributed algorithm by executing a sequence of look-compute-move cycles. The robot swarm may adhere to three synchronization modes: fully synchronous, semi-synchronous, and asynchronous. Our robots are assumed to be punctiform, anonymous, and indistinguishable by their appearance; they do not store past actions or system snapshots, and they have neither a coordinate system nor chirality in common. Moreover, we consider opaque robots, i.e. they may have obstructed visibility due to collinearities. To cope with these strong limitations, we consider luminous robots, that is, they are equipped with a persistent light assuming different colors. This latter peculiarity represents the only way robots have to communicate. For all three synchronization modes, we solve the UCF problem with a constant number of colors. Concerning the running time, our solutions use a constant number of cycles (epochs) for fully synchronous (semi-synchronous) robots, and linearly many epochs in the worst-case for asynchronous robots.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": null, "mag": null, "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/ictcs/FelettiMPR22", "doi": "10.3390/app13137991"}}, "content": {"source": {"pdf_hash": "a3a3387b616129cb1f7f11955ec97806be48517b", "pdf_src": "DBLP", "pdf_uri": "[\"http://ceur-ws.org/Vol-3284/8511.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "be700a5d3c5b0dd2a4bc1bc0390815331195279f", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/a3a3387b616129cb1f7f11955ec97806be48517b.txt", "contents": "\nUniform Circle Formation for Fully, Semi-, and Asynchronous Opaque Robots with Lights \u22c6\n\n\nCaterina Feletti \nUniversit\u00e0 degli Studi di Milano\nItaly\n\nCarlo Mereghetti \nUniversit\u00e0 degli Studi di Milano\nItaly\n\nBeatrice Palano \nUniversit\u00e0 degli Studi di Milano\nItaly\n\nPriscilla Raucci \nUniversit\u00e0 degli Studi di Milano\nItaly\n\nUniform Circle Formation for Fully, Semi-, and Asynchronous Opaque Robots with Lights \u22c6\nAutonomous mobile robotsOpaque robotsLuminous robotsPattern formation\nWe study the Uniform Circle Formation (UCF) problem, which asks a swarm of mobile agents, arbitrarily positioned onto the plane, to arrange on the vertices of a regular polygon. Each agent, customarily called robot, runs a distributed algorithm by executing a sequence of look-compute-move cycles. The robot swarm may adhere to three synchronization modes: fully synchronous, semi-synchronous, and asynchronous. Our robots are assumed to be punctiform, anonymous, and indistinguishable by their appearance; they do not store past actions or system snapshots, and they have neither a coordinate system nor chirality in common. Moreover, we consider opaque robots, i.e. they may have obstructed visibility due to collinearities. To cope with these strong limitations, we consider luminous robots, that is, they are equipped with a persistent light assuming different colors. This latter peculiarity represents the only way robots have to communicate. For all three synchronization modes, we solve the UCF problem with a constant number of colors. Concerning the running time, our solutions use a constant number of cycles (epochs) for fully synchronous (semi-synchronous) robots, and linearly many epochs in the worst-case for asynchronous robots.\n\nIntroduction\n\nA well consolidated trend in the literature on distributed computing studies models and algorithms for agent-based computing systems, having great relevance in several real-world applications. In these systems, a swarm of mobile computing entities, called robots, has to cooperate to solve a given problem. Robots act under several assumptions on their capabilities and on a particular scenario. Of great importance are models where robots are autonomous, i.e. they work without a central control, and operate through a sequence of look-compute-move cycles in which each robot: (i) takes the snapshot of the system (look), (ii) executes a deterministic algorithm (compute), and (iii) travels to the computed destination, if any (move) [1,2,3,4].\n\nDifferent modeling assumptions are considered, affecting the computational power of robots. For instance, robots may have distinct identifiers (yielding the ability of distinguishing one robot from another) or, on the contrary, they may be anonymous. They may have a finite but persistent memory, which is preserved from one look-compute-move cycle to the next one. If no such memory exists, robots are said to be oblivious. A \"compromise\" between memory and obliviousness is given by luminous robots, featuring a persistent light assuming different colors as a means of communication as well. Another step towards realistic models is to work with no point-like (punctiform model) but fat robots, where all robots are supposed to be solid discs with a certain radius. Moreover, robots can be transparent, enabling a complete visibility of the system, or opaque. Depending on the nature of the problem, robots can move either on the Euclidean plane, or on a graph which can either be known in advanced or not. For robot activation policy, three models are proposed in the literature: fully synchronous, where all robots execute their cycle synchronously, semi-synchronous, where a subset of robots executes its cycle synchronously whereas the others remain idle, and asynchronous, where each robot acts asynchronously.\n\nSeveral research efforts focus on very basic classes of geometric pattern formation problems to be solved within such distributed environments [5,6,7,8,9,10,11,12,13,14]. In the Uniform Circle Formation problem, we ask robots to move to vertices of a common regular polygon whose number of vertices -known or not in advance -is exactly the number of robots in the system. This problem received a lot of attention from the literature (see, e.g., [15] for a survey) for both theoretical and practical reasons. From a practical point of view, a regular layout may present several advantages for a distributed system. E.g., for a network of mobile agents, it may be convenient to regularly displace them to facilitate communications, visibility and computations. Every agent is equidistant from its neighbors and has the same view of the system: this guarantees a fair communication, where there are no evident differences in the energy spent in sending messages. Moreover, this uniform pattern allows to implement distributed algorithms which guarantee a fair load balancing among the agents.\n\nIn [16], an algorithm for Uniform Circle Formation is designed, which asymptotically converges to a regular polygon. In [17], a semi-synchronous solution is given, starting from particular robot configurations. For asynchronous systems, the problem is solved in [18] for robots which are punctiform and transparent, and in [19] for fat robots with limited visibility and agreeing on common origin and axes.\n\nSo far, swarms of transparent robots have been mainly considered. In more realistic models, robots are assumed to be opaque so that they can obstruct visibility in case of collinearity. In this realm, the first natural problem to be tackled is Complete Visibility, where robots are required to displace on the plane so that each robot is visible to all others. For the Complete Visibility problem, opaqueness is a serious problem. Thus, additional robot capabilities might be considered. Solutions in the literature are proposed for luminous robots (see, e.g., [20,21,22,23,1,2]), i.e., robots with persistent lights assuming different colors. In [24], a (log ) time and (1) colors asynchronous algorithm is designed for Complete Visibility. In [25] ( [26]), the problem is solved by a (1) time and colors semi-synchronous (asynchronous) algorithm. In [27], a fault-tolerant algorithm for Complete Visibility is exhibited.\n\nIn [28], we focused on the Uniform Circle Formation (UCF) problem which, as recalled above, consists of displacing robots on the vertices of a common regular polygon. In particular, we exhibited an algorithm solving UCF for a swarm of opaque robots with lights only in the fully synchronous model, featuring six cycles and a constant number of colors. In the present paper, instead, we propose algorithms to solve UCF by opaque luminous robots in the fully, semi-, and asynchronous settings. In particular, the algorithm for the fully synchronous case improves the one in [28] in that it uses only three instead of six cycles and a constant number of colors. The semi-synchronous case is solved within constant time (epochs) and a constant number of colors. Finally, we adapt our algorithmic designs in order to obtain a solution for the asynchronous model, working in worst-case linear time (epochs) and with a constant number of colors.\n\nDue to page limit, some material and proofs have been omitted.\n\n\nPreliminaries\n\nWe overview the distributed system we shall be dealing with (see, e.g., [3,4,23] for details), and formally state the Uniform Circle Formation (UCF) problem. Robot swarms. Consider a finite set (swarm) of punctiform computational agents, called robots, which forms a distributed system located in the plane R 2 . These robots are: (i) anonymous and indistinguishable: they do not share any own identifier, (ii) autonomous: there is no central coordinator, (iii) homogeneous: they execute the same deterministic algorithm, (iv) oblivious: they do not remember any data about previous actions, (v) mobile: they can freely move on the plane, provided they never collide, (vi) rigid: they cannot be stopped before reaching the computed destination (i.e., no adversary can stop robot movement).\n\nThe robots are equipped with sensory capabilities to spot the positions of other robots. Moreover, they are able to compute in finite time and infinite precision any algebraic function of points in the plane. Also, we assume the following limitations on robots: (i) they do not know how many they are, (ii) they are disoriented: no agreement among the individual coordinate systems, nor on unit distance and chirality (roughly speaking, agreement on clockwise direction), (iii) they are opaque (not transparent): collinearity causes obstructed visibility. Indeed, these latter three inabilities introduce complications in algorithm design. E.g., due to opacity (iii) and lack of knowledge of the number of robots (i), each robot may not be able to know whether or not some robots are hidden at any given time. Clearly, this lack of the knowledge of the number of robots makes the system easily scalable. Moreover, the disorientation (ii) might cause robot collisions which may compromise system integrity. To deal with these adversities, we equip robots with a light displaying a certain number of different colors they can communicate through (see, e.g., [1,2,20,21,22,23]). We remark that such a light is the only means robots have to exchange information. When taking the system snapshot at any given time, a robot basically collects the coordinates -according to its own coordinate system -and the light color for any visible robot (itself included). So, operates in look-compute-move cycles, each executed in a single and atomic instant of time and consisting of the three phases:\n\n\u2022 Look: takes the instantaneous snapshot of the system. \u2022 Compute: runs a deterministic algorithm which, by having the snapshot as sole input, computes the destination point of and the (possibly) new color for the light of . \u2022 Move: sets its new color and moves straight towards the destination point computed above, without being stopped (rigidity assumption).\n\nDifferent models of robot activation and synchronization are studied. In the fully synchronous model, time is logically subdivided into global rounds. All robots are activated at every round occurring at each time . Since look-compute-move cycles are executed atomically, all robots terminate their cycle by the next round. The semi-synchronous model coincides with the fully synchronous model, except that not all robots are necessarily activated at every round. However, every robot is activated infinitely often (fair condition). In the asynchronous model, the robots are activated independently and each robot executes its look-compute-move cycle within an unpredictable but finite amount of time. There does not exist a common notion of time. Also, notice that the configuration perceived by a robot during its look phase -by which the robot computes its final destination -may significantly change before the robot starts moving. The UCF problem. We are now ready to present the UCF problem to be solved on fully, semi-, and asynchronous swarms of opaque robots with lights. Let a fully, semi-, or asynchronous swarm of robots be in any given initial valid configuration C 0 (i.e. where all the robots occupy a distinct point of the plane). The UCF problem asks the swarm to move from C 0 to a valid terminal configuration in which robots form a regular -gon.\n\n\nSome Notions and Results\n\nThroughout the paper, we will be working with swarms of at least 5 robots. This is due to some technicalities that can be dealt with, but that will be omitted here.\n\nLet a set of robots sit on their smallest enclosing circle (SEC). Two distinct robots , on the SEC delimit two arcs \u2322 (clockwise and counterclockwise). We say that and are adjacent whenever there is at least one of the two arcs \u2322 upon which no other robot sits. Clearly, in a robot swarm forming a regular -gon, each pair , of adjacent robots forms an angle of 2 / with the center of the SEC, formally\u0302\ufe02 = 2 / . Our strategies to move the robots on the vertices of a regular -gon (inscribed in the SEC) start by setting particular regular {3, 4, 5}-tuples. These tuples will not move for the whole computation, while the other robots will move to form the regular -gon. In particular, the pivots in such regular tuples will be crucial to set the main diameter of the SEC (see Definition 2).\n\nA key result for our algorithms is contained in the following Theorem 1. Let be the number of robots lying on the SEC.\n\n\u2022 For odd , there is a diameter passing through a robot and dividing the SEC into two halves, each having ( \u2212 1)/2 robots.\n\n\u2022 For even , there is a diameter dividing the SEC into two halves such that: ( ) either the diameter passes through a robot and the half-SECs have /2 and ( /2) \u2212 1 robots, or ( ) the diameter passes through two (opposite) robots and the half-SECs have ( /2) \u2212 1 robots each.\n\nAnother central role in our algorithms will be played by the notion of a main diameter. We distinguish between three cases, depending on the type of symmetry possessed by the robot swarm configuration:\nDefinition 2.\n\u2022 Asymmetry. A diameter settled according to Theorem 1 will be called the main diameter.\n\nIn this case, the main diameter has at least one robot at one endpoint, whose light will assume color pivot.\n\n\u2022 Symmetry with exactly one axis. We call main diameter the diameter laying on the symmetry axis. In this case, the main diameter does not necessarily pass through a robot with light of color pivot.\n\n\u2022 Rotational symmetry with two sectors. We call main diameter the diameter joining two opposite robots whose lights have color pivot.\n\nLet be a main diameter by Definition 2. Let be one of the nearest robots to but not laying on , and let \u2113( , ) be the distance from to . Moreover, let be one of the closest but not belonging to vertices of the regular polygon that has to be formed by our robot swarm. from . We call \u2032 and \u2032\u2032 the safe diameters of .\n\nFor rotational symmetries with more than two sectors, instead of safe diameters we will be considering safe chords: As we will see, a key operation of our algorithms is to set at most three robots on three points per each half-SEC, such points being actually three vertices of the regular polygon. The robots reaching such vertices will assume color angle or pivot. In the following theorem, we show that this can be done in a single cycle, provided robots share a common clockwise direction in the half-SEC they sit on: Definition 5. Two or more robots are said to be oriented whenever they agree on a common clockwise direction.\nDefinition 4. Let ( 1 , 1 , 2 ) and ( 3 , 2 , 4 ) be two adjacent\nFor a group of oriented robots, it is always possible to unambiguously spot robots to move within a cycle (e.g., the last ones according to the common orientation). This is crucial for the following Theorem 2. Given three oriented robots and three points on the same half-SEC, it is always possible for the robots to reach these points in a single cycle and avoiding collisions.\n\n\nThe Algorithm for the Fully Synchronous Case\n\nIn a first phase, all robots gain complete visibility of the swarm [25,26], and then move onto their SEC maintaining the knowledge of the exact number of robots in the system. The robots work out this phase by using a set of colors different from the colors used later on. This ensures robots are always aware of the ongoing phase.\n\nLet C H be the swarm configuration at this point; without loss of generality, we assume robots lights having the same color. Clearly, all robots are again vertices of a convex hull. The resulting dynamic of the algorithm depends on the type of this convex hull, in particular on its degree of symmetry. First of all, a special case occurs whenever the convex hull is perfect [29]. In this case, all robots lie onto the edges of the associated regular -gon (called supporting polygon, SP), two robots per alternate edges. The goal of our algorithm for this particular configuration is to slide robots along the edges of the SP, until they reach the vertices of the SP. Given a perfect convex hull, the SP is unique and computable in a single round: each robot takes its snapshot (look), checks whether the system configuration forms a perfect convex hull and computes the SP (compute), eventually slides along the edge until it reaches the correct vertex (move). Notice that two robots on the same edge head in opposite directions, and therefore no collision occurs. We remark that a biangular configuration 1 is a special case of perfect convex hull. Also in [18], the perfect convex hull and biangular configuration are dealt with as special cases at the beginning of their algorithm.\n\nLet us show how our algorithm works.\n\n\nCycle 1: pivots selection and angle setting\n\nFrom , we start setting the regular tuples which will be the reference points for the movements of the other robots. Once settled, a regular tuple will not move anymore, thus fixing once and for all for the whole robot swarm the angle 2 / of the regular -gon to be formed. As observed above, the dynamic of the algorithm depends on the degree of symmetry of . We distinguish between three cases: asymmetry, symmetry with exactly one axis, and rotational symmetry. Asymmetry. Consider the general case of asymmetry, i.e., no symmetry axis exists in . However, there exists at least one diameter passing through a robot and dividing the SEC into two halves, upon which robots distribute according to Theorem 1. The robot swarm must agree on one of such diameters, say , which by Definition 2 will be the main diameter. To find , robots agree on starting from a commonly designated robot and following a common orientation on the SEC. To perform this task, we need Lemma 1. Starting from the configuration and in case of asymmetry, all robots on the SEC are able to unambiguously agree on a robot .\n\nSo, let be the robot chosen by the swarm according to Lemma 1 (i.e., has the lexicograph-ically smallest angle-string 2 ). By the same reasoning, the swarm can also agree on a second robot with the lexicographically second-smallest angle-string and such that and are not the endpoints of the same diameter. (Note that such a can always be found since we are in an asymmetric configuration.) This allows us to have a starting robot (i.e., ) and an orientation on the SEC (i.e., the direction from to ), by which the main diameter search can be carried on: each robot starts checking whether the diameter through satisfies Theorem 1; if not, it tries with the next robot along the orientation settled by . Clearly, this process makes the whole swarm to converge on the claimed main diameter . Let be the position of the robot that determines . Such a position represents a vertex of the regular polygon to be formed, so the light of the robot on position assumes color pivot. Let us now distinguish between having an odd or even number of robots in the swarm. Here, we discuss the latter case.\n\nEven . By Theorem 1, one or two robots may sit at the endpoints of . In both cases, the robot at position has color pivot. Moreover, in the second case, the opposite robot on assumes color angle. Let us now continue discussing the first situation, since the second may be easily derived. By Theorem 1, one of the half-SEC, say + , has one more robot than the other, say \u2212 . So, a robot in + needs to move to the empty endpoint 3 (opposite to ) of and assume color angle. At the same time, two other positions 1 and 2 (regular polygon vertices) must be reached by two robots. These two positions correspond to the polygon vertices at the immediate left and right of . The three robots sat at positions 1 , , 2 form the regular 3-tuple.\n\nSo, globally, three robots must be moved: two from + and one from \u2212 , so that both the half-SECs contain the same number of robots at the end of this cycle. To determine which robots in + and \u2212 must move at the vertices of the polygon, we use the orientation provided by and : for instance, we choose the last robots by such an orientation. Then, Theorem 2 ensures that the three vertices will be safely reached by the robots. Summing up, each robot performs:\n\n\u2022 Look-Compute: unambiguously spots the pivot position on the main diameter.\n\nFurthermore, it computes the positions 1 , 2 , 3 and the robots heading to these positions. \u2022 Move: If is in the pivot position , then it does not move and sets its color as pivot. If is one of the robots heading to positions 1 , 2 , 3 , it moves there and sets its color as angle. Otherwise, does nothing.\n\nSymmetry with exactly one axis 3 . Let be the axis of symmetry in . By Definition 2, the diameter of the SEC lying on will be the main diameter. We consider three cases: odd , even with two axis pivots, and even with no axis pivot. Here, we discuss the odd case.\n\nOdd . Suppose that passes through a robot, which will be the pivot , and splits the opposite edge of the polygon. So, divides the SEC into two symmetric halves, each with ( \u2212 1)/2 robots ( excluded). Now, we aim to create the regular 3-tuple around , as well as setting two robots at the endpoints of the polygon edge opposite to . Therefore, two robots in each half-SEC must be moved. Even in this case, Theorem 2 ensures no crossing trajectories. However, notice that to apply Theorem 2 we need an orientation which in this case can be trivially settled in each half-SEC as being the direction from the pivot to the other endpoint of the diameter (namely, the main diameter) laying on the axis . To determine which robots in each half-SEC must move at the vertices of the polygon, we can choose, e.g., the last robots according to such an orientation. As in the asymmetric case discussed above, we call 1 and 2 the positions of the two polygon vertices around , while 3 and 4 are the positions of the two vertices of the polygon edge opposite to . Summing up, each robot performs:\n\n\u2022 Look-Compute: computes the axis of symmetry (and hence the main diameter) and the positions 1 , 2 , 3 , 4 of the polygon vertices. \u2022 Move: If is on , it sets its color as pivot and stays put. If is one of the robots heading to positions 1 , 2 , 3 , 4 , it gets there and sets its color as angle. Otherwise, does nothing.\n\nRotational symmetry. Let 0 , . . . , \u22121 be the sequence of robots consecutive on the SEC, starting from an arbitrary robot. If the related angle-string 0 \u00b7 \u00b7 \u00b7 \u22121 can be factored into identical substrings up to rotation, then the convex hull on the SEC can be divided into identical sectors, each being the 2 -rotation of the previous one. Let = { | \u2261 mod / } be the class of symmetry which contains / robots sharing the same position in the different sectors. By using angle-strings, we can unambiguously choose one or two classes of symmetry. For the sake of simplicity, in what follows we assume a single 4 main class of symmetry . The robots in will be the pivots. Note that, in case of rotational symmetry with two sectors, the diameter joining the two pivots will be the main diameter, by Definition 2. For more than two sectors, the chords joining pivots in two consecutive sectors will be the safe chords, by Definition 4. We now show how to set regular 3-tuples in this -angular configuration. Each robot performs:\n\n\u2022 Look-Compute: computes the main class of symmetry = { 1 , . . . , } and the positions { 1 , 2 | \u2208 {1, . . . , }} of the vertices which will be the nearest to elements in in the regular -gon. For a rotational symmetry with two (more than two) sectors, determining amounts to settle the main diameter (the safe chords) as well. \u2022 Move: If belongs to , it sets its color as pivot. If is the nearest robot to some 1 or 2 , it sets its color as angle and moves to its nearest destination point 1 or 2 . If two robots share the same distance from their destination, we can unambiguously choose one robot (as before) by considering the distance from the pivot. Otherwise, does nothing.\n\n\nCycle 2: rappelling down on the safe diameters or safe chords\n\nLet us distinguish among the following cases: One or two regular 3-tuples, or 4-tuples. Let us consider the cases of asymmetry, symmetry with one axis, and rotational symmetry with two sectors. Let be their main diameter, which is uniquely determined as observed above. Let \u2032 and \u2032\u2032 be their safe diameters. In this cycle, each robot performs:\n\n\u2022 Look-Compute: If is pivot or angle, it does nothing. Otherwise, computes: the safe diameters \u2032 and \u2032\u2032 , its destination point on the SEC, the point \u22a5 , which is the projection of on the safe diameter nearest to .\n\n\u2022 Move: sets its color as internal and travels to \u22a5 .\n\nThree or more regular 3-tuples. Let us consider the case of \u2265 3 regular 3-tuples. It is easy to see that this kind of configuration is a rotational symmetry. In this cycle, each robot performs:\n\n\u2022 Look-Compute: If is pivot or angle, it does nothing. Otherwise, computes: the nearest safe chord , its destination point on the SEC, the point \u22a5 , which is the projection of on . \u2022 Move: sets its color as internal and travels to \u22a5 .\n\nOur algorithm yields safe robot movements, as stated by the following Lemma 2. The rappelling in Cycle 2 of robots on safe diameters and chords yields collision-free trajectories.\n\n\nCycle 3: reaching the SEC\n\nAt the end of the previous cycle, each robot which is not pivot or angle colored lies on a safe diameter or on a safe chord. Our strategy was to move the robot to a position where enough information from the system configuration is available to compute its final destination on the SEC. So, in this cycle, each robot performs:\n\n\u2022 Look-Compute: If is pivot or angle colored, it does nothing. Otherwise, is within the SEC on a safe chord or a safe diameter, and sees at least three robots on the SEC which are pivot or angle colored. Thus, can reconstruct the SEC. So, computes: the original SEC upon which it has to travel, the safe chord or safe diameter it currently lies on, its destination arc , and the projection point of on . \u2022 Move: sets its color as sec and travels to .\n\n\nThe Algorithm for the Semi-Synchronous Case\n\nLet us outline our algorithm to solve UCF on the semi-synchronous model, pointing out main differences with the fully synchronous algorithm presented in the previous section. Again, we let C H be the swarm configuration where all robots sit onto their SEC, thus knowing the exact number of robots in the system. We assume robots lights having the same color. The dynamic of the algorithm depends on the degree of symmetry of C H .\n\nIt is worth remarking that, for the semi-synchronous model, an appropriate way to measure time is addressed by the notion of an epoch. By epoch, we mean an amount of time within which each robot will be activated at least once. This must occur by the fairness condition on the system, pointed out in Section 2. Asymmetry. In the first epoch, with the same dynamic as in the fully synchronous case, we set the color pivot to the robot through which the main diameter passes, dividing the swarm into two subs-swarms of the same cardinality.\n\nIn the second epoch, we set the color angle to robots, but now we need two different colors angle and angle_o to fix a common orientation. For odd (even) , we set one (two) regular 3-tuple(s) of type (angle, pivot, angle_o), plus two robots of colors angle_o and angle for odd . As in the fully synchronous setting, asymmetry always enables to provide a common orientation for the whole SEC.\n\nIn the third epoch, robots move to the main diameter. By the common orientation, the robots on a half-SEC can choose one of the two radiuses giving the main diameter. Then, they move onto such a radius as follows. An activated robot first checks whether it sits on an -gon vertex. If so and it is not already colored as pivot, angle, angle_o, then assumes color sec and ends its task. Otherwise, moves onto the radius in a position which univocally determines the polygon vertex on the SEC to be reached in the next epoch without collisions. At the beginning of the fourth epoch, all robots are on their own radius, except those on the SEC with light color pivot, angle, angle_o, sec. Each robot on the radiuses sees at least three lighted robots on the SEC. So, it computes its target vertex on the SEC by its current position. Symmetry with exactly one axis. While in the fully synchronous case, pivot and angle colors are both turned on in the first cycle, here we spend the first epoch to determine only those robots acting as pivot, and light them with new colors pivot_s1, pivot_s2, pivot_s3. Determining these robots takes place as in the fully synchronous case, while the new colors must be used to signal along the whole evolution the fact that the system starts in a configuration with a single symmetry axis. This latter fact turns out to be crucial since, due to semi-synchronous dynamics, at a certain instant it maybe the case that the initial symmetry is lost. We set pivot lights pivot_s1, pivot_s2, pivot_s3 depending on the odd or even number of robots and on the number of robots (zero, one or two) laying on the symmetry axis at the beginning of this epoch. Precisely: case a -pivot_s1 is used for an odd number of robots and one robot on the symmetry axis, case b -pivot_s2 is used for an even number of robots and no pivot on the symmetry axis, case c -pivot_s3 is used for an even number of robots and two pivots on the symmetry axis. So, in this first epoch, for cases a and c, the robots on the symmetry axis immediately assume color pivot_s1 and pivot_s3, respectively, and stay put. For case b, the robots nearest to the polygon vertices around the symmetry axis move to such positions and assume color pivot_s2 (the case of robots equally distant from these vertices can be dealt with, e.g., by considering their distance from the symmetry axis). Now, the second epoch comes: we move some robots on polygon vertices, and light them up with angle color. As in the fully synchronous case, robots can agree on an upper and a lower direction. So, in case a, a regular 3-tuple (angle, pivot_s1, angle) is formed in the upper part of the SEC, and a regular 4-tuple (angle, angle, angle, angle) in the lower part. For case b, a regular 4-tuple (angle, pivot_s2, pivot_s2, angle) is formed in the upper part of the SEC, and a regular 2-tuple (angle, angle) in the lower part. For case c, a regular 3-tuple (angle, pivot_s3, angle) is formed in the upper part of the SEC, and a regular 5-tuple (angle, angle, pivot_s3, angle, angle) in the lower part. We stress that in all these cases, no more than three robots per each half-SEC move to reach their final destinations. Hence, by Theorem 2, no crossing trajectory exists.\n\nFor the following epochs, we note that, given the type of symmetry we are considering, the whole swarm cannot share a common sense of orientation. So, in the third epoch, along which robots move into the SEC, they cannot choose a radius to drop on, as in the asymmetric case. Instead, as in the fully synchronous case, they can set safe diameters and move onto them on the orthogonal projections of polygon vertices. At this point, in the fourth epoch, robots get back to the SEC by leaving perpendicularly from safe diameters. It is worth mentioning that during this latter epoch, in all three cases a, b, and c at least three robots with lights on are always visible, so that the SEC can be safely reconstructed. Rotational symmetry. In the first epoch, we determine only those robots acting as pivot and light them with the new color pivot_r. This new color is used to signal along the whole evolution the fact that the system starts in a rotational symmetry configuration. Let \u210e > 2 be the number of rotational symmetry sectors (the case \u210e = 2 can be managed by adapting the asymmetric case technique). The following epochs basically take place as in the fully synchronous case. During the second epoch, we set \u210e regular 3-tuples (angle, pivot_r, angle); in the third epoch, robots drop down to the safe chords; in the fourth epoch, all robots get back to the SEC at polygon vertex positions.\n\n\nThe Algorithm for the Asynchronous Case\n\nIn an asynchronous setting, severe problems may arise whenever robots are activated while other robots are moving to their destinations. In fact, the awoken robots would take snapshots which most likely will not be useful to exactly reconstruct some fundamental aspects of the system (e.g., SEC, main diameters, safe diameters and chords), crucial for their correct motion. This is basically due to the fact that moving robots can obscure other robots. Moreover, even if this is not the case, we cannot generally compute the final destination of a moving robot. Clearly, this could prevent an activated robot from targeting its correct final destination, e.g., when reaching angle and pivot positions, or right positions on main diameter, safe diameters and chords. To overcome the problem of moving robots, new light colors of type moving are lighted up as soon as a robot starts moving. Thus, we can use our semi-synchronous algorithm plus the following features, depending on the phases of the algorithm:\n\n\u2022 In the first phase, pivots and then angles must be set, according to the same precedence logic as in the semi-synchronous mode. More precisely, if an activated robot does not see such points and does not see moving robots (i.e., robots with some moving light colors), it establishes whether or not it has to move towards a pivot or angle position. In the affirmative, its light assumes color moving_pivot_s2, or moving_angle, or moving_angle_o depending on its final destination, and the robot moves there. Once re-activated, a robot with color moving_x simply changes its color into x \u2208 {pivot_s2, angle, angle_o}, and stands still. Otherwise, if the robot does not have to reach a pivot or angle position, or it sees some robots with color light moving, then it stays put. \u2022 The second phase starts after setting angles and pivots. Robots enter the SEC on diameters and chords only if they see no other robot with color moving_internal. Activated robots that sit on -gon vertices and are not colored by pivot, angle, angle_o, assume color sec and stay put. When entering the SEC, a robot assumes color moving_internal. Once re-activated, a robot colored moving_internal simply switches its color into internal and stays put. \u2022 The third phase starts whenever on the SEC there are only robots with lights on (with colors pivot, pivot_r, pivot_s1, pivot_s2, pivot_s3, angle, angle_o, sec), and no robot is moving (i.e., has a light color of type moving). In this phase, robots get back to SEC from their positions on chords and diameters. A robot travels back only when it sees three light colors among pivot, angle, angle_o, so that it can reconstruct the SEC. If this is the case, it determines its -agon vertex position and moves there while assuming the color sec. Otherwise, it stays put. We notice that, along this phase, our algorithm takes full advantage of parallelization since the trajectory of moving robots cannot collide, as explained in the fully and semi-synchronous cases.\n\n\nConclusions and Research Outlooks\n\nIn this paper, we designed algorithms solving the Uniform Circle Formation (UCF) problem on opaque luminous robot swarms. Our first algorithm solves the problem for fully synchronous swarms of robots, by using a constant number of look-compute-move cycles as well as a constant number of colors. In particular, with respect to our result in [28], here we reduce the number of cycles from six to three. In addition, we also study the semi-synchronous and asynchronous cases. For the former setting, we propose an algorithm featuring a constant number of epochs; for the latter a linear amount of epochs is required in the worst case. In both settings, we use a constant number of colors. Among many possible future researches, we feel it interesting to pinpoint connections with Forma Language Theory. In the literature, and in the present paper as well, some interesting formal language aspects show up and, in our opinion, deserve further and more systematic investigations. For instance, as observed, recognizing certain types of symmetries in the robot swarm displacement reduces to verifying certain properties enjoyed by angle-strings. This is equivalent to accepting certain languages, such as the palindrome language, mirror language, copy language, etc.. Therefore, well established results on the hardness of language acceptance could carry over to distributed system investigation, stating the possibility or not to solving certain problems or the minimal amount of computational resources agents must posses to correctly operate.\n\nIn particular, considering the realm of luminous robots, the communication system provided by a constant number of colors is easily seen to be modeled by a finite state automaton. This observation might suggest, e.g., that minimizing the number of colors could be related to minimizing the number of states in finite state automata. More generally, finite state automata can be examined by so many points of view: descriptional complexity [30,31,32,33,34], studying the size (number of states) of automata, descriptive complexity [35], studying automata representation by logic frameworks, quantum computing [36,37,38], studying the impact of the quantum paradigm on finite state machines size reduction. All these and other viewpoints might bring interesting insights and new tools and research problems in distributed system investigation.\n\n\nProceedings of the 23rd Italian Conference on Theoretical Computer Science, Rome, Italy, September 7-9, 2022 \u22c6 Partially supported by UniMI through the Seal of Excellence (SoE) SEED 2020, under the project Self-Organizing Photonic Quantum Links (S-O PhoQuLis).\n\nDefinition 1 .\n1For any given 2 \u2264 \u2264 , let ( 1 , 2 , . . . , ) be a -tuple of distinct robots satisfying\u02c6\ufe02 +1 = 2 / for every 1 \u2264 < . Then, ( 1 , 2 , . . . , ) is said to be a regular -tuple. For odd (even > 2), the central robot \u2308 2 \u2309 (the central robots 2 , 2 +1 ) is the pivot (are the pivots) of the regular -tuple.\n\nDefinition 3 .\n3Let \u2032 and \u2032\u2032 be the two opposite chords parallel to a main diameter , at distance min{\u2113( , ),\u2113( , )} 2\n\n\nregular 3-tuples (i.e., without any other 3-tuple on the arcs ), and suppose that 1 and 2 are not the two endpoints of a same diameter. The chord joining 1 and 2 is called a safe chord.\nA set of \u2265 2 robots forms a biangular configuration if robots lie on a circle centered in , and two non zero angles , exist such that for every pair and of robots consecutive on , we have\u0302\ufe02 \u2208 { , } and and alternate clockwise[29].\nLet 0, . . . , \u22121 be a listing of the robots on the SEC so that they are consecutive, i.e., and +1 are adjacent for every 0 \u2264 < \u2212 1. Let =\u02c6\ufe01 ( +1) mod . The corresponding angle-string is 0 \u00b7 \u00b7 \u00b7 \u22121. 3 Two or more symmetry axes yield a rotational symmetry, considered in the next case.\nThe case of two classes of symmetry follows by generalization.\nAcknowledgmentsThe authors wish to thank the anonymous referees for their very helpful comments and remarks.\nSynchronous robots vs asynchronous lights-enhanced robots on graphs. M Emidio, D Frigioni, A Navarra, Electronic Notes in Theoretical Computer Science. 322M. D'Emidio, D. Frigioni, A. Navarra, Synchronous robots vs asynchronous lights-enhanced robots on graphs, Electronic Notes in Theoretical Computer Science 322 (2016) 169-180.\n\nCharacterizing the computational power of anonymous mobile robots. M Emidio, D Frigioni, A Navarra, 36th IEEE International Conference on Distributed Computing Systems (ICDCS). IEEEM. D'Emidio, D. Frigioni, A. Navarra, Characterizing the computational power of anony- mous mobile robots, in: 36th IEEE International Conference on Distributed Computing Systems (ICDCS), IEEE, 2016, pp. 293-302.\n\nDistributed computing by oblivious mobile robots. P Flocchini, G Prencipe, N Santoro, Synthesis Lectures on Distributed Computing Theory. 3P. Flocchini, G. Prencipe, N. Santoro, Distributed computing by oblivious mobile robots, Synthesis Lectures on Distributed Computing Theory 3 (2012) 1-185.\n\nDistributed Computing by Mobile Entities. Current Research in Moving and Computing. P Flocchini, G Prencipe, N Santoro, LNCS. 11340SpringerP. Flocchini, G. Prencipe, N. Santoro, Distributed Computing by Mobile Entities. Current Research in Moving and Computing, volume 11340 of LNCS, Springer, 2019.\n\nCircle formation by asynchronous opaque robots on infinite grid. R Adhikary, M K Kundu, B Sau, Computer Science. 22R. Adhikary, M. K. Kundu, B. Sau, Circle formation by asynchronous opaque robots on infinite grid, Computer Science 22 (2021).\n\nArbitrary pattern formation by asynchronous opaque robots with lights. K Bose, M K Kundu, R Adhikary, B Sau, Theoretical Computer Science. 849K. Bose, M. K. Kundu, R. Adhikary, B. Sau, Arbitrary pattern formation by asynchronous opaque robots with lights, Theoretical Computer Science 849 (2021) 138-158.\n\nGathering of fat robots with limited visibility and without global navigation. K Bolla, T Kovacs, G Fazekas, Int. Symposium on Evolutionary Computation/Swarm Intelligence and Differential Evolution. Springer7269K. Bolla, T. Kovacs, G. Fazekas, Gathering of fat robots with limited visibility and without global navigation, in: Int. Symposium on Evolutionary Computation/Swarm Intelligence and Differential Evolution (EC/SIDE), volume 7269 of LNCS, Springer, 2012, pp. 30-38.\n\nGathering few fat mobile robots in the plane. J Czyzowicz, L Gasieniec, A Pelc, Theoretical Computer Science. 410J. Czyzowicz, L. Gasieniec, A. Pelc, Gathering few fat mobile robots in the plane, Theoretical Computer Science 410 (2009) 481-499.\n\nGathering of robots in a ring with mobile faults. S Das, R Focardi, F L Luccio, E Markou, M Squarcina, Theoretical Computer Science. 764S. Das, R. Focardi, F. L. Luccio, E. Markou, M. Squarcina, Gathering of robots in a ring with mobile faults, Theoretical Computer Science 764 (2019) 42-60.\n\nCircle formation by asynchronous transparent fat robots. S Datta, A Dutta, S Gan Chaudhuri, K Mukhopadhyaya, 9th International Conference on Distributed Computing and Internet Technology (ICDCIT). Springer7753S. Datta, A. Dutta, S. Gan Chaudhuri, K. Mukhopadhyaya, Circle formation by asyn- chronous transparent fat robots, in: 9th International Conference on Distributed Comput- ing and Internet Technology (ICDCIT), volume 7753 of LNCS, Springer, 2013, pp. 195-207.\n\nGathering of asynchronous robots with limited visibility. P Flocchini, G Prencipe, N Santoro, P Widmayer, Theoretical Computer Science. 337P. Flocchini, G. Prencipe, N. Santoro, P. Widmayer, Gathering of asynchronous robots with limited visibility, Theoretical Computer Science 337 (2005) 147-168.\n\nDistributed algorithms for formation of geometric patterns with many mobile robots. K Sugihara, I Suzuki, Journal of Robotic Systems. 13K. Sugihara, I. Suzuki, Distributed algorithms for formation of geometric patterns with many mobile robots, Journal of Robotic Systems 13 (1996) 127-139.\n\nDistributed anonymous mobile robots: Formation of geometric patterns. I Suzuki, M Yamashita, SIAM Journal on Computing. 28I. Suzuki, M. Yamashita, Distributed anonymous mobile robots: Formation of geometric patterns, SIAM Journal on Computing 28 (1999) 1347-1363.\n\nCharacterizing geometric patterns formable by oblivious anonymous mobile robots. M Yamashita, I Suzuki, Theoretical Computer Science. 411M. Yamashita, I. Suzuki, Characterizing geometric patterns formable by oblivious anony- mous mobile robots, Theoretical Computer Science 411 (2010) 2433-2453.\n\nUniform circle formation. G Viglietta, Distr. Comp. by Mobile Entities. Current Research in Moving and Computing. Springer11340G. Viglietta, Uniform circle formation, in: Distr. Comp. by Mobile Entities. Current Research in Moving and Computing, volume 11340 of LNCS, Springer, 2019, pp. 83-108.\n\nCircle formation for oblivious anonymous mobile robots with no common sense of orientation. X D\u00e9fago, A Konagaya, 2nd ACM International Workshop on Principles of Mobile Computing (POMC). X. D\u00e9fago, A. Konagaya, Circle formation for oblivious anonymous mobile robots with no common sense of orientation, in: 2nd ACM International Workshop on Principles of Mobile Computing (POMC), 2002, pp. 97-104.\n\nSquaring the circle with weak mobile robots. Y Dieudonn\u00e9, F Petit, 19th Int. Symp. on Algorithms and Computation. Springer5369Y. Dieudonn\u00e9, F. Petit, Squaring the circle with weak mobile robots, in: 19th Int. Symp. on Algorithms and Computation (ISAAC), volume 5369 of LNCS, Springer, 2008, pp. 354-365.\n\nDistributed computing by mobile robots: uniform circle formation, Distributed Computing. P Flocchini, G Prencipe, N Santoro, G Viglietta, 30P. Flocchini, G. Prencipe, N. Santoro, G. Viglietta, Distributed computing by mobile robots: uniform circle formation, Distributed Computing 30 (2017) 413-457.\n\nUniform circle formation by swarm robots under limited visibility. M Mondal, S Gan, Chaudhuri, 16th International Conference on Distributed Computing and Internet Technology (ICDCIT). Springer11969M. Mondal, S. Gan Chaudhuri, Uniform circle formation by swarm robots under limited visibility, in: 16th International Conference on Distributed Computing and Internet Technology (ICDCIT), volume 11969 of LNCS, Springer, 2020, pp. 420-428.\n\nAutonomous mobile robots: Refining the computational landscape. K Buchin, P Flocchini, I Kostitsyna, T Peters, N Santoro, K Wada, 2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS). IEEEK. Buchin, P. Flocchini, I. Kostitsyna, T. Peters, N. Santoro, K. Wada, Autonomous mobile robots: Refining the computational landscape, in: 2021 IEEE International Parallel and Distributed Processing Symposium (IPDPS), IEEE, 2021, pp. 576-585.\n\nThe power of lights: synchronizing asynchronous robots using visible bits. S Das, P Flocchini, G Prencipe, N Santoro, M Yamashita, 32nd IEEE International Conference on Distributed Computing Systems (ICDCS). IEEES. Das, P. Flocchini, G. Prencipe, N. Santoro, M. Yamashita, The power of lights: synchro- nizing asynchronous robots using visible bits, in: 32nd IEEE International Conference on Distributed Computing Systems (ICDCS), IEEE, 2012, pp. 506-515.\n\nRobots with lights: Overcoming obstructed visibility without colliding. G A D Luna, P Flocchini, S Gan Chaudhuri, N Santoro, G Viglietta, 16th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS). Springer8756G. A. D. Luna, P. Flocchini, S. Gan Chaudhuri, N. Santoro, G. Viglietta, Robots with lights: Overcoming obstructed visibility without colliding, in: 16th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS), volume 8756 of LNCS, Springer, 2014, pp. 150-164.\n\nAutonomous mobile robots with lights. S Das, P Flocchini, G Prencipe, N Santoro, M Yamashita, Theoretical Computer Science. 609S. Das, P. Flocchini, G. Prencipe, N. Santoro, M. Yamashita, Autonomous mobile robots with lights, Theoretical Computer Science 609 (2016) 171-184.\n\nG Sharma, R Vaidyanathan, J L Trahan, C Busch, S Rai, 2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS). IEEE(log )-time complete visibility for asynchronous robots with lightsG. Sharma, R. Vaidyanathan, J. L. Trahan, C. Busch, S. Rai, (log )-time complete visibility for asynchronous robots with lights, in: 2017 IEEE International Parallel and Distributed Processing Symposium (IPDPS), IEEE, 2017, pp. 513-522.\n\nComplete visibility for robots with lights in (1) time. G Sharma, R Vaidyanathan, J L Trahan, C Busch, S Rai, 18th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS). Springer10083G. Sharma, R. Vaidyanathan, J. L. Trahan, C. Busch, S. Rai, Complete visibility for robots with lights in (1) time, in: 18th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS), volume 10083 of LNCS, Springer, 2016, pp. 327-345.\n\nG Sharma, R Vaidyanathan, J L Trahan, 19th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS). Springer10616Constant-time complete visibility for asynchronous robots with lightsG. Sharma, R. Vaidyanathan, J. L. Trahan, Constant-time complete visibility for asyn- chronous robots with lights, in: 19th International Symposium on Stabilization, Safety, and Security of Distributed Systems (SSS), volume 10616 of LNCS, Springer, 2017, pp. 265-281.\n\nComplete visibility for mobile robots with lights tolerating faults. A Aljohani, G Sharma, International Journal of Networking and Computing. 8A. Aljohani, G. Sharma, Complete visibility for mobile robots with lights tolerating faults, International Journal of Networking and Computing 8 (2018) 32-52.\n\nUniform circle formation for swarms of opaque robots with lights. C Feletti, C Mereghetti, B Palano, 20th International Symposium on Stabilizing, Safety, and Security of Distributed Systems (SSS). Springer11201C. Feletti, C. Mereghetti, B. Palano, Uniform circle formation for swarms of opaque robots with lights, in: 20th International Symposium on Stabilizing, Safety, and Security of Distributed Systems (SSS), volume 11201 of LNCS, Springer, 2018, pp. 317-332.\n\nSwing words to make circle formation quiescent. Y Dieudonn\u00e9, F Petit, 14th International Colloquium on Structural Information and Communication Complexity (SIROCCO). Springer4474Y. Dieudonn\u00e9, F. Petit, Swing words to make circle formation quiescent, in: 14th Interna- tional Colloquium on Structural Information and Communication Complexity (SIROCCO), volume 4474 of LNCS, Springer, 2007, pp. 166-179.\n\nDescriptional complexity of two-way pushdown automata with restricted head reversals. A Malcher, C Mereghetti, B Palano, Theoretical Computer Science. 449A. Malcher, C. Mereghetti, B. Palano, Descriptional complexity of two-way pushdown automata with restricted head reversals, Theoretical Computer Science 449 (2012) 119-133.\n\nBoolean language operations on nondeterministic automata with a pushdown of constant height. V Geffert, Z Bedn\u00e1rov\u00e1, C Mereghetti, B Palano, 8th Int. Computer Science Symposium in Russia (CSR). Springer7913V. Geffert, Z. Bedn\u00e1rov\u00e1, C. Mereghetti, B. Palano, Boolean language operations on nondeterministic automata with a pushdown of constant height, in: 8th Int. Computer Science Symposium in Russia (CSR), volume 7913 of LNCS, Springer, 2013, pp. 100-111.\n\nQueue automata of constant length. S Jakobi, K Meckel, C Mereghetti, B Palano, 15th International Workshop on Descriptional Complexity of Formal Systems (DCFS). Springer8031S. Jakobi, K. Meckel, C. Mereghetti, B. Palano, Queue automata of constant length, in: 15th International Workshop on Descriptional Complexity of Formal Systems (DCFS), volume 8031 of LNCS, Springer, 2013, pp. 124-135.\n\nBoolean language operations on nondeterministic automata with a pushdown of constant height. Z Bedn\u00e1rov\u00e1, V Geffert, C Mereghetti, B Palano, Journal of Computer and System Science. 90Z. Bedn\u00e1rov\u00e1, V. Geffert, C. Mereghetti, B. Palano, Boolean language operations on nondeterministic automata with a pushdown of constant height, Journal of Computer and System Science 90 (2017) 99-114.\n\nDescriptional complexity of iterated uniform finite-state transducers. M Kutrib, A Malcher, C Mereghetti, B Palano, 21st International Workshop on Descriptional Complexity of Formal Systems (DCFS). Springer11612M. Kutrib, A. Malcher, C. Mereghetti, B. Palano, Descriptional complexity of iterated uni- form finite-state transducers, in: 21st International Workshop on Descriptional Complexity of Formal Systems (DCFS), volume 11612 of LNCS, Springer, 2019, pp. 223-234.\n\nFirst-order logics: some characterizations and closure properties. C Choffrut, A Malcher, C Mereghetti, B Palano, Acta Informatica. 49C. Choffrut, A. Malcher, C. Mereghetti, B. Palano, First-order logics: some characterizations and closure properties, Acta Informatica 49 (2012) 225-248.\n\nQuantum automata for some multiperiodic languages. C Mereghetti, B Palano, Theoretical Computer Science. 387C. Mereghetti, B. Palano, Quantum automata for some multiperiodic languages, Theoretical Computer Science 387 (2007) 177-186.\n\nM P Bianchi, C Mereghetti, B Palano, Quantum finite automata: Advances on Bertoni's ideas. 664M. P. Bianchi, C. Mereghetti, B. Palano, Quantum finite automata: Advances on Bertoni's ideas, Theoretical Computer Science 664 (2017) 39-53.\n\nFuturistic view of the Internet of quantum drones: Review, challenges and research agenda. A Kumar, D A De Jesus, K Pacheco, J J P C Kaushik, Rodrigues, Vehicular Communications. 36100487A. Kumar, D. A. de Jesus Pacheco, K. Kaushik, J. J.P.C. Rodrigues, Futuristic view of the Internet of quantum drones: Review, challenges and research agenda, Vehicular Communications 36 (2022) 100487.\n", "annotations": {"author": "[{\"end\":148,\"start\":91},{\"end\":206,\"start\":149},{\"end\":263,\"start\":207},{\"end\":321,\"start\":264}]", "publisher": null, "author_last_name": "[{\"end\":107,\"start\":100},{\"end\":165,\"start\":155},{\"end\":222,\"start\":216},{\"end\":280,\"start\":274}]", "author_first_name": "[{\"end\":99,\"start\":91},{\"end\":154,\"start\":149},{\"end\":215,\"start\":207},{\"end\":273,\"start\":264}]", "author_affiliation": "[{\"end\":147,\"start\":109},{\"end\":205,\"start\":167},{\"end\":262,\"start\":224},{\"end\":320,\"start\":282}]", "title": "[{\"end\":88,\"start\":1},{\"end\":409,\"start\":322}]", "venue": null, "abstract": "[{\"end\":1725,\"start\":480}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b0\"},\"end\":2479,\"start\":2476},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":2481,\"start\":2479},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":2483,\"start\":2481},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":2485,\"start\":2483},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":3953,\"start\":3950},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":3955,\"start\":3953},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":3957,\"start\":3955},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3959,\"start\":3957},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":3961,\"start\":3959},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":3964,\"start\":3961},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":3967,\"start\":3964},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":3970,\"start\":3967},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":3973,\"start\":3970},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":3976,\"start\":3973},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":4256,\"start\":4252},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":4905,\"start\":4901},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":5022,\"start\":5018},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":5164,\"start\":5160},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5225,\"start\":5221},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5871,\"start\":5867},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":5874,\"start\":5871},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5877,\"start\":5874},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":5880,\"start\":5877},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":5882,\"start\":5880},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5884,\"start\":5882},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":5957,\"start\":5953},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":6055,\"start\":6051},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":6062,\"start\":6058},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":6162,\"start\":6158},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":6237,\"start\":6233},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":6806,\"start\":6802},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":7325,\"start\":7322},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":7327,\"start\":7325},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":7330,\"start\":7327},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":9200,\"start\":9197},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9202,\"start\":9200},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":9205,\"start\":9202},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":9208,\"start\":9205},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":9211,\"start\":9208},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":9214,\"start\":9211},{\"end\":12340,\"start\":12327},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":15126,\"start\":15122},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":15129,\"start\":15126},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":15767,\"start\":15763},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":16551,\"start\":16547},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":35488,\"start\":35484},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":37128,\"start\":37124},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":37131,\"start\":37128},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":37134,\"start\":37131},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":37137,\"start\":37134},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":37140,\"start\":37137},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":37219,\"start\":37215},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":37297,\"start\":37293},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":37300,\"start\":37297},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":37303,\"start\":37300},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":38647,\"start\":38643}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":37789,\"start\":37527},{\"attributes\":{\"id\":\"fig_1\"},\"end\":38109,\"start\":37790},{\"attributes\":{\"id\":\"fig_2\"},\"end\":38229,\"start\":38110},{\"attributes\":{\"id\":\"fig_3\"},\"end\":38417,\"start\":38230}]", "paragraph": "[{\"end\":2486,\"start\":1741},{\"end\":3805,\"start\":2488},{\"end\":4896,\"start\":3807},{\"end\":5304,\"start\":4898},{\"end\":6228,\"start\":5306},{\"end\":7168,\"start\":6230},{\"end\":7232,\"start\":7170},{\"end\":8039,\"start\":7250},{\"end\":9626,\"start\":8041},{\"end\":9989,\"start\":9628},{\"end\":11356,\"start\":9991},{\"end\":11549,\"start\":11385},{\"end\":12341,\"start\":11551},{\"end\":12461,\"start\":12343},{\"end\":12585,\"start\":12463},{\"end\":12861,\"start\":12587},{\"end\":13064,\"start\":12863},{\"end\":13167,\"start\":13079},{\"end\":13277,\"start\":13169},{\"end\":13477,\"start\":13279},{\"end\":13612,\"start\":13479},{\"end\":13929,\"start\":13614},{\"end\":14561,\"start\":13931},{\"end\":15006,\"start\":14628},{\"end\":15386,\"start\":15055},{\"end\":16673,\"start\":15388},{\"end\":16711,\"start\":16675},{\"end\":17854,\"start\":16759},{\"end\":18947,\"start\":17856},{\"end\":19683,\"start\":18949},{\"end\":20144,\"start\":19685},{\"end\":20222,\"start\":20146},{\"end\":20530,\"start\":20224},{\"end\":20794,\"start\":20532},{\"end\":21878,\"start\":20796},{\"end\":22202,\"start\":21880},{\"end\":23227,\"start\":22204},{\"end\":23909,\"start\":23229},{\"end\":24318,\"start\":23975},{\"end\":24534,\"start\":24320},{\"end\":24589,\"start\":24536},{\"end\":24784,\"start\":24591},{\"end\":25020,\"start\":24786},{\"end\":25201,\"start\":25022},{\"end\":25557,\"start\":25231},{\"end\":26009,\"start\":25559},{\"end\":26487,\"start\":26057},{\"end\":27027,\"start\":26489},{\"end\":27420,\"start\":27029},{\"end\":30663,\"start\":27422},{\"end\":32061,\"start\":30665},{\"end\":33112,\"start\":32105},{\"end\":35105,\"start\":33114},{\"end\":36683,\"start\":35143},{\"end\":37526,\"start\":36685}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":13078,\"start\":13065},{\"attributes\":{\"id\":\"formula_1\"},\"end\":14627,\"start\":14562}]", "table_ref": null, "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1739,\"start\":1727},{\"attributes\":{\"n\":\"2.\"},\"end\":7248,\"start\":7235},{\"attributes\":{\"n\":\"3.\"},\"end\":11383,\"start\":11359},{\"attributes\":{\"n\":\"4.\"},\"end\":15053,\"start\":15009},{\"attributes\":{\"n\":\"4.1.\"},\"end\":16757,\"start\":16714},{\"attributes\":{\"n\":\"4.2.\"},\"end\":23973,\"start\":23912},{\"attributes\":{\"n\":\"4.3.\"},\"end\":25229,\"start\":25204},{\"attributes\":{\"n\":\"5.\"},\"end\":26055,\"start\":26012},{\"attributes\":{\"n\":\"6.\"},\"end\":32103,\"start\":32064},{\"attributes\":{\"n\":\"7.\"},\"end\":35141,\"start\":35108},{\"end\":37805,\"start\":37791},{\"end\":38125,\"start\":38111}]", "table": null, "figure_caption": "[{\"end\":37789,\"start\":37529},{\"end\":38109,\"start\":37807},{\"end\":38229,\"start\":38127},{\"end\":38417,\"start\":38232}]", "figure_ref": null, "bib_author_first_name": "[{\"end\":39176,\"start\":39175},{\"end\":39186,\"start\":39185},{\"end\":39198,\"start\":39197},{\"end\":39506,\"start\":39505},{\"end\":39516,\"start\":39515},{\"end\":39528,\"start\":39527},{\"end\":39884,\"start\":39883},{\"end\":39897,\"start\":39896},{\"end\":39909,\"start\":39908},{\"end\":40214,\"start\":40213},{\"end\":40227,\"start\":40226},{\"end\":40239,\"start\":40238},{\"end\":40496,\"start\":40495},{\"end\":40508,\"start\":40507},{\"end\":40510,\"start\":40509},{\"end\":40519,\"start\":40518},{\"end\":40745,\"start\":40744},{\"end\":40753,\"start\":40752},{\"end\":40755,\"start\":40754},{\"end\":40764,\"start\":40763},{\"end\":40776,\"start\":40775},{\"end\":41059,\"start\":41058},{\"end\":41068,\"start\":41067},{\"end\":41078,\"start\":41077},{\"end\":41502,\"start\":41501},{\"end\":41515,\"start\":41514},{\"end\":41528,\"start\":41527},{\"end\":41752,\"start\":41751},{\"end\":41759,\"start\":41758},{\"end\":41770,\"start\":41769},{\"end\":41772,\"start\":41771},{\"end\":41782,\"start\":41781},{\"end\":41792,\"start\":41791},{\"end\":42052,\"start\":42051},{\"end\":42061,\"start\":42060},{\"end\":42070,\"start\":42069},{\"end\":42087,\"start\":42086},{\"end\":42522,\"start\":42521},{\"end\":42535,\"start\":42534},{\"end\":42547,\"start\":42546},{\"end\":42558,\"start\":42557},{\"end\":42847,\"start\":42846},{\"end\":42859,\"start\":42858},{\"end\":43124,\"start\":43123},{\"end\":43134,\"start\":43133},{\"end\":43400,\"start\":43399},{\"end\":43413,\"start\":43412},{\"end\":43642,\"start\":43641},{\"end\":44005,\"start\":44004},{\"end\":44015,\"start\":44014},{\"end\":44357,\"start\":44356},{\"end\":44370,\"start\":44369},{\"end\":44706,\"start\":44705},{\"end\":44719,\"start\":44718},{\"end\":44731,\"start\":44730},{\"end\":44742,\"start\":44741},{\"end\":44985,\"start\":44984},{\"end\":44995,\"start\":44994},{\"end\":45420,\"start\":45419},{\"end\":45430,\"start\":45429},{\"end\":45443,\"start\":45442},{\"end\":45457,\"start\":45456},{\"end\":45467,\"start\":45466},{\"end\":45478,\"start\":45477},{\"end\":45889,\"start\":45888},{\"end\":45896,\"start\":45895},{\"end\":45909,\"start\":45908},{\"end\":45921,\"start\":45920},{\"end\":45932,\"start\":45931},{\"end\":46343,\"start\":46342},{\"end\":46347,\"start\":46344},{\"end\":46355,\"start\":46354},{\"end\":46368,\"start\":46367},{\"end\":46385,\"start\":46384},{\"end\":46396,\"start\":46395},{\"end\":46855,\"start\":46854},{\"end\":46862,\"start\":46861},{\"end\":46875,\"start\":46874},{\"end\":46887,\"start\":46886},{\"end\":46898,\"start\":46897},{\"end\":47093,\"start\":47092},{\"end\":47103,\"start\":47102},{\"end\":47119,\"start\":47118},{\"end\":47121,\"start\":47120},{\"end\":47131,\"start\":47130},{\"end\":47140,\"start\":47139},{\"end\":47591,\"start\":47590},{\"end\":47601,\"start\":47600},{\"end\":47617,\"start\":47616},{\"end\":47619,\"start\":47618},{\"end\":47629,\"start\":47628},{\"end\":47638,\"start\":47637},{\"end\":48026,\"start\":48025},{\"end\":48036,\"start\":48035},{\"end\":48052,\"start\":48051},{\"end\":48054,\"start\":48053},{\"end\":48582,\"start\":48581},{\"end\":48594,\"start\":48593},{\"end\":48882,\"start\":48881},{\"end\":48893,\"start\":48892},{\"end\":48907,\"start\":48906},{\"end\":49330,\"start\":49329},{\"end\":49343,\"start\":49342},{\"end\":49771,\"start\":49770},{\"end\":49782,\"start\":49781},{\"end\":49796,\"start\":49795},{\"end\":50106,\"start\":50105},{\"end\":50117,\"start\":50116},{\"end\":50130,\"start\":50129},{\"end\":50144,\"start\":50143},{\"end\":50507,\"start\":50506},{\"end\":50517,\"start\":50516},{\"end\":50527,\"start\":50526},{\"end\":50541,\"start\":50540},{\"end\":50958,\"start\":50957},{\"end\":50971,\"start\":50970},{\"end\":50982,\"start\":50981},{\"end\":50996,\"start\":50995},{\"end\":51322,\"start\":51321},{\"end\":51332,\"start\":51331},{\"end\":51343,\"start\":51342},{\"end\":51357,\"start\":51356},{\"end\":51789,\"start\":51788},{\"end\":51801,\"start\":51800},{\"end\":51812,\"start\":51811},{\"end\":51826,\"start\":51825},{\"end\":52062,\"start\":52061},{\"end\":52076,\"start\":52075},{\"end\":52246,\"start\":52245},{\"end\":52248,\"start\":52247},{\"end\":52259,\"start\":52258},{\"end\":52273,\"start\":52272},{\"end\":52574,\"start\":52573},{\"end\":52583,\"start\":52582},{\"end\":52585,\"start\":52584},{\"end\":52597,\"start\":52596},{\"end\":52608,\"start\":52607},{\"end\":52614,\"start\":52609}]", "bib_author_last_name": "[{\"end\":39183,\"start\":39177},{\"end\":39195,\"start\":39187},{\"end\":39206,\"start\":39199},{\"end\":39513,\"start\":39507},{\"end\":39525,\"start\":39517},{\"end\":39536,\"start\":39529},{\"end\":39894,\"start\":39885},{\"end\":39906,\"start\":39898},{\"end\":39917,\"start\":39910},{\"end\":40224,\"start\":40215},{\"end\":40236,\"start\":40228},{\"end\":40247,\"start\":40240},{\"end\":40505,\"start\":40497},{\"end\":40516,\"start\":40511},{\"end\":40523,\"start\":40520},{\"end\":40750,\"start\":40746},{\"end\":40761,\"start\":40756},{\"end\":40773,\"start\":40765},{\"end\":40780,\"start\":40777},{\"end\":41065,\"start\":41060},{\"end\":41075,\"start\":41069},{\"end\":41086,\"start\":41079},{\"end\":41512,\"start\":41503},{\"end\":41525,\"start\":41516},{\"end\":41533,\"start\":41529},{\"end\":41756,\"start\":41753},{\"end\":41767,\"start\":41760},{\"end\":41779,\"start\":41773},{\"end\":41789,\"start\":41783},{\"end\":41802,\"start\":41793},{\"end\":42058,\"start\":42053},{\"end\":42067,\"start\":42062},{\"end\":42084,\"start\":42071},{\"end\":42101,\"start\":42088},{\"end\":42532,\"start\":42523},{\"end\":42544,\"start\":42536},{\"end\":42555,\"start\":42548},{\"end\":42567,\"start\":42559},{\"end\":42856,\"start\":42848},{\"end\":42866,\"start\":42860},{\"end\":43131,\"start\":43125},{\"end\":43144,\"start\":43135},{\"end\":43410,\"start\":43401},{\"end\":43420,\"start\":43414},{\"end\":43652,\"start\":43643},{\"end\":44012,\"start\":44006},{\"end\":44024,\"start\":44016},{\"end\":44367,\"start\":44358},{\"end\":44376,\"start\":44371},{\"end\":44716,\"start\":44707},{\"end\":44728,\"start\":44720},{\"end\":44739,\"start\":44732},{\"end\":44752,\"start\":44743},{\"end\":44992,\"start\":44986},{\"end\":44999,\"start\":44996},{\"end\":45010,\"start\":45001},{\"end\":45427,\"start\":45421},{\"end\":45440,\"start\":45431},{\"end\":45454,\"start\":45444},{\"end\":45464,\"start\":45458},{\"end\":45475,\"start\":45468},{\"end\":45483,\"start\":45479},{\"end\":45893,\"start\":45890},{\"end\":45906,\"start\":45897},{\"end\":45918,\"start\":45910},{\"end\":45929,\"start\":45922},{\"end\":45942,\"start\":45933},{\"end\":46352,\"start\":46348},{\"end\":46365,\"start\":46356},{\"end\":46382,\"start\":46369},{\"end\":46393,\"start\":46386},{\"end\":46406,\"start\":46397},{\"end\":46859,\"start\":46856},{\"end\":46872,\"start\":46863},{\"end\":46884,\"start\":46876},{\"end\":46895,\"start\":46888},{\"end\":46908,\"start\":46899},{\"end\":47100,\"start\":47094},{\"end\":47116,\"start\":47104},{\"end\":47128,\"start\":47122},{\"end\":47137,\"start\":47132},{\"end\":47144,\"start\":47141},{\"end\":47598,\"start\":47592},{\"end\":47614,\"start\":47602},{\"end\":47626,\"start\":47620},{\"end\":47635,\"start\":47630},{\"end\":47642,\"start\":47639},{\"end\":48033,\"start\":48027},{\"end\":48049,\"start\":48037},{\"end\":48061,\"start\":48055},{\"end\":48591,\"start\":48583},{\"end\":48601,\"start\":48595},{\"end\":48890,\"start\":48883},{\"end\":48904,\"start\":48894},{\"end\":48914,\"start\":48908},{\"end\":49340,\"start\":49331},{\"end\":49349,\"start\":49344},{\"end\":49779,\"start\":49772},{\"end\":49793,\"start\":49783},{\"end\":49803,\"start\":49797},{\"end\":50114,\"start\":50107},{\"end\":50127,\"start\":50118},{\"end\":50141,\"start\":50131},{\"end\":50151,\"start\":50145},{\"end\":50514,\"start\":50508},{\"end\":50524,\"start\":50518},{\"end\":50538,\"start\":50528},{\"end\":50548,\"start\":50542},{\"end\":50968,\"start\":50959},{\"end\":50979,\"start\":50972},{\"end\":50993,\"start\":50983},{\"end\":51003,\"start\":50997},{\"end\":51329,\"start\":51323},{\"end\":51340,\"start\":51333},{\"end\":51354,\"start\":51344},{\"end\":51364,\"start\":51358},{\"end\":51798,\"start\":51790},{\"end\":51809,\"start\":51802},{\"end\":51823,\"start\":51813},{\"end\":51833,\"start\":51827},{\"end\":52073,\"start\":52063},{\"end\":52083,\"start\":52077},{\"end\":52256,\"start\":52249},{\"end\":52270,\"start\":52260},{\"end\":52280,\"start\":52274},{\"end\":52580,\"start\":52575},{\"end\":52594,\"start\":52586},{\"end\":52605,\"start\":52598},{\"end\":52622,\"start\":52615},{\"end\":52633,\"start\":52624}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":33504020},\"end\":39436,\"start\":39106},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":15044894},\"end\":39831,\"start\":39438},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":38862492},\"end\":40127,\"start\":39833},{\"attributes\":{\"id\":\"b3\"},\"end\":40428,\"start\":40129},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":231905236},\"end\":40671,\"start\":40430},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":160009570},\"end\":40977,\"start\":40673},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":12588747},\"end\":41453,\"start\":40979},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":1494952},\"end\":41699,\"start\":41455},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":5933661},\"end\":41992,\"start\":41701},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":13525257},\"end\":42461,\"start\":41994},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2561018},\"end\":42760,\"start\":42463},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":31284864},\"end\":43051,\"start\":42762},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":7908791},\"end\":43316,\"start\":43053},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":33857440},\"end\":43613,\"start\":43318},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":67770935},\"end\":43910,\"start\":43615},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":468352},\"end\":44309,\"start\":43912},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":45612735},\"end\":44614,\"start\":44311},{\"attributes\":{\"id\":\"b17\"},\"end\":44915,\"start\":44616},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":210117883},\"end\":45353,\"start\":44917},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":235639448},\"end\":45811,\"start\":45355},{\"attributes\":{\"id\":\"b20\",\"matched_paper_id\":13016769},\"end\":46268,\"start\":45813},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":10020960},\"end\":46814,\"start\":46270},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":39990488},\"end\":47090,\"start\":46816},{\"attributes\":{\"id\":\"b23\"},\"end\":47532,\"start\":47092},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":42217900},\"end\":48023,\"start\":47534},{\"attributes\":{\"id\":\"b25\"},\"end\":48510,\"start\":48025},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":3298397},\"end\":48813,\"start\":48512},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":53026506},\"end\":49279,\"start\":48815},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":19103392},\"end\":49682,\"start\":49281},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":18240942},\"end\":50010,\"start\":49684},{\"attributes\":{\"id\":\"b30\",\"matched_paper_id\":12573377},\"end\":50469,\"start\":50012},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":32828963},\"end\":50862,\"start\":50471},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":12573377},\"end\":51248,\"start\":50864},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":195825263},\"end\":51719,\"start\":51250},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":15152445},\"end\":52008,\"start\":51721},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":8222867},\"end\":52243,\"start\":52010},{\"attributes\":{\"id\":\"b36\"},\"end\":52480,\"start\":52245},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":248847946},\"end\":52869,\"start\":52482}]", "bib_title": "[{\"end\":39173,\"start\":39106},{\"end\":39503,\"start\":39438},{\"end\":39881,\"start\":39833},{\"end\":40211,\"start\":40129},{\"end\":40493,\"start\":40430},{\"end\":40742,\"start\":40673},{\"end\":41056,\"start\":40979},{\"end\":41499,\"start\":41455},{\"end\":41749,\"start\":41701},{\"end\":42049,\"start\":41994},{\"end\":42519,\"start\":42463},{\"end\":42844,\"start\":42762},{\"end\":43121,\"start\":43053},{\"end\":43397,\"start\":43318},{\"end\":43639,\"start\":43615},{\"end\":44002,\"start\":43912},{\"end\":44354,\"start\":44311},{\"end\":44982,\"start\":44917},{\"end\":45417,\"start\":45355},{\"end\":45886,\"start\":45813},{\"end\":46340,\"start\":46270},{\"end\":46852,\"start\":46816},{\"end\":47588,\"start\":47534},{\"end\":48579,\"start\":48512},{\"end\":48879,\"start\":48815},{\"end\":49327,\"start\":49281},{\"end\":49768,\"start\":49684},{\"end\":50103,\"start\":50012},{\"end\":50504,\"start\":50471},{\"end\":50955,\"start\":50864},{\"end\":51319,\"start\":51250},{\"end\":51786,\"start\":51721},{\"end\":52059,\"start\":52010},{\"end\":52571,\"start\":52482}]", "bib_author": "[{\"end\":39185,\"start\":39175},{\"end\":39197,\"start\":39185},{\"end\":39208,\"start\":39197},{\"end\":39515,\"start\":39505},{\"end\":39527,\"start\":39515},{\"end\":39538,\"start\":39527},{\"end\":39896,\"start\":39883},{\"end\":39908,\"start\":39896},{\"end\":39919,\"start\":39908},{\"end\":40226,\"start\":40213},{\"end\":40238,\"start\":40226},{\"end\":40249,\"start\":40238},{\"end\":40507,\"start\":40495},{\"end\":40518,\"start\":40507},{\"end\":40525,\"start\":40518},{\"end\":40752,\"start\":40744},{\"end\":40763,\"start\":40752},{\"end\":40775,\"start\":40763},{\"end\":40782,\"start\":40775},{\"end\":41067,\"start\":41058},{\"end\":41077,\"start\":41067},{\"end\":41088,\"start\":41077},{\"end\":41514,\"start\":41501},{\"end\":41527,\"start\":41514},{\"end\":41535,\"start\":41527},{\"end\":41758,\"start\":41751},{\"end\":41769,\"start\":41758},{\"end\":41781,\"start\":41769},{\"end\":41791,\"start\":41781},{\"end\":41804,\"start\":41791},{\"end\":42060,\"start\":42051},{\"end\":42069,\"start\":42060},{\"end\":42086,\"start\":42069},{\"end\":42103,\"start\":42086},{\"end\":42534,\"start\":42521},{\"end\":42546,\"start\":42534},{\"end\":42557,\"start\":42546},{\"end\":42569,\"start\":42557},{\"end\":42858,\"start\":42846},{\"end\":42868,\"start\":42858},{\"end\":43133,\"start\":43123},{\"end\":43146,\"start\":43133},{\"end\":43412,\"start\":43399},{\"end\":43422,\"start\":43412},{\"end\":43654,\"start\":43641},{\"end\":44014,\"start\":44004},{\"end\":44026,\"start\":44014},{\"end\":44369,\"start\":44356},{\"end\":44378,\"start\":44369},{\"end\":44718,\"start\":44705},{\"end\":44730,\"start\":44718},{\"end\":44741,\"start\":44730},{\"end\":44754,\"start\":44741},{\"end\":44994,\"start\":44984},{\"end\":45001,\"start\":44994},{\"end\":45012,\"start\":45001},{\"end\":45429,\"start\":45419},{\"end\":45442,\"start\":45429},{\"end\":45456,\"start\":45442},{\"end\":45466,\"start\":45456},{\"end\":45477,\"start\":45466},{\"end\":45485,\"start\":45477},{\"end\":45895,\"start\":45888},{\"end\":45908,\"start\":45895},{\"end\":45920,\"start\":45908},{\"end\":45931,\"start\":45920},{\"end\":45944,\"start\":45931},{\"end\":46354,\"start\":46342},{\"end\":46367,\"start\":46354},{\"end\":46384,\"start\":46367},{\"end\":46395,\"start\":46384},{\"end\":46408,\"start\":46395},{\"end\":46861,\"start\":46854},{\"end\":46874,\"start\":46861},{\"end\":46886,\"start\":46874},{\"end\":46897,\"start\":46886},{\"end\":46910,\"start\":46897},{\"end\":47102,\"start\":47092},{\"end\":47118,\"start\":47102},{\"end\":47130,\"start\":47118},{\"end\":47139,\"start\":47130},{\"end\":47146,\"start\":47139},{\"end\":47600,\"start\":47590},{\"end\":47616,\"start\":47600},{\"end\":47628,\"start\":47616},{\"end\":47637,\"start\":47628},{\"end\":47644,\"start\":47637},{\"end\":48035,\"start\":48025},{\"end\":48051,\"start\":48035},{\"end\":48063,\"start\":48051},{\"end\":48593,\"start\":48581},{\"end\":48603,\"start\":48593},{\"end\":48892,\"start\":48881},{\"end\":48906,\"start\":48892},{\"end\":48916,\"start\":48906},{\"end\":49342,\"start\":49329},{\"end\":49351,\"start\":49342},{\"end\":49781,\"start\":49770},{\"end\":49795,\"start\":49781},{\"end\":49805,\"start\":49795},{\"end\":50116,\"start\":50105},{\"end\":50129,\"start\":50116},{\"end\":50143,\"start\":50129},{\"end\":50153,\"start\":50143},{\"end\":50516,\"start\":50506},{\"end\":50526,\"start\":50516},{\"end\":50540,\"start\":50526},{\"end\":50550,\"start\":50540},{\"end\":50970,\"start\":50957},{\"end\":50981,\"start\":50970},{\"end\":50995,\"start\":50981},{\"end\":51005,\"start\":50995},{\"end\":51331,\"start\":51321},{\"end\":51342,\"start\":51331},{\"end\":51356,\"start\":51342},{\"end\":51366,\"start\":51356},{\"end\":51800,\"start\":51788},{\"end\":51811,\"start\":51800},{\"end\":51825,\"start\":51811},{\"end\":51835,\"start\":51825},{\"end\":52075,\"start\":52061},{\"end\":52085,\"start\":52075},{\"end\":52258,\"start\":52245},{\"end\":52272,\"start\":52258},{\"end\":52282,\"start\":52272},{\"end\":52582,\"start\":52573},{\"end\":52596,\"start\":52582},{\"end\":52607,\"start\":52596},{\"end\":52624,\"start\":52607},{\"end\":52635,\"start\":52624}]", "bib_venue": "[{\"end\":39256,\"start\":39208},{\"end\":39613,\"start\":39538},{\"end\":39969,\"start\":39919},{\"end\":40253,\"start\":40249},{\"end\":40541,\"start\":40525},{\"end\":40810,\"start\":40782},{\"end\":41176,\"start\":41088},{\"end\":41563,\"start\":41535},{\"end\":41832,\"start\":41804},{\"end\":42189,\"start\":42103},{\"end\":42597,\"start\":42569},{\"end\":42894,\"start\":42868},{\"end\":43171,\"start\":43146},{\"end\":43450,\"start\":43422},{\"end\":43727,\"start\":43654},{\"end\":44097,\"start\":44026},{\"end\":44423,\"start\":44378},{\"end\":44703,\"start\":44616},{\"end\":45099,\"start\":45012},{\"end\":45562,\"start\":45485},{\"end\":46019,\"start\":45944},{\"end\":46504,\"start\":46408},{\"end\":46938,\"start\":46910},{\"end\":47223,\"start\":47146},{\"end\":47740,\"start\":47644},{\"end\":48159,\"start\":48063},{\"end\":48652,\"start\":48603},{\"end\":49010,\"start\":48916},{\"end\":49445,\"start\":49351},{\"end\":49833,\"start\":49805},{\"end\":50204,\"start\":50153},{\"end\":50630,\"start\":50550},{\"end\":51043,\"start\":51005},{\"end\":51446,\"start\":51366},{\"end\":51851,\"start\":51835},{\"end\":52113,\"start\":52085},{\"end\":52334,\"start\":52282},{\"end\":52659,\"start\":52635}]"}}}, "year": 2023, "month": 12, "day": 17}