{"id": 16747630, "updated": "2023-09-29 03:30:07.685", "metadata": {"title": "Axiomatic Attribution for Deep Networks", "authors": "[{\"first\":\"Mukund\",\"last\":\"Sundararajan\",\"middle\":[]},{\"first\":\"Ankur\",\"last\":\"Taly\",\"middle\":[]},{\"first\":\"Qiqi\",\"last\":\"Yan\",\"middle\":[]}]", "venue": "ArXiv", "journal": "ArXiv", "publication_date": {"year": 2017, "month": 3, "day": 4}, "abstract": "We study the problem of attributing the prediction of a deep network to its input features, a problem previously studied by several other works. We identify two fundamental axioms---Sensitivity and Implementation Invariance that attribution methods ought to satisfy. We show that they are not satisfied by most known attribution methods, which we consider to be a fundamental weakness of those methods. We use the axioms to guide the design of a new attribution method called Integrated Gradients. Our method requires no modification to the original network and is extremely simple to implement; it just needs a few calls to the standard gradient operator. We apply this method to a couple of image models, a couple of text models and a chemistry model, demonstrating its ability to debug networks, to extract rules from a deep network, and to enable users to engage with models better.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "1703.01365", "mag": "2949197630", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/icml/SundararajanTY17", "doi": null}}, "content": {"source": {"pdf_hash": "f302e136c41db5de1d624412f68c9174cf7ae8be", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/1703.01365v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "1d7a3b1d6e754452118ccf98378c7c9e014c7134", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/f302e136c41db5de1d624412f68c9174cf7ae8be.txt", "contents": "\nAxiomatic Attribution for Deep Networks\n\n\nMukund Sundararajan \nMUKUNDS@GOOGLE\nATALY@GOOGLE\nCOM Google Inc\n94043Mountain ViewCAUSA\n\nAnkur Taly \nQIQIYAN@GOOGLE\nCOM Google Inc\n94043Mountain ViewCAUSA\n\nQiqi Yan \nCOM Google Inc\n94043Mountain ViewCAUSA\n\nAxiomatic Attribution for Deep Networks\n\nWe study the problem of attributing the prediction of a deep network to its input features, a problem previously studied by several other works. We identify two fundamental axioms-Sensitivity and Implementation Invariance that attribution methods ought to satisfy. We show that they are not satisfied by most known attribution methods, which we consider to be a fundamental weakness of those methods. We use the axioms to guide the design of a new attribution method called Integrated Gradients. Our method requires no modification to the original network and is extremely simple to implement; it just needs a few calls to the standard gradient operator. We apply this method to a couple of image models, a couple of text models and a chemistry model, demonstrating its ability to debug networks, to extract rules from a deep network, and to enable users to engage with models better.\n\nMotivation and Summary of Results\n\nWe study the problem of attributing the prediction of a deep network to its input features.\n\nDefinition 1. Formally, suppose we have a function F : R n \u2192 [0, 1] that represents a deep network, and an input x = (x 1 , . . . , x n ) \u2208 R n . An attribution of the prediction at input x relative to a baseline input x is a vector A F (x, x ) = (a 1 , . . . , a n ) \u2208 R n where a i is the contribution of x i to the prediction F (x).\n\nFor instance, in an object recognition network, an attribution method could tell us which pixels of the image were responsible for a certain label being picked (see Figure 2). The attribution problem was previously studied by various papers (Baehrens et al., 2010;Simonyan et al., 2013;Shrikumar et al., 2016;Binder et al., 2016;Springenberg et al., 2014).\n\nThe intention of these works is to understand the inputoutput behavior of the deep network, which gives us the ability to improve it. Such understandability is critical to all computer programs, including machine learning models. There are also other applications of attribution. They could be used within a product driven by machine learning to provide a rationale for the recommendation. For instance, a deep network that predicts a condition based on imaging could help inform the doctor of the part of the image that resulted in the recommendation. This could help the doctor understand the strengths and weaknesses of a model and compensate for it. We give such an example in Section 5.2. Attributions could also be used by developers in an exploratory sense. For instance, we could use a deep network to extract insights that could be then used in a rulebased system. In Section 5.3, we give such an example. A significant challenge in designing an attribution technique is that they are hard to evaluate empirically. As we discuss in Section 4, it is hard to tease apart errors that stem from the misbehavior of the model versus the misbehavior of the attribution method. To compensate for this shortcoming, we take an axiomatic approach. In Section 2 we identify two axioms that every attribution method must satisfy. Unfortunately most previous methods do not satisfy one of these two axioms. In Section 3, we use the axioms to identify a new method, called integrated gradients.\n\nUnlike previously proposed methods, integrated gradients do not need any instrumentation of the network, and can be computed easily using a few calls to the gradient opera-arXiv:1703.01365v1 [cs.LG] 4 Mar 2017 tion, allowing even novice practitioners to easily apply the technique.\n\nIn Section 5, we demonstrate the ease of applicability over several deep networks, including two images networks, two text processing networks, and a chemistry network. These applications demonstrate the use of our technique in either improving our understanding of the network, performing debugging, performing rule extraction, or aiding an end user in understanding the network's prediction.\n\nRemark 1. Let us briefly examine the need for the baseline in the definition of the attribution problem. A common way for humans to perform attribution relies on counterfactual intuition. When we assign blame to a certain cause we implicitly consider the absence of the cause as a baseline for comparing outcomes. In a deep network, we model the absence using a single baseline input. For most deep networks, a natural baseline exists in the input space where the prediction is neutral. For instance, in object recognition networks, it is the black image. The need for a baseline has also been pointed out by prior work on attribution (Shrikumar et al., 2016;Binder et al., 2016).\n\n\nTwo Fundamental Axioms\n\nWe now discuss two axioms (desirable characteristics) for attribution methods. We find that other feature attribution methods in literature break at least one of the two axioms. These methods include DeepLift (Shrikumar et al., 2016), Layer-wise relevance propagation (LRP) (Binder et al., 2016), Deconvolutional networks (Zeiler & Fergus, 2014), and Guided back-propagation (Springenberg et al., 2014). As we will see in Section 3, these axioms will also guide the design of our method.\n\nGradients. For linear models, ML practitioners regularly inspect coefficients of the model in order to debug it. Gradients (of the output with respect to the input) are a natural analog of these coefficients for a deep network, and therefore is a reasonable starting point for an attribution method (Baehrens et al., 2010;Simonyan et al., 2013); see the third column of Figure 2 for examples. The problem with gradients is that they break sensitivity, a property that all attribution methods should satisfy.\n\n\nAxiom: Sensitivity(a)\n\nAn attribution method satisfies Sensitivity(a) if for every input and baseline that differ in one feature but have different predictions then the differing feature should be given a non-zero attribution. (Later in the paper, we will have a part (b) to this definition.)\n\nGradients violate Sensitivity(a): For a concrete example, consider a one variable, one ReLU network, f (x) = 1 \u2212 ReLU(1\u2212x). Suppose the baseline is x = 0 and the input is x = 2. The function changes from 0 to 1, but because f becomes flat at x = 1, the gradient method gives attribution of 0 to x. Intuitively, gradients break Sensitivity because the prediction function may flatten at the input and thus have zero gradient despite the function value at the input being different from that at the baseline. This phenomenon has been reported in previous work (Shrikumar et al., 2016).\n\nPractically, the lack of sensitivity causes gradients to focus on irrelevant features (see the \"fireboat\" example in Figure 2).\n\nOther back-propagation based approaches. A second set of approaches involve back-propagating the final prediction score through each layer of the network down to the individual features. These include DeepLift (Shrikumar et al., 2016), Layer-wise relevance propagation (LRP) (Binder et al., 2016), Deconvolutional networks (De-ConvNets) (Zeiler & Fergus, 2014), and Guided backpropagation (Springenberg et al., 2014). These methods differ in the specific backpropagation logic for various activation functions (e.g., ReLU, MaxPool, etc.).\n\n\nUnfortunately,\n\nDeconvolution networks (DeCon-vNets) (Zeiler & Fergus, 2014), and Guided backpropagation (Springenberg et al., 2014) violate Sensitivity(a). This is because these methods back-propogate through a ReLU node only if the ReLU is turned on at the input. This makes the method similar to gradients, in that, the attribution is zero for features with zero gradient at the input despite a non-zero gradient at the baseline. We defer the specific counterexamples to the Appendix B.\n\nMethods like DeepLift and LRP tackle the Sensitivity issue by employing a baseline, and in some sense try to compute \"discrete gradients\" instead of (instantaeneous) gradients at the input. (The two methods differ in the specifics of how they compute the discrete gradient). But the idea is that a large, discrete step will avoid flat regions, avoiding a breakage of sensitivity. Unfortunately, these methods violate a different requirement that attribution methods should satisfy.\n\n\nAxiom: Implementation Invariance\n\nTwo networks are functionally equivalent if their outputs are equal for all inputs, despite having very different implementations. Attribution methods should satisfy Implementation Invariance, i.e., the attributions are always identical for two functionally equivalent networks. To motivate this, notice that attribution can be colloquially defined as assigning the blame (or credit) for the output to the input features. Such a definition does not refer to implementation details.\n\nWe now discuss intuition for why DeepLift and LRP break Implementation Invariance; a concrete example is provided in Appendix B. First, notice that gradients are invariant to implementation. In fact, the chain-rule for gradients \u2202f \u2202g = \u2202f \u2202h \u00b7 \u2202h \u2202g is essentially about implementation invariance. To see this, think of g and f as the input and output of a system, and h being some implementation detail of the system. The gradient of output f to input g can be computed either directly by \u2202f \u2202g , ignoring the intermediate function h (implementation detail), or by invoking the chain rule via h. This is exactly how backpropagation works.\n\nMethods like LRP and DeepLift replace gradients with discrete gradients and still use a modified form of backpropagation to compose discrete gradients into attributions. 1Unfortunately, the chain rule does not hold for discrete gradients in general. x0) , and therefore these methods fail to satisfy implementation invariance.\nFormally f (x1)\u2212f (x0) g(x1)\u2212g(x0) = f (x1)\u2212f (x0) h(x1)\u2212h(x0) \u00b7 h(x1)\u2212h(x0) g(x1)\u2212g(\nIf an attribution method fails to satisfy Implementation Invariance, the attributions are potentially sensitive to unimportant aspects of the models. For instance, in the example in the appendix, the network architecture has more degrees of freedom than needed for representing the function, and as a result there are two set of values for the network parameters that lead to the same function. The training procedure can converge at either set of values depending on the initializtion or for other reasons, but the underlying network function would remain the same. It is undesirable that attributions differ for such reasons.\n\n\nOur Method: Integrated Gradients\n\nWe are now ready to describe our technique. Intuitively, our technique combines the Implementation Invariance of Gradients along with the Sensitivity of techniques like LRP or DeepLift.\n\nFormally, suppose we have a function F : R n \u2192 [0, 1] that represents a deep network. Specifically, let x \u2208 R n be the input at hand, and x \u2208 R n be the baseline input. For image networks, the baseline could be the black image, while for text models it could be the zero embedding vector.\n\nWe consider the straightline path (in R n ) from the baseline x to the input x, and compute the gradients at all points along the path. Integrated gradients are obtained by cumulating these gradients. Specifically, integrated gradients are defined as the path intergral of the gradients along the straightline path from the baseline x to the input x.\n\nThe integrated gradient along the i th dimension for an input x and baseline x is defined as follows.\nIntegratedGrads i (x) ::= (x\u2212x )\u00d7 1 \u03b1=0 \u2202F (x +\u03b1\u00d7(x\u2212x )) \u2202xi d\u03b1(1)\nwhere \u2202F (x) \u2202xi is the gradient of F along the i th dimension at x.\n\nAxiom: Completeness. Integrated gradients satisfy an axiom called completeness that the attributions add up to the difference between the output of F at the input x and the baseline x . This axiom is identified as being desirable by Deeplift and LRP. It is a sanity check that the attribution method is somewhat comprehensive in its accounting, a property that is clearly desirable if the networks score is used in a numeric sense, and not just to pick the top label, for e.g., a model estimating insurance premiums from credit features of individuals. This is formalized by the proposition below, which is an instantiation of the fundamental theorem of calculus for path integrals.\nProposition 1. If F : R n \u2192 R is differentiable almost everywhere 1 then \u03a3 n i=1 IntegratedGrads i (x) = F (x) \u2212 F (x )\nFor most deep networks, it is possible to choose a baseline such that the prediction at the baseline is near zero (F (x ) \u2248 0). (For image models, the black image baseline indeed satisfies this property.) In such cases, there is an intepretation of the resulting attributions that ignores the baseline and amounts to distributing the output to the individual input features.\n\nRemark 2. Integrated Gradients satisfies Sensivity(a) because Completeness implies Sensivity(a) and is thus a strengthening of the Sensitivity(a) axiom. This is because Sensitivity(a) refers to a case where the baseline and the input differ only in one variable, for which Completeness asserts that the difference in the two output values is equal to the attribution to this variable. Attributions generated by integrated gradients satisfy Implementation Invariance since they are based only on the gradients of the function represented by the network.\n\nComputing integrated gradients. The integrated gradients can be efficiently approximated by Riemann sum, wherein, we simply sum the gradients at points occurring at sufficiently small intervals along the straightline path from the baseline x to the input x.\nIntegratedGrads approx i (x) ::= \u03a3 m k=1 \u2202F (x + k m \u00d7(x\u2212x ))) \u2202xi \u00d7 1 m(2)\nHere m is the number of steps in the Riemman approximation of the integral. Notice that the approximation simply involves computing the gradient in a for loop which should be straightforward and efficient in most deep learning frameworks. For instance, in TensorFlow, it essentially amounts to calling tf.gradients in a loop over the set of inputs (i.e., x + k m \u00d7 (x \u2212 x ) for k = 1, . . . , m), which could also be batched. In practice, we find that m = 50 calls are more than enough to approximate the integral to within 5%. Going forward, we abuse the term \"integrated gradients\" to refer to the approximation described above.\n\n\nUniqueness of Integrated Gradients\n\nPrior literature has relied on empirically evaluating the attribution technique. For instance, in the context of an object recognition task, (Samek et al., 2015) suggests that we select the top k pixels by attribution and randomly vary their intensities and then measure the drop in score. If the attribution method is good, then the drop in score should be large. However, the images resulting from pixel perturbation could be unnatural, and it could be that the scores drop simply because the network has never seen anything like it in training. (This is probably less of a concern with linear or logistic models where the simplicity of the model ensures that ablating a feature does not cause strange interactions.)\n\nA different evaluation technique considers images with human-drawn bounding boxes around objects, and computes the percentage of pixel attribution inside the bounding box. While for most objects, one would expect the pixels located on the object to be most important for the prediction, in some cases the context in which the object occurs may also contribute to the prediction. The cabbage butterfly image from Figure 2 is a good example of this where the pixels on the leaf are also surfaced by the integrated gradients.\n\nRoughly, we found that every empirical evaluation technique we could think of could not differentiate between artifacts that stem from perturbing the data, a misbehaving model, and a misbehaving attribution method. This was why we turned to an axiomatic approach in designing a good attribution method (Section 2). While our method satisfies Sensitivity and Implementation Invariance, it certainly isn't the unique method to do so.\n\nWe now justify the selection of the integrated gradients method in two steps. First, we identify a class of methods called Path methods that generalize integrated gradients. We discuss that path methods are the only methods to satisfy certain desirable axioms. Second, we argue why integrated gradients is somehow canonical among the different path methods. r 1 ,r 2 s 1 ,s 2 P 1 P 2 P 3 Figure 1: Three paths between an a baseline (r 1 , r 2 ) and an input (s 1 , s 2 ). Each path corresponds to a different attribution method. The path P 2 corresponds to the path used by Integrated Gradients.\n\n\nPath Methods\n\nIntegrated gradients aggregate the gradients along the inputs that fall on the straightline between the baseline and the input. Clearly, there are many other (nonstraightline) paths that monotonically interpolate between the two points, and each such path will yield a different attribution method. For instance, consider the simple case when the input is two dimensional. Figure 1 has examples of three paths, each of which corresponds to a different attribution method.\n\nFormally, let \u03b3 = (\u03b3 1 , . . . , \u03b3 n ) : [0, 1] \u2192 R n be a smooth function specifying a path in R n from the baseline x to the input x, i.e., \u03b3(0) = x and \u03b3(1) = x.\n\nGiven a path function \u03b3, path integrated gradients are obtained by integrating the gradients along the path \u03b3(\u03b1) for \u03b1 \u2208 [0, 1]. Formally, path integrated gradients along the i th dimension for an input x is defined as follows.\nPathIntegratedGrads \u03b3 i (x) ::= 1 \u03b1=0 \u2202F (\u03b3(\u03b1)) \u2202\u03b3i(\u03b1) \u2202\u03b3i(\u03b1) \u2202\u03b1 d\u03b1 (3) where \u2202F (x)\n\u2202xi is the gradient of F along the i th dimension at x.\n\nAttribution methods based on path integrated gradients are collectively known as path methods. Notice that integrated gradients is a path method for the straightline path specified\n\u03b3(\u03b1) = x + \u03b1 \u00d7 (x \u2212 x ) for \u03b1 \u2208 [0, 1].\nRemark 3. All path methods satisfy Implementation Invariance. This follows from the fact that they are defined using the underlying gradients, which do not depend on the implementation. They also satisfy Sensitvity(a) because all path methods satisfy Completeness (the proof is similar to that of Proposition 1) which implies Sensitivity(a) (see Remark 2).\n\nMore interestingly, path methods are the only methods that satisfy certain desirable axioms. (For formal defini-tions of the axioms and proof of Proposition 2, see Friedman (Friedman, 2004).)\n\nAxiom: Sensitivity(b). (called Dummy in (Friedman, 2004)) If the function implemented by the deep network does not depend (mathematically) on some variable, then the attribution to that variable is always zero. This is a natural complement to the definition of Sensitivity(a) from Section 2. This definition captures desired insensitivity of the attributions.\n\nAxiom: Linearity. Suppose that we linearly composed two deep networks modeled by the functions f 1 and f 2 to form a third network that models the function a\u00d7f 1 +b\u00d7f 2 , i.e., a linear combination of the two networks. Then we'd like the attributions for a \u00d7 f 1 + b \u00d7 f 2 to be the weighted sum of the attributions for f 1 and f 2 with weights a and b respectively. Intuitively, we would like the attributions to preserve any linearity within the network.\n\nProposition 2. (Theorem 1 (Friedman, 2004)) Path methods are the only attribution methods that always satisfy Implementation Invariance, Sensitivity(b), Linearity, and Completeness.\n\nRemark 4. We note that these path integrated gradients have been used within the cost-sharing literature in economics where the function models the cost of a project as a function of the demands of various participants, and the attributions correspond to cost-shares. Integrated gradients correspond to a cost-sharing method called Aumann-Shapley (Aumann & Shapley, 1974). Proposition 2 holds for our attribution problem because mathematically the cost-sharing problem corresponds to the attribution problem with the benchmark fixed at the zero vector. (Implementation Invariance is implicit in the cost-sharing literature as the cost functions are considered directly in their mathematical form.)\n\n\nIntegrated gradients is Symmetry-Preserving\n\nIn this section, we formalize why the straightline path chosen by integrated gradients is canonical. First, observe that it is the simplest path that one can define mathematically. Second, a natural property for attribution methods is to preserve symmetry, in the following sense. E.g., consider the logistic model Sigmoid(x 1 + x 2 + . . . ).\n\nx 1 and x 2 are symmetric variables for this model. For an input where x 1 = x 2 = 1 (say) and baseline where x 1 = x 2 = 0 (say), a symmetry preserving method must offer identical attributions to x 1 and x 2 .\n\nIt seems natural to ask for symmetry-preserving attribution methods because if two variables play the exact same role in the network (i.e., they are symmetric and have the same values in the baseline and the input) then they ought to receive the same attrbiution.\n\nTheorem 1. Integrated gradients is the unique path method that is symmetry-preserving.\n\n\nApplications\n\nThe integrated gradients technique is applicable to a variety of deep networks. As a proof of concept, we apply the technique to two image models, two natural language models, and a chemistry model.\n\n\nAn Object Recognition Network\n\nWe study feature attribution in an object recognition network built using the GoogleNet architecture (Szegedy et al., 2014) and trained over the ImageNet object recognition dataset (Russakovsky et al., 2015). We use the integrated gradients method to study pixel importance in predictions made by this network. The gradients are computed for the output of the highest-scoring class with respect to pixel of the input image. The baseline input is the black image, i.e., all pixel intensities are zero. Integrated gradients essentially aggregate the gradients of images obtained by interpolating between the original image and this black image.\n\nIntegrated gradients can be visualized by aggregating them along the color channel and scaling the pixels in the actual image by them. Figure 2 shows visualizations for a bunch of images 2 . For comparison, it also presents the corresponding visualization obtained from the gradients at the actual image. Notice that integrated gradients are better at reflecting distinctive features of the image compared to just gradients at the input.\n\nTo further quantify the effectiveness of integrated gradients over gradients, we perform two analyses.\n\n1. Pixel ablations: Based on a method proposed by (Samek et al., 2015), we ablate (i.e, zero the pixel intensity) the top 5000 pixels (10% of the image) by attribution, and compute the score drop for the highest scoring object class. We find that ablating the top pix-els identified by integrated gradients leads to a larger score drop that those identified by gradients at the image for 132 out of 150 randomly chosen images.\n\n\nLocalization:\n\nWe consider images from the 2012 Im-ageNet object localization dataset with human-drawn bounding boxes around objects, and compute the percentage of pixel attribution inside the bounding box. We run our evaluation over 100 randomly chosen images and find that on 82 images the integrated gradients technique leads to a higher fraction of the pixel attribution inside the box than gradients at the actual image. The average difference in the percentage pixel attribution inside the box for the two techniques is 8.4%.\n\n\nFigure 2:\n\nComparing integrated gradients with gradients at the image. Left-to-right: original input image, label and softmax score for the highest scoring class, visualization of integrated gradients, visualization of gradients at the image. Notice that the visualizations obtained from integrated gradients are better at reflecting distinctive features of the image.\n\n\nDiabetic retinopathy prediction\n\nDiabetic retinopathy (DR) is a complication of the diabetes that affects the eyes. Recently, a deep network (V et al., 2016) has been proposed to predict the severity grade for DR in retinal fundus images. The model has good predictive accuracy on various validation datasets.\n\nWe use integrated gradients to study feature importance for this network; like in the object recognition case, the baseline is the black image. Feature importance explanations are important for this network as surfacing them to retina specialists helps to encourage clinical adoption. Retina specialists may use it to build trust in the network's predictions, decide the grade for borderline cases, and obtain insights for further testing and screening. Figure 3 shows a visualization of integrated gradients for a retinal fundus image. The visualization is obtained by scaling the integrated gradients and overlaying them along the green channel on the actual image in gray scale. Notice that integrated gradients seem to be localized to a few pixels that seem to be lesions in the retina.\n\nThe evaluated integrated gradients as part of wider study with retina specilists and found that integrated gradients help the specialist confirm the predicted DR grade on 28 out of 33 images from the EyePACs-1 dataset (V et al., 2016) chosen for diversity. We are currently scaling this study. Figure 3: Attribution for Diabetic Retinopathy grade prediction from a retinal fundus image The original image is show on the left, and the attributions (overlayed on the original image in gray scaee) is shown on the right. On the original image we annotate lesions visible to a human, and confirm that the attributions indeed point to them.\n\n\nQuestion classification\n\nAutomatically answering natural language questions (over semi-structured data) is an important problem in artificial intelligence (AI). A common approach is to semantically parse the question to its logical form (Liang, 2016;Pasupat & Liang, 2015) using a set of human-authored grammar rules. An alternative approach is to machine learn an endto-end model provided there is enough training data.\n\nRule based systems have the advantage of being more precise at language understanding (Liang, 2016), more main-tainable and easy to debug. The downside is that they have poorer recall. This is because there are often multiple phrasing of the same question in natural language, e.g., \"how many people work at Walmart?\" and \"what is the number of employees at Walmart?\" It is hard for humanauthored rules to be comprehensive on all possible phrasings. This is where machine learnt models are better.\n\nAn interesting question then is whether one could use peek inside machine learnt models to derive new rules for improving recall of the overall system. We explore this direction for a sub-problem of semantic parsing, called question classification, using the method integrated gradients.\n\nThe goal of question classification is to identify the intent of the question as to the type of answer it is seeking. For instance, is the quesiton seeking a yes/no answer, or is it seeking a date? Rules of solving this problem look for trigger phrases in the question, for e.g., a \"when\" in the beginning indicates a date seeking question. We train a model for question classification using the the text categorization architecture proposed by (Kim, 2014) over the WikiTableQuestions dataseet (Pasupat & Liang, 2015). We use integrated gradients to attribute predictions down to the question terms in order to identify new trigger phrases for answer type. In a sense, we are using attributions as a dataexploration tool. The baseline input is the all zero embedding vector. Unlike in the case of image models, the input on the straightline path from the baseline and the original input no longer have a natural interpretation. Our method works for the reasons discussed in Section 2 and 4. Figure 4 lists a few questions with constituent terms highlighted based on their attribution. Notice that the attributions largely agree with commonly used rules, for e.g., \"how many\" indicates a numeric seeking question. In addition, attributions also help identify novel question classification rules. For instance, questions containing \"total number\" are seeking numeric answers, questions beginning with \"which year\" are seeking date answers, and so on. A caveat here is that the network may have picked up correlations in the training dataset which would then get reflected in the attributions. This motivates having the human in the loop while synthesizing rules.\n\n\nPenn Treebank model\n\nWe apply our technique to word-level language modeling of the Penn Treebank dataset (Marcus et al., 1993), and apply an LSTM-based sequence model based on (Zaremba et al., 2014). For such a network, given a sequence of input words, and the softmax prediction for the next word, we want to identify the importance of the preceding words.\n\nTo describe the setup, we choose 20 randomly chosen sections of the test data, and for each of them inspect the pre- Figure 4: Attributions from question classification model. Term color indicates attribution strength-Red is positive, Blue is negative, and Gray is neutral (zero). The predicted class is specified in square brackets.\n\ndiction score of the next word using the first 10 words. The baseline here is obtained by zeroing out the embedding vectors, just as in the question classification model.\n\nIn Table 5 we show a comparisons of integrated gradients to gradients. Due to saturation, the magnitudes of gradients are so small compared to the prediction scores that it is difficult to make sense of them. In comparison, integrated gradients have a total amount close to the prediction, and seem to make sense. In the example, in predicting the second \"ual\", integrated gradients are clearly the highest for the first occurrence of \"ual\", which is the only word that is highly predictive of the second \"ual\".\n\n\nChemistry Models\n\nWe apply integrated gradients to a network performing Ligand-Based Virtual Screening which is the problem of predicting whether an input molecule is active against a certain target (e.g., protein or enzyme). In particular, we consider a network based on the molecular graph convolution architecture proposed by (Kearnes et al., 2016). Understanding feature importance in molecules predicted to be active against may help medicinal chemists in identifying the dominant molecular substructures-formally, pharmacophores-that are responsible for the activity. It may also help sanity check the behavior of the network-we discuss an anecdote about this later in this section.\n\nThe network requires an input molecule to be encoded by hand as a set of atom and atom-pair features describing the molecule as an undirected graph. Atoms are featurized using a one-hot encoding specifying the atom type (e.g., C, O, S, etc.), and atom-pairs are featurized by specifying either the type of bond (e.g., single, double, triple, etc.) between the atoms, or the graph distance between them. The baseline input is obtained zeroing out the feature vectors for atom and atom-pairs.\n\nWe visualize integrated gradients as heatmaps over the the atom and atom-pair features with the heatmap intensity depicting the strength of the contribution. Figure 6 shows the visualization for a specific molecule. Since integrated  Figure 5: Prediction for ual: 0.0062, total integrated gradient: 0.0063 gradients add up to the final prediction score (see Proposition 1), the magnitudes can be use for accounting the contributions of each feature. For instance, for the molecule in the figure, atom-pairs that have a bond between them cumulatively contribute to 46% of the prediction score, while all other pairs cumulatively contribute to only \u22123%.\n\nWe presented the attributions for 100 molecules active against a specific task to a few chemists. The chemists were able to immediately spot dominant functional groups (e.g., aromatic rings) being surfaced by the attributions. Figure 6: Attribution for a molecule under the W2N2 network (Kearnes et al., 2016). The molecules is active on task PCBA-58432.\n\nIdentifying Degenerate Features. One application of an attribution method is to debug and improve a deep network. We now discuss how attributions helped us spot an anomaly in the W1N2 architecture in (Kearnes et al., 2016). On applying the integrated gradients method to this network, we found that several atoms in the same molecule received identical attribution despite being bonded to different atoms. This is surprising as one would expect two atoms with different neighborhoods to be treated differently by the network.\n\nOn investigating the problem further we found that since the W1N2 network had only one convolution layer, the atoms and atom-pair features were not fully convolved. This caused all atoms that have the same atom type, and same number of bonds of each type to contribute identically to the network.\n\nDespite the aforementioned problem, the W1N2 network had good predictive accuracy. One hypothesis for this is that the atom type and their neighborhoods are tightly correlated; for instance an outgoing double bond from a Carbon is always to another Carbon or Oxygen atom. As a result, given the atom type, an explicit encoding of the neighborhood is not needed by the network. This also suggests that equivalent predictive accuracy can be achieved using a simpler \"bag of atoms\" type model.\n\n\nOther Related work\n\nWe already covered closely related work on attribution in Section 2. We briefly mention other related work.\n\nOver the last few years, there has been a vast amount work on demystifying the inner workings of deep networks. Most of this work has been on networks trained on computer vision tasks, and deals with understanding what a specific neuron computes (Erhan et al., 2009;Le, 2013) and interpreting the representations captured by neurons during a prediction (Mahendran & Vedaldi, 2015;Dosovitskiy & Brox, 2015;Yosinski et al., 2015). In contrast, we focus on understanding the network's behavior on a specific input in terms of the base level input features. Our technique quantifies the importance of each feature in the prediction.\n\nOne approach to the attribution problem proposed first by (Ribeiro et al., 2016a;b), is to locally approximate the behavior of the network in the vicinity of the input being explained with a simpler, more interpretable model. An appealing aspect of this approach is that it is completely agnostic to the implementation of the network and satisfies implemenation invariance. However, this approach does not guarantee sensitivity. There is no guarantee that the local region explored escapes the \"flat\" section of the prediction function in the sense of 2. The other issue is that the method is expensive to implement for networks with \"dense\" input like image networks as one needs to explore a local region of size proportional to the number of pixels and train a model for this space. In contrast, our technique works with a few calls to the gradient operation.\n\n\nConclusion\n\nThe primary contribution of this paper is a method called integrated gradients that attributes the prediction of a deep network to its inputs. It can be implemented using a few calls to the gradients operator, can be applied to a variety of deep networks, and has a strong theoretical justification.\n\nA secondary contribution of this paper is to clarify desirable features of an attribution method using an axiomatic framework inspired by cost-sharing literature from economics. Without the axiomatic approach it is hard to tell whether the attribution method is affected by data artifacts, network's artifacts or artifacts of the method. The axiomatic approach rules out artifacts of the last type.\n\nWhile our and other works have made some progress on understanding the relative importance of input features in a deep network, we have not addressed the interactions between the input features or the logic employed by the network. So there remain many unanswered questions in terms of debugging the I/O behavior of a deep network.\n\n\nSymmetry-Preserving. Two input variables are symmetric w.r.t. a function if swapping them does not change the function. For instance, x and y are symmetric w.r.t. F if and only if F (x, y) = F (y, x) for all values of x and y. An attribution method is symmetry preserving, if for all inputs that have identical values for symmetric variables and baselines that have identical values for symmetric variables, the symmetric variables receive identical attributions.\nFormally, this means that the partial derivative of F along each input dimension satisfies Lebesgue's integrability condition, i.e., the set of discontinuous points has measure zero. Deep networks built out of Sigmoids, ReLUs, and pooling operators should satisfy this condition.\nMore examples can be found at https://github.com/ ankurtaly/Attributions\nReLU(x) is defined as max(x, 0).\nACKNOWLEDGMENTSWe would like to thank Patrick Riley and Christian Szegedy for their helpful feedback.A. Proof of Theorem 1Proof. Consider a non-straightline path \u03b3 : [0, 1] \u2192 R n from baseline to input. W.l.o.g., there exists t 0 \u2208 [0, 1] such that for two dimensions i, j, \u03b3 i (t 0 ) > \u03b3 j (t 0 ). Let (t 1 , t 2 ) be the maximum real open interval containing t 0 such that \u03b3 i (t) > \u03b3 j (t) for all t in (t 1 , t 2 ), and let a = \u03b3 i (t 1 ) = \u03b3 j (t 1 ), and b = \u03b3 i (t 2 ) = \u03b3 j (t 2 ). Define functionotherwise. Next we compute the attributions of f at x = 1, . . . , 1 n with baseline x = 0, . . . , 0 n . Note that x i and x j are symmetric, and should get identical attributions. For t / \u2208 [t 1 , t 2 ], the function is a constant, and the attribution of f is zero to all variables, while for t \u2208 (t 1 , t 2 ), the attribution of f is \u03b3 j (t) \u2212 a to x i , and \u03b3 i (t) \u2212 a to x j , where the latter is always strictly larger by our choice of the interval. It follows that x j gets a larger attribution than x i , contradiction.B. Attribution Counter-ExamplesWe show that the methods DeepLift and Layer-wise relevance propagation (LRP) break the implementation invariance axiom, and the Deconvolution and Guided backpropagation methods break the sensitivity axiom.Figure 7provides an example of two equivalent networks f (x 1 , x 2 ) and g(x 1 , x 2 ) for which DeepLift and LRP yield different attributions.First, observe that the networks f and g are of the form f (x 1 , x 2 ) = ReLU(h(x 1 , x 2 )) and f (x 1 ,Figure 7: Attributions for two functionally equivalent networks. The figure shows attributions for two functionally equivalent networks f (x 1 , x 2 ) and g(x 1 , x 2 ) at the input x 1 = 3, x 2 = 1 using integrated gradients, DeepLift(Shrikumar et al., 2016), and Layer-wise relevance propagation (LRP)(Binder et al., 2016). The reference input for Integrated gradients and DeepLift is x 1 = 0, x 2 = 0. All methods except integrated gradients provide different attributions for the two networks.Note that h and k are not equivalent. They have different values whenever x 1 < 1. But f and g are equivalent.To prove this, suppose for contradiction that f and g are different for some x 1 , x 2 . Then it must be the case that ReLU(x 1 ) \u2212 1 = ReLU(x 1 \u2212 1). This happens only when x 1 < 1, which implies that f (x 1 , x 2 ) = g(x 1 , x 2 ) = 0.Now we leverage the above example to show that Deconvolution and Guided back-propagation break sensitivity. Consider the network f (x 1 , x 2 ) fromFigure 7. For a fixed value of x 1 greater than 1, the output decreases linearly as x 2 increases from 0 to x 1 \u2212 1. Yet, for all inputs, Deconvolutional networks and Guided back-propagation results in zero attribution for x 2 . This happens because for all inputs the back-propagated signal received at the node ReLU(x 2 ) is negative and is therefore not back-propagated through the ReLU operation (per the rules of deconvolution and guided back-propagation; see(Springenberg et al., 2014)for details). As a result, the feature x 2 receives zero attribution despite the network's output being sensitive to it.\nValues of Non-Atomic Games. R J Aumann, L S Shapley, Princeton University PressPrinceton, NJAumann, R. J. and Shapley, L. S. Values of Non-Atomic Games. Princeton University Press, Princeton, NJ, 1974.\n\nHow to explain individual classification decisions. David Baehrens, Schroeter, Timon, Harmeling, Stefan, Kawanabe, Motoaki, Katja Hansen, Klaus-Robert M\u00fcller, Journal of Machine Learning Research. Baehrens, David, Schroeter, Timon, Harmeling, Stefan, Kawanabe, Motoaki, Hansen, Katja, and M\u00fcller, Klaus- Robert. How to explain individual classification deci- sions. Journal of Machine Learning Research, pp. 1803- 1831, 2010.\n\nLayerwise relevance propagation for neural networks with local renormalization layers. Alexander Binder, Montavon, Gr\u00e9goire, Bach, Sebastian, Klaus-Robert M\u00fcller, Wojciech Samek, CoRRBinder, Alexander, Montavon, Gr\u00e9goire, Bach, Sebastian, M\u00fcller, Klaus-Robert, and Samek, Wojciech. Layer- wise relevance propagation for neural networks with lo- cal renormalization layers. CoRR, 2016.\n\nInverting visual representations with convolutional networks. Alexey Dosovitskiy, Thomas Brox, Dosovitskiy, Alexey and Brox, Thomas. Inverting visual representations with convolutional networks, 2015.\n\nVisualizing higher-layer features of a deep network. Erhan, Dumitru, Bengio, Yoshua, Aaron Courville, Pascal Vincent, 1341University of MontrealTechnical ReportErhan, Dumitru, Bengio, Yoshua, Courville, Aaron, and Vincent, Pascal. Visualizing higher-layer features of a deep network. Technical Report 1341, University of Montreal, 2009.\n\nPaths and consistency in additive cost sharing. Eric J Friedman, International Journal of Game Theory. 324Friedman, Eric J. Paths and consistency in additive cost sharing. International Journal of Game Theory, 32(4): 501-518, 2004.\n\nMolecular graph convolutions: moving beyond fingerprints. Steven Kearnes, Mccloskey, Kevin, Berndl, Marc, Vijay Pande, Patrick Riley, Journal of Computer-Aided Molecular Design. Kearnes, Steven, McCloskey, Kevin, Berndl, Marc, Pande, Vijay, and Riley, Patrick. Molecular graph convolutions: moving beyond fingerprints. Journal of Computer-Aided Molecular Design, pp. 595-608, 2016.\n\nConvolutional neural networks for sentence classification. Yoon Kim, ACL. Kim, Yoon. Convolutional neural networks for sentence classification. In ACL, 2014.\n\nBuilding high-level features using large scale unsupervised learning. Quoc V Le, International Conference on Acoustics, Speech, and Signal Processing (ICASSP). Le, Quoc V. Building high-level features using large scale unsupervised learning. In International Conference on Acoustics, Speech, and Signal Processing (ICASSP), pp. 8595-8598, 2013.\n\nLearning executable semantic parsers for natural language understanding. Percy Liang, Commun. ACM. 599Liang, Percy. Learning executable semantic parsers for nat- ural language understanding. Commun. ACM, 59(9):68- 76, 2016.\n\nUnderstanding deep image representations by inverting them. Aravindh Mahendran, Andrea Vedaldi, Conference on Computer Vision and Pattern Recognition (CVPR). Mahendran, Aravindh and Vedaldi, Andrea. Understand- ing deep image representations by inverting them. In Conference on Computer Vision and Pattern Recognition (CVPR), pp. 5188-5196, 2015.\n\nBuilding a large annotated corpus of english: The penn treebank. Mitchell P Marcus, Beatrice Santorini, Mary Marcinkiewicz, Ann, Computational Linguistics. Marcus, Mitchell P., Santorini, Beatrice, and Marcinkiewicz, Mary Ann. Building a large annotated corpus of english: The penn treebank. Computational Linguistics, pp. 313-330, 1993.\n\nCompositional semantic parsing on semi-structured tables. Panupong Pasupat, Percy Liang, ACL. Pasupat, Panupong and Liang, Percy. Compositional se- mantic parsing on semi-structured tables. In ACL, 2015.\n\nwhy should I trust you?\": Explaining the predictions of any classifier. Marco Ribeiro, Sameer T\u00falio, Singh, Carlos Guestrin, 22nd ACM International Conference on Knowledge Discovery and Data Mining. ACMRibeiro, Marco T\u00falio, 0001, Sameer Singh, and Guestrin, Carlos. \"why should I trust you?\": Explaining the pre- dictions of any classifier. In 22nd ACM International Conference on Knowledge Discovery and Data Mining, pp. 1135-1144. ACM, 2016a.\n\nModel-agnostic interpretability of machine learning. Marco Ribeiro, Sameer T\u00falio, Singh, Carlos Guestrin, CoRRRibeiro, Marco T\u00falio, 0001, Sameer Singh, and Guestrin, Carlos. Model-agnostic interpretability of machine learning. CoRR, 2016b.\n\nImageNet Large Scale Visual Recognition Challenge. Olga Russakovsky, Deng, Jia, Su, Hao, Jonathan Krause, Satheesh, Sanjeev, Ma, Sean, Huang, Zhiheng, Andrej Karpathy, Aditya Khosla, Bernstein, Michael, Alexander C Berg, Li Fei-Fei, International Journal of Computer Vision. Russakovsky, Olga, Deng, Jia, Su, Hao, Krause, Jonathan, Satheesh, Sanjeev, Ma, Sean, Huang, Zhiheng, Karpa- thy, Andrej, Khosla, Aditya, Bernstein, Michael, Berg, Alexander C., and Fei-Fei, Li. ImageNet Large Scale Visual Recognition Challenge. International Journal of Computer Vision (IJCV), pp. 211-252, 2015.\n\nEvaluating the visualization of what a deep neural network has learned. Wojciech Samek, Alexander Binder, Montavon, Gr\u00e9goire, Sebastian Bach, Klaus-Robert M\u00fcller, CoRRSamek, Wojciech, Binder, Alexander, Montavon, Gr\u00e9goire, Bach, Sebastian, and M\u00fcller, Klaus-Robert. Evaluat- ing the visualization of what a deep neural network has learned. CoRR, 2015.\n\nNot just a black box: Learning important features through propagating activation differences. Avanti Shrikumar, Greenside, Peyton, Anna Shcherbina, Anshul Kundaje, CoRRShrikumar, Avanti, Greenside, Peyton, Shcherbina, Anna, and Kundaje, Anshul. Not just a black box: Learning important features through propagating activation differ- ences. CoRR, 2016.\n\nAndrew. Deep inside convolutional networks: Visualising image classification models and saliency maps. Karen Simonyan, Andrea Vedaldi, Zisserman , CoRRSimonyan, Karen, Vedaldi, Andrea, and Zisserman, An- drew. Deep inside convolutional networks: Visualising image classification models and saliency maps. CoRR, 2013.\n\nStriving for simplicity: The all convolutional net. Jost Springenberg, Tobias, Alexey Dosovitskiy, Thomas Brox, Riedmiller, A Martin, CoRRSpringenberg, Jost Tobias, Dosovitskiy, Alexey, Brox, Thomas, and Riedmiller, Martin A. Striving for sim- plicity: The all convolutional net. CoRR, 2014.\n\nGoing deeper with convolutions. Christian Szegedy, Liu, Wei, Jia, Yangqing, Sermanet, Pierre, Scott E Reed, Anguelov, Dragomir, Erhan, Dumitru, Vincent Vanhoucke, Andrew Rabinovich, CoRRSzegedy, Christian, Liu, Wei, Jia, Yangqing, Sermanet, Pierre, Reed, Scott E., Anguelov, Dragomir, Erhan, Du- mitru, Vanhoucke, Vincent, and Rabinovich, Andrew. Going deeper with convolutions. CoRR, 2014.\n\nDevelopment and validation of a deep learning algorithm for detection of diabetic retinopathy in retinal fundus photographs. V , Gulshan , L Peng, M , Coram , JAMA. 31622V, Gulshan, L, Peng, M, Coram, and et al. Development and validation of a deep learning algorithm for detection of diabetic retinopathy in retinal fundus photographs. JAMA, 316(22):2402-2410, 2016.\n\nUnderstanding neural networks through deep visualization. Jason Yosinski, Jeff Clune, Anh Nguyen, Mai, Thomas Fuchs, Hod Lipson, CoRRYosinski, Jason, Clune, Jeff, Nguyen, Anh Mai, Fuchs, Thomas, and Lipson, Hod. Understanding neural net- works through deep visualization. CoRR, 2015.\n\nRecurrent neural network regularization. Wojciech Zaremba, Ilya Sutskever, Oriol Vinyals, CoRRZaremba, Wojciech, Sutskever, Ilya, and Vinyals, Oriol. Recurrent neural network regularization. CoRR, 2014.\n\nVisualizing and understanding convolutional networks. Matthew D Zeiler, Rob Fergus, ECCV. Zeiler, Matthew D. and Fergus, Rob. Visualizing and un- derstanding convolutional networks. In ECCV, pp. 818- 833, 2014.\n", "annotations": {"author": "[{\"end\":131,\"start\":43},{\"end\":198,\"start\":132},{\"end\":248,\"start\":199}]", "publisher": null, "author_last_name": "[{\"end\":62,\"start\":50},{\"end\":142,\"start\":138},{\"end\":207,\"start\":204}]", "author_first_name": "[{\"end\":49,\"start\":43},{\"end\":137,\"start\":132},{\"end\":203,\"start\":199}]", "author_affiliation": "[{\"end\":130,\"start\":64},{\"end\":197,\"start\":144},{\"end\":247,\"start\":209}]", "title": "[{\"end\":40,\"start\":1},{\"end\":288,\"start\":249}]", "venue": null, "abstract": "[{\"end\":1174,\"start\":290}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b1\"},\"end\":1905,\"start\":1882},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":1927,\"start\":1905},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":1950,\"start\":1927},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":1970,\"start\":1950},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":1996,\"start\":1970},{\"end\":3684,\"start\":3680},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":4826,\"start\":4802},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":4846,\"start\":4826},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":5107,\"start\":5083},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5169,\"start\":5148},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":5219,\"start\":5196},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":5276,\"start\":5249},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":5685,\"start\":5662},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":5707,\"start\":5685},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":6749,\"start\":6725},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":7115,\"start\":7091},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":7177,\"start\":7156},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":7241,\"start\":7218},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7297,\"start\":7270},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":7498,\"start\":7475},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":7554,\"start\":7527},{\"end\":9809,\"start\":9806},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":14598,\"start\":14578},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":18503,\"start\":18487},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":18563,\"start\":18547},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":19368,\"start\":19352},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":19880,\"start\":19856},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":21534,\"start\":21512},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":21618,\"start\":21592},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":22668,\"start\":22648},{\"end\":24089,\"start\":24073},{\"end\":25269,\"start\":25253},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":25923,\"start\":25910},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":25945,\"start\":25923},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":26194,\"start\":26181},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":27339,\"start\":27328},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":27400,\"start\":27377},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":28672,\"start\":28651},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":28744,\"start\":28722},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":30277,\"start\":30255},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":32070,\"start\":32048},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":32339,\"start\":32317},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":33830,\"start\":33810},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":33839,\"start\":33830},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":33944,\"start\":33917},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":33969,\"start\":33944},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":33991,\"start\":33969},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":34275,\"start\":34252},{\"end\":34277,\"start\":34275}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":36569,\"start\":36104}]", "paragraph": "[{\"end\":1302,\"start\":1211},{\"end\":1639,\"start\":1304},{\"end\":1997,\"start\":1641},{\"end\":3487,\"start\":1999},{\"end\":3770,\"start\":3489},{\"end\":4165,\"start\":3772},{\"end\":4847,\"start\":4167},{\"end\":5361,\"start\":4874},{\"end\":5870,\"start\":5363},{\"end\":6165,\"start\":5896},{\"end\":6750,\"start\":6167},{\"end\":6879,\"start\":6752},{\"end\":7419,\"start\":6881},{\"end\":7911,\"start\":7438},{\"end\":8394,\"start\":7913},{\"end\":8912,\"start\":8431},{\"end\":9554,\"start\":8914},{\"end\":9882,\"start\":9556},{\"end\":10596,\"start\":9969},{\"end\":10818,\"start\":10633},{\"end\":11108,\"start\":10820},{\"end\":11460,\"start\":11110},{\"end\":11563,\"start\":11462},{\"end\":11699,\"start\":11631},{\"end\":12383,\"start\":11701},{\"end\":12878,\"start\":12504},{\"end\":13432,\"start\":12880},{\"end\":13691,\"start\":13434},{\"end\":14398,\"start\":13768},{\"end\":15155,\"start\":14437},{\"end\":15679,\"start\":15157},{\"end\":16112,\"start\":15681},{\"end\":16709,\"start\":16114},{\"end\":17197,\"start\":16726},{\"end\":17363,\"start\":17199},{\"end\":17592,\"start\":17365},{\"end\":17733,\"start\":17678},{\"end\":17915,\"start\":17735},{\"end\":18312,\"start\":17956},{\"end\":18505,\"start\":18314},{\"end\":18866,\"start\":18507},{\"end\":19324,\"start\":18868},{\"end\":19507,\"start\":19326},{\"end\":20206,\"start\":19509},{\"end\":20597,\"start\":20254},{\"end\":20809,\"start\":20599},{\"end\":21074,\"start\":20811},{\"end\":21162,\"start\":21076},{\"end\":21377,\"start\":21179},{\"end\":22053,\"start\":21411},{\"end\":22492,\"start\":22055},{\"end\":22596,\"start\":22494},{\"end\":23024,\"start\":22598},{\"end\":23558,\"start\":23042},{\"end\":23929,\"start\":23572},{\"end\":24241,\"start\":23965},{\"end\":25033,\"start\":24243},{\"end\":25670,\"start\":25035},{\"end\":26093,\"start\":25698},{\"end\":26592,\"start\":26095},{\"end\":26881,\"start\":26594},{\"end\":28543,\"start\":26883},{\"end\":28903,\"start\":28567},{\"end\":29238,\"start\":28905},{\"end\":29410,\"start\":29240},{\"end\":29923,\"start\":29412},{\"end\":30614,\"start\":29944},{\"end\":31106,\"start\":30616},{\"end\":31759,\"start\":31108},{\"end\":32115,\"start\":31761},{\"end\":32642,\"start\":32117},{\"end\":32940,\"start\":32644},{\"end\":33432,\"start\":32942},{\"end\":33562,\"start\":33455},{\"end\":34192,\"start\":33564},{\"end\":35056,\"start\":34194},{\"end\":35370,\"start\":35071},{\"end\":35770,\"start\":35372},{\"end\":36103,\"start\":35772}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":9968,\"start\":9883},{\"attributes\":{\"id\":\"formula_1\"},\"end\":11630,\"start\":11564},{\"attributes\":{\"id\":\"formula_2\"},\"end\":12503,\"start\":12384},{\"attributes\":{\"id\":\"formula_3\"},\"end\":13767,\"start\":13692},{\"attributes\":{\"id\":\"formula_4\"},\"end\":17677,\"start\":17593},{\"attributes\":{\"id\":\"formula_5\"},\"end\":17955,\"start\":17916}]", "table_ref": "[{\"end\":29422,\"start\":29415}]", "section_header": "[{\"attributes\":{\"n\":\"1.\"},\"end\":1209,\"start\":1176},{\"attributes\":{\"n\":\"2.\"},\"end\":4872,\"start\":4850},{\"attributes\":{\"n\":\"2.1.\"},\"end\":5894,\"start\":5873},{\"end\":7436,\"start\":7422},{\"attributes\":{\"n\":\"2.2.\"},\"end\":8429,\"start\":8397},{\"attributes\":{\"n\":\"3.\"},\"end\":10631,\"start\":10599},{\"attributes\":{\"n\":\"4.\"},\"end\":14435,\"start\":14401},{\"attributes\":{\"n\":\"4.1.\"},\"end\":16724,\"start\":16712},{\"attributes\":{\"n\":\"4.2.\"},\"end\":20252,\"start\":20209},{\"attributes\":{\"n\":\"5.\"},\"end\":21177,\"start\":21165},{\"attributes\":{\"n\":\"5.1.\"},\"end\":21409,\"start\":21380},{\"attributes\":{\"n\":\"2.\"},\"end\":23040,\"start\":23027},{\"end\":23570,\"start\":23561},{\"attributes\":{\"n\":\"5.2.\"},\"end\":23963,\"start\":23932},{\"attributes\":{\"n\":\"5.3.\"},\"end\":25696,\"start\":25673},{\"attributes\":{\"n\":\"5.4.\"},\"end\":28565,\"start\":28546},{\"attributes\":{\"n\":\"5.5.\"},\"end\":29942,\"start\":29926},{\"attributes\":{\"n\":\"6.\"},\"end\":33453,\"start\":33435},{\"attributes\":{\"n\":\"7.\"},\"end\":35069,\"start\":35059}]", "table": null, "figure_caption": "[{\"end\":36569,\"start\":36106}]", "figure_ref": "[{\"end\":1814,\"start\":1806},{\"end\":5741,\"start\":5733},{\"end\":6878,\"start\":6869},{\"end\":15577,\"start\":15569},{\"end\":16510,\"start\":16502},{\"end\":17107,\"start\":17099},{\"end\":22198,\"start\":22190},{\"end\":24705,\"start\":24697},{\"end\":25337,\"start\":25329},{\"end\":27882,\"start\":27874},{\"end\":29030,\"start\":29022},{\"end\":31274,\"start\":31266},{\"end\":31350,\"start\":31342},{\"end\":31996,\"start\":31988}]", "bib_author_first_name": "[{\"end\":40108,\"start\":40107},{\"end\":40110,\"start\":40109},{\"end\":40120,\"start\":40119},{\"end\":40122,\"start\":40121},{\"end\":40339,\"start\":40334},{\"end\":40411,\"start\":40406},{\"end\":40432,\"start\":40420},{\"end\":40805,\"start\":40796},{\"end\":40863,\"start\":40851},{\"end\":40880,\"start\":40872},{\"end\":41163,\"start\":41157},{\"end\":41183,\"start\":41177},{\"end\":41387,\"start\":41382},{\"end\":41405,\"start\":41399},{\"end\":41687,\"start\":41683},{\"end\":41689,\"start\":41688},{\"end\":41932,\"start\":41926},{\"end\":41979,\"start\":41974},{\"end\":41994,\"start\":41987},{\"end\":42314,\"start\":42310},{\"end\":42484,\"start\":42480},{\"end\":42486,\"start\":42485},{\"end\":42834,\"start\":42829},{\"end\":43049,\"start\":43041},{\"end\":43067,\"start\":43061},{\"end\":43402,\"start\":43394},{\"end\":43404,\"start\":43403},{\"end\":43421,\"start\":43413},{\"end\":43437,\"start\":43433},{\"end\":43734,\"start\":43726},{\"end\":43749,\"start\":43744},{\"end\":43950,\"start\":43945},{\"end\":43966,\"start\":43960},{\"end\":43987,\"start\":43981},{\"end\":44377,\"start\":44372},{\"end\":44393,\"start\":44387},{\"end\":44414,\"start\":44408},{\"end\":44615,\"start\":44611},{\"end\":44657,\"start\":44649},{\"end\":44717,\"start\":44711},{\"end\":44734,\"start\":44728},{\"end\":44772,\"start\":44763},{\"end\":44774,\"start\":44773},{\"end\":44783,\"start\":44781},{\"end\":45230,\"start\":45222},{\"end\":45247,\"start\":45238},{\"end\":45285,\"start\":45276},{\"end\":45304,\"start\":45292},{\"end\":45603,\"start\":45597},{\"end\":45638,\"start\":45634},{\"end\":45657,\"start\":45651},{\"end\":45965,\"start\":45960},{\"end\":45982,\"start\":45976},{\"end\":46001,\"start\":45992},{\"end\":46231,\"start\":46227},{\"end\":46260,\"start\":46254},{\"end\":46280,\"start\":46274},{\"end\":46300,\"start\":46299},{\"end\":46509,\"start\":46500},{\"end\":46567,\"start\":46562},{\"end\":46569,\"start\":46568},{\"end\":46619,\"start\":46612},{\"end\":46637,\"start\":46631},{\"end\":46986,\"start\":46985},{\"end\":46996,\"start\":46989},{\"end\":47000,\"start\":46999},{\"end\":47008,\"start\":47007},{\"end\":47016,\"start\":47011},{\"end\":47292,\"start\":47287},{\"end\":47307,\"start\":47303},{\"end\":47318,\"start\":47315},{\"end\":47338,\"start\":47332},{\"end\":47349,\"start\":47346},{\"end\":47563,\"start\":47555},{\"end\":47577,\"start\":47573},{\"end\":47594,\"start\":47589},{\"end\":47779,\"start\":47772},{\"end\":47781,\"start\":47780},{\"end\":47793,\"start\":47790}]", "bib_author_last_name": "[{\"end\":40117,\"start\":40111},{\"end\":40130,\"start\":40123},{\"end\":40348,\"start\":40340},{\"end\":40359,\"start\":40350},{\"end\":40366,\"start\":40361},{\"end\":40377,\"start\":40368},{\"end\":40385,\"start\":40379},{\"end\":40395,\"start\":40387},{\"end\":40404,\"start\":40397},{\"end\":40418,\"start\":40412},{\"end\":40439,\"start\":40433},{\"end\":40812,\"start\":40806},{\"end\":40822,\"start\":40814},{\"end\":40832,\"start\":40824},{\"end\":40838,\"start\":40834},{\"end\":40849,\"start\":40840},{\"end\":40870,\"start\":40864},{\"end\":40886,\"start\":40881},{\"end\":41175,\"start\":41164},{\"end\":41188,\"start\":41184},{\"end\":41355,\"start\":41350},{\"end\":41364,\"start\":41357},{\"end\":41372,\"start\":41366},{\"end\":41380,\"start\":41374},{\"end\":41397,\"start\":41388},{\"end\":41413,\"start\":41406},{\"end\":41698,\"start\":41690},{\"end\":41940,\"start\":41933},{\"end\":41951,\"start\":41942},{\"end\":41958,\"start\":41953},{\"end\":41966,\"start\":41960},{\"end\":41972,\"start\":41968},{\"end\":41985,\"start\":41980},{\"end\":42000,\"start\":41995},{\"end\":42318,\"start\":42315},{\"end\":42489,\"start\":42487},{\"end\":42840,\"start\":42835},{\"end\":43059,\"start\":43050},{\"end\":43075,\"start\":43068},{\"end\":43411,\"start\":43405},{\"end\":43431,\"start\":43422},{\"end\":43451,\"start\":43438},{\"end\":43456,\"start\":43453},{\"end\":43742,\"start\":43735},{\"end\":43755,\"start\":43750},{\"end\":43958,\"start\":43951},{\"end\":43972,\"start\":43967},{\"end\":43979,\"start\":43974},{\"end\":43996,\"start\":43988},{\"end\":44385,\"start\":44378},{\"end\":44399,\"start\":44394},{\"end\":44406,\"start\":44401},{\"end\":44423,\"start\":44415},{\"end\":44627,\"start\":44616},{\"end\":44633,\"start\":44629},{\"end\":44638,\"start\":44635},{\"end\":44642,\"start\":44640},{\"end\":44647,\"start\":44644},{\"end\":44664,\"start\":44658},{\"end\":44674,\"start\":44666},{\"end\":44683,\"start\":44676},{\"end\":44687,\"start\":44685},{\"end\":44693,\"start\":44689},{\"end\":44700,\"start\":44695},{\"end\":44709,\"start\":44702},{\"end\":44726,\"start\":44718},{\"end\":44741,\"start\":44735},{\"end\":44752,\"start\":44743},{\"end\":44761,\"start\":44754},{\"end\":44779,\"start\":44775},{\"end\":44791,\"start\":44784},{\"end\":45236,\"start\":45231},{\"end\":45254,\"start\":45248},{\"end\":45264,\"start\":45256},{\"end\":45274,\"start\":45266},{\"end\":45290,\"start\":45286},{\"end\":45311,\"start\":45305},{\"end\":45613,\"start\":45604},{\"end\":45624,\"start\":45615},{\"end\":45632,\"start\":45626},{\"end\":45649,\"start\":45639},{\"end\":45665,\"start\":45658},{\"end\":45974,\"start\":45966},{\"end\":45990,\"start\":45983},{\"end\":46244,\"start\":46232},{\"end\":46252,\"start\":46246},{\"end\":46272,\"start\":46261},{\"end\":46285,\"start\":46281},{\"end\":46297,\"start\":46287},{\"end\":46307,\"start\":46301},{\"end\":46517,\"start\":46510},{\"end\":46522,\"start\":46519},{\"end\":46527,\"start\":46524},{\"end\":46532,\"start\":46529},{\"end\":46542,\"start\":46534},{\"end\":46552,\"start\":46544},{\"end\":46560,\"start\":46554},{\"end\":46574,\"start\":46570},{\"end\":46584,\"start\":46576},{\"end\":46594,\"start\":46586},{\"end\":46601,\"start\":46596},{\"end\":46610,\"start\":46603},{\"end\":46629,\"start\":46620},{\"end\":46648,\"start\":46638},{\"end\":47005,\"start\":47001},{\"end\":47301,\"start\":47293},{\"end\":47313,\"start\":47308},{\"end\":47325,\"start\":47319},{\"end\":47330,\"start\":47327},{\"end\":47344,\"start\":47339},{\"end\":47356,\"start\":47350},{\"end\":47571,\"start\":47564},{\"end\":47587,\"start\":47578},{\"end\":47602,\"start\":47595},{\"end\":47788,\"start\":47782},{\"end\":47800,\"start\":47794}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\"},\"end\":40280,\"start\":40079},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":14664111},\"end\":40707,\"start\":40282},{\"attributes\":{\"id\":\"b2\"},\"end\":41093,\"start\":40709},{\"attributes\":{\"id\":\"b3\"},\"end\":41295,\"start\":41095},{\"attributes\":{\"doi\":\"1341\",\"id\":\"b4\"},\"end\":41633,\"start\":41297},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":9799004},\"end\":41866,\"start\":41635},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":918678},\"end\":42249,\"start\":41868},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":9672033},\"end\":42408,\"start\":42251},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":206741597},\"end\":42754,\"start\":42410},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":207234272},\"end\":42979,\"start\":42756},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":206593185},\"end\":43327,\"start\":42981},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":252796},\"end\":43666,\"start\":43329},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":9027681},\"end\":43871,\"start\":43668},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":13029170},\"end\":44317,\"start\":43873},{\"attributes\":{\"id\":\"b14\"},\"end\":44558,\"start\":44319},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":2930547},\"end\":45148,\"start\":44560},{\"attributes\":{\"id\":\"b16\"},\"end\":45501,\"start\":45150},{\"attributes\":{\"id\":\"b17\"},\"end\":45855,\"start\":45503},{\"attributes\":{\"id\":\"b18\"},\"end\":46173,\"start\":45857},{\"attributes\":{\"id\":\"b19\"},\"end\":46466,\"start\":46175},{\"attributes\":{\"id\":\"b20\"},\"end\":46858,\"start\":46468},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":26657811},\"end\":47227,\"start\":46860},{\"attributes\":{\"id\":\"b22\"},\"end\":47512,\"start\":47229},{\"attributes\":{\"id\":\"b23\"},\"end\":47716,\"start\":47514},{\"attributes\":{\"id\":\"b24\",\"matched_paper_id\":3960646},\"end\":47928,\"start\":47718}]", "bib_title": "[{\"end\":40332,\"start\":40282},{\"end\":41681,\"start\":41635},{\"end\":41924,\"start\":41868},{\"end\":42308,\"start\":42251},{\"end\":42478,\"start\":42410},{\"end\":42827,\"start\":42756},{\"end\":43039,\"start\":42981},{\"end\":43392,\"start\":43329},{\"end\":43724,\"start\":43668},{\"end\":43943,\"start\":43873},{\"end\":44609,\"start\":44560},{\"end\":46983,\"start\":46860},{\"end\":47770,\"start\":47718}]", "bib_author": "[{\"end\":40119,\"start\":40107},{\"end\":40132,\"start\":40119},{\"end\":40350,\"start\":40334},{\"end\":40361,\"start\":40350},{\"end\":40368,\"start\":40361},{\"end\":40379,\"start\":40368},{\"end\":40387,\"start\":40379},{\"end\":40397,\"start\":40387},{\"end\":40406,\"start\":40397},{\"end\":40420,\"start\":40406},{\"end\":40441,\"start\":40420},{\"end\":40814,\"start\":40796},{\"end\":40824,\"start\":40814},{\"end\":40834,\"start\":40824},{\"end\":40840,\"start\":40834},{\"end\":40851,\"start\":40840},{\"end\":40872,\"start\":40851},{\"end\":40888,\"start\":40872},{\"end\":41177,\"start\":41157},{\"end\":41190,\"start\":41177},{\"end\":41357,\"start\":41350},{\"end\":41366,\"start\":41357},{\"end\":41374,\"start\":41366},{\"end\":41382,\"start\":41374},{\"end\":41399,\"start\":41382},{\"end\":41415,\"start\":41399},{\"end\":41700,\"start\":41683},{\"end\":41942,\"start\":41926},{\"end\":41953,\"start\":41942},{\"end\":41960,\"start\":41953},{\"end\":41968,\"start\":41960},{\"end\":41974,\"start\":41968},{\"end\":41987,\"start\":41974},{\"end\":42002,\"start\":41987},{\"end\":42320,\"start\":42310},{\"end\":42491,\"start\":42480},{\"end\":42842,\"start\":42829},{\"end\":43061,\"start\":43041},{\"end\":43077,\"start\":43061},{\"end\":43413,\"start\":43394},{\"end\":43433,\"start\":43413},{\"end\":43453,\"start\":43433},{\"end\":43458,\"start\":43453},{\"end\":43744,\"start\":43726},{\"end\":43757,\"start\":43744},{\"end\":43960,\"start\":43945},{\"end\":43974,\"start\":43960},{\"end\":43981,\"start\":43974},{\"end\":43998,\"start\":43981},{\"end\":44387,\"start\":44372},{\"end\":44401,\"start\":44387},{\"end\":44408,\"start\":44401},{\"end\":44425,\"start\":44408},{\"end\":44629,\"start\":44611},{\"end\":44635,\"start\":44629},{\"end\":44640,\"start\":44635},{\"end\":44644,\"start\":44640},{\"end\":44649,\"start\":44644},{\"end\":44666,\"start\":44649},{\"end\":44676,\"start\":44666},{\"end\":44685,\"start\":44676},{\"end\":44689,\"start\":44685},{\"end\":44695,\"start\":44689},{\"end\":44702,\"start\":44695},{\"end\":44711,\"start\":44702},{\"end\":44728,\"start\":44711},{\"end\":44743,\"start\":44728},{\"end\":44754,\"start\":44743},{\"end\":44763,\"start\":44754},{\"end\":44781,\"start\":44763},{\"end\":44793,\"start\":44781},{\"end\":45238,\"start\":45222},{\"end\":45256,\"start\":45238},{\"end\":45266,\"start\":45256},{\"end\":45276,\"start\":45266},{\"end\":45292,\"start\":45276},{\"end\":45313,\"start\":45292},{\"end\":45615,\"start\":45597},{\"end\":45626,\"start\":45615},{\"end\":45634,\"start\":45626},{\"end\":45651,\"start\":45634},{\"end\":45667,\"start\":45651},{\"end\":45976,\"start\":45960},{\"end\":45992,\"start\":45976},{\"end\":46004,\"start\":45992},{\"end\":46246,\"start\":46227},{\"end\":46254,\"start\":46246},{\"end\":46274,\"start\":46254},{\"end\":46287,\"start\":46274},{\"end\":46299,\"start\":46287},{\"end\":46309,\"start\":46299},{\"end\":46519,\"start\":46500},{\"end\":46524,\"start\":46519},{\"end\":46529,\"start\":46524},{\"end\":46534,\"start\":46529},{\"end\":46544,\"start\":46534},{\"end\":46554,\"start\":46544},{\"end\":46562,\"start\":46554},{\"end\":46576,\"start\":46562},{\"end\":46586,\"start\":46576},{\"end\":46596,\"start\":46586},{\"end\":46603,\"start\":46596},{\"end\":46612,\"start\":46603},{\"end\":46631,\"start\":46612},{\"end\":46650,\"start\":46631},{\"end\":46989,\"start\":46985},{\"end\":46999,\"start\":46989},{\"end\":47007,\"start\":46999},{\"end\":47011,\"start\":47007},{\"end\":47019,\"start\":47011},{\"end\":47303,\"start\":47287},{\"end\":47315,\"start\":47303},{\"end\":47327,\"start\":47315},{\"end\":47332,\"start\":47327},{\"end\":47346,\"start\":47332},{\"end\":47358,\"start\":47346},{\"end\":47573,\"start\":47555},{\"end\":47589,\"start\":47573},{\"end\":47604,\"start\":47589},{\"end\":47790,\"start\":47772},{\"end\":47802,\"start\":47790}]", "bib_venue": "[{\"end\":40105,\"start\":40079},{\"end\":40477,\"start\":40441},{\"end\":40794,\"start\":40709},{\"end\":41155,\"start\":41095},{\"end\":41348,\"start\":41297},{\"end\":41736,\"start\":41700},{\"end\":42044,\"start\":42002},{\"end\":42323,\"start\":42320},{\"end\":42568,\"start\":42491},{\"end\":42853,\"start\":42842},{\"end\":43137,\"start\":43077},{\"end\":43483,\"start\":43458},{\"end\":43760,\"start\":43757},{\"end\":44070,\"start\":43998},{\"end\":44370,\"start\":44319},{\"end\":44833,\"start\":44793},{\"end\":45220,\"start\":45150},{\"end\":45595,\"start\":45503},{\"end\":45958,\"start\":45857},{\"end\":46225,\"start\":46175},{\"end\":46498,\"start\":46468},{\"end\":47023,\"start\":47019},{\"end\":47285,\"start\":47229},{\"end\":47553,\"start\":47514},{\"end\":47806,\"start\":47802}]"}}}, "year": 2023, "month": 12, "day": 17}