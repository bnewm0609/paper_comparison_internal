{"id": 221112229, "updated": "2023-10-06 12:12:22.019", "metadata": {"title": "Free View Synthesis", "authors": "[{\"first\":\"Gernot\",\"last\":\"Riegler\",\"middle\":[]},{\"first\":\"Vladlen\",\"last\":\"Koltun\",\"middle\":[]}]", "venue": "Computer Vision \u2013 ECCV 2020", "journal": "Computer Vision \u2013 ECCV 2020", "publication_date": {"year": 2020, "month": 8, "day": 12}, "abstract": "We present a method for novel view synthesis from input images that are freely distributed around a scene. Our method does not rely on a regular arrangement of input views, can synthesize images for free camera movement through the scene, and works for general scenes with unconstrained geometric layouts. We calibrate the input images via SfM and erect a coarse geometric scaffold via MVS. This scaffold is used to create a proxy depth map for a novel view of the scene. Based on this depth map, a recurrent encoder-decoder network processes reprojected features from nearby views and synthesizes the new view. Our network does not need to be optimized for a given scene. After training on a dataset, it works in previously unseen environments with no fine-tuning or per-scene optimization. We evaluate the presented approach on challenging real-world datasets, including Tanks and Temples, where we demonstrate successful view synthesis for the first time and substantially outperform prior and concurrent work.", "fields_of_study": "[\"Computer Science\"]", "external_ids": {"arxiv": "2008.05511", "mag": "3109244019", "acl": null, "pubmed": null, "pubmedcentral": null, "dblp": "conf/eccv/RieglerK20", "doi": "10.1007/978-3-030-58529-7_37"}}, "content": {"source": {"pdf_hash": "49fae04a4e9383080788759f63dba75c86bd21b0", "pdf_src": "Arxiv", "pdf_uri": "[\"https://arxiv.org/pdf/2008.05511v1.pdf\"]", "oa_url_match": false, "oa_info": null}, "grobid": {"id": "92c850404703cf0bb5523a9660af6442c3d5baed", "type": "plain-text", "url": "s3://ai2-s2-pdf-extraction-prod/parse-results/s2orc_worker/49fae04a4e9383080788759f63dba75c86bd21b0.txt", "contents": "\nFree View Synthesis\n\n\nGernot Riegler \nIntel Labs\n\n\nVladlen Koltun \nIntel Labs\n\n\nFree View Synthesis\nview synthesis, image-based rendering\nWe present a method for novel view synthesis from input images that are freely distributed around a scene. Our method does not rely on a regular arrangement of input views, can synthesize images for free camera movement through the scene, and works for general scenes with unconstrained geometric layouts. We calibrate the input images via SfM and erect a coarse geometric scaffold via MVS. This scaffold is used to create a proxy depth map for a novel view of the scene. Based on this depth map, a recurrent encoder-decoder network processes reprojected features from nearby views and synthesizes the new view. Our network does not need to be optimized for a given scene. After training on a dataset, it works in previously unseen environments with no finetuning or per-scene optimization. We evaluate the presented approach on challenging real-world datasets, including Tanks and Temples, where we demonstrate successful view synthesis for the first time and substantially outperform prior and concurrent work.\n\nIntroduction\n\nSuppose you want to visit the Sagrada Fam\u00edlia in Barcelona but cannot travel there in person due to a coronavirus pandemic that shut down travel across the globe. Virtual reality could offer a surrogate for physically being there. For the experience to be maximally compelling, two requirements must be met. First, you should be free to move through the scene: you should be able to go anywhere in the environment, freely moving your head and body. Second, the synthesized images should be photorealistic: perceptually indistinguishable from reality.\n\nIn this paper, we present a method for free view synthesis from unstructured input images in general scenes. Given a set of images or a video of a scene, our approach enables the rendering of a completely new camera path. See Figure 1 and the supplementary video for examples. We use 3D proxy geometry to map information from the source images to the novel target view. Rather than mapping the color values of the source images, we first encode them using a deep convolutional network. Utilizing the proxy geometry, we map the encoded features from the source images into the target view and blend them via a second network. Since the target views can deviate significantly from the source views, we develop a recurrent blending network that is invariant to the number of input images. Fig. 1: Novel view synthesis from unstructured input images. The first three images show our synthesized results on the Truck scene from Tanks and Temples [21]. The unstructured image sequence was recorded using a handheld camera in natural motion. We repurpose the Tanks and Temples dataset to evaluate view synthesis by using a subset of the images as input (green cameras in the bottom right image). The other views, which significantly deviate from the input, act as target poses for view synthesis (red cameras).\n\nExperimental results indicate that our approach works much better than state-of-the-art methods across challenging real-world datasets. On the Tanks and Temples dataset [21], we reduce the LPIPS error [48] by more than a factor of 2 on all scenes with respect to state-of-the-art methods such as EVS [8] and LLFF [26]. On the DTU dataset [1], we also significantly reduce LPIPS relative to EVS and LLFF.\n\nFurthermore, we convincingly outperform methods that are published concurrently with our work: Neural Radiance Fields (NeRF) [27] and Neural Point-Based Graphics (NPBG) [2]. We reduce LPIPS relative to these concurrent methods on Tanks and Temples and perform on par on DTU. We also observe that NPBG performs well on Tanks and Temples and poorly on DTU, NeRF performs well on DTU and poorly on Tanks and Temples, while our approach performs well across datasets.\n\n\nRelated Work\n\nImage-based rendering without deep learning. Image-based rendering aims to enable the synthesis of new views of a scene directly from a set of input images [6,11,14,17,24,36,37,50]. Different methods map information from the input images to the target view in different ways. Early light-field methods [14,24,36] do not require any information about the scene geometry, but either require a fairly dense and regularly-spaced camera grid, or restrict the target view to be a linear combination of the source views. Heigl et al. [17] compute depth maps per view via stereo matching and use them for view synthesis. Bilinear blending of viewpoints is possible if the cameras are located approximately on the surface of a sphere and the object is centered [10]. These approaches impose restrictions on the layout of the input views, while we target unstructured settings in which the input views are distributed freely around the scene, for example with a single handheld video sequence.\n\nApproaches for unstructured view synthesis are commonly based on constructing 3D proxy geometry that guides the synthesis. Buehler et al. [3] describe the Unstructured Lumigraph, which utilizes dense and accurate 3D geometry to map and blend the input images in a novel target view. Chaurasia et al. [4] estimate a per-view depth map and use these to map color values and blending weights into the target view. The method leverages superpixels to make up for missing depth values. Hyperlapse [22] also uses 3D proxy geometry obtained via structure-from-motion (SfM) and multi-view stereo (MVS). To composite a clean image in the target view, the method optimizes a Markov random field.\n\nRather than estimate depth from input color images, some systems assume that the input views were acquired by an RGB-D sensor that provided dense depth maps of the scene. Hedman et al. [16] utilize such an RGB-D sensor to aid their fast rendering pipeline. Penner and Zhang [32] use a volumetric approach that associates each voxel with a confidence value which indicates whether the voxel encloses free space or a physical surface.\n\nImage-based rendering with deep learning. Deep learning has come to play an important role in image-based rendering. Deep networks have been used to blend input images in the target view [15,43], to construct neural scene representations [2,29,39,40,42], and to unify geometry estimation and blending in a single model [12,19].\n\nFlynn et al. [13] used a plane-sweep volume [9] within a network architecture for image-based rendering. A color branch predicts the color values for each depth plane in the target view and a second branch predicts the probability for a given depth plane. Kalantari et al. [19] propose a similar system for a lightfield setting: four cameras placed on a plane with the same viewing direction. Their method also constructs a plane-sweep volume with the four given images and computes mean and standard deviation per plane as features. Based on these features, one network estimates a disparity map and another reprojects the images and processes them. Hedman et al. [15] use a deep convolutional network to blend source images that have been warped into the target view. Given a dense and accurate proxy geometry obtained by two independent MVS methods, four image mosaics are generated and are then fed to a network to estimate blending weights. Our work is related as we also emphasize the role of the mapping and blending network, but we do not require the construction of input mosaics based on hand-crafted heuristics. Instead, our method can handle an arbitrary number of input images and we output full color images together with blending weights, which enables a certain degree of inpainting. Thies et al. [43] extend the ideas of Hedman et al. [15] to better handle view-dependent effects. They train an additional network per scene that estimates view-dependent effects given a depth map of the target view. Xu et al. [45] also focus on view-dependent effects, but use a structured setup and directional lighting.\n\nZhou et al. [49] introduce a multi-plane image representation that is estimated by a convolutional network for stereo magnification. The image is represented over multiple RGB-\u03b1 planes, where each plane is related to a certain depth. Given this representation, new views can be rendered using back-to-front composition. Choi et al. [8] build upon MVSNet [46] for view extrapolation. The method estimates a depth probability volume for each input view that is then warped and fused into the target view. From the fused volume an initial novel view is synthesized. This is then further refined by comparing and integrating candidate patches from the source images. Similarly, the method of Srinivasan et al. [41] synthesizes views from a narrow-baseline pair of images. The work extends the idea of multi-plane images [49] and shows the relation between the range of views that can be rendered from a multi-plane image and the depth plane sampling frequency. Mildenhall et al. [26] further improve this method with practical user guidance and refined network architectures together with local layered scene representations. Flynn et al. [12] considerably improve the view synthesis quality of light-field setups. They use plane sweep volume inputs [9] and multi-plane image outputs [49] together with a network based on regularized gradient descent to gradually refine the generated images.\n\nInstead of mapping features from source images to novel target views, some very recent methods train neural scene representations. In a work that is published concurrently with ours, Aliev et al. [2] describe Neural Point-Based Graphics, where each 3D point is associated with a learned feature vector. These features are splatted into the target view and translated via a rendering network to synthesize the output image. The feature vectors are optimized per scene: application to a new scene requires training the feature extractor for that scene. Thies et al. [42] use a mesh instead of 3D points to embed the feature vectors. Sitzmann et al. [39] avoid explicit proxy geometry and project source images into a neural voxel grid, where each voxel is associated with a trainable feature vector. This representation is likewise trained for each object it is applied to. Lombardi et al. [25] avoid memory-intensive high-resolution neural voxel grids by computing warp fields. In another concurrent work, Mildenhall et al. [27] represent the 5D radiance field by an MLP that can be queried in a volume rendering framework to synthesize new views. In all these methods, dedicated per-scene training is required to apply the representation to a new scene. We train our image encoding and blending networks only once on a training set and apply them to new scenes without any per-scene adaptation or fine-tuning.\n\nIn a related line of work, new views are synthesized from a single input image [30,44]. These approaches only allow small deviations from the initial viewpoint, rather than the unrestricted travel through the scene that motivates our work.\n\n\nMethod\n\nOur method begins with a preprocessing stage that involves estimating the poses of the input images and computing 3D proxy geometry via multi-view stereo and meshing. Given a target view, we select nearby source images, map them into the target view, and blend them using a recurrent convolutional network. We now describe each step in detail.\n\n\nPreprocessing\n\nPose estimation. Our input is a set of N images {I n } N n=1 , for example from a handheld video of a scene. We begin by estimating the poses of these images. For this purpose, we rely on well-established structure-from-motion (SfM) techniques. Specifically, we utilize COLMAP [35] to compute camera poses and a sparse 3D point cloud of the scene. The poses are represented by rotation matrices {R n } N n=1 and translation vectors {t n } N n=1 . The SfM pipeline also estimates the intrinsic parameters of the cameras {K n } N n=1 and distortion coefficients. 1 We use these to undistort all images. In the remainder of the paper, the set of images {I n } N n=1 refers to the set of undistorted images. Proxy geometry. For the mapping of the source images to the target view and also for the selection of the source images that are used to synthesize a novel view\u00ce t , we need 3D proxy geometry M. We run a standard multi-view stereo (MVS) method [34] to estimate a depth map for each source image. The depth maps are further fused into a coherent 3D point cloud using the fusion algorithm implemented in COLMAP [34,35]. We also experimented with more recent MVS methods [46,47], but did not observe significant improvements in the mapping and blending performance on large scale scenes.\n\nFor the mapping of the source image features, we rely on a depth map in the novel target view D t that is derived from the proxy geometry. However, rendering depth maps from 3D point clouds is problematic for two reasons. First, 3D points that are in the background and should be occluded by a surface can be projected into the foreground, leading to invalid depth values. Second, in larger untextured regions it is likely that no 3D points are reconstructed. Both problems can be alleviated by fitting a surface mesh to the 3D point cloud. We utilize a Delaunaybased reconstruction [18,23] as it can tolerate a certain amount of outliers. The roughness of the resulting surface can be handled by our subsequent blending network. The resulting surface mesh M is used to derive depth maps of the source views {D n } N n=1 and of any target view D t . Figure 2 shows our computed proxy geometry for a Tanks and Temples scene [21].\n\n\nSelection of Source Images\n\nA core advantage of the mapping and blending network described in the next section is that it supports an arbitrary number of source input images. However, in practical situations, many source images will have no overlap with the target view, because they are facing into the opposite direction, or are taken from a very different location. Also during network training, we are limited by GPU memory and can only use a fixed number of input images. For these reasons, we have a simple but effective source selection strategy. Based on the proxy geometry M we select the K out of N source images that maximize the overlap with the target view. Specifically, we derive for each target view a depth map D t . Each pixel of the depth map D t with a valid depth value is projected into the domains of all source images based on the user defined intrinsic and extrinsic parameters of the target view K t , R t , and t t and the estimated intrinsic and extrinsic parameters of the source images {K n } N n=1 , {R n } N n=1 , and {t n } N n=1 . For each source image, we count the number of pixels from the target view that are mapped to the valid source image domain and select the top K images that maximize that score. To further handle occlusions and other outliers in this process, we only count pixels where the projected target depth is within 1% of the source depth.\n\n\nMapping and Blending\n\nOnce we have selected the source images {I k } K k=1 , we need to map them into the novel target view and blend the information to an output image\u00ce t . For this purpose, we have developed a recurrent mapping and blending network. We first encode each source image via a U-Net based convolutional network [33]. The features are then mapped into the novel target view and sequentially processed by a blending network that is based on convolutional gated recurrent units (GRU) [7]. For each source image I k , the blending network outputs per-pixel confidence values and a color image in the target view. The final image\u00ce t is then generated by a soft-argmax over these confidence values and color images. Figure 3 provides an overview of the recurrent mapping and blending network.\n\nEncoding source images. In the first part of the mapping and blending network, we encode each source image I k with a U-Net based convolutional network. The encoder of the U-Net consists of the first three stages of an ImageNet Fig. 3: Overview of the recurrent mapping and blending network. The input is a set of source images {I k } K k=1 that are first encoded by a shared convolutional network, the image encoder. We map the resulting features into the target view using the depth map D t , derived from the proxy geometry M. The features are then aggregated by a recurrent network, the blending decoder. For each input image I k , we output a confidence image C k and a color image\u00ce t k , which are then aggregated to a final output\u00ce t via a soft-argmax using w(C k ) = exp(C k )/ j exp(C j ).\nI 1 I 2 . . . I K Image Encoder W 1 (D t ) W 2 (D t ) W K (D t ) C 0 I t0 C 1 I t1 C K I tK Blending Decoder k w(C k )\u00ce tk\u00cet soft-argmax forward connection recurrent connection\npretrained VGG network [38] where we replaced the max-pooling with average pooling layers. In the decoder of the U-Net, we upsample the output features of the previous stage using nearest-neighbor interpolation, concatenate them with the encoder output of the same resolution, and process this by two additional convolutional layers. All convolutional layers are followed by a ReLU [28].\n\nMapping into the target view. The encoded source images must then be mapped into the target view. For this, we rely on the depth map in the target view D t that is derived from the proxy geometry M. We can gather the feature vectors from the source views via a warping operation W k (D t ). For a pixel in homogeneous coordinates u t in the target view, we select the feature vector in the source image k at the location u k = K k (R r D t (u t )K \u22121 t u t + t r ), with relative rotation R r = R k R T t and relative translation t r = t s \u2212R r t t . As the locations u k will not be located at the center of the pixel in general, we bilinearly interpolate the features in the warping. Further, in several cases u k will not be inside the source image domain. In those instances, we set the warped feature to zero and additionally indicate those locations in a mask that is concatenated to the warped features. A major problem with the proxy geometry is that several areas do not have associated depth values, especially structures that are far away, or the sky. To alleviate this problem, we warp features that do not have a valid depth value associated using +\u221e as depth value and also concatenate a mask that indicates those features. This greatly reduces artifacts in the background.\n\nBlending. At this point, we have the feature maps of K source images warped into the target view and now we need to aggregate the information to obtain a single blended output image I t . A suitable network structure for this kind of problem is a recurrent architecture. More specifically, we utilize a U-Net based convolutional architecture with gated recurrent units (GRU) [7] that regularizes and blends the source feature maps along the spatial dimensions and across the source views. In principle, all convolutional layers of the blending network can be replaced by a convolutional GRU. However, we observed that just replacing the last convolutional layer per stage in the encoder, and the first convolutional layer per stage in the decoder works as well and decreases the time needed for training and evaluation of the overall network. For each source image I k , the blending decoder outputs confidence values C k and color information\u00ce t k per pixel in the target view. The final output\u00ce t is then generated by a soft-argmax\u00ce t = k w(C k )\u00ce t k , where w are weights computed by a softmax over the confidence values.\n\nTraining. To train the mapping and blending network we require a supervision signal. We use a natural setup [12,15,43]: sample one of the source images, withhold it, and use it as ground-truth I t .\n\nAs training loss we utilize the perceptual loss of Chen and Koltun [5]. Given our estimated image\u00ce t and the ground-truth target I t , the loss is\nL(\u00ce t , I t ) = ||\u00ce t \u2212 I t || 1 + l \u03bb l ||\u03c6 l (\u00ce t ) \u2212 \u03c6 l (I t )|| 1 ,(1)\nwhere \u03c6 l are the outputs of the layers 'conv1 2', 'conv2 2', 'conv3 2', 'conv4 2', and 'conv5 2' of a pretrained VGG-19 network [38]. The weighting coefficients {\u03bb l } 5 l=1 are set as in [5]. We use ADAM [20] with a learning rate of 10 \u22124 and set \u03b2 1 = 0.9, \u03b2 2 = 0.9999, and = 10 \u22128 to train the recurrent mapping and blending network. We train the model for 450,000 iterations with a batch size of 1.\n\nAcceleration. The recurrent nature of our mapping and blending network allows the integration of an arbitrary number of source images with a low memory footprint. To further speed up processing, we precompute the feature embeddings of the source images. This avoids the repeated encoding of the source images for different synthesized views.\n\n\nExperimental Evaluation\n\nWe first evaluate our design choices in controlled experiments and then compare to the state of the art. For each scene, we first run the COLMAP SfM pipeline [35] to get camera poses and a sparse reconstruction as described in Section 3.1. We also create a dense reconstruction of all models using MVS [34] and Delaunay-based surface reconstruction [18,23] as outlined in Section 3.1. To train the network we use the Tanks and Temples dataset [21]. We select 17 of the 21 scenes in the dataset for training and supervise the model by designating one image as the ground-truth target and using the remaining ones as source images. For testing we use scenes that are not included in our training set: Truck, Train, M60, and Playground. We chose these scenes for evaluation because the camera paths in these scenes were amenable to extraction of longer subsequences that can be withheld to evaluate significant deviations from the source images. Note that none of the images from the evaluation scenes have been seen during the training of our method. See Figure 1 for a visualization of the target and source cameras for the Truck scene. For training, we downsample the images by scaling the image height and width by a factor of four each. We implemented our recurrent mapping and blending network in PyTorch [31]. In all of our evaluations, we report three different image metrics. We include PSNR and SSIM to evaluate low-level image differences. However, those metrics have only weak correlation with human perception [48]. Therefore, we also include the LPIPS metric, which is based on perceptual features in trained convolutional networks and was shown to better correlate with human perception [48].\n\nArchitectural choices. In the first set of experiments we evaluate our architectural design choices. See Table 1 for an overview of the results on the Tanks and Temples test scenes. For these experiments, we also use the quarter resolution images for evaluation. This evaluation is conducted in the leave-one-out setting, i.e., we select each image per scene once as the unseen ground-truth target and utilize the other images as source images.\n\nOur first baseline, Fixed Identity, is a network that is related to the one presented in [15]. It is a U-Net architecture with the same capacity as our blending network, but it receives as input a fixed number (K = 4) of mapped source images concatenated along the channel dimension and directly outputs the image in the target view. We use the same source image selection strategy as in our method. Fixed Encoding differs in that we use the same VGG-19 based encoding network prior to mapping as in our approach. Cat Global Avg. is the same architecture as our proposed one without recurrent units, but a global average concatenated to each blending head. We also ablate our recurrent mapping and blending architecture. Ours w/o GRU uses no GRU in the blending decoder. In Ours w/o Encoding we directly map the input images to the recurrent blending network, and in Ours w/o Masks we do not append the mapping masks to the blending network input. Ours w/o inf. depth does not set the invalid depth val-ues in D t to +\u221e, and Ours w/o soft-argmax uses a single output head after the evaluation of the last blending decoder instead of the soft-argmax.\n\nThe results presented in Table 1 validate the design choices of our method. A clear advantage is the encoding of the source images before mapping and blending. We see an overall improvement for the fixed input architecture and our recurrent mapping and blending network. The difference between our results and the results of Ours w/o GRU and Cat Global Avg. also highlights the benefit of the recurrent network, i.e., propagating blending information between source images via a recurrent unit. In Figure 4 we evaluate the performance of our method with an increasing number of source images. We see that image fidelity improves with the number of source images up to 7 images and then saturates. Note that a higher number of source images is especially important if the novel view is farther away from the scene or object than any of the source images. In this setting, more source images are needed to cover the view frustum.\n\nTanks and Temples. In this evaluation, we compare our approach to state-of-the-art methods on novel view sequences extracted from Tanks and Temples [21]. As we want to evaluate novel view synthesis from unstructured source images, we manually select a subset of camera poses from the test scenes as targets that we want to reconstruct. These target images are taken out of the dataset and only serve as ground truth for evaluation of our synthesized results. The scenes we use for evaluation have never been seen during the training of our method. An example of the setup for the Truck scene is depicted in Figure 1.\n\nWe compare our method to two recent state-of-the-art and two concurrent methods. Extreme View Synthesis (EVS ) [8] mainly focuses on extreme stereo baseline magnification and utilizes the multi-view stereo network MVSNet [46]. Specifically, it warps the 3D feature volumes of the source images into the target view and fuses them. We utilize the code provided by the authors and as no training code is available, we also apply the pretrained model that is provided. Local Light Field Fusion (LLFF ) [26] is based on the multi-plane image idea and assumes that the poses of the source images lie on a plane. For this method as well, we use the code provided by the authors and the provided pretrained model weights as no training code is available.\n\nWe also compare to Neural Radiance Fields (NeRF ), which is concurrent work that is published alongside ours [27]. Finally, we benchmark Neural Point-Based Graphics (NPBG), which is likewise a concurrent publication [2]. We train the descriptors per 3D point and fine-tune the provided rendering network per scene, utilizing the available code. Note that NeRF and NPBG have to be trained on the test scenes, whereas our approach does not need any adaptation or fine-tuning on new scenes. LLFF [26] NeRF [27] NPBG [2] Ours Truck Train M60 Quantitative results are summarized in Table 2 and qualitative results are shown in Figure 5  lenging unstructured setting: The assumptions of LLFF are not met, which leads to strong ghosting artifacts. EVS works better, but often fails on fine details and sometimes misses whole parts of the image, although we used the very same set of source images as input as we selected for our method. The latter artifacts are the main reason for the low quantitative performance of EVS. NeRF struggles on the Tanks and Temples scenes. The results are either blurry or fail completely, for example on the Train scene. NPBG produces good images that are competitive with ours. Our method produces sharp details and is superior to all other methods is terms of the LPIPS metric.\n\nNew recordings. We also evaluate the presented method on new recordings that stress the unstructured setting. We use a handheld camera in natural motion and record videos of different scenes to extract source images. We then record each scene again to gather ground-truth data for new target views. Results are shown in Figure 6 and the supplementary video. DTU. We now compare our method to state-of-theart alternatives in a more constrained view interpolation and extrapolation setting. For this we use the DTU dataset [1], which includes over 100 tabletop scenes. The image poses are identical for all scenes, as the camera has been mounted on a robotic arm and the views roughly cover an octant of a sphere. Figure 7 visualizes the poses.\n\nOf the 49 camera poses we selected 10 as targets for novel view synthesis and used the rest as source images. We test the view extrapolation capabilities of all methods by having four target views on the corners of the camera grid. Interpolation is tested on 6 center views. We use the object masks for scenes 65, 106, and 118, which are provided by [29] for all source images.\n\nWe summarize the quantitative results in Table 3. Qualitative results are shown in Figure 8 and the supplementary video. We notice blending artifacts in the images produced by EVS [8], which are reflected in the lower quantitative performance. On the other hand, the results of LLFF [26] and especially of NeRF [27] are clearly better compared to their performance on Tanks and Temples. This comes as no surprise because the DTU setup is much closer to the basic assumptions of these methods: the scene is a clearly bounded object and the camera poses are densely and regularly sampled by the source views. NPBG [2] struggles in this setting and often intermixes background and foreground. In contrast, our method yields sharp results, including in the extrapolation setting, and performs reasonable inpainting when geometry is missing. Note that the illumination varies with the viewing direction in DTU scenes. While we are still able to synthesize realistic results, low-level metrics such as PSNR are not very reliable.\n\nLimitations. While our method is a clear step forward compared to prior work, it has limitations. The first limitation is apparent when we examine videos rendered from a sequence of new views. We only synthesize images frame-by-frame and do not enforce any temporal consistency. Thus synthesized videos exhibit temporal instability. The second limitation stems from the use of proxy 3D geometry. If the 3D model used for mapping misses large parts of the scene or has gross outliers, our pipeline will produce visible artifacts. The flip side is that our approach can directly benefit from future improvements in SfM and MVS pipelines [21].\n\n\nConclusion\n\nWe presented a method for novel view synthesis in the challenging setting of unstructured input images acquired by natural motion through the scene. After preprocessing the input using standard SfM and MVS to get camera parameters and 3D proxy geometry, we showed that a recurrent mapping and blending architecture can produce sharp images for new views of the scene that depart significantly from the input. The recurrent architecture enables using an arbitrary number of source images per target view, which mostly eliminates the need for hand-crafted heuristics for source image selection and demonstrably helps in the unstructured setting. In future work, we plan to improve temporal consistency. We also expect that the results of our method will continue to improve as new techniques for SfM, MVS, and surface reconstruction are introduced.\n\nGT EVS [8] LLFF [26] NeRF [27] NPBG [2] Ours Scan 65 Scan 106 Scan 118 \n\nFig. 2 :\n2Proxy geometry for view synthesis. We use a surface mesh extracted from a Delaunay tetrahedralization (right). While it is more complete than the point cloud from MVS (left), it also introduces spurious triangles.\n\nFig. 4 :\n4The effect of increasing the number of source views.\n\nFig. 5 :\n5Qualitative results on Tanks and Temples. (Whole sequences withheld.)\n\n\nand the supplementary video. LLFF clearly fails in this chal-GT Ours Fig. 6: Qualitative results on new recordings.\n\nFig. 7 :\n7DTU evaluation setup. Gray cameras denote the source views. Green and blue cameras denote interpolation and extrapolation poses, respectively.\n\nFig. 8 :\n8View extrapolation results on the DTU dataset.\n\nTable 1 :\n1Evaluation of architectural choices on the Tanks and Temples dataset. (Leave-one-out protocol.) See the text for a detailed description of the conditions. \u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNRTruck \nTrain \nM60 \nPlayground \n\nFixed Identity \n0.116 0.819 21.22 \n0.201 0.751 18.53 \n0.110 0.871 22.67 \n0.119 0.824 22.38 \nFixed Encoding \n0.096 0.828 21.19 \n0.168 0.769 19.01 \n0.096 0.876 22.80 \n0.107 0.831 22.40 \nCat Global Avg. \n0.089 0.842 21.49 \n0.175 0.773 18.73 \n0.093 0.887 23.41 \n0.098 0.845 22.92 \nOurs w/o Encoding \n0.093 0.849 22.13 \n0.174 0.778 19.33 \n0.094 0.887 23.79 \n0.099 0.851 23.45 \nOurs w/o GRU \n0.094 0.845 21.74 \n0.159 0.782 19.26 \n0.087 0.893 23.49 \n0.095 0.849 23.30 \nOurs w/o Masks \n0.087 0.847 21.58 \n0.152 0.784 19.42 \n0.082 0.897 24.07 \n0.087 0.850 23.16 \nOurs w/o inf. depth \n0.093 0.847 21.94 \n0.169 0.782 18.96 \n0.087 0.896 24.08 \n0.094 0.853 23.47 \nOurs w/o soft-argmax \n0.091 0.845 21.74 \n0.159 0.786 19.43 \n0.086 0.891 23.79 \n0.090 0.857 23.50 \nOurs full \n0.082 0.852 22.03 0.147 0.794 19.54 0.081 0.894 23.98 0.084 0.859 23.51 \n\n\n\nTable 2 :\n2Results on Tanks and Temples. (Whole sequences withheld.)Truck \nTrain \nM60 \nPlayground \n\n\u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNR \u2193LPIPS \u2191SSIM \u2191PSNR \n\nEVS [8] \n0.41 0.563 14.99 \n0.64 0.454 11.81 \n0.62 0.473 \n9.66 \n0.39 0.610 16.34 \nLLFF [26] \n0.61 0.432 10.66 \n0.70 0.356 \n8.88 \n0.69 0.427 \n8.98 \n0.56 0.517 13.27 \nNeRF [27] \n0.61 0.690 19.47 \n0.74 0.532 13.16 \n0.62 0.691 15.99 \n0.54 0.734 21.16 \nNPBG [2] \n0.22 0.822 20.32 \n0.25 0.801 18.08 \n0.36 0.716 12.35 \n0.17 0.876 23.03 \nOur \n0.11 0.867 22.62 \n0.22 0.758 17.90 \n0.29 0.785 17.14 \n0.16 0.837 22.03 \n\nGT \n\nEVS [8] \n\n\n\nTable 3 :\n3Quantitative results on the DTU dataset. Numbers on the left are for view interpolation, numbers on the right are for extrapolation. LLFF [26] 0.51/0.44 0.939/0.926 22.44/22.04 0.61/0.39 0.907/0.893 24.08/24.61 0.47/0.30 0.932/0.929 28.95/27.40 NeRF [27] 0.17/0.32 0.987/0.963 34.41/27.81 0.36/0.40 0.973/0.931 34.52/24.36 0.24/0.27 0.985/0.952 37.16/28.39 NPBG [2] 0.82/0.96 0.896/0.839 17.77/15.59 0.94/0.53 0.856/0.879 20.70/22.54 0.74/0.41 0.876/0.905 24.10/24.Scan 65 \nScan 106 \nScan 118 \n\n\u2193LPIPS \n\u2191SSIM \n\u2191PSNR \n\u2193LPIPS \n\u2191SSIM \n\u2191PSNR \n\u2193LPIPS \n\u2191SSIM \n\u2191PSNR \n\nEVS [8] \n0.61/0.53 0.938/0.917 23.07/21.23 0.75/0.53 0.903/0.880 19.95/18.62 0.47/0.42 0.931/0.911 23.00/20.47 \n97 \nOur \n0.25/0.30 0.972/0.950 26.96/24.08 0.25/0.26 0.963/0.938 27.24/24.63 0.16/0.20 0.975/0.951 29.21/25.75 \n\n\nIn the case of video input data we assume that the intrinsics are shared for all views. \u2200i = j : Ki = Kj.\nAcknowledgements. We thank Kai Zhang for the evaluation of NeRF.\nLarge-Scale Data for Multiple-View Stereopsis. H Aanaes, R R Jensen, G Vogiatzis, E Tola, A B Dahl, International Journal of Computer Vision (IJCV). 1202Aanaes, H., Jensen, R.R., Vogiatzis, G., Tola, E., Dahl, A.B.: Large-Scale Data for Multiple-View Stereopsis. International Journal of Computer Vision (IJCV) 120(2) (2016)\n\nNeural Point-Based Graphics. K A Aliev, A Sevastopolsky, M Kolos, D Ulyanov, V Lempitsky, European Conference on Computer Vision (ECCV. Aliev, K.A., Sevastopolsky, A., Kolos, M., Ulyanov, D., Lempitsky, V.: Neural Point-Based Graphics. In: European Conference on Computer Vision (ECCV) (2020)\n\nUnstructured Lumigraph Rendering. C Buehler, M Bosse, L Mcmillan, S Gortler, M Cohen, ACM Transactions on Graphics (SIGGRAPH). ACMBuehler, C., Bosse, M., McMillan, L., Gortler, S., Cohen, M.: Unstructured Lumi- graph Rendering. In: ACM Transactions on Graphics (SIGGRAPH). ACM (2001)\n\nDepth Synthesis and Local Warps for Plausible Image-based Navigation. G Chaurasia, S Duchene, O Sorkine-Hornung, G Drettakis, ACM Transactions on Graphics. 32Chaurasia, G., Duchene, S., Sorkine-Hornung, O., Drettakis, G.: Depth Synthesis and Local Warps for Plausible Image-based Navigation. ACM Transactions on Graphics (SIGGRAPH) 32 (2013)\n\nPhotographic Image Synthesis with Cascaded Refinement Networks. Q Chen, V Koltun, International Conference on Computer Vision (ICCV. Chen, Q., Koltun, V.: Photographic Image Synthesis with Cascaded Refinement Networks. In: International Conference on Computer Vision (ICCV) (2017)\n\nView Interpolation for Image Synthesis. S E Chen, L Williams, In: ACM Transactions on Graphics. Chen, S.E., Williams, L.: View Interpolation for Image Synthesis. In: ACM Trans- actions on Graphics (SIGGRAPH) (1993)\n\nLearning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation. K Cho, B Van Merri\u00ebnboer, C Gulcehre, D Bahdanau, F Bougares, H Schwenk, Y Bengio, Empirical Methods in Natural Language Processing (EMNLP). Cho, K., Van Merri\u00ebnboer, B., Gulcehre, C., Bahdanau, D., Bougares, F., Schwenk, H., Bengio, Y.: Learning Phrase Representations using RNN Encoder-Decoder for Statistical Machine Translation. In: Empirical Methods in Natural Language Pro- cessing (EMNLP) (2014)\n\nExtreme View Synthesis. I Choi, O Gallo, A Troccoli, M H Kim, J Kautz, International Conference on Computer Vision (ICCV). Choi, I., Gallo, O., Troccoli, A., Kim, M.H., Kautz, J.: Extreme View Synthesis. In: International Conference on Computer Vision (ICCV) (2019)\n\nA space-sweep approach to true multi-image matching. R T Collins, Computer Vision and Pattern Recognition (CVPR. Collins, R.T.: A space-sweep approach to true multi-image matching. In: Computer Vision and Pattern Recognition (CVPR) (1996)\n\nUnstructured Light Fields. A Davis, M Levoy, F Durand, Computer Graphics Forum. 31Davis, A., Levoy, M., Durand, F.: Unstructured Light Fields. Computer Graphics Forum 31 (2012)\n\nModeling and rendering architecture from photographs: A hybrid geometry-and image-based approach. P E Debevec, C J Taylor, J Malik, ACM Transactions on Graphics. Debevec, P.E., Taylor, C.J., Malik, J.: Modeling and rendering architecture from photographs: A hybrid geometry-and image-based approach. In: ACM Transactions on Graphics (SIGGRAPH) (1996)\n\nDeepView: View Synthesis with Learned Gradient Descent. J Flynn, M Broxton, P Debevec, M Duvall, G Fyffe, R Overbeck, N Snavely, R Tucker, Computer Vision and Pattern Recognition (CVPR). Flynn, J., Broxton, M., Debevec, P., DuVall, M., Fyffe, G., Overbeck, R., Snavely, N., Tucker, R.: DeepView: View Synthesis with Learned Gradient Descent. In: Computer Vision and Pattern Recognition (CVPR) (2019)\n\nDeepStereo: Learning to Predict New Views from the World's Imagery. J Flynn, I Neulander, J Philbin, N Snavely, Computer Vision and Pattern Recognition (CVPR). Flynn, J., Neulander, I., Philbin, J., Snavely, N.: DeepStereo: Learning to Predict New Views from the World's Imagery. In: Computer Vision and Pattern Recogni- tion (CVPR) (2016)\n\nThe Lumigraph. S J Gortler, R Grzeszczuk, R Szeliski, M F Cohen, ACM Transactions on Graphics. 3096Gortler, S.J., Grzeszczuk, R., Szeliski, R., Cohen, M.F.: The Lumigraph. ACM Transactions on Graphics (SIGGRAPH) 96(30) (1996)\n\nDeep Blending for Free-Viewpoint Image-Based Rendering. P Hedman, J Philip, T Price, J M Frahm, G Drettakis, G Brostow, ACM Transactions on Graphics (SIGGRAPH Asia). Hedman, P., Philip, J., Price, T., Frahm, J.M., Drettakis, G., Brostow, G.: Deep Blending for Free-Viewpoint Image-Based Rendering. In: ACM Transactions on Graphics (SIGGRAPH Asia) (2018)\n\nScalable inside-out imagebased rendering. P Hedman, T Ritschel, G Drettakis, G Brostow, ACM Transactions on Graphics (SIGGRAPH Asia). 356Hedman, P., Ritschel, T., Drettakis, G., Brostow, G.: Scalable inside-out image- based rendering. ACM Transactions on Graphics (SIGGRAPH Asia) 35(6) (2016)\n\nPlenoptic Modeling and Rendering from Image Sequences taken by a Hand Held Camera. B Heigl, R Koch, M Pollefeys, J Denzler, L Van Gool, German Conference on Pattern Recognition (GCPR). Heigl, B., Koch, R., Pollefeys, M., Denzler, J., Van Gool, L.: Plenoptic Modeling and Rendering from Image Sequences taken by a Hand Held Camera. In: German Conference on Pattern Recognition (GCPR) (1999)\n\nMulti-View Reconstruction Preserving Weakly-Supported Surfaces. M Jancosek, T Pajdla, Computer Vision and Pattern Recognition (CVPR. Jancosek, M., Pajdla, T.: Multi-View Reconstruction Preserving Weakly- Supported Surfaces. In: Computer Vision and Pattern Recognition (CVPR) (2011)\n\nLearning-Based View Synthesis for Light Field Cameras. N K Kalantari, T C Wang, R Ramamoorthi, ACM Transactions on Graphics (SIGGRAPH). 356Kalantari, N.K., Wang, T.C., Ramamoorthi, R.: Learning-Based View Synthesis for Light Field Cameras. ACM Transactions on Graphics (SIGGRAPH) 35(6) (2016)\n\nAdam: A Method for Stochastic Optimization. D P Kingma, J Ba, International Conference on Learning Representations (ICLR. Kingma, D.P., Ba, J.: Adam: A Method for Stochastic Optimization. In: Interna- tional Conference on Learning Representations (ICLR) (2015)\n\nTanks and Temples: Benchmarking Large-Scale Scene Reconstruction. A Knapitsch, J Park, Q Y Zhou, V Koltun, ACM Transactions on Graphics (SIG-GRAPH). 364Knapitsch, A., Park, J., Zhou, Q.Y., Koltun, V.: Tanks and Temples: Bench- marking Large-Scale Scene Reconstruction. ACM Transactions on Graphics (SIG- GRAPH) 36(4) (2017)\n\nFirst-person Hyper-lapse Videos. J Kopf, M F Cohen, R Szeliski, ACM Transactions on Graphics (SIGGRAPH). 334Kopf, J., Cohen, M.F., Szeliski, R.: First-person Hyper-lapse Videos. ACM Trans- actions on Graphics (SIGGRAPH) 33(4) (2014)\n\nEfficient Multi-View Reconstruction of Large-Scale Scenes using Interest Points, Delaunay Triangulation and Graph Cuts. P Labatut, J P Pons, R Keriven, International Conference on Computer Vision (ICCV). Labatut, P., Pons, J.P., Keriven, R.: Efficient Multi-View Reconstruction of Large- Scale Scenes using Interest Points, Delaunay Triangulation and Graph Cuts. In: International Conference on Computer Vision (ICCV) (2007)\n\nLight field rendering. M Levoy, P Hanrahan, ACM Transactions on Graphics. Levoy, M., Hanrahan, P.: Light field rendering. In: ACM Transactions on Graphics (SIGGRAPH) (1996)\n\nNeural Volumes: Learning Dynamic Renderable Volumes from Images. S Lombardi, T Simon, J Saragih, G Schwartz, A Lehrmann, Y Sheikh, ACM Transactions on Graphics (SIGGRAPH). 384Lombardi, S., Simon, T., Saragih, J., Schwartz, G., Lehrmann, A., Sheikh, Y.: Neu- ral Volumes: Learning Dynamic Renderable Volumes from Images. ACM Transac- tions on Graphics (SIGGRAPH) 38(4) (2019)\n\nB Mildenhall, P P Srinivasan, R Ortiz-Cayon, N K Kalantari, R Ramamoorthi, R Ng, A Kar, Local Light Field Fusion: Practical View Synthesis with Prescriptive Sampling Guidelines. Mildenhall, B., Srinivasan, P.P., Ortiz-Cayon, R., Kalantari, N.K., Ramamoor- thi, R., Ng, R., Kar, A.: Local Light Field Fusion: Practical View Synthesis with Prescriptive Sampling Guidelines. ACM Transactions on Graphics (SIGGRAPH) (2019)\n\nNeRF: Representing Scenes as Neural Radiance Fields for View Synthesis. B Mildenhall, P P Srinivasan, M Tancik, J T Barron, R Ramamoorthi, R Ng, European Conference on Computer Vision (ECCV). Mildenhall, B., Srinivasan, P.P., Tancik, M., Barron, J.T., Ramamoorthi, R., Ng, R.: NeRF: Representing Scenes as Neural Radiance Fields for View Synthesis. In: European Conference on Computer Vision (ECCV) (2020)\n\nRectified Linear Units Improve Restricted Boltzmann Machines. V Nair, G E Hinton, International Conference on Machine Learning (ICML). Nair, V., Hinton, G.E.: Rectified Linear Units Improve Restricted Boltzmann Ma- chines. In: International Conference on Machine Learning (ICML) (2010)\n\nDifferentiable Volumetric Rendering: Learning Implicit 3D Representations without 3D Supervision. M Niemeyer, L Mescheder, M Oechsle, A Geiger, Computer Vision and Pattern Recognition (CVPR). Niemeyer, M., Mescheder, L., Oechsle, M., Geiger, A.: Differentiable Volumet- ric Rendering: Learning Implicit 3D Representations without 3D Supervision. In: Computer Vision and Pattern Recognition (CVPR) (2020)\n\n3D Ken Burns Effect from a Single Image. S Niklaus, L Mai, J Yang, F Liu, ACM Transactions on Graphics (SIGGRAPH Asia). 386Niklaus, S., Mai, L., Yang, J., Liu, F.: 3D Ken Burns Effect from a Single Image. ACM Transactions on Graphics (SIGGRAPH Asia) 38(6) (2019)\n\nA Paszke, S Gross, F Massa, A Lerer, J Bradbury, G Chanan, T Killeen, Z Lin, N Gimelshein, L Antiga, PyTorch: An Imperative Style, High-Performance Deep Learning Library. Neural Information Processing SystemsPaszke, A., Gross, S., Massa, F., Lerer, A., Bradbury, J., Chanan, G., Killeen, T., Lin, Z., Gimelshein, N., Antiga, L., et al.: PyTorch: An Imperative Style, High- Performance Deep Learning Library. In: Neural Information Processing Systems (2019)\n\nSoft 3D Reconstruction for View Synthesis. E Penner, L Zhang, ACM Transactions on Graphics (SIGGRAPH). 366Penner, E., Zhang, L.: Soft 3D Reconstruction for View Synthesis. ACM Transac- tions on Graphics (SIGGRAPH) 36(6) (2017)\n\nU-Net: Convolutional Networks for Biomedical Image Segmentation. O Ronneberger, P Fischer, T Brox, Medical Image Computing and Computer-Assisted Intervention. MICCAIRonneberger, O., Fischer, P., Brox, T.: U-Net: Convolutional Networks for Biomed- ical Image Segmentation. In: Medical Image Computing and Computer-Assisted Intervention (MICCAI) (2015)\n\nPixelwise View Selection for Unstructured Multi-View Stereo. J L Sch\u00f6nberger, E Zheng, J M Frahm, M Pollefeys, European Conference on Computer Vision (ECCV). Sch\u00f6nberger, J.L., Zheng, E., Frahm, J.M., Pollefeys, M.: Pixelwise View Selection for Unstructured Multi-View Stereo. In: European Conference on Computer Vision (ECCV) (2016)\n\nStructure-from-Motion Revisited. J L Sch\u00f6nberger, J M Frahm, Computer Vision and Pattern Recognition (CVPR. Sch\u00f6nberger, J.L., Frahm, J.M.: Structure-from-Motion Revisited. In: Computer Vision and Pattern Recognition (CVPR) (2016)\n\nView Morphing. S M Seitz, C R Dyer, ACM Transactions on Graphics (SIG-GRAPH. Seitz, S.M., Dyer, C.R.: View Morphing. ACM Transactions on Graphics (SIG- GRAPH) (1996)\n\nReview of image-based rendering techniques. H Shum, S B Kang, Visual Communications and Image Processing. Shum, H., Kang, S.B.: Review of image-based rendering techniques. In: Visual Communications and Image Processing (2000)\n\nVery Deep Convolutional Networks for Large-Scale Image Recognition. K Simonyan, A Zisserman, International Conference on Learning Representations (ICLR. Simonyan, K., Zisserman, A.: Very Deep Convolutional Networks for Large-Scale Image Recognition. In: International Conference on Learning Representations (ICLR) (2015)\n\nDeepvoxels: Learning persistent 3d feature embeddings. V Sitzmann, J Thies, F Heide, M Nie\u00dfner, G Wetzstein, M Zollh\u00f6fer, Computer Vision and Pattern Recognition (CVPR). Sitzmann, V., Thies, J., Heide, F., Nie\u00dfner, M., Wetzstein, G., Zollh\u00f6fer, M.: Deep- voxels: Learning persistent 3d feature embeddings. In: Computer Vision and Pat- tern Recognition (CVPR) (2019)\n\nV Sitzmann, M Zollh\u00f6fer, G Wetzstein, Scene Representation Networks: Continuous 3D-Structure-Aware Neural Scene Representations. Neural Information Processing SystemsSitzmann, V., Zollh\u00f6fer, M., Wetzstein, G.: Scene Representation Networks: Con- tinuous 3D-Structure-Aware Neural Scene Representations. In: Neural Information Processing Systems (2019)\n\nPushing the Boundaries of View Extrapolation with Multiplane Images. P P Srinivasan, R Tucker, J T Barron, R Ramamoorthi, R Ng, N Snavely, Computer Vision and Pattern Recognition (CVPR). Srinivasan, P.P., Tucker, R., Barron, J.T., Ramamoorthi, R., Ng, R., Snavely, N.: Pushing the Boundaries of View Extrapolation with Multiplane Images. In: Com- puter Vision and Pattern Recognition (CVPR) (2019)\n\nDeferred Neural Rendering: Image Synthesis using Neural Textures. J Thies, M Zollh\u00f6fer, M Nie\u00dfner, ACM Transactions on Graphics. Thies, J., Zollh\u00f6fer, M., Nie\u00dfner, M.: Deferred Neural Rendering: Image Synthesis using Neural Textures. ACM Transactions on Graphics (SIGGRAPH) (2019)\n\nImage-guided Neural Object Rendering. J Thies, M Zollh\u00f6fer, C Theobalt, M Stamminger, M Nie\u00dfner, International Conference on Learning Representations (ICLR). Thies, J., Zollh\u00f6fer, M., Theobalt, C., Stamminger, M., Nie\u00dfner, M.: Image-guided Neural Object Rendering. In: International Conference on Learning Representa- tions (ICLR) (2020)\n\nSynSin: End-to-end View Synthesis from a Single Image. O Wiles, G Gkioxari, R Szeliski, J Johnson, Computer Vision and Pattern Recognition (CVPR). Wiles, O., Gkioxari, G., Szeliski, R., Johnson, J.: SynSin: End-to-end View Syn- thesis from a Single Image. In: Computer Vision and Pattern Recognition (CVPR) (2020)\n\nDeep View Synthesis from Sparse Photometric Images. Z Xu, S Bi, K Sunkavalli, S Hadap, H Su, R Ramamoorthi, ACM Transactions on Graphics (SIG-GRAPH). 384Xu, Z., Bi, S., Sunkavalli, K., Hadap, S., Su, H., Ramamoorthi, R.: Deep View Synthesis from Sparse Photometric Images. ACM Transactions on Graphics (SIG- GRAPH) 38(4) (2019)\n\nMVSNet: Depth Inference for Unstructured Multi-view Stereo. Y Yao, Z Luo, S Li, T Fang, L Quan, European Conference on Computer Vision (ECCV). Yao, Y., Luo, Z., Li, S., Fang, T., Quan, L.: MVSNet: Depth Inference for Unstruc- tured Multi-view Stereo. In: European Conference on Computer Vision (ECCV) (2018)\n\nRecurrent MVSNet for Highresolution Multi-view Stereo Depth Inference. Y Yao, Z Luo, S Li, T Shen, T Fang, L Quan, Computer Vision and Pattern Recognition (CVPR). Yao, Y., Luo, Z., Li, S., Shen, T., Fang, T., Quan, L.: Recurrent MVSNet for High- resolution Multi-view Stereo Depth Inference. In: Computer Vision and Pattern Recognition (CVPR) (2019)\n\nThe Unreasonable Effectiveness of Deep Features as a Perceptual Metric. R Zhang, P Isola, A A Efros, E Shechtman, O Wang, Computer Vision and Pattern Recognition (CVPR). Zhang, R., Isola, P., Efros, A.A., Shechtman, E., Wang, O.: The Unreasonable Effectiveness of Deep Features as a Perceptual Metric. In: Computer Vision and Pattern Recognition (CVPR) (2018)\n\nStereo Magnification: Learning view synthesis using multiplane images. T Zhou, R Tucker, J Flynn, G Fyffe, N Snavely, ACM Transactions on Graphics (SIG-GRAPH). 374Zhou, T., Tucker, R., Flynn, J., Fyffe, G., Snavely, N.: Stereo Magnification: Learn- ing view synthesis using multiplane images. ACM Transactions on Graphics (SIG- GRAPH) 37(4) (2018)\n\nHigh-quality video view interpolation using a layered representation. C L Zitnick, S B Kang, M Uyttendaele, S Winder, R Szeliski, ACM Transactions on Graphics (SIGGRAPH). 233Zitnick, C.L., Kang, S.B., Uyttendaele, M., Winder, S., Szeliski, R.: High-quality video view interpolation using a layered representation. ACM Transactions on Graphics (SIGGRAPH) 23(3) (2004)\n", "annotations": {"author": "[{\"end\":51,\"start\":23},{\"end\":80,\"start\":52}]", "publisher": null, "author_last_name": "[{\"end\":37,\"start\":30},{\"end\":66,\"start\":60}]", "author_first_name": "[{\"end\":29,\"start\":23},{\"end\":59,\"start\":52}]", "author_affiliation": "[{\"end\":50,\"start\":39},{\"end\":79,\"start\":68}]", "title": "[{\"end\":20,\"start\":1},{\"end\":100,\"start\":81}]", "venue": null, "abstract": "[{\"end\":1151,\"start\":139}]", "bib_ref": "[{\"attributes\":{\"ref_id\":\"b20\"},\"end\":2664,\"start\":2660},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":3197,\"start\":3193},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":3229,\"start\":3225},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":3327,\"start\":3324},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":3341,\"start\":3337},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":3365,\"start\":3362},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":3558,\"start\":3554},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":3601,\"start\":3598},{\"attributes\":{\"ref_id\":\"b5\"},\"end\":4068,\"start\":4065},{\"attributes\":{\"ref_id\":\"b10\"},\"end\":4071,\"start\":4068},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4074,\"start\":4071},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4077,\"start\":4074},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":4080,\"start\":4077},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":4083,\"start\":4080},{\"attributes\":{\"ref_id\":\"b36\"},\"end\":4086,\"start\":4083},{\"attributes\":{\"ref_id\":\"b49\"},\"end\":4089,\"start\":4086},{\"attributes\":{\"ref_id\":\"b13\"},\"end\":4215,\"start\":4211},{\"attributes\":{\"ref_id\":\"b23\"},\"end\":4218,\"start\":4215},{\"attributes\":{\"ref_id\":\"b35\"},\"end\":4221,\"start\":4218},{\"attributes\":{\"ref_id\":\"b16\"},\"end\":4440,\"start\":4436},{\"attributes\":{\"ref_id\":\"b9\"},\"end\":4665,\"start\":4661},{\"attributes\":{\"ref_id\":\"b2\"},\"end\":5035,\"start\":5032},{\"attributes\":{\"ref_id\":\"b3\"},\"end\":5197,\"start\":5194},{\"attributes\":{\"ref_id\":\"b21\"},\"end\":5390,\"start\":5386},{\"attributes\":{\"ref_id\":\"b15\"},\"end\":5770,\"start\":5766},{\"attributes\":{\"ref_id\":\"b31\"},\"end\":5859,\"start\":5855},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":6206,\"start\":6202},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":6209,\"start\":6206},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":6256,\"start\":6253},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":6259,\"start\":6256},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":6262,\"start\":6259},{\"attributes\":{\"ref_id\":\"b39\"},\"end\":6265,\"start\":6262},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":6268,\"start\":6265},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":6338,\"start\":6334},{\"attributes\":{\"ref_id\":\"b18\"},\"end\":6341,\"start\":6338},{\"attributes\":{\"ref_id\":\"b12\"},\"end\":6361,\"start\":6357},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":6391,\"start\":6388},{\"end\":6621,\"start\":6600},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7013,\"start\":7009},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":7661,\"start\":7657},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":7700,\"start\":7696},{\"attributes\":{\"ref_id\":\"b44\"},\"end\":7875,\"start\":7871},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":7984,\"start\":7980},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":8303,\"start\":8300},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":8326,\"start\":8322},{\"attributes\":{\"ref_id\":\"b40\"},\"end\":8678,\"start\":8674},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":8788,\"start\":8784},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":8947,\"start\":8943},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":9107,\"start\":9103},{\"attributes\":{\"ref_id\":\"b8\"},\"end\":9217,\"start\":9214},{\"attributes\":{\"ref_id\":\"b48\"},\"end\":9252,\"start\":9248},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":9557,\"start\":9554},{\"attributes\":{\"ref_id\":\"b41\"},\"end\":9926,\"start\":9922},{\"attributes\":{\"ref_id\":\"b38\"},\"end\":10009,\"start\":10005},{\"attributes\":{\"ref_id\":\"b24\"},\"end\":10250,\"start\":10246},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":10385,\"start\":10381},{\"attributes\":{\"ref_id\":\"b29\"},\"end\":10852,\"start\":10848},{\"attributes\":{\"ref_id\":\"b43\"},\"end\":10855,\"start\":10852},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":11661,\"start\":11657},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":11942,\"start\":11941},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":12332,\"start\":12328},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":12497,\"start\":12493},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":12500,\"start\":12497},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":12556,\"start\":12552},{\"attributes\":{\"ref_id\":\"b46\"},\"end\":12559,\"start\":12556},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":13257,\"start\":13253},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":13260,\"start\":13257},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":13597,\"start\":13593},{\"attributes\":{\"ref_id\":\"b32\"},\"end\":15328,\"start\":15324},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":15497,\"start\":15494},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":16804,\"start\":16800},{\"attributes\":{\"ref_id\":\"b27\"},\"end\":17163,\"start\":17159},{\"attributes\":{\"ref_id\":\"b6\"},\"end\":18833,\"start\":18830},{\"attributes\":{\"ref_id\":\"b11\"},\"end\":19694,\"start\":19690},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":19697,\"start\":19694},{\"attributes\":{\"ref_id\":\"b42\"},\"end\":19700,\"start\":19697},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":19852,\"start\":19849},{\"attributes\":{\"ref_id\":\"b37\"},\"end\":20138,\"start\":20134},{\"attributes\":{\"ref_id\":\"b4\"},\"end\":20197,\"start\":20194},{\"attributes\":{\"ref_id\":\"b19\"},\"end\":20215,\"start\":20211},{\"attributes\":{\"ref_id\":\"b34\"},\"end\":20942,\"start\":20938},{\"attributes\":{\"ref_id\":\"b33\"},\"end\":21086,\"start\":21082},{\"attributes\":{\"ref_id\":\"b17\"},\"end\":21133,\"start\":21129},{\"attributes\":{\"ref_id\":\"b22\"},\"end\":21136,\"start\":21133},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":21227,\"start\":21223},{\"attributes\":{\"ref_id\":\"b30\"},\"end\":22092,\"start\":22088},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":22304,\"start\":22300},{\"attributes\":{\"ref_id\":\"b47\"},\"end\":22483,\"start\":22479},{\"attributes\":{\"ref_id\":\"b14\"},\"end\":23025,\"start\":23021},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":25164,\"start\":25160},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":25744,\"start\":25741},{\"attributes\":{\"ref_id\":\"b45\"},\"end\":25855,\"start\":25851},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":26133,\"start\":26129},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":26492,\"start\":26488},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":26598,\"start\":26595},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":26876,\"start\":26872},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":26886,\"start\":26882},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":26895,\"start\":26892},{\"attributes\":{\"ref_id\":\"b0\"},\"end\":28209,\"start\":28206},{\"attributes\":{\"ref_id\":\"b28\"},\"end\":28783,\"start\":28779},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":28991,\"start\":28988},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":29095,\"start\":29091},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":29123,\"start\":29119},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":29423,\"start\":29420},{\"attributes\":{\"ref_id\":\"b20\"},\"end\":30472,\"start\":30468},{\"attributes\":{\"ref_id\":\"b7\"},\"end\":31346,\"start\":31343},{\"attributes\":{\"ref_id\":\"b25\"},\"end\":31356,\"start\":31352},{\"attributes\":{\"ref_id\":\"b26\"},\"end\":31366,\"start\":31362},{\"attributes\":{\"ref_id\":\"b1\"},\"end\":31375,\"start\":31372}]", "figure": "[{\"attributes\":{\"id\":\"fig_0\"},\"end\":31632,\"start\":31408},{\"attributes\":{\"id\":\"fig_1\"},\"end\":31696,\"start\":31633},{\"attributes\":{\"id\":\"fig_2\"},\"end\":31777,\"start\":31697},{\"attributes\":{\"id\":\"fig_3\"},\"end\":31895,\"start\":31778},{\"attributes\":{\"id\":\"fig_4\"},\"end\":32049,\"start\":31896},{\"attributes\":{\"id\":\"fig_5\"},\"end\":32107,\"start\":32050},{\"attributes\":{\"id\":\"tab_0\",\"type\":\"table\"},\"end\":33216,\"start\":32108},{\"attributes\":{\"id\":\"tab_1\",\"type\":\"table\"},\"end\":33818,\"start\":33217},{\"attributes\":{\"id\":\"tab_2\",\"type\":\"table\"},\"end\":34618,\"start\":33819}]", "paragraph": "[{\"end\":1717,\"start\":1167},{\"end\":3022,\"start\":1719},{\"end\":3427,\"start\":3024},{\"end\":3892,\"start\":3429},{\"end\":4892,\"start\":3909},{\"end\":5579,\"start\":4894},{\"end\":6013,\"start\":5581},{\"end\":6342,\"start\":6015},{\"end\":7966,\"start\":6344},{\"end\":9356,\"start\":7968},{\"end\":10767,\"start\":9358},{\"end\":11008,\"start\":10769},{\"end\":11362,\"start\":11019},{\"end\":12668,\"start\":11380},{\"end\":13598,\"start\":12670},{\"end\":14995,\"start\":13629},{\"end\":15799,\"start\":15020},{\"end\":16599,\"start\":15801},{\"end\":17164,\"start\":16777},{\"end\":18453,\"start\":17166},{\"end\":19580,\"start\":18455},{\"end\":19780,\"start\":19582},{\"end\":19928,\"start\":19782},{\"end\":20409,\"start\":20005},{\"end\":20752,\"start\":20411},{\"end\":22484,\"start\":20780},{\"end\":22930,\"start\":22486},{\"end\":24081,\"start\":22932},{\"end\":25010,\"start\":24083},{\"end\":25628,\"start\":25012},{\"end\":26377,\"start\":25630},{\"end\":27683,\"start\":26379},{\"end\":28427,\"start\":27685},{\"end\":28806,\"start\":28429},{\"end\":29831,\"start\":28808},{\"end\":30473,\"start\":29833},{\"end\":31334,\"start\":30488},{\"end\":31407,\"start\":31336}]", "formula": "[{\"attributes\":{\"id\":\"formula_0\"},\"end\":16776,\"start\":16600},{\"attributes\":{\"id\":\"formula_1\"},\"end\":20004,\"start\":19929}]", "table_ref": "[{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":22598,\"start\":22591},{\"attributes\":{\"ref_id\":\"tab_0\"},\"end\":24115,\"start\":24108},{\"attributes\":{\"ref_id\":\"tab_1\"},\"end\":26963,\"start\":26956},{\"attributes\":{\"ref_id\":\"tab_2\"},\"end\":28856,\"start\":28849}]", "section_header": "[{\"attributes\":{\"n\":\"1\"},\"end\":1165,\"start\":1153},{\"attributes\":{\"n\":\"2\"},\"end\":3907,\"start\":3895},{\"attributes\":{\"n\":\"3\"},\"end\":11017,\"start\":11011},{\"attributes\":{\"n\":\"3.1\"},\"end\":11378,\"start\":11365},{\"attributes\":{\"n\":\"3.2\"},\"end\":13627,\"start\":13601},{\"attributes\":{\"n\":\"3.3\"},\"end\":15018,\"start\":14998},{\"attributes\":{\"n\":\"4\"},\"end\":20778,\"start\":20755},{\"attributes\":{\"n\":\"5\"},\"end\":30486,\"start\":30476},{\"end\":31417,\"start\":31409},{\"end\":31642,\"start\":31634},{\"end\":31706,\"start\":31698},{\"end\":31905,\"start\":31897},{\"end\":32059,\"start\":32051},{\"end\":32118,\"start\":32109},{\"end\":33227,\"start\":33218},{\"end\":33829,\"start\":33820}]", "table": "[{\"end\":33216,\"start\":32350},{\"end\":33818,\"start\":33286},{\"end\":34618,\"start\":34296}]", "figure_caption": "[{\"end\":31632,\"start\":31419},{\"end\":31696,\"start\":31644},{\"end\":31777,\"start\":31708},{\"end\":31895,\"start\":31780},{\"end\":32049,\"start\":31907},{\"end\":32107,\"start\":32061},{\"end\":32350,\"start\":32120},{\"end\":33286,\"start\":33229},{\"end\":34296,\"start\":33831}]", "figure_ref": "[{\"end\":1953,\"start\":1945},{\"end\":2511,\"start\":2505},{\"attributes\":{\"ref_id\":\"fig_0\"},\"end\":13528,\"start\":13520},{\"end\":15731,\"start\":15723},{\"end\":16035,\"start\":16029},{\"end\":21841,\"start\":21833},{\"attributes\":{\"ref_id\":\"fig_1\"},\"end\":24589,\"start\":24581},{\"end\":25627,\"start\":25619},{\"attributes\":{\"ref_id\":\"fig_2\"},\"end\":27009,\"start\":27001},{\"end\":28013,\"start\":28005},{\"attributes\":{\"ref_id\":\"fig_4\"},\"end\":28405,\"start\":28397},{\"attributes\":{\"ref_id\":\"fig_5\"},\"end\":28899,\"start\":28891}]", "bib_author_first_name": "[{\"end\":34838,\"start\":34837},{\"end\":34848,\"start\":34847},{\"end\":34850,\"start\":34849},{\"end\":34860,\"start\":34859},{\"end\":34873,\"start\":34872},{\"end\":34881,\"start\":34880},{\"end\":34883,\"start\":34882},{\"end\":35146,\"start\":35145},{\"end\":35148,\"start\":35147},{\"end\":35157,\"start\":35156},{\"end\":35174,\"start\":35173},{\"end\":35183,\"start\":35182},{\"end\":35194,\"start\":35193},{\"end\":35445,\"start\":35444},{\"end\":35456,\"start\":35455},{\"end\":35465,\"start\":35464},{\"end\":35477,\"start\":35476},{\"end\":35488,\"start\":35487},{\"end\":35766,\"start\":35765},{\"end\":35779,\"start\":35778},{\"end\":35790,\"start\":35789},{\"end\":35809,\"start\":35808},{\"end\":36103,\"start\":36102},{\"end\":36111,\"start\":36110},{\"end\":36361,\"start\":36360},{\"end\":36363,\"start\":36362},{\"end\":36371,\"start\":36370},{\"end\":36632,\"start\":36631},{\"end\":36639,\"start\":36638},{\"end\":36658,\"start\":36657},{\"end\":36670,\"start\":36669},{\"end\":36682,\"start\":36681},{\"end\":36694,\"start\":36693},{\"end\":36705,\"start\":36704},{\"end\":37060,\"start\":37059},{\"end\":37068,\"start\":37067},{\"end\":37077,\"start\":37076},{\"end\":37089,\"start\":37088},{\"end\":37091,\"start\":37090},{\"end\":37098,\"start\":37097},{\"end\":37356,\"start\":37355},{\"end\":37358,\"start\":37357},{\"end\":37570,\"start\":37569},{\"end\":37579,\"start\":37578},{\"end\":37588,\"start\":37587},{\"end\":37819,\"start\":37818},{\"end\":37821,\"start\":37820},{\"end\":37832,\"start\":37831},{\"end\":37834,\"start\":37833},{\"end\":37844,\"start\":37843},{\"end\":38129,\"start\":38128},{\"end\":38138,\"start\":38137},{\"end\":38149,\"start\":38148},{\"end\":38160,\"start\":38159},{\"end\":38170,\"start\":38169},{\"end\":38179,\"start\":38178},{\"end\":38191,\"start\":38190},{\"end\":38202,\"start\":38201},{\"end\":38542,\"start\":38541},{\"end\":38551,\"start\":38550},{\"end\":38564,\"start\":38563},{\"end\":38575,\"start\":38574},{\"end\":38830,\"start\":38829},{\"end\":38832,\"start\":38831},{\"end\":38843,\"start\":38842},{\"end\":38857,\"start\":38856},{\"end\":38869,\"start\":38868},{\"end\":38871,\"start\":38870},{\"end\":39098,\"start\":39097},{\"end\":39108,\"start\":39107},{\"end\":39118,\"start\":39117},{\"end\":39127,\"start\":39126},{\"end\":39129,\"start\":39128},{\"end\":39138,\"start\":39137},{\"end\":39151,\"start\":39150},{\"end\":39439,\"start\":39438},{\"end\":39449,\"start\":39448},{\"end\":39461,\"start\":39460},{\"end\":39474,\"start\":39473},{\"end\":39774,\"start\":39773},{\"end\":39783,\"start\":39782},{\"end\":39791,\"start\":39790},{\"end\":39804,\"start\":39803},{\"end\":39815,\"start\":39814},{\"end\":40146,\"start\":40145},{\"end\":40158,\"start\":40157},{\"end\":40420,\"start\":40419},{\"end\":40422,\"start\":40421},{\"end\":40435,\"start\":40434},{\"end\":40437,\"start\":40436},{\"end\":40445,\"start\":40444},{\"end\":40703,\"start\":40702},{\"end\":40705,\"start\":40704},{\"end\":40715,\"start\":40714},{\"end\":40987,\"start\":40986},{\"end\":41000,\"start\":40999},{\"end\":41008,\"start\":41007},{\"end\":41010,\"start\":41009},{\"end\":41018,\"start\":41017},{\"end\":41279,\"start\":41278},{\"end\":41287,\"start\":41286},{\"end\":41289,\"start\":41288},{\"end\":41298,\"start\":41297},{\"end\":41600,\"start\":41599},{\"end\":41611,\"start\":41610},{\"end\":41613,\"start\":41612},{\"end\":41621,\"start\":41620},{\"end\":41929,\"start\":41928},{\"end\":41938,\"start\":41937},{\"end\":42145,\"start\":42144},{\"end\":42157,\"start\":42156},{\"end\":42166,\"start\":42165},{\"end\":42177,\"start\":42176},{\"end\":42189,\"start\":42188},{\"end\":42201,\"start\":42200},{\"end\":42456,\"start\":42455},{\"end\":42470,\"start\":42469},{\"end\":42472,\"start\":42471},{\"end\":42486,\"start\":42485},{\"end\":42501,\"start\":42500},{\"end\":42503,\"start\":42502},{\"end\":42516,\"start\":42515},{\"end\":42531,\"start\":42530},{\"end\":42537,\"start\":42536},{\"end\":42948,\"start\":42947},{\"end\":42962,\"start\":42961},{\"end\":42964,\"start\":42963},{\"end\":42978,\"start\":42977},{\"end\":42988,\"start\":42987},{\"end\":42990,\"start\":42989},{\"end\":43000,\"start\":42999},{\"end\":43015,\"start\":43014},{\"end\":43345,\"start\":43344},{\"end\":43353,\"start\":43352},{\"end\":43355,\"start\":43354},{\"end\":43668,\"start\":43667},{\"end\":43680,\"start\":43679},{\"end\":43693,\"start\":43692},{\"end\":43704,\"start\":43703},{\"end\":44016,\"start\":44015},{\"end\":44027,\"start\":44026},{\"end\":44034,\"start\":44033},{\"end\":44042,\"start\":44041},{\"end\":44239,\"start\":44238},{\"end\":44249,\"start\":44248},{\"end\":44258,\"start\":44257},{\"end\":44267,\"start\":44266},{\"end\":44276,\"start\":44275},{\"end\":44288,\"start\":44287},{\"end\":44298,\"start\":44297},{\"end\":44309,\"start\":44308},{\"end\":44316,\"start\":44315},{\"end\":44330,\"start\":44329},{\"end\":44740,\"start\":44739},{\"end\":44750,\"start\":44749},{\"end\":44990,\"start\":44989},{\"end\":45005,\"start\":45004},{\"end\":45016,\"start\":45015},{\"end\":45338,\"start\":45337},{\"end\":45340,\"start\":45339},{\"end\":45355,\"start\":45354},{\"end\":45364,\"start\":45363},{\"end\":45366,\"start\":45365},{\"end\":45375,\"start\":45374},{\"end\":45645,\"start\":45644},{\"end\":45647,\"start\":45646},{\"end\":45662,\"start\":45661},{\"end\":45664,\"start\":45663},{\"end\":45859,\"start\":45858},{\"end\":45861,\"start\":45860},{\"end\":45870,\"start\":45869},{\"end\":45872,\"start\":45871},{\"end\":46055,\"start\":46054},{\"end\":46063,\"start\":46062},{\"end\":46065,\"start\":46064},{\"end\":46306,\"start\":46305},{\"end\":46318,\"start\":46317},{\"end\":46615,\"start\":46614},{\"end\":46627,\"start\":46626},{\"end\":46636,\"start\":46635},{\"end\":46645,\"start\":46644},{\"end\":46656,\"start\":46655},{\"end\":46669,\"start\":46668},{\"end\":46927,\"start\":46926},{\"end\":46939,\"start\":46938},{\"end\":46952,\"start\":46951},{\"end\":47349,\"start\":47348},{\"end\":47351,\"start\":47350},{\"end\":47365,\"start\":47364},{\"end\":47375,\"start\":47374},{\"end\":47377,\"start\":47376},{\"end\":47387,\"start\":47386},{\"end\":47402,\"start\":47401},{\"end\":47408,\"start\":47407},{\"end\":47745,\"start\":47744},{\"end\":47754,\"start\":47753},{\"end\":47767,\"start\":47766},{\"end\":47999,\"start\":47998},{\"end\":48008,\"start\":48007},{\"end\":48021,\"start\":48020},{\"end\":48033,\"start\":48032},{\"end\":48047,\"start\":48046},{\"end\":48355,\"start\":48354},{\"end\":48364,\"start\":48363},{\"end\":48376,\"start\":48375},{\"end\":48388,\"start\":48387},{\"end\":48667,\"start\":48666},{\"end\":48673,\"start\":48672},{\"end\":48679,\"start\":48678},{\"end\":48693,\"start\":48692},{\"end\":48702,\"start\":48701},{\"end\":48708,\"start\":48707},{\"end\":49004,\"start\":49003},{\"end\":49011,\"start\":49010},{\"end\":49018,\"start\":49017},{\"end\":49024,\"start\":49023},{\"end\":49032,\"start\":49031},{\"end\":49324,\"start\":49323},{\"end\":49331,\"start\":49330},{\"end\":49338,\"start\":49337},{\"end\":49344,\"start\":49343},{\"end\":49352,\"start\":49351},{\"end\":49360,\"start\":49359},{\"end\":49676,\"start\":49675},{\"end\":49685,\"start\":49684},{\"end\":49694,\"start\":49693},{\"end\":49696,\"start\":49695},{\"end\":49705,\"start\":49704},{\"end\":49718,\"start\":49717},{\"end\":50036,\"start\":50035},{\"end\":50044,\"start\":50043},{\"end\":50054,\"start\":50053},{\"end\":50063,\"start\":50062},{\"end\":50072,\"start\":50071},{\"end\":50384,\"start\":50383},{\"end\":50386,\"start\":50385},{\"end\":50397,\"start\":50396},{\"end\":50399,\"start\":50398},{\"end\":50407,\"start\":50406},{\"end\":50422,\"start\":50421},{\"end\":50432,\"start\":50431}]", "bib_author_last_name": "[{\"end\":34845,\"start\":34839},{\"end\":34857,\"start\":34851},{\"end\":34870,\"start\":34861},{\"end\":34878,\"start\":34874},{\"end\":34888,\"start\":34884},{\"end\":35154,\"start\":35149},{\"end\":35171,\"start\":35158},{\"end\":35180,\"start\":35175},{\"end\":35191,\"start\":35184},{\"end\":35204,\"start\":35195},{\"end\":35453,\"start\":35446},{\"end\":35462,\"start\":35457},{\"end\":35474,\"start\":35466},{\"end\":35485,\"start\":35478},{\"end\":35494,\"start\":35489},{\"end\":35776,\"start\":35767},{\"end\":35787,\"start\":35780},{\"end\":35806,\"start\":35791},{\"end\":35819,\"start\":35810},{\"end\":36108,\"start\":36104},{\"end\":36118,\"start\":36112},{\"end\":36368,\"start\":36364},{\"end\":36380,\"start\":36372},{\"end\":36636,\"start\":36633},{\"end\":36655,\"start\":36640},{\"end\":36667,\"start\":36659},{\"end\":36679,\"start\":36671},{\"end\":36691,\"start\":36683},{\"end\":36702,\"start\":36695},{\"end\":36712,\"start\":36706},{\"end\":37065,\"start\":37061},{\"end\":37074,\"start\":37069},{\"end\":37086,\"start\":37078},{\"end\":37095,\"start\":37092},{\"end\":37104,\"start\":37099},{\"end\":37366,\"start\":37359},{\"end\":37576,\"start\":37571},{\"end\":37585,\"start\":37580},{\"end\":37595,\"start\":37589},{\"end\":37829,\"start\":37822},{\"end\":37841,\"start\":37835},{\"end\":37850,\"start\":37845},{\"end\":38135,\"start\":38130},{\"end\":38146,\"start\":38139},{\"end\":38157,\"start\":38150},{\"end\":38167,\"start\":38161},{\"end\":38176,\"start\":38171},{\"end\":38188,\"start\":38180},{\"end\":38199,\"start\":38192},{\"end\":38209,\"start\":38203},{\"end\":38548,\"start\":38543},{\"end\":38561,\"start\":38552},{\"end\":38572,\"start\":38565},{\"end\":38583,\"start\":38576},{\"end\":38840,\"start\":38833},{\"end\":38854,\"start\":38844},{\"end\":38866,\"start\":38858},{\"end\":38877,\"start\":38872},{\"end\":39105,\"start\":39099},{\"end\":39115,\"start\":39109},{\"end\":39124,\"start\":39119},{\"end\":39135,\"start\":39130},{\"end\":39148,\"start\":39139},{\"end\":39159,\"start\":39152},{\"end\":39446,\"start\":39440},{\"end\":39458,\"start\":39450},{\"end\":39471,\"start\":39462},{\"end\":39482,\"start\":39475},{\"end\":39780,\"start\":39775},{\"end\":39788,\"start\":39784},{\"end\":39801,\"start\":39792},{\"end\":39812,\"start\":39805},{\"end\":39824,\"start\":39816},{\"end\":40155,\"start\":40147},{\"end\":40165,\"start\":40159},{\"end\":40432,\"start\":40423},{\"end\":40442,\"start\":40438},{\"end\":40457,\"start\":40446},{\"end\":40712,\"start\":40706},{\"end\":40718,\"start\":40716},{\"end\":40997,\"start\":40988},{\"end\":41005,\"start\":41001},{\"end\":41015,\"start\":41011},{\"end\":41025,\"start\":41019},{\"end\":41284,\"start\":41280},{\"end\":41295,\"start\":41290},{\"end\":41307,\"start\":41299},{\"end\":41608,\"start\":41601},{\"end\":41618,\"start\":41614},{\"end\":41629,\"start\":41622},{\"end\":41935,\"start\":41930},{\"end\":41947,\"start\":41939},{\"end\":42154,\"start\":42146},{\"end\":42163,\"start\":42158},{\"end\":42174,\"start\":42167},{\"end\":42186,\"start\":42178},{\"end\":42198,\"start\":42190},{\"end\":42208,\"start\":42202},{\"end\":42467,\"start\":42457},{\"end\":42483,\"start\":42473},{\"end\":42498,\"start\":42487},{\"end\":42513,\"start\":42504},{\"end\":42528,\"start\":42517},{\"end\":42534,\"start\":42532},{\"end\":42541,\"start\":42538},{\"end\":42959,\"start\":42949},{\"end\":42975,\"start\":42965},{\"end\":42985,\"start\":42979},{\"end\":42997,\"start\":42991},{\"end\":43012,\"start\":43001},{\"end\":43018,\"start\":43016},{\"end\":43350,\"start\":43346},{\"end\":43362,\"start\":43356},{\"end\":43677,\"start\":43669},{\"end\":43690,\"start\":43681},{\"end\":43701,\"start\":43694},{\"end\":43711,\"start\":43705},{\"end\":44024,\"start\":44017},{\"end\":44031,\"start\":44028},{\"end\":44039,\"start\":44035},{\"end\":44046,\"start\":44043},{\"end\":44246,\"start\":44240},{\"end\":44255,\"start\":44250},{\"end\":44264,\"start\":44259},{\"end\":44273,\"start\":44268},{\"end\":44285,\"start\":44277},{\"end\":44295,\"start\":44289},{\"end\":44306,\"start\":44299},{\"end\":44313,\"start\":44310},{\"end\":44327,\"start\":44317},{\"end\":44337,\"start\":44331},{\"end\":44747,\"start\":44741},{\"end\":44756,\"start\":44751},{\"end\":45002,\"start\":44991},{\"end\":45013,\"start\":45006},{\"end\":45021,\"start\":45017},{\"end\":45352,\"start\":45341},{\"end\":45361,\"start\":45356},{\"end\":45372,\"start\":45367},{\"end\":45385,\"start\":45376},{\"end\":45659,\"start\":45648},{\"end\":45670,\"start\":45665},{\"end\":45867,\"start\":45862},{\"end\":45877,\"start\":45873},{\"end\":46060,\"start\":46056},{\"end\":46070,\"start\":46066},{\"end\":46315,\"start\":46307},{\"end\":46328,\"start\":46319},{\"end\":46624,\"start\":46616},{\"end\":46633,\"start\":46628},{\"end\":46642,\"start\":46637},{\"end\":46653,\"start\":46646},{\"end\":46666,\"start\":46657},{\"end\":46679,\"start\":46670},{\"end\":46936,\"start\":46928},{\"end\":46949,\"start\":46940},{\"end\":46962,\"start\":46953},{\"end\":47362,\"start\":47352},{\"end\":47372,\"start\":47366},{\"end\":47384,\"start\":47378},{\"end\":47399,\"start\":47388},{\"end\":47405,\"start\":47403},{\"end\":47416,\"start\":47409},{\"end\":47751,\"start\":47746},{\"end\":47764,\"start\":47755},{\"end\":47775,\"start\":47768},{\"end\":48005,\"start\":48000},{\"end\":48018,\"start\":48009},{\"end\":48030,\"start\":48022},{\"end\":48044,\"start\":48034},{\"end\":48055,\"start\":48048},{\"end\":48361,\"start\":48356},{\"end\":48373,\"start\":48365},{\"end\":48385,\"start\":48377},{\"end\":48396,\"start\":48389},{\"end\":48670,\"start\":48668},{\"end\":48676,\"start\":48674},{\"end\":48690,\"start\":48680},{\"end\":48699,\"start\":48694},{\"end\":48705,\"start\":48703},{\"end\":48720,\"start\":48709},{\"end\":49008,\"start\":49005},{\"end\":49015,\"start\":49012},{\"end\":49021,\"start\":49019},{\"end\":49029,\"start\":49025},{\"end\":49037,\"start\":49033},{\"end\":49328,\"start\":49325},{\"end\":49335,\"start\":49332},{\"end\":49341,\"start\":49339},{\"end\":49349,\"start\":49345},{\"end\":49357,\"start\":49353},{\"end\":49365,\"start\":49361},{\"end\":49682,\"start\":49677},{\"end\":49691,\"start\":49686},{\"end\":49702,\"start\":49697},{\"end\":49715,\"start\":49706},{\"end\":49723,\"start\":49719},{\"end\":50041,\"start\":50037},{\"end\":50051,\"start\":50045},{\"end\":50060,\"start\":50055},{\"end\":50069,\"start\":50064},{\"end\":50080,\"start\":50073},{\"end\":50394,\"start\":50387},{\"end\":50404,\"start\":50400},{\"end\":50419,\"start\":50408},{\"end\":50429,\"start\":50423},{\"end\":50441,\"start\":50433}]", "bib_entry": "[{\"attributes\":{\"id\":\"b0\",\"matched_paper_id\":14450404},\"end\":35114,\"start\":34790},{\"attributes\":{\"id\":\"b1\",\"matched_paper_id\":195069368},\"end\":35408,\"start\":35116},{\"attributes\":{\"id\":\"b2\",\"matched_paper_id\":215780580},\"end\":35693,\"start\":35410},{\"attributes\":{\"id\":\"b3\",\"matched_paper_id\":960858},\"end\":36036,\"start\":35695},{\"attributes\":{\"id\":\"b4\",\"matched_paper_id\":8191987},\"end\":36318,\"start\":36038},{\"attributes\":{\"id\":\"b5\",\"matched_paper_id\":7680709},\"end\":36534,\"start\":36320},{\"attributes\":{\"id\":\"b6\",\"matched_paper_id\":5590763},\"end\":37033,\"start\":36536},{\"attributes\":{\"id\":\"b7\",\"matched_paper_id\":54474649},\"end\":37300,\"start\":37035},{\"attributes\":{\"id\":\"b8\",\"matched_paper_id\":11008141},\"end\":37540,\"start\":37302},{\"attributes\":{\"id\":\"b9\",\"matched_paper_id\":10333476},\"end\":37718,\"start\":37542},{\"attributes\":{\"id\":\"b10\",\"matched_paper_id\":2609415},\"end\":38070,\"start\":37720},{\"attributes\":{\"id\":\"b11\",\"matched_paper_id\":190000375},\"end\":38471,\"start\":38072},{\"attributes\":{\"id\":\"b12\",\"matched_paper_id\":14517241},\"end\":38812,\"start\":38473},{\"attributes\":{\"id\":\"b13\",\"matched_paper_id\":2036193},\"end\":39039,\"start\":38814},{\"attributes\":{\"id\":\"b14\",\"matched_paper_id\":54151018},\"end\":39394,\"start\":39041},{\"attributes\":{\"id\":\"b15\",\"matched_paper_id\":10721736},\"end\":39688,\"start\":39396},{\"attributes\":{\"id\":\"b16\",\"matched_paper_id\":17061632},\"end\":40079,\"start\":39690},{\"attributes\":{\"id\":\"b17\",\"matched_paper_id\":2142078},\"end\":40362,\"start\":40081},{\"attributes\":{\"id\":\"b18\",\"matched_paper_id\":2923181},\"end\":40656,\"start\":40364},{\"attributes\":{\"id\":\"b19\",\"matched_paper_id\":6628106},\"end\":40918,\"start\":40658},{\"attributes\":{\"id\":\"b20\"},\"end\":41243,\"start\":40920},{\"attributes\":{\"id\":\"b21\",\"matched_paper_id\":15218002},\"end\":41477,\"start\":41245},{\"attributes\":{\"id\":\"b22\",\"matched_paper_id\":940870},\"end\":41903,\"start\":41479},{\"attributes\":{\"id\":\"b23\",\"matched_paper_id\":1363510},\"end\":42077,\"start\":41905},{\"attributes\":{\"id\":\"b24\"},\"end\":42453,\"start\":42079},{\"attributes\":{\"id\":\"b25\"},\"end\":42873,\"start\":42455},{\"attributes\":{\"id\":\"b26\",\"matched_paper_id\":213175590},\"end\":43280,\"start\":42875},{\"attributes\":{\"id\":\"b27\",\"matched_paper_id\":15539264},\"end\":43567,\"start\":43282},{\"attributes\":{\"id\":\"b28\",\"matched_paper_id\":209376368},\"end\":43972,\"start\":43569},{\"attributes\":{\"id\":\"b29\",\"matched_paper_id\":202565675},\"end\":44236,\"start\":43974},{\"attributes\":{\"id\":\"b30\"},\"end\":44694,\"start\":44238},{\"attributes\":{\"id\":\"b31\",\"matched_paper_id\":22232987},\"end\":44922,\"start\":44696},{\"attributes\":{\"id\":\"b32\",\"matched_paper_id\":3719281},\"end\":45274,\"start\":44924},{\"attributes\":{\"id\":\"b33\",\"matched_paper_id\":977535},\"end\":45609,\"start\":45276},{\"attributes\":{\"id\":\"b34\",\"matched_paper_id\":1728538},\"end\":45841,\"start\":45611},{\"attributes\":{\"id\":\"b35\",\"matched_paper_id\":6405929},\"end\":46008,\"start\":45843},{\"attributes\":{\"id\":\"b36\",\"matched_paper_id\":11700286},\"end\":46235,\"start\":46010},{\"attributes\":{\"id\":\"b37\",\"matched_paper_id\":14124313},\"end\":46557,\"start\":46237},{\"attributes\":{\"id\":\"b38\",\"matched_paper_id\":54444417},\"end\":46924,\"start\":46559},{\"attributes\":{\"id\":\"b39\"},\"end\":47277,\"start\":46926},{\"attributes\":{\"id\":\"b40\",\"matched_paper_id\":109926755},\"end\":47676,\"start\":47279},{\"attributes\":{\"id\":\"b41\",\"matched_paper_id\":219950625},\"end\":47958,\"start\":47678},{\"attributes\":{\"id\":\"b42\",\"matched_paper_id\":210845806},\"end\":48297,\"start\":47960},{\"attributes\":{\"id\":\"b43\",\"matched_paper_id\":209405397},\"end\":48612,\"start\":48299},{\"attributes\":{\"id\":\"b44\",\"matched_paper_id\":147699632},\"end\":48941,\"start\":48614},{\"attributes\":{\"id\":\"b45\",\"matched_paper_id\":4712004},\"end\":49250,\"start\":48943},{\"attributes\":{\"id\":\"b46\",\"matched_paper_id\":67855970},\"end\":49601,\"start\":49252},{\"attributes\":{\"id\":\"b47\",\"matched_paper_id\":4766599},\"end\":49962,\"start\":49603},{\"attributes\":{\"id\":\"b48\",\"matched_paper_id\":219893035},\"end\":50311,\"start\":49964},{\"attributes\":{\"id\":\"b49\",\"matched_paper_id\":261631},\"end\":50679,\"start\":50313}]", "bib_title": "[{\"end\":34835,\"start\":34790},{\"end\":35143,\"start\":35116},{\"end\":35442,\"start\":35410},{\"end\":35763,\"start\":35695},{\"end\":36100,\"start\":36038},{\"end\":36358,\"start\":36320},{\"end\":36629,\"start\":36536},{\"end\":37057,\"start\":37035},{\"end\":37353,\"start\":37302},{\"end\":37567,\"start\":37542},{\"end\":37816,\"start\":37720},{\"end\":38126,\"start\":38072},{\"end\":38539,\"start\":38473},{\"end\":38827,\"start\":38814},{\"end\":39095,\"start\":39041},{\"end\":39436,\"start\":39396},{\"end\":39771,\"start\":39690},{\"end\":40143,\"start\":40081},{\"end\":40417,\"start\":40364},{\"end\":40700,\"start\":40658},{\"end\":40984,\"start\":40920},{\"end\":41276,\"start\":41245},{\"end\":41597,\"start\":41479},{\"end\":41926,\"start\":41905},{\"end\":42142,\"start\":42079},{\"end\":42945,\"start\":42875},{\"end\":43342,\"start\":43282},{\"end\":43665,\"start\":43569},{\"end\":44013,\"start\":43974},{\"end\":44737,\"start\":44696},{\"end\":44987,\"start\":44924},{\"end\":45335,\"start\":45276},{\"end\":45642,\"start\":45611},{\"end\":45856,\"start\":45843},{\"end\":46052,\"start\":46010},{\"end\":46303,\"start\":46237},{\"end\":46612,\"start\":46559},{\"end\":47346,\"start\":47279},{\"end\":47742,\"start\":47678},{\"end\":47996,\"start\":47960},{\"end\":48352,\"start\":48299},{\"end\":48664,\"start\":48614},{\"end\":49001,\"start\":48943},{\"end\":49321,\"start\":49252},{\"end\":49673,\"start\":49603},{\"end\":50033,\"start\":49964},{\"end\":50381,\"start\":50313}]", "bib_author": "[{\"end\":34847,\"start\":34837},{\"end\":34859,\"start\":34847},{\"end\":34872,\"start\":34859},{\"end\":34880,\"start\":34872},{\"end\":34890,\"start\":34880},{\"end\":35156,\"start\":35145},{\"end\":35173,\"start\":35156},{\"end\":35182,\"start\":35173},{\"end\":35193,\"start\":35182},{\"end\":35206,\"start\":35193},{\"end\":35455,\"start\":35444},{\"end\":35464,\"start\":35455},{\"end\":35476,\"start\":35464},{\"end\":35487,\"start\":35476},{\"end\":35496,\"start\":35487},{\"end\":35778,\"start\":35765},{\"end\":35789,\"start\":35778},{\"end\":35808,\"start\":35789},{\"end\":35821,\"start\":35808},{\"end\":36110,\"start\":36102},{\"end\":36120,\"start\":36110},{\"end\":36370,\"start\":36360},{\"end\":36382,\"start\":36370},{\"end\":36638,\"start\":36631},{\"end\":36657,\"start\":36638},{\"end\":36669,\"start\":36657},{\"end\":36681,\"start\":36669},{\"end\":36693,\"start\":36681},{\"end\":36704,\"start\":36693},{\"end\":36714,\"start\":36704},{\"end\":37067,\"start\":37059},{\"end\":37076,\"start\":37067},{\"end\":37088,\"start\":37076},{\"end\":37097,\"start\":37088},{\"end\":37106,\"start\":37097},{\"end\":37368,\"start\":37355},{\"end\":37578,\"start\":37569},{\"end\":37587,\"start\":37578},{\"end\":37597,\"start\":37587},{\"end\":37831,\"start\":37818},{\"end\":37843,\"start\":37831},{\"end\":37852,\"start\":37843},{\"end\":38137,\"start\":38128},{\"end\":38148,\"start\":38137},{\"end\":38159,\"start\":38148},{\"end\":38169,\"start\":38159},{\"end\":38178,\"start\":38169},{\"end\":38190,\"start\":38178},{\"end\":38201,\"start\":38190},{\"end\":38211,\"start\":38201},{\"end\":38550,\"start\":38541},{\"end\":38563,\"start\":38550},{\"end\":38574,\"start\":38563},{\"end\":38585,\"start\":38574},{\"end\":38842,\"start\":38829},{\"end\":38856,\"start\":38842},{\"end\":38868,\"start\":38856},{\"end\":38879,\"start\":38868},{\"end\":39107,\"start\":39097},{\"end\":39117,\"start\":39107},{\"end\":39126,\"start\":39117},{\"end\":39137,\"start\":39126},{\"end\":39150,\"start\":39137},{\"end\":39161,\"start\":39150},{\"end\":39448,\"start\":39438},{\"end\":39460,\"start\":39448},{\"end\":39473,\"start\":39460},{\"end\":39484,\"start\":39473},{\"end\":39782,\"start\":39773},{\"end\":39790,\"start\":39782},{\"end\":39803,\"start\":39790},{\"end\":39814,\"start\":39803},{\"end\":39826,\"start\":39814},{\"end\":40157,\"start\":40145},{\"end\":40167,\"start\":40157},{\"end\":40434,\"start\":40419},{\"end\":40444,\"start\":40434},{\"end\":40459,\"start\":40444},{\"end\":40714,\"start\":40702},{\"end\":40720,\"start\":40714},{\"end\":40999,\"start\":40986},{\"end\":41007,\"start\":40999},{\"end\":41017,\"start\":41007},{\"end\":41027,\"start\":41017},{\"end\":41286,\"start\":41278},{\"end\":41297,\"start\":41286},{\"end\":41309,\"start\":41297},{\"end\":41610,\"start\":41599},{\"end\":41620,\"start\":41610},{\"end\":41631,\"start\":41620},{\"end\":41937,\"start\":41928},{\"end\":41949,\"start\":41937},{\"end\":42156,\"start\":42144},{\"end\":42165,\"start\":42156},{\"end\":42176,\"start\":42165},{\"end\":42188,\"start\":42176},{\"end\":42200,\"start\":42188},{\"end\":42210,\"start\":42200},{\"end\":42469,\"start\":42455},{\"end\":42485,\"start\":42469},{\"end\":42500,\"start\":42485},{\"end\":42515,\"start\":42500},{\"end\":42530,\"start\":42515},{\"end\":42536,\"start\":42530},{\"end\":42543,\"start\":42536},{\"end\":42961,\"start\":42947},{\"end\":42977,\"start\":42961},{\"end\":42987,\"start\":42977},{\"end\":42999,\"start\":42987},{\"end\":43014,\"start\":42999},{\"end\":43020,\"start\":43014},{\"end\":43352,\"start\":43344},{\"end\":43364,\"start\":43352},{\"end\":43679,\"start\":43667},{\"end\":43692,\"start\":43679},{\"end\":43703,\"start\":43692},{\"end\":43713,\"start\":43703},{\"end\":44026,\"start\":44015},{\"end\":44033,\"start\":44026},{\"end\":44041,\"start\":44033},{\"end\":44048,\"start\":44041},{\"end\":44248,\"start\":44238},{\"end\":44257,\"start\":44248},{\"end\":44266,\"start\":44257},{\"end\":44275,\"start\":44266},{\"end\":44287,\"start\":44275},{\"end\":44297,\"start\":44287},{\"end\":44308,\"start\":44297},{\"end\":44315,\"start\":44308},{\"end\":44329,\"start\":44315},{\"end\":44339,\"start\":44329},{\"end\":44749,\"start\":44739},{\"end\":44758,\"start\":44749},{\"end\":45004,\"start\":44989},{\"end\":45015,\"start\":45004},{\"end\":45023,\"start\":45015},{\"end\":45354,\"start\":45337},{\"end\":45363,\"start\":45354},{\"end\":45374,\"start\":45363},{\"end\":45387,\"start\":45374},{\"end\":45661,\"start\":45644},{\"end\":45672,\"start\":45661},{\"end\":45869,\"start\":45858},{\"end\":45879,\"start\":45869},{\"end\":46062,\"start\":46054},{\"end\":46072,\"start\":46062},{\"end\":46317,\"start\":46305},{\"end\":46330,\"start\":46317},{\"end\":46626,\"start\":46614},{\"end\":46635,\"start\":46626},{\"end\":46644,\"start\":46635},{\"end\":46655,\"start\":46644},{\"end\":46668,\"start\":46655},{\"end\":46681,\"start\":46668},{\"end\":46938,\"start\":46926},{\"end\":46951,\"start\":46938},{\"end\":46964,\"start\":46951},{\"end\":47364,\"start\":47348},{\"end\":47374,\"start\":47364},{\"end\":47386,\"start\":47374},{\"end\":47401,\"start\":47386},{\"end\":47407,\"start\":47401},{\"end\":47418,\"start\":47407},{\"end\":47753,\"start\":47744},{\"end\":47766,\"start\":47753},{\"end\":47777,\"start\":47766},{\"end\":48007,\"start\":47998},{\"end\":48020,\"start\":48007},{\"end\":48032,\"start\":48020},{\"end\":48046,\"start\":48032},{\"end\":48057,\"start\":48046},{\"end\":48363,\"start\":48354},{\"end\":48375,\"start\":48363},{\"end\":48387,\"start\":48375},{\"end\":48398,\"start\":48387},{\"end\":48672,\"start\":48666},{\"end\":48678,\"start\":48672},{\"end\":48692,\"start\":48678},{\"end\":48701,\"start\":48692},{\"end\":48707,\"start\":48701},{\"end\":48722,\"start\":48707},{\"end\":49010,\"start\":49003},{\"end\":49017,\"start\":49010},{\"end\":49023,\"start\":49017},{\"end\":49031,\"start\":49023},{\"end\":49039,\"start\":49031},{\"end\":49330,\"start\":49323},{\"end\":49337,\"start\":49330},{\"end\":49343,\"start\":49337},{\"end\":49351,\"start\":49343},{\"end\":49359,\"start\":49351},{\"end\":49367,\"start\":49359},{\"end\":49684,\"start\":49675},{\"end\":49693,\"start\":49684},{\"end\":49704,\"start\":49693},{\"end\":49717,\"start\":49704},{\"end\":49725,\"start\":49717},{\"end\":50043,\"start\":50035},{\"end\":50053,\"start\":50043},{\"end\":50062,\"start\":50053},{\"end\":50071,\"start\":50062},{\"end\":50082,\"start\":50071},{\"end\":50396,\"start\":50383},{\"end\":50406,\"start\":50396},{\"end\":50421,\"start\":50406},{\"end\":50431,\"start\":50421},{\"end\":50443,\"start\":50431}]", "bib_venue": "[{\"end\":34937,\"start\":34890},{\"end\":35250,\"start\":35206},{\"end\":35535,\"start\":35496},{\"end\":35849,\"start\":35821},{\"end\":36169,\"start\":36120},{\"end\":36414,\"start\":36382},{\"end\":36770,\"start\":36714},{\"end\":37156,\"start\":37106},{\"end\":37413,\"start\":37368},{\"end\":37620,\"start\":37597},{\"end\":37880,\"start\":37852},{\"end\":38257,\"start\":38211},{\"end\":38631,\"start\":38585},{\"end\":38907,\"start\":38879},{\"end\":39205,\"start\":39161},{\"end\":39528,\"start\":39484},{\"end\":39873,\"start\":39826},{\"end\":40212,\"start\":40167},{\"end\":40498,\"start\":40459},{\"end\":40778,\"start\":40720},{\"end\":41067,\"start\":41027},{\"end\":41348,\"start\":41309},{\"end\":41681,\"start\":41631},{\"end\":41977,\"start\":41949},{\"end\":42249,\"start\":42210},{\"end\":42631,\"start\":42543},{\"end\":43065,\"start\":43020},{\"end\":43415,\"start\":43364},{\"end\":43759,\"start\":43713},{\"end\":44092,\"start\":44048},{\"end\":44407,\"start\":44339},{\"end\":44797,\"start\":44758},{\"end\":45081,\"start\":45023},{\"end\":45432,\"start\":45387},{\"end\":45717,\"start\":45672},{\"end\":45918,\"start\":45879},{\"end\":46114,\"start\":46072},{\"end\":46388,\"start\":46330},{\"end\":46727,\"start\":46681},{\"end\":47053,\"start\":46964},{\"end\":47464,\"start\":47418},{\"end\":47805,\"start\":47777},{\"end\":48116,\"start\":48057},{\"end\":48444,\"start\":48398},{\"end\":48762,\"start\":48722},{\"end\":49084,\"start\":49039},{\"end\":49413,\"start\":49367},{\"end\":49771,\"start\":49725},{\"end\":50122,\"start\":50082},{\"end\":50482,\"start\":50443}]"}}}, "year": 2023, "month": 12, "day": 17}